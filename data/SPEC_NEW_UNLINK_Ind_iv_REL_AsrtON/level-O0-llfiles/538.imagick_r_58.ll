; ModuleID = 'magick/quantize.c'
source_filename = "magick/quantize.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._QuantizeInfo = type { i64, i64, i32, i32, i32, i64, i32 }
%struct._ImageInfo = type { i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i64, i64, i64, i32, i32, i32, i64, i8*, i8*, i8*, i8*, i8*, double, double, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, i32, i32, i64, i32, i32, i32, i64, i32, i32, i8*, i8*, i32, %struct._Image*, i8*, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i64 (%struct._Image*, i8*, i64)*, %struct._IO_FILE*, i8*, i64, [4096 x i8], [4096 x i8], [4096 x i8], [4096 x i8], i32, i8*, i64, i64, %struct._PixelPacket, i64, i32, %struct._PixelPacket, i8*, i32 }
%struct._Image = type { i32, i32, i32, i64, i32, i32, i32, i64, i64, i64, i64, %struct._PixelPacket*, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, double, %struct._ChromaticityInfo, i32, i8*, i32, i8*, i8*, i8*, i64, double, double, %struct._RectangleInfo, %struct._RectangleInfo, %struct._RectangleInfo, double, double, double, i32, i32, i32, i32, i32, i32, %struct._Image*, i64, i64, i64, i64, i64, i64, %struct._ErrorInfo, %struct._TimerInfo, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i8*, %struct._Ascii85Info*, %struct._BlobInfo*, [4096 x i8], [4096 x i8], [4096 x i8], i64, i64, %struct._ExceptionInfo, i32, i64, %struct.SemaphoreInfo*, %struct._ProfileInfo, %struct._ProfileInfo, %struct._ProfileInfo*, i64, i64, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, %struct._PixelPacket, %struct._Image*, %struct._RectangleInfo, i8*, i8*, i32, i32, i64, i32, i64, i64, i32, i64 }
%struct._ChromaticityInfo = type { %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo }
%struct._PrimaryInfo = type { double, double, double }
%struct._ErrorInfo = type { double, double, double }
%struct._TimerInfo = type { %struct._Timer, %struct._Timer, i32, i64 }
%struct._Timer = type { double, double, double }
%struct._Ascii85Info = type opaque
%struct._BlobInfo = type opaque
%struct._ExceptionInfo = type { i32, i32, i8*, i8*, i8*, i32, %struct.SemaphoreInfo*, i64 }
%struct.SemaphoreInfo = type opaque
%struct._ProfileInfo = type { i8*, i64, i8*, i64 }
%struct._RectangleInfo = type { i64, i64, i64, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct._PixelPacket = type { i16, i16, i16, i16 }
%struct._CubeInfo = type { %struct._NodeInfo*, i64, i64, i64, i64, %struct._RealPixelPacket, float, float, float, i64, i64, i64, %struct._NodeInfo*, %struct._Nodes*, %struct._MemoryInfo*, i64*, [16 x %struct._RealPixelPacket], [16 x float], %struct._QuantizeInfo*, i32, i64, i64, i64, i64, i64 }
%struct._RealPixelPacket = type { float, float, float, float }
%struct._NodeInfo = type { %struct._NodeInfo*, [16 x %struct._NodeInfo*], i64, %struct._RealPixelPacket, float, i64, i64, i64 }
%struct._Nodes = type { %struct._NodeInfo*, %struct._Nodes* }
%struct._MemoryInfo = type opaque
%struct._CacheView = type opaque

@.str = private unnamed_addr constant [18 x i8] c"magick/quantize.c\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"MemoryAllocationFailed\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"`%s'\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"dither\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"Posterize/Image\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"Assign/Image\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"Classify/Image\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"Dither/Image\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"Reduce/Image\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._QuantizeInfo* @AcquireQuantizeInfo(%struct._ImageInfo* %image_info) #0 !dbg !1011 {
entry:
  %image_info.addr = alloca %struct._ImageInfo*, align 8
  %quantize_info = alloca %struct._QuantizeInfo*, align 8
  %message = alloca i8*, align 8
  %exception = alloca %struct._ExceptionInfo, align 8
  %option = alloca i8*, align 8
  store %struct._ImageInfo* %image_info, %struct._ImageInfo** %image_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %image_info.addr, metadata !1017, metadata !DIExpression()), !dbg !1018
  call void @llvm.dbg.declare(metadata %struct._QuantizeInfo** %quantize_info, metadata !1019, metadata !DIExpression()), !dbg !1020
  %call = call i8* @AcquireMagickMemory(i64 48) #9, !dbg !1021
  %0 = bitcast i8* %call to %struct._QuantizeInfo*, !dbg !1022
  store %struct._QuantizeInfo* %0, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !1023
  %1 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !1024
  %cmp = icmp eq %struct._QuantizeInfo* %1, null, !dbg !1026
  br i1 %cmp, label %if.then, label %if.end, !dbg !1027

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %message, metadata !1028, metadata !DIExpression()), !dbg !1030
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception, metadata !1031, metadata !DIExpression()), !dbg !1030
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !1030
  %call1 = call i32* @__errno_location() #10, !dbg !1030
  %2 = load i32, i32* %call1, align 4, !dbg !1030
  %call2 = call i8* @GetExceptionMessage(i32 %2), !dbg !1030
  store i8* %call2, i8** %message, align 8, !dbg !1030
  %3 = load i8*, i8** %message, align 8, !dbg !1030
  %call3 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 377, i32 700, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %3), !dbg !1030
  %4 = load i8*, i8** %message, align 8, !dbg !1030
  %call4 = call i8* @DestroyString(i8* %4), !dbg !1030
  store i8* %call4, i8** %message, align 8, !dbg !1030
  call void @CatchException(%struct._ExceptionInfo* %exception), !dbg !1030
  %call5 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !1030
  call void @MagickCoreTerminus(), !dbg !1030
  call void @_exit(i32 1) #11, !dbg !1030
  unreachable, !dbg !1030

if.end:                                           ; preds = %entry
  %5 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !1032
  call void @GetQuantizeInfo(%struct._QuantizeInfo* %5), !dbg !1033
  %6 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info.addr, align 8, !dbg !1034
  %cmp6 = icmp ne %struct._ImageInfo* %6, null, !dbg !1036
  br i1 %cmp6, label %if.then7, label %if.end14, !dbg !1037

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %option, metadata !1038, metadata !DIExpression()), !dbg !1040
  %7 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info.addr, align 8, !dbg !1041
  %dither = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %7, i32 0, i32 27, !dbg !1042
  %8 = load i32, i32* %dither, align 8, !dbg !1042
  %9 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !1043
  %dither8 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %9, i32 0, i32 2, !dbg !1044
  store i32 %8, i32* %dither8, align 8, !dbg !1045
  %10 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info.addr, align 8, !dbg !1046
  %call9 = call i8* @GetImageOption(%struct._ImageInfo* %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0)), !dbg !1047
  store i8* %call9, i8** %option, align 8, !dbg !1048
  %11 = load i8*, i8** %option, align 8, !dbg !1049
  %cmp10 = icmp ne i8* %11, null, !dbg !1051
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !1052

if.then11:                                        ; preds = %if.then7
  %12 = load i8*, i8** %option, align 8, !dbg !1053
  %call12 = call i64 @ParseCommandOption(i32 21, i32 0, i8* %12), !dbg !1054
  %conv = trunc i64 %call12 to i32, !dbg !1055
  %13 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !1056
  %dither_method = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %13, i32 0, i32 6, !dbg !1057
  store i32 %conv, i32* %dither_method, align 8, !dbg !1058
  br label %if.end13, !dbg !1056

if.end13:                                         ; preds = %if.then11, %if.then7
  %14 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info.addr, align 8, !dbg !1059
  %verbose = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %14, i32 0, i32 35, !dbg !1060
  %15 = load i32, i32* %verbose, align 4, !dbg !1060
  %16 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !1061
  %measure_error = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %16, i32 0, i32 4, !dbg !1062
  store i32 %15, i32* %measure_error, align 8, !dbg !1063
  br label %if.end14, !dbg !1064

if.end14:                                         ; preds = %if.end13, %if.end
  %17 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !1065
  ret %struct._QuantizeInfo* %17, !dbg !1066
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: allocsize(0)
declare dso_local i8* @AcquireMagickMemory(i64) #2

declare dso_local void @GetExceptionInfo(%struct._ExceptionInfo*) #3

declare dso_local i8* @GetExceptionMessage(i32) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #4

declare dso_local i32 @ThrowMagickException(%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) #3

declare dso_local i8* @DestroyString(i8*) #3

declare dso_local void @CatchException(%struct._ExceptionInfo*) #3

declare dso_local %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo*) #3

declare dso_local void @MagickCoreTerminus() #3

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #5

; Function Attrs: noinline nounwind uwtable
define dso_local void @GetQuantizeInfo(%struct._QuantizeInfo* %quantize_info) #0 !dbg !1067 {
entry:
  %quantize_info.addr = alloca %struct._QuantizeInfo*, align 8
  store %struct._QuantizeInfo* %quantize_info, %struct._QuantizeInfo** %quantize_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantizeInfo** %quantize_info.addr, metadata !1070, metadata !DIExpression()), !dbg !1071
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2237, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0)), !dbg !1072
  %0 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1073
  %1 = bitcast %struct._QuantizeInfo* %0 to i8*, !dbg !1073
  %call1 = call i8* @ResetMagickMemory(i8* %1, i32 0, i64 48), !dbg !1074
  %2 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1075
  %number_colors = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %2, i32 0, i32 0, !dbg !1076
  store i64 256, i64* %number_colors, align 8, !dbg !1077
  %3 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1078
  %dither = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %3, i32 0, i32 2, !dbg !1079
  store i32 1, i32* %dither, align 8, !dbg !1080
  %4 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1081
  %dither_method = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %4, i32 0, i32 6, !dbg !1082
  store i32 2, i32* %dither_method, align 8, !dbg !1083
  %5 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1084
  %colorspace = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %5, i32 0, i32 3, !dbg !1085
  store i32 0, i32* %colorspace, align 4, !dbg !1086
  %6 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1087
  %measure_error = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %6, i32 0, i32 4, !dbg !1088
  store i32 0, i32* %measure_error, align 8, !dbg !1089
  %7 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1090
  %signature = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %7, i32 0, i32 5, !dbg !1091
  store i64 2880220587, i64* %signature, align 8, !dbg !1092
  ret void, !dbg !1093
}

declare dso_local i8* @GetImageOption(%struct._ImageInfo*, i8*) #3

declare dso_local i64 @ParseCommandOption(i32, i32, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._QuantizeInfo* @CloneQuantizeInfo(%struct._QuantizeInfo* %quantize_info) #0 !dbg !1094 {
entry:
  %retval = alloca %struct._QuantizeInfo*, align 8
  %quantize_info.addr = alloca %struct._QuantizeInfo*, align 8
  %clone_info = alloca %struct._QuantizeInfo*, align 8
  %message = alloca i8*, align 8
  %exception = alloca %struct._ExceptionInfo, align 8
  store %struct._QuantizeInfo* %quantize_info, %struct._QuantizeInfo** %quantize_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantizeInfo** %quantize_info.addr, metadata !1099, metadata !DIExpression()), !dbg !1100
  call void @llvm.dbg.declare(metadata %struct._QuantizeInfo** %clone_info, metadata !1101, metadata !DIExpression()), !dbg !1102
  %call = call i8* @AcquireMagickMemory(i64 48) #9, !dbg !1103
  %0 = bitcast i8* %call to %struct._QuantizeInfo*, !dbg !1104
  store %struct._QuantizeInfo* %0, %struct._QuantizeInfo** %clone_info, align 8, !dbg !1105
  %1 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %clone_info, align 8, !dbg !1106
  %cmp = icmp eq %struct._QuantizeInfo* %1, null, !dbg !1108
  br i1 %cmp, label %if.then, label %if.end, !dbg !1109

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %message, metadata !1110, metadata !DIExpression()), !dbg !1112
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception, metadata !1113, metadata !DIExpression()), !dbg !1112
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !1112
  %call1 = call i32* @__errno_location() #10, !dbg !1112
  %2 = load i32, i32* %call1, align 4, !dbg !1112
  %call2 = call i8* @GetExceptionMessage(i32 %2), !dbg !1112
  store i8* %call2, i8** %message, align 8, !dbg !1112
  %3 = load i8*, i8** %message, align 8, !dbg !1112
  %call3 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1021, i32 700, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %3), !dbg !1112
  %4 = load i8*, i8** %message, align 8, !dbg !1112
  %call4 = call i8* @DestroyString(i8* %4), !dbg !1112
  store i8* %call4, i8** %message, align 8, !dbg !1112
  call void @CatchException(%struct._ExceptionInfo* %exception), !dbg !1112
  %call5 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !1112
  call void @MagickCoreTerminus(), !dbg !1112
  call void @_exit(i32 1) #11, !dbg !1112
  unreachable, !dbg !1112

if.end:                                           ; preds = %entry
  %5 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %clone_info, align 8, !dbg !1114
  call void @GetQuantizeInfo(%struct._QuantizeInfo* %5), !dbg !1115
  %6 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1116
  %cmp6 = icmp eq %struct._QuantizeInfo* %6, null, !dbg !1118
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !1119

if.then7:                                         ; preds = %if.end
  %7 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %clone_info, align 8, !dbg !1120
  store %struct._QuantizeInfo* %7, %struct._QuantizeInfo** %retval, align 8, !dbg !1121
  br label %return, !dbg !1121

if.end8:                                          ; preds = %if.end
  %8 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1122
  %number_colors = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %8, i32 0, i32 0, !dbg !1123
  %9 = load i64, i64* %number_colors, align 8, !dbg !1123
  %10 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %clone_info, align 8, !dbg !1124
  %number_colors9 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %10, i32 0, i32 0, !dbg !1125
  store i64 %9, i64* %number_colors9, align 8, !dbg !1126
  %11 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1127
  %tree_depth = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %11, i32 0, i32 1, !dbg !1128
  %12 = load i64, i64* %tree_depth, align 8, !dbg !1128
  %13 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %clone_info, align 8, !dbg !1129
  %tree_depth10 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %13, i32 0, i32 1, !dbg !1130
  store i64 %12, i64* %tree_depth10, align 8, !dbg !1131
  %14 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1132
  %dither = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %14, i32 0, i32 2, !dbg !1133
  %15 = load i32, i32* %dither, align 8, !dbg !1133
  %16 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %clone_info, align 8, !dbg !1134
  %dither11 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %16, i32 0, i32 2, !dbg !1135
  store i32 %15, i32* %dither11, align 8, !dbg !1136
  %17 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1137
  %dither_method = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %17, i32 0, i32 6, !dbg !1138
  %18 = load i32, i32* %dither_method, align 8, !dbg !1138
  %19 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %clone_info, align 8, !dbg !1139
  %dither_method12 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %19, i32 0, i32 6, !dbg !1140
  store i32 %18, i32* %dither_method12, align 8, !dbg !1141
  %20 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1142
  %colorspace = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %20, i32 0, i32 3, !dbg !1143
  %21 = load i32, i32* %colorspace, align 4, !dbg !1143
  %22 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %clone_info, align 8, !dbg !1144
  %colorspace13 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %22, i32 0, i32 3, !dbg !1145
  store i32 %21, i32* %colorspace13, align 4, !dbg !1146
  %23 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1147
  %measure_error = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %23, i32 0, i32 4, !dbg !1148
  %24 = load i32, i32* %measure_error, align 8, !dbg !1148
  %25 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %clone_info, align 8, !dbg !1149
  %measure_error14 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %25, i32 0, i32 4, !dbg !1150
  store i32 %24, i32* %measure_error14, align 8, !dbg !1151
  %26 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %clone_info, align 8, !dbg !1152
  store %struct._QuantizeInfo* %26, %struct._QuantizeInfo** %retval, align 8, !dbg !1153
  br label %return, !dbg !1153

return:                                           ; preds = %if.end8, %if.then7
  %27 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %retval, align 8, !dbg !1154
  ret %struct._QuantizeInfo* %27, !dbg !1154
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @CompressImageColormap(%struct._Image* %image) #0 !dbg !1155 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %quantize_info = alloca %struct._QuantizeInfo, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1158, metadata !DIExpression()), !dbg !1159
  call void @llvm.dbg.declare(metadata %struct._QuantizeInfo* %quantize_info, metadata !1160, metadata !DIExpression()), !dbg !1161
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1162
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !1164
  %1 = load i32, i32* %debug, align 8, !dbg !1164
  %cmp = icmp ne i32 %1, 0, !dbg !1165
  br i1 %cmp, label %if.then, label %if.end, !dbg !1166

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1167
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !1168
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !1167
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1163, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay), !dbg !1169
  br label %if.end, !dbg !1170

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1171
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1173
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 58, !dbg !1174
  %call1 = call i32 @IsPaletteImage(%struct._Image* %3, %struct._ExceptionInfo* %exception), !dbg !1175
  %cmp2 = icmp eq i32 %call1, 0, !dbg !1176
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !1177

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !1178
  br label %return, !dbg !1178

if.end4:                                          ; preds = %if.end
  call void @GetQuantizeInfo(%struct._QuantizeInfo* %quantize_info), !dbg !1179
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1180
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 10, !dbg !1181
  %6 = load i64, i64* %colors, align 8, !dbg !1181
  %number_colors = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %quantize_info, i32 0, i32 0, !dbg !1182
  store i64 %6, i64* %number_colors, align 8, !dbg !1183
  %tree_depth = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %quantize_info, i32 0, i32 1, !dbg !1184
  store i64 8, i64* %tree_depth, align 8, !dbg !1185
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1186
  %call5 = call i32 @QuantizeImage(%struct._QuantizeInfo* %quantize_info, %struct._Image* %7), !dbg !1187
  store i32 %call5, i32* %retval, align 4, !dbg !1188
  br label %return, !dbg !1188

return:                                           ; preds = %if.end4, %if.then3
  %8 = load i32, i32* %retval, align 4, !dbg !1189
  ret i32 %8, !dbg !1189
}

declare dso_local i32 @LogMagickEvent(i32, i8*, i8*, i64, i8*, ...) #3

declare dso_local i32 @IsPaletteImage(%struct._Image*, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @QuantizeImage(%struct._QuantizeInfo* %quantize_info, %struct._Image* %image) #0 !dbg !1190 {
entry:
  %retval = alloca i32, align 4
  %quantize_info.addr = alloca %struct._QuantizeInfo*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %cube_info = alloca %struct._CubeInfo*, align 8
  %status = alloca i32, align 4
  %depth = alloca i64, align 8
  %maximum_colors = alloca i64, align 8
  %colors26 = alloca i64, align 8
  store %struct._QuantizeInfo* %quantize_info, %struct._QuantizeInfo** %quantize_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantizeInfo** %quantize_info.addr, metadata !1193, metadata !DIExpression()), !dbg !1194
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1195, metadata !DIExpression()), !dbg !1196
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info, metadata !1197, metadata !DIExpression()), !dbg !1198
  call void @llvm.dbg.declare(metadata i32* %status, metadata !1199, metadata !DIExpression()), !dbg !1200
  call void @llvm.dbg.declare(metadata i64* %depth, metadata !1201, metadata !DIExpression()), !dbg !1202
  call void @llvm.dbg.declare(metadata i64* %maximum_colors, metadata !1203, metadata !DIExpression()), !dbg !1204
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1205
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !1207
  %1 = load i32, i32* %debug, align 8, !dbg !1207
  %cmp = icmp ne i32 %1, 0, !dbg !1208
  br i1 %cmp, label %if.then, label %if.end, !dbg !1209

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1210
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !1211
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !1210
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2695, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay), !dbg !1212
  br label %if.end, !dbg !1213

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1214
  %number_colors = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %3, i32 0, i32 0, !dbg !1215
  %4 = load i64, i64* %number_colors, align 8, !dbg !1215
  store i64 %4, i64* %maximum_colors, align 8, !dbg !1216
  %5 = load i64, i64* %maximum_colors, align 8, !dbg !1217
  %cmp1 = icmp eq i64 %5, 0, !dbg !1219
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !1220

if.then2:                                         ; preds = %if.end
  store i64 65536, i64* %maximum_colors, align 8, !dbg !1221
  br label %if.end3, !dbg !1222

if.end3:                                          ; preds = %if.then2, %if.end
  %6 = load i64, i64* %maximum_colors, align 8, !dbg !1223
  %cmp4 = icmp ugt i64 %6, 65536, !dbg !1225
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !1226

if.then5:                                         ; preds = %if.end3
  store i64 65536, i64* %maximum_colors, align 8, !dbg !1227
  br label %if.end6, !dbg !1228

if.end6:                                          ; preds = %if.then5, %if.end3
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1229
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %7, i32 0, i32 6, !dbg !1231
  %8 = load i32, i32* %matte, align 8, !dbg !1231
  %cmp7 = icmp eq i32 %8, 0, !dbg !1232
  br i1 %cmp7, label %if.then8, label %if.end19, !dbg !1233

if.then8:                                         ; preds = %if.end6
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1234
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 7, !dbg !1237
  %10 = load i64, i64* %columns, align 8, !dbg !1237
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1238
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %11, i32 0, i32 8, !dbg !1239
  %12 = load i64, i64* %rows, align 8, !dbg !1239
  %mul = mul i64 %10, %12, !dbg !1240
  %13 = load i64, i64* %maximum_colors, align 8, !dbg !1241
  %cmp9 = icmp ule i64 %mul, %13, !dbg !1242
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !1243

if.then10:                                        ; preds = %if.then8
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1244
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1245
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 58, !dbg !1246
  %call11 = call i32 @DirectToColormapImage(%struct._Image* %14, %struct._ExceptionInfo* %exception), !dbg !1247
  br label %if.end12, !dbg !1248

if.end12:                                         ; preds = %if.then10, %if.then8
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1249
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1251
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 58, !dbg !1252
  %call14 = call i32 @IsGrayImage(%struct._Image* %16, %struct._ExceptionInfo* %exception13), !dbg !1253
  %cmp15 = icmp ne i32 %call14, 0, !dbg !1254
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !1255

if.then16:                                        ; preds = %if.end12
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1256
  %call17 = call i32 @SetGrayscaleImage(%struct._Image* %18), !dbg !1257
  br label %if.end18, !dbg !1258

if.end18:                                         ; preds = %if.then16, %if.end12
  br label %if.end19, !dbg !1259

if.end19:                                         ; preds = %if.end18, %if.end6
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1260
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 0, !dbg !1262
  %20 = load i32, i32* %storage_class, align 8, !dbg !1262
  %cmp20 = icmp eq i32 %20, 2, !dbg !1263
  br i1 %cmp20, label %land.lhs.true, label %if.end23, !dbg !1264

land.lhs.true:                                    ; preds = %if.end19
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1265
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 10, !dbg !1266
  %22 = load i64, i64* %colors, align 8, !dbg !1266
  %23 = load i64, i64* %maximum_colors, align 8, !dbg !1267
  %cmp21 = icmp ule i64 %22, %23, !dbg !1268
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !1269

if.then22:                                        ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !1270
  br label %return, !dbg !1270

if.end23:                                         ; preds = %land.lhs.true, %if.end19
  %24 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1271
  %tree_depth = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %24, i32 0, i32 1, !dbg !1272
  %25 = load i64, i64* %tree_depth, align 8, !dbg !1272
  store i64 %25, i64* %depth, align 8, !dbg !1273
  %26 = load i64, i64* %depth, align 8, !dbg !1274
  %cmp24 = icmp eq i64 %26, 0, !dbg !1276
  br i1 %cmp24, label %if.then25, label %if.end45, !dbg !1277

if.then25:                                        ; preds = %if.end23
  call void @llvm.dbg.declare(metadata i64* %colors26, metadata !1278, metadata !DIExpression()), !dbg !1280
  %27 = load i64, i64* %maximum_colors, align 8, !dbg !1281
  store i64 %27, i64* %colors26, align 8, !dbg !1282
  store i64 1, i64* %depth, align 8, !dbg !1283
  br label %for.cond, !dbg !1285

for.cond:                                         ; preds = %for.inc, %if.then25
  %28 = load i64, i64* %colors26, align 8, !dbg !1286
  %cmp27 = icmp ne i64 %28, 0, !dbg !1288
  br i1 %cmp27, label %for.body, label %for.end, !dbg !1289

for.body:                                         ; preds = %for.cond
  %29 = load i64, i64* %colors26, align 8, !dbg !1290
  %shr = lshr i64 %29, 2, !dbg !1290
  store i64 %shr, i64* %colors26, align 8, !dbg !1290
  br label %for.inc, !dbg !1291

for.inc:                                          ; preds = %for.body
  %30 = load i64, i64* %depth, align 8, !dbg !1292
  %inc = add i64 %30, 1, !dbg !1292
  store i64 %inc, i64* %depth, align 8, !dbg !1292
  br label %for.cond, !dbg !1293, !llvm.loop !1294

for.end:                                          ; preds = %for.cond
  %31 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1296
  %dither = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %31, i32 0, i32 2, !dbg !1298
  %32 = load i32, i32* %dither, align 8, !dbg !1298
  %cmp28 = icmp ne i32 %32, 0, !dbg !1299
  br i1 %cmp28, label %land.lhs.true29, label %if.end32, !dbg !1300

land.lhs.true29:                                  ; preds = %for.end
  %33 = load i64, i64* %depth, align 8, !dbg !1301
  %cmp30 = icmp ugt i64 %33, 2, !dbg !1302
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !1303

if.then31:                                        ; preds = %land.lhs.true29
  %34 = load i64, i64* %depth, align 8, !dbg !1304
  %dec = add i64 %34, -1, !dbg !1304
  store i64 %dec, i64* %depth, align 8, !dbg !1304
  br label %if.end32, !dbg !1305

if.end32:                                         ; preds = %if.then31, %land.lhs.true29, %for.end
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1306
  %matte33 = getelementptr inbounds %struct._Image, %struct._Image* %35, i32 0, i32 6, !dbg !1308
  %36 = load i32, i32* %matte33, align 8, !dbg !1308
  %cmp34 = icmp ne i32 %36, 0, !dbg !1309
  br i1 %cmp34, label %land.lhs.true35, label %if.end39, !dbg !1310

land.lhs.true35:                                  ; preds = %if.end32
  %37 = load i64, i64* %depth, align 8, !dbg !1311
  %cmp36 = icmp ugt i64 %37, 5, !dbg !1312
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !1313

if.then37:                                        ; preds = %land.lhs.true35
  %38 = load i64, i64* %depth, align 8, !dbg !1314
  %dec38 = add i64 %38, -1, !dbg !1314
  store i64 %dec38, i64* %depth, align 8, !dbg !1314
  br label %if.end39, !dbg !1315

if.end39:                                         ; preds = %if.then37, %land.lhs.true35, %if.end32
  %39 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1316
  %40 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1318
  %exception40 = getelementptr inbounds %struct._Image, %struct._Image* %40, i32 0, i32 58, !dbg !1319
  %call41 = call i32 @IsGrayImage(%struct._Image* %39, %struct._ExceptionInfo* %exception40), !dbg !1320
  %cmp42 = icmp ne i32 %call41, 0, !dbg !1321
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !1322

if.then43:                                        ; preds = %if.end39
  store i64 8, i64* %depth, align 8, !dbg !1323
  br label %if.end44, !dbg !1324

if.end44:                                         ; preds = %if.then43, %if.end39
  br label %if.end45, !dbg !1325

if.end45:                                         ; preds = %if.end44, %if.end23
  %41 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1326
  %42 = load i64, i64* %depth, align 8, !dbg !1327
  %43 = load i64, i64* %maximum_colors, align 8, !dbg !1328
  %call46 = call %struct._CubeInfo* @GetCubeInfo(%struct._QuantizeInfo* %41, i64 %42, i64 %43), !dbg !1329
  store %struct._CubeInfo* %call46, %struct._CubeInfo** %cube_info, align 8, !dbg !1330
  %44 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !1331
  %cmp47 = icmp eq %struct._CubeInfo* %44, null, !dbg !1333
  br i1 %cmp47, label %if.then48, label %if.end56, !dbg !1334

if.then48:                                        ; preds = %if.end45
  %45 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1335
  %cmp49 = icmp ne %struct._Image* %45, null, !dbg !1335
  br i1 %cmp49, label %if.then50, label %if.end55, !dbg !1338

if.then50:                                        ; preds = %if.then48
  %46 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1335
  %exception51 = getelementptr inbounds %struct._Image, %struct._Image* %46, i32 0, i32 58, !dbg !1335
  %47 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1335
  %filename52 = getelementptr inbounds %struct._Image, %struct._Image* %47, i32 0, i32 53, !dbg !1335
  %arraydecay53 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename52, i64 0, i64 0, !dbg !1335
  %call54 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception51, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2736, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay53), !dbg !1335
  br label %if.end55, !dbg !1335

if.end55:                                         ; preds = %if.then50, %if.then48
  store i32 0, i32* %retval, align 4, !dbg !1338
  br label %return, !dbg !1338

if.end56:                                         ; preds = %if.end45
  %48 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !1339
  %49 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1340
  %50 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1341
  %exception57 = getelementptr inbounds %struct._Image, %struct._Image* %50, i32 0, i32 58, !dbg !1342
  %call58 = call i32 @ClassifyImageColors(%struct._CubeInfo* %48, %struct._Image* %49, %struct._ExceptionInfo* %exception57), !dbg !1343
  store i32 %call58, i32* %status, align 4, !dbg !1344
  %51 = load i32, i32* %status, align 4, !dbg !1345
  %cmp59 = icmp ne i32 %51, 0, !dbg !1347
  br i1 %cmp59, label %if.then60, label %if.end62, !dbg !1348

if.then60:                                        ; preds = %if.end56
  %52 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1349
  %53 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !1351
  call void @ReduceImageColors(%struct._Image* %52, %struct._CubeInfo* %53), !dbg !1352
  %54 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1353
  %55 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !1354
  %call61 = call i32 @AssignImageColors(%struct._Image* %54, %struct._CubeInfo* %55), !dbg !1355
  store i32 %call61, i32* %status, align 4, !dbg !1356
  br label %if.end62, !dbg !1357

if.end62:                                         ; preds = %if.then60, %if.end56
  %56 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !1358
  call void @DestroyCubeInfo(%struct._CubeInfo* %56), !dbg !1359
  %57 = load i32, i32* %status, align 4, !dbg !1360
  store i32 %57, i32* %retval, align 4, !dbg !1361
  br label %return, !dbg !1361

return:                                           ; preds = %if.end62, %if.end55, %if.then22
  %58 = load i32, i32* %retval, align 4, !dbg !1362
  ret i32 %58, !dbg !1362
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._QuantizeInfo* @DestroyQuantizeInfo(%struct._QuantizeInfo* %quantize_info) #0 !dbg !1363 {
entry:
  %quantize_info.addr = alloca %struct._QuantizeInfo*, align 8
  store %struct._QuantizeInfo* %quantize_info, %struct._QuantizeInfo** %quantize_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantizeInfo** %quantize_info.addr, metadata !1366, metadata !DIExpression()), !dbg !1367
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1358, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0)), !dbg !1368
  %0 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1369
  %signature = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %0, i32 0, i32 5, !dbg !1370
  store i64 -2880220588, i64* %signature, align 8, !dbg !1371
  %1 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1372
  %2 = bitcast %struct._QuantizeInfo* %1 to i8*, !dbg !1372
  %call1 = call i8* @RelinquishMagickMemory(i8* %2), !dbg !1373
  %3 = bitcast i8* %call1 to %struct._QuantizeInfo*, !dbg !1374
  store %struct._QuantizeInfo* %3, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1375
  %4 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1376
  ret %struct._QuantizeInfo* %4, !dbg !1377
}

declare dso_local i8* @RelinquishMagickMemory(i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @GetImageQuantizeError(%struct._Image* %image) #0 !dbg !1378 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %indexes = alloca i16*, align 8
  %alpha = alloca float, align 4
  %area = alloca float, align 4
  %beta = alloca float, align 4
  %distance = alloca float, align 4
  %maximum_error = alloca float, align 4
  %mean_error = alloca float, align 4
  %mean_error_per_pixel = alloca float, align 4
  %index = alloca i64, align 8
  %y = alloca i64, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1379, metadata !DIExpression()), !dbg !1380
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !1381, metadata !DIExpression()), !dbg !1385
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !1386, metadata !DIExpression()), !dbg !1388
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !1389, metadata !DIExpression()), !dbg !1390
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !1391, metadata !DIExpression()), !dbg !1392
  call void @llvm.dbg.declare(metadata float* %area, metadata !1393, metadata !DIExpression()), !dbg !1394
  call void @llvm.dbg.declare(metadata float* %beta, metadata !1395, metadata !DIExpression()), !dbg !1396
  call void @llvm.dbg.declare(metadata float* %distance, metadata !1397, metadata !DIExpression()), !dbg !1398
  call void @llvm.dbg.declare(metadata float* %maximum_error, metadata !1399, metadata !DIExpression()), !dbg !1400
  call void @llvm.dbg.declare(metadata float* %mean_error, metadata !1401, metadata !DIExpression()), !dbg !1402
  call void @llvm.dbg.declare(metadata float* %mean_error_per_pixel, metadata !1403, metadata !DIExpression()), !dbg !1404
  call void @llvm.dbg.declare(metadata i64* %index, metadata !1405, metadata !DIExpression()), !dbg !1406
  call void @llvm.dbg.declare(metadata i64* %y, metadata !1407, metadata !DIExpression()), !dbg !1408
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1409
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !1411
  %1 = load i32, i32* %debug, align 8, !dbg !1411
  %cmp = icmp ne i32 %1, 0, !dbg !1412
  br i1 %cmp, label %if.then, label %if.end, !dbg !1413

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1414
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !1415
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !1414
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2153, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay), !dbg !1416
  br label %if.end, !dbg !1417

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1418
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1419
  %exception1 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 58, !dbg !1420
  %call2 = call i64 @GetNumberColors(%struct._Image* %3, %struct._IO_FILE* null, %struct._ExceptionInfo* %exception1), !dbg !1421
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1422
  %total_colors = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 43, !dbg !1423
  store i64 %call2, i64* %total_colors, align 8, !dbg !1424
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1425
  %error = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 45, !dbg !1426
  %7 = bitcast %struct._ErrorInfo* %error to i8*, !dbg !1427
  %call3 = call i8* @ResetMagickMemory(i8* %7, i32 0, i64 24), !dbg !1428
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1429
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 0, !dbg !1431
  %9 = load i32, i32* %storage_class, align 8, !dbg !1431
  %cmp4 = icmp eq i32 %9, 1, !dbg !1432
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !1433

if.then5:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !1434
  br label %return, !dbg !1434

if.end6:                                          ; preds = %if.end
  store float 1.000000e+00, float* %alpha, align 4, !dbg !1435
  store float 1.000000e+00, float* %beta, align 4, !dbg !1436
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1437
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 7, !dbg !1438
  %11 = load i64, i64* %columns, align 8, !dbg !1438
  %conv = uitofp i64 %11 to double, !dbg !1437
  %mul = fmul double 3.000000e+00, %conv, !dbg !1439
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1440
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 8, !dbg !1441
  %13 = load i64, i64* %rows, align 8, !dbg !1441
  %conv7 = uitofp i64 %13 to double, !dbg !1440
  %mul8 = fmul double %mul, %conv7, !dbg !1442
  %conv9 = fptrunc double %mul8 to float, !dbg !1443
  store float %conv9, float* %area, align 4, !dbg !1444
  store float 0.000000e+00, float* %maximum_error, align 4, !dbg !1445
  store float 0.000000e+00, float* %mean_error_per_pixel, align 4, !dbg !1446
  store float 0.000000e+00, float* %mean_error, align 4, !dbg !1447
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1448
  %exception10 = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 58, !dbg !1449
  store %struct._ExceptionInfo* %exception10, %struct._ExceptionInfo** %exception, align 8, !dbg !1450
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1451
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1452
  %call11 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %15, %struct._ExceptionInfo* %16), !dbg !1453
  store %struct._CacheView* %call11, %struct._CacheView** %image_view, align 8, !dbg !1454
  store i64 0, i64* %y, align 8, !dbg !1455
  br label %for.cond, !dbg !1457

for.cond:                                         ; preds = %for.inc103, %if.end6
  %17 = load i64, i64* %y, align 8, !dbg !1458
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1460
  %rows12 = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 8, !dbg !1461
  %19 = load i64, i64* %rows12, align 8, !dbg !1461
  %cmp13 = icmp slt i64 %17, %19, !dbg !1462
  br i1 %cmp13, label %for.body, label %for.end105, !dbg !1463

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !1464, metadata !DIExpression()), !dbg !1467
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1468, metadata !DIExpression()), !dbg !1469
  %20 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1470
  %21 = load i64, i64* %y, align 8, !dbg !1471
  %22 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1472
  %columns15 = getelementptr inbounds %struct._Image, %struct._Image* %22, i32 0, i32 7, !dbg !1473
  %23 = load i64, i64* %columns15, align 8, !dbg !1473
  %24 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1474
  %call16 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %20, i64 0, i64 %21, i64 %23, i64 1, %struct._ExceptionInfo* %24), !dbg !1475
  store %struct._PixelPacket* %call16, %struct._PixelPacket** %p, align 8, !dbg !1476
  %25 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1477
  %cmp17 = icmp eq %struct._PixelPacket* %25, null, !dbg !1479
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !1480

if.then19:                                        ; preds = %for.body
  br label %for.end105, !dbg !1481

if.end20:                                         ; preds = %for.body
  %26 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1482
  %call21 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %26), !dbg !1483
  store i16* %call21, i16** %indexes, align 8, !dbg !1484
  store i64 0, i64* %x, align 8, !dbg !1485
  br label %for.cond22, !dbg !1487

for.cond22:                                       ; preds = %for.inc, %if.end20
  %27 = load i64, i64* %x, align 8, !dbg !1488
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1490
  %columns23 = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 7, !dbg !1491
  %29 = load i64, i64* %columns23, align 8, !dbg !1491
  %cmp24 = icmp slt i64 %27, %29, !dbg !1492
  br i1 %cmp24, label %for.body26, label %for.end, !dbg !1493

for.body26:                                       ; preds = %for.cond22
  %30 = load i16*, i16** %indexes, align 8, !dbg !1494
  %31 = load i64, i64* %x, align 8, !dbg !1494
  %add.ptr = getelementptr inbounds i16, i16* %30, i64 %31, !dbg !1494
  %cmp27 = icmp eq i16* %add.ptr, null, !dbg !1494
  br i1 %cmp27, label %cond.true, label %cond.false, !dbg !1494

cond.true:                                        ; preds = %for.body26
  br label %cond.end, !dbg !1494

cond.false:                                       ; preds = %for.body26
  %32 = load i16*, i16** %indexes, align 8, !dbg !1494
  %33 = load i64, i64* %x, align 8, !dbg !1494
  %add.ptr29 = getelementptr inbounds i16, i16* %32, i64 %33, !dbg !1494
  %34 = load i16, i16* %add.ptr29, align 2, !dbg !1494
  %conv30 = zext i16 %34 to i32, !dbg !1494
  br label %cond.end, !dbg !1494

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv30, %cond.false ], !dbg !1494
  %conv31 = sext i32 %cond to i64, !dbg !1494
  %mul32 = mul i64 1, %conv31, !dbg !1496
  store i64 %mul32, i64* %index, align 8, !dbg !1497
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1498
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %35, i32 0, i32 6, !dbg !1500
  %36 = load i32, i32* %matte, align 8, !dbg !1500
  %cmp33 = icmp ne i32 %36, 0, !dbg !1501
  br i1 %cmp33, label %if.then35, label %if.end46, !dbg !1502

if.then35:                                        ; preds = %cond.end
  %37 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1503
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %37, i32 0, i32 3, !dbg !1503
  %38 = load i16, i16* %opacity, align 2, !dbg !1503
  %conv36 = zext i16 %38 to i32, !dbg !1503
  %sub = sub nsw i32 65535, %conv36, !dbg !1503
  %conv37 = sitofp i32 %sub to double, !dbg !1505
  %mul38 = fmul double 0x3EF0001000100010, %conv37, !dbg !1506
  %conv39 = fptrunc double %mul38 to float, !dbg !1507
  store float %conv39, float* %alpha, align 4, !dbg !1508
  %39 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1509
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %39, i32 0, i32 11, !dbg !1510
  %40 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !1510
  %41 = load i64, i64* %index, align 8, !dbg !1511
  %arrayidx = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %40, i64 %41, !dbg !1509
  %opacity40 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx, i32 0, i32 3, !dbg !1512
  %42 = load i16, i16* %opacity40, align 2, !dbg !1512
  %conv41 = zext i16 %42 to i32, !dbg !1509
  %sub42 = sub nsw i32 65535, %conv41, !dbg !1513
  %conv43 = sitofp i32 %sub42 to double, !dbg !1514
  %mul44 = fmul double 0x3EF0001000100010, %conv43, !dbg !1515
  %conv45 = fptrunc double %mul44 to float, !dbg !1516
  store float %conv45, float* %beta, align 4, !dbg !1517
  br label %if.end46, !dbg !1518

if.end46:                                         ; preds = %if.then35, %cond.end
  %43 = load float, float* %alpha, align 4, !dbg !1519
  %44 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1520
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %44, i32 0, i32 2, !dbg !1520
  %45 = load i16, i16* %red, align 2, !dbg !1520
  %conv47 = zext i16 %45 to i32, !dbg !1520
  %conv48 = sitofp i32 %conv47 to float, !dbg !1520
  %mul49 = fmul float %43, %conv48, !dbg !1521
  %46 = load float, float* %beta, align 4, !dbg !1522
  %47 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1523
  %colormap50 = getelementptr inbounds %struct._Image, %struct._Image* %47, i32 0, i32 11, !dbg !1524
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap50, align 8, !dbg !1524
  %49 = load i64, i64* %index, align 8, !dbg !1525
  %arrayidx51 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %48, i64 %49, !dbg !1523
  %red52 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx51, i32 0, i32 2, !dbg !1526
  %50 = load i16, i16* %red52, align 2, !dbg !1526
  %conv53 = zext i16 %50 to i32, !dbg !1523
  %conv54 = sitofp i32 %conv53 to float, !dbg !1523
  %mul55 = fmul float %46, %conv54, !dbg !1527
  %sub56 = fsub float %mul49, %mul55, !dbg !1528
  %conv57 = fpext float %sub56 to double, !dbg !1519
  %51 = call double @llvm.fabs.f64(double %conv57), !dbg !1529
  %conv58 = fptrunc double %51 to float, !dbg !1529
  store float %conv58, float* %distance, align 4, !dbg !1530
  %52 = load float, float* %distance, align 4, !dbg !1531
  %53 = load float, float* %mean_error_per_pixel, align 4, !dbg !1532
  %add = fadd float %53, %52, !dbg !1532
  store float %add, float* %mean_error_per_pixel, align 4, !dbg !1532
  %54 = load float, float* %distance, align 4, !dbg !1533
  %55 = load float, float* %distance, align 4, !dbg !1534
  %mul59 = fmul float %54, %55, !dbg !1535
  %56 = load float, float* %mean_error, align 4, !dbg !1536
  %add60 = fadd float %56, %mul59, !dbg !1536
  store float %add60, float* %mean_error, align 4, !dbg !1536
  %57 = load float, float* %distance, align 4, !dbg !1537
  %58 = load float, float* %maximum_error, align 4, !dbg !1539
  %cmp61 = fcmp ogt float %57, %58, !dbg !1540
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !1541

if.then63:                                        ; preds = %if.end46
  %59 = load float, float* %distance, align 4, !dbg !1542
  store float %59, float* %maximum_error, align 4, !dbg !1543
  br label %if.end64, !dbg !1544

if.end64:                                         ; preds = %if.then63, %if.end46
  %60 = load float, float* %alpha, align 4, !dbg !1545
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1546
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 0, i32 1, !dbg !1546
  %62 = load i16, i16* %green, align 2, !dbg !1546
  %conv65 = zext i16 %62 to i32, !dbg !1546
  %conv66 = sitofp i32 %conv65 to float, !dbg !1546
  %mul67 = fmul float %60, %conv66, !dbg !1547
  %63 = load float, float* %beta, align 4, !dbg !1548
  %64 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1549
  %colormap68 = getelementptr inbounds %struct._Image, %struct._Image* %64, i32 0, i32 11, !dbg !1550
  %65 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap68, align 8, !dbg !1550
  %66 = load i64, i64* %index, align 8, !dbg !1551
  %arrayidx69 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %65, i64 %66, !dbg !1549
  %green70 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx69, i32 0, i32 1, !dbg !1552
  %67 = load i16, i16* %green70, align 2, !dbg !1552
  %conv71 = zext i16 %67 to i32, !dbg !1549
  %conv72 = sitofp i32 %conv71 to float, !dbg !1549
  %mul73 = fmul float %63, %conv72, !dbg !1553
  %sub74 = fsub float %mul67, %mul73, !dbg !1554
  %conv75 = fpext float %sub74 to double, !dbg !1545
  %68 = call double @llvm.fabs.f64(double %conv75), !dbg !1555
  %conv76 = fptrunc double %68 to float, !dbg !1555
  store float %conv76, float* %distance, align 4, !dbg !1556
  %69 = load float, float* %distance, align 4, !dbg !1557
  %70 = load float, float* %mean_error_per_pixel, align 4, !dbg !1558
  %add77 = fadd float %70, %69, !dbg !1558
  store float %add77, float* %mean_error_per_pixel, align 4, !dbg !1558
  %71 = load float, float* %distance, align 4, !dbg !1559
  %72 = load float, float* %distance, align 4, !dbg !1560
  %mul78 = fmul float %71, %72, !dbg !1561
  %73 = load float, float* %mean_error, align 4, !dbg !1562
  %add79 = fadd float %73, %mul78, !dbg !1562
  store float %add79, float* %mean_error, align 4, !dbg !1562
  %74 = load float, float* %distance, align 4, !dbg !1563
  %75 = load float, float* %maximum_error, align 4, !dbg !1565
  %cmp80 = fcmp ogt float %74, %75, !dbg !1566
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !1567

if.then82:                                        ; preds = %if.end64
  %76 = load float, float* %distance, align 4, !dbg !1568
  store float %76, float* %maximum_error, align 4, !dbg !1569
  br label %if.end83, !dbg !1570

if.end83:                                         ; preds = %if.then82, %if.end64
  %77 = load float, float* %alpha, align 4, !dbg !1571
  %78 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1572
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %78, i32 0, i32 0, !dbg !1572
  %79 = load i16, i16* %blue, align 2, !dbg !1572
  %conv84 = zext i16 %79 to i32, !dbg !1572
  %conv85 = sitofp i32 %conv84 to float, !dbg !1572
  %mul86 = fmul float %77, %conv85, !dbg !1573
  %80 = load float, float* %beta, align 4, !dbg !1574
  %81 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1575
  %colormap87 = getelementptr inbounds %struct._Image, %struct._Image* %81, i32 0, i32 11, !dbg !1576
  %82 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap87, align 8, !dbg !1576
  %83 = load i64, i64* %index, align 8, !dbg !1577
  %arrayidx88 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %82, i64 %83, !dbg !1575
  %blue89 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx88, i32 0, i32 0, !dbg !1578
  %84 = load i16, i16* %blue89, align 2, !dbg !1578
  %conv90 = zext i16 %84 to i32, !dbg !1575
  %conv91 = sitofp i32 %conv90 to float, !dbg !1575
  %mul92 = fmul float %80, %conv91, !dbg !1579
  %sub93 = fsub float %mul86, %mul92, !dbg !1580
  %conv94 = fpext float %sub93 to double, !dbg !1571
  %85 = call double @llvm.fabs.f64(double %conv94), !dbg !1581
  %conv95 = fptrunc double %85 to float, !dbg !1581
  store float %conv95, float* %distance, align 4, !dbg !1582
  %86 = load float, float* %distance, align 4, !dbg !1583
  %87 = load float, float* %mean_error_per_pixel, align 4, !dbg !1584
  %add96 = fadd float %87, %86, !dbg !1584
  store float %add96, float* %mean_error_per_pixel, align 4, !dbg !1584
  %88 = load float, float* %distance, align 4, !dbg !1585
  %89 = load float, float* %distance, align 4, !dbg !1586
  %mul97 = fmul float %88, %89, !dbg !1587
  %90 = load float, float* %mean_error, align 4, !dbg !1588
  %add98 = fadd float %90, %mul97, !dbg !1588
  store float %add98, float* %mean_error, align 4, !dbg !1588
  %91 = load float, float* %distance, align 4, !dbg !1589
  %92 = load float, float* %maximum_error, align 4, !dbg !1591
  %cmp99 = fcmp ogt float %91, %92, !dbg !1592
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !1593

if.then101:                                       ; preds = %if.end83
  %93 = load float, float* %distance, align 4, !dbg !1594
  store float %93, float* %maximum_error, align 4, !dbg !1595
  br label %if.end102, !dbg !1596

if.end102:                                        ; preds = %if.then101, %if.end83
  %94 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1597
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %94, i32 1, !dbg !1597
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !1597
  br label %for.inc, !dbg !1598

for.inc:                                          ; preds = %if.end102
  %95 = load i64, i64* %x, align 8, !dbg !1599
  %inc = add nsw i64 %95, 1, !dbg !1599
  store i64 %inc, i64* %x, align 8, !dbg !1599
  br label %for.cond22, !dbg !1600, !llvm.loop !1601

for.end:                                          ; preds = %for.cond22
  br label %for.inc103, !dbg !1603

for.inc103:                                       ; preds = %for.end
  %96 = load i64, i64* %y, align 8, !dbg !1604
  %inc104 = add nsw i64 %96, 1, !dbg !1604
  store i64 %inc104, i64* %y, align 8, !dbg !1604
  br label %for.cond, !dbg !1605, !llvm.loop !1606

for.end105:                                       ; preds = %if.then19, %for.cond
  %97 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1608
  %call106 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %97), !dbg !1609
  store %struct._CacheView* %call106, %struct._CacheView** %image_view, align 8, !dbg !1610
  %98 = load float, float* %mean_error_per_pixel, align 4, !dbg !1611
  %conv107 = fpext float %98 to double, !dbg !1612
  %99 = load float, float* %area, align 4, !dbg !1613
  %conv108 = fpext float %99 to double, !dbg !1613
  %div = fdiv double %conv107, %conv108, !dbg !1614
  %100 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1615
  %error109 = getelementptr inbounds %struct._Image, %struct._Image* %100, i32 0, i32 45, !dbg !1616
  %mean_error_per_pixel110 = getelementptr inbounds %struct._ErrorInfo, %struct._ErrorInfo* %error109, i32 0, i32 0, !dbg !1617
  store double %div, double* %mean_error_per_pixel110, align 8, !dbg !1618
  %101 = load float, float* %mean_error, align 4, !dbg !1619
  %conv111 = fpext float %101 to double, !dbg !1619
  %mul112 = fmul double 0x3DF0002000300040, %conv111, !dbg !1620
  %102 = load float, float* %area, align 4, !dbg !1621
  %conv113 = fpext float %102 to double, !dbg !1621
  %div114 = fdiv double %mul112, %conv113, !dbg !1622
  %103 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1623
  %error115 = getelementptr inbounds %struct._Image, %struct._Image* %103, i32 0, i32 45, !dbg !1624
  %normalized_mean_error = getelementptr inbounds %struct._ErrorInfo, %struct._ErrorInfo* %error115, i32 0, i32 1, !dbg !1625
  store double %div114, double* %normalized_mean_error, align 8, !dbg !1626
  %104 = load float, float* %maximum_error, align 4, !dbg !1627
  %conv116 = fpext float %104 to double, !dbg !1627
  %mul117 = fmul double 0x3EF0001000100010, %conv116, !dbg !1628
  %105 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1629
  %error118 = getelementptr inbounds %struct._Image, %struct._Image* %105, i32 0, i32 45, !dbg !1630
  %normalized_maximum_error = getelementptr inbounds %struct._ErrorInfo, %struct._ErrorInfo* %error118, i32 0, i32 2, !dbg !1631
  store double %mul117, double* %normalized_maximum_error, align 8, !dbg !1632
  store i32 1, i32* %retval, align 4, !dbg !1633
  br label %return, !dbg !1633

return:                                           ; preds = %for.end105, %if.then5
  %106 = load i32, i32* %retval, align 4, !dbg !1634
  ret i32 %106, !dbg !1634
}

declare dso_local i64 @GetNumberColors(%struct._Image*, %struct._IO_FILE*, %struct._ExceptionInfo*) #3

declare dso_local i8* @ResetMagickMemory(i8*, i32, i64) #3

declare dso_local %struct._CacheView* @AcquireVirtualCacheView(%struct._Image*, %struct._ExceptionInfo*) #3

declare dso_local %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #3

declare dso_local i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView*) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

declare dso_local %struct._CacheView* @DestroyCacheView(%struct._CacheView*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @PosterizeImage(%struct._Image* %image, i64 %levels, i32 %dither) #0 !dbg !1635 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %levels.addr = alloca i64, align 8
  %dither.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1639, metadata !DIExpression()), !dbg !1640
  store i64 %levels, i64* %levels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %levels.addr, metadata !1641, metadata !DIExpression()), !dbg !1642
  store i32 %dither, i32* %dither.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dither.addr, metadata !1643, metadata !DIExpression()), !dbg !1644
  call void @llvm.dbg.declare(metadata i32* %status, metadata !1645, metadata !DIExpression()), !dbg !1646
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1647
  %1 = load i64, i64* %levels.addr, align 8, !dbg !1648
  %2 = load i32, i32* %dither.addr, align 4, !dbg !1649
  %call = call i32 @PosterizeImageChannel(%struct._Image* %0, i32 134217719, i64 %1, i32 %2), !dbg !1650
  store i32 %call, i32* %status, align 4, !dbg !1651
  %3 = load i32, i32* %status, align 4, !dbg !1652
  ret i32 %3, !dbg !1653
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @PosterizeImageChannel(%struct._Image* %image, i32 %channel, i64 %levels, i32 %dither) #0 !dbg !1654 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %levels.addr = alloca i64, align 8
  %dither.addr = alloca i32, align 4
  %image_view = alloca %struct._CacheView*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %quantize_info = alloca %struct._QuantizeInfo*, align 8
  %i = alloca i64, align 8
  %y = alloca i64, align 8
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1658, metadata !DIExpression()), !dbg !1659
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !1660, metadata !DIExpression()), !dbg !1661
  store i64 %levels, i64* %levels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %levels.addr, metadata !1662, metadata !DIExpression()), !dbg !1663
  store i32 %dither, i32* %dither.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dither.addr, metadata !1664, metadata !DIExpression()), !dbg !1665
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !1666, metadata !DIExpression()), !dbg !1667
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !1668, metadata !DIExpression()), !dbg !1669
  call void @llvm.dbg.declare(metadata i32* %status, metadata !1670, metadata !DIExpression()), !dbg !1671
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !1672, metadata !DIExpression()), !dbg !1673
  call void @llvm.dbg.declare(metadata %struct._QuantizeInfo** %quantize_info, metadata !1674, metadata !DIExpression()), !dbg !1675
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1676, metadata !DIExpression()), !dbg !1677
  call void @llvm.dbg.declare(metadata i64* %y, metadata !1678, metadata !DIExpression()), !dbg !1679
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1680
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !1682
  %1 = load i32, i32* %debug, align 8, !dbg !1682
  %cmp = icmp ne i32 %1, 0, !dbg !1683
  br i1 %cmp, label %if.then, label %if.end, !dbg !1684

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1685
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !1686
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !1685
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2333, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay), !dbg !1687
  br label %if.end, !dbg !1688

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1689
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 0, !dbg !1691
  %4 = load i32, i32* %storage_class, align 8, !dbg !1691
  %cmp1 = icmp eq i32 %4, 2, !dbg !1692
  br i1 %cmp1, label %if.then2, label %if.end88, !dbg !1693

if.then2:                                         ; preds = %if.end
  store i64 0, i64* %i, align 8, !dbg !1694
  br label %for.cond, !dbg !1696

for.cond:                                         ; preds = %for.inc, %if.then2
  %5 = load i64, i64* %i, align 8, !dbg !1697
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1699
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 10, !dbg !1700
  %7 = load i64, i64* %colors, align 8, !dbg !1700
  %cmp3 = icmp slt i64 %5, %7, !dbg !1701
  br i1 %cmp3, label %for.body, label %for.end, !dbg !1702

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %channel.addr, align 4, !dbg !1703
  %and = and i32 %8, 1, !dbg !1706
  %cmp4 = icmp ne i32 %and, 0, !dbg !1707
  br i1 %cmp4, label %if.then5, label %if.end18, !dbg !1708

if.then5:                                         ; preds = %for.body
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1709
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 11, !dbg !1709
  %10 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !1709
  %11 = load i64, i64* %i, align 8, !dbg !1709
  %arrayidx = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %10, i64 %11, !dbg !1709
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx, i32 0, i32 2, !dbg !1709
  %12 = load i16, i16* %red, align 2, !dbg !1709
  %conv = zext i16 %12 to i32, !dbg !1709
  %conv6 = sitofp i32 %conv to double, !dbg !1709
  %mul = fmul double 0x3EF0001000100010, %conv6, !dbg !1709
  %13 = load i64, i64* %levels.addr, align 8, !dbg !1709
  %sub = sub i64 %13, 1, !dbg !1709
  %conv7 = uitofp i64 %sub to double, !dbg !1709
  %mul8 = fmul double %mul, %conv7, !dbg !1709
  %call9 = call double @MagickRound(double %mul8), !dbg !1709
  %mul10 = fmul double 6.553500e+04, %call9, !dbg !1709
  %14 = load i64, i64* %levels.addr, align 8, !dbg !1709
  %sub11 = sub nsw i64 %14, 1, !dbg !1709
  %call12 = call i64 @MagickMax(i64 %sub11, i64 1), !dbg !1709
  %conv13 = sitofp i64 %call12 to double, !dbg !1709
  %div = fdiv double %mul10, %conv13, !dbg !1709
  %conv14 = fptoui double %div to i16, !dbg !1709
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1710
  %colormap15 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 11, !dbg !1711
  %16 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap15, align 8, !dbg !1711
  %17 = load i64, i64* %i, align 8, !dbg !1712
  %arrayidx16 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %16, i64 %17, !dbg !1710
  %red17 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx16, i32 0, i32 2, !dbg !1713
  store i16 %conv14, i16* %red17, align 2, !dbg !1714
  br label %if.end18, !dbg !1710

if.end18:                                         ; preds = %if.then5, %for.body
  %18 = load i32, i32* %channel.addr, align 4, !dbg !1715
  %and19 = and i32 %18, 2, !dbg !1717
  %cmp20 = icmp ne i32 %and19, 0, !dbg !1718
  br i1 %cmp20, label %if.then22, label %if.end41, !dbg !1719

if.then22:                                        ; preds = %if.end18
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1720
  %colormap23 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 11, !dbg !1720
  %20 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap23, align 8, !dbg !1720
  %21 = load i64, i64* %i, align 8, !dbg !1720
  %arrayidx24 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %20, i64 %21, !dbg !1720
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx24, i32 0, i32 1, !dbg !1720
  %22 = load i16, i16* %green, align 2, !dbg !1720
  %conv25 = zext i16 %22 to i32, !dbg !1720
  %conv26 = sitofp i32 %conv25 to double, !dbg !1720
  %mul27 = fmul double 0x3EF0001000100010, %conv26, !dbg !1720
  %23 = load i64, i64* %levels.addr, align 8, !dbg !1720
  %sub28 = sub i64 %23, 1, !dbg !1720
  %conv29 = uitofp i64 %sub28 to double, !dbg !1720
  %mul30 = fmul double %mul27, %conv29, !dbg !1720
  %call31 = call double @MagickRound(double %mul30), !dbg !1720
  %mul32 = fmul double 6.553500e+04, %call31, !dbg !1720
  %24 = load i64, i64* %levels.addr, align 8, !dbg !1720
  %sub33 = sub nsw i64 %24, 1, !dbg !1720
  %call34 = call i64 @MagickMax(i64 %sub33, i64 1), !dbg !1720
  %conv35 = sitofp i64 %call34 to double, !dbg !1720
  %div36 = fdiv double %mul32, %conv35, !dbg !1720
  %conv37 = fptoui double %div36 to i16, !dbg !1720
  %25 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1721
  %colormap38 = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 11, !dbg !1722
  %26 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap38, align 8, !dbg !1722
  %27 = load i64, i64* %i, align 8, !dbg !1723
  %arrayidx39 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %26, i64 %27, !dbg !1721
  %green40 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx39, i32 0, i32 1, !dbg !1724
  store i16 %conv37, i16* %green40, align 2, !dbg !1725
  br label %if.end41, !dbg !1721

if.end41:                                         ; preds = %if.then22, %if.end18
  %28 = load i32, i32* %channel.addr, align 4, !dbg !1726
  %and42 = and i32 %28, 4, !dbg !1728
  %cmp43 = icmp ne i32 %and42, 0, !dbg !1729
  br i1 %cmp43, label %if.then45, label %if.end64, !dbg !1730

if.then45:                                        ; preds = %if.end41
  %29 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1731
  %colormap46 = getelementptr inbounds %struct._Image, %struct._Image* %29, i32 0, i32 11, !dbg !1731
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap46, align 8, !dbg !1731
  %31 = load i64, i64* %i, align 8, !dbg !1731
  %arrayidx47 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i64 %31, !dbg !1731
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx47, i32 0, i32 0, !dbg !1731
  %32 = load i16, i16* %blue, align 2, !dbg !1731
  %conv48 = zext i16 %32 to i32, !dbg !1731
  %conv49 = sitofp i32 %conv48 to double, !dbg !1731
  %mul50 = fmul double 0x3EF0001000100010, %conv49, !dbg !1731
  %33 = load i64, i64* %levels.addr, align 8, !dbg !1731
  %sub51 = sub i64 %33, 1, !dbg !1731
  %conv52 = uitofp i64 %sub51 to double, !dbg !1731
  %mul53 = fmul double %mul50, %conv52, !dbg !1731
  %call54 = call double @MagickRound(double %mul53), !dbg !1731
  %mul55 = fmul double 6.553500e+04, %call54, !dbg !1731
  %34 = load i64, i64* %levels.addr, align 8, !dbg !1731
  %sub56 = sub nsw i64 %34, 1, !dbg !1731
  %call57 = call i64 @MagickMax(i64 %sub56, i64 1), !dbg !1731
  %conv58 = sitofp i64 %call57 to double, !dbg !1731
  %div59 = fdiv double %mul55, %conv58, !dbg !1731
  %conv60 = fptoui double %div59 to i16, !dbg !1731
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1732
  %colormap61 = getelementptr inbounds %struct._Image, %struct._Image* %35, i32 0, i32 11, !dbg !1733
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap61, align 8, !dbg !1733
  %37 = load i64, i64* %i, align 8, !dbg !1734
  %arrayidx62 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i64 %37, !dbg !1732
  %blue63 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx62, i32 0, i32 0, !dbg !1735
  store i16 %conv60, i16* %blue63, align 2, !dbg !1736
  br label %if.end64, !dbg !1732

if.end64:                                         ; preds = %if.then45, %if.end41
  %38 = load i32, i32* %channel.addr, align 4, !dbg !1737
  %and65 = and i32 %38, 8, !dbg !1739
  %cmp66 = icmp ne i32 %and65, 0, !dbg !1740
  br i1 %cmp66, label %if.then68, label %if.end87, !dbg !1741

if.then68:                                        ; preds = %if.end64
  %39 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1742
  %colormap69 = getelementptr inbounds %struct._Image, %struct._Image* %39, i32 0, i32 11, !dbg !1742
  %40 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap69, align 8, !dbg !1742
  %41 = load i64, i64* %i, align 8, !dbg !1742
  %arrayidx70 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %40, i64 %41, !dbg !1742
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx70, i32 0, i32 3, !dbg !1742
  %42 = load i16, i16* %opacity, align 2, !dbg !1742
  %conv71 = zext i16 %42 to i32, !dbg !1742
  %conv72 = sitofp i32 %conv71 to double, !dbg !1742
  %mul73 = fmul double 0x3EF0001000100010, %conv72, !dbg !1742
  %43 = load i64, i64* %levels.addr, align 8, !dbg !1742
  %sub74 = sub i64 %43, 1, !dbg !1742
  %conv75 = uitofp i64 %sub74 to double, !dbg !1742
  %mul76 = fmul double %mul73, %conv75, !dbg !1742
  %call77 = call double @MagickRound(double %mul76), !dbg !1742
  %mul78 = fmul double 6.553500e+04, %call77, !dbg !1742
  %44 = load i64, i64* %levels.addr, align 8, !dbg !1742
  %sub79 = sub nsw i64 %44, 1, !dbg !1742
  %call80 = call i64 @MagickMax(i64 %sub79, i64 1), !dbg !1742
  %conv81 = sitofp i64 %call80 to double, !dbg !1742
  %div82 = fdiv double %mul78, %conv81, !dbg !1742
  %conv83 = fptoui double %div82 to i16, !dbg !1742
  %45 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1743
  %colormap84 = getelementptr inbounds %struct._Image, %struct._Image* %45, i32 0, i32 11, !dbg !1744
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap84, align 8, !dbg !1744
  %47 = load i64, i64* %i, align 8, !dbg !1745
  %arrayidx85 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %46, i64 %47, !dbg !1743
  %opacity86 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx85, i32 0, i32 3, !dbg !1746
  store i16 %conv83, i16* %opacity86, align 2, !dbg !1747
  br label %if.end87, !dbg !1743

if.end87:                                         ; preds = %if.then68, %if.end64
  br label %for.inc, !dbg !1748

for.inc:                                          ; preds = %if.end87
  %48 = load i64, i64* %i, align 8, !dbg !1749
  %inc = add nsw i64 %48, 1, !dbg !1749
  store i64 %inc, i64* %i, align 8, !dbg !1749
  br label %for.cond, !dbg !1750, !llvm.loop !1751

for.end:                                          ; preds = %for.cond
  br label %if.end88, !dbg !1752

if.end88:                                         ; preds = %for.end, %if.end
  store i32 1, i32* %status, align 4, !dbg !1753
  store i64 0, i64* %progress, align 8, !dbg !1754
  %49 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1755
  %exception89 = getelementptr inbounds %struct._Image, %struct._Image* %49, i32 0, i32 58, !dbg !1756
  store %struct._ExceptionInfo* %exception89, %struct._ExceptionInfo** %exception, align 8, !dbg !1757
  %50 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1758
  %51 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1759
  %call90 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %50, %struct._ExceptionInfo* %51), !dbg !1760
  store %struct._CacheView* %call90, %struct._CacheView** %image_view, align 8, !dbg !1761
  store i64 0, i64* %y, align 8, !dbg !1762
  br label %for.cond91, !dbg !1764

for.cond91:                                       ; preds = %for.inc241, %if.end88
  %52 = load i64, i64* %y, align 8, !dbg !1765
  %53 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1767
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %53, i32 0, i32 8, !dbg !1768
  %54 = load i64, i64* %rows, align 8, !dbg !1768
  %cmp92 = icmp slt i64 %52, %54, !dbg !1769
  br i1 %cmp92, label %for.body94, label %for.end243, !dbg !1770

for.body94:                                       ; preds = %for.cond91
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !1771, metadata !DIExpression()), !dbg !1774
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !1775, metadata !DIExpression()), !dbg !1777
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1778, metadata !DIExpression()), !dbg !1779
  %55 = load i32, i32* %status, align 4, !dbg !1780
  %cmp95 = icmp eq i32 %55, 0, !dbg !1782
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !1783

if.then97:                                        ; preds = %for.body94
  br label %for.inc241, !dbg !1784

if.end98:                                         ; preds = %for.body94
  %56 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1785
  %57 = load i64, i64* %y, align 8, !dbg !1786
  %58 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1787
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %58, i32 0, i32 7, !dbg !1788
  %59 = load i64, i64* %columns, align 8, !dbg !1788
  %60 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1789
  %call99 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %56, i64 0, i64 %57, i64 %59, i64 1, %struct._ExceptionInfo* %60), !dbg !1790
  store %struct._PixelPacket* %call99, %struct._PixelPacket** %q, align 8, !dbg !1791
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1792
  %cmp100 = icmp eq %struct._PixelPacket* %61, null, !dbg !1794
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !1795

if.then102:                                       ; preds = %if.end98
  store i32 0, i32* %status, align 4, !dbg !1796
  br label %for.inc241, !dbg !1798

if.end103:                                        ; preds = %if.end98
  %62 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1799
  %call104 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %62), !dbg !1800
  store i16* %call104, i16** %indexes, align 8, !dbg !1801
  store i64 0, i64* %x, align 8, !dbg !1802
  br label %for.cond105, !dbg !1804

for.cond105:                                      ; preds = %for.inc222, %if.end103
  %63 = load i64, i64* %x, align 8, !dbg !1805
  %64 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1807
  %columns106 = getelementptr inbounds %struct._Image, %struct._Image* %64, i32 0, i32 7, !dbg !1808
  %65 = load i64, i64* %columns106, align 8, !dbg !1808
  %cmp107 = icmp slt i64 %63, %65, !dbg !1809
  br i1 %cmp107, label %for.body109, label %for.end224, !dbg !1810

for.body109:                                      ; preds = %for.cond105
  %66 = load i32, i32* %channel.addr, align 4, !dbg !1811
  %and110 = and i32 %66, 1, !dbg !1814
  %cmp111 = icmp ne i32 %and110, 0, !dbg !1815
  br i1 %cmp111, label %if.then113, label %if.end129, !dbg !1816

if.then113:                                       ; preds = %for.body109
  %67 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1817
  %red114 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %67, i32 0, i32 2, !dbg !1817
  %68 = load i16, i16* %red114, align 2, !dbg !1817
  %conv115 = zext i16 %68 to i32, !dbg !1817
  %conv116 = sitofp i32 %conv115 to double, !dbg !1817
  %mul117 = fmul double 0x3EF0001000100010, %conv116, !dbg !1817
  %69 = load i64, i64* %levels.addr, align 8, !dbg !1817
  %sub118 = sub i64 %69, 1, !dbg !1817
  %conv119 = uitofp i64 %sub118 to double, !dbg !1817
  %mul120 = fmul double %mul117, %conv119, !dbg !1817
  %call121 = call double @MagickRound(double %mul120), !dbg !1817
  %mul122 = fmul double 6.553500e+04, %call121, !dbg !1817
  %70 = load i64, i64* %levels.addr, align 8, !dbg !1817
  %sub123 = sub nsw i64 %70, 1, !dbg !1817
  %call124 = call i64 @MagickMax(i64 %sub123, i64 1), !dbg !1817
  %conv125 = sitofp i64 %call124 to double, !dbg !1817
  %div126 = fdiv double %mul122, %conv125, !dbg !1817
  %conv127 = fptoui double %div126 to i16, !dbg !1817
  %71 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1817
  %red128 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %71, i32 0, i32 2, !dbg !1817
  store i16 %conv127, i16* %red128, align 2, !dbg !1817
  br label %if.end129, !dbg !1817

if.end129:                                        ; preds = %if.then113, %for.body109
  %72 = load i32, i32* %channel.addr, align 4, !dbg !1818
  %and130 = and i32 %72, 2, !dbg !1820
  %cmp131 = icmp ne i32 %and130, 0, !dbg !1821
  br i1 %cmp131, label %if.then133, label %if.end149, !dbg !1822

if.then133:                                       ; preds = %if.end129
  %73 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1823
  %green134 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %73, i32 0, i32 1, !dbg !1823
  %74 = load i16, i16* %green134, align 2, !dbg !1823
  %conv135 = zext i16 %74 to i32, !dbg !1823
  %conv136 = sitofp i32 %conv135 to double, !dbg !1823
  %mul137 = fmul double 0x3EF0001000100010, %conv136, !dbg !1823
  %75 = load i64, i64* %levels.addr, align 8, !dbg !1823
  %sub138 = sub i64 %75, 1, !dbg !1823
  %conv139 = uitofp i64 %sub138 to double, !dbg !1823
  %mul140 = fmul double %mul137, %conv139, !dbg !1823
  %call141 = call double @MagickRound(double %mul140), !dbg !1823
  %mul142 = fmul double 6.553500e+04, %call141, !dbg !1823
  %76 = load i64, i64* %levels.addr, align 8, !dbg !1823
  %sub143 = sub nsw i64 %76, 1, !dbg !1823
  %call144 = call i64 @MagickMax(i64 %sub143, i64 1), !dbg !1823
  %conv145 = sitofp i64 %call144 to double, !dbg !1823
  %div146 = fdiv double %mul142, %conv145, !dbg !1823
  %conv147 = fptoui double %div146 to i16, !dbg !1823
  %77 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1823
  %green148 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %77, i32 0, i32 1, !dbg !1823
  store i16 %conv147, i16* %green148, align 2, !dbg !1823
  br label %if.end149, !dbg !1823

if.end149:                                        ; preds = %if.then133, %if.end129
  %78 = load i32, i32* %channel.addr, align 4, !dbg !1824
  %and150 = and i32 %78, 4, !dbg !1826
  %cmp151 = icmp ne i32 %and150, 0, !dbg !1827
  br i1 %cmp151, label %if.then153, label %if.end169, !dbg !1828

if.then153:                                       ; preds = %if.end149
  %79 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1829
  %blue154 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %79, i32 0, i32 0, !dbg !1829
  %80 = load i16, i16* %blue154, align 2, !dbg !1829
  %conv155 = zext i16 %80 to i32, !dbg !1829
  %conv156 = sitofp i32 %conv155 to double, !dbg !1829
  %mul157 = fmul double 0x3EF0001000100010, %conv156, !dbg !1829
  %81 = load i64, i64* %levels.addr, align 8, !dbg !1829
  %sub158 = sub i64 %81, 1, !dbg !1829
  %conv159 = uitofp i64 %sub158 to double, !dbg !1829
  %mul160 = fmul double %mul157, %conv159, !dbg !1829
  %call161 = call double @MagickRound(double %mul160), !dbg !1829
  %mul162 = fmul double 6.553500e+04, %call161, !dbg !1829
  %82 = load i64, i64* %levels.addr, align 8, !dbg !1829
  %sub163 = sub nsw i64 %82, 1, !dbg !1829
  %call164 = call i64 @MagickMax(i64 %sub163, i64 1), !dbg !1829
  %conv165 = sitofp i64 %call164 to double, !dbg !1829
  %div166 = fdiv double %mul162, %conv165, !dbg !1829
  %conv167 = fptoui double %div166 to i16, !dbg !1829
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1829
  %blue168 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %83, i32 0, i32 0, !dbg !1829
  store i16 %conv167, i16* %blue168, align 2, !dbg !1829
  br label %if.end169, !dbg !1829

if.end169:                                        ; preds = %if.then153, %if.end149
  %84 = load i32, i32* %channel.addr, align 4, !dbg !1830
  %and170 = and i32 %84, 8, !dbg !1832
  %cmp171 = icmp ne i32 %and170, 0, !dbg !1833
  br i1 %cmp171, label %land.lhs.true, label %if.end191, !dbg !1834

land.lhs.true:                                    ; preds = %if.end169
  %85 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1835
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %85, i32 0, i32 6, !dbg !1836
  %86 = load i32, i32* %matte, align 8, !dbg !1836
  %cmp173 = icmp ne i32 %86, 0, !dbg !1837
  br i1 %cmp173, label %if.then175, label %if.end191, !dbg !1838

if.then175:                                       ; preds = %land.lhs.true
  %87 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1839
  %opacity176 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %87, i32 0, i32 3, !dbg !1839
  %88 = load i16, i16* %opacity176, align 2, !dbg !1839
  %conv177 = zext i16 %88 to i32, !dbg !1839
  %conv178 = sitofp i32 %conv177 to double, !dbg !1839
  %mul179 = fmul double 0x3EF0001000100010, %conv178, !dbg !1839
  %89 = load i64, i64* %levels.addr, align 8, !dbg !1839
  %sub180 = sub i64 %89, 1, !dbg !1839
  %conv181 = uitofp i64 %sub180 to double, !dbg !1839
  %mul182 = fmul double %mul179, %conv181, !dbg !1839
  %call183 = call double @MagickRound(double %mul182), !dbg !1839
  %mul184 = fmul double 6.553500e+04, %call183, !dbg !1839
  %90 = load i64, i64* %levels.addr, align 8, !dbg !1839
  %sub185 = sub nsw i64 %90, 1, !dbg !1839
  %call186 = call i64 @MagickMax(i64 %sub185, i64 1), !dbg !1839
  %conv187 = sitofp i64 %call186 to double, !dbg !1839
  %div188 = fdiv double %mul184, %conv187, !dbg !1839
  %conv189 = fptoui double %div188 to i16, !dbg !1839
  %91 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1839
  %opacity190 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %91, i32 0, i32 3, !dbg !1839
  store i16 %conv189, i16* %opacity190, align 2, !dbg !1839
  br label %if.end191, !dbg !1839

if.end191:                                        ; preds = %if.then175, %land.lhs.true, %if.end169
  %92 = load i32, i32* %channel.addr, align 4, !dbg !1840
  %and192 = and i32 %92, 32, !dbg !1842
  %cmp193 = icmp ne i32 %and192, 0, !dbg !1843
  br i1 %cmp193, label %land.lhs.true195, label %if.end221, !dbg !1844

land.lhs.true195:                                 ; preds = %if.end191
  %93 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1845
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %93, i32 0, i32 1, !dbg !1846
  %94 = load i32, i32* %colorspace, align 4, !dbg !1846
  %cmp196 = icmp eq i32 %94, 12, !dbg !1847
  br i1 %cmp196, label %if.then198, label %if.end221, !dbg !1848

if.then198:                                       ; preds = %land.lhs.true195
  %95 = load i16*, i16** %indexes, align 8, !dbg !1849
  %96 = load i64, i64* %x, align 8, !dbg !1849
  %add.ptr = getelementptr inbounds i16, i16* %95, i64 %96, !dbg !1849
  %cmp199 = icmp ne i16* %add.ptr, null, !dbg !1849
  br i1 %cmp199, label %if.then201, label %if.end220, !dbg !1852

if.then201:                                       ; preds = %if.then198
  %97 = load i16*, i16** %indexes, align 8, !dbg !1849
  %98 = load i64, i64* %x, align 8, !dbg !1849
  %add.ptr202 = getelementptr inbounds i16, i16* %97, i64 %98, !dbg !1849
  %cmp203 = icmp eq i16* %add.ptr202, null, !dbg !1849
  br i1 %cmp203, label %cond.true, label %cond.false, !dbg !1849

cond.true:                                        ; preds = %if.then201
  br label %cond.end, !dbg !1849

cond.false:                                       ; preds = %if.then201
  %99 = load i16*, i16** %indexes, align 8, !dbg !1849
  %100 = load i64, i64* %x, align 8, !dbg !1849
  %add.ptr205 = getelementptr inbounds i16, i16* %99, i64 %100, !dbg !1849
  %101 = load i16, i16* %add.ptr205, align 2, !dbg !1849
  %conv206 = zext i16 %101 to i32, !dbg !1849
  br label %cond.end, !dbg !1849

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv206, %cond.false ], !dbg !1849
  %conv207 = sitofp i32 %cond to double, !dbg !1849
  %mul208 = fmul double 0x3EF0001000100010, %conv207, !dbg !1849
  %102 = load i64, i64* %levels.addr, align 8, !dbg !1849
  %sub209 = sub i64 %102, 1, !dbg !1849
  %conv210 = uitofp i64 %sub209 to double, !dbg !1849
  %mul211 = fmul double %mul208, %conv210, !dbg !1849
  %call212 = call double @MagickRound(double %mul211), !dbg !1849
  %mul213 = fmul double 6.553500e+04, %call212, !dbg !1849
  %103 = load i64, i64* %levels.addr, align 8, !dbg !1849
  %sub214 = sub nsw i64 %103, 1, !dbg !1849
  %call215 = call i64 @MagickMax(i64 %sub214, i64 1), !dbg !1849
  %conv216 = sitofp i64 %call215 to double, !dbg !1849
  %div217 = fdiv double %mul213, %conv216, !dbg !1849
  %conv218 = fptoui double %div217 to i16, !dbg !1849
  %104 = load i16*, i16** %indexes, align 8, !dbg !1849
  %105 = load i64, i64* %x, align 8, !dbg !1849
  %add.ptr219 = getelementptr inbounds i16, i16* %104, i64 %105, !dbg !1849
  store i16 %conv218, i16* %add.ptr219, align 2, !dbg !1849
  br label %if.end220, !dbg !1849

if.end220:                                        ; preds = %cond.end, %if.then198
  br label %if.end221, !dbg !1852

if.end221:                                        ; preds = %if.end220, %land.lhs.true195, %if.end191
  %106 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1853
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %106, i32 1, !dbg !1853
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !1853
  br label %for.inc222, !dbg !1854

for.inc222:                                       ; preds = %if.end221
  %107 = load i64, i64* %x, align 8, !dbg !1855
  %inc223 = add nsw i64 %107, 1, !dbg !1855
  store i64 %inc223, i64* %x, align 8, !dbg !1855
  br label %for.cond105, !dbg !1856, !llvm.loop !1857

for.end224:                                       ; preds = %for.cond105
  %108 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1859
  %109 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1861
  %call225 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %108, %struct._ExceptionInfo* %109), !dbg !1862
  %cmp226 = icmp eq i32 %call225, 0, !dbg !1863
  br i1 %cmp226, label %if.then228, label %if.end229, !dbg !1864

if.then228:                                       ; preds = %for.end224
  store i32 0, i32* %status, align 4, !dbg !1865
  br label %if.end229, !dbg !1866

if.end229:                                        ; preds = %if.then228, %for.end224
  %110 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1867
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %110, i32 0, i32 47, !dbg !1869
  %111 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !1869
  %cmp230 = icmp ne i32 (i8*, i64, i64, i8*)* %111, null, !dbg !1870
  br i1 %cmp230, label %if.then232, label %if.end240, !dbg !1871

if.then232:                                       ; preds = %if.end229
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !1872, metadata !DIExpression()), !dbg !1874
  %112 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1875
  %113 = load i64, i64* %progress, align 8, !dbg !1876
  %inc233 = add nsw i64 %113, 1, !dbg !1876
  store i64 %inc233, i64* %progress, align 8, !dbg !1876
  %114 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1877
  %rows234 = getelementptr inbounds %struct._Image, %struct._Image* %114, i32 0, i32 8, !dbg !1878
  %115 = load i64, i64* %rows234, align 8, !dbg !1878
  %call235 = call i32 @SetImageProgress(%struct._Image* %112, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i64 %113, i64 %115), !dbg !1879
  store i32 %call235, i32* %proceed, align 4, !dbg !1880
  %116 = load i32, i32* %proceed, align 4, !dbg !1881
  %cmp236 = icmp eq i32 %116, 0, !dbg !1883
  br i1 %cmp236, label %if.then238, label %if.end239, !dbg !1884

if.then238:                                       ; preds = %if.then232
  store i32 0, i32* %status, align 4, !dbg !1885
  br label %if.end239, !dbg !1886

if.end239:                                        ; preds = %if.then238, %if.then232
  br label %if.end240, !dbg !1887

if.end240:                                        ; preds = %if.end239, %if.end229
  br label %for.inc241, !dbg !1888

for.inc241:                                       ; preds = %if.end240, %if.then102, %if.then97
  %117 = load i64, i64* %y, align 8, !dbg !1889
  %inc242 = add nsw i64 %117, 1, !dbg !1889
  store i64 %inc242, i64* %y, align 8, !dbg !1889
  br label %for.cond91, !dbg !1890, !llvm.loop !1891

for.end243:                                       ; preds = %for.cond91
  %118 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1893
  %call244 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %118), !dbg !1894
  store %struct._CacheView* %call244, %struct._CacheView** %image_view, align 8, !dbg !1895
  %call245 = call %struct._QuantizeInfo* @AcquireQuantizeInfo(%struct._ImageInfo* null), !dbg !1896
  store %struct._QuantizeInfo* %call245, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !1897
  %119 = load i64, i64* %levels.addr, align 8, !dbg !1898
  %120 = load i64, i64* %levels.addr, align 8, !dbg !1899
  %mul246 = mul i64 %119, %120, !dbg !1900
  %121 = load i64, i64* %levels.addr, align 8, !dbg !1901
  %mul247 = mul i64 %mul246, %121, !dbg !1902
  %call248 = call i64 @MagickMin(i64 %mul247, i64 65537), !dbg !1903
  %122 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !1904
  %number_colors = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %122, i32 0, i32 0, !dbg !1905
  store i64 %call248, i64* %number_colors, align 8, !dbg !1906
  %123 = load i32, i32* %dither.addr, align 4, !dbg !1907
  %124 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !1908
  %dither249 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %124, i32 0, i32 2, !dbg !1909
  store i32 %123, i32* %dither249, align 8, !dbg !1910
  %125 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !1911
  %tree_depth = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %125, i32 0, i32 1, !dbg !1912
  store i64 8, i64* %tree_depth, align 8, !dbg !1913
  %126 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !1914
  %127 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1915
  %call250 = call i32 @QuantizeImage(%struct._QuantizeInfo* %126, %struct._Image* %127), !dbg !1916
  store i32 %call250, i32* %status, align 4, !dbg !1917
  %128 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !1918
  %call251 = call %struct._QuantizeInfo* @DestroyQuantizeInfo(%struct._QuantizeInfo* %128), !dbg !1919
  store %struct._QuantizeInfo* %call251, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !1920
  %129 = load i32, i32* %status, align 4, !dbg !1921
  ret i32 %129, !dbg !1922
}

; Function Attrs: noinline nounwind uwtable
define internal double @MagickRound(double %x) #0 !dbg !1923 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !1926, metadata !DIExpression()), !dbg !1927
  %0 = load double, double* %x.addr, align 8, !dbg !1928
  %1 = load double, double* %x.addr, align 8, !dbg !1930
  %2 = call double @llvm.floor.f64(double %1), !dbg !1931
  %sub = fsub double %0, %2, !dbg !1932
  %3 = load double, double* %x.addr, align 8, !dbg !1933
  %4 = call double @llvm.ceil.f64(double %3), !dbg !1934
  %5 = load double, double* %x.addr, align 8, !dbg !1935
  %sub1 = fsub double %4, %5, !dbg !1936
  %cmp = fcmp olt double %sub, %sub1, !dbg !1937
  br i1 %cmp, label %if.then, label %if.end, !dbg !1938

if.then:                                          ; preds = %entry
  %6 = load double, double* %x.addr, align 8, !dbg !1939
  %7 = call double @llvm.floor.f64(double %6), !dbg !1940
  store double %7, double* %retval, align 8, !dbg !1941
  br label %return, !dbg !1941

if.end:                                           ; preds = %entry
  %8 = load double, double* %x.addr, align 8, !dbg !1942
  %9 = call double @llvm.ceil.f64(double %8), !dbg !1943
  store double %9, double* %retval, align 8, !dbg !1944
  br label %return, !dbg !1944

return:                                           ; preds = %if.end, %if.then
  %10 = load double, double* %retval, align 8, !dbg !1945
  ret double %10, !dbg !1945
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @MagickMax(i64 %x, i64 %y) #0 !dbg !1946 {
entry:
  %retval = alloca i64, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !1950, metadata !DIExpression()), !dbg !1951
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !1952, metadata !DIExpression()), !dbg !1953
  %0 = load i64, i64* %x.addr, align 8, !dbg !1954
  %1 = load i64, i64* %y.addr, align 8, !dbg !1956
  %cmp = icmp sgt i64 %0, %1, !dbg !1957
  br i1 %cmp, label %if.then, label %if.end, !dbg !1958

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %x.addr, align 8, !dbg !1959
  store i64 %2, i64* %retval, align 8, !dbg !1960
  br label %return, !dbg !1960

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %y.addr, align 8, !dbg !1961
  store i64 %3, i64* %retval, align 8, !dbg !1962
  br label %return, !dbg !1962

return:                                           ; preds = %if.end, %if.then
  %4 = load i64, i64* %retval, align 8, !dbg !1963
  ret i64 %4, !dbg !1963
}

declare dso_local %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image*, %struct._ExceptionInfo*) #3

declare dso_local %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #3

declare dso_local i32 @SyncCacheViewAuthenticPixels(%struct._CacheView*, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @SetImageProgress(%struct._Image* %image, i8* %tag, i64 %offset, i64 %extent) #0 !dbg !1964 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %tag.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  %extent.addr = alloca i64, align 8
  %message = alloca [4096 x i8], align 16
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1968, metadata !DIExpression()), !dbg !1969
  store i8* %tag, i8** %tag.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tag.addr, metadata !1970, metadata !DIExpression()), !dbg !1971
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !1972, metadata !DIExpression()), !dbg !1973
  store i64 %extent, i64* %extent.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %extent.addr, metadata !1974, metadata !DIExpression()), !dbg !1975
  call void @llvm.dbg.declare(metadata [4096 x i8]* %message, metadata !1976, metadata !DIExpression()), !dbg !1977
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1978
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 47, !dbg !1980
  %1 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !1980
  %cmp = icmp eq i32 (i8*, i64, i64, i8*)* %1, null, !dbg !1981
  br i1 %cmp, label %if.then, label %if.end, !dbg !1982

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !1983
  br label %return, !dbg !1983

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !1984
  %2 = load i8*, i8** %tag.addr, align 8, !dbg !1985
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1986
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !1987
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !1986
  %call = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i8* %2, i8* %arraydecay1), !dbg !1988
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1989
  %progress_monitor2 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 47, !dbg !1990
  %5 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor2, align 8, !dbg !1990
  %arraydecay3 = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !1991
  %6 = load i64, i64* %offset.addr, align 8, !dbg !1992
  %7 = load i64, i64* %extent.addr, align 8, !dbg !1993
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1994
  %client_data = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 48, !dbg !1995
  %9 = load i8*, i8** %client_data, align 8, !dbg !1995
  %call4 = call i32 %5(i8* %arraydecay3, i64 %6, i64 %7, i8* %9), !dbg !1989
  store i32 %call4, i32* %retval, align 4, !dbg !1996
  br label %return, !dbg !1996

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !1997
  ret i32 %10, !dbg !1997
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @MagickMin(i64 %x, i64 %y) #0 !dbg !1998 {
entry:
  %retval = alloca i64, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !1999, metadata !DIExpression()), !dbg !2000
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !2001, metadata !DIExpression()), !dbg !2002
  %0 = load i64, i64* %x.addr, align 8, !dbg !2003
  %1 = load i64, i64* %y.addr, align 8, !dbg !2005
  %cmp = icmp slt i64 %0, %1, !dbg !2006
  br i1 %cmp, label %if.then, label %if.end, !dbg !2007

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %x.addr, align 8, !dbg !2008
  store i64 %2, i64* %retval, align 8, !dbg !2009
  br label %return, !dbg !2009

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %y.addr, align 8, !dbg !2010
  store i64 %3, i64* %retval, align 8, !dbg !2011
  br label %return, !dbg !2011

return:                                           ; preds = %if.end, %if.then
  %4 = load i64, i64* %retval, align 8, !dbg !2012
  ret i64 %4, !dbg !2012
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @DirectToColormapImage(%struct._Image* %image, %struct._ExceptionInfo* %exception) #0 !dbg !2013 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %status = alloca i32, align 4
  %i = alloca i64, align 8
  %number_colors = alloca i64, align 8
  %y = alloca i64, align 8
  %proceed = alloca i32, align 4
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2016, metadata !DIExpression()), !dbg !2017
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2018, metadata !DIExpression()), !dbg !2019
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !2020, metadata !DIExpression()), !dbg !2021
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2022, metadata !DIExpression()), !dbg !2023
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2024, metadata !DIExpression()), !dbg !2025
  call void @llvm.dbg.declare(metadata i64* %number_colors, metadata !2026, metadata !DIExpression()), !dbg !2027
  call void @llvm.dbg.declare(metadata i64* %y, metadata !2028, metadata !DIExpression()), !dbg !2029
  store i32 1, i32* %status, align 4, !dbg !2030
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2031
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 7, !dbg !2032
  %1 = load i64, i64* %columns, align 8, !dbg !2032
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2033
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 8, !dbg !2034
  %3 = load i64, i64* %rows, align 8, !dbg !2034
  %mul = mul i64 %1, %3, !dbg !2035
  store i64 %mul, i64* %number_colors, align 8, !dbg !2036
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2037
  %5 = load i64, i64* %number_colors, align 8, !dbg !2039
  %call = call i32 @AcquireImageColormap(%struct._Image* %4, i64 %5), !dbg !2040
  %cmp = icmp eq i32 %call, 0, !dbg !2041
  br i1 %cmp, label %if.then, label %if.end5, !dbg !2042

if.then:                                          ; preds = %entry
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2043
  %cmp1 = icmp ne %struct._Image* %6, null, !dbg !2043
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !2046

if.then2:                                         ; preds = %if.then
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2043
  %exception3 = getelementptr inbounds %struct._Image, %struct._Image* %7, i32 0, i32 58, !dbg !2043
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2043
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 53, !dbg !2043
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2043
  %call4 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2633, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay), !dbg !2043
  br label %if.end, !dbg !2043

if.end:                                           ; preds = %if.then2, %if.then
  store i32 0, i32* %retval, align 4, !dbg !2046
  br label %return, !dbg !2046

if.end5:                                          ; preds = %entry
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2047
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 10, !dbg !2049
  %10 = load i64, i64* %colors, align 8, !dbg !2049
  %11 = load i64, i64* %number_colors, align 8, !dbg !2050
  %cmp6 = icmp ne i64 %10, %11, !dbg !2051
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !2052

if.then7:                                         ; preds = %if.end5
  store i32 0, i32* %retval, align 4, !dbg !2053
  br label %return, !dbg !2053

if.end8:                                          ; preds = %if.end5
  store i64 0, i64* %i, align 8, !dbg !2054
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2055
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2056
  %call9 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %12, %struct._ExceptionInfo* %13), !dbg !2057
  store %struct._CacheView* %call9, %struct._CacheView** %image_view, align 8, !dbg !2058
  store i64 0, i64* %y, align 8, !dbg !2059
  br label %for.cond, !dbg !2061

for.cond:                                         ; preds = %for.inc48, %if.end8
  %14 = load i64, i64* %y, align 8, !dbg !2062
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2064
  %rows10 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 8, !dbg !2065
  %16 = load i64, i64* %rows10, align 8, !dbg !2065
  %cmp11 = icmp slt i64 %14, %16, !dbg !2066
  br i1 %cmp11, label %for.body, label %for.end50, !dbg !2067

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !2068, metadata !DIExpression()), !dbg !2070
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !2071, metadata !DIExpression()), !dbg !2072
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !2073, metadata !DIExpression()), !dbg !2074
  call void @llvm.dbg.declare(metadata i64* %x, metadata !2075, metadata !DIExpression()), !dbg !2076
  %17 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2077
  %18 = load i64, i64* %y, align 8, !dbg !2078
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2079
  %columns12 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 7, !dbg !2080
  %20 = load i64, i64* %columns12, align 8, !dbg !2080
  %21 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2081
  %call13 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %17, i64 0, i64 %18, i64 %20, i64 1, %struct._ExceptionInfo* %21), !dbg !2082
  store %struct._PixelPacket* %call13, %struct._PixelPacket** %q, align 8, !dbg !2083
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2084
  %cmp14 = icmp eq %struct._PixelPacket* %22, null, !dbg !2086
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !2087

if.then15:                                        ; preds = %for.body
  br label %for.end50, !dbg !2088

if.end16:                                         ; preds = %for.body
  %23 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2089
  %call17 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %23), !dbg !2090
  store i16* %call17, i16** %indexes, align 8, !dbg !2091
  store i64 0, i64* %x, align 8, !dbg !2092
  br label %for.cond18, !dbg !2094

for.cond18:                                       ; preds = %for.inc, %if.end16
  %24 = load i64, i64* %x, align 8, !dbg !2095
  %25 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2097
  %columns19 = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 7, !dbg !2098
  %26 = load i64, i64* %columns19, align 8, !dbg !2098
  %cmp20 = icmp slt i64 %24, %26, !dbg !2099
  br i1 %cmp20, label %for.body21, label %for.end, !dbg !2100

for.body21:                                       ; preds = %for.cond18
  %27 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2101
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %27, i32 0, i32 2, !dbg !2101
  %28 = load i16, i16* %red, align 2, !dbg !2101
  %29 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2103
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %29, i32 0, i32 11, !dbg !2104
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !2104
  %31 = load i64, i64* %i, align 8, !dbg !2105
  %arrayidx = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i64 %31, !dbg !2103
  %red22 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx, i32 0, i32 2, !dbg !2106
  store i16 %28, i16* %red22, align 2, !dbg !2107
  %32 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2108
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %32, i32 0, i32 1, !dbg !2108
  %33 = load i16, i16* %green, align 2, !dbg !2108
  %34 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2109
  %colormap23 = getelementptr inbounds %struct._Image, %struct._Image* %34, i32 0, i32 11, !dbg !2110
  %35 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap23, align 8, !dbg !2110
  %36 = load i64, i64* %i, align 8, !dbg !2111
  %arrayidx24 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %35, i64 %36, !dbg !2109
  %green25 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx24, i32 0, i32 1, !dbg !2112
  store i16 %33, i16* %green25, align 2, !dbg !2113
  %37 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2114
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %37, i32 0, i32 0, !dbg !2114
  %38 = load i16, i16* %blue, align 2, !dbg !2114
  %39 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2115
  %colormap26 = getelementptr inbounds %struct._Image, %struct._Image* %39, i32 0, i32 11, !dbg !2116
  %40 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap26, align 8, !dbg !2116
  %41 = load i64, i64* %i, align 8, !dbg !2117
  %arrayidx27 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %40, i64 %41, !dbg !2115
  %blue28 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx27, i32 0, i32 0, !dbg !2118
  store i16 %38, i16* %blue28, align 2, !dbg !2119
  %42 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2120
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %42, i32 0, i32 3, !dbg !2120
  %43 = load i16, i16* %opacity, align 2, !dbg !2120
  %44 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2121
  %colormap29 = getelementptr inbounds %struct._Image, %struct._Image* %44, i32 0, i32 11, !dbg !2122
  %45 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap29, align 8, !dbg !2122
  %46 = load i64, i64* %i, align 8, !dbg !2123
  %arrayidx30 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %45, i64 %46, !dbg !2121
  %opacity31 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx30, i32 0, i32 3, !dbg !2124
  store i16 %43, i16* %opacity31, align 2, !dbg !2125
  %47 = load i16*, i16** %indexes, align 8, !dbg !2126
  %48 = load i64, i64* %x, align 8, !dbg !2126
  %add.ptr = getelementptr inbounds i16, i16* %47, i64 %48, !dbg !2126
  %cmp32 = icmp ne i16* %add.ptr, null, !dbg !2126
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !2129

if.then33:                                        ; preds = %for.body21
  %49 = load i64, i64* %i, align 8, !dbg !2126
  %conv = trunc i64 %49 to i16, !dbg !2126
  %50 = load i16*, i16** %indexes, align 8, !dbg !2126
  %51 = load i64, i64* %x, align 8, !dbg !2126
  %add.ptr34 = getelementptr inbounds i16, i16* %50, i64 %51, !dbg !2126
  store i16 %conv, i16* %add.ptr34, align 2, !dbg !2126
  br label %if.end35, !dbg !2126

if.end35:                                         ; preds = %if.then33, %for.body21
  %52 = load i64, i64* %i, align 8, !dbg !2130
  %inc = add nsw i64 %52, 1, !dbg !2130
  store i64 %inc, i64* %i, align 8, !dbg !2130
  %53 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2131
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %53, i32 1, !dbg !2131
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !2131
  br label %for.inc, !dbg !2132

for.inc:                                          ; preds = %if.end35
  %54 = load i64, i64* %x, align 8, !dbg !2133
  %inc36 = add nsw i64 %54, 1, !dbg !2133
  store i64 %inc36, i64* %x, align 8, !dbg !2133
  br label %for.cond18, !dbg !2134, !llvm.loop !2135

for.end:                                          ; preds = %for.cond18
  %55 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2137
  %56 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2139
  %call37 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %55, %struct._ExceptionInfo* %56), !dbg !2140
  %cmp38 = icmp eq i32 %call37, 0, !dbg !2141
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !2142

if.then40:                                        ; preds = %for.end
  br label %for.end50, !dbg !2143

if.end41:                                         ; preds = %for.end
  %57 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2144
  %58 = load i64, i64* %y, align 8, !dbg !2145
  %59 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2146
  %rows42 = getelementptr inbounds %struct._Image, %struct._Image* %59, i32 0, i32 8, !dbg !2147
  %60 = load i64, i64* %rows42, align 8, !dbg !2147
  %call43 = call i32 @SetImageProgress(%struct._Image* %57, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i64 %58, i64 %60), !dbg !2148
  store i32 %call43, i32* %proceed, align 4, !dbg !2149
  %61 = load i32, i32* %proceed, align 4, !dbg !2150
  %cmp44 = icmp eq i32 %61, 0, !dbg !2152
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !2153

if.then46:                                        ; preds = %if.end41
  store i32 0, i32* %status, align 4, !dbg !2154
  br label %if.end47, !dbg !2155

if.end47:                                         ; preds = %if.then46, %if.end41
  br label %for.inc48, !dbg !2156

for.inc48:                                        ; preds = %if.end47
  %62 = load i64, i64* %y, align 8, !dbg !2157
  %inc49 = add nsw i64 %62, 1, !dbg !2157
  store i64 %inc49, i64* %y, align 8, !dbg !2157
  br label %for.cond, !dbg !2158, !llvm.loop !2159

for.end50:                                        ; preds = %if.then40, %if.then15, %for.cond
  %63 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2161
  %call51 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %63), !dbg !2162
  store %struct._CacheView* %call51, %struct._CacheView** %image_view, align 8, !dbg !2163
  %64 = load i32, i32* %status, align 4, !dbg !2164
  store i32 %64, i32* %retval, align 4, !dbg !2165
  br label %return, !dbg !2165

return:                                           ; preds = %for.end50, %if.then7, %if.end
  %65 = load i32, i32* %retval, align 4, !dbg !2166
  ret i32 %65, !dbg !2166
}

declare dso_local i32 @IsGrayImage(%struct._Image*, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @SetGrayscaleImage(%struct._Image* %image) #0 !dbg !2167 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %colormap = alloca %struct._PixelPacket*, align 8
  %i = alloca i64, align 8
  %colormap_index = alloca i64*, align 8
  %j = alloca i64, align 8
  %y = alloca i64, align 8
  %exception12 = alloca %struct._ExceptionInfo*, align 8
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %intensity = alloca i64, align 8
  %indexes157 = alloca i16*, align 8
  %q158 = alloca %struct._PixelPacket*, align 8
  %x159 = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2168, metadata !DIExpression()), !dbg !2169
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !2170, metadata !DIExpression()), !dbg !2171
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !2172, metadata !DIExpression()), !dbg !2173
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2174, metadata !DIExpression()), !dbg !2175
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %colormap, metadata !2176, metadata !DIExpression()), !dbg !2177
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2178, metadata !DIExpression()), !dbg !2179
  call void @llvm.dbg.declare(metadata i64** %colormap_index, metadata !2180, metadata !DIExpression()), !dbg !2181
  call void @llvm.dbg.declare(metadata i64* %j, metadata !2182, metadata !DIExpression()), !dbg !2183
  call void @llvm.dbg.declare(metadata i64* %y, metadata !2184, metadata !DIExpression()), !dbg !2185
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2186
  %type = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 77, !dbg !2188
  %1 = load i32, i32* %type, align 8, !dbg !2188
  %cmp = icmp ne i32 %1, 2, !dbg !2189
  br i1 %cmp, label %if.then, label %if.end, !dbg !2190

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2191
  %call = call i32 @TransformImageColorspace(%struct._Image* %2, i32 2), !dbg !2192
  br label %if.end, !dbg !2193

if.end:                                           ; preds = %if.then, %entry
  %call1 = call i8* @AcquireQuantumMemory(i64 65536, i64 8) #12, !dbg !2194
  %3 = bitcast i8* %call1 to i64*, !dbg !2195
  store i64* %3, i64** %colormap_index, align 8, !dbg !2196
  %4 = load i64*, i64** %colormap_index, align 8, !dbg !2197
  %cmp2 = icmp eq i64* %4, null, !dbg !2199
  br i1 %cmp2, label %if.then3, label %if.end9, !dbg !2200

if.then3:                                         ; preds = %if.end
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2201
  %cmp4 = icmp ne %struct._Image* %5, null, !dbg !2201
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !2204

if.then5:                                         ; preds = %if.then3
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2201
  %exception6 = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 58, !dbg !2201
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2201
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %7, i32 0, i32 53, !dbg !2201
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2201
  %call7 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3345, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay), !dbg !2201
  br label %if.end8, !dbg !2201

if.end8:                                          ; preds = %if.then5, %if.then3
  store i32 0, i32* %retval, align 4, !dbg !2204
  br label %return, !dbg !2204

if.end9:                                          ; preds = %if.end
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2205
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 0, !dbg !2207
  %9 = load i32, i32* %storage_class, align 8, !dbg !2207
  %cmp10 = icmp ne i32 %9, 2, !dbg !2208
  br i1 %cmp10, label %if.then11, label %if.end89, !dbg !2209

if.then11:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception12, metadata !2210, metadata !DIExpression()), !dbg !2212
  store i64 0, i64* %i, align 8, !dbg !2213
  br label %for.cond, !dbg !2215

for.cond:                                         ; preds = %for.inc, %if.then11
  %10 = load i64, i64* %i, align 8, !dbg !2216
  %cmp13 = icmp sle i64 %10, 65535, !dbg !2218
  br i1 %cmp13, label %for.body, label %for.end, !dbg !2219

for.body:                                         ; preds = %for.cond
  %11 = load i64*, i64** %colormap_index, align 8, !dbg !2220
  %12 = load i64, i64* %i, align 8, !dbg !2221
  %arrayidx = getelementptr inbounds i64, i64* %11, i64 %12, !dbg !2220
  store i64 -1, i64* %arrayidx, align 8, !dbg !2222
  br label %for.inc, !dbg !2220

for.inc:                                          ; preds = %for.body
  %13 = load i64, i64* %i, align 8, !dbg !2223
  %inc = add nsw i64 %13, 1, !dbg !2223
  store i64 %inc, i64* %i, align 8, !dbg !2223
  br label %for.cond, !dbg !2224, !llvm.loop !2225

for.end:                                          ; preds = %for.cond
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2227
  %call14 = call i32 @AcquireImageColormap(%struct._Image* %14, i64 65536), !dbg !2229
  %cmp15 = icmp eq i32 %call14, 0, !dbg !2230
  br i1 %cmp15, label %if.then16, label %if.end24, !dbg !2231

if.then16:                                        ; preds = %for.end
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2232
  %cmp17 = icmp ne %struct._Image* %15, null, !dbg !2232
  br i1 %cmp17, label %if.then18, label %if.end23, !dbg !2235

if.then18:                                        ; preds = %if.then16
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2232
  %exception19 = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 58, !dbg !2232
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2232
  %filename20 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 53, !dbg !2232
  %arraydecay21 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename20, i64 0, i64 0, !dbg !2232
  %call22 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception19, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3355, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay21), !dbg !2232
  br label %if.end23, !dbg !2232

if.end23:                                         ; preds = %if.then18, %if.then16
  store i32 0, i32* %retval, align 4, !dbg !2235
  br label %return, !dbg !2235

if.end24:                                         ; preds = %for.end
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2236
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 10, !dbg !2237
  store i64 0, i64* %colors, align 8, !dbg !2238
  store i32 1, i32* %status, align 4, !dbg !2239
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2240
  %exception25 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 58, !dbg !2241
  store %struct._ExceptionInfo* %exception25, %struct._ExceptionInfo** %exception12, align 8, !dbg !2242
  %20 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2243
  %21 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception12, align 8, !dbg !2244
  %call26 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %20, %struct._ExceptionInfo* %21), !dbg !2245
  store %struct._CacheView* %call26, %struct._CacheView** %image_view, align 8, !dbg !2246
  store i64 0, i64* %y, align 8, !dbg !2247
  br label %for.cond27, !dbg !2249

for.cond27:                                       ; preds = %for.inc85, %if.end24
  %22 = load i64, i64* %y, align 8, !dbg !2250
  %23 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2252
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %23, i32 0, i32 8, !dbg !2253
  %24 = load i64, i64* %rows, align 8, !dbg !2253
  %cmp28 = icmp slt i64 %22, %24, !dbg !2254
  br i1 %cmp28, label %for.body29, label %for.end87, !dbg !2255

for.body29:                                       ; preds = %for.cond27
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !2256, metadata !DIExpression()), !dbg !2258
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !2259, metadata !DIExpression()), !dbg !2260
  call void @llvm.dbg.declare(metadata i64* %x, metadata !2261, metadata !DIExpression()), !dbg !2262
  %25 = load i32, i32* %status, align 4, !dbg !2263
  %cmp30 = icmp eq i32 %25, 0, !dbg !2265
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !2266

if.then31:                                        ; preds = %for.body29
  br label %for.inc85, !dbg !2267

if.end32:                                         ; preds = %for.body29
  %26 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2268
  %27 = load i64, i64* %y, align 8, !dbg !2269
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2270
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 7, !dbg !2271
  %29 = load i64, i64* %columns, align 8, !dbg !2271
  %30 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception12, align 8, !dbg !2272
  %call33 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %26, i64 0, i64 %27, i64 %29, i64 1, %struct._ExceptionInfo* %30), !dbg !2273
  store %struct._PixelPacket* %call33, %struct._PixelPacket** %q, align 8, !dbg !2274
  %31 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2275
  %cmp34 = icmp eq %struct._PixelPacket* %31, null, !dbg !2277
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !2278

if.then35:                                        ; preds = %if.end32
  store i32 0, i32* %status, align 4, !dbg !2279
  br label %for.inc85, !dbg !2281

if.end36:                                         ; preds = %if.end32
  %32 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2282
  %call37 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %32), !dbg !2283
  store i16* %call37, i16** %indexes, align 8, !dbg !2284
  store i64 0, i64* %x, align 8, !dbg !2285
  br label %for.cond38, !dbg !2287

for.cond38:                                       ; preds = %for.inc77, %if.end36
  %33 = load i64, i64* %x, align 8, !dbg !2288
  %34 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2290
  %columns39 = getelementptr inbounds %struct._Image, %struct._Image* %34, i32 0, i32 7, !dbg !2291
  %35 = load i64, i64* %columns39, align 8, !dbg !2291
  %cmp40 = icmp slt i64 %33, %35, !dbg !2292
  br i1 %cmp40, label %for.body41, label %for.end79, !dbg !2293

for.body41:                                       ; preds = %for.cond38
  call void @llvm.dbg.declare(metadata i64* %intensity, metadata !2294, metadata !DIExpression()), !dbg !2296
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2297
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 0, i32 2, !dbg !2297
  %37 = load i16, i16* %red, align 2, !dbg !2297
  %call42 = call i32 @ScaleQuantumToMap(i16 zeroext %37), !dbg !2298
  %conv = zext i32 %call42 to i64, !dbg !2298
  store i64 %conv, i64* %intensity, align 8, !dbg !2299
  %38 = load i64*, i64** %colormap_index, align 8, !dbg !2300
  %39 = load i64, i64* %intensity, align 8, !dbg !2302
  %arrayidx43 = getelementptr inbounds i64, i64* %38, i64 %39, !dbg !2300
  %40 = load i64, i64* %arrayidx43, align 8, !dbg !2300
  %cmp44 = icmp slt i64 %40, 0, !dbg !2303
  br i1 %cmp44, label %if.then46, label %if.end69, !dbg !2304

if.then46:                                        ; preds = %for.body41
  %41 = load i64*, i64** %colormap_index, align 8, !dbg !2305
  %42 = load i64, i64* %intensity, align 8, !dbg !2308
  %arrayidx47 = getelementptr inbounds i64, i64* %41, i64 %42, !dbg !2305
  %43 = load i64, i64* %arrayidx47, align 8, !dbg !2305
  %cmp48 = icmp slt i64 %43, 0, !dbg !2309
  br i1 %cmp48, label %if.then50, label %if.end68, !dbg !2310

if.then50:                                        ; preds = %if.then46
  %44 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2311
  %colors51 = getelementptr inbounds %struct._Image, %struct._Image* %44, i32 0, i32 10, !dbg !2313
  %45 = load i64, i64* %colors51, align 8, !dbg !2313
  %46 = load i64*, i64** %colormap_index, align 8, !dbg !2314
  %47 = load i64, i64* %intensity, align 8, !dbg !2315
  %arrayidx52 = getelementptr inbounds i64, i64* %46, i64 %47, !dbg !2314
  store i64 %45, i64* %arrayidx52, align 8, !dbg !2316
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2317
  %red53 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %48, i32 0, i32 2, !dbg !2317
  %49 = load i16, i16* %red53, align 2, !dbg !2317
  %50 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2318
  %colormap54 = getelementptr inbounds %struct._Image, %struct._Image* %50, i32 0, i32 11, !dbg !2319
  %51 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap54, align 8, !dbg !2319
  %52 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2320
  %colors55 = getelementptr inbounds %struct._Image, %struct._Image* %52, i32 0, i32 10, !dbg !2321
  %53 = load i64, i64* %colors55, align 8, !dbg !2321
  %arrayidx56 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %51, i64 %53, !dbg !2318
  %red57 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx56, i32 0, i32 2, !dbg !2322
  store i16 %49, i16* %red57, align 2, !dbg !2323
  %54 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2324
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %54, i32 0, i32 1, !dbg !2324
  %55 = load i16, i16* %green, align 2, !dbg !2324
  %56 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2325
  %colormap58 = getelementptr inbounds %struct._Image, %struct._Image* %56, i32 0, i32 11, !dbg !2326
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap58, align 8, !dbg !2326
  %58 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2327
  %colors59 = getelementptr inbounds %struct._Image, %struct._Image* %58, i32 0, i32 10, !dbg !2328
  %59 = load i64, i64* %colors59, align 8, !dbg !2328
  %arrayidx60 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i64 %59, !dbg !2325
  %green61 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx60, i32 0, i32 1, !dbg !2329
  store i16 %55, i16* %green61, align 2, !dbg !2330
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2331
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i32 0, i32 0, !dbg !2331
  %61 = load i16, i16* %blue, align 2, !dbg !2331
  %62 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2332
  %colormap62 = getelementptr inbounds %struct._Image, %struct._Image* %62, i32 0, i32 11, !dbg !2333
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap62, align 8, !dbg !2333
  %64 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2334
  %colors63 = getelementptr inbounds %struct._Image, %struct._Image* %64, i32 0, i32 10, !dbg !2335
  %65 = load i64, i64* %colors63, align 8, !dbg !2335
  %arrayidx64 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i64 %65, !dbg !2332
  %blue65 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx64, i32 0, i32 0, !dbg !2336
  store i16 %61, i16* %blue65, align 2, !dbg !2337
  %66 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2338
  %colors66 = getelementptr inbounds %struct._Image, %struct._Image* %66, i32 0, i32 10, !dbg !2339
  %67 = load i64, i64* %colors66, align 8, !dbg !2340
  %inc67 = add i64 %67, 1, !dbg !2340
  store i64 %inc67, i64* %colors66, align 8, !dbg !2340
  br label %if.end68, !dbg !2341

if.end68:                                         ; preds = %if.then50, %if.then46
  br label %if.end69, !dbg !2342

if.end69:                                         ; preds = %if.end68, %for.body41
  %68 = load i16*, i16** %indexes, align 8, !dbg !2343
  %69 = load i64, i64* %x, align 8, !dbg !2343
  %add.ptr = getelementptr inbounds i16, i16* %68, i64 %69, !dbg !2343
  %cmp70 = icmp ne i16* %add.ptr, null, !dbg !2343
  br i1 %cmp70, label %if.then72, label %if.end76, !dbg !2346

if.then72:                                        ; preds = %if.end69
  %70 = load i64*, i64** %colormap_index, align 8, !dbg !2343
  %71 = load i64, i64* %intensity, align 8, !dbg !2343
  %arrayidx73 = getelementptr inbounds i64, i64* %70, i64 %71, !dbg !2343
  %72 = load i64, i64* %arrayidx73, align 8, !dbg !2343
  %conv74 = trunc i64 %72 to i16, !dbg !2343
  %73 = load i16*, i16** %indexes, align 8, !dbg !2343
  %74 = load i64, i64* %x, align 8, !dbg !2343
  %add.ptr75 = getelementptr inbounds i16, i16* %73, i64 %74, !dbg !2343
  store i16 %conv74, i16* %add.ptr75, align 2, !dbg !2343
  br label %if.end76, !dbg !2343

if.end76:                                         ; preds = %if.then72, %if.end69
  %75 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2347
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %75, i32 1, !dbg !2347
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !2347
  br label %for.inc77, !dbg !2348

for.inc77:                                        ; preds = %if.end76
  %76 = load i64, i64* %x, align 8, !dbg !2349
  %inc78 = add nsw i64 %76, 1, !dbg !2349
  store i64 %inc78, i64* %x, align 8, !dbg !2349
  br label %for.cond38, !dbg !2350, !llvm.loop !2351

for.end79:                                        ; preds = %for.cond38
  %77 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2353
  %78 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception12, align 8, !dbg !2355
  %call80 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %77, %struct._ExceptionInfo* %78), !dbg !2356
  %cmp81 = icmp eq i32 %call80, 0, !dbg !2357
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !2358

if.then83:                                        ; preds = %for.end79
  store i32 0, i32* %status, align 4, !dbg !2359
  br label %if.end84, !dbg !2360

if.end84:                                         ; preds = %if.then83, %for.end79
  br label %for.inc85, !dbg !2361

for.inc85:                                        ; preds = %if.end84, %if.then35, %if.then31
  %79 = load i64, i64* %y, align 8, !dbg !2362
  %inc86 = add nsw i64 %79, 1, !dbg !2362
  store i64 %inc86, i64* %y, align 8, !dbg !2362
  br label %for.cond27, !dbg !2363, !llvm.loop !2364

for.end87:                                        ; preds = %for.cond27
  %80 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2366
  %call88 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %80), !dbg !2367
  store %struct._CacheView* %call88, %struct._CacheView** %image_view, align 8, !dbg !2368
  br label %if.end89, !dbg !2369

if.end89:                                         ; preds = %for.end87, %if.end9
  store i64 0, i64* %i, align 8, !dbg !2370
  br label %for.cond90, !dbg !2372

for.cond90:                                       ; preds = %for.inc98, %if.end89
  %81 = load i64, i64* %i, align 8, !dbg !2373
  %82 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2375
  %colors91 = getelementptr inbounds %struct._Image, %struct._Image* %82, i32 0, i32 10, !dbg !2376
  %83 = load i64, i64* %colors91, align 8, !dbg !2376
  %cmp92 = icmp slt i64 %81, %83, !dbg !2377
  br i1 %cmp92, label %for.body94, label %for.end100, !dbg !2378

for.body94:                                       ; preds = %for.cond90
  %84 = load i64, i64* %i, align 8, !dbg !2379
  %conv95 = trunc i64 %84 to i16, !dbg !2380
  %85 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2381
  %colormap96 = getelementptr inbounds %struct._Image, %struct._Image* %85, i32 0, i32 11, !dbg !2382
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap96, align 8, !dbg !2382
  %87 = load i64, i64* %i, align 8, !dbg !2383
  %arrayidx97 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i64 %87, !dbg !2381
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx97, i32 0, i32 3, !dbg !2384
  store i16 %conv95, i16* %opacity, align 2, !dbg !2385
  br label %for.inc98, !dbg !2381

for.inc98:                                        ; preds = %for.body94
  %88 = load i64, i64* %i, align 8, !dbg !2386
  %inc99 = add nsw i64 %88, 1, !dbg !2386
  store i64 %inc99, i64* %i, align 8, !dbg !2386
  br label %for.cond90, !dbg !2387, !llvm.loop !2388

for.end100:                                       ; preds = %for.cond90
  %89 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2390
  %colormap101 = getelementptr inbounds %struct._Image, %struct._Image* %89, i32 0, i32 11, !dbg !2391
  %90 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap101, align 8, !dbg !2391
  %91 = bitcast %struct._PixelPacket* %90 to i8*, !dbg !2392
  %92 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2393
  %colors102 = getelementptr inbounds %struct._Image, %struct._Image* %92, i32 0, i32 10, !dbg !2394
  %93 = load i64, i64* %colors102, align 8, !dbg !2394
  call void @qsort(i8* %91, i64 %93, i64 8, i32 (i8*, i8*)* @IntensityCompare), !dbg !2395
  %94 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2396
  %colors103 = getelementptr inbounds %struct._Image, %struct._Image* %94, i32 0, i32 10, !dbg !2397
  %95 = load i64, i64* %colors103, align 8, !dbg !2397
  %call104 = call i8* @AcquireQuantumMemory(i64 %95, i64 8) #12, !dbg !2398
  %96 = bitcast i8* %call104 to %struct._PixelPacket*, !dbg !2399
  store %struct._PixelPacket* %96, %struct._PixelPacket** %colormap, align 8, !dbg !2400
  %97 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !2401
  %cmp105 = icmp eq %struct._PixelPacket* %97, null, !dbg !2403
  br i1 %cmp105, label %if.then107, label %if.end116, !dbg !2404

if.then107:                                       ; preds = %for.end100
  %98 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2405
  %cmp108 = icmp ne %struct._Image* %98, null, !dbg !2405
  br i1 %cmp108, label %if.then110, label %if.end115, !dbg !2408

if.then110:                                       ; preds = %if.then107
  %99 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2405
  %exception111 = getelementptr inbounds %struct._Image, %struct._Image* %99, i32 0, i32 58, !dbg !2405
  %100 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2405
  %filename112 = getelementptr inbounds %struct._Image, %struct._Image* %100, i32 0, i32 53, !dbg !2405
  %arraydecay113 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename112, i64 0, i64 0, !dbg !2405
  %call114 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception111, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3421, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay113), !dbg !2405
  br label %if.end115, !dbg !2405

if.end115:                                        ; preds = %if.then110, %if.then107
  store i32 0, i32* %retval, align 4, !dbg !2408
  br label %return, !dbg !2408

if.end116:                                        ; preds = %for.end100
  store i64 0, i64* %j, align 8, !dbg !2409
  %101 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !2410
  %102 = load i64, i64* %j, align 8, !dbg !2411
  %arrayidx117 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %101, i64 %102, !dbg !2410
  %103 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2412
  %colormap118 = getelementptr inbounds %struct._Image, %struct._Image* %103, i32 0, i32 11, !dbg !2413
  %104 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap118, align 8, !dbg !2413
  %arrayidx119 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %104, i64 0, !dbg !2412
  %105 = bitcast %struct._PixelPacket* %arrayidx117 to i8*, !dbg !2412
  %106 = bitcast %struct._PixelPacket* %arrayidx119 to i8*, !dbg !2412
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %105, i8* align 2 %106, i64 8, i1 false), !dbg !2412
  store i64 0, i64* %i, align 8, !dbg !2414
  br label %for.cond120, !dbg !2416

for.cond120:                                      ; preds = %for.inc142, %if.end116
  %107 = load i64, i64* %i, align 8, !dbg !2417
  %108 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2419
  %colors121 = getelementptr inbounds %struct._Image, %struct._Image* %108, i32 0, i32 10, !dbg !2420
  %109 = load i64, i64* %colors121, align 8, !dbg !2420
  %cmp122 = icmp slt i64 %107, %109, !dbg !2421
  br i1 %cmp122, label %for.body124, label %for.end144, !dbg !2422

for.body124:                                      ; preds = %for.cond120
  %110 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2423
  %111 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !2426
  %112 = load i64, i64* %j, align 8, !dbg !2427
  %arrayidx125 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %111, i64 %112, !dbg !2426
  %113 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2428
  %colormap126 = getelementptr inbounds %struct._Image, %struct._Image* %113, i32 0, i32 11, !dbg !2429
  %114 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap126, align 8, !dbg !2429
  %115 = load i64, i64* %i, align 8, !dbg !2430
  %arrayidx127 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %114, i64 %115, !dbg !2428
  %call128 = call i32 @IsSameColor(%struct._Image* %110, %struct._PixelPacket* %arrayidx125, %struct._PixelPacket* %arrayidx127), !dbg !2431
  %cmp129 = icmp eq i32 %call128, 0, !dbg !2432
  br i1 %cmp129, label %if.then131, label %if.end136, !dbg !2433

if.then131:                                       ; preds = %for.body124
  %116 = load i64, i64* %j, align 8, !dbg !2434
  %inc132 = add nsw i64 %116, 1, !dbg !2434
  store i64 %inc132, i64* %j, align 8, !dbg !2434
  %117 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !2436
  %118 = load i64, i64* %j, align 8, !dbg !2437
  %arrayidx133 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %117, i64 %118, !dbg !2436
  %119 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2438
  %colormap134 = getelementptr inbounds %struct._Image, %struct._Image* %119, i32 0, i32 11, !dbg !2439
  %120 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap134, align 8, !dbg !2439
  %121 = load i64, i64* %i, align 8, !dbg !2440
  %arrayidx135 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %120, i64 %121, !dbg !2438
  %122 = bitcast %struct._PixelPacket* %arrayidx133 to i8*, !dbg !2438
  %123 = bitcast %struct._PixelPacket* %arrayidx135 to i8*, !dbg !2438
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %122, i8* align 2 %123, i64 8, i1 false), !dbg !2438
  br label %if.end136, !dbg !2441

if.end136:                                        ; preds = %if.then131, %for.body124
  %124 = load i64, i64* %j, align 8, !dbg !2442
  %125 = load i64*, i64** %colormap_index, align 8, !dbg !2443
  %126 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2444
  %colormap137 = getelementptr inbounds %struct._Image, %struct._Image* %126, i32 0, i32 11, !dbg !2445
  %127 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap137, align 8, !dbg !2445
  %128 = load i64, i64* %i, align 8, !dbg !2446
  %arrayidx138 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %127, i64 %128, !dbg !2444
  %opacity139 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx138, i32 0, i32 3, !dbg !2447
  %129 = load i16, i16* %opacity139, align 2, !dbg !2447
  %conv140 = zext i16 %129 to i64, !dbg !2448
  %arrayidx141 = getelementptr inbounds i64, i64* %125, i64 %conv140, !dbg !2443
  store i64 %124, i64* %arrayidx141, align 8, !dbg !2449
  br label %for.inc142, !dbg !2450

for.inc142:                                       ; preds = %if.end136
  %130 = load i64, i64* %i, align 8, !dbg !2451
  %inc143 = add nsw i64 %130, 1, !dbg !2451
  store i64 %inc143, i64* %i, align 8, !dbg !2451
  br label %for.cond120, !dbg !2452, !llvm.loop !2453

for.end144:                                       ; preds = %for.cond120
  %131 = load i64, i64* %j, align 8, !dbg !2455
  %add = add nsw i64 %131, 1, !dbg !2456
  %132 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2457
  %colors145 = getelementptr inbounds %struct._Image, %struct._Image* %132, i32 0, i32 10, !dbg !2458
  store i64 %add, i64* %colors145, align 8, !dbg !2459
  %133 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2460
  %colormap146 = getelementptr inbounds %struct._Image, %struct._Image* %133, i32 0, i32 11, !dbg !2461
  %134 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap146, align 8, !dbg !2461
  %135 = bitcast %struct._PixelPacket* %134 to i8*, !dbg !2460
  %call147 = call i8* @RelinquishMagickMemory(i8* %135), !dbg !2462
  %136 = bitcast i8* %call147 to %struct._PixelPacket*, !dbg !2463
  %137 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2464
  %colormap148 = getelementptr inbounds %struct._Image, %struct._Image* %137, i32 0, i32 11, !dbg !2465
  store %struct._PixelPacket* %136, %struct._PixelPacket** %colormap148, align 8, !dbg !2466
  %138 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !2467
  %139 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2468
  %colormap149 = getelementptr inbounds %struct._Image, %struct._Image* %139, i32 0, i32 11, !dbg !2469
  store %struct._PixelPacket* %138, %struct._PixelPacket** %colormap149, align 8, !dbg !2470
  store i32 1, i32* %status, align 4, !dbg !2471
  %140 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2472
  %exception150 = getelementptr inbounds %struct._Image, %struct._Image* %140, i32 0, i32 58, !dbg !2473
  store %struct._ExceptionInfo* %exception150, %struct._ExceptionInfo** %exception, align 8, !dbg !2474
  %141 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2475
  %142 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2476
  %call151 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %141, %struct._ExceptionInfo* %142), !dbg !2477
  store %struct._CacheView* %call151, %struct._CacheView** %image_view, align 8, !dbg !2478
  store i64 0, i64* %y, align 8, !dbg !2479
  br label %for.cond152, !dbg !2481

for.cond152:                                      ; preds = %for.inc199, %for.end144
  %143 = load i64, i64* %y, align 8, !dbg !2482
  %144 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2484
  %rows153 = getelementptr inbounds %struct._Image, %struct._Image* %144, i32 0, i32 8, !dbg !2485
  %145 = load i64, i64* %rows153, align 8, !dbg !2485
  %cmp154 = icmp slt i64 %143, %145, !dbg !2486
  br i1 %cmp154, label %for.body156, label %for.end201, !dbg !2487

for.body156:                                      ; preds = %for.cond152
  call void @llvm.dbg.declare(metadata i16** %indexes157, metadata !2488, metadata !DIExpression()), !dbg !2490
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q158, metadata !2491, metadata !DIExpression()), !dbg !2492
  call void @llvm.dbg.declare(metadata i64* %x159, metadata !2493, metadata !DIExpression()), !dbg !2494
  %146 = load i32, i32* %status, align 4, !dbg !2495
  %cmp160 = icmp eq i32 %146, 0, !dbg !2497
  br i1 %cmp160, label %if.then162, label %if.end163, !dbg !2498

if.then162:                                       ; preds = %for.body156
  br label %for.inc199, !dbg !2499

if.end163:                                        ; preds = %for.body156
  %147 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2500
  %148 = load i64, i64* %y, align 8, !dbg !2501
  %149 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2502
  %columns164 = getelementptr inbounds %struct._Image, %struct._Image* %149, i32 0, i32 7, !dbg !2503
  %150 = load i64, i64* %columns164, align 8, !dbg !2503
  %151 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2504
  %call165 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %147, i64 0, i64 %148, i64 %150, i64 1, %struct._ExceptionInfo* %151), !dbg !2505
  store %struct._PixelPacket* %call165, %struct._PixelPacket** %q158, align 8, !dbg !2506
  %152 = load %struct._PixelPacket*, %struct._PixelPacket** %q158, align 8, !dbg !2507
  %cmp166 = icmp eq %struct._PixelPacket* %152, null, !dbg !2509
  br i1 %cmp166, label %if.then168, label %if.end169, !dbg !2510

if.then168:                                       ; preds = %if.end163
  store i32 0, i32* %status, align 4, !dbg !2511
  br label %for.inc199, !dbg !2513

if.end169:                                        ; preds = %if.end163
  %153 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2514
  %call170 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %153), !dbg !2515
  store i16* %call170, i16** %indexes157, align 8, !dbg !2516
  store i64 0, i64* %x159, align 8, !dbg !2517
  br label %for.cond171, !dbg !2519

for.cond171:                                      ; preds = %for.inc191, %if.end169
  %154 = load i64, i64* %x159, align 8, !dbg !2520
  %155 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2522
  %columns172 = getelementptr inbounds %struct._Image, %struct._Image* %155, i32 0, i32 7, !dbg !2523
  %156 = load i64, i64* %columns172, align 8, !dbg !2523
  %cmp173 = icmp slt i64 %154, %156, !dbg !2524
  br i1 %cmp173, label %for.body175, label %for.end193, !dbg !2525

for.body175:                                      ; preds = %for.cond171
  %157 = load i16*, i16** %indexes157, align 8, !dbg !2526
  %158 = load i64, i64* %x159, align 8, !dbg !2526
  %add.ptr176 = getelementptr inbounds i16, i16* %157, i64 %158, !dbg !2526
  %cmp177 = icmp ne i16* %add.ptr176, null, !dbg !2526
  br i1 %cmp177, label %if.then179, label %if.end190, !dbg !2529

if.then179:                                       ; preds = %for.body175
  %159 = load i64*, i64** %colormap_index, align 8, !dbg !2526
  %160 = load i16*, i16** %indexes157, align 8, !dbg !2526
  %161 = load i64, i64* %x159, align 8, !dbg !2526
  %add.ptr180 = getelementptr inbounds i16, i16* %160, i64 %161, !dbg !2526
  %cmp181 = icmp eq i16* %add.ptr180, null, !dbg !2526
  br i1 %cmp181, label %cond.true, label %cond.false, !dbg !2526

cond.true:                                        ; preds = %if.then179
  br label %cond.end, !dbg !2526

cond.false:                                       ; preds = %if.then179
  %162 = load i16*, i16** %indexes157, align 8, !dbg !2526
  %163 = load i64, i64* %x159, align 8, !dbg !2526
  %add.ptr183 = getelementptr inbounds i16, i16* %162, i64 %163, !dbg !2526
  %164 = load i16, i16* %add.ptr183, align 2, !dbg !2526
  %conv184 = zext i16 %164 to i32, !dbg !2526
  br label %cond.end, !dbg !2526

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv184, %cond.false ], !dbg !2526
  %conv185 = trunc i32 %cond to i16, !dbg !2526
  %call186 = call i32 @ScaleQuantumToMap(i16 zeroext %conv185), !dbg !2526
  %idxprom = zext i32 %call186 to i64, !dbg !2526
  %arrayidx187 = getelementptr inbounds i64, i64* %159, i64 %idxprom, !dbg !2526
  %165 = load i64, i64* %arrayidx187, align 8, !dbg !2526
  %conv188 = trunc i64 %165 to i16, !dbg !2526
  %166 = load i16*, i16** %indexes157, align 8, !dbg !2526
  %167 = load i64, i64* %x159, align 8, !dbg !2526
  %add.ptr189 = getelementptr inbounds i16, i16* %166, i64 %167, !dbg !2526
  store i16 %conv188, i16* %add.ptr189, align 2, !dbg !2526
  br label %if.end190, !dbg !2526

if.end190:                                        ; preds = %cond.end, %for.body175
  br label %for.inc191, !dbg !2529

for.inc191:                                       ; preds = %if.end190
  %168 = load i64, i64* %x159, align 8, !dbg !2530
  %inc192 = add nsw i64 %168, 1, !dbg !2530
  store i64 %inc192, i64* %x159, align 8, !dbg !2530
  br label %for.cond171, !dbg !2531, !llvm.loop !2532

for.end193:                                       ; preds = %for.cond171
  %169 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2534
  %170 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2536
  %call194 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %169, %struct._ExceptionInfo* %170), !dbg !2537
  %cmp195 = icmp eq i32 %call194, 0, !dbg !2538
  br i1 %cmp195, label %if.then197, label %if.end198, !dbg !2539

if.then197:                                       ; preds = %for.end193
  store i32 0, i32* %status, align 4, !dbg !2540
  br label %if.end198, !dbg !2541

if.end198:                                        ; preds = %if.then197, %for.end193
  br label %for.inc199, !dbg !2542

for.inc199:                                       ; preds = %if.end198, %if.then168, %if.then162
  %171 = load i64, i64* %y, align 8, !dbg !2543
  %inc200 = add nsw i64 %171, 1, !dbg !2543
  store i64 %inc200, i64* %y, align 8, !dbg !2543
  br label %for.cond152, !dbg !2544, !llvm.loop !2545

for.end201:                                       ; preds = %for.cond152
  %172 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2547
  %call202 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %172), !dbg !2548
  store %struct._CacheView* %call202, %struct._CacheView** %image_view, align 8, !dbg !2549
  %173 = load i64*, i64** %colormap_index, align 8, !dbg !2550
  %174 = bitcast i64* %173 to i8*, !dbg !2550
  %call203 = call i8* @RelinquishMagickMemory(i8* %174), !dbg !2551
  %175 = bitcast i8* %call203 to i64*, !dbg !2552
  store i64* %175, i64** %colormap_index, align 8, !dbg !2553
  %176 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2554
  %type204 = getelementptr inbounds %struct._Image, %struct._Image* %176, i32 0, i32 77, !dbg !2555
  store i32 2, i32* %type204, align 8, !dbg !2556
  %177 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2557
  %178 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2559
  %exception205 = getelementptr inbounds %struct._Image, %struct._Image* %178, i32 0, i32 58, !dbg !2560
  %call206 = call i32 @IsMonochromeImage(%struct._Image* %177, %struct._ExceptionInfo* %exception205), !dbg !2561
  %cmp207 = icmp ne i32 %call206, 0, !dbg !2562
  br i1 %cmp207, label %if.then209, label %if.end211, !dbg !2563

if.then209:                                       ; preds = %for.end201
  %179 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2564
  %type210 = getelementptr inbounds %struct._Image, %struct._Image* %179, i32 0, i32 77, !dbg !2565
  store i32 1, i32* %type210, align 8, !dbg !2566
  br label %if.end211, !dbg !2564

if.end211:                                        ; preds = %if.then209, %for.end201
  %180 = load i32, i32* %status, align 4, !dbg !2567
  store i32 %180, i32* %retval, align 4, !dbg !2568
  br label %return, !dbg !2568

return:                                           ; preds = %if.end211, %if.end115, %if.end23, %if.end8
  %181 = load i32, i32* %retval, align 4, !dbg !2569
  ret i32 %181, !dbg !2569
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._CubeInfo* @GetCubeInfo(%struct._QuantizeInfo* %quantize_info, i64 %depth, i64 %maximum_colors) #0 !dbg !2570 {
entry:
  %retval = alloca %struct._CubeInfo*, align 8
  %quantize_info.addr = alloca %struct._QuantizeInfo*, align 8
  %depth.addr = alloca i64, align 8
  %maximum_colors.addr = alloca i64, align 8
  %cube_info = alloca %struct._CubeInfo*, align 8
  %sum = alloca float, align 4
  %weight = alloca float, align 4
  %i = alloca i64, align 8
  %length = alloca i64, align 8
  store %struct._QuantizeInfo* %quantize_info, %struct._QuantizeInfo** %quantize_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantizeInfo** %quantize_info.addr, metadata !2573, metadata !DIExpression()), !dbg !2574
  store i64 %depth, i64* %depth.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %depth.addr, metadata !2575, metadata !DIExpression()), !dbg !2576
  store i64 %maximum_colors, i64* %maximum_colors.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %maximum_colors.addr, metadata !2577, metadata !DIExpression()), !dbg !2578
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info, metadata !2579, metadata !DIExpression()), !dbg !2580
  call void @llvm.dbg.declare(metadata float* %sum, metadata !2581, metadata !DIExpression()), !dbg !2582
  call void @llvm.dbg.declare(metadata float* %weight, metadata !2583, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2585, metadata !DIExpression()), !dbg !2586
  call void @llvm.dbg.declare(metadata i64* %length, metadata !2587, metadata !DIExpression()), !dbg !2588
  %call = call i8* @AcquireMagickMemory(i64 504) #9, !dbg !2589
  %0 = bitcast i8* %call to %struct._CubeInfo*, !dbg !2590
  store %struct._CubeInfo* %0, %struct._CubeInfo** %cube_info, align 8, !dbg !2591
  %1 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2592
  %cmp = icmp eq %struct._CubeInfo* %1, null, !dbg !2594
  br i1 %cmp, label %if.then, label %if.end, !dbg !2595

if.then:                                          ; preds = %entry
  store %struct._CubeInfo* null, %struct._CubeInfo** %retval, align 8, !dbg !2596
  br label %return, !dbg !2596

if.end:                                           ; preds = %entry
  %2 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2597
  %3 = bitcast %struct._CubeInfo* %2 to i8*, !dbg !2597
  %call1 = call i8* @ResetMagickMemory(i8* %3, i32 0, i64 504), !dbg !2598
  %4 = load i64, i64* %depth.addr, align 8, !dbg !2599
  %5 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2600
  %depth2 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %5, i32 0, i32 22, !dbg !2601
  store i64 %4, i64* %depth2, align 8, !dbg !2602
  %6 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2603
  %depth3 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %6, i32 0, i32 22, !dbg !2605
  %7 = load i64, i64* %depth3, align 8, !dbg !2605
  %cmp4 = icmp ugt i64 %7, 8, !dbg !2606
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !2607

if.then5:                                         ; preds = %if.end
  %8 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2608
  %depth6 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %8, i32 0, i32 22, !dbg !2609
  store i64 8, i64* %depth6, align 8, !dbg !2610
  br label %if.end7, !dbg !2608

if.end7:                                          ; preds = %if.then5, %if.end
  %9 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2611
  %depth8 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %9, i32 0, i32 22, !dbg !2613
  %10 = load i64, i64* %depth8, align 8, !dbg !2613
  %cmp9 = icmp ult i64 %10, 2, !dbg !2614
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !2615

if.then10:                                        ; preds = %if.end7
  %11 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2616
  %depth11 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %11, i32 0, i32 22, !dbg !2617
  store i64 2, i64* %depth11, align 8, !dbg !2618
  br label %if.end12, !dbg !2616

if.end12:                                         ; preds = %if.then10, %if.end7
  %12 = load i64, i64* %maximum_colors.addr, align 8, !dbg !2619
  %13 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2620
  %maximum_colors13 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %13, i32 0, i32 2, !dbg !2621
  store i64 %12, i64* %maximum_colors13, align 8, !dbg !2622
  %14 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2623
  %call14 = call %struct._NodeInfo* @GetNodeInfo(%struct._CubeInfo* %14, i64 0, i64 0, %struct._NodeInfo* null), !dbg !2624
  %15 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2625
  %root = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %15, i32 0, i32 0, !dbg !2626
  store %struct._NodeInfo* %call14, %struct._NodeInfo** %root, align 8, !dbg !2627
  %16 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2628
  %root15 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %16, i32 0, i32 0, !dbg !2630
  %17 = load %struct._NodeInfo*, %struct._NodeInfo** %root15, align 8, !dbg !2630
  %cmp16 = icmp eq %struct._NodeInfo* %17, null, !dbg !2631
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !2632

if.then17:                                        ; preds = %if.end12
  store %struct._CubeInfo* null, %struct._CubeInfo** %retval, align 8, !dbg !2633
  br label %return, !dbg !2633

if.end18:                                         ; preds = %if.end12
  %18 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2634
  %root19 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %18, i32 0, i32 0, !dbg !2635
  %19 = load %struct._NodeInfo*, %struct._NodeInfo** %root19, align 8, !dbg !2635
  %20 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2636
  %root20 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %20, i32 0, i32 0, !dbg !2637
  %21 = load %struct._NodeInfo*, %struct._NodeInfo** %root20, align 8, !dbg !2637
  %parent = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %21, i32 0, i32 0, !dbg !2638
  store %struct._NodeInfo* %19, %struct._NodeInfo** %parent, align 8, !dbg !2639
  %22 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !2640
  %call21 = call %struct._QuantizeInfo* @CloneQuantizeInfo(%struct._QuantizeInfo* %22), !dbg !2641
  %23 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2642
  %quantize_info22 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %23, i32 0, i32 18, !dbg !2643
  store %struct._QuantizeInfo* %call21, %struct._QuantizeInfo** %quantize_info22, align 8, !dbg !2644
  %24 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2645
  %quantize_info23 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %24, i32 0, i32 18, !dbg !2647
  %25 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info23, align 8, !dbg !2647
  %dither = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %25, i32 0, i32 2, !dbg !2648
  %26 = load i32, i32* %dither, align 8, !dbg !2648
  %cmp24 = icmp eq i32 %26, 0, !dbg !2649
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !2650

if.then25:                                        ; preds = %if.end18
  %27 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2651
  store %struct._CubeInfo* %27, %struct._CubeInfo** %retval, align 8, !dbg !2652
  br label %return, !dbg !2652

if.end26:                                         ; preds = %if.end18
  store i64 16777216, i64* %length, align 8, !dbg !2653
  %28 = load i64, i64* %length, align 8, !dbg !2654
  %call27 = call %struct._MemoryInfo* @AcquireVirtualMemory(i64 %28, i64 8) #12, !dbg !2655
  %29 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2656
  %memory_info = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %29, i32 0, i32 14, !dbg !2657
  store %struct._MemoryInfo* %call27, %struct._MemoryInfo** %memory_info, align 8, !dbg !2658
  %30 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2659
  %memory_info28 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %30, i32 0, i32 14, !dbg !2661
  %31 = load %struct._MemoryInfo*, %struct._MemoryInfo** %memory_info28, align 8, !dbg !2661
  %cmp29 = icmp eq %struct._MemoryInfo* %31, null, !dbg !2662
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !2663

if.then30:                                        ; preds = %if.end26
  store %struct._CubeInfo* null, %struct._CubeInfo** %retval, align 8, !dbg !2664
  br label %return, !dbg !2664

if.end31:                                         ; preds = %if.end26
  %32 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2665
  %memory_info32 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %32, i32 0, i32 14, !dbg !2666
  %33 = load %struct._MemoryInfo*, %struct._MemoryInfo** %memory_info32, align 8, !dbg !2666
  %call33 = call i8* @GetVirtualMemoryBlob(%struct._MemoryInfo* %33), !dbg !2667
  %34 = bitcast i8* %call33 to i64*, !dbg !2668
  %35 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2669
  %cache = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %35, i32 0, i32 15, !dbg !2670
  store i64* %34, i64** %cache, align 8, !dbg !2671
  store i64 0, i64* %i, align 8, !dbg !2672
  br label %for.cond, !dbg !2674

for.cond:                                         ; preds = %for.inc, %if.end31
  %36 = load i64, i64* %i, align 8, !dbg !2675
  %37 = load i64, i64* %length, align 8, !dbg !2677
  %cmp34 = icmp slt i64 %36, %37, !dbg !2678
  br i1 %cmp34, label %for.body, label %for.end, !dbg !2679

for.body:                                         ; preds = %for.cond
  %38 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2680
  %cache35 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %38, i32 0, i32 15, !dbg !2681
  %39 = load i64*, i64** %cache35, align 8, !dbg !2681
  %40 = load i64, i64* %i, align 8, !dbg !2682
  %arrayidx = getelementptr inbounds i64, i64* %39, i64 %40, !dbg !2680
  store i64 -1, i64* %arrayidx, align 8, !dbg !2683
  br label %for.inc, !dbg !2680

for.inc:                                          ; preds = %for.body
  %41 = load i64, i64* %i, align 8, !dbg !2684
  %inc = add nsw i64 %41, 1, !dbg !2684
  store i64 %inc, i64* %i, align 8, !dbg !2684
  br label %for.cond, !dbg !2685, !llvm.loop !2686

for.end:                                          ; preds = %for.cond
  store float 1.000000e+00, float* %weight, align 4, !dbg !2688
  store i64 0, i64* %i, align 8, !dbg !2689
  br label %for.cond36, !dbg !2691

for.cond36:                                       ; preds = %for.inc47, %for.end
  %42 = load i64, i64* %i, align 8, !dbg !2692
  %cmp37 = icmp slt i64 %42, 16, !dbg !2694
  br i1 %cmp37, label %for.body38, label %for.end49, !dbg !2695

for.body38:                                       ; preds = %for.cond36
  %43 = load float, float* %weight, align 4, !dbg !2696
  %conv = fpext float %43 to double, !dbg !2696
  %call39 = call double @PerceptibleReciprocal(double %conv), !dbg !2698
  %conv40 = fptrunc double %call39 to float, !dbg !2698
  %44 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2699
  %weights = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %44, i32 0, i32 17, !dbg !2700
  %45 = load i64, i64* %i, align 8, !dbg !2701
  %sub = sub nsw i64 16, %45, !dbg !2702
  %sub41 = sub nsw i64 %sub, 1, !dbg !2703
  %arrayidx42 = getelementptr inbounds [16 x float], [16 x float]* %weights, i64 0, i64 %sub41, !dbg !2699
  store float %conv40, float* %arrayidx42, align 4, !dbg !2704
  %call43 = call double @log(double 6.553600e+04) #13, !dbg !2705
  %div = fdiv double %call43, 1.500000e+01, !dbg !2706
  %call44 = call double @exp(double %div) #13, !dbg !2707
  %46 = load float, float* %weight, align 4, !dbg !2708
  %conv45 = fpext float %46 to double, !dbg !2708
  %mul = fmul double %conv45, %call44, !dbg !2708
  %conv46 = fptrunc double %mul to float, !dbg !2708
  store float %conv46, float* %weight, align 4, !dbg !2708
  br label %for.inc47, !dbg !2709

for.inc47:                                        ; preds = %for.body38
  %47 = load i64, i64* %i, align 8, !dbg !2710
  %inc48 = add nsw i64 %47, 1, !dbg !2710
  store i64 %inc48, i64* %i, align 8, !dbg !2710
  br label %for.cond36, !dbg !2711, !llvm.loop !2712

for.end49:                                        ; preds = %for.cond36
  store float 0.000000e+00, float* %weight, align 4, !dbg !2714
  store i64 0, i64* %i, align 8, !dbg !2715
  br label %for.cond50, !dbg !2717

for.cond50:                                       ; preds = %for.inc56, %for.end49
  %48 = load i64, i64* %i, align 8, !dbg !2718
  %cmp51 = icmp slt i64 %48, 16, !dbg !2720
  br i1 %cmp51, label %for.body53, label %for.end58, !dbg !2721

for.body53:                                       ; preds = %for.cond50
  %49 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2722
  %weights54 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %49, i32 0, i32 17, !dbg !2723
  %50 = load i64, i64* %i, align 8, !dbg !2724
  %arrayidx55 = getelementptr inbounds [16 x float], [16 x float]* %weights54, i64 0, i64 %50, !dbg !2722
  %51 = load float, float* %arrayidx55, align 4, !dbg !2722
  %52 = load float, float* %weight, align 4, !dbg !2725
  %add = fadd float %52, %51, !dbg !2725
  store float %add, float* %weight, align 4, !dbg !2725
  br label %for.inc56, !dbg !2726

for.inc56:                                        ; preds = %for.body53
  %53 = load i64, i64* %i, align 8, !dbg !2727
  %inc57 = add nsw i64 %53, 1, !dbg !2727
  store i64 %inc57, i64* %i, align 8, !dbg !2727
  br label %for.cond50, !dbg !2728, !llvm.loop !2729

for.end58:                                        ; preds = %for.cond50
  store float 0.000000e+00, float* %sum, align 4, !dbg !2731
  store i64 0, i64* %i, align 8, !dbg !2732
  br label %for.cond59, !dbg !2734

for.cond59:                                       ; preds = %for.inc69, %for.end58
  %54 = load i64, i64* %i, align 8, !dbg !2735
  %cmp60 = icmp slt i64 %54, 16, !dbg !2737
  br i1 %cmp60, label %for.body62, label %for.end71, !dbg !2738

for.body62:                                       ; preds = %for.cond59
  %55 = load float, float* %weight, align 4, !dbg !2739
  %56 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2741
  %weights63 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %56, i32 0, i32 17, !dbg !2742
  %57 = load i64, i64* %i, align 8, !dbg !2743
  %arrayidx64 = getelementptr inbounds [16 x float], [16 x float]* %weights63, i64 0, i64 %57, !dbg !2741
  %58 = load float, float* %arrayidx64, align 4, !dbg !2744
  %div65 = fdiv float %58, %55, !dbg !2744
  store float %div65, float* %arrayidx64, align 4, !dbg !2744
  %59 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2745
  %weights66 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %59, i32 0, i32 17, !dbg !2746
  %60 = load i64, i64* %i, align 8, !dbg !2747
  %arrayidx67 = getelementptr inbounds [16 x float], [16 x float]* %weights66, i64 0, i64 %60, !dbg !2745
  %61 = load float, float* %arrayidx67, align 4, !dbg !2745
  %62 = load float, float* %sum, align 4, !dbg !2748
  %add68 = fadd float %62, %61, !dbg !2748
  store float %add68, float* %sum, align 4, !dbg !2748
  br label %for.inc69, !dbg !2749

for.inc69:                                        ; preds = %for.body62
  %63 = load i64, i64* %i, align 8, !dbg !2750
  %inc70 = add nsw i64 %63, 1, !dbg !2750
  store i64 %inc70, i64* %i, align 8, !dbg !2750
  br label %for.cond59, !dbg !2751, !llvm.loop !2752

for.end71:                                        ; preds = %for.cond59
  %64 = load float, float* %sum, align 4, !dbg !2754
  %conv72 = fpext float %64 to double, !dbg !2754
  %sub73 = fsub double 1.000000e+00, %conv72, !dbg !2755
  %65 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2756
  %weights74 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %65, i32 0, i32 17, !dbg !2757
  %arrayidx75 = getelementptr inbounds [16 x float], [16 x float]* %weights74, i64 0, i64 0, !dbg !2756
  %66 = load float, float* %arrayidx75, align 8, !dbg !2758
  %conv76 = fpext float %66 to double, !dbg !2758
  %add77 = fadd double %conv76, %sub73, !dbg !2758
  %conv78 = fptrunc double %add77 to float, !dbg !2758
  store float %conv78, float* %arrayidx75, align 8, !dbg !2758
  %67 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !2759
  store %struct._CubeInfo* %67, %struct._CubeInfo** %retval, align 8, !dbg !2760
  br label %return, !dbg !2760

return:                                           ; preds = %for.end71, %if.then30, %if.then25, %if.then17, %if.then
  %68 = load %struct._CubeInfo*, %struct._CubeInfo** %retval, align 8, !dbg !2761
  ret %struct._CubeInfo* %68, !dbg !2761
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ClassifyImageColors(%struct._CubeInfo* %cube_info, %struct._Image* %image, %struct._ExceptionInfo* %exception) #0 !dbg !2762 {
entry:
  %cube_info.addr = alloca %struct._CubeInfo*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %proceed = alloca i32, align 4
  %bisect = alloca float, align 4
  %node_info = alloca %struct._NodeInfo*, align 8
  %error = alloca %struct._RealPixelPacket, align 4
  %mid = alloca %struct._RealPixelPacket, align 4
  %midpoint = alloca %struct._RealPixelPacket, align 4
  %pixel = alloca %struct._RealPixelPacket, align 4
  %count = alloca i64, align 8
  %id = alloca i64, align 8
  %index = alloca i64, align 8
  %level = alloca i64, align 8
  %y = alloca i64, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %p234 = alloca %struct._PixelPacket*, align 8
  %x235 = alloca i64, align 8
  store %struct._CubeInfo* %cube_info, %struct._CubeInfo** %cube_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info.addr, metadata !2765, metadata !DIExpression()), !dbg !2766
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2767, metadata !DIExpression()), !dbg !2768
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2769, metadata !DIExpression()), !dbg !2770
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !2771, metadata !DIExpression()), !dbg !2772
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !2773, metadata !DIExpression()), !dbg !2774
  call void @llvm.dbg.declare(metadata float* %bisect, metadata !2775, metadata !DIExpression()), !dbg !2776
  call void @llvm.dbg.declare(metadata %struct._NodeInfo** %node_info, metadata !2777, metadata !DIExpression()), !dbg !2778
  call void @llvm.dbg.declare(metadata %struct._RealPixelPacket* %error, metadata !2779, metadata !DIExpression()), !dbg !2780
  call void @llvm.dbg.declare(metadata %struct._RealPixelPacket* %mid, metadata !2781, metadata !DIExpression()), !dbg !2782
  call void @llvm.dbg.declare(metadata %struct._RealPixelPacket* %midpoint, metadata !2783, metadata !DIExpression()), !dbg !2784
  call void @llvm.dbg.declare(metadata %struct._RealPixelPacket* %pixel, metadata !2785, metadata !DIExpression()), !dbg !2786
  call void @llvm.dbg.declare(metadata i64* %count, metadata !2787, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.declare(metadata i64* %id, metadata !2789, metadata !DIExpression()), !dbg !2790
  call void @llvm.dbg.declare(metadata i64* %index, metadata !2791, metadata !DIExpression()), !dbg !2792
  call void @llvm.dbg.declare(metadata i64* %level, metadata !2793, metadata !DIExpression()), !dbg !2794
  call void @llvm.dbg.declare(metadata i64* %y, metadata !2795, metadata !DIExpression()), !dbg !2796
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2797
  %1 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !2798
  call void @SetAssociatedAlpha(%struct._Image* %0, %struct._CubeInfo* %1), !dbg !2799
  %2 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !2800
  %quantize_info = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %2, i32 0, i32 18, !dbg !2802
  %3 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !2802
  %colorspace = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %3, i32 0, i32 3, !dbg !2803
  %4 = load i32, i32* %colorspace, align 4, !dbg !2803
  %cmp = icmp ne i32 %4, 0, !dbg !2804
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !2805

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !2806
  %quantize_info1 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %5, i32 0, i32 18, !dbg !2807
  %6 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info1, align 8, !dbg !2807
  %colorspace2 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %6, i32 0, i32 3, !dbg !2808
  %7 = load i32, i32* %colorspace2, align 4, !dbg !2808
  %cmp3 = icmp ne i32 %7, 12, !dbg !2809
  br i1 %cmp3, label %if.then, label %if.else, !dbg !2810

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2811
  %9 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !2812
  %quantize_info4 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %9, i32 0, i32 18, !dbg !2813
  %10 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info4, align 8, !dbg !2813
  %colorspace5 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %10, i32 0, i32 3, !dbg !2814
  %11 = load i32, i32* %colorspace5, align 4, !dbg !2814
  %call = call i32 @TransformImageColorspace(%struct._Image* %8, i32 %11), !dbg !2815
  br label %if.end11, !dbg !2816

if.else:                                          ; preds = %land.lhs.true, %entry
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2817
  %colorspace6 = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 1, !dbg !2819
  %13 = load i32, i32* %colorspace6, align 4, !dbg !2819
  %call7 = call i32 @IssRGBCompatibleColorspace(i32 %13), !dbg !2820
  %cmp8 = icmp eq i32 %call7, 0, !dbg !2821
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !2822

if.then9:                                         ; preds = %if.else
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2823
  %call10 = call i32 @TransformImageColorspace(%struct._Image* %14, i32 13), !dbg !2824
  br label %if.end, !dbg !2825

if.end:                                           ; preds = %if.then9, %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  %red = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %midpoint, i32 0, i32 0, !dbg !2826
  store float 3.276750e+04, float* %red, align 4, !dbg !2827
  %green = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %midpoint, i32 0, i32 1, !dbg !2828
  store float 3.276750e+04, float* %green, align 4, !dbg !2829
  %blue = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %midpoint, i32 0, i32 2, !dbg !2830
  store float 3.276750e+04, float* %blue, align 4, !dbg !2831
  %opacity = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %midpoint, i32 0, i32 3, !dbg !2832
  store float 3.276750e+04, float* %opacity, align 4, !dbg !2833
  %opacity12 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 3, !dbg !2834
  store float 0.000000e+00, float* %opacity12, align 4, !dbg !2835
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2836
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2837
  %call13 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %15, %struct._ExceptionInfo* %16), !dbg !2838
  store %struct._CacheView* %call13, %struct._CacheView** %image_view, align 8, !dbg !2839
  store i64 0, i64* %y, align 8, !dbg !2840
  br label %for.cond, !dbg !2842

for.cond:                                         ; preds = %for.inc225, %if.end11
  %17 = load i64, i64* %y, align 8, !dbg !2843
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2845
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 8, !dbg !2846
  %19 = load i64, i64* %rows, align 8, !dbg !2846
  %cmp14 = icmp slt i64 %17, %19, !dbg !2847
  br i1 %cmp14, label %for.body, label %for.end227, !dbg !2848

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !2849, metadata !DIExpression()), !dbg !2851
  call void @llvm.dbg.declare(metadata i64* %x, metadata !2852, metadata !DIExpression()), !dbg !2853
  %20 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2854
  %21 = load i64, i64* %y, align 8, !dbg !2855
  %22 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2856
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %22, i32 0, i32 7, !dbg !2857
  %23 = load i64, i64* %columns, align 8, !dbg !2857
  %24 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2858
  %call15 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %20, i64 0, i64 %21, i64 %23, i64 1, %struct._ExceptionInfo* %24), !dbg !2859
  store %struct._PixelPacket* %call15, %struct._PixelPacket** %p, align 8, !dbg !2860
  %25 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2861
  %cmp16 = icmp eq %struct._PixelPacket* %25, null, !dbg !2863
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !2864

if.then17:                                        ; preds = %for.body
  br label %for.end227, !dbg !2865

if.end18:                                         ; preds = %for.body
  %26 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !2866
  %nodes = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %26, i32 0, i32 9, !dbg !2868
  %27 = load i64, i64* %nodes, align 8, !dbg !2868
  %cmp19 = icmp ugt i64 %27, 266817, !dbg !2869
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !2870

if.then20:                                        ; preds = %if.end18
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2871
  %29 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !2873
  %30 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !2874
  %root = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %30, i32 0, i32 0, !dbg !2875
  %31 = load %struct._NodeInfo*, %struct._NodeInfo** %root, align 8, !dbg !2875
  call void @PruneLevel(%struct._Image* %28, %struct._CubeInfo* %29, %struct._NodeInfo* %31), !dbg !2876
  %32 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !2877
  %depth = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %32, i32 0, i32 22, !dbg !2878
  %33 = load i64, i64* %depth, align 8, !dbg !2879
  %dec = add i64 %33, -1, !dbg !2879
  store i64 %dec, i64* %depth, align 8, !dbg !2879
  br label %if.end21, !dbg !2880

if.end21:                                         ; preds = %if.then20, %if.end18
  store i64 0, i64* %x, align 8, !dbg !2881
  br label %for.cond22, !dbg !2883

for.cond22:                                       ; preds = %for.inc210, %if.end21
  %34 = load i64, i64* %x, align 8, !dbg !2884
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2886
  %columns23 = getelementptr inbounds %struct._Image, %struct._Image* %35, i32 0, i32 7, !dbg !2887
  %36 = load i64, i64* %columns23, align 8, !dbg !2887
  %cmp24 = icmp slt i64 %34, %36, !dbg !2888
  br i1 %cmp24, label %for.body25, label %for.end212, !dbg !2889

for.body25:                                       ; preds = %for.cond22
  store i64 1, i64* %count, align 8, !dbg !2890
  br label %for.cond26, !dbg !2893

for.cond26:                                       ; preds = %for.inc, %for.body25
  %37 = load i64, i64* %x, align 8, !dbg !2894
  %38 = load i64, i64* %count, align 8, !dbg !2896
  %add = add nsw i64 %37, %38, !dbg !2897
  %39 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2898
  %columns27 = getelementptr inbounds %struct._Image, %struct._Image* %39, i32 0, i32 7, !dbg !2899
  %40 = load i64, i64* %columns27, align 8, !dbg !2899
  %cmp28 = icmp slt i64 %add, %40, !dbg !2900
  br i1 %cmp28, label %for.body29, label %for.end, !dbg !2901

for.body29:                                       ; preds = %for.cond26
  %41 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2902
  %42 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2904
  %43 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2905
  %44 = load i64, i64* %count, align 8, !dbg !2906
  %add.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %43, i64 %44, !dbg !2907
  %call30 = call i32 @IsSameColor(%struct._Image* %41, %struct._PixelPacket* %42, %struct._PixelPacket* %add.ptr), !dbg !2908
  %cmp31 = icmp eq i32 %call30, 0, !dbg !2909
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !2910

if.then32:                                        ; preds = %for.body29
  br label %for.end, !dbg !2911

if.end33:                                         ; preds = %for.body29
  br label %for.inc, !dbg !2912

for.inc:                                          ; preds = %if.end33
  %45 = load i64, i64* %count, align 8, !dbg !2913
  %inc = add i64 %45, 1, !dbg !2913
  store i64 %inc, i64* %count, align 8, !dbg !2913
  br label %for.cond26, !dbg !2914, !llvm.loop !2915

for.end:                                          ; preds = %if.then32, %for.cond26
  %46 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !2917
  %47 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2918
  call void @AssociateAlphaPixel(%struct._CubeInfo* %46, %struct._PixelPacket* %47, %struct._RealPixelPacket* %pixel), !dbg !2919
  store i64 7, i64* %index, align 8, !dbg !2920
  store float 3.276800e+04, float* %bisect, align 4, !dbg !2921
  %48 = bitcast %struct._RealPixelPacket* %mid to i8*, !dbg !2922
  %49 = bitcast %struct._RealPixelPacket* %midpoint to i8*, !dbg !2922
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* align 4 %49, i64 16, i1 false), !dbg !2922
  %50 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !2923
  %root34 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %50, i32 0, i32 0, !dbg !2924
  %51 = load %struct._NodeInfo*, %struct._NodeInfo** %root34, align 8, !dbg !2924
  store %struct._NodeInfo* %51, %struct._NodeInfo** %node_info, align 8, !dbg !2925
  store i64 1, i64* %level, align 8, !dbg !2926
  br label %for.cond35, !dbg !2928

for.cond35:                                       ; preds = %for.inc153, %for.end
  %52 = load i64, i64* %level, align 8, !dbg !2929
  %cmp36 = icmp ule i64 %52, 8, !dbg !2931
  br i1 %cmp36, label %for.body37, label %for.end155, !dbg !2932

for.body37:                                       ; preds = %for.cond35
  %53 = load float, float* %bisect, align 4, !dbg !2933
  %conv = fpext float %53 to double, !dbg !2933
  %mul = fmul double %conv, 5.000000e-01, !dbg !2933
  %conv38 = fptrunc double %mul to float, !dbg !2933
  store float %conv38, float* %bisect, align 4, !dbg !2933
  %54 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !2935
  %55 = load i64, i64* %index, align 8, !dbg !2936
  %call39 = call i64 @ColorToNodeId(%struct._CubeInfo* %54, %struct._RealPixelPacket* %pixel, i64 %55), !dbg !2937
  store i64 %call39, i64* %id, align 8, !dbg !2938
  %56 = load i64, i64* %id, align 8, !dbg !2939
  %and = and i64 %56, 1, !dbg !2940
  %cmp40 = icmp ne i64 %and, 0, !dbg !2941
  br i1 %cmp40, label %cond.true, label %cond.false, !dbg !2942

cond.true:                                        ; preds = %for.body37
  %57 = load float, float* %bisect, align 4, !dbg !2943
  br label %cond.end, !dbg !2942

cond.false:                                       ; preds = %for.body37
  %58 = load float, float* %bisect, align 4, !dbg !2944
  %fneg = fneg float %58, !dbg !2945
  br label %cond.end, !dbg !2942

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %57, %cond.true ], [ %fneg, %cond.false ], !dbg !2942
  %red42 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %mid, i32 0, i32 0, !dbg !2946
  %59 = load float, float* %red42, align 4, !dbg !2947
  %add43 = fadd float %59, %cond, !dbg !2947
  store float %add43, float* %red42, align 4, !dbg !2947
  %60 = load i64, i64* %id, align 8, !dbg !2948
  %and44 = and i64 %60, 2, !dbg !2949
  %cmp45 = icmp ne i64 %and44, 0, !dbg !2950
  br i1 %cmp45, label %cond.true47, label %cond.false48, !dbg !2951

cond.true47:                                      ; preds = %cond.end
  %61 = load float, float* %bisect, align 4, !dbg !2952
  br label %cond.end50, !dbg !2951

cond.false48:                                     ; preds = %cond.end
  %62 = load float, float* %bisect, align 4, !dbg !2953
  %fneg49 = fneg float %62, !dbg !2954
  br label %cond.end50, !dbg !2951

cond.end50:                                       ; preds = %cond.false48, %cond.true47
  %cond51 = phi float [ %61, %cond.true47 ], [ %fneg49, %cond.false48 ], !dbg !2951
  %green52 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %mid, i32 0, i32 1, !dbg !2955
  %63 = load float, float* %green52, align 4, !dbg !2956
  %add53 = fadd float %63, %cond51, !dbg !2956
  store float %add53, float* %green52, align 4, !dbg !2956
  %64 = load i64, i64* %id, align 8, !dbg !2957
  %and54 = and i64 %64, 4, !dbg !2958
  %cmp55 = icmp ne i64 %and54, 0, !dbg !2959
  br i1 %cmp55, label %cond.true57, label %cond.false58, !dbg !2960

cond.true57:                                      ; preds = %cond.end50
  %65 = load float, float* %bisect, align 4, !dbg !2961
  br label %cond.end60, !dbg !2960

cond.false58:                                     ; preds = %cond.end50
  %66 = load float, float* %bisect, align 4, !dbg !2962
  %fneg59 = fneg float %66, !dbg !2963
  br label %cond.end60, !dbg !2960

cond.end60:                                       ; preds = %cond.false58, %cond.true57
  %cond61 = phi float [ %65, %cond.true57 ], [ %fneg59, %cond.false58 ], !dbg !2960
  %blue62 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %mid, i32 0, i32 2, !dbg !2964
  %67 = load float, float* %blue62, align 4, !dbg !2965
  %add63 = fadd float %67, %cond61, !dbg !2965
  store float %add63, float* %blue62, align 4, !dbg !2965
  %68 = load i64, i64* %id, align 8, !dbg !2966
  %and64 = and i64 %68, 8, !dbg !2967
  %cmp65 = icmp ne i64 %and64, 0, !dbg !2968
  br i1 %cmp65, label %cond.true67, label %cond.false68, !dbg !2969

cond.true67:                                      ; preds = %cond.end60
  %69 = load float, float* %bisect, align 4, !dbg !2970
  br label %cond.end70, !dbg !2969

cond.false68:                                     ; preds = %cond.end60
  %70 = load float, float* %bisect, align 4, !dbg !2971
  %fneg69 = fneg float %70, !dbg !2972
  br label %cond.end70, !dbg !2969

cond.end70:                                       ; preds = %cond.false68, %cond.true67
  %cond71 = phi float [ %69, %cond.true67 ], [ %fneg69, %cond.false68 ], !dbg !2969
  %opacity72 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %mid, i32 0, i32 3, !dbg !2973
  %71 = load float, float* %opacity72, align 4, !dbg !2974
  %add73 = fadd float %71, %cond71, !dbg !2974
  store float %add73, float* %opacity72, align 4, !dbg !2974
  %72 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !2975
  %child = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %72, i32 0, i32 1, !dbg !2977
  %73 = load i64, i64* %id, align 8, !dbg !2978
  %arrayidx = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child, i64 0, i64 %73, !dbg !2975
  %74 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx, align 8, !dbg !2975
  %cmp74 = icmp eq %struct._NodeInfo* %74, null, !dbg !2979
  br i1 %cmp74, label %if.then76, label %if.end92, !dbg !2980

if.then76:                                        ; preds = %cond.end70
  %75 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !2981
  %76 = load i64, i64* %id, align 8, !dbg !2983
  %77 = load i64, i64* %level, align 8, !dbg !2984
  %78 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !2985
  %call77 = call %struct._NodeInfo* @GetNodeInfo(%struct._CubeInfo* %75, i64 %76, i64 %77, %struct._NodeInfo* %78), !dbg !2986
  %79 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !2987
  %child78 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %79, i32 0, i32 1, !dbg !2988
  %80 = load i64, i64* %id, align 8, !dbg !2989
  %arrayidx79 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child78, i64 0, i64 %80, !dbg !2987
  store %struct._NodeInfo* %call77, %struct._NodeInfo** %arrayidx79, align 8, !dbg !2990
  %81 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !2991
  %child80 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %81, i32 0, i32 1, !dbg !2993
  %82 = load i64, i64* %id, align 8, !dbg !2994
  %arrayidx81 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child80, i64 0, i64 %82, !dbg !2991
  %83 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx81, align 8, !dbg !2991
  %cmp82 = icmp eq %struct._NodeInfo* %83, null, !dbg !2995
  br i1 %cmp82, label %if.then84, label %if.end86, !dbg !2996

if.then84:                                        ; preds = %if.then76
  %84 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2997
  %85 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2999
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %85, i32 0, i32 53, !dbg !3000
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2999
  %call85 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %84, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 848, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay), !dbg !3001
  br label %for.inc153, !dbg !3002

if.end86:                                         ; preds = %if.then76
  %86 = load i64, i64* %level, align 8, !dbg !3003
  %cmp87 = icmp eq i64 %86, 8, !dbg !3005
  br i1 %cmp87, label %if.then89, label %if.end91, !dbg !3006

if.then89:                                        ; preds = %if.end86
  %87 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3007
  %colors = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %87, i32 0, i32 1, !dbg !3008
  %88 = load i64, i64* %colors, align 8, !dbg !3009
  %inc90 = add i64 %88, 1, !dbg !3009
  store i64 %inc90, i64* %colors, align 8, !dbg !3009
  br label %if.end91, !dbg !3007

if.end91:                                         ; preds = %if.then89, %if.end86
  br label %if.end92, !dbg !3010

if.end92:                                         ; preds = %if.end91, %cond.end70
  %89 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3011
  %child93 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %89, i32 0, i32 1, !dbg !3012
  %90 = load i64, i64* %id, align 8, !dbg !3013
  %arrayidx94 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child93, i64 0, i64 %90, !dbg !3011
  %91 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx94, align 8, !dbg !3011
  store %struct._NodeInfo* %91, %struct._NodeInfo** %node_info, align 8, !dbg !3014
  %red95 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 0, !dbg !3015
  %92 = load float, float* %red95, align 4, !dbg !3015
  %red96 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %mid, i32 0, i32 0, !dbg !3016
  %93 = load float, float* %red96, align 4, !dbg !3016
  %sub = fsub float %92, %93, !dbg !3017
  %conv97 = fpext float %sub to double, !dbg !3018
  %mul98 = fmul double 0x3EF0001000100010, %conv97, !dbg !3019
  %conv99 = fptrunc double %mul98 to float, !dbg !3020
  %red100 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 0, !dbg !3021
  store float %conv99, float* %red100, align 4, !dbg !3022
  %green101 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 1, !dbg !3023
  %94 = load float, float* %green101, align 4, !dbg !3023
  %green102 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %mid, i32 0, i32 1, !dbg !3024
  %95 = load float, float* %green102, align 4, !dbg !3024
  %sub103 = fsub float %94, %95, !dbg !3025
  %conv104 = fpext float %sub103 to double, !dbg !3026
  %mul105 = fmul double 0x3EF0001000100010, %conv104, !dbg !3027
  %conv106 = fptrunc double %mul105 to float, !dbg !3028
  %green107 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 1, !dbg !3029
  store float %conv106, float* %green107, align 4, !dbg !3030
  %blue108 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 2, !dbg !3031
  %96 = load float, float* %blue108, align 4, !dbg !3031
  %blue109 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %mid, i32 0, i32 2, !dbg !3032
  %97 = load float, float* %blue109, align 4, !dbg !3032
  %sub110 = fsub float %96, %97, !dbg !3033
  %conv111 = fpext float %sub110 to double, !dbg !3034
  %mul112 = fmul double 0x3EF0001000100010, %conv111, !dbg !3035
  %conv113 = fptrunc double %mul112 to float, !dbg !3036
  %blue114 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 2, !dbg !3037
  store float %conv113, float* %blue114, align 4, !dbg !3038
  %98 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3039
  %associate_alpha = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %98, i32 0, i32 19, !dbg !3041
  %99 = load i32, i32* %associate_alpha, align 8, !dbg !3041
  %cmp115 = icmp ne i32 %99, 0, !dbg !3042
  br i1 %cmp115, label %if.then117, label %if.end125, !dbg !3043

if.then117:                                       ; preds = %if.end92
  %opacity118 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 3, !dbg !3044
  %100 = load float, float* %opacity118, align 4, !dbg !3044
  %opacity119 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %mid, i32 0, i32 3, !dbg !3045
  %101 = load float, float* %opacity119, align 4, !dbg !3045
  %sub120 = fsub float %100, %101, !dbg !3046
  %conv121 = fpext float %sub120 to double, !dbg !3047
  %mul122 = fmul double 0x3EF0001000100010, %conv121, !dbg !3048
  %conv123 = fptrunc double %mul122 to float, !dbg !3049
  %opacity124 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 3, !dbg !3050
  store float %conv123, float* %opacity124, align 4, !dbg !3051
  br label %if.end125, !dbg !3052

if.end125:                                        ; preds = %if.then117, %if.end92
  %102 = load i64, i64* %count, align 8, !dbg !3053
  %conv126 = uitofp i64 %102 to double, !dbg !3053
  %red127 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 0, !dbg !3054
  %103 = load float, float* %red127, align 4, !dbg !3054
  %red128 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 0, !dbg !3055
  %104 = load float, float* %red128, align 4, !dbg !3055
  %mul129 = fmul float %103, %104, !dbg !3056
  %green130 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 1, !dbg !3057
  %105 = load float, float* %green130, align 4, !dbg !3057
  %green131 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 1, !dbg !3058
  %106 = load float, float* %green131, align 4, !dbg !3058
  %mul132 = fmul float %105, %106, !dbg !3059
  %add133 = fadd float %mul129, %mul132, !dbg !3060
  %blue134 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 2, !dbg !3061
  %107 = load float, float* %blue134, align 4, !dbg !3061
  %blue135 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 2, !dbg !3062
  %108 = load float, float* %blue135, align 4, !dbg !3062
  %mul136 = fmul float %107, %108, !dbg !3063
  %add137 = fadd float %add133, %mul136, !dbg !3064
  %opacity138 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 3, !dbg !3065
  %109 = load float, float* %opacity138, align 4, !dbg !3065
  %opacity139 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 3, !dbg !3066
  %110 = load float, float* %opacity139, align 4, !dbg !3066
  %mul140 = fmul float %109, %110, !dbg !3067
  %add141 = fadd float %add137, %mul140, !dbg !3068
  %conv142 = fpext float %add141 to double, !dbg !3069
  %call143 = call double @sqrt(double %conv142) #13, !dbg !3070
  %mul144 = fmul double %conv126, %call143, !dbg !3071
  %111 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3072
  %quantize_error = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %111, i32 0, i32 4, !dbg !3073
  %112 = load float, float* %quantize_error, align 8, !dbg !3074
  %conv145 = fpext float %112 to double, !dbg !3074
  %add146 = fadd double %conv145, %mul144, !dbg !3074
  %conv147 = fptrunc double %add146 to float, !dbg !3074
  store float %conv147, float* %quantize_error, align 8, !dbg !3074
  %113 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3075
  %quantize_error148 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %113, i32 0, i32 4, !dbg !3076
  %114 = load float, float* %quantize_error148, align 8, !dbg !3076
  %115 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3077
  %root149 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %115, i32 0, i32 0, !dbg !3078
  %116 = load %struct._NodeInfo*, %struct._NodeInfo** %root149, align 8, !dbg !3078
  %quantize_error150 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %116, i32 0, i32 4, !dbg !3079
  %117 = load float, float* %quantize_error150, align 8, !dbg !3080
  %add151 = fadd float %117, %114, !dbg !3080
  store float %add151, float* %quantize_error150, align 8, !dbg !3080
  %118 = load i64, i64* %index, align 8, !dbg !3081
  %dec152 = add i64 %118, -1, !dbg !3081
  store i64 %dec152, i64* %index, align 8, !dbg !3081
  br label %for.inc153, !dbg !3082

for.inc153:                                       ; preds = %if.end125, %if.then84
  %119 = load i64, i64* %level, align 8, !dbg !3083
  %inc154 = add i64 %119, 1, !dbg !3083
  store i64 %inc154, i64* %level, align 8, !dbg !3083
  br label %for.cond35, !dbg !3084, !llvm.loop !3085

for.end155:                                       ; preds = %for.cond35
  %120 = load i64, i64* %count, align 8, !dbg !3087
  %121 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3088
  %number_unique = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %121, i32 0, i32 2, !dbg !3089
  %122 = load i64, i64* %number_unique, align 8, !dbg !3090
  %add156 = add i64 %122, %120, !dbg !3090
  store i64 %add156, i64* %number_unique, align 8, !dbg !3090
  %123 = load i64, i64* %count, align 8, !dbg !3091
  %conv157 = uitofp i64 %123 to double, !dbg !3091
  %mul158 = fmul double %conv157, 0x3EF0001000100010, !dbg !3092
  %red159 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 0, !dbg !3093
  %124 = load float, float* %red159, align 4, !dbg !3093
  %call160 = call zeroext i16 @ClampPixel(float %124), !dbg !3094
  %conv161 = zext i16 %call160 to i32, !dbg !3094
  %conv162 = sitofp i32 %conv161 to double, !dbg !3094
  %mul163 = fmul double %mul158, %conv162, !dbg !3095
  %125 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3096
  %total_color = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %125, i32 0, i32 3, !dbg !3097
  %red164 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color, i32 0, i32 0, !dbg !3098
  %126 = load float, float* %red164, align 8, !dbg !3099
  %conv165 = fpext float %126 to double, !dbg !3099
  %add166 = fadd double %conv165, %mul163, !dbg !3099
  %conv167 = fptrunc double %add166 to float, !dbg !3099
  store float %conv167, float* %red164, align 8, !dbg !3099
  %127 = load i64, i64* %count, align 8, !dbg !3100
  %conv168 = uitofp i64 %127 to double, !dbg !3100
  %mul169 = fmul double %conv168, 0x3EF0001000100010, !dbg !3101
  %green170 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 1, !dbg !3102
  %128 = load float, float* %green170, align 4, !dbg !3102
  %call171 = call zeroext i16 @ClampPixel(float %128), !dbg !3103
  %conv172 = zext i16 %call171 to i32, !dbg !3103
  %conv173 = sitofp i32 %conv172 to double, !dbg !3103
  %mul174 = fmul double %mul169, %conv173, !dbg !3104
  %129 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3105
  %total_color175 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %129, i32 0, i32 3, !dbg !3106
  %green176 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color175, i32 0, i32 1, !dbg !3107
  %130 = load float, float* %green176, align 4, !dbg !3108
  %conv177 = fpext float %130 to double, !dbg !3108
  %add178 = fadd double %conv177, %mul174, !dbg !3108
  %conv179 = fptrunc double %add178 to float, !dbg !3108
  store float %conv179, float* %green176, align 4, !dbg !3108
  %131 = load i64, i64* %count, align 8, !dbg !3109
  %conv180 = uitofp i64 %131 to double, !dbg !3109
  %mul181 = fmul double %conv180, 0x3EF0001000100010, !dbg !3110
  %blue182 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 2, !dbg !3111
  %132 = load float, float* %blue182, align 4, !dbg !3111
  %call183 = call zeroext i16 @ClampPixel(float %132), !dbg !3112
  %conv184 = zext i16 %call183 to i32, !dbg !3112
  %conv185 = sitofp i32 %conv184 to double, !dbg !3112
  %mul186 = fmul double %mul181, %conv185, !dbg !3113
  %133 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3114
  %total_color187 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %133, i32 0, i32 3, !dbg !3115
  %blue188 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color187, i32 0, i32 2, !dbg !3116
  %134 = load float, float* %blue188, align 8, !dbg !3117
  %conv189 = fpext float %134 to double, !dbg !3117
  %add190 = fadd double %conv189, %mul186, !dbg !3117
  %conv191 = fptrunc double %add190 to float, !dbg !3117
  store float %conv191, float* %blue188, align 8, !dbg !3117
  %135 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3118
  %associate_alpha192 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %135, i32 0, i32 19, !dbg !3120
  %136 = load i32, i32* %associate_alpha192, align 8, !dbg !3120
  %cmp193 = icmp ne i32 %136, 0, !dbg !3121
  br i1 %cmp193, label %if.then195, label %if.end208, !dbg !3122

if.then195:                                       ; preds = %for.end155
  %137 = load i64, i64* %count, align 8, !dbg !3123
  %conv196 = uitofp i64 %137 to double, !dbg !3123
  %mul197 = fmul double %conv196, 0x3EF0001000100010, !dbg !3124
  %opacity198 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 3, !dbg !3125
  %138 = load float, float* %opacity198, align 4, !dbg !3125
  %call199 = call zeroext i16 @ClampPixel(float %138), !dbg !3126
  %conv200 = zext i16 %call199 to i32, !dbg !3126
  %conv201 = sitofp i32 %conv200 to double, !dbg !3126
  %mul202 = fmul double %mul197, %conv201, !dbg !3127
  %139 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3128
  %total_color203 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %139, i32 0, i32 3, !dbg !3129
  %opacity204 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color203, i32 0, i32 3, !dbg !3130
  %140 = load float, float* %opacity204, align 4, !dbg !3131
  %conv205 = fpext float %140 to double, !dbg !3131
  %add206 = fadd double %conv205, %mul202, !dbg !3131
  %conv207 = fptrunc double %add206 to float, !dbg !3131
  store float %conv207, float* %opacity204, align 4, !dbg !3131
  br label %if.end208, !dbg !3128

if.end208:                                        ; preds = %if.then195, %for.end155
  %141 = load i64, i64* %count, align 8, !dbg !3132
  %142 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3133
  %add.ptr209 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %142, i64 %141, !dbg !3133
  store %struct._PixelPacket* %add.ptr209, %struct._PixelPacket** %p, align 8, !dbg !3133
  br label %for.inc210, !dbg !3134

for.inc210:                                       ; preds = %if.end208
  %143 = load i64, i64* %count, align 8, !dbg !3135
  %144 = load i64, i64* %x, align 8, !dbg !3136
  %add211 = add nsw i64 %144, %143, !dbg !3136
  store i64 %add211, i64* %x, align 8, !dbg !3136
  br label %for.cond22, !dbg !3137, !llvm.loop !3138

for.end212:                                       ; preds = %for.cond22
  %145 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3140
  %colors213 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %145, i32 0, i32 1, !dbg !3142
  %146 = load i64, i64* %colors213, align 8, !dbg !3142
  %147 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3143
  %maximum_colors = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %147, i32 0, i32 2, !dbg !3144
  %148 = load i64, i64* %maximum_colors, align 8, !dbg !3144
  %cmp214 = icmp ugt i64 %146, %148, !dbg !3145
  br i1 %cmp214, label %if.then216, label %if.end218, !dbg !3146

if.then216:                                       ; preds = %for.end212
  %149 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3147
  %150 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3149
  %151 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3150
  %root217 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %151, i32 0, i32 0, !dbg !3151
  %152 = load %struct._NodeInfo*, %struct._NodeInfo** %root217, align 8, !dbg !3151
  call void @PruneToCubeDepth(%struct._Image* %149, %struct._CubeInfo* %150, %struct._NodeInfo* %152), !dbg !3152
  br label %for.end227, !dbg !3153

if.end218:                                        ; preds = %for.end212
  %153 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3154
  %154 = load i64, i64* %y, align 8, !dbg !3155
  %155 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3156
  %rows219 = getelementptr inbounds %struct._Image, %struct._Image* %155, i32 0, i32 8, !dbg !3157
  %156 = load i64, i64* %rows219, align 8, !dbg !3157
  %call220 = call i32 @SetImageProgress(%struct._Image* %153, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i64 %154, i64 %156), !dbg !3158
  store i32 %call220, i32* %proceed, align 4, !dbg !3159
  %157 = load i32, i32* %proceed, align 4, !dbg !3160
  %cmp221 = icmp eq i32 %157, 0, !dbg !3162
  br i1 %cmp221, label %if.then223, label %if.end224, !dbg !3163

if.then223:                                       ; preds = %if.end218
  br label %for.end227, !dbg !3164

if.end224:                                        ; preds = %if.end218
  br label %for.inc225, !dbg !3165

for.inc225:                                       ; preds = %if.end224
  %158 = load i64, i64* %y, align 8, !dbg !3166
  %inc226 = add nsw i64 %158, 1, !dbg !3166
  store i64 %inc226, i64* %y, align 8, !dbg !3166
  br label %for.cond, !dbg !3167, !llvm.loop !3168

for.end227:                                       ; preds = %if.then223, %if.then216, %if.then17, %for.cond
  %159 = load i64, i64* %y, align 8, !dbg !3170
  %inc228 = add nsw i64 %159, 1, !dbg !3170
  store i64 %inc228, i64* %y, align 8, !dbg !3170
  br label %for.cond229, !dbg !3172

for.cond229:                                      ; preds = %for.inc476, %for.end227
  %160 = load i64, i64* %y, align 8, !dbg !3173
  %161 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3175
  %rows230 = getelementptr inbounds %struct._Image, %struct._Image* %161, i32 0, i32 8, !dbg !3176
  %162 = load i64, i64* %rows230, align 8, !dbg !3176
  %cmp231 = icmp slt i64 %160, %162, !dbg !3177
  br i1 %cmp231, label %for.body233, label %for.end478, !dbg !3178

for.body233:                                      ; preds = %for.cond229
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p234, metadata !3179, metadata !DIExpression()), !dbg !3181
  call void @llvm.dbg.declare(metadata i64* %x235, metadata !3182, metadata !DIExpression()), !dbg !3183
  %163 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3184
  %164 = load i64, i64* %y, align 8, !dbg !3185
  %165 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3186
  %columns236 = getelementptr inbounds %struct._Image, %struct._Image* %165, i32 0, i32 7, !dbg !3187
  %166 = load i64, i64* %columns236, align 8, !dbg !3187
  %167 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3188
  %call237 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %163, i64 0, i64 %164, i64 %166, i64 1, %struct._ExceptionInfo* %167), !dbg !3189
  store %struct._PixelPacket* %call237, %struct._PixelPacket** %p234, align 8, !dbg !3190
  %168 = load %struct._PixelPacket*, %struct._PixelPacket** %p234, align 8, !dbg !3191
  %cmp238 = icmp eq %struct._PixelPacket* %168, null, !dbg !3193
  br i1 %cmp238, label %if.then240, label %if.end241, !dbg !3194

if.then240:                                       ; preds = %for.body233
  br label %for.end478, !dbg !3195

if.end241:                                        ; preds = %for.body233
  %169 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3196
  %nodes242 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %169, i32 0, i32 9, !dbg !3198
  %170 = load i64, i64* %nodes242, align 8, !dbg !3198
  %cmp243 = icmp ugt i64 %170, 266817, !dbg !3199
  br i1 %cmp243, label %if.then245, label %if.end249, !dbg !3200

if.then245:                                       ; preds = %if.end241
  %171 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3201
  %172 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3203
  %173 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3204
  %root246 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %173, i32 0, i32 0, !dbg !3205
  %174 = load %struct._NodeInfo*, %struct._NodeInfo** %root246, align 8, !dbg !3205
  call void @PruneLevel(%struct._Image* %171, %struct._CubeInfo* %172, %struct._NodeInfo* %174), !dbg !3206
  %175 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3207
  %depth247 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %175, i32 0, i32 22, !dbg !3208
  %176 = load i64, i64* %depth247, align 8, !dbg !3209
  %dec248 = add i64 %176, -1, !dbg !3209
  store i64 %dec248, i64* %depth247, align 8, !dbg !3209
  br label %if.end249, !dbg !3210

if.end249:                                        ; preds = %if.then245, %if.end241
  store i64 0, i64* %x235, align 8, !dbg !3211
  br label %for.cond250, !dbg !3213

for.cond250:                                      ; preds = %for.inc467, %if.end249
  %177 = load i64, i64* %x235, align 8, !dbg !3214
  %178 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3216
  %columns251 = getelementptr inbounds %struct._Image, %struct._Image* %178, i32 0, i32 7, !dbg !3217
  %179 = load i64, i64* %columns251, align 8, !dbg !3217
  %cmp252 = icmp slt i64 %177, %179, !dbg !3218
  br i1 %cmp252, label %for.body254, label %for.end469, !dbg !3219

for.body254:                                      ; preds = %for.cond250
  store i64 1, i64* %count, align 8, !dbg !3220
  br label %for.cond255, !dbg !3223

for.cond255:                                      ; preds = %for.inc267, %for.body254
  %180 = load i64, i64* %x235, align 8, !dbg !3224
  %181 = load i64, i64* %count, align 8, !dbg !3226
  %add256 = add nsw i64 %180, %181, !dbg !3227
  %182 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3228
  %columns257 = getelementptr inbounds %struct._Image, %struct._Image* %182, i32 0, i32 7, !dbg !3229
  %183 = load i64, i64* %columns257, align 8, !dbg !3229
  %cmp258 = icmp slt i64 %add256, %183, !dbg !3230
  br i1 %cmp258, label %for.body260, label %for.end269, !dbg !3231

for.body260:                                      ; preds = %for.cond255
  %184 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3232
  %185 = load %struct._PixelPacket*, %struct._PixelPacket** %p234, align 8, !dbg !3234
  %186 = load %struct._PixelPacket*, %struct._PixelPacket** %p234, align 8, !dbg !3235
  %187 = load i64, i64* %count, align 8, !dbg !3236
  %add.ptr261 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %186, i64 %187, !dbg !3237
  %call262 = call i32 @IsSameColor(%struct._Image* %184, %struct._PixelPacket* %185, %struct._PixelPacket* %add.ptr261), !dbg !3238
  %cmp263 = icmp eq i32 %call262, 0, !dbg !3239
  br i1 %cmp263, label %if.then265, label %if.end266, !dbg !3240

if.then265:                                       ; preds = %for.body260
  br label %for.end269, !dbg !3241

if.end266:                                        ; preds = %for.body260
  br label %for.inc267, !dbg !3242

for.inc267:                                       ; preds = %if.end266
  %188 = load i64, i64* %count, align 8, !dbg !3243
  %inc268 = add i64 %188, 1, !dbg !3243
  store i64 %inc268, i64* %count, align 8, !dbg !3243
  br label %for.cond255, !dbg !3244, !llvm.loop !3245

for.end269:                                       ; preds = %if.then265, %for.cond255
  %189 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3247
  %190 = load %struct._PixelPacket*, %struct._PixelPacket** %p234, align 8, !dbg !3248
  call void @AssociateAlphaPixel(%struct._CubeInfo* %189, %struct._PixelPacket* %190, %struct._RealPixelPacket* %pixel), !dbg !3249
  store i64 7, i64* %index, align 8, !dbg !3250
  store float 3.276800e+04, float* %bisect, align 4, !dbg !3251
  %191 = bitcast %struct._RealPixelPacket* %mid to i8*, !dbg !3252
  %192 = bitcast %struct._RealPixelPacket* %midpoint to i8*, !dbg !3252
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %191, i8* align 4 %192, i64 16, i1 false), !dbg !3252
  %193 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3253
  %root270 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %193, i32 0, i32 0, !dbg !3254
  %194 = load %struct._NodeInfo*, %struct._NodeInfo** %root270, align 8, !dbg !3254
  store %struct._NodeInfo* %194, %struct._NodeInfo** %node_info, align 8, !dbg !3255
  store i64 1, i64* %level, align 8, !dbg !3256
  br label %for.cond271, !dbg !3258

for.cond271:                                      ; preds = %for.inc408, %for.end269
  %195 = load i64, i64* %level, align 8, !dbg !3259
  %196 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3261
  %depth272 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %196, i32 0, i32 22, !dbg !3262
  %197 = load i64, i64* %depth272, align 8, !dbg !3262
  %cmp273 = icmp ule i64 %195, %197, !dbg !3263
  br i1 %cmp273, label %for.body275, label %for.end410, !dbg !3264

for.body275:                                      ; preds = %for.cond271
  %198 = load float, float* %bisect, align 4, !dbg !3265
  %conv276 = fpext float %198 to double, !dbg !3265
  %mul277 = fmul double %conv276, 5.000000e-01, !dbg !3265
  %conv278 = fptrunc double %mul277 to float, !dbg !3265
  store float %conv278, float* %bisect, align 4, !dbg !3265
  %199 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3267
  %200 = load i64, i64* %index, align 8, !dbg !3268
  %call279 = call i64 @ColorToNodeId(%struct._CubeInfo* %199, %struct._RealPixelPacket* %pixel, i64 %200), !dbg !3269
  store i64 %call279, i64* %id, align 8, !dbg !3270
  %201 = load i64, i64* %id, align 8, !dbg !3271
  %and280 = and i64 %201, 1, !dbg !3272
  %cmp281 = icmp ne i64 %and280, 0, !dbg !3273
  br i1 %cmp281, label %cond.true283, label %cond.false284, !dbg !3274

cond.true283:                                     ; preds = %for.body275
  %202 = load float, float* %bisect, align 4, !dbg !3275
  br label %cond.end286, !dbg !3274

cond.false284:                                    ; preds = %for.body275
  %203 = load float, float* %bisect, align 4, !dbg !3276
  %fneg285 = fneg float %203, !dbg !3277
  br label %cond.end286, !dbg !3274

cond.end286:                                      ; preds = %cond.false284, %cond.true283
  %cond287 = phi float [ %202, %cond.true283 ], [ %fneg285, %cond.false284 ], !dbg !3274
  %red288 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %mid, i32 0, i32 0, !dbg !3278
  %204 = load float, float* %red288, align 4, !dbg !3279
  %add289 = fadd float %204, %cond287, !dbg !3279
  store float %add289, float* %red288, align 4, !dbg !3279
  %205 = load i64, i64* %id, align 8, !dbg !3280
  %and290 = and i64 %205, 2, !dbg !3281
  %cmp291 = icmp ne i64 %and290, 0, !dbg !3282
  br i1 %cmp291, label %cond.true293, label %cond.false294, !dbg !3283

cond.true293:                                     ; preds = %cond.end286
  %206 = load float, float* %bisect, align 4, !dbg !3284
  br label %cond.end296, !dbg !3283

cond.false294:                                    ; preds = %cond.end286
  %207 = load float, float* %bisect, align 4, !dbg !3285
  %fneg295 = fneg float %207, !dbg !3286
  br label %cond.end296, !dbg !3283

cond.end296:                                      ; preds = %cond.false294, %cond.true293
  %cond297 = phi float [ %206, %cond.true293 ], [ %fneg295, %cond.false294 ], !dbg !3283
  %green298 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %mid, i32 0, i32 1, !dbg !3287
  %208 = load float, float* %green298, align 4, !dbg !3288
  %add299 = fadd float %208, %cond297, !dbg !3288
  store float %add299, float* %green298, align 4, !dbg !3288
  %209 = load i64, i64* %id, align 8, !dbg !3289
  %and300 = and i64 %209, 4, !dbg !3290
  %cmp301 = icmp ne i64 %and300, 0, !dbg !3291
  br i1 %cmp301, label %cond.true303, label %cond.false304, !dbg !3292

cond.true303:                                     ; preds = %cond.end296
  %210 = load float, float* %bisect, align 4, !dbg !3293
  br label %cond.end306, !dbg !3292

cond.false304:                                    ; preds = %cond.end296
  %211 = load float, float* %bisect, align 4, !dbg !3294
  %fneg305 = fneg float %211, !dbg !3295
  br label %cond.end306, !dbg !3292

cond.end306:                                      ; preds = %cond.false304, %cond.true303
  %cond307 = phi float [ %210, %cond.true303 ], [ %fneg305, %cond.false304 ], !dbg !3292
  %blue308 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %mid, i32 0, i32 2, !dbg !3296
  %212 = load float, float* %blue308, align 4, !dbg !3297
  %add309 = fadd float %212, %cond307, !dbg !3297
  store float %add309, float* %blue308, align 4, !dbg !3297
  %213 = load i64, i64* %id, align 8, !dbg !3298
  %and310 = and i64 %213, 8, !dbg !3299
  %cmp311 = icmp ne i64 %and310, 0, !dbg !3300
  br i1 %cmp311, label %cond.true313, label %cond.false314, !dbg !3301

cond.true313:                                     ; preds = %cond.end306
  %214 = load float, float* %bisect, align 4, !dbg !3302
  br label %cond.end316, !dbg !3301

cond.false314:                                    ; preds = %cond.end306
  %215 = load float, float* %bisect, align 4, !dbg !3303
  %fneg315 = fneg float %215, !dbg !3304
  br label %cond.end316, !dbg !3301

cond.end316:                                      ; preds = %cond.false314, %cond.true313
  %cond317 = phi float [ %214, %cond.true313 ], [ %fneg315, %cond.false314 ], !dbg !3301
  %opacity318 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %mid, i32 0, i32 3, !dbg !3305
  %216 = load float, float* %opacity318, align 4, !dbg !3306
  %add319 = fadd float %216, %cond317, !dbg !3306
  store float %add319, float* %opacity318, align 4, !dbg !3306
  %217 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3307
  %child320 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %217, i32 0, i32 1, !dbg !3309
  %218 = load i64, i64* %id, align 8, !dbg !3310
  %arrayidx321 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child320, i64 0, i64 %218, !dbg !3307
  %219 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx321, align 8, !dbg !3307
  %cmp322 = icmp eq %struct._NodeInfo* %219, null, !dbg !3311
  br i1 %cmp322, label %if.then324, label %if.end344, !dbg !3312

if.then324:                                       ; preds = %cond.end316
  %220 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3313
  %221 = load i64, i64* %id, align 8, !dbg !3315
  %222 = load i64, i64* %level, align 8, !dbg !3316
  %223 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3317
  %call325 = call %struct._NodeInfo* @GetNodeInfo(%struct._CubeInfo* %220, i64 %221, i64 %222, %struct._NodeInfo* %223), !dbg !3318
  %224 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3319
  %child326 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %224, i32 0, i32 1, !dbg !3320
  %225 = load i64, i64* %id, align 8, !dbg !3321
  %arrayidx327 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child326, i64 0, i64 %225, !dbg !3319
  store %struct._NodeInfo* %call325, %struct._NodeInfo** %arrayidx327, align 8, !dbg !3322
  %226 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3323
  %child328 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %226, i32 0, i32 1, !dbg !3325
  %227 = load i64, i64* %id, align 8, !dbg !3326
  %arrayidx329 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child328, i64 0, i64 %227, !dbg !3323
  %228 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx329, align 8, !dbg !3323
  %cmp330 = icmp eq %struct._NodeInfo* %228, null, !dbg !3327
  br i1 %cmp330, label %if.then332, label %if.end336, !dbg !3328

if.then332:                                       ; preds = %if.then324
  %229 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3329
  %230 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3331
  %filename333 = getelementptr inbounds %struct._Image, %struct._Image* %230, i32 0, i32 53, !dbg !3332
  %arraydecay334 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename333, i64 0, i64 0, !dbg !3331
  %call335 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %229, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 941, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay334), !dbg !3333
  br label %for.inc408, !dbg !3334

if.end336:                                        ; preds = %if.then324
  %231 = load i64, i64* %level, align 8, !dbg !3335
  %232 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3337
  %depth337 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %232, i32 0, i32 22, !dbg !3338
  %233 = load i64, i64* %depth337, align 8, !dbg !3338
  %cmp338 = icmp eq i64 %231, %233, !dbg !3339
  br i1 %cmp338, label %if.then340, label %if.end343, !dbg !3340

if.then340:                                       ; preds = %if.end336
  %234 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3341
  %colors341 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %234, i32 0, i32 1, !dbg !3342
  %235 = load i64, i64* %colors341, align 8, !dbg !3343
  %inc342 = add i64 %235, 1, !dbg !3343
  store i64 %inc342, i64* %colors341, align 8, !dbg !3343
  br label %if.end343, !dbg !3341

if.end343:                                        ; preds = %if.then340, %if.end336
  br label %if.end344, !dbg !3344

if.end344:                                        ; preds = %if.end343, %cond.end316
  %236 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3345
  %child345 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %236, i32 0, i32 1, !dbg !3346
  %237 = load i64, i64* %id, align 8, !dbg !3347
  %arrayidx346 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child345, i64 0, i64 %237, !dbg !3345
  %238 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx346, align 8, !dbg !3345
  store %struct._NodeInfo* %238, %struct._NodeInfo** %node_info, align 8, !dbg !3348
  %red347 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 0, !dbg !3349
  %239 = load float, float* %red347, align 4, !dbg !3349
  %red348 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %mid, i32 0, i32 0, !dbg !3350
  %240 = load float, float* %red348, align 4, !dbg !3350
  %sub349 = fsub float %239, %240, !dbg !3351
  %conv350 = fpext float %sub349 to double, !dbg !3352
  %mul351 = fmul double 0x3EF0001000100010, %conv350, !dbg !3353
  %conv352 = fptrunc double %mul351 to float, !dbg !3354
  %red353 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 0, !dbg !3355
  store float %conv352, float* %red353, align 4, !dbg !3356
  %green354 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 1, !dbg !3357
  %241 = load float, float* %green354, align 4, !dbg !3357
  %green355 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %mid, i32 0, i32 1, !dbg !3358
  %242 = load float, float* %green355, align 4, !dbg !3358
  %sub356 = fsub float %241, %242, !dbg !3359
  %conv357 = fpext float %sub356 to double, !dbg !3360
  %mul358 = fmul double 0x3EF0001000100010, %conv357, !dbg !3361
  %conv359 = fptrunc double %mul358 to float, !dbg !3362
  %green360 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 1, !dbg !3363
  store float %conv359, float* %green360, align 4, !dbg !3364
  %blue361 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 2, !dbg !3365
  %243 = load float, float* %blue361, align 4, !dbg !3365
  %blue362 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %mid, i32 0, i32 2, !dbg !3366
  %244 = load float, float* %blue362, align 4, !dbg !3366
  %sub363 = fsub float %243, %244, !dbg !3367
  %conv364 = fpext float %sub363 to double, !dbg !3368
  %mul365 = fmul double 0x3EF0001000100010, %conv364, !dbg !3369
  %conv366 = fptrunc double %mul365 to float, !dbg !3370
  %blue367 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 2, !dbg !3371
  store float %conv366, float* %blue367, align 4, !dbg !3372
  %245 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3373
  %associate_alpha368 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %245, i32 0, i32 19, !dbg !3375
  %246 = load i32, i32* %associate_alpha368, align 8, !dbg !3375
  %cmp369 = icmp ne i32 %246, 0, !dbg !3376
  br i1 %cmp369, label %if.then371, label %if.end379, !dbg !3377

if.then371:                                       ; preds = %if.end344
  %opacity372 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 3, !dbg !3378
  %247 = load float, float* %opacity372, align 4, !dbg !3378
  %opacity373 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %mid, i32 0, i32 3, !dbg !3379
  %248 = load float, float* %opacity373, align 4, !dbg !3379
  %sub374 = fsub float %247, %248, !dbg !3380
  %conv375 = fpext float %sub374 to double, !dbg !3381
  %mul376 = fmul double 0x3EF0001000100010, %conv375, !dbg !3382
  %conv377 = fptrunc double %mul376 to float, !dbg !3383
  %opacity378 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 3, !dbg !3384
  store float %conv377, float* %opacity378, align 4, !dbg !3385
  br label %if.end379, !dbg !3386

if.end379:                                        ; preds = %if.then371, %if.end344
  %249 = load i64, i64* %count, align 8, !dbg !3387
  %conv380 = uitofp i64 %249 to double, !dbg !3387
  %red381 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 0, !dbg !3388
  %250 = load float, float* %red381, align 4, !dbg !3388
  %red382 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 0, !dbg !3389
  %251 = load float, float* %red382, align 4, !dbg !3389
  %mul383 = fmul float %250, %251, !dbg !3390
  %green384 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 1, !dbg !3391
  %252 = load float, float* %green384, align 4, !dbg !3391
  %green385 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 1, !dbg !3392
  %253 = load float, float* %green385, align 4, !dbg !3392
  %mul386 = fmul float %252, %253, !dbg !3393
  %add387 = fadd float %mul383, %mul386, !dbg !3394
  %blue388 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 2, !dbg !3395
  %254 = load float, float* %blue388, align 4, !dbg !3395
  %blue389 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 2, !dbg !3396
  %255 = load float, float* %blue389, align 4, !dbg !3396
  %mul390 = fmul float %254, %255, !dbg !3397
  %add391 = fadd float %add387, %mul390, !dbg !3398
  %opacity392 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 3, !dbg !3399
  %256 = load float, float* %opacity392, align 4, !dbg !3399
  %opacity393 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %error, i32 0, i32 3, !dbg !3400
  %257 = load float, float* %opacity393, align 4, !dbg !3400
  %mul394 = fmul float %256, %257, !dbg !3401
  %add395 = fadd float %add391, %mul394, !dbg !3402
  %conv396 = fpext float %add395 to double, !dbg !3403
  %call397 = call double @sqrt(double %conv396) #13, !dbg !3404
  %mul398 = fmul double %conv380, %call397, !dbg !3405
  %258 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3406
  %quantize_error399 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %258, i32 0, i32 4, !dbg !3407
  %259 = load float, float* %quantize_error399, align 8, !dbg !3408
  %conv400 = fpext float %259 to double, !dbg !3408
  %add401 = fadd double %conv400, %mul398, !dbg !3408
  %conv402 = fptrunc double %add401 to float, !dbg !3408
  store float %conv402, float* %quantize_error399, align 8, !dbg !3408
  %260 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3409
  %quantize_error403 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %260, i32 0, i32 4, !dbg !3410
  %261 = load float, float* %quantize_error403, align 8, !dbg !3410
  %262 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3411
  %root404 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %262, i32 0, i32 0, !dbg !3412
  %263 = load %struct._NodeInfo*, %struct._NodeInfo** %root404, align 8, !dbg !3412
  %quantize_error405 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %263, i32 0, i32 4, !dbg !3413
  %264 = load float, float* %quantize_error405, align 8, !dbg !3414
  %add406 = fadd float %264, %261, !dbg !3414
  store float %add406, float* %quantize_error405, align 8, !dbg !3414
  %265 = load i64, i64* %index, align 8, !dbg !3415
  %dec407 = add i64 %265, -1, !dbg !3415
  store i64 %dec407, i64* %index, align 8, !dbg !3415
  br label %for.inc408, !dbg !3416

for.inc408:                                       ; preds = %if.end379, %if.then332
  %266 = load i64, i64* %level, align 8, !dbg !3417
  %inc409 = add i64 %266, 1, !dbg !3417
  store i64 %inc409, i64* %level, align 8, !dbg !3417
  br label %for.cond271, !dbg !3418, !llvm.loop !3419

for.end410:                                       ; preds = %for.cond271
  %267 = load i64, i64* %count, align 8, !dbg !3421
  %268 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3422
  %number_unique411 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %268, i32 0, i32 2, !dbg !3423
  %269 = load i64, i64* %number_unique411, align 8, !dbg !3424
  %add412 = add i64 %269, %267, !dbg !3424
  store i64 %add412, i64* %number_unique411, align 8, !dbg !3424
  %270 = load i64, i64* %count, align 8, !dbg !3425
  %conv413 = uitofp i64 %270 to double, !dbg !3425
  %mul414 = fmul double %conv413, 0x3EF0001000100010, !dbg !3426
  %red415 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 0, !dbg !3427
  %271 = load float, float* %red415, align 4, !dbg !3427
  %call416 = call zeroext i16 @ClampPixel(float %271), !dbg !3428
  %conv417 = zext i16 %call416 to i32, !dbg !3428
  %conv418 = sitofp i32 %conv417 to double, !dbg !3428
  %mul419 = fmul double %mul414, %conv418, !dbg !3429
  %272 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3430
  %total_color420 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %272, i32 0, i32 3, !dbg !3431
  %red421 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color420, i32 0, i32 0, !dbg !3432
  %273 = load float, float* %red421, align 8, !dbg !3433
  %conv422 = fpext float %273 to double, !dbg !3433
  %add423 = fadd double %conv422, %mul419, !dbg !3433
  %conv424 = fptrunc double %add423 to float, !dbg !3433
  store float %conv424, float* %red421, align 8, !dbg !3433
  %274 = load i64, i64* %count, align 8, !dbg !3434
  %conv425 = uitofp i64 %274 to double, !dbg !3434
  %mul426 = fmul double %conv425, 0x3EF0001000100010, !dbg !3435
  %green427 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 1, !dbg !3436
  %275 = load float, float* %green427, align 4, !dbg !3436
  %call428 = call zeroext i16 @ClampPixel(float %275), !dbg !3437
  %conv429 = zext i16 %call428 to i32, !dbg !3437
  %conv430 = sitofp i32 %conv429 to double, !dbg !3437
  %mul431 = fmul double %mul426, %conv430, !dbg !3438
  %276 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3439
  %total_color432 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %276, i32 0, i32 3, !dbg !3440
  %green433 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color432, i32 0, i32 1, !dbg !3441
  %277 = load float, float* %green433, align 4, !dbg !3442
  %conv434 = fpext float %277 to double, !dbg !3442
  %add435 = fadd double %conv434, %mul431, !dbg !3442
  %conv436 = fptrunc double %add435 to float, !dbg !3442
  store float %conv436, float* %green433, align 4, !dbg !3442
  %278 = load i64, i64* %count, align 8, !dbg !3443
  %conv437 = uitofp i64 %278 to double, !dbg !3443
  %mul438 = fmul double %conv437, 0x3EF0001000100010, !dbg !3444
  %blue439 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 2, !dbg !3445
  %279 = load float, float* %blue439, align 4, !dbg !3445
  %call440 = call zeroext i16 @ClampPixel(float %279), !dbg !3446
  %conv441 = zext i16 %call440 to i32, !dbg !3446
  %conv442 = sitofp i32 %conv441 to double, !dbg !3446
  %mul443 = fmul double %mul438, %conv442, !dbg !3447
  %280 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3448
  %total_color444 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %280, i32 0, i32 3, !dbg !3449
  %blue445 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color444, i32 0, i32 2, !dbg !3450
  %281 = load float, float* %blue445, align 8, !dbg !3451
  %conv446 = fpext float %281 to double, !dbg !3451
  %add447 = fadd double %conv446, %mul443, !dbg !3451
  %conv448 = fptrunc double %add447 to float, !dbg !3451
  store float %conv448, float* %blue445, align 8, !dbg !3451
  %282 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3452
  %associate_alpha449 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %282, i32 0, i32 19, !dbg !3454
  %283 = load i32, i32* %associate_alpha449, align 8, !dbg !3454
  %cmp450 = icmp ne i32 %283, 0, !dbg !3455
  br i1 %cmp450, label %if.then452, label %if.end465, !dbg !3456

if.then452:                                       ; preds = %for.end410
  %284 = load i64, i64* %count, align 8, !dbg !3457
  %conv453 = uitofp i64 %284 to double, !dbg !3457
  %mul454 = fmul double %conv453, 0x3EF0001000100010, !dbg !3458
  %opacity455 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 3, !dbg !3459
  %285 = load float, float* %opacity455, align 4, !dbg !3459
  %call456 = call zeroext i16 @ClampPixel(float %285), !dbg !3460
  %conv457 = zext i16 %call456 to i32, !dbg !3460
  %conv458 = sitofp i32 %conv457 to double, !dbg !3460
  %mul459 = fmul double %mul454, %conv458, !dbg !3461
  %286 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3462
  %total_color460 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %286, i32 0, i32 3, !dbg !3463
  %opacity461 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color460, i32 0, i32 3, !dbg !3464
  %287 = load float, float* %opacity461, align 4, !dbg !3465
  %conv462 = fpext float %287 to double, !dbg !3465
  %add463 = fadd double %conv462, %mul459, !dbg !3465
  %conv464 = fptrunc double %add463 to float, !dbg !3465
  store float %conv464, float* %opacity461, align 4, !dbg !3465
  br label %if.end465, !dbg !3462

if.end465:                                        ; preds = %if.then452, %for.end410
  %288 = load i64, i64* %count, align 8, !dbg !3466
  %289 = load %struct._PixelPacket*, %struct._PixelPacket** %p234, align 8, !dbg !3467
  %add.ptr466 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %289, i64 %288, !dbg !3467
  store %struct._PixelPacket* %add.ptr466, %struct._PixelPacket** %p234, align 8, !dbg !3467
  br label %for.inc467, !dbg !3468

for.inc467:                                       ; preds = %if.end465
  %290 = load i64, i64* %count, align 8, !dbg !3469
  %291 = load i64, i64* %x235, align 8, !dbg !3470
  %add468 = add nsw i64 %291, %290, !dbg !3470
  store i64 %add468, i64* %x235, align 8, !dbg !3470
  br label %for.cond250, !dbg !3471, !llvm.loop !3472

for.end469:                                       ; preds = %for.cond250
  %292 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3474
  %293 = load i64, i64* %y, align 8, !dbg !3475
  %294 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3476
  %rows470 = getelementptr inbounds %struct._Image, %struct._Image* %294, i32 0, i32 8, !dbg !3477
  %295 = load i64, i64* %rows470, align 8, !dbg !3477
  %call471 = call i32 @SetImageProgress(%struct._Image* %292, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i64 %293, i64 %295), !dbg !3478
  store i32 %call471, i32* %proceed, align 4, !dbg !3479
  %296 = load i32, i32* %proceed, align 4, !dbg !3480
  %cmp472 = icmp eq i32 %296, 0, !dbg !3482
  br i1 %cmp472, label %if.then474, label %if.end475, !dbg !3483

if.then474:                                       ; preds = %for.end469
  br label %for.end478, !dbg !3484

if.end475:                                        ; preds = %for.end469
  br label %for.inc476, !dbg !3485

for.inc476:                                       ; preds = %if.end475
  %297 = load i64, i64* %y, align 8, !dbg !3486
  %inc477 = add nsw i64 %297, 1, !dbg !3486
  store i64 %inc477, i64* %y, align 8, !dbg !3486
  br label %for.cond229, !dbg !3487, !llvm.loop !3488

for.end478:                                       ; preds = %if.then474, %if.then240, %for.cond229
  %298 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3490
  %call479 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %298), !dbg !3491
  store %struct._CacheView* %call479, %struct._CacheView** %image_view, align 8, !dbg !3492
  %299 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3493
  %quantize_info480 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %299, i32 0, i32 18, !dbg !3495
  %300 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info480, align 8, !dbg !3495
  %colorspace481 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %300, i32 0, i32 3, !dbg !3496
  %301 = load i32, i32* %colorspace481, align 4, !dbg !3496
  %cmp482 = icmp ne i32 %301, 0, !dbg !3497
  br i1 %cmp482, label %land.lhs.true484, label %if.end491, !dbg !3498

land.lhs.true484:                                 ; preds = %for.end478
  %302 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3499
  %quantize_info485 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %302, i32 0, i32 18, !dbg !3500
  %303 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info485, align 8, !dbg !3500
  %colorspace486 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %303, i32 0, i32 3, !dbg !3501
  %304 = load i32, i32* %colorspace486, align 4, !dbg !3501
  %cmp487 = icmp ne i32 %304, 12, !dbg !3502
  br i1 %cmp487, label %if.then489, label %if.end491, !dbg !3503

if.then489:                                       ; preds = %land.lhs.true484
  %305 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3504
  %call490 = call i32 @TransformImageColorspace(%struct._Image* %305, i32 13), !dbg !3505
  br label %if.end491, !dbg !3506

if.end491:                                        ; preds = %if.then489, %land.lhs.true484, %for.end478
  %306 = load i64, i64* %y, align 8, !dbg !3507
  %307 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3508
  %rows492 = getelementptr inbounds %struct._Image, %struct._Image* %307, i32 0, i32 8, !dbg !3509
  %308 = load i64, i64* %rows492, align 8, !dbg !3509
  %cmp493 = icmp slt i64 %306, %308, !dbg !3510
  %309 = zext i1 %cmp493 to i64, !dbg !3507
  %cond495 = select i1 %cmp493, i32 0, i32 1, !dbg !3507
  ret i32 %cond495, !dbg !3511
}

; Function Attrs: noinline nounwind uwtable
define internal void @ReduceImageColors(%struct._Image* %image, %struct._CubeInfo* %cube_info) #0 !dbg !3512 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %cube_info.addr = alloca %struct._CubeInfo*, align 8
  %proceed = alloca i32, align 4
  %offset = alloca i64, align 8
  %span = alloca i64, align 8
  %quantize_error = alloca float*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3515, metadata !DIExpression()), !dbg !3516
  store %struct._CubeInfo* %cube_info, %struct._CubeInfo** %cube_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info.addr, metadata !3517, metadata !DIExpression()), !dbg !3518
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !3519, metadata !DIExpression()), !dbg !3520
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !3521, metadata !DIExpression()), !dbg !3522
  call void @llvm.dbg.declare(metadata i64* %span, metadata !3523, metadata !DIExpression()), !dbg !3524
  %0 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3525
  %next_threshold = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %0, i32 0, i32 8, !dbg !3526
  store float 0.000000e+00, float* %next_threshold, align 8, !dbg !3527
  %1 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3528
  %colors = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %1, i32 0, i32 1, !dbg !3530
  %2 = load i64, i64* %colors, align 8, !dbg !3530
  %3 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3531
  %maximum_colors = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %3, i32 0, i32 2, !dbg !3532
  %4 = load i64, i64* %maximum_colors, align 8, !dbg !3532
  %cmp = icmp ugt i64 %2, %4, !dbg !3533
  br i1 %cmp, label %land.lhs.true, label %if.end12, !dbg !3534

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3535
  %nodes = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %5, i32 0, i32 9, !dbg !3536
  %6 = load i64, i64* %nodes, align 8, !dbg !3536
  %cmp1 = icmp ugt i64 %6, 128, !dbg !3537
  br i1 %cmp1, label %if.then, label %if.end12, !dbg !3538

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float** %quantize_error, metadata !3539, metadata !DIExpression()), !dbg !3541
  %7 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3542
  %nodes2 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %7, i32 0, i32 9, !dbg !3543
  %8 = load i64, i64* %nodes2, align 8, !dbg !3543
  %call = call i8* @AcquireQuantumMemory(i64 %8, i64 4) #12, !dbg !3544
  %9 = bitcast i8* %call to float*, !dbg !3545
  store float* %9, float** %quantize_error, align 8, !dbg !3546
  %10 = load float*, float** %quantize_error, align 8, !dbg !3547
  %cmp3 = icmp ne float* %10, null, !dbg !3549
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !3550

if.then4:                                         ; preds = %if.then
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3551
  %12 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3553
  %13 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3554
  %root = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %13, i32 0, i32 0, !dbg !3555
  %14 = load %struct._NodeInfo*, %struct._NodeInfo** %root, align 8, !dbg !3555
  %15 = load float*, float** %quantize_error, align 8, !dbg !3556
  %call5 = call i64 @QuantizeErrorFlatten(%struct._Image* %11, %struct._CubeInfo* %12, %struct._NodeInfo* %14, i64 0, float* %15), !dbg !3557
  %16 = load float*, float** %quantize_error, align 8, !dbg !3558
  %17 = bitcast float* %16 to i8*, !dbg !3558
  %18 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3559
  %nodes6 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %18, i32 0, i32 9, !dbg !3560
  %19 = load i64, i64* %nodes6, align 8, !dbg !3560
  call void @qsort(i8* %17, i64 %19, i64 4, i32 (i8*, i8*)* @MagickRealTypeCompare), !dbg !3561
  %20 = load float*, float** %quantize_error, align 8, !dbg !3562
  %21 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3563
  %nodes7 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %21, i32 0, i32 9, !dbg !3564
  %22 = load i64, i64* %nodes7, align 8, !dbg !3564
  %23 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3565
  %maximum_colors8 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %23, i32 0, i32 2, !dbg !3566
  %24 = load i64, i64* %maximum_colors8, align 8, !dbg !3566
  %add = add i64 %24, 1, !dbg !3567
  %mul = mul i64 110, %add, !dbg !3568
  %div = udiv i64 %mul, 100, !dbg !3569
  %sub = sub i64 %22, %div, !dbg !3570
  %call9 = call i64 @MagickMax(i64 %sub, i64 0), !dbg !3571
  %arrayidx = getelementptr inbounds float, float* %20, i64 %call9, !dbg !3562
  %25 = load float, float* %arrayidx, align 4, !dbg !3562
  %26 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3572
  %next_threshold10 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %26, i32 0, i32 8, !dbg !3573
  store float %25, float* %next_threshold10, align 8, !dbg !3574
  %27 = load float*, float** %quantize_error, align 8, !dbg !3575
  %28 = bitcast float* %27 to i8*, !dbg !3575
  %call11 = call i8* @RelinquishMagickMemory(i8* %28), !dbg !3576
  %29 = bitcast i8* %call11 to float*, !dbg !3577
  store float* %29, float** %quantize_error, align 8, !dbg !3578
  br label %if.end, !dbg !3579

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end12, !dbg !3580

if.end12:                                         ; preds = %if.end, %land.lhs.true, %entry
  %30 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3581
  %colors13 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %30, i32 0, i32 1, !dbg !3583
  %31 = load i64, i64* %colors13, align 8, !dbg !3583
  store i64 %31, i64* %span, align 8, !dbg !3584
  br label %for.cond, !dbg !3585

for.cond:                                         ; preds = %if.end32, %if.end12
  %32 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3586
  %colors14 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %32, i32 0, i32 1, !dbg !3588
  %33 = load i64, i64* %colors14, align 8, !dbg !3588
  %34 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3589
  %maximum_colors15 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %34, i32 0, i32 2, !dbg !3590
  %35 = load i64, i64* %maximum_colors15, align 8, !dbg !3590
  %cmp16 = icmp ugt i64 %33, %35, !dbg !3591
  br i1 %cmp16, label %for.body, label %for.end, !dbg !3592

for.body:                                         ; preds = %for.cond
  %36 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3593
  %next_threshold17 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %36, i32 0, i32 8, !dbg !3595
  %37 = load float, float* %next_threshold17, align 8, !dbg !3595
  %38 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3596
  %pruning_threshold = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %38, i32 0, i32 7, !dbg !3597
  store float %37, float* %pruning_threshold, align 4, !dbg !3598
  %39 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3599
  %root18 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %39, i32 0, i32 0, !dbg !3600
  %40 = load %struct._NodeInfo*, %struct._NodeInfo** %root18, align 8, !dbg !3600
  %quantize_error19 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %40, i32 0, i32 4, !dbg !3601
  %41 = load float, float* %quantize_error19, align 8, !dbg !3601
  %sub20 = fsub float %41, 1.000000e+00, !dbg !3602
  %42 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3603
  %next_threshold21 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %42, i32 0, i32 8, !dbg !3604
  store float %sub20, float* %next_threshold21, align 8, !dbg !3605
  %43 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3606
  %colors22 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %43, i32 0, i32 1, !dbg !3607
  store i64 0, i64* %colors22, align 8, !dbg !3608
  %44 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3609
  %45 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3610
  %46 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3611
  %root23 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %46, i32 0, i32 0, !dbg !3612
  %47 = load %struct._NodeInfo*, %struct._NodeInfo** %root23, align 8, !dbg !3612
  call void @Reduce(%struct._Image* %44, %struct._CubeInfo* %45, %struct._NodeInfo* %47), !dbg !3613
  %48 = load i64, i64* %span, align 8, !dbg !3614
  %49 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3615
  %colors24 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %49, i32 0, i32 1, !dbg !3616
  %50 = load i64, i64* %colors24, align 8, !dbg !3616
  %sub25 = sub i64 %48, %50, !dbg !3617
  store i64 %sub25, i64* %offset, align 8, !dbg !3618
  %51 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3619
  %52 = load i64, i64* %offset, align 8, !dbg !3620
  %53 = load i64, i64* %span, align 8, !dbg !3621
  %54 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3622
  %maximum_colors26 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %54, i32 0, i32 2, !dbg !3623
  %55 = load i64, i64* %maximum_colors26, align 8, !dbg !3623
  %sub27 = sub i64 %53, %55, !dbg !3624
  %add28 = add i64 %sub27, 1, !dbg !3625
  %call29 = call i32 @SetImageProgress(%struct._Image* %51, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i64 %52, i64 %add28), !dbg !3626
  store i32 %call29, i32* %proceed, align 4, !dbg !3627
  %56 = load i32, i32* %proceed, align 4, !dbg !3628
  %cmp30 = icmp eq i32 %56, 0, !dbg !3630
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !3631

if.then31:                                        ; preds = %for.body
  br label %for.end, !dbg !3632

if.end32:                                         ; preds = %for.body
  br label %for.cond, !dbg !3633, !llvm.loop !3634

for.end:                                          ; preds = %if.then31, %for.cond
  ret void, !dbg !3636
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @AssignImageColors(%struct._Image* %image, %struct._CubeInfo* %cube_info) #0 !dbg !3637 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %cube_info.addr = alloca %struct._CubeInfo*, align 8
  %y = alloca i64, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %exception30 = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %cube = alloca %struct._CubeInfo, align 8
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %count = alloca i64, align 8
  %pixel = alloca %struct._RealPixelPacket, align 4
  %node_info = alloca %struct._NodeInfo*, align 8
  %i = alloca i64, align 8
  %id = alloca i64, align 8
  %index = alloca i64, align 8
  %proceed = alloca i32, align 4
  %intensity = alloca i16, align 2
  %q141 = alloca %struct._PixelPacket*, align 8
  %i142 = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3640, metadata !DIExpression()), !dbg !3641
  store %struct._CubeInfo* %cube_info, %struct._CubeInfo** %cube_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info.addr, metadata !3642, metadata !DIExpression()), !dbg !3643
  call void @llvm.dbg.declare(metadata i64* %y, metadata !3644, metadata !DIExpression()), !dbg !3645
  %0 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3646
  %quantize_info = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %0, i32 0, i32 18, !dbg !3648
  %1 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !3648
  %colorspace = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %1, i32 0, i32 3, !dbg !3649
  %2 = load i32, i32* %colorspace, align 4, !dbg !3649
  %cmp = icmp ne i32 %2, 0, !dbg !3650
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !3651

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3652
  %quantize_info1 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %3, i32 0, i32 18, !dbg !3653
  %4 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info1, align 8, !dbg !3653
  %colorspace2 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %4, i32 0, i32 3, !dbg !3654
  %5 = load i32, i32* %colorspace2, align 4, !dbg !3654
  %cmp3 = icmp ne i32 %5, 12, !dbg !3655
  br i1 %cmp3, label %if.then, label %if.else, !dbg !3656

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3657
  %7 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3658
  %quantize_info4 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %7, i32 0, i32 18, !dbg !3659
  %8 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info4, align 8, !dbg !3659
  %colorspace5 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %8, i32 0, i32 3, !dbg !3660
  %9 = load i32, i32* %colorspace5, align 4, !dbg !3660
  %call = call i32 @TransformImageColorspace(%struct._Image* %6, i32 %9), !dbg !3661
  br label %if.end11, !dbg !3662

if.else:                                          ; preds = %land.lhs.true, %entry
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3663
  %colorspace6 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 1, !dbg !3665
  %11 = load i32, i32* %colorspace6, align 4, !dbg !3665
  %call7 = call i32 @IssRGBCompatibleColorspace(i32 %11), !dbg !3666
  %cmp8 = icmp eq i32 %call7, 0, !dbg !3667
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !3668

if.then9:                                         ; preds = %if.else
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3669
  %call10 = call i32 @TransformImageColorspace(%struct._Image* %12, i32 13), !dbg !3670
  br label %if.end, !dbg !3671

if.end:                                           ; preds = %if.then9, %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3672
  %14 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3674
  %colors = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %14, i32 0, i32 1, !dbg !3675
  %15 = load i64, i64* %colors, align 8, !dbg !3675
  %call12 = call i32 @AcquireImageColormap(%struct._Image* %13, i64 %15), !dbg !3676
  %cmp13 = icmp eq i32 %call12, 0, !dbg !3677
  br i1 %cmp13, label %if.then14, label %if.end19, !dbg !3678

if.then14:                                        ; preds = %if.end11
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3679
  %cmp15 = icmp ne %struct._Image* %16, null, !dbg !3679
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !3682

if.then16:                                        ; preds = %if.then14
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3679
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 58, !dbg !3679
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3679
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 53, !dbg !3679
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !3679
  %call17 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 517, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay), !dbg !3679
  br label %if.end18, !dbg !3679

if.end18:                                         ; preds = %if.then16, %if.then14
  store i32 0, i32* %retval, align 4, !dbg !3682
  br label %return, !dbg !3682

if.end19:                                         ; preds = %if.end11
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3683
  %colors20 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 10, !dbg !3684
  store i64 0, i64* %colors20, align 8, !dbg !3685
  %20 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3686
  %transparent_pixels = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %20, i32 0, i32 4, !dbg !3687
  store i64 0, i64* %transparent_pixels, align 8, !dbg !3688
  %21 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3689
  %transparent_index = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %21, i32 0, i32 3, !dbg !3690
  store i64 -1, i64* %transparent_index, align 8, !dbg !3691
  %22 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3692
  %23 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3693
  %24 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3694
  %root = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %24, i32 0, i32 0, !dbg !3695
  %25 = load %struct._NodeInfo*, %struct._NodeInfo** %root, align 8, !dbg !3695
  %call21 = call i64 @DefineImageColormap(%struct._Image* %22, %struct._CubeInfo* %23, %struct._NodeInfo* %25), !dbg !3696
  %26 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3697
  %quantize_info22 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %26, i32 0, i32 18, !dbg !3699
  %27 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info22, align 8, !dbg !3699
  %dither = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %27, i32 0, i32 2, !dbg !3700
  %28 = load i32, i32* %dither, align 8, !dbg !3700
  %cmp23 = icmp ne i32 %28, 0, !dbg !3701
  br i1 %cmp23, label %land.lhs.true24, label %if.else29, !dbg !3702

land.lhs.true24:                                  ; preds = %if.end19
  %29 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3703
  %quantize_info25 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %29, i32 0, i32 18, !dbg !3704
  %30 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info25, align 8, !dbg !3704
  %dither_method = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %30, i32 0, i32 6, !dbg !3705
  %31 = load i32, i32* %dither_method, align 8, !dbg !3705
  %cmp26 = icmp ne i32 %31, 1, !dbg !3706
  br i1 %cmp26, label %if.then27, label %if.else29, !dbg !3707

if.then27:                                        ; preds = %land.lhs.true24
  %32 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3708
  %33 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3709
  %call28 = call i32 @DitherImage(%struct._Image* %32, %struct._CubeInfo* %33), !dbg !3710
  br label %if.end124, !dbg !3711

if.else29:                                        ; preds = %land.lhs.true24, %if.end19
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !3712, metadata !DIExpression()), !dbg !3714
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception30, metadata !3715, metadata !DIExpression()), !dbg !3716
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3717, metadata !DIExpression()), !dbg !3718
  store i32 1, i32* %status, align 4, !dbg !3719
  %34 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3720
  %exception31 = getelementptr inbounds %struct._Image, %struct._Image* %34, i32 0, i32 58, !dbg !3721
  store %struct._ExceptionInfo* %exception31, %struct._ExceptionInfo** %exception30, align 8, !dbg !3722
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3723
  %36 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception30, align 8, !dbg !3724
  %call32 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %35, %struct._ExceptionInfo* %36), !dbg !3725
  store %struct._CacheView* %call32, %struct._CacheView** %image_view, align 8, !dbg !3726
  store i64 0, i64* %y, align 8, !dbg !3727
  br label %for.cond, !dbg !3729

for.cond:                                         ; preds = %for.inc120, %if.else29
  %37 = load i64, i64* %y, align 8, !dbg !3730
  %38 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3732
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %38, i32 0, i32 8, !dbg !3733
  %39 = load i64, i64* %rows, align 8, !dbg !3733
  %cmp33 = icmp slt i64 %37, %39, !dbg !3734
  br i1 %cmp33, label %for.body, label %for.end122, !dbg !3735

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._CubeInfo* %cube, metadata !3736, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !3739, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !3741, metadata !DIExpression()), !dbg !3742
  call void @llvm.dbg.declare(metadata i64* %x, metadata !3743, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.declare(metadata i64* %count, metadata !3745, metadata !DIExpression()), !dbg !3746
  %40 = load i32, i32* %status, align 4, !dbg !3747
  %cmp34 = icmp eq i32 %40, 0, !dbg !3749
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !3750

if.then35:                                        ; preds = %for.body
  br label %for.inc120, !dbg !3751

if.end36:                                         ; preds = %for.body
  %41 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3752
  %42 = load i64, i64* %y, align 8, !dbg !3753
  %43 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3754
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %43, i32 0, i32 7, !dbg !3755
  %44 = load i64, i64* %columns, align 8, !dbg !3755
  %45 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception30, align 8, !dbg !3756
  %call37 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %41, i64 0, i64 %42, i64 %44, i64 1, %struct._ExceptionInfo* %45), !dbg !3757
  store %struct._PixelPacket* %call37, %struct._PixelPacket** %q, align 8, !dbg !3758
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3759
  %cmp38 = icmp eq %struct._PixelPacket* %46, null, !dbg !3761
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !3762

if.then39:                                        ; preds = %if.end36
  store i32 0, i32* %status, align 4, !dbg !3763
  br label %for.inc120, !dbg !3765

if.end40:                                         ; preds = %if.end36
  %47 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3766
  %call41 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %47), !dbg !3767
  store i16* %call41, i16** %indexes, align 8, !dbg !3768
  %48 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3769
  %49 = bitcast %struct._CubeInfo* %cube to i8*, !dbg !3770
  %50 = bitcast %struct._CubeInfo* %48 to i8*, !dbg !3770
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 504, i1 false), !dbg !3770
  store i64 0, i64* %x, align 8, !dbg !3771
  br label %for.cond42, !dbg !3773

for.cond42:                                       ; preds = %for.inc102, %if.end40
  %51 = load i64, i64* %x, align 8, !dbg !3774
  %52 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3776
  %columns43 = getelementptr inbounds %struct._Image, %struct._Image* %52, i32 0, i32 7, !dbg !3777
  %53 = load i64, i64* %columns43, align 8, !dbg !3777
  %cmp44 = icmp slt i64 %51, %53, !dbg !3778
  br i1 %cmp44, label %for.body45, label %for.end104, !dbg !3779

for.body45:                                       ; preds = %for.cond42
  call void @llvm.dbg.declare(metadata %struct._RealPixelPacket* %pixel, metadata !3780, metadata !DIExpression()), !dbg !3782
  call void @llvm.dbg.declare(metadata %struct._NodeInfo** %node_info, metadata !3783, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.declare(metadata i64* %i, metadata !3787, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.declare(metadata i64* %id, metadata !3789, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.declare(metadata i64* %index, metadata !3791, metadata !DIExpression()), !dbg !3792
  store i64 1, i64* %count, align 8, !dbg !3793
  br label %for.cond46, !dbg !3795

for.cond46:                                       ; preds = %for.inc, %for.body45
  %54 = load i64, i64* %x, align 8, !dbg !3796
  %55 = load i64, i64* %count, align 8, !dbg !3798
  %add = add nsw i64 %54, %55, !dbg !3799
  %56 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3800
  %columns47 = getelementptr inbounds %struct._Image, %struct._Image* %56, i32 0, i32 7, !dbg !3801
  %57 = load i64, i64* %columns47, align 8, !dbg !3801
  %cmp48 = icmp slt i64 %add, %57, !dbg !3802
  br i1 %cmp48, label %for.body49, label %for.end, !dbg !3803

for.body49:                                       ; preds = %for.cond46
  %58 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3804
  %59 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3806
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3807
  %61 = load i64, i64* %count, align 8, !dbg !3808
  %add.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i64 %61, !dbg !3809
  %call50 = call i32 @IsSameColor(%struct._Image* %58, %struct._PixelPacket* %59, %struct._PixelPacket* %add.ptr), !dbg !3810
  %cmp51 = icmp eq i32 %call50, 0, !dbg !3811
  br i1 %cmp51, label %if.then52, label %if.end53, !dbg !3812

if.then52:                                        ; preds = %for.body49
  br label %for.end, !dbg !3813

if.end53:                                         ; preds = %for.body49
  br label %for.inc, !dbg !3814

for.inc:                                          ; preds = %if.end53
  %62 = load i64, i64* %count, align 8, !dbg !3815
  %inc = add nsw i64 %62, 1, !dbg !3815
  store i64 %inc, i64* %count, align 8, !dbg !3815
  br label %for.cond46, !dbg !3816, !llvm.loop !3817

for.end:                                          ; preds = %if.then52, %for.cond46
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3819
  call void @AssociateAlphaPixel(%struct._CubeInfo* %cube, %struct._PixelPacket* %63, %struct._RealPixelPacket* %pixel), !dbg !3820
  %root54 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 0, !dbg !3821
  %64 = load %struct._NodeInfo*, %struct._NodeInfo** %root54, align 8, !dbg !3821
  store %struct._NodeInfo* %64, %struct._NodeInfo** %node_info, align 8, !dbg !3822
  store i64 7, i64* %index, align 8, !dbg !3823
  br label %for.cond55, !dbg !3825

for.cond55:                                       ; preds = %for.inc64, %for.end
  %65 = load i64, i64* %index, align 8, !dbg !3826
  %cmp56 = icmp sgt i64 %65, 0, !dbg !3828
  br i1 %cmp56, label %for.body57, label %for.end65, !dbg !3829

for.body57:                                       ; preds = %for.cond55
  %66 = load i64, i64* %index, align 8, !dbg !3830
  %call58 = call i64 @ColorToNodeId(%struct._CubeInfo* %cube, %struct._RealPixelPacket* %pixel, i64 %66), !dbg !3832
  store i64 %call58, i64* %id, align 8, !dbg !3833
  %67 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3834
  %child = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %67, i32 0, i32 1, !dbg !3836
  %68 = load i64, i64* %id, align 8, !dbg !3837
  %arrayidx = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child, i64 0, i64 %68, !dbg !3834
  %69 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx, align 8, !dbg !3834
  %cmp59 = icmp eq %struct._NodeInfo* %69, null, !dbg !3838
  br i1 %cmp59, label %if.then60, label %if.end61, !dbg !3839

if.then60:                                        ; preds = %for.body57
  br label %for.end65, !dbg !3840

if.end61:                                         ; preds = %for.body57
  %70 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3841
  %child62 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %70, i32 0, i32 1, !dbg !3842
  %71 = load i64, i64* %id, align 8, !dbg !3843
  %arrayidx63 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child62, i64 0, i64 %71, !dbg !3841
  %72 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx63, align 8, !dbg !3841
  store %struct._NodeInfo* %72, %struct._NodeInfo** %node_info, align 8, !dbg !3844
  br label %for.inc64, !dbg !3845

for.inc64:                                        ; preds = %if.end61
  %73 = load i64, i64* %index, align 8, !dbg !3846
  %dec = add i64 %73, -1, !dbg !3846
  store i64 %dec, i64* %index, align 8, !dbg !3846
  br label %for.cond55, !dbg !3847, !llvm.loop !3848

for.end65:                                        ; preds = %if.then60, %for.cond55
  %target = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 5, !dbg !3850
  %74 = bitcast %struct._RealPixelPacket* %target to i8*, !dbg !3851
  %75 = bitcast %struct._RealPixelPacket* %pixel to i8*, !dbg !3851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 4 %75, i64 16, i1 false), !dbg !3851
  %distance = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 6, !dbg !3852
  store float 0x4210000000000000, float* %distance, align 8, !dbg !3853
  %76 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3854
  %77 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !3855
  %parent = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %77, i32 0, i32 0, !dbg !3856
  %78 = load %struct._NodeInfo*, %struct._NodeInfo** %parent, align 8, !dbg !3856
  call void @ClosestColor(%struct._Image* %76, %struct._CubeInfo* %cube, %struct._NodeInfo* %78), !dbg !3857
  %color_number = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 11, !dbg !3858
  %79 = load i64, i64* %color_number, align 8, !dbg !3858
  store i64 %79, i64* %index, align 8, !dbg !3859
  store i64 0, i64* %i, align 8, !dbg !3860
  br label %for.cond66, !dbg !3862

for.cond66:                                       ; preds = %for.inc99, %for.end65
  %80 = load i64, i64* %i, align 8, !dbg !3863
  %81 = load i64, i64* %count, align 8, !dbg !3865
  %cmp67 = icmp slt i64 %80, %81, !dbg !3866
  br i1 %cmp67, label %for.body68, label %for.end101, !dbg !3867

for.body68:                                       ; preds = %for.cond66
  %82 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3868
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %82, i32 0, i32 0, !dbg !3871
  %83 = load i32, i32* %storage_class, align 8, !dbg !3871
  %cmp69 = icmp eq i32 %83, 2, !dbg !3872
  br i1 %cmp69, label %if.then70, label %if.end78, !dbg !3873

if.then70:                                        ; preds = %for.body68
  %84 = load i16*, i16** %indexes, align 8, !dbg !3874
  %85 = load i64, i64* %x, align 8, !dbg !3874
  %add.ptr71 = getelementptr inbounds i16, i16* %84, i64 %85, !dbg !3874
  %86 = load i64, i64* %i, align 8, !dbg !3874
  %add.ptr72 = getelementptr inbounds i16, i16* %add.ptr71, i64 %86, !dbg !3874
  %cmp73 = icmp ne i16* %add.ptr72, null, !dbg !3874
  br i1 %cmp73, label %if.then74, label %if.end77, !dbg !3877

if.then74:                                        ; preds = %if.then70
  %87 = load i64, i64* %index, align 8, !dbg !3874
  %conv = trunc i64 %87 to i16, !dbg !3874
  %88 = load i16*, i16** %indexes, align 8, !dbg !3874
  %89 = load i64, i64* %x, align 8, !dbg !3874
  %add.ptr75 = getelementptr inbounds i16, i16* %88, i64 %89, !dbg !3874
  %90 = load i64, i64* %i, align 8, !dbg !3874
  %add.ptr76 = getelementptr inbounds i16, i16* %add.ptr75, i64 %90, !dbg !3874
  store i16 %conv, i16* %add.ptr76, align 2, !dbg !3874
  br label %if.end77, !dbg !3874

if.end77:                                         ; preds = %if.then74, %if.then70
  br label %if.end78, !dbg !3877

if.end78:                                         ; preds = %if.end77, %for.body68
  %quantize_info79 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 18, !dbg !3878
  %91 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info79, align 8, !dbg !3878
  %measure_error = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %91, i32 0, i32 4, !dbg !3880
  %92 = load i32, i32* %measure_error, align 8, !dbg !3880
  %cmp80 = icmp eq i32 %92, 0, !dbg !3881
  br i1 %cmp80, label %if.then82, label %if.end98, !dbg !3882

if.then82:                                        ; preds = %if.end78
  %93 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3883
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %93, i32 0, i32 11, !dbg !3883
  %94 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !3883
  %95 = load i64, i64* %index, align 8, !dbg !3883
  %add.ptr83 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %94, i64 %95, !dbg !3883
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr83, i32 0, i32 2, !dbg !3883
  %96 = load i16, i16* %red, align 2, !dbg !3883
  %97 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3883
  %red84 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %97, i32 0, i32 2, !dbg !3883
  store i16 %96, i16* %red84, align 2, !dbg !3883
  %98 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3883
  %colormap85 = getelementptr inbounds %struct._Image, %struct._Image* %98, i32 0, i32 11, !dbg !3883
  %99 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap85, align 8, !dbg !3883
  %100 = load i64, i64* %index, align 8, !dbg !3883
  %add.ptr86 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %99, i64 %100, !dbg !3883
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr86, i32 0, i32 1, !dbg !3883
  %101 = load i16, i16* %green, align 2, !dbg !3883
  %102 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3883
  %green87 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %102, i32 0, i32 1, !dbg !3883
  store i16 %101, i16* %green87, align 2, !dbg !3883
  %103 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3883
  %colormap88 = getelementptr inbounds %struct._Image, %struct._Image* %103, i32 0, i32 11, !dbg !3883
  %104 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap88, align 8, !dbg !3883
  %105 = load i64, i64* %index, align 8, !dbg !3883
  %add.ptr89 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %104, i64 %105, !dbg !3883
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr89, i32 0, i32 0, !dbg !3883
  %106 = load i16, i16* %blue, align 2, !dbg !3883
  %107 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3883
  %blue90 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %107, i32 0, i32 0, !dbg !3883
  store i16 %106, i16* %blue90, align 2, !dbg !3883
  %associate_alpha = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 19, !dbg !3886
  %108 = load i32, i32* %associate_alpha, align 8, !dbg !3886
  %cmp91 = icmp ne i32 %108, 0, !dbg !3888
  br i1 %cmp91, label %if.then93, label %if.end97, !dbg !3889

if.then93:                                        ; preds = %if.then82
  %109 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3890
  %colormap94 = getelementptr inbounds %struct._Image, %struct._Image* %109, i32 0, i32 11, !dbg !3890
  %110 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap94, align 8, !dbg !3890
  %111 = load i64, i64* %index, align 8, !dbg !3890
  %arrayidx95 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %110, i64 %111, !dbg !3890
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx95, i32 0, i32 3, !dbg !3890
  %112 = load i16, i16* %opacity, align 2, !dbg !3890
  %113 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3890
  %opacity96 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %113, i32 0, i32 3, !dbg !3890
  store i16 %112, i16* %opacity96, align 2, !dbg !3890
  br label %if.end97, !dbg !3890

if.end97:                                         ; preds = %if.then93, %if.then82
  br label %if.end98, !dbg !3891

if.end98:                                         ; preds = %if.end97, %if.end78
  %114 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3892
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %114, i32 1, !dbg !3892
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !3892
  br label %for.inc99, !dbg !3893

for.inc99:                                        ; preds = %if.end98
  %115 = load i64, i64* %i, align 8, !dbg !3894
  %inc100 = add nsw i64 %115, 1, !dbg !3894
  store i64 %inc100, i64* %i, align 8, !dbg !3894
  br label %for.cond66, !dbg !3895, !llvm.loop !3896

for.end101:                                       ; preds = %for.cond66
  br label %for.inc102, !dbg !3898

for.inc102:                                       ; preds = %for.end101
  %116 = load i64, i64* %count, align 8, !dbg !3899
  %117 = load i64, i64* %x, align 8, !dbg !3900
  %add103 = add nsw i64 %117, %116, !dbg !3900
  store i64 %add103, i64* %x, align 8, !dbg !3900
  br label %for.cond42, !dbg !3901, !llvm.loop !3902

for.end104:                                       ; preds = %for.cond42
  %118 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3904
  %119 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception30, align 8, !dbg !3906
  %call105 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %118, %struct._ExceptionInfo* %119), !dbg !3907
  %cmp106 = icmp eq i32 %call105, 0, !dbg !3908
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !3909

if.then108:                                       ; preds = %for.end104
  store i32 0, i32* %status, align 4, !dbg !3910
  br label %if.end109, !dbg !3911

if.end109:                                        ; preds = %if.then108, %for.end104
  %120 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3912
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %120, i32 0, i32 47, !dbg !3914
  %121 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !3914
  %cmp110 = icmp ne i32 (i8*, i64, i64, i8*)* %121, null, !dbg !3915
  br i1 %cmp110, label %if.then112, label %if.end119, !dbg !3916

if.then112:                                       ; preds = %if.end109
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !3917, metadata !DIExpression()), !dbg !3919
  %122 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3920
  %123 = load i64, i64* %y, align 8, !dbg !3921
  %124 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3922
  %rows113 = getelementptr inbounds %struct._Image, %struct._Image* %124, i32 0, i32 8, !dbg !3923
  %125 = load i64, i64* %rows113, align 8, !dbg !3923
  %call114 = call i32 @SetImageProgress(%struct._Image* %122, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i64 %123, i64 %125), !dbg !3924
  store i32 %call114, i32* %proceed, align 4, !dbg !3925
  %126 = load i32, i32* %proceed, align 4, !dbg !3926
  %cmp115 = icmp eq i32 %126, 0, !dbg !3928
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !3929

if.then117:                                       ; preds = %if.then112
  store i32 0, i32* %status, align 4, !dbg !3930
  br label %if.end118, !dbg !3931

if.end118:                                        ; preds = %if.then117, %if.then112
  br label %if.end119, !dbg !3932

if.end119:                                        ; preds = %if.end118, %if.end109
  br label %for.inc120, !dbg !3933

for.inc120:                                       ; preds = %if.end119, %if.then39, %if.then35
  %127 = load i64, i64* %y, align 8, !dbg !3934
  %inc121 = add nsw i64 %127, 1, !dbg !3934
  store i64 %inc121, i64* %y, align 8, !dbg !3934
  br label %for.cond, !dbg !3935, !llvm.loop !3936

for.end122:                                       ; preds = %for.cond
  %128 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3938
  %call123 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %128), !dbg !3939
  store %struct._CacheView* %call123, %struct._CacheView** %image_view, align 8, !dbg !3940
  br label %if.end124

if.end124:                                        ; preds = %for.end122, %if.then27
  %129 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3941
  %quantize_info125 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %129, i32 0, i32 18, !dbg !3943
  %130 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info125, align 8, !dbg !3943
  %measure_error126 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %130, i32 0, i32 4, !dbg !3944
  %131 = load i32, i32* %measure_error126, align 8, !dbg !3944
  %cmp127 = icmp ne i32 %131, 0, !dbg !3945
  br i1 %cmp127, label %if.then129, label %if.end131, !dbg !3946

if.then129:                                       ; preds = %if.end124
  %132 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3947
  %call130 = call i32 @GetImageQuantizeError(%struct._Image* %132), !dbg !3948
  br label %if.end131, !dbg !3949

if.end131:                                        ; preds = %if.then129, %if.end124
  %133 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3950
  %quantize_info132 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %133, i32 0, i32 18, !dbg !3952
  %134 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info132, align 8, !dbg !3952
  %number_colors = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %134, i32 0, i32 0, !dbg !3953
  %135 = load i64, i64* %number_colors, align 8, !dbg !3953
  %cmp133 = icmp eq i64 %135, 2, !dbg !3954
  br i1 %cmp133, label %land.lhs.true135, label %if.end161, !dbg !3955

land.lhs.true135:                                 ; preds = %if.end131
  %136 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3956
  %quantize_info136 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %136, i32 0, i32 18, !dbg !3957
  %137 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info136, align 8, !dbg !3957
  %colorspace137 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %137, i32 0, i32 3, !dbg !3958
  %138 = load i32, i32* %colorspace137, align 4, !dbg !3958
  %cmp138 = icmp eq i32 %138, 2, !dbg !3959
  br i1 %cmp138, label %if.then140, label %if.end161, !dbg !3960

if.then140:                                       ; preds = %land.lhs.true135
  call void @llvm.dbg.declare(metadata i16* %intensity, metadata !3961, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q141, metadata !3964, metadata !DIExpression()), !dbg !3965
  call void @llvm.dbg.declare(metadata i64* %i142, metadata !3966, metadata !DIExpression()), !dbg !3967
  %139 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3968
  %colormap143 = getelementptr inbounds %struct._Image, %struct._Image* %139, i32 0, i32 11, !dbg !3969
  %140 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap143, align 8, !dbg !3969
  store %struct._PixelPacket* %140, %struct._PixelPacket** %q141, align 8, !dbg !3970
  store i64 0, i64* %i142, align 8, !dbg !3971
  br label %for.cond144, !dbg !3973

for.cond144:                                      ; preds = %for.inc158, %if.then140
  %141 = load i64, i64* %i142, align 8, !dbg !3974
  %142 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3976
  %colors145 = getelementptr inbounds %struct._Image, %struct._Image* %142, i32 0, i32 10, !dbg !3977
  %143 = load i64, i64* %colors145, align 8, !dbg !3977
  %cmp146 = icmp slt i64 %141, %143, !dbg !3978
  br i1 %cmp146, label %for.body148, label %for.end160, !dbg !3979

for.body148:                                      ; preds = %for.cond144
  %144 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3980
  %145 = load %struct._PixelPacket*, %struct._PixelPacket** %q141, align 8, !dbg !3982
  %call149 = call float @GetPixelLuma(%struct._Image* %144, %struct._PixelPacket* %145), !dbg !3983
  %conv150 = fpext float %call149 to double, !dbg !3983
  %cmp151 = fcmp olt double %conv150, 3.276750e+04, !dbg !3984
  %146 = zext i1 %cmp151 to i64, !dbg !3983
  %cond = select i1 %cmp151, i32 0, i32 65535, !dbg !3983
  %conv153 = trunc i32 %cond to i16, !dbg !3985
  store i16 %conv153, i16* %intensity, align 2, !dbg !3986
  %147 = load i16, i16* %intensity, align 2, !dbg !3987
  %148 = load %struct._PixelPacket*, %struct._PixelPacket** %q141, align 8, !dbg !3987
  %red154 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %148, i32 0, i32 2, !dbg !3987
  store i16 %147, i16* %red154, align 2, !dbg !3987
  %149 = load i16, i16* %intensity, align 2, !dbg !3988
  %150 = load %struct._PixelPacket*, %struct._PixelPacket** %q141, align 8, !dbg !3988
  %green155 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %150, i32 0, i32 1, !dbg !3988
  store i16 %149, i16* %green155, align 2, !dbg !3988
  %151 = load i16, i16* %intensity, align 2, !dbg !3989
  %152 = load %struct._PixelPacket*, %struct._PixelPacket** %q141, align 8, !dbg !3989
  %blue156 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %152, i32 0, i32 0, !dbg !3989
  store i16 %151, i16* %blue156, align 2, !dbg !3989
  %153 = load %struct._PixelPacket*, %struct._PixelPacket** %q141, align 8, !dbg !3990
  %incdec.ptr157 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %153, i32 1, !dbg !3990
  store %struct._PixelPacket* %incdec.ptr157, %struct._PixelPacket** %q141, align 8, !dbg !3990
  br label %for.inc158, !dbg !3991

for.inc158:                                       ; preds = %for.body148
  %154 = load i64, i64* %i142, align 8, !dbg !3992
  %inc159 = add nsw i64 %154, 1, !dbg !3992
  store i64 %inc159, i64* %i142, align 8, !dbg !3992
  br label %for.cond144, !dbg !3993, !llvm.loop !3994

for.end160:                                       ; preds = %for.cond144
  br label %if.end161, !dbg !3996

if.end161:                                        ; preds = %for.end160, %land.lhs.true135, %if.end131
  %155 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3997
  %call162 = call i32 @SyncImage(%struct._Image* %155), !dbg !3998
  %156 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !3999
  %quantize_info163 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %156, i32 0, i32 18, !dbg !4001
  %157 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info163, align 8, !dbg !4001
  %colorspace164 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %157, i32 0, i32 3, !dbg !4002
  %158 = load i32, i32* %colorspace164, align 4, !dbg !4002
  %cmp165 = icmp ne i32 %158, 0, !dbg !4003
  br i1 %cmp165, label %land.lhs.true167, label %if.end174, !dbg !4004

land.lhs.true167:                                 ; preds = %if.end161
  %159 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4005
  %quantize_info168 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %159, i32 0, i32 18, !dbg !4006
  %160 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info168, align 8, !dbg !4006
  %colorspace169 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %160, i32 0, i32 3, !dbg !4007
  %161 = load i32, i32* %colorspace169, align 4, !dbg !4007
  %cmp170 = icmp ne i32 %161, 12, !dbg !4008
  br i1 %cmp170, label %if.then172, label %if.end174, !dbg !4009

if.then172:                                       ; preds = %land.lhs.true167
  %162 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4010
  %call173 = call i32 @TransformImageColorspace(%struct._Image* %162, i32 13), !dbg !4011
  br label %if.end174, !dbg !4012

if.end174:                                        ; preds = %if.then172, %land.lhs.true167, %if.end161
  store i32 1, i32* %retval, align 4, !dbg !4013
  br label %return, !dbg !4013

return:                                           ; preds = %if.end174, %if.end18
  %163 = load i32, i32* %retval, align 4, !dbg !4014
  ret i32 %163, !dbg !4014
}

; Function Attrs: noinline nounwind uwtable
define internal void @DestroyCubeInfo(%struct._CubeInfo* %cube_info) #0 !dbg !4015 {
entry:
  %cube_info.addr = alloca %struct._CubeInfo*, align 8
  %nodes = alloca %struct._Nodes*, align 8
  store %struct._CubeInfo* %cube_info, %struct._CubeInfo** %cube_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info.addr, metadata !4018, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.declare(metadata %struct._Nodes** %nodes, metadata !4020, metadata !DIExpression()), !dbg !4021
  br label %do.body, !dbg !4022

do.body:                                          ; preds = %do.cond, %entry
  %0 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4023
  %node_queue = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %0, i32 0, i32 13, !dbg !4025
  %1 = load %struct._Nodes*, %struct._Nodes** %node_queue, align 8, !dbg !4025
  %next = getelementptr inbounds %struct._Nodes, %struct._Nodes* %1, i32 0, i32 1, !dbg !4026
  %2 = load %struct._Nodes*, %struct._Nodes** %next, align 8, !dbg !4026
  store %struct._Nodes* %2, %struct._Nodes** %nodes, align 8, !dbg !4027
  %3 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4028
  %node_queue1 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %3, i32 0, i32 13, !dbg !4029
  %4 = load %struct._Nodes*, %struct._Nodes** %node_queue1, align 8, !dbg !4029
  %nodes2 = getelementptr inbounds %struct._Nodes, %struct._Nodes* %4, i32 0, i32 0, !dbg !4030
  %5 = load %struct._NodeInfo*, %struct._NodeInfo** %nodes2, align 8, !dbg !4030
  %6 = bitcast %struct._NodeInfo* %5 to i8*, !dbg !4028
  %call = call i8* @RelinquishMagickMemory(i8* %6), !dbg !4031
  %7 = bitcast i8* %call to %struct._NodeInfo*, !dbg !4032
  %8 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4033
  %node_queue3 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %8, i32 0, i32 13, !dbg !4034
  %9 = load %struct._Nodes*, %struct._Nodes** %node_queue3, align 8, !dbg !4034
  %nodes4 = getelementptr inbounds %struct._Nodes, %struct._Nodes* %9, i32 0, i32 0, !dbg !4035
  store %struct._NodeInfo* %7, %struct._NodeInfo** %nodes4, align 8, !dbg !4036
  %10 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4037
  %node_queue5 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %10, i32 0, i32 13, !dbg !4038
  %11 = load %struct._Nodes*, %struct._Nodes** %node_queue5, align 8, !dbg !4038
  %12 = bitcast %struct._Nodes* %11 to i8*, !dbg !4037
  %call6 = call i8* @RelinquishMagickMemory(i8* %12), !dbg !4039
  %13 = bitcast i8* %call6 to %struct._Nodes*, !dbg !4040
  %14 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4041
  %node_queue7 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %14, i32 0, i32 13, !dbg !4042
  store %struct._Nodes* %13, %struct._Nodes** %node_queue7, align 8, !dbg !4043
  %15 = load %struct._Nodes*, %struct._Nodes** %nodes, align 8, !dbg !4044
  %16 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4045
  %node_queue8 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %16, i32 0, i32 13, !dbg !4046
  store %struct._Nodes* %15, %struct._Nodes** %node_queue8, align 8, !dbg !4047
  br label %do.cond, !dbg !4048

do.cond:                                          ; preds = %do.body
  %17 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4049
  %node_queue9 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %17, i32 0, i32 13, !dbg !4050
  %18 = load %struct._Nodes*, %struct._Nodes** %node_queue9, align 8, !dbg !4050
  %cmp = icmp ne %struct._Nodes* %18, null, !dbg !4051
  br i1 %cmp, label %do.body, label %do.end, !dbg !4048, !llvm.loop !4052

do.end:                                           ; preds = %do.cond
  %19 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4054
  %memory_info = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %19, i32 0, i32 14, !dbg !4056
  %20 = load %struct._MemoryInfo*, %struct._MemoryInfo** %memory_info, align 8, !dbg !4056
  %cmp10 = icmp ne %struct._MemoryInfo* %20, null, !dbg !4057
  br i1 %cmp10, label %if.then, label %if.end, !dbg !4058

if.then:                                          ; preds = %do.end
  %21 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4059
  %memory_info11 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %21, i32 0, i32 14, !dbg !4060
  %22 = load %struct._MemoryInfo*, %struct._MemoryInfo** %memory_info11, align 8, !dbg !4060
  %call12 = call %struct._MemoryInfo* @RelinquishVirtualMemory(%struct._MemoryInfo* %22), !dbg !4061
  %23 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4062
  %memory_info13 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %23, i32 0, i32 14, !dbg !4063
  store %struct._MemoryInfo* %call12, %struct._MemoryInfo** %memory_info13, align 8, !dbg !4064
  br label %if.end, !dbg !4062

if.end:                                           ; preds = %if.then, %do.end
  %24 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4065
  %quantize_info = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %24, i32 0, i32 18, !dbg !4066
  %25 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !4066
  %call14 = call %struct._QuantizeInfo* @DestroyQuantizeInfo(%struct._QuantizeInfo* %25), !dbg !4067
  %26 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4068
  %quantize_info15 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %26, i32 0, i32 18, !dbg !4069
  store %struct._QuantizeInfo* %call14, %struct._QuantizeInfo** %quantize_info15, align 8, !dbg !4070
  %27 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4071
  %28 = bitcast %struct._CubeInfo* %27 to i8*, !dbg !4071
  %call16 = call i8* @RelinquishMagickMemory(i8* %28), !dbg !4072
  %29 = bitcast i8* %call16 to %struct._CubeInfo*, !dbg !4073
  store %struct._CubeInfo* %29, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4074
  ret void, !dbg !4075
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @QuantizeImages(%struct._QuantizeInfo* %quantize_info, %struct._Image* %images) #0 !dbg !4076 {
entry:
  %retval = alloca i32, align 4
  %quantize_info.addr = alloca %struct._QuantizeInfo*, align 8
  %images.addr = alloca %struct._Image*, align 8
  %cube_info = alloca %struct._CubeInfo*, align 8
  %image = alloca %struct._Image*, align 8
  %proceed = alloca i32, align 4
  %status = alloca i32, align 4
  %progress_monitor = alloca i32 (i8*, i64, i64, i8*)*, align 8
  %i = alloca i64, align 8
  %depth = alloca i64, align 8
  %maximum_colors = alloca i64, align 8
  %number_images = alloca i64, align 8
  %colors = alloca i64, align 8
  store %struct._QuantizeInfo* %quantize_info, %struct._QuantizeInfo** %quantize_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantizeInfo** %quantize_info.addr, metadata !4077, metadata !DIExpression()), !dbg !4078
  store %struct._Image* %images, %struct._Image** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %images.addr, metadata !4079, metadata !DIExpression()), !dbg !4080
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info, metadata !4081, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.declare(metadata %struct._Image** %image, metadata !4083, metadata !DIExpression()), !dbg !4084
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !4085, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4087, metadata !DIExpression()), !dbg !4088
  call void @llvm.dbg.declare(metadata i32 (i8*, i64, i64, i8*)** %progress_monitor, metadata !4089, metadata !DIExpression()), !dbg !4090
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4091, metadata !DIExpression()), !dbg !4092
  call void @llvm.dbg.declare(metadata i64* %depth, metadata !4093, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.declare(metadata i64* %maximum_colors, metadata !4095, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.declare(metadata i64* %number_images, metadata !4097, metadata !DIExpression()), !dbg !4098
  %0 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4099
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !4101
  %1 = load i32, i32* %debug, align 8, !dbg !4101
  %cmp = icmp ne i32 %1, 0, !dbg !4102
  br i1 %cmp, label %if.then, label %if.end, !dbg !4103

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4104
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !4105
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !4104
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2807, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay), !dbg !4106
  br label %if.end, !dbg !4107

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4108
  %call1 = call %struct._Image* @GetNextImageInList(%struct._Image* %3), !dbg !4110
  %cmp2 = icmp eq %struct._Image* %call1, null, !dbg !4111
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !4112

if.then3:                                         ; preds = %if.end
  %4 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !4113
  %5 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4115
  %call4 = call i32 @QuantizeImage(%struct._QuantizeInfo* %4, %struct._Image* %5), !dbg !4116
  store i32 %call4, i32* %status, align 4, !dbg !4117
  %6 = load i32, i32* %status, align 4, !dbg !4118
  store i32 %6, i32* %retval, align 4, !dbg !4119
  br label %return, !dbg !4119

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %status, align 4, !dbg !4120
  %7 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !4121
  %number_colors = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %7, i32 0, i32 0, !dbg !4122
  %8 = load i64, i64* %number_colors, align 8, !dbg !4122
  store i64 %8, i64* %maximum_colors, align 8, !dbg !4123
  %9 = load i64, i64* %maximum_colors, align 8, !dbg !4124
  %cmp6 = icmp eq i64 %9, 0, !dbg !4126
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !4127

if.then7:                                         ; preds = %if.end5
  store i64 65536, i64* %maximum_colors, align 8, !dbg !4128
  br label %if.end8, !dbg !4129

if.end8:                                          ; preds = %if.then7, %if.end5
  %10 = load i64, i64* %maximum_colors, align 8, !dbg !4130
  %cmp9 = icmp ugt i64 %10, 65536, !dbg !4132
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !4133

if.then10:                                        ; preds = %if.end8
  store i64 65536, i64* %maximum_colors, align 8, !dbg !4134
  br label %if.end11, !dbg !4135

if.end11:                                         ; preds = %if.then10, %if.end8
  %11 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !4136
  %tree_depth = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %11, i32 0, i32 1, !dbg !4137
  %12 = load i64, i64* %tree_depth, align 8, !dbg !4137
  store i64 %12, i64* %depth, align 8, !dbg !4138
  %13 = load i64, i64* %depth, align 8, !dbg !4139
  %cmp12 = icmp eq i64 %13, 0, !dbg !4141
  br i1 %cmp12, label %if.then13, label %if.end18, !dbg !4142

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i64* %colors, metadata !4143, metadata !DIExpression()), !dbg !4145
  %14 = load i64, i64* %maximum_colors, align 8, !dbg !4146
  store i64 %14, i64* %colors, align 8, !dbg !4147
  store i64 1, i64* %depth, align 8, !dbg !4148
  br label %for.cond, !dbg !4150

for.cond:                                         ; preds = %for.inc, %if.then13
  %15 = load i64, i64* %colors, align 8, !dbg !4151
  %cmp14 = icmp ne i64 %15, 0, !dbg !4153
  br i1 %cmp14, label %for.body, label %for.end, !dbg !4154

for.body:                                         ; preds = %for.cond
  %16 = load i64, i64* %colors, align 8, !dbg !4155
  %shr = lshr i64 %16, 2, !dbg !4155
  store i64 %shr, i64* %colors, align 8, !dbg !4155
  br label %for.inc, !dbg !4156

for.inc:                                          ; preds = %for.body
  %17 = load i64, i64* %depth, align 8, !dbg !4157
  %inc = add i64 %17, 1, !dbg !4157
  store i64 %inc, i64* %depth, align 8, !dbg !4157
  br label %for.cond, !dbg !4158, !llvm.loop !4159

for.end:                                          ; preds = %for.cond
  %18 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !4161
  %dither = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %18, i32 0, i32 2, !dbg !4163
  %19 = load i32, i32* %dither, align 8, !dbg !4163
  %cmp15 = icmp ne i32 %19, 0, !dbg !4164
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !4165

if.then16:                                        ; preds = %for.end
  %20 = load i64, i64* %depth, align 8, !dbg !4166
  %dec = add i64 %20, -1, !dbg !4166
  store i64 %dec, i64* %depth, align 8, !dbg !4166
  br label %if.end17, !dbg !4167

if.end17:                                         ; preds = %if.then16, %for.end
  br label %if.end18, !dbg !4168

if.end18:                                         ; preds = %if.end17, %if.end11
  %21 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !4169
  %22 = load i64, i64* %depth, align 8, !dbg !4170
  %23 = load i64, i64* %maximum_colors, align 8, !dbg !4171
  %call19 = call %struct._CubeInfo* @GetCubeInfo(%struct._QuantizeInfo* %21, i64 %22, i64 %23), !dbg !4172
  store %struct._CubeInfo* %call19, %struct._CubeInfo** %cube_info, align 8, !dbg !4173
  %24 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !4174
  %cmp20 = icmp eq %struct._CubeInfo* %24, null, !dbg !4176
  br i1 %cmp20, label %if.then21, label %if.end25, !dbg !4177

if.then21:                                        ; preds = %if.end18
  %25 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4178
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 58, !dbg !4180
  %26 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4181
  %filename22 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 53, !dbg !4182
  %arraydecay23 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename22, i64 0, i64 0, !dbg !4181
  %call24 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2843, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay23), !dbg !4183
  store i32 0, i32* %retval, align 4, !dbg !4184
  br label %return, !dbg !4184

if.end25:                                         ; preds = %if.end18
  %27 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4185
  %call26 = call i64 @GetImageListLength(%struct._Image* %27), !dbg !4186
  store i64 %call26, i64* %number_images, align 8, !dbg !4187
  %28 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4188
  store %struct._Image* %28, %struct._Image** %image, align 8, !dbg !4189
  store i64 0, i64* %i, align 8, !dbg !4190
  br label %for.cond27, !dbg !4192

for.cond27:                                       ; preds = %for.inc43, %if.end25
  %29 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4193
  %cmp28 = icmp ne %struct._Image* %29, null, !dbg !4195
  br i1 %cmp28, label %for.body29, label %for.end45, !dbg !4196

for.body29:                                       ; preds = %for.cond27
  %30 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4197
  %31 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4199
  %client_data = getelementptr inbounds %struct._Image, %struct._Image* %31, i32 0, i32 48, !dbg !4200
  %32 = load i8*, i8** %client_data, align 8, !dbg !4200
  %call30 = call i32 (i8*, i64, i64, i8*)* @SetImageProgressMonitor(%struct._Image* %30, i32 (i8*, i64, i64, i8*)* null, i8* %32), !dbg !4201
  store i32 (i8*, i64, i64, i8*)* %call30, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !4202
  %33 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !4203
  %34 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4204
  %35 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4205
  %exception31 = getelementptr inbounds %struct._Image, %struct._Image* %35, i32 0, i32 58, !dbg !4206
  %call32 = call i32 @ClassifyImageColors(%struct._CubeInfo* %33, %struct._Image* %34, %struct._ExceptionInfo* %exception31), !dbg !4207
  store i32 %call32, i32* %status, align 4, !dbg !4208
  %36 = load i32, i32* %status, align 4, !dbg !4209
  %cmp33 = icmp eq i32 %36, 0, !dbg !4211
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !4212

if.then34:                                        ; preds = %for.body29
  br label %for.end45, !dbg !4213

if.end35:                                         ; preds = %for.body29
  %37 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4214
  %38 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !4215
  %39 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4216
  %client_data36 = getelementptr inbounds %struct._Image, %struct._Image* %39, i32 0, i32 48, !dbg !4217
  %40 = load i8*, i8** %client_data36, align 8, !dbg !4217
  %call37 = call i32 (i8*, i64, i64, i8*)* @SetImageProgressMonitor(%struct._Image* %37, i32 (i8*, i64, i64, i8*)* %38, i8* %40), !dbg !4218
  %41 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4219
  %42 = load i64, i64* %i, align 8, !dbg !4220
  %43 = load i64, i64* %number_images, align 8, !dbg !4221
  %call38 = call i32 @SetImageProgress(%struct._Image* %41, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i64 %42, i64 %43), !dbg !4222
  store i32 %call38, i32* %proceed, align 4, !dbg !4223
  %44 = load i32, i32* %proceed, align 4, !dbg !4224
  %cmp39 = icmp eq i32 %44, 0, !dbg !4226
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !4227

if.then40:                                        ; preds = %if.end35
  br label %for.end45, !dbg !4228

if.end41:                                         ; preds = %if.end35
  %45 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4229
  %call42 = call %struct._Image* @GetNextImageInList(%struct._Image* %45), !dbg !4230
  store %struct._Image* %call42, %struct._Image** %image, align 8, !dbg !4231
  br label %for.inc43, !dbg !4232

for.inc43:                                        ; preds = %if.end41
  %46 = load i64, i64* %i, align 8, !dbg !4233
  %inc44 = add nsw i64 %46, 1, !dbg !4233
  store i64 %inc44, i64* %i, align 8, !dbg !4233
  br label %for.cond27, !dbg !4234, !llvm.loop !4235

for.end45:                                        ; preds = %if.then40, %if.then34, %for.cond27
  %47 = load i32, i32* %status, align 4, !dbg !4237
  %cmp46 = icmp ne i32 %47, 0, !dbg !4239
  br i1 %cmp46, label %if.then47, label %if.end67, !dbg !4240

if.then47:                                        ; preds = %for.end45
  %48 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4241
  %49 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !4243
  call void @ReduceImageColors(%struct._Image* %48, %struct._CubeInfo* %49), !dbg !4244
  %50 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4245
  store %struct._Image* %50, %struct._Image** %image, align 8, !dbg !4246
  store i64 0, i64* %i, align 8, !dbg !4247
  br label %for.cond48, !dbg !4249

for.cond48:                                       ; preds = %for.inc64, %if.then47
  %51 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4250
  %cmp49 = icmp ne %struct._Image* %51, null, !dbg !4252
  br i1 %cmp49, label %for.body50, label %for.end66, !dbg !4253

for.body50:                                       ; preds = %for.cond48
  %52 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4254
  %53 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4256
  %client_data51 = getelementptr inbounds %struct._Image, %struct._Image* %53, i32 0, i32 48, !dbg !4257
  %54 = load i8*, i8** %client_data51, align 8, !dbg !4257
  %call52 = call i32 (i8*, i64, i64, i8*)* @SetImageProgressMonitor(%struct._Image* %52, i32 (i8*, i64, i64, i8*)* null, i8* %54), !dbg !4258
  store i32 (i8*, i64, i64, i8*)* %call52, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !4259
  %55 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4260
  %56 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !4261
  %call53 = call i32 @AssignImageColors(%struct._Image* %55, %struct._CubeInfo* %56), !dbg !4262
  store i32 %call53, i32* %status, align 4, !dbg !4263
  %57 = load i32, i32* %status, align 4, !dbg !4264
  %cmp54 = icmp eq i32 %57, 0, !dbg !4266
  br i1 %cmp54, label %if.then55, label %if.end56, !dbg !4267

if.then55:                                        ; preds = %for.body50
  br label %for.end66, !dbg !4268

if.end56:                                         ; preds = %for.body50
  %58 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4269
  %59 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !4270
  %60 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4271
  %client_data57 = getelementptr inbounds %struct._Image, %struct._Image* %60, i32 0, i32 48, !dbg !4272
  %61 = load i8*, i8** %client_data57, align 8, !dbg !4272
  %call58 = call i32 (i8*, i64, i64, i8*)* @SetImageProgressMonitor(%struct._Image* %58, i32 (i8*, i64, i64, i8*)* %59, i8* %61), !dbg !4273
  %62 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4274
  %63 = load i64, i64* %i, align 8, !dbg !4275
  %64 = load i64, i64* %number_images, align 8, !dbg !4276
  %call59 = call i32 @SetImageProgress(%struct._Image* %62, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i64 %63, i64 %64), !dbg !4277
  store i32 %call59, i32* %proceed, align 4, !dbg !4278
  %65 = load i32, i32* %proceed, align 4, !dbg !4279
  %cmp60 = icmp eq i32 %65, 0, !dbg !4281
  br i1 %cmp60, label %if.then61, label %if.end62, !dbg !4282

if.then61:                                        ; preds = %if.end56
  br label %for.end66, !dbg !4283

if.end62:                                         ; preds = %if.end56
  %66 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4284
  %call63 = call %struct._Image* @GetNextImageInList(%struct._Image* %66), !dbg !4285
  store %struct._Image* %call63, %struct._Image** %image, align 8, !dbg !4286
  br label %for.inc64, !dbg !4287

for.inc64:                                        ; preds = %if.end62
  %67 = load i64, i64* %i, align 8, !dbg !4288
  %inc65 = add nsw i64 %67, 1, !dbg !4288
  store i64 %inc65, i64* %i, align 8, !dbg !4288
  br label %for.cond48, !dbg !4289, !llvm.loop !4290

for.end66:                                        ; preds = %if.then61, %if.then55, %for.cond48
  br label %if.end67, !dbg !4292

if.end67:                                         ; preds = %for.end66, %for.end45
  %68 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !4293
  call void @DestroyCubeInfo(%struct._CubeInfo* %68), !dbg !4294
  %69 = load i32, i32* %status, align 4, !dbg !4295
  store i32 %69, i32* %retval, align 4, !dbg !4296
  br label %return, !dbg !4296

return:                                           ; preds = %if.end67, %if.then21, %if.then3
  %70 = load i32, i32* %retval, align 4, !dbg !4297
  ret i32 %70, !dbg !4297
}

declare dso_local %struct._Image* @GetNextImageInList(%struct._Image*) #3

declare dso_local i64 @GetImageListLength(%struct._Image*) #3

declare dso_local i32 (i8*, i64, i64, i8*)* @SetImageProgressMonitor(%struct._Image*, i32 (i8*, i64, i64, i8*)*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RemapImage(%struct._QuantizeInfo* %quantize_info, %struct._Image* %image, %struct._Image* %remap_image) #0 !dbg !4298 {
entry:
  %retval = alloca i32, align 4
  %quantize_info.addr = alloca %struct._QuantizeInfo*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %remap_image.addr = alloca %struct._Image*, align 8
  %cube_info = alloca %struct._CubeInfo*, align 8
  %status = alloca i32, align 4
  store %struct._QuantizeInfo* %quantize_info, %struct._QuantizeInfo** %quantize_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantizeInfo** %quantize_info.addr, metadata !4301, metadata !DIExpression()), !dbg !4302
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4303, metadata !DIExpression()), !dbg !4304
  store %struct._Image* %remap_image, %struct._Image** %remap_image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %remap_image.addr, metadata !4305, metadata !DIExpression()), !dbg !4306
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info, metadata !4307, metadata !DIExpression()), !dbg !4308
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4309, metadata !DIExpression()), !dbg !4310
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4311
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !4313
  %1 = load i32, i32* %debug, align 8, !dbg !4313
  %cmp = icmp ne i32 %1, 0, !dbg !4314
  br i1 %cmp, label %if.then, label %if.end, !dbg !4315

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4316
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !4317
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !4316
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3168, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay), !dbg !4318
  br label %if.end, !dbg !4319

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !4320
  %4 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !4321
  %number_colors = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %4, i32 0, i32 0, !dbg !4322
  %5 = load i64, i64* %number_colors, align 8, !dbg !4322
  %call1 = call %struct._CubeInfo* @GetCubeInfo(%struct._QuantizeInfo* %3, i64 8, i64 %5), !dbg !4323
  store %struct._CubeInfo* %call1, %struct._CubeInfo** %cube_info, align 8, !dbg !4324
  %6 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !4325
  %cmp2 = icmp eq %struct._CubeInfo* %6, null, !dbg !4327
  br i1 %cmp2, label %if.then3, label %if.end10, !dbg !4328

if.then3:                                         ; preds = %if.end
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4329
  %cmp4 = icmp ne %struct._Image* %7, null, !dbg !4329
  br i1 %cmp4, label %if.then5, label %if.end9, !dbg !4332

if.then5:                                         ; preds = %if.then3
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4329
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 58, !dbg !4329
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4329
  %filename6 = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 53, !dbg !4329
  %arraydecay7 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename6, i64 0, i64 0, !dbg !4329
  %call8 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3175, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay7), !dbg !4329
  br label %if.end9, !dbg !4329

if.end9:                                          ; preds = %if.then5, %if.then3
  store i32 0, i32* %retval, align 4, !dbg !4332
  br label %return, !dbg !4332

if.end10:                                         ; preds = %if.end
  %10 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !4333
  %11 = load %struct._Image*, %struct._Image** %remap_image.addr, align 8, !dbg !4334
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4335
  %exception11 = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 58, !dbg !4336
  %call12 = call i32 @ClassifyImageColors(%struct._CubeInfo* %10, %struct._Image* %11, %struct._ExceptionInfo* %exception11), !dbg !4337
  store i32 %call12, i32* %status, align 4, !dbg !4338
  %13 = load i32, i32* %status, align 4, !dbg !4339
  %cmp13 = icmp ne i32 %13, 0, !dbg !4341
  br i1 %cmp13, label %if.then14, label %if.end18, !dbg !4342

if.then14:                                        ; preds = %if.end10
  %14 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !4343
  %colors = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %14, i32 0, i32 1, !dbg !4345
  %15 = load i64, i64* %colors, align 8, !dbg !4345
  %16 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !4346
  %quantize_info15 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %16, i32 0, i32 18, !dbg !4347
  %17 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info15, align 8, !dbg !4347
  %number_colors16 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %17, i32 0, i32 0, !dbg !4348
  store i64 %15, i64* %number_colors16, align 8, !dbg !4349
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4350
  %19 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !4351
  %call17 = call i32 @AssignImageColors(%struct._Image* %18, %struct._CubeInfo* %19), !dbg !4352
  store i32 %call17, i32* %status, align 4, !dbg !4353
  br label %if.end18, !dbg !4354

if.end18:                                         ; preds = %if.then14, %if.end10
  %20 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !4355
  call void @DestroyCubeInfo(%struct._CubeInfo* %20), !dbg !4356
  %21 = load i32, i32* %status, align 4, !dbg !4357
  store i32 %21, i32* %retval, align 4, !dbg !4358
  br label %return, !dbg !4358

return:                                           ; preds = %if.end18, %if.end9
  %22 = load i32, i32* %retval, align 4, !dbg !4359
  ret i32 %22, !dbg !4359
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RemapImages(%struct._QuantizeInfo* %quantize_info, %struct._Image* %images, %struct._Image* %remap_image) #0 !dbg !4360 {
entry:
  %retval = alloca i32, align 4
  %quantize_info.addr = alloca %struct._QuantizeInfo*, align 8
  %images.addr = alloca %struct._Image*, align 8
  %remap_image.addr = alloca %struct._Image*, align 8
  %cube_info = alloca %struct._CubeInfo*, align 8
  %image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  store %struct._QuantizeInfo* %quantize_info, %struct._QuantizeInfo** %quantize_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantizeInfo** %quantize_info.addr, metadata !4361, metadata !DIExpression()), !dbg !4362
  store %struct._Image* %images, %struct._Image** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %images.addr, metadata !4363, metadata !DIExpression()), !dbg !4364
  store %struct._Image* %remap_image, %struct._Image** %remap_image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %remap_image.addr, metadata !4365, metadata !DIExpression()), !dbg !4366
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info, metadata !4367, metadata !DIExpression()), !dbg !4368
  call void @llvm.dbg.declare(metadata %struct._Image** %image, metadata !4369, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4371, metadata !DIExpression()), !dbg !4372
  %0 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4373
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !4375
  %1 = load i32, i32* %debug, align 8, !dbg !4375
  %cmp = icmp ne i32 %1, 0, !dbg !4376
  br i1 %cmp, label %if.then, label %if.end, !dbg !4377

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4378
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !4379
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !4378
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3232, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay), !dbg !4380
  br label %if.end, !dbg !4381

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4382
  store %struct._Image* %3, %struct._Image** %image, align 8, !dbg !4383
  %4 = load %struct._Image*, %struct._Image** %remap_image.addr, align 8, !dbg !4384
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !4386
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !4387

if.then2:                                         ; preds = %if.end
  %5 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !4388
  %6 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4390
  %call3 = call i32 @QuantizeImages(%struct._QuantizeInfo* %5, %struct._Image* %6), !dbg !4391
  store i32 %call3, i32* %status, align 4, !dbg !4392
  %7 = load i32, i32* %status, align 4, !dbg !4393
  store i32 %7, i32* %retval, align 4, !dbg !4394
  br label %return, !dbg !4394

if.end4:                                          ; preds = %if.end
  %8 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !4395
  %9 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !4396
  %number_colors = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %9, i32 0, i32 0, !dbg !4397
  %10 = load i64, i64* %number_colors, align 8, !dbg !4397
  %call5 = call %struct._CubeInfo* @GetCubeInfo(%struct._QuantizeInfo* %8, i64 8, i64 %10), !dbg !4398
  store %struct._CubeInfo* %call5, %struct._CubeInfo** %cube_info, align 8, !dbg !4399
  %11 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !4400
  %cmp6 = icmp eq %struct._CubeInfo* %11, null, !dbg !4402
  br i1 %cmp6, label %if.then7, label %if.end14, !dbg !4403

if.then7:                                         ; preds = %if.end4
  %12 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4404
  %cmp8 = icmp ne %struct._Image* %12, null, !dbg !4404
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !4407

if.then9:                                         ; preds = %if.then7
  %13 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4404
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 58, !dbg !4404
  %14 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4404
  %filename10 = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 53, !dbg !4404
  %arraydecay11 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename10, i64 0, i64 0, !dbg !4404
  %call12 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3249, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay11), !dbg !4404
  br label %if.end13, !dbg !4404

if.end13:                                         ; preds = %if.then9, %if.then7
  store i32 0, i32* %retval, align 4, !dbg !4407
  br label %return, !dbg !4407

if.end14:                                         ; preds = %if.end4
  %15 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !4408
  %16 = load %struct._Image*, %struct._Image** %remap_image.addr, align 8, !dbg !4409
  %17 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4410
  %exception15 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 58, !dbg !4411
  %call16 = call i32 @ClassifyImageColors(%struct._CubeInfo* %15, %struct._Image* %16, %struct._ExceptionInfo* %exception15), !dbg !4412
  store i32 %call16, i32* %status, align 4, !dbg !4413
  %18 = load i32, i32* %status, align 4, !dbg !4414
  %cmp17 = icmp ne i32 %18, 0, !dbg !4416
  br i1 %cmp17, label %if.then18, label %if.end27, !dbg !4417

if.then18:                                        ; preds = %if.end14
  %19 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !4418
  %colors = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %19, i32 0, i32 1, !dbg !4420
  %20 = load i64, i64* %colors, align 8, !dbg !4420
  %21 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !4421
  %quantize_info19 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %21, i32 0, i32 18, !dbg !4422
  %22 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info19, align 8, !dbg !4422
  %number_colors20 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %22, i32 0, i32 0, !dbg !4423
  store i64 %20, i64* %number_colors20, align 8, !dbg !4424
  %23 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4425
  store %struct._Image* %23, %struct._Image** %image, align 8, !dbg !4426
  br label %for.cond, !dbg !4427

for.cond:                                         ; preds = %for.inc, %if.then18
  %24 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4428
  %cmp21 = icmp ne %struct._Image* %24, null, !dbg !4431
  br i1 %cmp21, label %for.body, label %for.end, !dbg !4432

for.body:                                         ; preds = %for.cond
  %25 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4433
  %26 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !4435
  %call22 = call i32 @AssignImageColors(%struct._Image* %25, %struct._CubeInfo* %26), !dbg !4436
  store i32 %call22, i32* %status, align 4, !dbg !4437
  %27 = load i32, i32* %status, align 4, !dbg !4438
  %cmp23 = icmp eq i32 %27, 0, !dbg !4440
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !4441

if.then24:                                        ; preds = %for.body
  br label %for.end, !dbg !4442

if.end25:                                         ; preds = %for.body
  br label %for.inc, !dbg !4443

for.inc:                                          ; preds = %if.end25
  %28 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4444
  %call26 = call %struct._Image* @GetNextImageInList(%struct._Image* %28), !dbg !4445
  store %struct._Image* %call26, %struct._Image** %image, align 8, !dbg !4446
  br label %for.cond, !dbg !4447, !llvm.loop !4448

for.end:                                          ; preds = %if.then24, %for.cond
  br label %if.end27, !dbg !4450

if.end27:                                         ; preds = %for.end, %if.end14
  %29 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info, align 8, !dbg !4451
  call void @DestroyCubeInfo(%struct._CubeInfo* %29), !dbg !4452
  %30 = load i32, i32* %status, align 4, !dbg !4453
  store i32 %30, i32* %retval, align 4, !dbg !4454
  br label %return, !dbg !4454

return:                                           ; preds = %if.end27, %if.end13, %if.then2
  %31 = load i32, i32* %retval, align 4, !dbg !4455
  ret i32 %31, !dbg !4455
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.ceil.f64(double) #1

declare dso_local i64 @FormatLocaleString(i8*, i64, i8*, ...) #3

declare dso_local i32 @AcquireImageColormap(%struct._Image*, i64) #3

; Function Attrs: noinline nounwind uwtable
define internal %struct._NodeInfo* @GetNodeInfo(%struct._CubeInfo* %cube_info, i64 %id, i64 %level, %struct._NodeInfo* %parent) #0 !dbg !4456 {
entry:
  %retval = alloca %struct._NodeInfo*, align 8
  %cube_info.addr = alloca %struct._CubeInfo*, align 8
  %id.addr = alloca i64, align 8
  %level.addr = alloca i64, align 8
  %parent.addr = alloca %struct._NodeInfo*, align 8
  %node_info = alloca %struct._NodeInfo*, align 8
  %nodes = alloca %struct._Nodes*, align 8
  store %struct._CubeInfo* %cube_info, %struct._CubeInfo** %cube_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info.addr, metadata !4459, metadata !DIExpression()), !dbg !4460
  store i64 %id, i64* %id.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %id.addr, metadata !4461, metadata !DIExpression()), !dbg !4462
  store i64 %level, i64* %level.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %level.addr, metadata !4463, metadata !DIExpression()), !dbg !4464
  store %struct._NodeInfo* %parent, %struct._NodeInfo** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._NodeInfo** %parent.addr, metadata !4465, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.declare(metadata %struct._NodeInfo** %node_info, metadata !4467, metadata !DIExpression()), !dbg !4468
  %0 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4469
  %free_nodes = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %0, i32 0, i32 10, !dbg !4471
  %1 = load i64, i64* %free_nodes, align 8, !dbg !4471
  %cmp = icmp eq i64 %1, 0, !dbg !4472
  br i1 %cmp, label %if.then, label %if.end12, !dbg !4473

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._Nodes** %nodes, metadata !4474, metadata !DIExpression()), !dbg !4476
  %call = call i8* @AcquireMagickMemory(i64 16) #9, !dbg !4477
  %2 = bitcast i8* %call to %struct._Nodes*, !dbg !4478
  store %struct._Nodes* %2, %struct._Nodes** %nodes, align 8, !dbg !4479
  %3 = load %struct._Nodes*, %struct._Nodes** %nodes, align 8, !dbg !4480
  %cmp1 = icmp eq %struct._Nodes* %3, null, !dbg !4482
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !4483

if.then2:                                         ; preds = %if.then
  store %struct._NodeInfo* null, %struct._NodeInfo** %retval, align 8, !dbg !4484
  br label %return, !dbg !4484

if.end:                                           ; preds = %if.then
  %call3 = call i8* @AcquireQuantumMemory(i64 1920, i64 192) #12, !dbg !4485
  %4 = bitcast i8* %call3 to %struct._NodeInfo*, !dbg !4486
  %5 = load %struct._Nodes*, %struct._Nodes** %nodes, align 8, !dbg !4487
  %nodes4 = getelementptr inbounds %struct._Nodes, %struct._Nodes* %5, i32 0, i32 0, !dbg !4488
  store %struct._NodeInfo* %4, %struct._NodeInfo** %nodes4, align 8, !dbg !4489
  %6 = load %struct._Nodes*, %struct._Nodes** %nodes, align 8, !dbg !4490
  %nodes5 = getelementptr inbounds %struct._Nodes, %struct._Nodes* %6, i32 0, i32 0, !dbg !4492
  %7 = load %struct._NodeInfo*, %struct._NodeInfo** %nodes5, align 8, !dbg !4492
  %cmp6 = icmp eq %struct._NodeInfo* %7, null, !dbg !4493
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !4494

if.then7:                                         ; preds = %if.end
  store %struct._NodeInfo* null, %struct._NodeInfo** %retval, align 8, !dbg !4495
  br label %return, !dbg !4495

if.end8:                                          ; preds = %if.end
  %8 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4496
  %node_queue = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %8, i32 0, i32 13, !dbg !4497
  %9 = load %struct._Nodes*, %struct._Nodes** %node_queue, align 8, !dbg !4497
  %10 = load %struct._Nodes*, %struct._Nodes** %nodes, align 8, !dbg !4498
  %next = getelementptr inbounds %struct._Nodes, %struct._Nodes* %10, i32 0, i32 1, !dbg !4499
  store %struct._Nodes* %9, %struct._Nodes** %next, align 8, !dbg !4500
  %11 = load %struct._Nodes*, %struct._Nodes** %nodes, align 8, !dbg !4501
  %12 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4502
  %node_queue9 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %12, i32 0, i32 13, !dbg !4503
  store %struct._Nodes* %11, %struct._Nodes** %node_queue9, align 8, !dbg !4504
  %13 = load %struct._Nodes*, %struct._Nodes** %nodes, align 8, !dbg !4505
  %nodes10 = getelementptr inbounds %struct._Nodes, %struct._Nodes* %13, i32 0, i32 0, !dbg !4506
  %14 = load %struct._NodeInfo*, %struct._NodeInfo** %nodes10, align 8, !dbg !4506
  %15 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4507
  %next_node = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %15, i32 0, i32 12, !dbg !4508
  store %struct._NodeInfo* %14, %struct._NodeInfo** %next_node, align 8, !dbg !4509
  %16 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4510
  %free_nodes11 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %16, i32 0, i32 10, !dbg !4511
  store i64 1920, i64* %free_nodes11, align 8, !dbg !4512
  br label %if.end12, !dbg !4513

if.end12:                                         ; preds = %if.end8, %entry
  %17 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4514
  %nodes13 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %17, i32 0, i32 9, !dbg !4515
  %18 = load i64, i64* %nodes13, align 8, !dbg !4516
  %inc = add i64 %18, 1, !dbg !4516
  store i64 %inc, i64* %nodes13, align 8, !dbg !4516
  %19 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4517
  %free_nodes14 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %19, i32 0, i32 10, !dbg !4518
  %20 = load i64, i64* %free_nodes14, align 8, !dbg !4519
  %dec = add i64 %20, -1, !dbg !4519
  store i64 %dec, i64* %free_nodes14, align 8, !dbg !4519
  %21 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4520
  %next_node15 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %21, i32 0, i32 12, !dbg !4521
  %22 = load %struct._NodeInfo*, %struct._NodeInfo** %next_node15, align 8, !dbg !4522
  %incdec.ptr = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %22, i32 1, !dbg !4522
  store %struct._NodeInfo* %incdec.ptr, %struct._NodeInfo** %next_node15, align 8, !dbg !4522
  store %struct._NodeInfo* %22, %struct._NodeInfo** %node_info, align 8, !dbg !4523
  %23 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !4524
  %24 = bitcast %struct._NodeInfo* %23 to i8*, !dbg !4524
  %call16 = call i8* @ResetMagickMemory(i8* %24, i32 0, i64 192), !dbg !4525
  %25 = load %struct._NodeInfo*, %struct._NodeInfo** %parent.addr, align 8, !dbg !4526
  %26 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !4527
  %parent17 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %26, i32 0, i32 0, !dbg !4528
  store %struct._NodeInfo* %25, %struct._NodeInfo** %parent17, align 8, !dbg !4529
  %27 = load i64, i64* %id.addr, align 8, !dbg !4530
  %28 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !4531
  %id18 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %28, i32 0, i32 6, !dbg !4532
  store i64 %27, i64* %id18, align 8, !dbg !4533
  %29 = load i64, i64* %level.addr, align 8, !dbg !4534
  %30 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !4535
  %level19 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %30, i32 0, i32 7, !dbg !4536
  store i64 %29, i64* %level19, align 8, !dbg !4537
  %31 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !4538
  store %struct._NodeInfo* %31, %struct._NodeInfo** %retval, align 8, !dbg !4539
  br label %return, !dbg !4539

return:                                           ; preds = %if.end12, %if.then7, %if.then2
  %32 = load %struct._NodeInfo*, %struct._NodeInfo** %retval, align 8, !dbg !4540
  ret %struct._NodeInfo* %32, !dbg !4540
}

; Function Attrs: allocsize(0,1)
declare dso_local %struct._MemoryInfo* @AcquireVirtualMemory(i64, i64) #6

declare dso_local i8* @GetVirtualMemoryBlob(%struct._MemoryInfo*) #3

; Function Attrs: noinline nounwind uwtable
define internal double @PerceptibleReciprocal(double %x) #0 !dbg !4541 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %sign = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4546, metadata !DIExpression()), !dbg !4547
  call void @llvm.dbg.declare(metadata double* %sign, metadata !4548, metadata !DIExpression()), !dbg !4549
  %0 = load double, double* %x.addr, align 8, !dbg !4550
  %cmp = fcmp olt double %0, 0.000000e+00, !dbg !4551
  %1 = zext i1 %cmp to i64, !dbg !4550
  %cond = select i1 %cmp, double -1.000000e+00, double 1.000000e+00, !dbg !4550
  store double %cond, double* %sign, align 8, !dbg !4552
  %2 = load double, double* %sign, align 8, !dbg !4553
  %3 = load double, double* %x.addr, align 8, !dbg !4555
  %mul = fmul double %2, %3, !dbg !4556
  %cmp1 = fcmp oge double %mul, 1.000000e-15, !dbg !4557
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4558

if.then:                                          ; preds = %entry
  %4 = load double, double* %x.addr, align 8, !dbg !4559
  %div = fdiv double 1.000000e+00, %4, !dbg !4560
  store double %div, double* %retval, align 8, !dbg !4561
  br label %return, !dbg !4561

if.end:                                           ; preds = %entry
  %5 = load double, double* %sign, align 8, !dbg !4562
  %div2 = fdiv double %5, 1.000000e-15, !dbg !4563
  store double %div2, double* %retval, align 8, !dbg !4564
  br label %return, !dbg !4564

return:                                           ; preds = %if.end, %if.then
  %6 = load double, double* %retval, align 8, !dbg !4565
  ret double %6, !dbg !4565
}

; Function Attrs: nounwind
declare dso_local double @exp(double) #7

; Function Attrs: nounwind
declare dso_local double @log(double) #7

; Function Attrs: allocsize(0,1)
declare dso_local i8* @AcquireQuantumMemory(i64, i64) #6

; Function Attrs: noinline nounwind uwtable
define internal void @SetAssociatedAlpha(%struct._Image* %image, %struct._CubeInfo* %cube_info) #0 !dbg !4566 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %cube_info.addr = alloca %struct._CubeInfo*, align 8
  %associate_alpha = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4567, metadata !DIExpression()), !dbg !4568
  store %struct._CubeInfo* %cube_info, %struct._CubeInfo** %cube_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info.addr, metadata !4569, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.declare(metadata i32* %associate_alpha, metadata !4571, metadata !DIExpression()), !dbg !4572
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4573
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 6, !dbg !4574
  %1 = load i32, i32* %matte, align 8, !dbg !4574
  store i32 %1, i32* %associate_alpha, align 4, !dbg !4575
  %2 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4576
  %quantize_info = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %2, i32 0, i32 18, !dbg !4578
  %3 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !4578
  %number_colors = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %3, i32 0, i32 0, !dbg !4579
  %4 = load i64, i64* %number_colors, align 8, !dbg !4579
  %cmp = icmp eq i64 %4, 2, !dbg !4580
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4581

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4582
  %quantize_info1 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %5, i32 0, i32 18, !dbg !4583
  %6 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info1, align 8, !dbg !4583
  %colorspace = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %6, i32 0, i32 3, !dbg !4584
  %7 = load i32, i32* %colorspace, align 4, !dbg !4584
  %cmp2 = icmp eq i32 %7, 2, !dbg !4585
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4586

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %associate_alpha, align 4, !dbg !4587
  br label %if.end, !dbg !4588

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = load i32, i32* %associate_alpha, align 4, !dbg !4589
  %9 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4590
  %associate_alpha3 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %9, i32 0, i32 19, !dbg !4591
  store i32 %8, i32* %associate_alpha3, align 8, !dbg !4592
  ret void, !dbg !4593
}

declare dso_local i32 @TransformImageColorspace(%struct._Image*, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @IssRGBCompatibleColorspace(i32 %colorspace) #0 !dbg !4594 {
entry:
  %retval = alloca i32, align 4
  %colorspace.addr = alloca i32, align 4
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !4599, metadata !DIExpression()), !dbg !4600
  %0 = load i32, i32* %colorspace.addr, align 4, !dbg !4601
  %cmp = icmp eq i32 %0, 13, !dbg !4603
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4604

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %colorspace.addr, align 4, !dbg !4605
  %cmp1 = icmp eq i32 %1, 1, !dbg !4606
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !4607

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %colorspace.addr, align 4, !dbg !4608
  %cmp3 = icmp eq i32 %2, 29, !dbg !4609
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !4610

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %3 = load i32, i32* %colorspace.addr, align 4, !dbg !4611
  %cmp5 = icmp eq i32 %3, 3, !dbg !4612
  br i1 %cmp5, label %if.then, label %lor.lhs.false6, !dbg !4613

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %4 = load i32, i32* %colorspace.addr, align 4, !dbg !4614
  %call = call i32 @IsGrayColorspace(i32 %4), !dbg !4615
  %cmp7 = icmp ne i32 %call, 0, !dbg !4616
  br i1 %cmp7, label %if.then, label %if.end, !dbg !4617

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !4618
  br label %return, !dbg !4618

if.end:                                           ; preds = %lor.lhs.false6
  store i32 0, i32* %retval, align 4, !dbg !4619
  br label %return, !dbg !4619

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !4620
  ret i32 %5, !dbg !4620
}

; Function Attrs: noinline nounwind uwtable
define internal void @PruneLevel(%struct._Image* %image, %struct._CubeInfo* %cube_info, %struct._NodeInfo* %node_info) #0 !dbg !4621 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %cube_info.addr = alloca %struct._CubeInfo*, align 8
  %node_info.addr = alloca %struct._NodeInfo*, align 8
  %i = alloca i64, align 8
  %number_children = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4624, metadata !DIExpression()), !dbg !4625
  store %struct._CubeInfo* %cube_info, %struct._CubeInfo** %cube_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info.addr, metadata !4626, metadata !DIExpression()), !dbg !4627
  store %struct._NodeInfo* %node_info, %struct._NodeInfo** %node_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._NodeInfo** %node_info.addr, metadata !4628, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4630, metadata !DIExpression()), !dbg !4631
  call void @llvm.dbg.declare(metadata i64* %number_children, metadata !4632, metadata !DIExpression()), !dbg !4633
  %0 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4634
  %associate_alpha = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %0, i32 0, i32 19, !dbg !4635
  %1 = load i32, i32* %associate_alpha, align 8, !dbg !4635
  %cmp = icmp eq i32 %1, 0, !dbg !4636
  %2 = zext i1 %cmp to i64, !dbg !4634
  %cond = select i1 %cmp, i64 8, i64 16, !dbg !4634
  store i64 %cond, i64* %number_children, align 8, !dbg !4637
  store i64 0, i64* %i, align 8, !dbg !4638
  br label %for.cond, !dbg !4640

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i64, i64* %i, align 8, !dbg !4641
  %4 = load i64, i64* %number_children, align 8, !dbg !4643
  %cmp1 = icmp slt i64 %3, %4, !dbg !4644
  br i1 %cmp1, label %for.body, label %for.end, !dbg !4645

for.body:                                         ; preds = %for.cond
  %5 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !4646
  %child = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %5, i32 0, i32 1, !dbg !4648
  %6 = load i64, i64* %i, align 8, !dbg !4649
  %arrayidx = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child, i64 0, i64 %6, !dbg !4646
  %7 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx, align 8, !dbg !4646
  %cmp2 = icmp ne %struct._NodeInfo* %7, null, !dbg !4650
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4651

if.then:                                          ; preds = %for.body
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4652
  %9 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4653
  %10 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !4654
  %child3 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %10, i32 0, i32 1, !dbg !4655
  %11 = load i64, i64* %i, align 8, !dbg !4656
  %arrayidx4 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child3, i64 0, i64 %11, !dbg !4654
  %12 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx4, align 8, !dbg !4654
  call void @PruneLevel(%struct._Image* %8, %struct._CubeInfo* %9, %struct._NodeInfo* %12), !dbg !4657
  br label %if.end, !dbg !4657

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !4658

for.inc:                                          ; preds = %if.end
  %13 = load i64, i64* %i, align 8, !dbg !4659
  %inc = add nsw i64 %13, 1, !dbg !4659
  store i64 %inc, i64* %i, align 8, !dbg !4659
  br label %for.cond, !dbg !4660, !llvm.loop !4661

for.end:                                          ; preds = %for.cond
  %14 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !4663
  %level = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %14, i32 0, i32 7, !dbg !4665
  %15 = load i64, i64* %level, align 8, !dbg !4665
  %16 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4666
  %depth = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %16, i32 0, i32 22, !dbg !4667
  %17 = load i64, i64* %depth, align 8, !dbg !4667
  %cmp5 = icmp eq i64 %15, %17, !dbg !4668
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !4669

if.then6:                                         ; preds = %for.end
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4670
  %19 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4671
  %20 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !4672
  call void @PruneChild(%struct._Image* %18, %struct._CubeInfo* %19, %struct._NodeInfo* %20), !dbg !4673
  br label %if.end7, !dbg !4673

if.end7:                                          ; preds = %if.then6, %for.end
  ret void, !dbg !4674
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @IsSameColor(%struct._Image* %image, %struct._PixelPacket* %p, %struct._PixelPacket* %q) #0 !dbg !4675 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %p.addr = alloca %struct._PixelPacket*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4678, metadata !DIExpression()), !dbg !4679
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !4680, metadata !DIExpression()), !dbg !4681
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !4682, metadata !DIExpression()), !dbg !4683
  %0 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4684
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %0, i32 0, i32 2, !dbg !4684
  %1 = load i16, i16* %red, align 2, !dbg !4684
  %conv = zext i16 %1 to i32, !dbg !4684
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4686
  %red1 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %2, i32 0, i32 2, !dbg !4686
  %3 = load i16, i16* %red1, align 2, !dbg !4686
  %conv2 = zext i16 %3 to i32, !dbg !4686
  %cmp = icmp ne i32 %conv, %conv2, !dbg !4687
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4688

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4689
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 1, !dbg !4689
  %5 = load i16, i16* %green, align 2, !dbg !4689
  %conv4 = zext i16 %5 to i32, !dbg !4689
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4690
  %green5 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 1, !dbg !4690
  %7 = load i16, i16* %green5, align 2, !dbg !4690
  %conv6 = zext i16 %7 to i32, !dbg !4690
  %cmp7 = icmp ne i32 %conv4, %conv6, !dbg !4691
  br i1 %cmp7, label %if.then, label %lor.lhs.false9, !dbg !4692

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4693
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 0, i32 0, !dbg !4693
  %9 = load i16, i16* %blue, align 2, !dbg !4693
  %conv10 = zext i16 %9 to i32, !dbg !4693
  %10 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4694
  %blue11 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %10, i32 0, i32 0, !dbg !4694
  %11 = load i16, i16* %blue11, align 2, !dbg !4694
  %conv12 = zext i16 %11 to i32, !dbg !4694
  %cmp13 = icmp ne i32 %conv10, %conv12, !dbg !4695
  br i1 %cmp13, label %if.then, label %if.end, !dbg !4696

if.then:                                          ; preds = %lor.lhs.false9, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !4697
  br label %return, !dbg !4697

if.end:                                           ; preds = %lor.lhs.false9
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4698
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 6, !dbg !4700
  %13 = load i32, i32* %matte, align 8, !dbg !4700
  %cmp15 = icmp ne i32 %13, 0, !dbg !4701
  br i1 %cmp15, label %land.lhs.true, label %if.end23, !dbg !4702

land.lhs.true:                                    ; preds = %if.end
  %14 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4703
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %14, i32 0, i32 3, !dbg !4703
  %15 = load i16, i16* %opacity, align 2, !dbg !4703
  %conv17 = zext i16 %15 to i32, !dbg !4703
  %16 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4704
  %opacity18 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %16, i32 0, i32 3, !dbg !4704
  %17 = load i16, i16* %opacity18, align 2, !dbg !4704
  %conv19 = zext i16 %17 to i32, !dbg !4704
  %cmp20 = icmp ne i32 %conv17, %conv19, !dbg !4705
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !4706

if.then22:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !4707
  br label %return, !dbg !4707

if.end23:                                         ; preds = %land.lhs.true, %if.end
  store i32 1, i32* %retval, align 4, !dbg !4708
  br label %return, !dbg !4708

return:                                           ; preds = %if.end23, %if.then22, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !4709
  ret i32 %18, !dbg !4709
}

; Function Attrs: noinline nounwind uwtable
define internal void @AssociateAlphaPixel(%struct._CubeInfo* %cube_info, %struct._PixelPacket* %pixel, %struct._RealPixelPacket* %alpha_pixel) #0 !dbg !4710 {
entry:
  %cube_info.addr = alloca %struct._CubeInfo*, align 8
  %pixel.addr = alloca %struct._PixelPacket*, align 8
  %alpha_pixel.addr = alloca %struct._RealPixelPacket*, align 8
  %alpha = alloca float, align 4
  store %struct._CubeInfo* %cube_info, %struct._CubeInfo** %cube_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info.addr, metadata !4715, metadata !DIExpression()), !dbg !4716
  store %struct._PixelPacket* %pixel, %struct._PixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %pixel.addr, metadata !4717, metadata !DIExpression()), !dbg !4718
  store %struct._RealPixelPacket* %alpha_pixel, %struct._RealPixelPacket** %alpha_pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RealPixelPacket** %alpha_pixel.addr, metadata !4719, metadata !DIExpression()), !dbg !4720
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !4721, metadata !DIExpression()), !dbg !4722
  %0 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4723
  %associate_alpha = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %0, i32 0, i32 19, !dbg !4725
  %1 = load i32, i32* %associate_alpha, align 8, !dbg !4725
  %cmp = icmp eq i32 %1, 0, !dbg !4726
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4727

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !4728
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %2, i32 0, i32 3, !dbg !4729
  %3 = load i16, i16* %opacity, align 2, !dbg !4729
  %conv = zext i16 %3 to i32, !dbg !4728
  %cmp1 = icmp eq i32 %conv, 0, !dbg !4730
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4731

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !4732
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 2, !dbg !4732
  %5 = load i16, i16* %red, align 2, !dbg !4732
  %conv3 = uitofp i16 %5 to float, !dbg !4734
  %6 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %alpha_pixel.addr, align 8, !dbg !4735
  %red4 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %6, i32 0, i32 0, !dbg !4736
  store float %conv3, float* %red4, align 4, !dbg !4737
  %7 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !4738
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %7, i32 0, i32 1, !dbg !4738
  %8 = load i16, i16* %green, align 2, !dbg !4738
  %conv5 = uitofp i16 %8 to float, !dbg !4739
  %9 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %alpha_pixel.addr, align 8, !dbg !4740
  %green6 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %9, i32 0, i32 1, !dbg !4741
  store float %conv5, float* %green6, align 4, !dbg !4742
  %10 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !4743
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %10, i32 0, i32 0, !dbg !4743
  %11 = load i16, i16* %blue, align 2, !dbg !4743
  %conv7 = uitofp i16 %11 to float, !dbg !4744
  %12 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %alpha_pixel.addr, align 8, !dbg !4745
  %blue8 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %12, i32 0, i32 2, !dbg !4746
  store float %conv7, float* %blue8, align 4, !dbg !4747
  %13 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !4748
  %opacity9 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %13, i32 0, i32 3, !dbg !4748
  %14 = load i16, i16* %opacity9, align 2, !dbg !4748
  %conv10 = uitofp i16 %14 to float, !dbg !4749
  %15 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %alpha_pixel.addr, align 8, !dbg !4750
  %opacity11 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %15, i32 0, i32 3, !dbg !4751
  store float %conv10, float* %opacity11, align 4, !dbg !4752
  br label %return, !dbg !4753

if.end:                                           ; preds = %lor.lhs.false
  %16 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !4754
  %opacity12 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %16, i32 0, i32 3, !dbg !4754
  %17 = load i16, i16* %opacity12, align 2, !dbg !4754
  %conv13 = zext i16 %17 to i32, !dbg !4754
  %sub = sub nsw i32 65535, %conv13, !dbg !4755
  %conv14 = sitofp i32 %sub to double, !dbg !4756
  %mul = fmul double 0x3EF0001000100010, %conv14, !dbg !4757
  %conv15 = fptrunc double %mul to float, !dbg !4758
  store float %conv15, float* %alpha, align 4, !dbg !4759
  %18 = load float, float* %alpha, align 4, !dbg !4760
  %19 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !4761
  %red16 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %19, i32 0, i32 2, !dbg !4761
  %20 = load i16, i16* %red16, align 2, !dbg !4761
  %conv17 = zext i16 %20 to i32, !dbg !4761
  %conv18 = sitofp i32 %conv17 to float, !dbg !4761
  %mul19 = fmul float %18, %conv18, !dbg !4762
  %21 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %alpha_pixel.addr, align 8, !dbg !4763
  %red20 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %21, i32 0, i32 0, !dbg !4764
  store float %mul19, float* %red20, align 4, !dbg !4765
  %22 = load float, float* %alpha, align 4, !dbg !4766
  %23 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !4767
  %green21 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %23, i32 0, i32 1, !dbg !4767
  %24 = load i16, i16* %green21, align 2, !dbg !4767
  %conv22 = zext i16 %24 to i32, !dbg !4767
  %conv23 = sitofp i32 %conv22 to float, !dbg !4767
  %mul24 = fmul float %22, %conv23, !dbg !4768
  %25 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %alpha_pixel.addr, align 8, !dbg !4769
  %green25 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %25, i32 0, i32 1, !dbg !4770
  store float %mul24, float* %green25, align 4, !dbg !4771
  %26 = load float, float* %alpha, align 4, !dbg !4772
  %27 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !4773
  %blue26 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %27, i32 0, i32 0, !dbg !4773
  %28 = load i16, i16* %blue26, align 2, !dbg !4773
  %conv27 = zext i16 %28 to i32, !dbg !4773
  %conv28 = sitofp i32 %conv27 to float, !dbg !4773
  %mul29 = fmul float %26, %conv28, !dbg !4774
  %29 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %alpha_pixel.addr, align 8, !dbg !4775
  %blue30 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %29, i32 0, i32 2, !dbg !4776
  store float %mul29, float* %blue30, align 4, !dbg !4777
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !4778
  %opacity31 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i32 0, i32 3, !dbg !4778
  %31 = load i16, i16* %opacity31, align 2, !dbg !4778
  %conv32 = uitofp i16 %31 to float, !dbg !4779
  %32 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %alpha_pixel.addr, align 8, !dbg !4780
  %opacity33 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %32, i32 0, i32 3, !dbg !4781
  store float %conv32, float* %opacity33, align 4, !dbg !4782
  br label %return, !dbg !4783

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !4783
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: noinline nounwind uwtable
define internal i64 @ColorToNodeId(%struct._CubeInfo* %cube_info, %struct._RealPixelPacket* %pixel, i64 %index) #0 !dbg !4784 {
entry:
  %cube_info.addr = alloca %struct._CubeInfo*, align 8
  %pixel.addr = alloca %struct._RealPixelPacket*, align 8
  %index.addr = alloca i64, align 8
  %id = alloca i64, align 8
  store %struct._CubeInfo* %cube_info, %struct._CubeInfo** %cube_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info.addr, metadata !4789, metadata !DIExpression()), !dbg !4790
  store %struct._RealPixelPacket* %pixel, %struct._RealPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RealPixelPacket** %pixel.addr, metadata !4791, metadata !DIExpression()), !dbg !4792
  store i64 %index, i64* %index.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !4793, metadata !DIExpression()), !dbg !4794
  call void @llvm.dbg.declare(metadata i64* %id, metadata !4795, metadata !DIExpression()), !dbg !4796
  %0 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %pixel.addr, align 8, !dbg !4797
  %red = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %0, i32 0, i32 0, !dbg !4797
  %1 = load float, float* %red, align 4, !dbg !4797
  %call = call zeroext i16 @ClampPixel(float %1), !dbg !4798
  %call1 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %call), !dbg !4799
  %conv = zext i8 %call1 to i32, !dbg !4799
  %2 = load i64, i64* %index.addr, align 8, !dbg !4800
  %sh_prom = trunc i64 %2 to i32, !dbg !4801
  %shr = ashr i32 %conv, %sh_prom, !dbg !4801
  %and = and i32 %shr, 1, !dbg !4802
  %3 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %pixel.addr, align 8, !dbg !4803
  %green = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %3, i32 0, i32 1, !dbg !4803
  %4 = load float, float* %green, align 4, !dbg !4803
  %call2 = call zeroext i16 @ClampPixel(float %4), !dbg !4804
  %call3 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %call2), !dbg !4805
  %conv4 = zext i8 %call3 to i32, !dbg !4805
  %5 = load i64, i64* %index.addr, align 8, !dbg !4806
  %sh_prom5 = trunc i64 %5 to i32, !dbg !4807
  %shr6 = ashr i32 %conv4, %sh_prom5, !dbg !4807
  %and7 = and i32 %shr6, 1, !dbg !4808
  %shl = shl i32 %and7, 1, !dbg !4809
  %or = or i32 %and, %shl, !dbg !4810
  %6 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %pixel.addr, align 8, !dbg !4811
  %blue = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %6, i32 0, i32 2, !dbg !4811
  %7 = load float, float* %blue, align 4, !dbg !4811
  %call8 = call zeroext i16 @ClampPixel(float %7), !dbg !4812
  %call9 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %call8), !dbg !4813
  %conv10 = zext i8 %call9 to i32, !dbg !4813
  %8 = load i64, i64* %index.addr, align 8, !dbg !4814
  %sh_prom11 = trunc i64 %8 to i32, !dbg !4815
  %shr12 = ashr i32 %conv10, %sh_prom11, !dbg !4815
  %and13 = and i32 %shr12, 1, !dbg !4816
  %shl14 = shl i32 %and13, 2, !dbg !4817
  %or15 = or i32 %or, %shl14, !dbg !4818
  %conv16 = sext i32 %or15 to i64, !dbg !4819
  store i64 %conv16, i64* %id, align 8, !dbg !4820
  %9 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4821
  %associate_alpha = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %9, i32 0, i32 19, !dbg !4823
  %10 = load i32, i32* %associate_alpha, align 8, !dbg !4823
  %cmp = icmp ne i32 %10, 0, !dbg !4824
  br i1 %cmp, label %if.then, label %if.end, !dbg !4825

if.then:                                          ; preds = %entry
  %11 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %pixel.addr, align 8, !dbg !4826
  %opacity = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %11, i32 0, i32 3, !dbg !4826
  %12 = load float, float* %opacity, align 4, !dbg !4826
  %call18 = call zeroext i16 @ClampPixel(float %12), !dbg !4827
  %call19 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %call18), !dbg !4828
  %conv20 = zext i8 %call19 to i32, !dbg !4828
  %13 = load i64, i64* %index.addr, align 8, !dbg !4829
  %sh_prom21 = trunc i64 %13 to i32, !dbg !4830
  %shr22 = ashr i32 %conv20, %sh_prom21, !dbg !4830
  %and23 = and i32 %shr22, 1, !dbg !4831
  %shl24 = shl i32 %and23, 3, !dbg !4832
  %conv25 = sext i32 %shl24 to i64, !dbg !4833
  %14 = load i64, i64* %id, align 8, !dbg !4834
  %or26 = or i64 %14, %conv25, !dbg !4834
  store i64 %or26, i64* %id, align 8, !dbg !4834
  br label %if.end, !dbg !4835

if.end:                                           ; preds = %if.then, %entry
  %15 = load i64, i64* %id, align 8, !dbg !4836
  ret i64 %15, !dbg !4837
}

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #7

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ClampPixel(float %value) #0 !dbg !4838 {
entry:
  %retval = alloca i16, align 2
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !4842, metadata !DIExpression()), !dbg !4843
  %0 = load float, float* %value.addr, align 4, !dbg !4844
  %cmp = fcmp olt float %0, 0.000000e+00, !dbg !4846
  br i1 %cmp, label %if.then, label %if.end, !dbg !4847

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !4848
  br label %return, !dbg !4848

if.end:                                           ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !4849
  %cmp1 = fcmp oge float %1, 6.553500e+04, !dbg !4851
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !4852

if.then2:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !4853
  br label %return, !dbg !4853

if.end3:                                          ; preds = %if.end
  %2 = load float, float* %value.addr, align 4, !dbg !4854
  %add = fadd float %2, 5.000000e-01, !dbg !4855
  %conv = fptoui float %add to i16, !dbg !4856
  store i16 %conv, i16* %retval, align 2, !dbg !4857
  br label %return, !dbg !4857

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %3 = load i16, i16* %retval, align 2, !dbg !4858
  ret i16 %3, !dbg !4858
}

; Function Attrs: noinline nounwind uwtable
define internal void @PruneToCubeDepth(%struct._Image* %image, %struct._CubeInfo* %cube_info, %struct._NodeInfo* %node_info) #0 !dbg !4859 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %cube_info.addr = alloca %struct._CubeInfo*, align 8
  %node_info.addr = alloca %struct._NodeInfo*, align 8
  %i = alloca i64, align 8
  %number_children = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4860, metadata !DIExpression()), !dbg !4861
  store %struct._CubeInfo* %cube_info, %struct._CubeInfo** %cube_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info.addr, metadata !4862, metadata !DIExpression()), !dbg !4863
  store %struct._NodeInfo* %node_info, %struct._NodeInfo** %node_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._NodeInfo** %node_info.addr, metadata !4864, metadata !DIExpression()), !dbg !4865
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4866, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.declare(metadata i64* %number_children, metadata !4868, metadata !DIExpression()), !dbg !4869
  %0 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4870
  %associate_alpha = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %0, i32 0, i32 19, !dbg !4871
  %1 = load i32, i32* %associate_alpha, align 8, !dbg !4871
  %cmp = icmp eq i32 %1, 0, !dbg !4872
  %2 = zext i1 %cmp to i64, !dbg !4870
  %cond = select i1 %cmp, i64 8, i64 16, !dbg !4870
  store i64 %cond, i64* %number_children, align 8, !dbg !4873
  store i64 0, i64* %i, align 8, !dbg !4874
  br label %for.cond, !dbg !4876

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i64, i64* %i, align 8, !dbg !4877
  %4 = load i64, i64* %number_children, align 8, !dbg !4879
  %cmp1 = icmp slt i64 %3, %4, !dbg !4880
  br i1 %cmp1, label %for.body, label %for.end, !dbg !4881

for.body:                                         ; preds = %for.cond
  %5 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !4882
  %child = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %5, i32 0, i32 1, !dbg !4884
  %6 = load i64, i64* %i, align 8, !dbg !4885
  %arrayidx = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child, i64 0, i64 %6, !dbg !4882
  %7 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx, align 8, !dbg !4882
  %cmp2 = icmp ne %struct._NodeInfo* %7, null, !dbg !4886
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4887

if.then:                                          ; preds = %for.body
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4888
  %9 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4889
  %10 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !4890
  %child3 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %10, i32 0, i32 1, !dbg !4891
  %11 = load i64, i64* %i, align 8, !dbg !4892
  %arrayidx4 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child3, i64 0, i64 %11, !dbg !4890
  %12 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx4, align 8, !dbg !4890
  call void @PruneToCubeDepth(%struct._Image* %8, %struct._CubeInfo* %9, %struct._NodeInfo* %12), !dbg !4893
  br label %if.end, !dbg !4893

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !4894

for.inc:                                          ; preds = %if.end
  %13 = load i64, i64* %i, align 8, !dbg !4895
  %inc = add nsw i64 %13, 1, !dbg !4895
  store i64 %inc, i64* %i, align 8, !dbg !4895
  br label %for.cond, !dbg !4896, !llvm.loop !4897

for.end:                                          ; preds = %for.cond
  %14 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !4899
  %level = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %14, i32 0, i32 7, !dbg !4901
  %15 = load i64, i64* %level, align 8, !dbg !4901
  %16 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4902
  %depth = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %16, i32 0, i32 22, !dbg !4903
  %17 = load i64, i64* %depth, align 8, !dbg !4903
  %cmp5 = icmp ugt i64 %15, %17, !dbg !4904
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !4905

if.then6:                                         ; preds = %for.end
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4906
  %19 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4907
  %20 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !4908
  call void @PruneChild(%struct._Image* %18, %struct._CubeInfo* %19, %struct._NodeInfo* %20), !dbg !4909
  br label %if.end7, !dbg !4909

if.end7:                                          ; preds = %if.then6, %for.end
  ret void, !dbg !4910
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @IsGrayColorspace(i32 %colorspace) #0 !dbg !4911 {
entry:
  %retval = alloca i32, align 4
  %colorspace.addr = alloca i32, align 4
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !4912, metadata !DIExpression()), !dbg !4913
  %0 = load i32, i32* %colorspace.addr, align 4, !dbg !4914
  %cmp = icmp eq i32 %0, 2, !dbg !4916
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4917

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %colorspace.addr, align 4, !dbg !4918
  %cmp1 = icmp eq i32 %1, 17, !dbg !4919
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !4920

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %colorspace.addr, align 4, !dbg !4921
  %cmp3 = icmp eq i32 %2, 19, !dbg !4922
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4923

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !4924
  br label %return, !dbg !4924

if.end:                                           ; preds = %lor.lhs.false2
  store i32 0, i32* %retval, align 4, !dbg !4925
  br label %return, !dbg !4925

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !4926
  ret i32 %3, !dbg !4926
}

; Function Attrs: noinline nounwind uwtable
define internal void @PruneChild(%struct._Image* %image, %struct._CubeInfo* %cube_info, %struct._NodeInfo* %node_info) #0 !dbg !4927 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %cube_info.addr = alloca %struct._CubeInfo*, align 8
  %node_info.addr = alloca %struct._NodeInfo*, align 8
  %parent = alloca %struct._NodeInfo*, align 8
  %i = alloca i64, align 8
  %number_children = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4928, metadata !DIExpression()), !dbg !4929
  store %struct._CubeInfo* %cube_info, %struct._CubeInfo** %cube_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info.addr, metadata !4930, metadata !DIExpression()), !dbg !4931
  store %struct._NodeInfo* %node_info, %struct._NodeInfo** %node_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._NodeInfo** %node_info.addr, metadata !4932, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.declare(metadata %struct._NodeInfo** %parent, metadata !4934, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4936, metadata !DIExpression()), !dbg !4937
  call void @llvm.dbg.declare(metadata i64* %number_children, metadata !4938, metadata !DIExpression()), !dbg !4939
  %0 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4940
  %associate_alpha = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %0, i32 0, i32 19, !dbg !4941
  %1 = load i32, i32* %associate_alpha, align 8, !dbg !4941
  %cmp = icmp eq i32 %1, 0, !dbg !4942
  %2 = zext i1 %cmp to i64, !dbg !4940
  %cond = select i1 %cmp, i64 8, i64 16, !dbg !4940
  store i64 %cond, i64* %number_children, align 8, !dbg !4943
  store i64 0, i64* %i, align 8, !dbg !4944
  br label %for.cond, !dbg !4946

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i64, i64* %i, align 8, !dbg !4947
  %4 = load i64, i64* %number_children, align 8, !dbg !4949
  %cmp1 = icmp slt i64 %3, %4, !dbg !4950
  br i1 %cmp1, label %for.body, label %for.end, !dbg !4951

for.body:                                         ; preds = %for.cond
  %5 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !4952
  %child = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %5, i32 0, i32 1, !dbg !4954
  %6 = load i64, i64* %i, align 8, !dbg !4955
  %arrayidx = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child, i64 0, i64 %6, !dbg !4952
  %7 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx, align 8, !dbg !4952
  %cmp2 = icmp ne %struct._NodeInfo* %7, null, !dbg !4956
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4957

if.then:                                          ; preds = %for.body
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4958
  %9 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !4959
  %10 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !4960
  %child3 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %10, i32 0, i32 1, !dbg !4961
  %11 = load i64, i64* %i, align 8, !dbg !4962
  %arrayidx4 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child3, i64 0, i64 %11, !dbg !4960
  %12 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx4, align 8, !dbg !4960
  call void @PruneChild(%struct._Image* %8, %struct._CubeInfo* %9, %struct._NodeInfo* %12), !dbg !4963
  br label %if.end, !dbg !4963

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !4964

for.inc:                                          ; preds = %if.end
  %13 = load i64, i64* %i, align 8, !dbg !4965
  %inc = add nsw i64 %13, 1, !dbg !4965
  store i64 %inc, i64* %i, align 8, !dbg !4965
  br label %for.cond, !dbg !4966, !llvm.loop !4967

for.end:                                          ; preds = %for.cond
  %14 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !4969
  %parent5 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %14, i32 0, i32 0, !dbg !4970
  %15 = load %struct._NodeInfo*, %struct._NodeInfo** %parent5, align 8, !dbg !4970
  store %struct._NodeInfo* %15, %struct._NodeInfo** %parent, align 8, !dbg !4971
  %16 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !4972
  %number_unique = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %16, i32 0, i32 2, !dbg !4973
  %17 = load i64, i64* %number_unique, align 8, !dbg !4973
  %18 = load %struct._NodeInfo*, %struct._NodeInfo** %parent, align 8, !dbg !4974
  %number_unique6 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %18, i32 0, i32 2, !dbg !4975
  %19 = load i64, i64* %number_unique6, align 8, !dbg !4976
  %add = add i64 %19, %17, !dbg !4976
  store i64 %add, i64* %number_unique6, align 8, !dbg !4976
  %20 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !4977
  %total_color = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %20, i32 0, i32 3, !dbg !4978
  %red = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color, i32 0, i32 0, !dbg !4979
  %21 = load float, float* %red, align 8, !dbg !4979
  %22 = load %struct._NodeInfo*, %struct._NodeInfo** %parent, align 8, !dbg !4980
  %total_color7 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %22, i32 0, i32 3, !dbg !4981
  %red8 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color7, i32 0, i32 0, !dbg !4982
  %23 = load float, float* %red8, align 8, !dbg !4983
  %add9 = fadd float %23, %21, !dbg !4983
  store float %add9, float* %red8, align 8, !dbg !4983
  %24 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !4984
  %total_color10 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %24, i32 0, i32 3, !dbg !4985
  %green = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color10, i32 0, i32 1, !dbg !4986
  %25 = load float, float* %green, align 4, !dbg !4986
  %26 = load %struct._NodeInfo*, %struct._NodeInfo** %parent, align 8, !dbg !4987
  %total_color11 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %26, i32 0, i32 3, !dbg !4988
  %green12 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color11, i32 0, i32 1, !dbg !4989
  %27 = load float, float* %green12, align 4, !dbg !4990
  %add13 = fadd float %27, %25, !dbg !4990
  store float %add13, float* %green12, align 4, !dbg !4990
  %28 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !4991
  %total_color14 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %28, i32 0, i32 3, !dbg !4992
  %blue = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color14, i32 0, i32 2, !dbg !4993
  %29 = load float, float* %blue, align 8, !dbg !4993
  %30 = load %struct._NodeInfo*, %struct._NodeInfo** %parent, align 8, !dbg !4994
  %total_color15 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %30, i32 0, i32 3, !dbg !4995
  %blue16 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color15, i32 0, i32 2, !dbg !4996
  %31 = load float, float* %blue16, align 8, !dbg !4997
  %add17 = fadd float %31, %29, !dbg !4997
  store float %add17, float* %blue16, align 8, !dbg !4997
  %32 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !4998
  %total_color18 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %32, i32 0, i32 3, !dbg !4999
  %opacity = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color18, i32 0, i32 3, !dbg !5000
  %33 = load float, float* %opacity, align 4, !dbg !5000
  %34 = load %struct._NodeInfo*, %struct._NodeInfo** %parent, align 8, !dbg !5001
  %total_color19 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %34, i32 0, i32 3, !dbg !5002
  %opacity20 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color19, i32 0, i32 3, !dbg !5003
  %35 = load float, float* %opacity20, align 4, !dbg !5004
  %add21 = fadd float %35, %33, !dbg !5004
  store float %add21, float* %opacity20, align 4, !dbg !5004
  %36 = load %struct._NodeInfo*, %struct._NodeInfo** %parent, align 8, !dbg !5005
  %child22 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %36, i32 0, i32 1, !dbg !5006
  %37 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5007
  %id = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %37, i32 0, i32 6, !dbg !5008
  %38 = load i64, i64* %id, align 8, !dbg !5008
  %arrayidx23 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child22, i64 0, i64 %38, !dbg !5005
  store %struct._NodeInfo* null, %struct._NodeInfo** %arrayidx23, align 8, !dbg !5009
  %39 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5010
  %nodes = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %39, i32 0, i32 9, !dbg !5011
  %40 = load i64, i64* %nodes, align 8, !dbg !5012
  %dec = add i64 %40, -1, !dbg !5012
  store i64 %dec, i64* %nodes, align 8, !dbg !5012
  ret void, !dbg !5013
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ScaleQuantumToChar(i16 zeroext %quantum) #0 !dbg !5014 {
entry:
  %quantum.addr = alloca i16, align 2
  store i16 %quantum, i16* %quantum.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %quantum.addr, metadata !5018, metadata !DIExpression()), !dbg !5019
  %0 = load i16, i16* %quantum.addr, align 2, !dbg !5020
  %conv = zext i16 %0 to i64, !dbg !5020
  %add = add i64 %conv, 128, !dbg !5021
  %1 = load i16, i16* %quantum.addr, align 2, !dbg !5022
  %conv1 = zext i16 %1 to i64, !dbg !5022
  %add2 = add i64 %conv1, 128, !dbg !5023
  %shr = lshr i64 %add2, 8, !dbg !5024
  %sub = sub i64 %add, %shr, !dbg !5025
  %shr3 = lshr i64 %sub, 8, !dbg !5026
  %conv4 = trunc i64 %shr3 to i8, !dbg !5027
  ret i8 %conv4, !dbg !5028
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @DefineImageColormap(%struct._Image* %image, %struct._CubeInfo* %cube_info, %struct._NodeInfo* %node_info) #0 !dbg !5029 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %cube_info.addr = alloca %struct._CubeInfo*, align 8
  %node_info.addr = alloca %struct._NodeInfo*, align 8
  %i = alloca i64, align 8
  %number_children = alloca i64, align 8
  %alpha = alloca float, align 4
  %q = alloca %struct._PixelPacket*, align 8
  %opacity28 = alloca float, align 4
  %gamma = alloca double, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5032, metadata !DIExpression()), !dbg !5033
  store %struct._CubeInfo* %cube_info, %struct._CubeInfo** %cube_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info.addr, metadata !5034, metadata !DIExpression()), !dbg !5035
  store %struct._NodeInfo* %node_info, %struct._NodeInfo** %node_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._NodeInfo** %node_info.addr, metadata !5036, metadata !DIExpression()), !dbg !5037
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5038, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.declare(metadata i64* %number_children, metadata !5040, metadata !DIExpression()), !dbg !5041
  %0 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5042
  %associate_alpha = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %0, i32 0, i32 19, !dbg !5043
  %1 = load i32, i32* %associate_alpha, align 8, !dbg !5043
  %cmp = icmp eq i32 %1, 0, !dbg !5044
  %2 = zext i1 %cmp to i64, !dbg !5042
  %cond = select i1 %cmp, i64 8, i64 16, !dbg !5042
  store i64 %cond, i64* %number_children, align 8, !dbg !5045
  store i64 0, i64* %i, align 8, !dbg !5046
  br label %for.cond, !dbg !5048

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i64, i64* %i, align 8, !dbg !5049
  %4 = load i64, i64* %number_children, align 8, !dbg !5051
  %cmp1 = icmp slt i64 %3, %4, !dbg !5052
  br i1 %cmp1, label %for.body, label %for.end, !dbg !5053

for.body:                                         ; preds = %for.cond
  %5 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5054
  %child = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %5, i32 0, i32 1, !dbg !5056
  %6 = load i64, i64* %i, align 8, !dbg !5057
  %arrayidx = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child, i64 0, i64 %6, !dbg !5054
  %7 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx, align 8, !dbg !5054
  %cmp2 = icmp ne %struct._NodeInfo* %7, null, !dbg !5058
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5059

if.then:                                          ; preds = %for.body
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5060
  %9 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5061
  %10 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5062
  %child3 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %10, i32 0, i32 1, !dbg !5063
  %11 = load i64, i64* %i, align 8, !dbg !5064
  %arrayidx4 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child3, i64 0, i64 %11, !dbg !5062
  %12 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx4, align 8, !dbg !5062
  %call = call i64 @DefineImageColormap(%struct._Image* %8, %struct._CubeInfo* %9, %struct._NodeInfo* %12), !dbg !5065
  br label %if.end, !dbg !5066

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5067

for.inc:                                          ; preds = %if.end
  %13 = load i64, i64* %i, align 8, !dbg !5068
  %inc = add nsw i64 %13, 1, !dbg !5068
  store i64 %inc, i64* %i, align 8, !dbg !5068
  br label %for.cond, !dbg !5069, !llvm.loop !5070

for.end:                                          ; preds = %for.cond
  %14 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5072
  %number_unique = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %14, i32 0, i32 2, !dbg !5074
  %15 = load i64, i64* %number_unique, align 8, !dbg !5074
  %cmp5 = icmp ne i64 %15, 0, !dbg !5075
  br i1 %cmp5, label %if.then6, label %if.end109, !dbg !5076

if.then6:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !5077, metadata !DIExpression()), !dbg !5079
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !5080, metadata !DIExpression()), !dbg !5081
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5082
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 11, !dbg !5083
  %17 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !5083
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5084
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 10, !dbg !5085
  %19 = load i64, i64* %colors, align 8, !dbg !5085
  %add.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %17, i64 %19, !dbg !5086
  store %struct._PixelPacket* %add.ptr, %struct._PixelPacket** %q, align 8, !dbg !5087
  %20 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5088
  %number_unique7 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %20, i32 0, i32 2, !dbg !5089
  %21 = load i64, i64* %number_unique7, align 8, !dbg !5089
  %conv = sitofp i64 %21 to float, !dbg !5090
  store float %conv, float* %alpha, align 4, !dbg !5091
  %22 = load float, float* %alpha, align 4, !dbg !5092
  %conv8 = fpext float %22 to double, !dbg !5092
  %call9 = call double @PerceptibleReciprocal(double %conv8), !dbg !5093
  %conv10 = fptrunc double %call9 to float, !dbg !5093
  store float %conv10, float* %alpha, align 4, !dbg !5094
  %23 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5095
  %associate_alpha11 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %23, i32 0, i32 19, !dbg !5097
  %24 = load i32, i32* %associate_alpha11, align 8, !dbg !5097
  %cmp12 = icmp eq i32 %24, 0, !dbg !5098
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !5099

if.then14:                                        ; preds = %if.then6
  %25 = load float, float* %alpha, align 4, !dbg !5100
  %mul = fmul float %25, 6.553500e+04, !dbg !5100
  %26 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5100
  %total_color = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %26, i32 0, i32 3, !dbg !5100
  %red = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color, i32 0, i32 0, !dbg !5100
  %27 = load float, float* %red, align 8, !dbg !5100
  %mul15 = fmul float %mul, %27, !dbg !5100
  %call16 = call zeroext i16 @ClampToQuantum(float %mul15), !dbg !5100
  %28 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5100
  %red17 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %28, i32 0, i32 2, !dbg !5100
  store i16 %call16, i16* %red17, align 2, !dbg !5100
  %29 = load float, float* %alpha, align 4, !dbg !5102
  %mul18 = fmul float %29, 6.553500e+04, !dbg !5102
  %30 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5102
  %total_color19 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %30, i32 0, i32 3, !dbg !5102
  %green = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color19, i32 0, i32 1, !dbg !5102
  %31 = load float, float* %green, align 4, !dbg !5102
  %mul20 = fmul float %mul18, %31, !dbg !5102
  %call21 = call zeroext i16 @ClampToQuantum(float %mul20), !dbg !5102
  %32 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5102
  %green22 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %32, i32 0, i32 1, !dbg !5102
  store i16 %call21, i16* %green22, align 2, !dbg !5102
  %33 = load float, float* %alpha, align 4, !dbg !5103
  %mul23 = fmul float %33, 6.553500e+04, !dbg !5103
  %34 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5103
  %total_color24 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %34, i32 0, i32 3, !dbg !5103
  %blue = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color24, i32 0, i32 2, !dbg !5103
  %35 = load float, float* %blue, align 8, !dbg !5103
  %mul25 = fmul float %mul23, %35, !dbg !5103
  %call26 = call zeroext i16 @ClampToQuantum(float %mul25), !dbg !5103
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5103
  %blue27 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 0, i32 0, !dbg !5103
  store i16 %call26, i16* %blue27, align 2, !dbg !5103
  %37 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5104
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %37, i32 0, i32 3, !dbg !5104
  store i16 0, i16* %opacity, align 2, !dbg !5104
  br label %if.end106, !dbg !5105

if.else:                                          ; preds = %if.then6
  call void @llvm.dbg.declare(metadata float* %opacity28, metadata !5106, metadata !DIExpression()), !dbg !5108
  %38 = load float, float* %alpha, align 4, !dbg !5109
  %mul29 = fmul float %38, 6.553500e+04, !dbg !5110
  %39 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5111
  %total_color30 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %39, i32 0, i32 3, !dbg !5112
  %opacity31 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color30, i32 0, i32 3, !dbg !5113
  %40 = load float, float* %opacity31, align 4, !dbg !5113
  %mul32 = fmul float %mul29, %40, !dbg !5114
  store float %mul32, float* %opacity28, align 4, !dbg !5115
  %41 = load float, float* %opacity28, align 4, !dbg !5116
  %call33 = call zeroext i16 @ClampToQuantum(float %41), !dbg !5116
  %42 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5116
  %opacity34 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %42, i32 0, i32 3, !dbg !5116
  store i16 %call33, i16* %opacity34, align 2, !dbg !5116
  %43 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5117
  %opacity35 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %43, i32 0, i32 3, !dbg !5119
  %44 = load i16, i16* %opacity35, align 2, !dbg !5119
  %conv36 = zext i16 %44 to i32, !dbg !5117
  %cmp37 = icmp eq i32 %conv36, 0, !dbg !5120
  br i1 %cmp37, label %if.then39, label %if.else58, !dbg !5121

if.then39:                                        ; preds = %if.else
  %45 = load float, float* %alpha, align 4, !dbg !5122
  %mul40 = fmul float %45, 6.553500e+04, !dbg !5122
  %46 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5122
  %total_color41 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %46, i32 0, i32 3, !dbg !5122
  %red42 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color41, i32 0, i32 0, !dbg !5122
  %47 = load float, float* %red42, align 8, !dbg !5122
  %mul43 = fmul float %mul40, %47, !dbg !5122
  %call44 = call zeroext i16 @ClampToQuantum(float %mul43), !dbg !5122
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5122
  %red45 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %48, i32 0, i32 2, !dbg !5122
  store i16 %call44, i16* %red45, align 2, !dbg !5122
  %49 = load float, float* %alpha, align 4, !dbg !5124
  %mul46 = fmul float %49, 6.553500e+04, !dbg !5124
  %50 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5124
  %total_color47 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %50, i32 0, i32 3, !dbg !5124
  %green48 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color47, i32 0, i32 1, !dbg !5124
  %51 = load float, float* %green48, align 4, !dbg !5124
  %mul49 = fmul float %mul46, %51, !dbg !5124
  %call50 = call zeroext i16 @ClampToQuantum(float %mul49), !dbg !5124
  %52 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5124
  %green51 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %52, i32 0, i32 1, !dbg !5124
  store i16 %call50, i16* %green51, align 2, !dbg !5124
  %53 = load float, float* %alpha, align 4, !dbg !5125
  %mul52 = fmul float %53, 6.553500e+04, !dbg !5125
  %54 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5125
  %total_color53 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %54, i32 0, i32 3, !dbg !5125
  %blue54 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color53, i32 0, i32 2, !dbg !5125
  %55 = load float, float* %blue54, align 8, !dbg !5125
  %mul55 = fmul float %mul52, %55, !dbg !5125
  %call56 = call zeroext i16 @ClampToQuantum(float %mul55), !dbg !5125
  %56 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5125
  %blue57 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %56, i32 0, i32 0, !dbg !5125
  store i16 %call56, i16* %blue57, align 2, !dbg !5125
  br label %if.end105, !dbg !5126

if.else58:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !5127, metadata !DIExpression()), !dbg !5129
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5130
  %opacity59 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 0, i32 3, !dbg !5131
  %58 = load i16, i16* %opacity59, align 2, !dbg !5131
  %conv60 = uitofp i16 %58 to double, !dbg !5132
  %sub = fsub double 6.553500e+04, %conv60, !dbg !5133
  %mul61 = fmul double 0x3EF0001000100010, %sub, !dbg !5134
  store double %mul61, double* %gamma, align 8, !dbg !5135
  %59 = load double, double* %gamma, align 8, !dbg !5136
  %cmp62 = fcmp olt double %59, 0.000000e+00, !dbg !5138
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !5139

if.then64:                                        ; preds = %if.else58
  store double 0.000000e+00, double* %gamma, align 8, !dbg !5140
  br label %if.end65, !dbg !5141

if.end65:                                         ; preds = %if.then64, %if.else58
  %60 = load double, double* %gamma, align 8, !dbg !5142
  %call66 = call double @PerceptibleReciprocal(double %60), !dbg !5143
  store double %call66, double* %gamma, align 8, !dbg !5144
  %61 = load float, float* %alpha, align 4, !dbg !5145
  %conv67 = fpext float %61 to double, !dbg !5145
  %62 = load double, double* %gamma, align 8, !dbg !5145
  %mul68 = fmul double %conv67, %62, !dbg !5145
  %mul69 = fmul double %mul68, 6.553500e+04, !dbg !5145
  %63 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5145
  %total_color70 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %63, i32 0, i32 3, !dbg !5145
  %red71 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color70, i32 0, i32 0, !dbg !5145
  %64 = load float, float* %red71, align 8, !dbg !5145
  %conv72 = fpext float %64 to double, !dbg !5145
  %mul73 = fmul double %mul69, %conv72, !dbg !5145
  %conv74 = fptrunc double %mul73 to float, !dbg !5145
  %call75 = call zeroext i16 @ClampToQuantum(float %conv74), !dbg !5145
  %65 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5145
  %red76 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %65, i32 0, i32 2, !dbg !5145
  store i16 %call75, i16* %red76, align 2, !dbg !5145
  %66 = load float, float* %alpha, align 4, !dbg !5146
  %conv77 = fpext float %66 to double, !dbg !5146
  %67 = load double, double* %gamma, align 8, !dbg !5146
  %mul78 = fmul double %conv77, %67, !dbg !5146
  %mul79 = fmul double %mul78, 6.553500e+04, !dbg !5146
  %68 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5146
  %total_color80 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %68, i32 0, i32 3, !dbg !5146
  %green81 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color80, i32 0, i32 1, !dbg !5146
  %69 = load float, float* %green81, align 4, !dbg !5146
  %conv82 = fpext float %69 to double, !dbg !5146
  %mul83 = fmul double %mul79, %conv82, !dbg !5146
  %conv84 = fptrunc double %mul83 to float, !dbg !5146
  %call85 = call zeroext i16 @ClampToQuantum(float %conv84), !dbg !5146
  %70 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5146
  %green86 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %70, i32 0, i32 1, !dbg !5146
  store i16 %call85, i16* %green86, align 2, !dbg !5146
  %71 = load float, float* %alpha, align 4, !dbg !5147
  %conv87 = fpext float %71 to double, !dbg !5147
  %72 = load double, double* %gamma, align 8, !dbg !5147
  %mul88 = fmul double %conv87, %72, !dbg !5147
  %mul89 = fmul double %mul88, 6.553500e+04, !dbg !5147
  %73 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5147
  %total_color90 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %73, i32 0, i32 3, !dbg !5147
  %blue91 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %total_color90, i32 0, i32 2, !dbg !5147
  %74 = load float, float* %blue91, align 8, !dbg !5147
  %conv92 = fpext float %74 to double, !dbg !5147
  %mul93 = fmul double %mul89, %conv92, !dbg !5147
  %conv94 = fptrunc double %mul93 to float, !dbg !5147
  %call95 = call zeroext i16 @ClampToQuantum(float %conv94), !dbg !5147
  %75 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5147
  %blue96 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %75, i32 0, i32 0, !dbg !5147
  store i16 %call95, i16* %blue96, align 2, !dbg !5147
  %76 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5148
  %number_unique97 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %76, i32 0, i32 2, !dbg !5150
  %77 = load i64, i64* %number_unique97, align 8, !dbg !5150
  %78 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5151
  %transparent_pixels = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %78, i32 0, i32 4, !dbg !5152
  %79 = load i64, i64* %transparent_pixels, align 8, !dbg !5152
  %cmp98 = icmp ugt i64 %77, %79, !dbg !5153
  br i1 %cmp98, label %if.then100, label %if.end104, !dbg !5154

if.then100:                                       ; preds = %if.end65
  %80 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5155
  %number_unique101 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %80, i32 0, i32 2, !dbg !5157
  %81 = load i64, i64* %number_unique101, align 8, !dbg !5157
  %82 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5158
  %transparent_pixels102 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %82, i32 0, i32 4, !dbg !5159
  store i64 %81, i64* %transparent_pixels102, align 8, !dbg !5160
  %83 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5161
  %colors103 = getelementptr inbounds %struct._Image, %struct._Image* %83, i32 0, i32 10, !dbg !5162
  %84 = load i64, i64* %colors103, align 8, !dbg !5162
  %85 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5163
  %transparent_index = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %85, i32 0, i32 3, !dbg !5164
  store i64 %84, i64* %transparent_index, align 8, !dbg !5165
  br label %if.end104, !dbg !5166

if.end104:                                        ; preds = %if.then100, %if.end65
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.then39
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then14
  %86 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5167
  %colors107 = getelementptr inbounds %struct._Image, %struct._Image* %86, i32 0, i32 10, !dbg !5168
  %87 = load i64, i64* %colors107, align 8, !dbg !5169
  %inc108 = add i64 %87, 1, !dbg !5169
  store i64 %inc108, i64* %colors107, align 8, !dbg !5169
  %88 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5170
  %color_number = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %88, i32 0, i32 5, !dbg !5171
  store i64 %87, i64* %color_number, align 8, !dbg !5172
  br label %if.end109, !dbg !5173

if.end109:                                        ; preds = %if.end106, %for.end
  %89 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5174
  %colors110 = getelementptr inbounds %struct._Image, %struct._Image* %89, i32 0, i32 10, !dbg !5175
  %90 = load i64, i64* %colors110, align 8, !dbg !5175
  ret i64 %90, !dbg !5176
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @DitherImage(%struct._Image* %image, %struct._CubeInfo* %cube_info) #0 !dbg !5177 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %cube_info.addr = alloca %struct._CubeInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %status = alloca i32, align 4
  %i = alloca i64, align 8
  %depth = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5178, metadata !DIExpression()), !dbg !5179
  store %struct._CubeInfo* %cube_info, %struct._CubeInfo** %cube_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info.addr, metadata !5180, metadata !DIExpression()), !dbg !5181
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !5182, metadata !DIExpression()), !dbg !5183
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5184, metadata !DIExpression()), !dbg !5185
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5186, metadata !DIExpression()), !dbg !5187
  call void @llvm.dbg.declare(metadata i64* %depth, metadata !5188, metadata !DIExpression()), !dbg !5189
  %0 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5190
  %quantize_info = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %0, i32 0, i32 18, !dbg !5192
  %1 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !5192
  %dither_method = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %1, i32 0, i32 6, !dbg !5193
  %2 = load i32, i32* %dither_method, align 8, !dbg !5193
  %cmp = icmp ne i32 %2, 2, !dbg !5194
  br i1 %cmp, label %if.then, label %if.end, !dbg !5195

if.then:                                          ; preds = %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5196
  %4 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5197
  %call = call i32 @FloydSteinbergDither(%struct._Image* %3, %struct._CubeInfo* %4), !dbg !5198
  store i32 %call, i32* %retval, align 4, !dbg !5199
  br label %return, !dbg !5199

if.end:                                           ; preds = %entry
  %5 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5200
  %error = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %5, i32 0, i32 16, !dbg !5201
  %arraydecay = getelementptr inbounds [16 x %struct._RealPixelPacket], [16 x %struct._RealPixelPacket]* %error, i64 0, i64 0, !dbg !5200
  %6 = bitcast %struct._RealPixelPacket* %arraydecay to i8*, !dbg !5200
  %call1 = call i8* @ResetMagickMemory(i8* %6, i32 0, i64 256), !dbg !5202
  %7 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5203
  %x = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %7, i32 0, i32 20, !dbg !5204
  store i64 0, i64* %x, align 8, !dbg !5205
  %8 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5206
  %y = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %8, i32 0, i32 21, !dbg !5207
  store i64 0, i64* %y, align 8, !dbg !5208
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5209
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 7, !dbg !5210
  %10 = load i64, i64* %columns, align 8, !dbg !5210
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5211
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %11, i32 0, i32 8, !dbg !5212
  %12 = load i64, i64* %rows, align 8, !dbg !5212
  %call2 = call i64 @MagickMax(i64 %10, i64 %12), !dbg !5213
  store i64 %call2, i64* %i, align 8, !dbg !5214
  store i64 1, i64* %depth, align 8, !dbg !5215
  br label %for.cond, !dbg !5217

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i64, i64* %i, align 8, !dbg !5218
  %cmp3 = icmp ne i64 %13, 0, !dbg !5220
  br i1 %cmp3, label %for.body, label %for.end, !dbg !5221

for.body:                                         ; preds = %for.cond
  %14 = load i64, i64* %i, align 8, !dbg !5222
  %shr = ashr i64 %14, 1, !dbg !5222
  store i64 %shr, i64* %i, align 8, !dbg !5222
  br label %for.inc, !dbg !5223

for.inc:                                          ; preds = %for.body
  %15 = load i64, i64* %depth, align 8, !dbg !5224
  %inc = add i64 %15, 1, !dbg !5224
  store i64 %inc, i64* %depth, align 8, !dbg !5224
  br label %for.cond, !dbg !5225, !llvm.loop !5226

for.end:                                          ; preds = %for.cond
  %16 = load i64, i64* %depth, align 8, !dbg !5228
  %shl = shl i64 1, %16, !dbg !5230
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5231
  %columns4 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 7, !dbg !5232
  %18 = load i64, i64* %columns4, align 8, !dbg !5232
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5233
  %rows5 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 8, !dbg !5234
  %20 = load i64, i64* %rows5, align 8, !dbg !5234
  %call6 = call i64 @MagickMax(i64 %18, i64 %20), !dbg !5235
  %cmp7 = icmp slt i64 %shl, %call6, !dbg !5236
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !5237

if.then8:                                         ; preds = %for.end
  %21 = load i64, i64* %depth, align 8, !dbg !5238
  %inc9 = add i64 %21, 1, !dbg !5238
  store i64 %inc9, i64* %depth, align 8, !dbg !5238
  br label %if.end10, !dbg !5239

if.end10:                                         ; preds = %if.then8, %for.end
  %22 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5240
  %offset = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %22, i32 0, i32 23, !dbg !5241
  store i64 0, i64* %offset, align 8, !dbg !5242
  %23 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5243
  %columns11 = getelementptr inbounds %struct._Image, %struct._Image* %23, i32 0, i32 7, !dbg !5244
  %24 = load i64, i64* %columns11, align 8, !dbg !5244
  %25 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5245
  %rows12 = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 8, !dbg !5246
  %26 = load i64, i64* %rows12, align 8, !dbg !5246
  %mul = mul i64 %24, %26, !dbg !5247
  %27 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5248
  %span = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %27, i32 0, i32 24, !dbg !5249
  store i64 %mul, i64* %span, align 8, !dbg !5250
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5251
  %29 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5252
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %29, i32 0, i32 58, !dbg !5253
  %call13 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %28, %struct._ExceptionInfo* %exception), !dbg !5254
  store %struct._CacheView* %call13, %struct._CacheView** %image_view, align 8, !dbg !5255
  %30 = load i64, i64* %depth, align 8, !dbg !5256
  %cmp14 = icmp ugt i64 %30, 1, !dbg !5258
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !5259

if.then15:                                        ; preds = %if.end10
  %31 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5260
  %32 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5261
  %33 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5262
  %34 = load i64, i64* %depth, align 8, !dbg !5263
  %sub = sub i64 %34, 1, !dbg !5264
  call void @Riemersma(%struct._Image* %31, %struct._CacheView* %32, %struct._CubeInfo* %33, i64 %sub, i32 2), !dbg !5265
  br label %if.end16, !dbg !5265

if.end16:                                         ; preds = %if.then15, %if.end10
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5266
  %36 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5267
  %37 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5268
  %call17 = call i32 @RiemersmaDither(%struct._Image* %35, %struct._CacheView* %36, %struct._CubeInfo* %37, i32 0), !dbg !5269
  store i32 %call17, i32* %status, align 4, !dbg !5270
  %38 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5271
  %call18 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %38), !dbg !5272
  store %struct._CacheView* %call18, %struct._CacheView** %image_view, align 8, !dbg !5273
  %39 = load i32, i32* %status, align 4, !dbg !5274
  store i32 %39, i32* %retval, align 4, !dbg !5275
  br label %return, !dbg !5275

return:                                           ; preds = %if.end16, %if.then
  %40 = load i32, i32* %retval, align 4, !dbg !5276
  ret i32 %40, !dbg !5276
}

; Function Attrs: noinline nounwind uwtable
define internal void @ClosestColor(%struct._Image* %image, %struct._CubeInfo* %cube_info, %struct._NodeInfo* %node_info) #0 !dbg !5277 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %cube_info.addr = alloca %struct._CubeInfo*, align 8
  %node_info.addr = alloca %struct._NodeInfo*, align 8
  %i = alloca i64, align 8
  %number_children = alloca i64, align 8
  %pixel = alloca float, align 4
  %alpha = alloca float, align 4
  %beta = alloca float, align 4
  %distance = alloca float, align 4
  %p = alloca %struct._PixelPacket*, align 8
  %q = alloca %struct._RealPixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5278, metadata !DIExpression()), !dbg !5279
  store %struct._CubeInfo* %cube_info, %struct._CubeInfo** %cube_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info.addr, metadata !5280, metadata !DIExpression()), !dbg !5281
  store %struct._NodeInfo* %node_info, %struct._NodeInfo** %node_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._NodeInfo** %node_info.addr, metadata !5282, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5284, metadata !DIExpression()), !dbg !5285
  call void @llvm.dbg.declare(metadata i64* %number_children, metadata !5286, metadata !DIExpression()), !dbg !5287
  %0 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5288
  %associate_alpha = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %0, i32 0, i32 19, !dbg !5289
  %1 = load i32, i32* %associate_alpha, align 8, !dbg !5289
  %cmp = icmp eq i32 %1, 0, !dbg !5290
  %2 = zext i1 %cmp to i64, !dbg !5288
  %cond = select i1 %cmp, i64 8, i64 16, !dbg !5288
  store i64 %cond, i64* %number_children, align 8, !dbg !5291
  store i64 0, i64* %i, align 8, !dbg !5292
  br label %for.cond, !dbg !5294

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i64, i64* %i, align 8, !dbg !5295
  %4 = load i64, i64* %number_children, align 8, !dbg !5297
  %cmp1 = icmp slt i64 %3, %4, !dbg !5298
  br i1 %cmp1, label %for.body, label %for.end, !dbg !5299

for.body:                                         ; preds = %for.cond
  %5 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5300
  %child = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %5, i32 0, i32 1, !dbg !5302
  %6 = load i64, i64* %i, align 8, !dbg !5303
  %arrayidx = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child, i64 0, i64 %6, !dbg !5300
  %7 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx, align 8, !dbg !5300
  %cmp2 = icmp ne %struct._NodeInfo* %7, null, !dbg !5304
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5305

if.then:                                          ; preds = %for.body
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5306
  %9 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5307
  %10 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5308
  %child3 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %10, i32 0, i32 1, !dbg !5309
  %11 = load i64, i64* %i, align 8, !dbg !5310
  %arrayidx4 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child3, i64 0, i64 %11, !dbg !5308
  %12 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx4, align 8, !dbg !5308
  call void @ClosestColor(%struct._Image* %8, %struct._CubeInfo* %9, %struct._NodeInfo* %12), !dbg !5311
  br label %if.end, !dbg !5311

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5312

for.inc:                                          ; preds = %if.end
  %13 = load i64, i64* %i, align 8, !dbg !5313
  %inc = add nsw i64 %13, 1, !dbg !5313
  store i64 %inc, i64* %i, align 8, !dbg !5313
  br label %for.cond, !dbg !5314, !llvm.loop !5315

for.end:                                          ; preds = %for.cond
  %14 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5317
  %number_unique = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %14, i32 0, i32 2, !dbg !5319
  %15 = load i64, i64* %number_unique, align 8, !dbg !5319
  %cmp5 = icmp ne i64 %15, 0, !dbg !5320
  br i1 %cmp5, label %if.then6, label %if.end66, !dbg !5321

if.then6:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata float* %pixel, metadata !5322, metadata !DIExpression()), !dbg !5324
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !5325, metadata !DIExpression()), !dbg !5326
  call void @llvm.dbg.declare(metadata float* %beta, metadata !5327, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.declare(metadata float* %distance, metadata !5329, metadata !DIExpression()), !dbg !5330
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !5331, metadata !DIExpression()), !dbg !5332
  call void @llvm.dbg.declare(metadata %struct._RealPixelPacket** %q, metadata !5333, metadata !DIExpression()), !dbg !5335
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5336
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 11, !dbg !5337
  %17 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !5337
  %18 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5338
  %color_number = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %18, i32 0, i32 5, !dbg !5339
  %19 = load i64, i64* %color_number, align 8, !dbg !5339
  %add.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %17, i64 %19, !dbg !5340
  store %struct._PixelPacket* %add.ptr, %struct._PixelPacket** %p, align 8, !dbg !5341
  %20 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5342
  %target = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %20, i32 0, i32 5, !dbg !5343
  store %struct._RealPixelPacket* %target, %struct._RealPixelPacket** %q, align 8, !dbg !5344
  store float 1.000000e+00, float* %alpha, align 4, !dbg !5345
  store float 1.000000e+00, float* %beta, align 4, !dbg !5346
  %21 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5347
  %associate_alpha7 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %21, i32 0, i32 19, !dbg !5349
  %22 = load i32, i32* %associate_alpha7, align 8, !dbg !5349
  %cmp8 = icmp ne i32 %22, 0, !dbg !5350
  br i1 %cmp8, label %if.then9, label %if.end17, !dbg !5351

if.then9:                                         ; preds = %if.then6
  %23 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5352
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %23, i32 0, i32 3, !dbg !5352
  %24 = load i16, i16* %opacity, align 2, !dbg !5352
  %conv = zext i16 %24 to i32, !dbg !5352
  %sub = sub nsw i32 65535, %conv, !dbg !5352
  %conv10 = sitofp i32 %sub to double, !dbg !5352
  %mul = fmul double 0x3EF0001000100010, %conv10, !dbg !5354
  %conv11 = fptrunc double %mul to float, !dbg !5355
  store float %conv11, float* %alpha, align 4, !dbg !5356
  %25 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %q, align 8, !dbg !5357
  %opacity12 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %25, i32 0, i32 3, !dbg !5357
  %26 = load float, float* %opacity12, align 4, !dbg !5357
  %sub13 = fsub float 6.553500e+04, %26, !dbg !5357
  %conv14 = fpext float %sub13 to double, !dbg !5357
  %mul15 = fmul double 0x3EF0001000100010, %conv14, !dbg !5358
  %conv16 = fptrunc double %mul15 to float, !dbg !5359
  store float %conv16, float* %beta, align 4, !dbg !5360
  br label %if.end17, !dbg !5361

if.end17:                                         ; preds = %if.then9, %if.then6
  %27 = load float, float* %alpha, align 4, !dbg !5362
  %28 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5363
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %28, i32 0, i32 2, !dbg !5363
  %29 = load i16, i16* %red, align 2, !dbg !5363
  %conv18 = zext i16 %29 to i32, !dbg !5363
  %conv19 = sitofp i32 %conv18 to float, !dbg !5363
  %mul20 = fmul float %27, %conv19, !dbg !5364
  %30 = load float, float* %beta, align 4, !dbg !5365
  %31 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %q, align 8, !dbg !5366
  %red21 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %31, i32 0, i32 0, !dbg !5366
  %32 = load float, float* %red21, align 4, !dbg !5366
  %mul22 = fmul float %30, %32, !dbg !5367
  %sub23 = fsub float %mul20, %mul22, !dbg !5368
  store float %sub23, float* %pixel, align 4, !dbg !5369
  %33 = load float, float* %pixel, align 4, !dbg !5370
  %34 = load float, float* %pixel, align 4, !dbg !5371
  %mul24 = fmul float %33, %34, !dbg !5372
  store float %mul24, float* %distance, align 4, !dbg !5373
  %35 = load float, float* %distance, align 4, !dbg !5374
  %36 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5376
  %distance25 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %36, i32 0, i32 6, !dbg !5377
  %37 = load float, float* %distance25, align 8, !dbg !5377
  %cmp26 = fcmp ole float %35, %37, !dbg !5378
  br i1 %cmp26, label %if.then28, label %if.end65, !dbg !5379

if.then28:                                        ; preds = %if.end17
  %38 = load float, float* %alpha, align 4, !dbg !5380
  %39 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5382
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %39, i32 0, i32 1, !dbg !5382
  %40 = load i16, i16* %green, align 2, !dbg !5382
  %conv29 = zext i16 %40 to i32, !dbg !5382
  %conv30 = sitofp i32 %conv29 to float, !dbg !5382
  %mul31 = fmul float %38, %conv30, !dbg !5383
  %41 = load float, float* %beta, align 4, !dbg !5384
  %42 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %q, align 8, !dbg !5385
  %green32 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %42, i32 0, i32 1, !dbg !5385
  %43 = load float, float* %green32, align 4, !dbg !5385
  %mul33 = fmul float %41, %43, !dbg !5386
  %sub34 = fsub float %mul31, %mul33, !dbg !5387
  store float %sub34, float* %pixel, align 4, !dbg !5388
  %44 = load float, float* %pixel, align 4, !dbg !5389
  %45 = load float, float* %pixel, align 4, !dbg !5390
  %mul35 = fmul float %44, %45, !dbg !5391
  %46 = load float, float* %distance, align 4, !dbg !5392
  %add = fadd float %46, %mul35, !dbg !5392
  store float %add, float* %distance, align 4, !dbg !5392
  %47 = load float, float* %distance, align 4, !dbg !5393
  %48 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5395
  %distance36 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %48, i32 0, i32 6, !dbg !5396
  %49 = load float, float* %distance36, align 8, !dbg !5396
  %cmp37 = fcmp ole float %47, %49, !dbg !5397
  br i1 %cmp37, label %if.then39, label %if.end64, !dbg !5398

if.then39:                                        ; preds = %if.then28
  %50 = load float, float* %alpha, align 4, !dbg !5399
  %51 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5401
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %51, i32 0, i32 0, !dbg !5401
  %52 = load i16, i16* %blue, align 2, !dbg !5401
  %conv40 = zext i16 %52 to i32, !dbg !5401
  %conv41 = sitofp i32 %conv40 to float, !dbg !5401
  %mul42 = fmul float %50, %conv41, !dbg !5402
  %53 = load float, float* %beta, align 4, !dbg !5403
  %54 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %q, align 8, !dbg !5404
  %blue43 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %54, i32 0, i32 2, !dbg !5404
  %55 = load float, float* %blue43, align 4, !dbg !5404
  %mul44 = fmul float %53, %55, !dbg !5405
  %sub45 = fsub float %mul42, %mul44, !dbg !5406
  store float %sub45, float* %pixel, align 4, !dbg !5407
  %56 = load float, float* %pixel, align 4, !dbg !5408
  %57 = load float, float* %pixel, align 4, !dbg !5409
  %mul46 = fmul float %56, %57, !dbg !5410
  %58 = load float, float* %distance, align 4, !dbg !5411
  %add47 = fadd float %58, %mul46, !dbg !5411
  store float %add47, float* %distance, align 4, !dbg !5411
  %59 = load float, float* %distance, align 4, !dbg !5412
  %60 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5414
  %distance48 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %60, i32 0, i32 6, !dbg !5415
  %61 = load float, float* %distance48, align 8, !dbg !5415
  %cmp49 = fcmp ole float %59, %61, !dbg !5416
  br i1 %cmp49, label %if.then51, label %if.end63, !dbg !5417

if.then51:                                        ; preds = %if.then39
  %62 = load float, float* %alpha, align 4, !dbg !5418
  %63 = load float, float* %beta, align 4, !dbg !5420
  %sub52 = fsub float %62, %63, !dbg !5421
  store float %sub52, float* %pixel, align 4, !dbg !5422
  %64 = load float, float* %pixel, align 4, !dbg !5423
  %65 = load float, float* %pixel, align 4, !dbg !5424
  %mul53 = fmul float %64, %65, !dbg !5425
  %66 = load float, float* %distance, align 4, !dbg !5426
  %add54 = fadd float %66, %mul53, !dbg !5426
  store float %add54, float* %distance, align 4, !dbg !5426
  %67 = load float, float* %distance, align 4, !dbg !5427
  %68 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5429
  %distance55 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %68, i32 0, i32 6, !dbg !5430
  %69 = load float, float* %distance55, align 8, !dbg !5430
  %cmp56 = fcmp ole float %67, %69, !dbg !5431
  br i1 %cmp56, label %if.then58, label %if.end62, !dbg !5432

if.then58:                                        ; preds = %if.then51
  %70 = load float, float* %distance, align 4, !dbg !5433
  %71 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5435
  %distance59 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %71, i32 0, i32 6, !dbg !5436
  store float %70, float* %distance59, align 8, !dbg !5437
  %72 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !5438
  %color_number60 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %72, i32 0, i32 5, !dbg !5439
  %73 = load i64, i64* %color_number60, align 8, !dbg !5439
  %74 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5440
  %color_number61 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %74, i32 0, i32 11, !dbg !5441
  store i64 %73, i64* %color_number61, align 8, !dbg !5442
  br label %if.end62, !dbg !5443

if.end62:                                         ; preds = %if.then58, %if.then51
  br label %if.end63, !dbg !5444

if.end63:                                         ; preds = %if.end62, %if.then39
  br label %if.end64, !dbg !5445

if.end64:                                         ; preds = %if.end63, %if.then28
  br label %if.end65, !dbg !5446

if.end65:                                         ; preds = %if.end64, %if.end17
  br label %if.end66, !dbg !5447

if.end66:                                         ; preds = %if.end65, %for.end
  ret void, !dbg !5448
}

; Function Attrs: noinline nounwind uwtable
define internal float @GetPixelLuma(%struct._Image* noalias %image, %struct._PixelPacket* noalias %pixel) #0 !dbg !5449 {
entry:
  %retval = alloca float, align 4
  %image.addr = alloca %struct._Image*, align 8
  %pixel.addr = alloca %struct._PixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5454, metadata !DIExpression()), !dbg !5455
  store %struct._PixelPacket* %pixel, %struct._PixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %pixel.addr, metadata !5456, metadata !DIExpression()), !dbg !5457
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5458
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 1, !dbg !5460
  %1 = load i32, i32* %colorspace, align 4, !dbg !5460
  %cmp = icmp eq i32 %1, 2, !dbg !5461
  br i1 %cmp, label %if.then, label %if.end, !dbg !5462

if.then:                                          ; preds = %entry
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !5463
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %2, i32 0, i32 2, !dbg !5464
  %3 = load i16, i16* %red, align 2, !dbg !5464
  %conv = uitofp i16 %3 to float, !dbg !5465
  store float %conv, float* %retval, align 4, !dbg !5466
  br label %return, !dbg !5466

if.end:                                           ; preds = %entry
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !5467
  %red1 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 2, !dbg !5468
  %5 = load i16, i16* %red1, align 2, !dbg !5468
  %conv2 = zext i16 %5 to i32, !dbg !5467
  %conv3 = sitofp i32 %conv2 to float, !dbg !5467
  %mul = fmul float 0x3FCB384FE0000000, %conv3, !dbg !5469
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !5470
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 1, !dbg !5471
  %7 = load i16, i16* %green, align 2, !dbg !5471
  %conv4 = zext i16 %7 to i32, !dbg !5470
  %conv5 = sitofp i32 %conv4 to float, !dbg !5470
  %mul6 = fmul float 0x3FE6E29300000000, %conv5, !dbg !5472
  %add = fadd float %mul, %mul6, !dbg !5473
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !5474
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 0, i32 0, !dbg !5475
  %9 = load i16, i16* %blue, align 2, !dbg !5475
  %conv7 = zext i16 %9 to i32, !dbg !5474
  %conv8 = sitofp i32 %conv7 to float, !dbg !5474
  %mul9 = fmul float 0x3FB27AC820000000, %conv8, !dbg !5476
  %add10 = fadd float %add, %mul9, !dbg !5477
  store float %add10, float* %retval, align 4, !dbg !5478
  br label %return, !dbg !5478

return:                                           ; preds = %if.end, %if.then
  %10 = load float, float* %retval, align 4, !dbg !5479
  ret float %10, !dbg !5479
}

declare dso_local i32 @SyncImage(%struct._Image*) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ClampToQuantum(float %value) #0 !dbg !5480 {
entry:
  %retval = alloca i16, align 2
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !5481, metadata !DIExpression()), !dbg !5482
  %0 = load float, float* %value.addr, align 4, !dbg !5483
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !5485
  br i1 %cmp, label %if.then, label %if.end, !dbg !5486

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !5487
  br label %return, !dbg !5487

if.end:                                           ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !5488
  %cmp1 = fcmp oge float %1, 6.553500e+04, !dbg !5490
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !5491

if.then2:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !5492
  br label %return, !dbg !5492

if.end3:                                          ; preds = %if.end
  %2 = load float, float* %value.addr, align 4, !dbg !5493
  %add = fadd float %2, 5.000000e-01, !dbg !5494
  %conv = fptoui float %add to i16, !dbg !5495
  store i16 %conv, i16* %retval, align 2, !dbg !5496
  br label %return, !dbg !5496

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %3 = load i16, i16* %retval, align 2, !dbg !5497
  ret i16 %3, !dbg !5497
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @FloydSteinbergDither(%struct._Image* %image, %struct._CubeInfo* %cube_info) #0 !dbg !5498 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %cube_info.addr = alloca %struct._CubeInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %pixels = alloca %struct._RealPixelPacket**, align 8
  %y = alloca i64, align 8
  %id = alloca i32, align 4
  %cube = alloca %struct._CubeInfo, align 8
  %current = alloca %struct._RealPixelPacket*, align 8
  %previous = alloca %struct._RealPixelPacket*, align 8
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %index = alloca i64, align 8
  %v = alloca i64, align 8
  %color = alloca %struct._RealPixelPacket, align 4
  %pixel = alloca %struct._RealPixelPacket, align 4
  %i = alloca i64, align 8
  %u = alloca i64, align 8
  %node_info = alloca %struct._NodeInfo*, align 8
  %id195 = alloca i64, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5499, metadata !DIExpression()), !dbg !5500
  store %struct._CubeInfo* %cube_info, %struct._CubeInfo** %cube_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info.addr, metadata !5501, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !5503, metadata !DIExpression()), !dbg !5504
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !5505, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5507, metadata !DIExpression()), !dbg !5508
  call void @llvm.dbg.declare(metadata %struct._RealPixelPacket*** %pixels, metadata !5509, metadata !DIExpression()), !dbg !5510
  call void @llvm.dbg.declare(metadata i64* %y, metadata !5511, metadata !DIExpression()), !dbg !5512
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5513
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 7, !dbg !5514
  %1 = load i64, i64* %columns, align 8, !dbg !5514
  %call = call %struct._RealPixelPacket** @AcquirePixelThreadSet(i64 %1), !dbg !5515
  store %struct._RealPixelPacket** %call, %struct._RealPixelPacket*** %pixels, align 8, !dbg !5516
  %2 = load %struct._RealPixelPacket**, %struct._RealPixelPacket*** %pixels, align 8, !dbg !5517
  %cmp = icmp eq %struct._RealPixelPacket** %2, null, !dbg !5519
  br i1 %cmp, label %if.then, label %if.end, !dbg !5520

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5521
  br label %return, !dbg !5521

if.end:                                           ; preds = %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5522
  %exception1 = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 58, !dbg !5523
  store %struct._ExceptionInfo* %exception1, %struct._ExceptionInfo** %exception, align 8, !dbg !5524
  store i32 1, i32* %status, align 4, !dbg !5525
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5526
  %5 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5527
  %call2 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %4, %struct._ExceptionInfo* %5), !dbg !5528
  store %struct._CacheView* %call2, %struct._CacheView** %image_view, align 8, !dbg !5529
  store i64 0, i64* %y, align 8, !dbg !5530
  br label %for.cond, !dbg !5532

for.cond:                                         ; preds = %for.inc296, %if.end
  %6 = load i64, i64* %y, align 8, !dbg !5533
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5535
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %7, i32 0, i32 8, !dbg !5536
  %8 = load i64, i64* %rows, align 8, !dbg !5536
  %cmp3 = icmp slt i64 %6, %8, !dbg !5537
  br i1 %cmp3, label %for.body, label %for.end298, !dbg !5538

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %id, metadata !5539, metadata !DIExpression()), !dbg !5542
  %call4 = call i32 @GetOpenMPThreadId(), !dbg !5543
  store i32 %call4, i32* %id, align 4, !dbg !5542
  call void @llvm.dbg.declare(metadata %struct._CubeInfo* %cube, metadata !5544, metadata !DIExpression()), !dbg !5545
  call void @llvm.dbg.declare(metadata %struct._RealPixelPacket** %current, metadata !5546, metadata !DIExpression()), !dbg !5547
  call void @llvm.dbg.declare(metadata %struct._RealPixelPacket** %previous, metadata !5548, metadata !DIExpression()), !dbg !5549
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !5550, metadata !DIExpression()), !dbg !5551
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !5552, metadata !DIExpression()), !dbg !5553
  call void @llvm.dbg.declare(metadata i64* %x, metadata !5554, metadata !DIExpression()), !dbg !5555
  call void @llvm.dbg.declare(metadata i64* %index, metadata !5556, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.declare(metadata i64* %v, metadata !5558, metadata !DIExpression()), !dbg !5559
  %9 = load i32, i32* %status, align 4, !dbg !5560
  %cmp5 = icmp eq i32 %9, 0, !dbg !5562
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !5563

if.then6:                                         ; preds = %for.body
  br label %for.inc296, !dbg !5564

if.end7:                                          ; preds = %for.body
  %10 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5565
  %11 = load i64, i64* %y, align 8, !dbg !5566
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5567
  %columns8 = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 7, !dbg !5568
  %13 = load i64, i64* %columns8, align 8, !dbg !5568
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5569
  %call9 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %10, i64 0, i64 %11, i64 %13, i64 1, %struct._ExceptionInfo* %14), !dbg !5570
  store %struct._PixelPacket* %call9, %struct._PixelPacket** %q, align 8, !dbg !5571
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5572
  %cmp10 = icmp eq %struct._PixelPacket* %15, null, !dbg !5574
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !5575

if.then11:                                        ; preds = %if.end7
  store i32 0, i32* %status, align 4, !dbg !5576
  br label %for.inc296, !dbg !5578

if.end12:                                         ; preds = %if.end7
  %16 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5579
  %call13 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %16), !dbg !5580
  store i16* %call13, i16** %indexes, align 8, !dbg !5581
  %17 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !5582
  %18 = bitcast %struct._CubeInfo* %cube to i8*, !dbg !5583
  %19 = bitcast %struct._CubeInfo* %17 to i8*, !dbg !5583
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 504, i1 false), !dbg !5583
  %20 = load %struct._RealPixelPacket**, %struct._RealPixelPacket*** %pixels, align 8, !dbg !5584
  %21 = load i32, i32* %id, align 4, !dbg !5585
  %idxprom = sext i32 %21 to i64, !dbg !5584
  %arrayidx = getelementptr inbounds %struct._RealPixelPacket*, %struct._RealPixelPacket** %20, i64 %idxprom, !dbg !5584
  %22 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %arrayidx, align 8, !dbg !5584
  %23 = load i64, i64* %y, align 8, !dbg !5586
  %and = and i64 %23, 1, !dbg !5587
  %24 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5588
  %columns14 = getelementptr inbounds %struct._Image, %struct._Image* %24, i32 0, i32 7, !dbg !5589
  %25 = load i64, i64* %columns14, align 8, !dbg !5589
  %mul = mul i64 %and, %25, !dbg !5590
  %add.ptr = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %22, i64 %mul, !dbg !5591
  store %struct._RealPixelPacket* %add.ptr, %struct._RealPixelPacket** %current, align 8, !dbg !5592
  %26 = load %struct._RealPixelPacket**, %struct._RealPixelPacket*** %pixels, align 8, !dbg !5593
  %27 = load i32, i32* %id, align 4, !dbg !5594
  %idxprom15 = sext i32 %27 to i64, !dbg !5593
  %arrayidx16 = getelementptr inbounds %struct._RealPixelPacket*, %struct._RealPixelPacket** %26, i64 %idxprom15, !dbg !5593
  %28 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %arrayidx16, align 8, !dbg !5593
  %29 = load i64, i64* %y, align 8, !dbg !5595
  %add = add nsw i64 %29, 1, !dbg !5596
  %and17 = and i64 %add, 1, !dbg !5597
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5598
  %columns18 = getelementptr inbounds %struct._Image, %struct._Image* %30, i32 0, i32 7, !dbg !5599
  %31 = load i64, i64* %columns18, align 8, !dbg !5599
  %mul19 = mul i64 %and17, %31, !dbg !5600
  %add.ptr20 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %28, i64 %mul19, !dbg !5601
  store %struct._RealPixelPacket* %add.ptr20, %struct._RealPixelPacket** %previous, align 8, !dbg !5602
  %32 = load i64, i64* %y, align 8, !dbg !5603
  %and21 = and i64 %32, 1, !dbg !5604
  %tobool = icmp ne i64 %and21, 0, !dbg !5605
  %33 = zext i1 %tobool to i64, !dbg !5605
  %cond = select i1 %tobool, i32 -1, i32 1, !dbg !5605
  %conv = sext i32 %cond to i64, !dbg !5606
  store i64 %conv, i64* %v, align 8, !dbg !5607
  store i64 0, i64* %x, align 8, !dbg !5608
  br label %for.cond22, !dbg !5610

for.cond22:                                       ; preds = %for.inc294, %if.end12
  %34 = load i64, i64* %x, align 8, !dbg !5611
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5613
  %columns23 = getelementptr inbounds %struct._Image, %struct._Image* %35, i32 0, i32 7, !dbg !5614
  %36 = load i64, i64* %columns23, align 8, !dbg !5614
  %cmp24 = icmp slt i64 %34, %36, !dbg !5615
  br i1 %cmp24, label %for.body26, label %for.end295, !dbg !5616

for.body26:                                       ; preds = %for.cond22
  call void @llvm.dbg.declare(metadata %struct._RealPixelPacket* %color, metadata !5617, metadata !DIExpression()), !dbg !5619
  call void @llvm.dbg.declare(metadata %struct._RealPixelPacket* %pixel, metadata !5620, metadata !DIExpression()), !dbg !5621
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5622, metadata !DIExpression()), !dbg !5623
  call void @llvm.dbg.declare(metadata i64* %u, metadata !5624, metadata !DIExpression()), !dbg !5625
  %37 = load i64, i64* %y, align 8, !dbg !5626
  %and27 = and i64 %37, 1, !dbg !5627
  %tobool28 = icmp ne i64 %and27, 0, !dbg !5627
  br i1 %tobool28, label %cond.true, label %cond.false, !dbg !5628

cond.true:                                        ; preds = %for.body26
  %38 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5629
  %columns29 = getelementptr inbounds %struct._Image, %struct._Image* %38, i32 0, i32 7, !dbg !5630
  %39 = load i64, i64* %columns29, align 8, !dbg !5630
  %sub = sub nsw i64 %39, 1, !dbg !5631
  %40 = load i64, i64* %x, align 8, !dbg !5632
  %sub30 = sub nsw i64 %sub, %40, !dbg !5633
  br label %cond.end, !dbg !5628

cond.false:                                       ; preds = %for.body26
  %41 = load i64, i64* %x, align 8, !dbg !5634
  br label %cond.end, !dbg !5628

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond31 = phi i64 [ %sub30, %cond.true ], [ %41, %cond.false ], !dbg !5628
  store i64 %cond31, i64* %u, align 8, !dbg !5635
  %42 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5636
  %43 = load i64, i64* %u, align 8, !dbg !5637
  %add.ptr32 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %42, i64 %43, !dbg !5638
  call void @AssociateAlphaPixel(%struct._CubeInfo* %cube, %struct._PixelPacket* %add.ptr32, %struct._RealPixelPacket* %pixel), !dbg !5639
  %44 = load i64, i64* %x, align 8, !dbg !5640
  %cmp33 = icmp sgt i64 %44, 0, !dbg !5642
  br i1 %cmp33, label %if.then35, label %if.end63, !dbg !5643

if.then35:                                        ; preds = %cond.end
  %45 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %current, align 8, !dbg !5644
  %46 = load i64, i64* %u, align 8, !dbg !5646
  %47 = load i64, i64* %v, align 8, !dbg !5647
  %sub36 = sub nsw i64 %46, %47, !dbg !5648
  %arrayidx37 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %45, i64 %sub36, !dbg !5644
  %red = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx37, i32 0, i32 0, !dbg !5649
  %48 = load float, float* %red, align 4, !dbg !5649
  %mul38 = fmul float 7.000000e+00, %48, !dbg !5650
  %div = fdiv float %mul38, 1.600000e+01, !dbg !5651
  %red39 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 0, !dbg !5652
  %49 = load float, float* %red39, align 4, !dbg !5653
  %add40 = fadd float %49, %div, !dbg !5653
  store float %add40, float* %red39, align 4, !dbg !5653
  %50 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %current, align 8, !dbg !5654
  %51 = load i64, i64* %u, align 8, !dbg !5655
  %52 = load i64, i64* %v, align 8, !dbg !5656
  %sub41 = sub nsw i64 %51, %52, !dbg !5657
  %arrayidx42 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %50, i64 %sub41, !dbg !5654
  %green = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx42, i32 0, i32 1, !dbg !5658
  %53 = load float, float* %green, align 4, !dbg !5658
  %mul43 = fmul float 7.000000e+00, %53, !dbg !5659
  %div44 = fdiv float %mul43, 1.600000e+01, !dbg !5660
  %green45 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 1, !dbg !5661
  %54 = load float, float* %green45, align 4, !dbg !5662
  %add46 = fadd float %54, %div44, !dbg !5662
  store float %add46, float* %green45, align 4, !dbg !5662
  %55 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %current, align 8, !dbg !5663
  %56 = load i64, i64* %u, align 8, !dbg !5664
  %57 = load i64, i64* %v, align 8, !dbg !5665
  %sub47 = sub nsw i64 %56, %57, !dbg !5666
  %arrayidx48 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %55, i64 %sub47, !dbg !5663
  %blue = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx48, i32 0, i32 2, !dbg !5667
  %58 = load float, float* %blue, align 4, !dbg !5667
  %mul49 = fmul float 7.000000e+00, %58, !dbg !5668
  %div50 = fdiv float %mul49, 1.600000e+01, !dbg !5669
  %blue51 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 2, !dbg !5670
  %59 = load float, float* %blue51, align 4, !dbg !5671
  %add52 = fadd float %59, %div50, !dbg !5671
  store float %add52, float* %blue51, align 4, !dbg !5671
  %associate_alpha = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 19, !dbg !5672
  %60 = load i32, i32* %associate_alpha, align 8, !dbg !5672
  %cmp53 = icmp ne i32 %60, 0, !dbg !5674
  br i1 %cmp53, label %if.then55, label %if.end62, !dbg !5675

if.then55:                                        ; preds = %if.then35
  %61 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %current, align 8, !dbg !5676
  %62 = load i64, i64* %u, align 8, !dbg !5677
  %63 = load i64, i64* %v, align 8, !dbg !5678
  %sub56 = sub nsw i64 %62, %63, !dbg !5679
  %arrayidx57 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %61, i64 %sub56, !dbg !5676
  %opacity = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx57, i32 0, i32 3, !dbg !5680
  %64 = load float, float* %opacity, align 4, !dbg !5680
  %mul58 = fmul float 7.000000e+00, %64, !dbg !5681
  %div59 = fdiv float %mul58, 1.600000e+01, !dbg !5682
  %opacity60 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 3, !dbg !5683
  %65 = load float, float* %opacity60, align 4, !dbg !5684
  %add61 = fadd float %65, %div59, !dbg !5684
  store float %add61, float* %opacity60, align 4, !dbg !5684
  br label %if.end62, !dbg !5685

if.end62:                                         ; preds = %if.then55, %if.then35
  br label %if.end63, !dbg !5686

if.end63:                                         ; preds = %if.end62, %cond.end
  %66 = load i64, i64* %y, align 8, !dbg !5687
  %cmp64 = icmp sgt i64 %66, 0, !dbg !5689
  br i1 %cmp64, label %if.then66, label %if.end168, !dbg !5690

if.then66:                                        ; preds = %if.end63
  %67 = load i64, i64* %x, align 8, !dbg !5691
  %68 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5694
  %columns67 = getelementptr inbounds %struct._Image, %struct._Image* %68, i32 0, i32 7, !dbg !5695
  %69 = load i64, i64* %columns67, align 8, !dbg !5695
  %sub68 = sub i64 %69, 1, !dbg !5696
  %cmp69 = icmp slt i64 %67, %sub68, !dbg !5697
  br i1 %cmp69, label %if.then71, label %if.end101, !dbg !5698

if.then71:                                        ; preds = %if.then66
  %70 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %previous, align 8, !dbg !5699
  %71 = load i64, i64* %u, align 8, !dbg !5701
  %72 = load i64, i64* %v, align 8, !dbg !5702
  %add72 = add nsw i64 %71, %72, !dbg !5703
  %arrayidx73 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %70, i64 %add72, !dbg !5699
  %red74 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx73, i32 0, i32 0, !dbg !5704
  %73 = load float, float* %red74, align 4, !dbg !5704
  %div75 = fdiv float %73, 1.600000e+01, !dbg !5705
  %red76 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 0, !dbg !5706
  %74 = load float, float* %red76, align 4, !dbg !5707
  %add77 = fadd float %74, %div75, !dbg !5707
  store float %add77, float* %red76, align 4, !dbg !5707
  %75 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %previous, align 8, !dbg !5708
  %76 = load i64, i64* %u, align 8, !dbg !5709
  %77 = load i64, i64* %v, align 8, !dbg !5710
  %add78 = add nsw i64 %76, %77, !dbg !5711
  %arrayidx79 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %75, i64 %add78, !dbg !5708
  %green80 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx79, i32 0, i32 1, !dbg !5712
  %78 = load float, float* %green80, align 4, !dbg !5712
  %div81 = fdiv float %78, 1.600000e+01, !dbg !5713
  %green82 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 1, !dbg !5714
  %79 = load float, float* %green82, align 4, !dbg !5715
  %add83 = fadd float %79, %div81, !dbg !5715
  store float %add83, float* %green82, align 4, !dbg !5715
  %80 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %previous, align 8, !dbg !5716
  %81 = load i64, i64* %u, align 8, !dbg !5717
  %82 = load i64, i64* %v, align 8, !dbg !5718
  %add84 = add nsw i64 %81, %82, !dbg !5719
  %arrayidx85 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %80, i64 %add84, !dbg !5716
  %blue86 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx85, i32 0, i32 2, !dbg !5720
  %83 = load float, float* %blue86, align 4, !dbg !5720
  %div87 = fdiv float %83, 1.600000e+01, !dbg !5721
  %blue88 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 2, !dbg !5722
  %84 = load float, float* %blue88, align 4, !dbg !5723
  %add89 = fadd float %84, %div87, !dbg !5723
  store float %add89, float* %blue88, align 4, !dbg !5723
  %associate_alpha90 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 19, !dbg !5724
  %85 = load i32, i32* %associate_alpha90, align 8, !dbg !5724
  %cmp91 = icmp ne i32 %85, 0, !dbg !5726
  br i1 %cmp91, label %if.then93, label %if.end100, !dbg !5727

if.then93:                                        ; preds = %if.then71
  %86 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %previous, align 8, !dbg !5728
  %87 = load i64, i64* %u, align 8, !dbg !5729
  %88 = load i64, i64* %v, align 8, !dbg !5730
  %add94 = add nsw i64 %87, %88, !dbg !5731
  %arrayidx95 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %86, i64 %add94, !dbg !5728
  %opacity96 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx95, i32 0, i32 3, !dbg !5732
  %89 = load float, float* %opacity96, align 4, !dbg !5732
  %div97 = fdiv float %89, 1.600000e+01, !dbg !5733
  %opacity98 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 3, !dbg !5734
  %90 = load float, float* %opacity98, align 4, !dbg !5735
  %add99 = fadd float %90, %div97, !dbg !5735
  store float %add99, float* %opacity98, align 4, !dbg !5735
  br label %if.end100, !dbg !5736

if.end100:                                        ; preds = %if.then93, %if.then71
  br label %if.end101, !dbg !5737

if.end101:                                        ; preds = %if.end100, %if.then66
  %91 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %previous, align 8, !dbg !5738
  %92 = load i64, i64* %u, align 8, !dbg !5739
  %arrayidx102 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %91, i64 %92, !dbg !5738
  %red103 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx102, i32 0, i32 0, !dbg !5740
  %93 = load float, float* %red103, align 4, !dbg !5740
  %mul104 = fmul float 5.000000e+00, %93, !dbg !5741
  %div105 = fdiv float %mul104, 1.600000e+01, !dbg !5742
  %red106 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 0, !dbg !5743
  %94 = load float, float* %red106, align 4, !dbg !5744
  %add107 = fadd float %94, %div105, !dbg !5744
  store float %add107, float* %red106, align 4, !dbg !5744
  %95 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %previous, align 8, !dbg !5745
  %96 = load i64, i64* %u, align 8, !dbg !5746
  %arrayidx108 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %95, i64 %96, !dbg !5745
  %green109 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx108, i32 0, i32 1, !dbg !5747
  %97 = load float, float* %green109, align 4, !dbg !5747
  %mul110 = fmul float 5.000000e+00, %97, !dbg !5748
  %div111 = fdiv float %mul110, 1.600000e+01, !dbg !5749
  %green112 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 1, !dbg !5750
  %98 = load float, float* %green112, align 4, !dbg !5751
  %add113 = fadd float %98, %div111, !dbg !5751
  store float %add113, float* %green112, align 4, !dbg !5751
  %99 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %previous, align 8, !dbg !5752
  %100 = load i64, i64* %u, align 8, !dbg !5753
  %arrayidx114 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %99, i64 %100, !dbg !5752
  %blue115 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx114, i32 0, i32 2, !dbg !5754
  %101 = load float, float* %blue115, align 4, !dbg !5754
  %mul116 = fmul float 5.000000e+00, %101, !dbg !5755
  %div117 = fdiv float %mul116, 1.600000e+01, !dbg !5756
  %blue118 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 2, !dbg !5757
  %102 = load float, float* %blue118, align 4, !dbg !5758
  %add119 = fadd float %102, %div117, !dbg !5758
  store float %add119, float* %blue118, align 4, !dbg !5758
  %associate_alpha120 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 19, !dbg !5759
  %103 = load i32, i32* %associate_alpha120, align 8, !dbg !5759
  %cmp121 = icmp ne i32 %103, 0, !dbg !5761
  br i1 %cmp121, label %if.then123, label %if.end130, !dbg !5762

if.then123:                                       ; preds = %if.end101
  %104 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %previous, align 8, !dbg !5763
  %105 = load i64, i64* %u, align 8, !dbg !5764
  %arrayidx124 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %104, i64 %105, !dbg !5763
  %opacity125 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx124, i32 0, i32 3, !dbg !5765
  %106 = load float, float* %opacity125, align 4, !dbg !5765
  %mul126 = fmul float 5.000000e+00, %106, !dbg !5766
  %div127 = fdiv float %mul126, 1.600000e+01, !dbg !5767
  %opacity128 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 3, !dbg !5768
  %107 = load float, float* %opacity128, align 4, !dbg !5769
  %add129 = fadd float %107, %div127, !dbg !5769
  store float %add129, float* %opacity128, align 4, !dbg !5769
  br label %if.end130, !dbg !5770

if.end130:                                        ; preds = %if.then123, %if.end101
  %108 = load i64, i64* %x, align 8, !dbg !5771
  %cmp131 = icmp sgt i64 %108, 0, !dbg !5773
  br i1 %cmp131, label %if.then133, label %if.end167, !dbg !5774

if.then133:                                       ; preds = %if.end130
  %109 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %previous, align 8, !dbg !5775
  %110 = load i64, i64* %u, align 8, !dbg !5777
  %111 = load i64, i64* %v, align 8, !dbg !5778
  %sub134 = sub nsw i64 %110, %111, !dbg !5779
  %arrayidx135 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %109, i64 %sub134, !dbg !5775
  %red136 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx135, i32 0, i32 0, !dbg !5780
  %112 = load float, float* %red136, align 4, !dbg !5780
  %mul137 = fmul float 3.000000e+00, %112, !dbg !5781
  %div138 = fdiv float %mul137, 1.600000e+01, !dbg !5782
  %red139 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 0, !dbg !5783
  %113 = load float, float* %red139, align 4, !dbg !5784
  %add140 = fadd float %113, %div138, !dbg !5784
  store float %add140, float* %red139, align 4, !dbg !5784
  %114 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %previous, align 8, !dbg !5785
  %115 = load i64, i64* %u, align 8, !dbg !5786
  %116 = load i64, i64* %v, align 8, !dbg !5787
  %sub141 = sub nsw i64 %115, %116, !dbg !5788
  %arrayidx142 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %114, i64 %sub141, !dbg !5785
  %green143 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx142, i32 0, i32 1, !dbg !5789
  %117 = load float, float* %green143, align 4, !dbg !5789
  %mul144 = fmul float 3.000000e+00, %117, !dbg !5790
  %div145 = fdiv float %mul144, 1.600000e+01, !dbg !5791
  %green146 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 1, !dbg !5792
  %118 = load float, float* %green146, align 4, !dbg !5793
  %add147 = fadd float %118, %div145, !dbg !5793
  store float %add147, float* %green146, align 4, !dbg !5793
  %119 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %previous, align 8, !dbg !5794
  %120 = load i64, i64* %u, align 8, !dbg !5795
  %121 = load i64, i64* %v, align 8, !dbg !5796
  %sub148 = sub nsw i64 %120, %121, !dbg !5797
  %arrayidx149 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %119, i64 %sub148, !dbg !5794
  %blue150 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx149, i32 0, i32 2, !dbg !5798
  %122 = load float, float* %blue150, align 4, !dbg !5798
  %mul151 = fmul float 3.000000e+00, %122, !dbg !5799
  %div152 = fdiv float %mul151, 1.600000e+01, !dbg !5800
  %blue153 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 2, !dbg !5801
  %123 = load float, float* %blue153, align 4, !dbg !5802
  %add154 = fadd float %123, %div152, !dbg !5802
  store float %add154, float* %blue153, align 4, !dbg !5802
  %associate_alpha155 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 19, !dbg !5803
  %124 = load i32, i32* %associate_alpha155, align 8, !dbg !5803
  %cmp156 = icmp ne i32 %124, 0, !dbg !5805
  br i1 %cmp156, label %if.then158, label %if.end166, !dbg !5806

if.then158:                                       ; preds = %if.then133
  %125 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %previous, align 8, !dbg !5807
  %126 = load i64, i64* %u, align 8, !dbg !5808
  %127 = load i64, i64* %v, align 8, !dbg !5809
  %sub159 = sub nsw i64 %126, %127, !dbg !5810
  %arrayidx160 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %125, i64 %sub159, !dbg !5807
  %opacity161 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx160, i32 0, i32 3, !dbg !5811
  %128 = load float, float* %opacity161, align 4, !dbg !5811
  %mul162 = fmul float 3.000000e+00, %128, !dbg !5812
  %div163 = fdiv float %mul162, 1.600000e+01, !dbg !5813
  %opacity164 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 3, !dbg !5814
  %129 = load float, float* %opacity164, align 4, !dbg !5815
  %add165 = fadd float %129, %div163, !dbg !5815
  store float %add165, float* %opacity164, align 4, !dbg !5815
  br label %if.end166, !dbg !5816

if.end166:                                        ; preds = %if.then158, %if.then133
  br label %if.end167, !dbg !5817

if.end167:                                        ; preds = %if.end166, %if.end130
  br label %if.end168, !dbg !5818

if.end168:                                        ; preds = %if.end167, %if.end63
  %red169 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 0, !dbg !5819
  %130 = load float, float* %red169, align 4, !dbg !5819
  %call170 = call zeroext i16 @ClampPixel(float %130), !dbg !5820
  %conv171 = uitofp i16 %call170 to float, !dbg !5821
  %red172 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 0, !dbg !5822
  store float %conv171, float* %red172, align 4, !dbg !5823
  %green173 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 1, !dbg !5824
  %131 = load float, float* %green173, align 4, !dbg !5824
  %call174 = call zeroext i16 @ClampPixel(float %131), !dbg !5825
  %conv175 = uitofp i16 %call174 to float, !dbg !5826
  %green176 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 1, !dbg !5827
  store float %conv175, float* %green176, align 4, !dbg !5828
  %blue177 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 2, !dbg !5829
  %132 = load float, float* %blue177, align 4, !dbg !5829
  %call178 = call zeroext i16 @ClampPixel(float %132), !dbg !5830
  %conv179 = uitofp i16 %call178 to float, !dbg !5831
  %blue180 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 2, !dbg !5832
  store float %conv179, float* %blue180, align 4, !dbg !5833
  %associate_alpha181 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 19, !dbg !5834
  %133 = load i32, i32* %associate_alpha181, align 8, !dbg !5834
  %cmp182 = icmp ne i32 %133, 0, !dbg !5836
  br i1 %cmp182, label %if.then184, label %if.end189, !dbg !5837

if.then184:                                       ; preds = %if.end168
  %opacity185 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 3, !dbg !5838
  %134 = load float, float* %opacity185, align 4, !dbg !5838
  %call186 = call zeroext i16 @ClampPixel(float %134), !dbg !5839
  %conv187 = uitofp i16 %call186 to float, !dbg !5840
  %opacity188 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 3, !dbg !5841
  store float %conv187, float* %opacity188, align 4, !dbg !5842
  br label %if.end189, !dbg !5843

if.end189:                                        ; preds = %if.then184, %if.end168
  %call190 = call i64 @CacheOffset(%struct._CubeInfo* %cube, %struct._RealPixelPacket* %pixel), !dbg !5844
  store i64 %call190, i64* %i, align 8, !dbg !5845
  %cache = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 15, !dbg !5846
  %135 = load i64*, i64** %cache, align 8, !dbg !5846
  %136 = load i64, i64* %i, align 8, !dbg !5848
  %arrayidx191 = getelementptr inbounds i64, i64* %135, i64 %136, !dbg !5849
  %137 = load i64, i64* %arrayidx191, align 8, !dbg !5849
  %cmp192 = icmp slt i64 %137, 0, !dbg !5850
  br i1 %cmp192, label %if.then194, label %if.end210, !dbg !5851

if.then194:                                       ; preds = %if.end189
  call void @llvm.dbg.declare(metadata %struct._NodeInfo** %node_info, metadata !5852, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.declare(metadata i64* %id195, metadata !5855, metadata !DIExpression()), !dbg !5856
  %root = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 0, !dbg !5857
  %138 = load %struct._NodeInfo*, %struct._NodeInfo** %root, align 8, !dbg !5857
  store %struct._NodeInfo* %138, %struct._NodeInfo** %node_info, align 8, !dbg !5858
  store i64 7, i64* %index, align 8, !dbg !5859
  br label %for.cond196, !dbg !5861

for.cond196:                                      ; preds = %for.inc, %if.then194
  %139 = load i64, i64* %index, align 8, !dbg !5862
  %cmp197 = icmp sgt i64 %139, 0, !dbg !5864
  br i1 %cmp197, label %for.body199, label %for.end, !dbg !5865

for.body199:                                      ; preds = %for.cond196
  %140 = load i64, i64* %index, align 8, !dbg !5866
  %call200 = call i64 @ColorToNodeId(%struct._CubeInfo* %cube, %struct._RealPixelPacket* %pixel, i64 %140), !dbg !5868
  store i64 %call200, i64* %id195, align 8, !dbg !5869
  %141 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !5870
  %child = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %141, i32 0, i32 1, !dbg !5872
  %142 = load i64, i64* %id195, align 8, !dbg !5873
  %arrayidx201 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child, i64 0, i64 %142, !dbg !5870
  %143 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx201, align 8, !dbg !5870
  %cmp202 = icmp eq %struct._NodeInfo* %143, null, !dbg !5874
  br i1 %cmp202, label %if.then204, label %if.end205, !dbg !5875

if.then204:                                       ; preds = %for.body199
  br label %for.end, !dbg !5876

if.end205:                                        ; preds = %for.body199
  %144 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !5877
  %child206 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %144, i32 0, i32 1, !dbg !5878
  %145 = load i64, i64* %id195, align 8, !dbg !5879
  %arrayidx207 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child206, i64 0, i64 %145, !dbg !5877
  %146 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx207, align 8, !dbg !5877
  store %struct._NodeInfo* %146, %struct._NodeInfo** %node_info, align 8, !dbg !5880
  br label %for.inc, !dbg !5881

for.inc:                                          ; preds = %if.end205
  %147 = load i64, i64* %index, align 8, !dbg !5882
  %dec = add i64 %147, -1, !dbg !5882
  store i64 %dec, i64* %index, align 8, !dbg !5882
  br label %for.cond196, !dbg !5883, !llvm.loop !5884

for.end:                                          ; preds = %if.then204, %for.cond196
  %target = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 5, !dbg !5886
  %148 = bitcast %struct._RealPixelPacket* %target to i8*, !dbg !5887
  %149 = bitcast %struct._RealPixelPacket* %pixel to i8*, !dbg !5887
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 4 %149, i64 16, i1 false), !dbg !5887
  %distance = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 6, !dbg !5888
  store float 0x4210000000000000, float* %distance, align 8, !dbg !5889
  %150 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5890
  %151 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !5891
  %parent = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %151, i32 0, i32 0, !dbg !5892
  %152 = load %struct._NodeInfo*, %struct._NodeInfo** %parent, align 8, !dbg !5892
  call void @ClosestColor(%struct._Image* %150, %struct._CubeInfo* %cube, %struct._NodeInfo* %152), !dbg !5893
  %color_number = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 11, !dbg !5894
  %153 = load i64, i64* %color_number, align 8, !dbg !5894
  %cache208 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 15, !dbg !5895
  %154 = load i64*, i64** %cache208, align 8, !dbg !5895
  %155 = load i64, i64* %i, align 8, !dbg !5896
  %arrayidx209 = getelementptr inbounds i64, i64* %154, i64 %155, !dbg !5897
  store i64 %153, i64* %arrayidx209, align 8, !dbg !5898
  br label %if.end210, !dbg !5899

if.end210:                                        ; preds = %for.end, %if.end189
  %cache211 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 15, !dbg !5900
  %156 = load i64*, i64** %cache211, align 8, !dbg !5900
  %157 = load i64, i64* %i, align 8, !dbg !5901
  %arrayidx212 = getelementptr inbounds i64, i64* %156, i64 %157, !dbg !5902
  %158 = load i64, i64* %arrayidx212, align 8, !dbg !5902
  store i64 %158, i64* %index, align 8, !dbg !5903
  %159 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5904
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %159, i32 0, i32 0, !dbg !5906
  %160 = load i32, i32* %storage_class, align 8, !dbg !5906
  %cmp213 = icmp eq i32 %160, 2, !dbg !5907
  br i1 %cmp213, label %if.then215, label %if.end223, !dbg !5908

if.then215:                                       ; preds = %if.end210
  %161 = load i16*, i16** %indexes, align 8, !dbg !5909
  %162 = load i64, i64* %u, align 8, !dbg !5909
  %add.ptr216 = getelementptr inbounds i16, i16* %161, i64 %162, !dbg !5909
  %cmp217 = icmp ne i16* %add.ptr216, null, !dbg !5909
  br i1 %cmp217, label %if.then219, label %if.end222, !dbg !5912

if.then219:                                       ; preds = %if.then215
  %163 = load i64, i64* %index, align 8, !dbg !5909
  %conv220 = trunc i64 %163 to i16, !dbg !5909
  %164 = load i16*, i16** %indexes, align 8, !dbg !5909
  %165 = load i64, i64* %u, align 8, !dbg !5909
  %add.ptr221 = getelementptr inbounds i16, i16* %164, i64 %165, !dbg !5909
  store i16 %conv220, i16* %add.ptr221, align 2, !dbg !5909
  br label %if.end222, !dbg !5909

if.end222:                                        ; preds = %if.then219, %if.then215
  br label %if.end223, !dbg !5912

if.end223:                                        ; preds = %if.end222, %if.end210
  %quantize_info = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 18, !dbg !5913
  %166 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !5913
  %measure_error = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %166, i32 0, i32 4, !dbg !5915
  %167 = load i32, i32* %measure_error, align 8, !dbg !5915
  %cmp224 = icmp eq i32 %167, 0, !dbg !5916
  br i1 %cmp224, label %if.then226, label %if.end251, !dbg !5917

if.then226:                                       ; preds = %if.end223
  %168 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5918
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %168, i32 0, i32 11, !dbg !5918
  %169 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !5918
  %170 = load i64, i64* %index, align 8, !dbg !5918
  %add.ptr227 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %169, i64 %170, !dbg !5918
  %red228 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr227, i32 0, i32 2, !dbg !5918
  %171 = load i16, i16* %red228, align 2, !dbg !5918
  %172 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5918
  %173 = load i64, i64* %u, align 8, !dbg !5918
  %add.ptr229 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %172, i64 %173, !dbg !5918
  %red230 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr229, i32 0, i32 2, !dbg !5918
  store i16 %171, i16* %red230, align 2, !dbg !5918
  %174 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5918
  %colormap231 = getelementptr inbounds %struct._Image, %struct._Image* %174, i32 0, i32 11, !dbg !5918
  %175 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap231, align 8, !dbg !5918
  %176 = load i64, i64* %index, align 8, !dbg !5918
  %add.ptr232 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %175, i64 %176, !dbg !5918
  %green233 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr232, i32 0, i32 1, !dbg !5918
  %177 = load i16, i16* %green233, align 2, !dbg !5918
  %178 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5918
  %179 = load i64, i64* %u, align 8, !dbg !5918
  %add.ptr234 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %178, i64 %179, !dbg !5918
  %green235 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr234, i32 0, i32 1, !dbg !5918
  store i16 %177, i16* %green235, align 2, !dbg !5918
  %180 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5918
  %colormap236 = getelementptr inbounds %struct._Image, %struct._Image* %180, i32 0, i32 11, !dbg !5918
  %181 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap236, align 8, !dbg !5918
  %182 = load i64, i64* %index, align 8, !dbg !5918
  %add.ptr237 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %181, i64 %182, !dbg !5918
  %blue238 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr237, i32 0, i32 0, !dbg !5918
  %183 = load i16, i16* %blue238, align 2, !dbg !5918
  %184 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5918
  %185 = load i64, i64* %u, align 8, !dbg !5918
  %add.ptr239 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %184, i64 %185, !dbg !5918
  %blue240 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr239, i32 0, i32 0, !dbg !5918
  store i16 %183, i16* %blue240, align 2, !dbg !5918
  %associate_alpha241 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 19, !dbg !5921
  %186 = load i32, i32* %associate_alpha241, align 8, !dbg !5921
  %cmp242 = icmp ne i32 %186, 0, !dbg !5923
  br i1 %cmp242, label %if.then244, label %if.end250, !dbg !5924

if.then244:                                       ; preds = %if.then226
  %187 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5925
  %colormap245 = getelementptr inbounds %struct._Image, %struct._Image* %187, i32 0, i32 11, !dbg !5925
  %188 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap245, align 8, !dbg !5925
  %189 = load i64, i64* %index, align 8, !dbg !5925
  %arrayidx246 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %188, i64 %189, !dbg !5925
  %opacity247 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx246, i32 0, i32 3, !dbg !5925
  %190 = load i16, i16* %opacity247, align 2, !dbg !5925
  %191 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5925
  %192 = load i64, i64* %u, align 8, !dbg !5925
  %add.ptr248 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %191, i64 %192, !dbg !5925
  %opacity249 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr248, i32 0, i32 3, !dbg !5925
  store i16 %190, i16* %opacity249, align 2, !dbg !5925
  br label %if.end250, !dbg !5925

if.end250:                                        ; preds = %if.then244, %if.then226
  br label %if.end251, !dbg !5926

if.end251:                                        ; preds = %if.end250, %if.end223
  %193 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5927
  %194 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5929
  %call252 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %193, %struct._ExceptionInfo* %194), !dbg !5930
  %cmp253 = icmp eq i32 %call252, 0, !dbg !5931
  br i1 %cmp253, label %if.then255, label %if.end256, !dbg !5932

if.then255:                                       ; preds = %if.end251
  store i32 0, i32* %status, align 4, !dbg !5933
  br label %if.end256, !dbg !5934

if.end256:                                        ; preds = %if.then255, %if.end251
  %195 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5935
  %colormap257 = getelementptr inbounds %struct._Image, %struct._Image* %195, i32 0, i32 11, !dbg !5936
  %196 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap257, align 8, !dbg !5936
  %197 = load i64, i64* %index, align 8, !dbg !5937
  %add.ptr258 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %196, i64 %197, !dbg !5938
  call void @AssociateAlphaPixel(%struct._CubeInfo* %cube, %struct._PixelPacket* %add.ptr258, %struct._RealPixelPacket* %color), !dbg !5939
  %red259 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 0, !dbg !5940
  %198 = load float, float* %red259, align 4, !dbg !5940
  %red260 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %color, i32 0, i32 0, !dbg !5941
  %199 = load float, float* %red260, align 4, !dbg !5941
  %sub261 = fsub float %198, %199, !dbg !5942
  %200 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %current, align 8, !dbg !5943
  %201 = load i64, i64* %u, align 8, !dbg !5944
  %arrayidx262 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %200, i64 %201, !dbg !5943
  %red263 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx262, i32 0, i32 0, !dbg !5945
  store float %sub261, float* %red263, align 4, !dbg !5946
  %green264 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 1, !dbg !5947
  %202 = load float, float* %green264, align 4, !dbg !5947
  %green265 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %color, i32 0, i32 1, !dbg !5948
  %203 = load float, float* %green265, align 4, !dbg !5948
  %sub266 = fsub float %202, %203, !dbg !5949
  %204 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %current, align 8, !dbg !5950
  %205 = load i64, i64* %u, align 8, !dbg !5951
  %arrayidx267 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %204, i64 %205, !dbg !5950
  %green268 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx267, i32 0, i32 1, !dbg !5952
  store float %sub266, float* %green268, align 4, !dbg !5953
  %blue269 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 2, !dbg !5954
  %206 = load float, float* %blue269, align 4, !dbg !5954
  %blue270 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %color, i32 0, i32 2, !dbg !5955
  %207 = load float, float* %blue270, align 4, !dbg !5955
  %sub271 = fsub float %206, %207, !dbg !5956
  %208 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %current, align 8, !dbg !5957
  %209 = load i64, i64* %u, align 8, !dbg !5958
  %arrayidx272 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %208, i64 %209, !dbg !5957
  %blue273 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx272, i32 0, i32 2, !dbg !5959
  store float %sub271, float* %blue273, align 4, !dbg !5960
  %associate_alpha274 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %cube, i32 0, i32 19, !dbg !5961
  %210 = load i32, i32* %associate_alpha274, align 8, !dbg !5961
  %cmp275 = icmp ne i32 %210, 0, !dbg !5963
  br i1 %cmp275, label %if.then277, label %if.end283, !dbg !5964

if.then277:                                       ; preds = %if.end256
  %opacity278 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 3, !dbg !5965
  %211 = load float, float* %opacity278, align 4, !dbg !5965
  %opacity279 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %color, i32 0, i32 3, !dbg !5966
  %212 = load float, float* %opacity279, align 4, !dbg !5966
  %sub280 = fsub float %211, %212, !dbg !5967
  %213 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %current, align 8, !dbg !5968
  %214 = load i64, i64* %u, align 8, !dbg !5969
  %arrayidx281 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %213, i64 %214, !dbg !5968
  %opacity282 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx281, i32 0, i32 3, !dbg !5970
  store float %sub280, float* %opacity282, align 4, !dbg !5971
  br label %if.end283, !dbg !5968

if.end283:                                        ; preds = %if.then277, %if.end256
  %215 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5972
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %215, i32 0, i32 47, !dbg !5974
  %216 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !5974
  %cmp284 = icmp ne i32 (i8*, i64, i64, i8*)* %216, null, !dbg !5975
  br i1 %cmp284, label %if.then286, label %if.end293, !dbg !5976

if.then286:                                       ; preds = %if.end283
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !5977, metadata !DIExpression()), !dbg !5979
  %217 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5980
  %218 = load i64, i64* %y, align 8, !dbg !5981
  %219 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5982
  %rows287 = getelementptr inbounds %struct._Image, %struct._Image* %219, i32 0, i32 8, !dbg !5983
  %220 = load i64, i64* %rows287, align 8, !dbg !5983
  %call288 = call i32 @SetImageProgress(%struct._Image* %217, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i64 %218, i64 %220), !dbg !5984
  store i32 %call288, i32* %proceed, align 4, !dbg !5985
  %221 = load i32, i32* %proceed, align 4, !dbg !5986
  %cmp289 = icmp eq i32 %221, 0, !dbg !5988
  br i1 %cmp289, label %if.then291, label %if.end292, !dbg !5989

if.then291:                                       ; preds = %if.then286
  store i32 0, i32* %status, align 4, !dbg !5990
  br label %if.end292, !dbg !5991

if.end292:                                        ; preds = %if.then291, %if.then286
  br label %if.end293, !dbg !5992

if.end293:                                        ; preds = %if.end292, %if.end283
  br label %for.inc294, !dbg !5993

for.inc294:                                       ; preds = %if.end293
  %222 = load i64, i64* %x, align 8, !dbg !5994
  %inc = add nsw i64 %222, 1, !dbg !5994
  store i64 %inc, i64* %x, align 8, !dbg !5994
  br label %for.cond22, !dbg !5995, !llvm.loop !5996

for.end295:                                       ; preds = %for.cond22
  br label %for.inc296, !dbg !5998

for.inc296:                                       ; preds = %for.end295, %if.then11, %if.then6
  %223 = load i64, i64* %y, align 8, !dbg !5999
  %inc297 = add nsw i64 %223, 1, !dbg !5999
  store i64 %inc297, i64* %y, align 8, !dbg !5999
  br label %for.cond, !dbg !6000, !llvm.loop !6001

for.end298:                                       ; preds = %for.cond
  %224 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !6003
  %call299 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %224), !dbg !6004
  store %struct._CacheView* %call299, %struct._CacheView** %image_view, align 8, !dbg !6005
  %225 = load %struct._RealPixelPacket**, %struct._RealPixelPacket*** %pixels, align 8, !dbg !6006
  %call300 = call %struct._RealPixelPacket** @DestroyPixelThreadSet(%struct._RealPixelPacket** %225), !dbg !6007
  store %struct._RealPixelPacket** %call300, %struct._RealPixelPacket*** %pixels, align 8, !dbg !6008
  store i32 1, i32* %retval, align 4, !dbg !6009
  br label %return, !dbg !6009

return:                                           ; preds = %for.end298, %if.then
  %226 = load i32, i32* %retval, align 4, !dbg !6010
  ret i32 %226, !dbg !6010
}

; Function Attrs: noinline nounwind uwtable
define internal void @Riemersma(%struct._Image* %image, %struct._CacheView* %image_view, %struct._CubeInfo* %cube_info, i64 %level, i32 %direction) #0 !dbg !6011 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %image_view.addr = alloca %struct._CacheView*, align 8
  %cube_info.addr = alloca %struct._CubeInfo*, align 8
  %level.addr = alloca i64, align 8
  %direction.addr = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6015, metadata !DIExpression()), !dbg !6016
  store %struct._CacheView* %image_view, %struct._CacheView** %image_view.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view.addr, metadata !6017, metadata !DIExpression()), !dbg !6018
  store %struct._CubeInfo* %cube_info, %struct._CubeInfo** %cube_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info.addr, metadata !6019, metadata !DIExpression()), !dbg !6020
  store i64 %level, i64* %level.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %level.addr, metadata !6021, metadata !DIExpression()), !dbg !6022
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !6023, metadata !DIExpression()), !dbg !6024
  %0 = load i64, i64* %level.addr, align 8, !dbg !6025
  %cmp = icmp eq i64 %0, 1, !dbg !6027
  br i1 %cmp, label %if.then, label %if.else, !dbg !6028

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %direction.addr, align 4, !dbg !6029
  switch i32 %1, label %sw.default [
    i32 4, label %sw.bb
    i32 6, label %sw.bb3
    i32 2, label %sw.bb7
    i32 8, label %sw.bb11
  ], !dbg !6030

sw.bb:                                            ; preds = %if.then
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6031
  %3 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6034
  %4 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6035
  %call = call i32 @RiemersmaDither(%struct._Image* %2, %struct._CacheView* %3, %struct._CubeInfo* %4, i32 6), !dbg !6036
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6037
  %6 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6038
  %7 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6039
  %call1 = call i32 @RiemersmaDither(%struct._Image* %5, %struct._CacheView* %6, %struct._CubeInfo* %7, i32 8), !dbg !6040
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6041
  %9 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6042
  %10 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6043
  %call2 = call i32 @RiemersmaDither(%struct._Image* %8, %struct._CacheView* %9, %struct._CubeInfo* %10, i32 4), !dbg !6044
  br label %sw.epilog, !dbg !6045

sw.bb3:                                           ; preds = %if.then
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6046
  %12 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6048
  %13 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6049
  %call4 = call i32 @RiemersmaDither(%struct._Image* %11, %struct._CacheView* %12, %struct._CubeInfo* %13, i32 4), !dbg !6050
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6051
  %15 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6052
  %16 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6053
  %call5 = call i32 @RiemersmaDither(%struct._Image* %14, %struct._CacheView* %15, %struct._CubeInfo* %16, i32 2), !dbg !6054
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6055
  %18 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6056
  %19 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6057
  %call6 = call i32 @RiemersmaDither(%struct._Image* %17, %struct._CacheView* %18, %struct._CubeInfo* %19, i32 6), !dbg !6058
  br label %sw.epilog, !dbg !6059

sw.bb7:                                           ; preds = %if.then
  %20 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6060
  %21 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6062
  %22 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6063
  %call8 = call i32 @RiemersmaDither(%struct._Image* %20, %struct._CacheView* %21, %struct._CubeInfo* %22, i32 8), !dbg !6064
  %23 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6065
  %24 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6066
  %25 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6067
  %call9 = call i32 @RiemersmaDither(%struct._Image* %23, %struct._CacheView* %24, %struct._CubeInfo* %25, i32 6), !dbg !6068
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6069
  %27 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6070
  %28 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6071
  %call10 = call i32 @RiemersmaDither(%struct._Image* %26, %struct._CacheView* %27, %struct._CubeInfo* %28, i32 2), !dbg !6072
  br label %sw.epilog, !dbg !6073

sw.bb11:                                          ; preds = %if.then
  %29 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6074
  %30 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6076
  %31 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6077
  %call12 = call i32 @RiemersmaDither(%struct._Image* %29, %struct._CacheView* %30, %struct._CubeInfo* %31, i32 2), !dbg !6078
  %32 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6079
  %33 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6080
  %34 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6081
  %call13 = call i32 @RiemersmaDither(%struct._Image* %32, %struct._CacheView* %33, %struct._CubeInfo* %34, i32 4), !dbg !6082
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6083
  %36 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6084
  %37 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6085
  %call14 = call i32 @RiemersmaDither(%struct._Image* %35, %struct._CacheView* %36, %struct._CubeInfo* %37, i32 8), !dbg !6086
  br label %sw.epilog, !dbg !6087

sw.default:                                       ; preds = %if.then
  br label %sw.epilog, !dbg !6088

sw.epilog:                                        ; preds = %sw.default, %sw.bb11, %sw.bb7, %sw.bb3, %sw.bb
  br label %if.end, !dbg !6089

if.else:                                          ; preds = %entry
  %38 = load i32, i32* %direction.addr, align 4, !dbg !6090
  switch i32 %38, label %sw.default46 [
    i32 4, label %sw.bb15
    i32 6, label %sw.bb22
    i32 2, label %sw.bb30
    i32 8, label %sw.bb38
  ], !dbg !6091

sw.bb15:                                          ; preds = %if.else
  %39 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6092
  %40 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6095
  %41 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6096
  %42 = load i64, i64* %level.addr, align 8, !dbg !6097
  %sub = sub i64 %42, 1, !dbg !6098
  call void @Riemersma(%struct._Image* %39, %struct._CacheView* %40, %struct._CubeInfo* %41, i64 %sub, i32 2), !dbg !6099
  %43 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6100
  %44 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6101
  %45 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6102
  %call16 = call i32 @RiemersmaDither(%struct._Image* %43, %struct._CacheView* %44, %struct._CubeInfo* %45, i32 6), !dbg !6103
  %46 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6104
  %47 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6105
  %48 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6106
  %49 = load i64, i64* %level.addr, align 8, !dbg !6107
  %sub17 = sub i64 %49, 1, !dbg !6108
  call void @Riemersma(%struct._Image* %46, %struct._CacheView* %47, %struct._CubeInfo* %48, i64 %sub17, i32 4), !dbg !6109
  %50 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6110
  %51 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6111
  %52 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6112
  %call18 = call i32 @RiemersmaDither(%struct._Image* %50, %struct._CacheView* %51, %struct._CubeInfo* %52, i32 8), !dbg !6113
  %53 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6114
  %54 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6115
  %55 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6116
  %56 = load i64, i64* %level.addr, align 8, !dbg !6117
  %sub19 = sub i64 %56, 1, !dbg !6118
  call void @Riemersma(%struct._Image* %53, %struct._CacheView* %54, %struct._CubeInfo* %55, i64 %sub19, i32 4), !dbg !6119
  %57 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6120
  %58 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6121
  %59 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6122
  %call20 = call i32 @RiemersmaDither(%struct._Image* %57, %struct._CacheView* %58, %struct._CubeInfo* %59, i32 4), !dbg !6123
  %60 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6124
  %61 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6125
  %62 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6126
  %63 = load i64, i64* %level.addr, align 8, !dbg !6127
  %sub21 = sub i64 %63, 1, !dbg !6128
  call void @Riemersma(%struct._Image* %60, %struct._CacheView* %61, %struct._CubeInfo* %62, i64 %sub21, i32 8), !dbg !6129
  br label %sw.epilog47, !dbg !6130

sw.bb22:                                          ; preds = %if.else
  %64 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6131
  %65 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6133
  %66 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6134
  %67 = load i64, i64* %level.addr, align 8, !dbg !6135
  %sub23 = sub i64 %67, 1, !dbg !6136
  call void @Riemersma(%struct._Image* %64, %struct._CacheView* %65, %struct._CubeInfo* %66, i64 %sub23, i32 8), !dbg !6137
  %68 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6138
  %69 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6139
  %70 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6140
  %call24 = call i32 @RiemersmaDither(%struct._Image* %68, %struct._CacheView* %69, %struct._CubeInfo* %70, i32 4), !dbg !6141
  %71 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6142
  %72 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6143
  %73 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6144
  %74 = load i64, i64* %level.addr, align 8, !dbg !6145
  %sub25 = sub i64 %74, 1, !dbg !6146
  call void @Riemersma(%struct._Image* %71, %struct._CacheView* %72, %struct._CubeInfo* %73, i64 %sub25, i32 6), !dbg !6147
  %75 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6148
  %76 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6149
  %77 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6150
  %call26 = call i32 @RiemersmaDither(%struct._Image* %75, %struct._CacheView* %76, %struct._CubeInfo* %77, i32 2), !dbg !6151
  %78 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6152
  %79 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6153
  %80 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6154
  %81 = load i64, i64* %level.addr, align 8, !dbg !6155
  %sub27 = sub i64 %81, 1, !dbg !6156
  call void @Riemersma(%struct._Image* %78, %struct._CacheView* %79, %struct._CubeInfo* %80, i64 %sub27, i32 6), !dbg !6157
  %82 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6158
  %83 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6159
  %84 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6160
  %call28 = call i32 @RiemersmaDither(%struct._Image* %82, %struct._CacheView* %83, %struct._CubeInfo* %84, i32 6), !dbg !6161
  %85 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6162
  %86 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6163
  %87 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6164
  %88 = load i64, i64* %level.addr, align 8, !dbg !6165
  %sub29 = sub i64 %88, 1, !dbg !6166
  call void @Riemersma(%struct._Image* %85, %struct._CacheView* %86, %struct._CubeInfo* %87, i64 %sub29, i32 2), !dbg !6167
  br label %sw.epilog47, !dbg !6168

sw.bb30:                                          ; preds = %if.else
  %89 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6169
  %90 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6171
  %91 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6172
  %92 = load i64, i64* %level.addr, align 8, !dbg !6173
  %sub31 = sub i64 %92, 1, !dbg !6174
  call void @Riemersma(%struct._Image* %89, %struct._CacheView* %90, %struct._CubeInfo* %91, i64 %sub31, i32 4), !dbg !6175
  %93 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6176
  %94 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6177
  %95 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6178
  %call32 = call i32 @RiemersmaDither(%struct._Image* %93, %struct._CacheView* %94, %struct._CubeInfo* %95, i32 8), !dbg !6179
  %96 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6180
  %97 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6181
  %98 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6182
  %99 = load i64, i64* %level.addr, align 8, !dbg !6183
  %sub33 = sub i64 %99, 1, !dbg !6184
  call void @Riemersma(%struct._Image* %96, %struct._CacheView* %97, %struct._CubeInfo* %98, i64 %sub33, i32 2), !dbg !6185
  %100 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6186
  %101 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6187
  %102 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6188
  %call34 = call i32 @RiemersmaDither(%struct._Image* %100, %struct._CacheView* %101, %struct._CubeInfo* %102, i32 6), !dbg !6189
  %103 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6190
  %104 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6191
  %105 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6192
  %106 = load i64, i64* %level.addr, align 8, !dbg !6193
  %sub35 = sub i64 %106, 1, !dbg !6194
  call void @Riemersma(%struct._Image* %103, %struct._CacheView* %104, %struct._CubeInfo* %105, i64 %sub35, i32 2), !dbg !6195
  %107 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6196
  %108 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6197
  %109 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6198
  %call36 = call i32 @RiemersmaDither(%struct._Image* %107, %struct._CacheView* %108, %struct._CubeInfo* %109, i32 2), !dbg !6199
  %110 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6200
  %111 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6201
  %112 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6202
  %113 = load i64, i64* %level.addr, align 8, !dbg !6203
  %sub37 = sub i64 %113, 1, !dbg !6204
  call void @Riemersma(%struct._Image* %110, %struct._CacheView* %111, %struct._CubeInfo* %112, i64 %sub37, i32 6), !dbg !6205
  br label %sw.epilog47, !dbg !6206

sw.bb38:                                          ; preds = %if.else
  %114 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6207
  %115 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6209
  %116 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6210
  %117 = load i64, i64* %level.addr, align 8, !dbg !6211
  %sub39 = sub i64 %117, 1, !dbg !6212
  call void @Riemersma(%struct._Image* %114, %struct._CacheView* %115, %struct._CubeInfo* %116, i64 %sub39, i32 6), !dbg !6213
  %118 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6214
  %119 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6215
  %120 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6216
  %call40 = call i32 @RiemersmaDither(%struct._Image* %118, %struct._CacheView* %119, %struct._CubeInfo* %120, i32 2), !dbg !6217
  %121 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6218
  %122 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6219
  %123 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6220
  %124 = load i64, i64* %level.addr, align 8, !dbg !6221
  %sub41 = sub i64 %124, 1, !dbg !6222
  call void @Riemersma(%struct._Image* %121, %struct._CacheView* %122, %struct._CubeInfo* %123, i64 %sub41, i32 8), !dbg !6223
  %125 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6224
  %126 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6225
  %127 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6226
  %call42 = call i32 @RiemersmaDither(%struct._Image* %125, %struct._CacheView* %126, %struct._CubeInfo* %127, i32 4), !dbg !6227
  %128 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6228
  %129 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6229
  %130 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6230
  %131 = load i64, i64* %level.addr, align 8, !dbg !6231
  %sub43 = sub i64 %131, 1, !dbg !6232
  call void @Riemersma(%struct._Image* %128, %struct._CacheView* %129, %struct._CubeInfo* %130, i64 %sub43, i32 8), !dbg !6233
  %132 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6234
  %133 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6235
  %134 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6236
  %call44 = call i32 @RiemersmaDither(%struct._Image* %132, %struct._CacheView* %133, %struct._CubeInfo* %134, i32 8), !dbg !6237
  %135 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6238
  %136 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6239
  %137 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6240
  %138 = load i64, i64* %level.addr, align 8, !dbg !6241
  %sub45 = sub i64 %138, 1, !dbg !6242
  call void @Riemersma(%struct._Image* %135, %struct._CacheView* %136, %struct._CubeInfo* %137, i64 %sub45, i32 4), !dbg !6243
  br label %sw.epilog47, !dbg !6244

sw.default46:                                     ; preds = %if.else
  br label %sw.epilog47, !dbg !6245

sw.epilog47:                                      ; preds = %sw.default46, %sw.bb38, %sw.bb30, %sw.bb22, %sw.bb15
  br label %if.end

if.end:                                           ; preds = %sw.epilog47, %sw.epilog
  ret void, !dbg !6246
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @RiemersmaDither(%struct._Image* %image, %struct._CacheView* %image_view, %struct._CubeInfo* %cube_info, i32 %direction) #0 !dbg !6247 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %image_view.addr = alloca %struct._CacheView*, align 8
  %cube_info.addr = alloca %struct._CubeInfo*, align 8
  %direction.addr = alloca i32, align 4
  %proceed = alloca i32, align 4
  %color = alloca %struct._RealPixelPacket, align 4
  %pixel = alloca %struct._RealPixelPacket, align 4
  %p = alloca %struct._CubeInfo*, align 8
  %index = alloca i64, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %i = alloca i64, align 8
  %node_info = alloca %struct._NodeInfo*, align 8
  %id = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6250, metadata !DIExpression()), !dbg !6251
  store %struct._CacheView* %image_view, %struct._CacheView** %image_view.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view.addr, metadata !6252, metadata !DIExpression()), !dbg !6253
  store %struct._CubeInfo* %cube_info, %struct._CubeInfo** %cube_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info.addr, metadata !6254, metadata !DIExpression()), !dbg !6255
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !6256, metadata !DIExpression()), !dbg !6257
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !6258, metadata !DIExpression()), !dbg !6259
  call void @llvm.dbg.declare(metadata %struct._RealPixelPacket* %color, metadata !6260, metadata !DIExpression()), !dbg !6261
  call void @llvm.dbg.declare(metadata %struct._RealPixelPacket* %pixel, metadata !6262, metadata !DIExpression()), !dbg !6263
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %p, metadata !6264, metadata !DIExpression()), !dbg !6265
  call void @llvm.dbg.declare(metadata i64* %index, metadata !6266, metadata !DIExpression()), !dbg !6267
  %0 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6268
  store %struct._CubeInfo* %0, %struct._CubeInfo** %p, align 8, !dbg !6269
  %1 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6270
  %x = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %1, i32 0, i32 20, !dbg !6272
  %2 = load i64, i64* %x, align 8, !dbg !6272
  %cmp = icmp sge i64 %2, 0, !dbg !6273
  br i1 %cmp, label %land.lhs.true, label %if.end161, !dbg !6274

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6275
  %x1 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %3, i32 0, i32 20, !dbg !6276
  %4 = load i64, i64* %x1, align 8, !dbg !6276
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6277
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 7, !dbg !6278
  %6 = load i64, i64* %columns, align 8, !dbg !6278
  %cmp2 = icmp slt i64 %4, %6, !dbg !6279
  br i1 %cmp2, label %land.lhs.true3, label %if.end161, !dbg !6280

land.lhs.true3:                                   ; preds = %land.lhs.true
  %7 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6281
  %y = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %7, i32 0, i32 21, !dbg !6282
  %8 = load i64, i64* %y, align 8, !dbg !6282
  %cmp4 = icmp sge i64 %8, 0, !dbg !6283
  br i1 %cmp4, label %land.lhs.true5, label %if.end161, !dbg !6284

land.lhs.true5:                                   ; preds = %land.lhs.true3
  %9 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6285
  %y6 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %9, i32 0, i32 21, !dbg !6286
  %10 = load i64, i64* %y6, align 8, !dbg !6286
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6287
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %11, i32 0, i32 8, !dbg !6288
  %12 = load i64, i64* %rows, align 8, !dbg !6288
  %cmp7 = icmp slt i64 %10, %12, !dbg !6289
  br i1 %cmp7, label %if.then, label %if.end161, !dbg !6290

if.then:                                          ; preds = %land.lhs.true5
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !6291, metadata !DIExpression()), !dbg !6293
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !6294, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !6296, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6298, metadata !DIExpression()), !dbg !6299
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6300
  %exception8 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 58, !dbg !6301
  store %struct._ExceptionInfo* %exception8, %struct._ExceptionInfo** %exception, align 8, !dbg !6302
  %14 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6303
  %15 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6304
  %x9 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %15, i32 0, i32 20, !dbg !6305
  %16 = load i64, i64* %x9, align 8, !dbg !6305
  %17 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6306
  %y10 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %17, i32 0, i32 21, !dbg !6307
  %18 = load i64, i64* %y10, align 8, !dbg !6307
  %19 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6308
  %call = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %14, i64 %16, i64 %18, i64 1, i64 1, %struct._ExceptionInfo* %19), !dbg !6309
  store %struct._PixelPacket* %call, %struct._PixelPacket** %q, align 8, !dbg !6310
  %20 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6311
  %cmp11 = icmp eq %struct._PixelPacket* %20, null, !dbg !6313
  br i1 %cmp11, label %if.then12, label %if.end, !dbg !6314

if.then12:                                        ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !6315
  br label %return, !dbg !6315

if.end:                                           ; preds = %if.then
  %21 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6316
  %call13 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %21), !dbg !6317
  store i16* %call13, i16** %indexes, align 8, !dbg !6318
  %22 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6319
  %23 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6320
  call void @AssociateAlphaPixel(%struct._CubeInfo* %22, %struct._PixelPacket* %23, %struct._RealPixelPacket* %pixel), !dbg !6321
  store i64 0, i64* %i, align 8, !dbg !6322
  br label %for.cond, !dbg !6324

for.cond:                                         ; preds = %for.inc, %if.end
  %24 = load i64, i64* %i, align 8, !dbg !6325
  %cmp14 = icmp slt i64 %24, 16, !dbg !6327
  br i1 %cmp14, label %for.body, label %for.end, !dbg !6328

for.body:                                         ; preds = %for.cond
  %25 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6329
  %weights = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %25, i32 0, i32 17, !dbg !6331
  %26 = load i64, i64* %i, align 8, !dbg !6332
  %arrayidx = getelementptr inbounds [16 x float], [16 x float]* %weights, i64 0, i64 %26, !dbg !6329
  %27 = load float, float* %arrayidx, align 4, !dbg !6329
  %28 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6333
  %error = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %28, i32 0, i32 16, !dbg !6334
  %29 = load i64, i64* %i, align 8, !dbg !6335
  %arrayidx15 = getelementptr inbounds [16 x %struct._RealPixelPacket], [16 x %struct._RealPixelPacket]* %error, i64 0, i64 %29, !dbg !6333
  %red = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx15, i32 0, i32 0, !dbg !6336
  %30 = load float, float* %red, align 8, !dbg !6336
  %mul = fmul float %27, %30, !dbg !6337
  %red16 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 0, !dbg !6338
  %31 = load float, float* %red16, align 4, !dbg !6339
  %add = fadd float %31, %mul, !dbg !6339
  store float %add, float* %red16, align 4, !dbg !6339
  %32 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6340
  %weights17 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %32, i32 0, i32 17, !dbg !6341
  %33 = load i64, i64* %i, align 8, !dbg !6342
  %arrayidx18 = getelementptr inbounds [16 x float], [16 x float]* %weights17, i64 0, i64 %33, !dbg !6340
  %34 = load float, float* %arrayidx18, align 4, !dbg !6340
  %35 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6343
  %error19 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %35, i32 0, i32 16, !dbg !6344
  %36 = load i64, i64* %i, align 8, !dbg !6345
  %arrayidx20 = getelementptr inbounds [16 x %struct._RealPixelPacket], [16 x %struct._RealPixelPacket]* %error19, i64 0, i64 %36, !dbg !6343
  %green = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx20, i32 0, i32 1, !dbg !6346
  %37 = load float, float* %green, align 4, !dbg !6346
  %mul21 = fmul float %34, %37, !dbg !6347
  %green22 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 1, !dbg !6348
  %38 = load float, float* %green22, align 4, !dbg !6349
  %add23 = fadd float %38, %mul21, !dbg !6349
  store float %add23, float* %green22, align 4, !dbg !6349
  %39 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6350
  %weights24 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %39, i32 0, i32 17, !dbg !6351
  %40 = load i64, i64* %i, align 8, !dbg !6352
  %arrayidx25 = getelementptr inbounds [16 x float], [16 x float]* %weights24, i64 0, i64 %40, !dbg !6350
  %41 = load float, float* %arrayidx25, align 4, !dbg !6350
  %42 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6353
  %error26 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %42, i32 0, i32 16, !dbg !6354
  %43 = load i64, i64* %i, align 8, !dbg !6355
  %arrayidx27 = getelementptr inbounds [16 x %struct._RealPixelPacket], [16 x %struct._RealPixelPacket]* %error26, i64 0, i64 %43, !dbg !6353
  %blue = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx27, i32 0, i32 2, !dbg !6356
  %44 = load float, float* %blue, align 8, !dbg !6356
  %mul28 = fmul float %41, %44, !dbg !6357
  %blue29 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 2, !dbg !6358
  %45 = load float, float* %blue29, align 4, !dbg !6359
  %add30 = fadd float %45, %mul28, !dbg !6359
  store float %add30, float* %blue29, align 4, !dbg !6359
  %46 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6360
  %associate_alpha = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %46, i32 0, i32 19, !dbg !6362
  %47 = load i32, i32* %associate_alpha, align 8, !dbg !6362
  %cmp31 = icmp ne i32 %47, 0, !dbg !6363
  br i1 %cmp31, label %if.then32, label %if.end40, !dbg !6364

if.then32:                                        ; preds = %for.body
  %48 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6365
  %weights33 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %48, i32 0, i32 17, !dbg !6366
  %49 = load i64, i64* %i, align 8, !dbg !6367
  %arrayidx34 = getelementptr inbounds [16 x float], [16 x float]* %weights33, i64 0, i64 %49, !dbg !6365
  %50 = load float, float* %arrayidx34, align 4, !dbg !6365
  %51 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6368
  %error35 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %51, i32 0, i32 16, !dbg !6369
  %52 = load i64, i64* %i, align 8, !dbg !6370
  %arrayidx36 = getelementptr inbounds [16 x %struct._RealPixelPacket], [16 x %struct._RealPixelPacket]* %error35, i64 0, i64 %52, !dbg !6368
  %opacity = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx36, i32 0, i32 3, !dbg !6371
  %53 = load float, float* %opacity, align 4, !dbg !6371
  %mul37 = fmul float %50, %53, !dbg !6372
  %opacity38 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 3, !dbg !6373
  %54 = load float, float* %opacity38, align 4, !dbg !6374
  %add39 = fadd float %54, %mul37, !dbg !6374
  store float %add39, float* %opacity38, align 4, !dbg !6374
  br label %if.end40, !dbg !6375

if.end40:                                         ; preds = %if.then32, %for.body
  br label %for.inc, !dbg !6376

for.inc:                                          ; preds = %if.end40
  %55 = load i64, i64* %i, align 8, !dbg !6377
  %inc = add nsw i64 %55, 1, !dbg !6377
  store i64 %inc, i64* %i, align 8, !dbg !6377
  br label %for.cond, !dbg !6378, !llvm.loop !6379

for.end:                                          ; preds = %for.cond
  %red41 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 0, !dbg !6381
  %56 = load float, float* %red41, align 4, !dbg !6381
  %call42 = call zeroext i16 @ClampPixel(float %56), !dbg !6382
  %conv = uitofp i16 %call42 to float, !dbg !6383
  %red43 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 0, !dbg !6384
  store float %conv, float* %red43, align 4, !dbg !6385
  %green44 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 1, !dbg !6386
  %57 = load float, float* %green44, align 4, !dbg !6386
  %call45 = call zeroext i16 @ClampPixel(float %57), !dbg !6387
  %conv46 = uitofp i16 %call45 to float, !dbg !6388
  %green47 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 1, !dbg !6389
  store float %conv46, float* %green47, align 4, !dbg !6390
  %blue48 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 2, !dbg !6391
  %58 = load float, float* %blue48, align 4, !dbg !6391
  %call49 = call zeroext i16 @ClampPixel(float %58), !dbg !6392
  %conv50 = uitofp i16 %call49 to float, !dbg !6393
  %blue51 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 2, !dbg !6394
  store float %conv50, float* %blue51, align 4, !dbg !6395
  %59 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6396
  %associate_alpha52 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %59, i32 0, i32 19, !dbg !6398
  %60 = load i32, i32* %associate_alpha52, align 8, !dbg !6398
  %cmp53 = icmp ne i32 %60, 0, !dbg !6399
  br i1 %cmp53, label %if.then55, label %if.end60, !dbg !6400

if.then55:                                        ; preds = %for.end
  %opacity56 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 3, !dbg !6401
  %61 = load float, float* %opacity56, align 4, !dbg !6401
  %call57 = call zeroext i16 @ClampPixel(float %61), !dbg !6402
  %conv58 = uitofp i16 %call57 to float, !dbg !6403
  %opacity59 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 3, !dbg !6404
  store float %conv58, float* %opacity59, align 4, !dbg !6405
  br label %if.end60, !dbg !6406

if.end60:                                         ; preds = %if.then55, %for.end
  %62 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6407
  %call61 = call i64 @CacheOffset(%struct._CubeInfo* %62, %struct._RealPixelPacket* %pixel), !dbg !6408
  store i64 %call61, i64* %i, align 8, !dbg !6409
  %63 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6410
  %cache = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %63, i32 0, i32 15, !dbg !6412
  %64 = load i64*, i64** %cache, align 8, !dbg !6412
  %65 = load i64, i64* %i, align 8, !dbg !6413
  %arrayidx62 = getelementptr inbounds i64, i64* %64, i64 %65, !dbg !6410
  %66 = load i64, i64* %arrayidx62, align 8, !dbg !6410
  %cmp63 = icmp slt i64 %66, 0, !dbg !6414
  br i1 %cmp63, label %if.then65, label %if.end82, !dbg !6415

if.then65:                                        ; preds = %if.end60
  call void @llvm.dbg.declare(metadata %struct._NodeInfo** %node_info, metadata !6416, metadata !DIExpression()), !dbg !6418
  call void @llvm.dbg.declare(metadata i64* %id, metadata !6419, metadata !DIExpression()), !dbg !6420
  %67 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6421
  %root = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %67, i32 0, i32 0, !dbg !6422
  %68 = load %struct._NodeInfo*, %struct._NodeInfo** %root, align 8, !dbg !6422
  store %struct._NodeInfo* %68, %struct._NodeInfo** %node_info, align 8, !dbg !6423
  store i64 7, i64* %index, align 8, !dbg !6424
  br label %for.cond66, !dbg !6426

for.cond66:                                       ; preds = %for.inc78, %if.then65
  %69 = load i64, i64* %index, align 8, !dbg !6427
  %cmp67 = icmp sgt i64 %69, 0, !dbg !6429
  br i1 %cmp67, label %for.body69, label %for.end79, !dbg !6430

for.body69:                                       ; preds = %for.cond66
  %70 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6431
  %71 = load i64, i64* %index, align 8, !dbg !6433
  %call70 = call i64 @ColorToNodeId(%struct._CubeInfo* %70, %struct._RealPixelPacket* %pixel, i64 %71), !dbg !6434
  store i64 %call70, i64* %id, align 8, !dbg !6435
  %72 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !6436
  %child = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %72, i32 0, i32 1, !dbg !6438
  %73 = load i64, i64* %id, align 8, !dbg !6439
  %arrayidx71 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child, i64 0, i64 %73, !dbg !6436
  %74 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx71, align 8, !dbg !6436
  %cmp72 = icmp eq %struct._NodeInfo* %74, null, !dbg !6440
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !6441

if.then74:                                        ; preds = %for.body69
  br label %for.end79, !dbg !6442

if.end75:                                         ; preds = %for.body69
  %75 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !6443
  %child76 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %75, i32 0, i32 1, !dbg !6444
  %76 = load i64, i64* %id, align 8, !dbg !6445
  %arrayidx77 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child76, i64 0, i64 %76, !dbg !6443
  %77 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx77, align 8, !dbg !6443
  store %struct._NodeInfo* %77, %struct._NodeInfo** %node_info, align 8, !dbg !6446
  br label %for.inc78, !dbg !6447

for.inc78:                                        ; preds = %if.end75
  %78 = load i64, i64* %index, align 8, !dbg !6448
  %dec = add i64 %78, -1, !dbg !6448
  store i64 %dec, i64* %index, align 8, !dbg !6448
  br label %for.cond66, !dbg !6449, !llvm.loop !6450

for.end79:                                        ; preds = %if.then74, %for.cond66
  %79 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6452
  %target = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %79, i32 0, i32 5, !dbg !6453
  %80 = bitcast %struct._RealPixelPacket* %target to i8*, !dbg !6454
  %81 = bitcast %struct._RealPixelPacket* %pixel to i8*, !dbg !6454
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 4 %81, i64 16, i1 false), !dbg !6454
  %82 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6455
  %distance = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %82, i32 0, i32 6, !dbg !6456
  store float 0x4210000000000000, float* %distance, align 8, !dbg !6457
  %83 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6458
  %84 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6459
  %85 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info, align 8, !dbg !6460
  %parent = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %85, i32 0, i32 0, !dbg !6461
  %86 = load %struct._NodeInfo*, %struct._NodeInfo** %parent, align 8, !dbg !6461
  call void @ClosestColor(%struct._Image* %83, %struct._CubeInfo* %84, %struct._NodeInfo* %86), !dbg !6462
  %87 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6463
  %color_number = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %87, i32 0, i32 11, !dbg !6464
  %88 = load i64, i64* %color_number, align 8, !dbg !6464
  %89 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6465
  %cache80 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %89, i32 0, i32 15, !dbg !6466
  %90 = load i64*, i64** %cache80, align 8, !dbg !6466
  %91 = load i64, i64* %i, align 8, !dbg !6467
  %arrayidx81 = getelementptr inbounds i64, i64* %90, i64 %91, !dbg !6465
  store i64 %88, i64* %arrayidx81, align 8, !dbg !6468
  br label %if.end82, !dbg !6469

if.end82:                                         ; preds = %for.end79, %if.end60
  %92 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6470
  %cache83 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %92, i32 0, i32 15, !dbg !6471
  %93 = load i64*, i64** %cache83, align 8, !dbg !6471
  %94 = load i64, i64* %i, align 8, !dbg !6472
  %arrayidx84 = getelementptr inbounds i64, i64* %93, i64 %94, !dbg !6470
  %95 = load i64, i64* %arrayidx84, align 8, !dbg !6470
  %mul85 = mul nsw i64 1, %95, !dbg !6473
  store i64 %mul85, i64* %index, align 8, !dbg !6474
  %96 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6475
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %96, i32 0, i32 0, !dbg !6477
  %97 = load i32, i32* %storage_class, align 8, !dbg !6477
  %cmp86 = icmp eq i32 %97, 2, !dbg !6478
  br i1 %cmp86, label %if.then88, label %if.end90, !dbg !6479

if.then88:                                        ; preds = %if.end82
  %98 = load i64, i64* %index, align 8, !dbg !6480
  %conv89 = trunc i64 %98 to i16, !dbg !6481
  %99 = load i16*, i16** %indexes, align 8, !dbg !6482
  store i16 %conv89, i16* %99, align 2, !dbg !6483
  br label %if.end90, !dbg !6484

if.end90:                                         ; preds = %if.then88, %if.end82
  %100 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6485
  %quantize_info = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %100, i32 0, i32 18, !dbg !6487
  %101 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !6487
  %measure_error = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %101, i32 0, i32 4, !dbg !6488
  %102 = load i32, i32* %measure_error, align 8, !dbg !6488
  %cmp91 = icmp eq i32 %102, 0, !dbg !6489
  br i1 %cmp91, label %if.then93, label %if.end113, !dbg !6490

if.then93:                                        ; preds = %if.end90
  %103 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6491
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %103, i32 0, i32 11, !dbg !6491
  %104 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !6491
  %105 = load i64, i64* %index, align 8, !dbg !6491
  %add.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %104, i64 %105, !dbg !6491
  %red94 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr, i32 0, i32 2, !dbg !6491
  %106 = load i16, i16* %red94, align 2, !dbg !6491
  %107 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6491
  %red95 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %107, i32 0, i32 2, !dbg !6491
  store i16 %106, i16* %red95, align 2, !dbg !6491
  %108 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6491
  %colormap96 = getelementptr inbounds %struct._Image, %struct._Image* %108, i32 0, i32 11, !dbg !6491
  %109 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap96, align 8, !dbg !6491
  %110 = load i64, i64* %index, align 8, !dbg !6491
  %add.ptr97 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %109, i64 %110, !dbg !6491
  %green98 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr97, i32 0, i32 1, !dbg !6491
  %111 = load i16, i16* %green98, align 2, !dbg !6491
  %112 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6491
  %green99 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %112, i32 0, i32 1, !dbg !6491
  store i16 %111, i16* %green99, align 2, !dbg !6491
  %113 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6491
  %colormap100 = getelementptr inbounds %struct._Image, %struct._Image* %113, i32 0, i32 11, !dbg !6491
  %114 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap100, align 8, !dbg !6491
  %115 = load i64, i64* %index, align 8, !dbg !6491
  %add.ptr101 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %114, i64 %115, !dbg !6491
  %blue102 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr101, i32 0, i32 0, !dbg !6491
  %116 = load i16, i16* %blue102, align 2, !dbg !6491
  %117 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6491
  %blue103 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %117, i32 0, i32 0, !dbg !6491
  store i16 %116, i16* %blue103, align 2, !dbg !6491
  %118 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6494
  %associate_alpha104 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %118, i32 0, i32 19, !dbg !6496
  %119 = load i32, i32* %associate_alpha104, align 8, !dbg !6496
  %cmp105 = icmp ne i32 %119, 0, !dbg !6497
  br i1 %cmp105, label %if.then107, label %if.end112, !dbg !6498

if.then107:                                       ; preds = %if.then93
  %120 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6499
  %colormap108 = getelementptr inbounds %struct._Image, %struct._Image* %120, i32 0, i32 11, !dbg !6499
  %121 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap108, align 8, !dbg !6499
  %122 = load i64, i64* %index, align 8, !dbg !6499
  %arrayidx109 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %121, i64 %122, !dbg !6499
  %opacity110 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx109, i32 0, i32 3, !dbg !6499
  %123 = load i16, i16* %opacity110, align 2, !dbg !6499
  %124 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6499
  %opacity111 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %124, i32 0, i32 3, !dbg !6499
  store i16 %123, i16* %opacity111, align 2, !dbg !6499
  br label %if.end112, !dbg !6499

if.end112:                                        ; preds = %if.then107, %if.then93
  br label %if.end113, !dbg !6500

if.end113:                                        ; preds = %if.end112, %if.end90
  %125 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6501
  %126 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6503
  %call114 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %125, %struct._ExceptionInfo* %126), !dbg !6504
  %cmp115 = icmp eq i32 %call114, 0, !dbg !6505
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !6506

if.then117:                                       ; preds = %if.end113
  store i32 0, i32* %retval, align 4, !dbg !6507
  br label %return, !dbg !6507

if.end118:                                        ; preds = %if.end113
  %127 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6508
  %error119 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %127, i32 0, i32 16, !dbg !6509
  %arraydecay = getelementptr inbounds [16 x %struct._RealPixelPacket], [16 x %struct._RealPixelPacket]* %error119, i64 0, i64 0, !dbg !6508
  %128 = bitcast %struct._RealPixelPacket* %arraydecay to i8*, !dbg !6508
  %129 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6510
  %error120 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %129, i32 0, i32 16, !dbg !6511
  %arraydecay121 = getelementptr inbounds [16 x %struct._RealPixelPacket], [16 x %struct._RealPixelPacket]* %error120, i64 0, i64 0, !dbg !6510
  %add.ptr122 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arraydecay121, i64 1, !dbg !6512
  %130 = bitcast %struct._RealPixelPacket* %add.ptr122 to i8*, !dbg !6510
  %call123 = call i8* @CopyMagickMemory(i8* %128, i8* %130, i64 240), !dbg !6513
  %131 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6514
  %132 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6515
  %colormap124 = getelementptr inbounds %struct._Image, %struct._Image* %132, i32 0, i32 11, !dbg !6516
  %133 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap124, align 8, !dbg !6516
  %134 = load i64, i64* %index, align 8, !dbg !6517
  %add.ptr125 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %133, i64 %134, !dbg !6518
  call void @AssociateAlphaPixel(%struct._CubeInfo* %131, %struct._PixelPacket* %add.ptr125, %struct._RealPixelPacket* %color), !dbg !6519
  %red126 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 0, !dbg !6520
  %135 = load float, float* %red126, align 4, !dbg !6520
  %red127 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %color, i32 0, i32 0, !dbg !6521
  %136 = load float, float* %red127, align 4, !dbg !6521
  %sub = fsub float %135, %136, !dbg !6522
  %137 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6523
  %error128 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %137, i32 0, i32 16, !dbg !6524
  %arrayidx129 = getelementptr inbounds [16 x %struct._RealPixelPacket], [16 x %struct._RealPixelPacket]* %error128, i64 0, i64 15, !dbg !6523
  %red130 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx129, i32 0, i32 0, !dbg !6525
  store float %sub, float* %red130, align 8, !dbg !6526
  %green131 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 1, !dbg !6527
  %138 = load float, float* %green131, align 4, !dbg !6527
  %green132 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %color, i32 0, i32 1, !dbg !6528
  %139 = load float, float* %green132, align 4, !dbg !6528
  %sub133 = fsub float %138, %139, !dbg !6529
  %140 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6530
  %error134 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %140, i32 0, i32 16, !dbg !6531
  %arrayidx135 = getelementptr inbounds [16 x %struct._RealPixelPacket], [16 x %struct._RealPixelPacket]* %error134, i64 0, i64 15, !dbg !6530
  %green136 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx135, i32 0, i32 1, !dbg !6532
  store float %sub133, float* %green136, align 4, !dbg !6533
  %blue137 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 2, !dbg !6534
  %141 = load float, float* %blue137, align 4, !dbg !6534
  %blue138 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %color, i32 0, i32 2, !dbg !6535
  %142 = load float, float* %blue138, align 4, !dbg !6535
  %sub139 = fsub float %141, %142, !dbg !6536
  %143 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6537
  %error140 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %143, i32 0, i32 16, !dbg !6538
  %arrayidx141 = getelementptr inbounds [16 x %struct._RealPixelPacket], [16 x %struct._RealPixelPacket]* %error140, i64 0, i64 15, !dbg !6537
  %blue142 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx141, i32 0, i32 2, !dbg !6539
  store float %sub139, float* %blue142, align 8, !dbg !6540
  %144 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6541
  %associate_alpha143 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %144, i32 0, i32 19, !dbg !6543
  %145 = load i32, i32* %associate_alpha143, align 8, !dbg !6543
  %cmp144 = icmp ne i32 %145, 0, !dbg !6544
  br i1 %cmp144, label %if.then146, label %if.end153, !dbg !6545

if.then146:                                       ; preds = %if.end118
  %opacity147 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %pixel, i32 0, i32 3, !dbg !6546
  %146 = load float, float* %opacity147, align 4, !dbg !6546
  %opacity148 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %color, i32 0, i32 3, !dbg !6547
  %147 = load float, float* %opacity148, align 4, !dbg !6547
  %sub149 = fsub float %146, %147, !dbg !6548
  %148 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6549
  %error150 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %148, i32 0, i32 16, !dbg !6550
  %arrayidx151 = getelementptr inbounds [16 x %struct._RealPixelPacket], [16 x %struct._RealPixelPacket]* %error150, i64 0, i64 15, !dbg !6549
  %opacity152 = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %arrayidx151, i32 0, i32 3, !dbg !6551
  store float %sub149, float* %opacity152, align 4, !dbg !6552
  br label %if.end153, !dbg !6549

if.end153:                                        ; preds = %if.then146, %if.end118
  %149 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6553
  %150 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6554
  %offset = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %150, i32 0, i32 23, !dbg !6555
  %151 = load i64, i64* %offset, align 8, !dbg !6555
  %152 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6556
  %span = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %152, i32 0, i32 24, !dbg !6557
  %153 = load i64, i64* %span, align 8, !dbg !6557
  %call154 = call i32 @SetImageProgress(%struct._Image* %149, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i64 %151, i64 %153), !dbg !6558
  store i32 %call154, i32* %proceed, align 4, !dbg !6559
  %154 = load i32, i32* %proceed, align 4, !dbg !6560
  %cmp155 = icmp eq i32 %154, 0, !dbg !6562
  br i1 %cmp155, label %if.then157, label %if.end158, !dbg !6563

if.then157:                                       ; preds = %if.end153
  store i32 0, i32* %retval, align 4, !dbg !6564
  br label %return, !dbg !6564

if.end158:                                        ; preds = %if.end153
  %155 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6565
  %offset159 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %155, i32 0, i32 23, !dbg !6566
  %156 = load i64, i64* %offset159, align 8, !dbg !6567
  %inc160 = add nsw i64 %156, 1, !dbg !6567
  store i64 %inc160, i64* %offset159, align 8, !dbg !6567
  br label %if.end161, !dbg !6568

if.end161:                                        ; preds = %if.end158, %land.lhs.true5, %land.lhs.true3, %land.lhs.true, %entry
  %157 = load i32, i32* %direction.addr, align 4, !dbg !6569
  switch i32 %157, label %sw.epilog [
    i32 4, label %sw.bb
    i32 6, label %sw.bb164
    i32 2, label %sw.bb167
    i32 8, label %sw.bb170
  ], !dbg !6570

sw.bb:                                            ; preds = %if.end161
  %158 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6571
  %x162 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %158, i32 0, i32 20, !dbg !6573
  %159 = load i64, i64* %x162, align 8, !dbg !6574
  %dec163 = add nsw i64 %159, -1, !dbg !6574
  store i64 %dec163, i64* %x162, align 8, !dbg !6574
  br label %sw.epilog, !dbg !6575

sw.bb164:                                         ; preds = %if.end161
  %160 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6576
  %x165 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %160, i32 0, i32 20, !dbg !6577
  %161 = load i64, i64* %x165, align 8, !dbg !6578
  %inc166 = add nsw i64 %161, 1, !dbg !6578
  store i64 %inc166, i64* %x165, align 8, !dbg !6578
  br label %sw.epilog, !dbg !6579

sw.bb167:                                         ; preds = %if.end161
  %162 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6580
  %y168 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %162, i32 0, i32 21, !dbg !6581
  %163 = load i64, i64* %y168, align 8, !dbg !6582
  %dec169 = add nsw i64 %163, -1, !dbg !6582
  store i64 %dec169, i64* %y168, align 8, !dbg !6582
  br label %sw.epilog, !dbg !6583

sw.bb170:                                         ; preds = %if.end161
  %164 = load %struct._CubeInfo*, %struct._CubeInfo** %p, align 8, !dbg !6584
  %y171 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %164, i32 0, i32 21, !dbg !6585
  %165 = load i64, i64* %y171, align 8, !dbg !6586
  %inc172 = add nsw i64 %165, 1, !dbg !6586
  store i64 %inc172, i64* %y171, align 8, !dbg !6586
  br label %sw.epilog, !dbg !6587

sw.epilog:                                        ; preds = %if.end161, %sw.bb170, %sw.bb167, %sw.bb164, %sw.bb
  store i32 1, i32* %retval, align 4, !dbg !6588
  br label %return, !dbg !6588

return:                                           ; preds = %sw.epilog, %if.then157, %if.then117, %if.then12
  %166 = load i32, i32* %retval, align 4, !dbg !6589
  ret i32 %166, !dbg !6589
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._RealPixelPacket** @AcquirePixelThreadSet(i64 %count) #0 !dbg !6590 {
entry:
  %retval = alloca %struct._RealPixelPacket**, align 8
  %count.addr = alloca i64, align 8
  %pixels = alloca %struct._RealPixelPacket**, align 8
  %i = alloca i64, align 8
  %number_threads = alloca i64, align 8
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !6593, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.declare(metadata %struct._RealPixelPacket*** %pixels, metadata !6595, metadata !DIExpression()), !dbg !6596
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6597, metadata !DIExpression()), !dbg !6598
  call void @llvm.dbg.declare(metadata i64* %number_threads, metadata !6599, metadata !DIExpression()), !dbg !6600
  %call = call i64 @GetMagickResourceLimit(i32 6), !dbg !6601
  store i64 %call, i64* %number_threads, align 8, !dbg !6602
  %0 = load i64, i64* %number_threads, align 8, !dbg !6603
  %call1 = call i8* @AcquireQuantumMemory(i64 %0, i64 8) #12, !dbg !6604
  %1 = bitcast i8* %call1 to %struct._RealPixelPacket**, !dbg !6605
  store %struct._RealPixelPacket** %1, %struct._RealPixelPacket*** %pixels, align 8, !dbg !6606
  %2 = load %struct._RealPixelPacket**, %struct._RealPixelPacket*** %pixels, align 8, !dbg !6607
  %cmp = icmp eq %struct._RealPixelPacket** %2, null, !dbg !6609
  br i1 %cmp, label %if.then, label %if.end, !dbg !6610

if.then:                                          ; preds = %entry
  store %struct._RealPixelPacket** null, %struct._RealPixelPacket*** %retval, align 8, !dbg !6611
  br label %return, !dbg !6611

if.end:                                           ; preds = %entry
  %3 = load %struct._RealPixelPacket**, %struct._RealPixelPacket*** %pixels, align 8, !dbg !6612
  %4 = bitcast %struct._RealPixelPacket** %3 to i8*, !dbg !6612
  %5 = load i64, i64* %number_threads, align 8, !dbg !6613
  %mul = mul i64 %5, 8, !dbg !6614
  %call2 = call i8* @ResetMagickMemory(i8* %4, i32 0, i64 %mul), !dbg !6615
  store i64 0, i64* %i, align 8, !dbg !6616
  br label %for.cond, !dbg !6618

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i64, i64* %i, align 8, !dbg !6619
  %7 = load i64, i64* %number_threads, align 8, !dbg !6621
  %cmp3 = icmp slt i64 %6, %7, !dbg !6622
  br i1 %cmp3, label %for.body, label %for.end, !dbg !6623

for.body:                                         ; preds = %for.cond
  %8 = load i64, i64* %count.addr, align 8, !dbg !6624
  %call4 = call i8* @AcquireQuantumMemory(i64 %8, i64 32) #12, !dbg !6626
  %9 = bitcast i8* %call4 to %struct._RealPixelPacket*, !dbg !6627
  %10 = load %struct._RealPixelPacket**, %struct._RealPixelPacket*** %pixels, align 8, !dbg !6628
  %11 = load i64, i64* %i, align 8, !dbg !6629
  %arrayidx = getelementptr inbounds %struct._RealPixelPacket*, %struct._RealPixelPacket** %10, i64 %11, !dbg !6628
  store %struct._RealPixelPacket* %9, %struct._RealPixelPacket** %arrayidx, align 8, !dbg !6630
  %12 = load %struct._RealPixelPacket**, %struct._RealPixelPacket*** %pixels, align 8, !dbg !6631
  %13 = load i64, i64* %i, align 8, !dbg !6633
  %arrayidx5 = getelementptr inbounds %struct._RealPixelPacket*, %struct._RealPixelPacket** %12, i64 %13, !dbg !6631
  %14 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %arrayidx5, align 8, !dbg !6631
  %cmp6 = icmp eq %struct._RealPixelPacket* %14, null, !dbg !6634
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !6635

if.then7:                                         ; preds = %for.body
  %15 = load %struct._RealPixelPacket**, %struct._RealPixelPacket*** %pixels, align 8, !dbg !6636
  %call8 = call %struct._RealPixelPacket** @DestroyPixelThreadSet(%struct._RealPixelPacket** %15), !dbg !6637
  store %struct._RealPixelPacket** %call8, %struct._RealPixelPacket*** %retval, align 8, !dbg !6638
  br label %return, !dbg !6638

if.end9:                                          ; preds = %for.body
  br label %for.inc, !dbg !6639

for.inc:                                          ; preds = %if.end9
  %16 = load i64, i64* %i, align 8, !dbg !6640
  %inc = add nsw i64 %16, 1, !dbg !6640
  store i64 %inc, i64* %i, align 8, !dbg !6640
  br label %for.cond, !dbg !6641, !llvm.loop !6642

for.end:                                          ; preds = %for.cond
  %17 = load %struct._RealPixelPacket**, %struct._RealPixelPacket*** %pixels, align 8, !dbg !6644
  store %struct._RealPixelPacket** %17, %struct._RealPixelPacket*** %retval, align 8, !dbg !6645
  br label %return, !dbg !6645

return:                                           ; preds = %for.end, %if.then7, %if.then
  %18 = load %struct._RealPixelPacket**, %struct._RealPixelPacket*** %retval, align 8, !dbg !6646
  ret %struct._RealPixelPacket** %18, !dbg !6646
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @GetOpenMPThreadId() #0 !dbg !6647 {
entry:
  ret i32 0, !dbg !6651
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @CacheOffset(%struct._CubeInfo* %cube_info, %struct._RealPixelPacket* %pixel) #0 !dbg !6652 {
entry:
  %cube_info.addr = alloca %struct._CubeInfo*, align 8
  %pixel.addr = alloca %struct._RealPixelPacket*, align 8
  %offset = alloca i64, align 8
  store %struct._CubeInfo* %cube_info, %struct._CubeInfo** %cube_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info.addr, metadata !6655, metadata !DIExpression()), !dbg !6656
  store %struct._RealPixelPacket* %pixel, %struct._RealPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RealPixelPacket** %pixel.addr, metadata !6657, metadata !DIExpression()), !dbg !6658
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !6659, metadata !DIExpression()), !dbg !6660
  %0 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %pixel.addr, align 8, !dbg !6661
  %red = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %0, i32 0, i32 0, !dbg !6661
  %1 = load float, float* %red, align 4, !dbg !6661
  %call = call zeroext i16 @ClampPixel(float %1), !dbg !6661
  %call1 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %call), !dbg !6661
  %conv = zext i8 %call1 to i32, !dbg !6661
  %shr = ashr i32 %conv, 2, !dbg !6661
  %shl = shl i32 %shr, 0, !dbg !6661
  %2 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %pixel.addr, align 8, !dbg !6662
  %green = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %2, i32 0, i32 1, !dbg !6662
  %3 = load float, float* %green, align 4, !dbg !6662
  %call2 = call zeroext i16 @ClampPixel(float %3), !dbg !6662
  %call3 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %call2), !dbg !6662
  %conv4 = zext i8 %call3 to i32, !dbg !6662
  %shr5 = ashr i32 %conv4, 2, !dbg !6662
  %shl6 = shl i32 %shr5, 6, !dbg !6662
  %or = or i32 %shl, %shl6, !dbg !6663
  %4 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %pixel.addr, align 8, !dbg !6664
  %blue = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %4, i32 0, i32 2, !dbg !6664
  %5 = load float, float* %blue, align 4, !dbg !6664
  %call7 = call zeroext i16 @ClampPixel(float %5), !dbg !6664
  %call8 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %call7), !dbg !6664
  %conv9 = zext i8 %call8 to i32, !dbg !6664
  %shr10 = ashr i32 %conv9, 2, !dbg !6664
  %shl11 = shl i32 %shr10, 12, !dbg !6664
  %or12 = or i32 %or, %shl11, !dbg !6665
  %conv13 = sext i32 %or12 to i64, !dbg !6666
  store i64 %conv13, i64* %offset, align 8, !dbg !6667
  %6 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6668
  %associate_alpha = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %6, i32 0, i32 19, !dbg !6670
  %7 = load i32, i32* %associate_alpha, align 8, !dbg !6670
  %cmp = icmp ne i32 %7, 0, !dbg !6671
  br i1 %cmp, label %if.then, label %if.end, !dbg !6672

if.then:                                          ; preds = %entry
  %8 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %pixel.addr, align 8, !dbg !6673
  %opacity = getelementptr inbounds %struct._RealPixelPacket, %struct._RealPixelPacket* %8, i32 0, i32 3, !dbg !6673
  %9 = load float, float* %opacity, align 4, !dbg !6673
  %call15 = call zeroext i16 @ClampPixel(float %9), !dbg !6673
  %call16 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %call15), !dbg !6673
  %conv17 = zext i8 %call16 to i32, !dbg !6673
  %shr18 = ashr i32 %conv17, 2, !dbg !6673
  %shl19 = shl i32 %shr18, 18, !dbg !6673
  %conv20 = sext i32 %shl19 to i64, !dbg !6673
  %10 = load i64, i64* %offset, align 8, !dbg !6674
  %or21 = or i64 %10, %conv20, !dbg !6674
  store i64 %or21, i64* %offset, align 8, !dbg !6674
  br label %if.end, !dbg !6675

if.end:                                           ; preds = %if.then, %entry
  %11 = load i64, i64* %offset, align 8, !dbg !6676
  ret i64 %11, !dbg !6677
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._RealPixelPacket** @DestroyPixelThreadSet(%struct._RealPixelPacket** %pixels) #0 !dbg !6678 {
entry:
  %pixels.addr = alloca %struct._RealPixelPacket**, align 8
  %i = alloca i64, align 8
  store %struct._RealPixelPacket** %pixels, %struct._RealPixelPacket*** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RealPixelPacket*** %pixels.addr, metadata !6681, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6683, metadata !DIExpression()), !dbg !6684
  store i64 0, i64* %i, align 8, !dbg !6685
  br label %for.cond, !dbg !6687

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !6688
  %call = call i64 @GetMagickResourceLimit(i32 6), !dbg !6690
  %cmp = icmp slt i64 %0, %call, !dbg !6691
  br i1 %cmp, label %for.body, label %for.end, !dbg !6692

for.body:                                         ; preds = %for.cond
  %1 = load %struct._RealPixelPacket**, %struct._RealPixelPacket*** %pixels.addr, align 8, !dbg !6693
  %2 = load i64, i64* %i, align 8, !dbg !6695
  %arrayidx = getelementptr inbounds %struct._RealPixelPacket*, %struct._RealPixelPacket** %1, i64 %2, !dbg !6693
  %3 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %arrayidx, align 8, !dbg !6693
  %cmp1 = icmp ne %struct._RealPixelPacket* %3, null, !dbg !6696
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6697

if.then:                                          ; preds = %for.body
  %4 = load %struct._RealPixelPacket**, %struct._RealPixelPacket*** %pixels.addr, align 8, !dbg !6698
  %5 = load i64, i64* %i, align 8, !dbg !6699
  %arrayidx2 = getelementptr inbounds %struct._RealPixelPacket*, %struct._RealPixelPacket** %4, i64 %5, !dbg !6698
  %6 = load %struct._RealPixelPacket*, %struct._RealPixelPacket** %arrayidx2, align 8, !dbg !6698
  %7 = bitcast %struct._RealPixelPacket* %6 to i8*, !dbg !6698
  %call3 = call i8* @RelinquishMagickMemory(i8* %7), !dbg !6700
  %8 = bitcast i8* %call3 to %struct._RealPixelPacket*, !dbg !6701
  %9 = load %struct._RealPixelPacket**, %struct._RealPixelPacket*** %pixels.addr, align 8, !dbg !6702
  %10 = load i64, i64* %i, align 8, !dbg !6703
  %arrayidx4 = getelementptr inbounds %struct._RealPixelPacket*, %struct._RealPixelPacket** %9, i64 %10, !dbg !6702
  store %struct._RealPixelPacket* %8, %struct._RealPixelPacket** %arrayidx4, align 8, !dbg !6704
  br label %if.end, !dbg !6702

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6705

for.inc:                                          ; preds = %if.end
  %11 = load i64, i64* %i, align 8, !dbg !6706
  %inc = add nsw i64 %11, 1, !dbg !6706
  store i64 %inc, i64* %i, align 8, !dbg !6706
  br label %for.cond, !dbg !6707, !llvm.loop !6708

for.end:                                          ; preds = %for.cond
  %12 = load %struct._RealPixelPacket**, %struct._RealPixelPacket*** %pixels.addr, align 8, !dbg !6710
  %13 = bitcast %struct._RealPixelPacket** %12 to i8*, !dbg !6710
  %call5 = call i8* @RelinquishMagickMemory(i8* %13), !dbg !6711
  %14 = bitcast i8* %call5 to %struct._RealPixelPacket**, !dbg !6712
  store %struct._RealPixelPacket** %14, %struct._RealPixelPacket*** %pixels.addr, align 8, !dbg !6713
  %15 = load %struct._RealPixelPacket**, %struct._RealPixelPacket*** %pixels.addr, align 8, !dbg !6714
  ret %struct._RealPixelPacket** %15, !dbg !6715
}

declare dso_local i64 @GetMagickResourceLimit(i32) #3

declare dso_local i8* @CopyMagickMemory(i8*, i8*, i64) #3

declare dso_local %struct._MemoryInfo* @RelinquishVirtualMemory(%struct._MemoryInfo*) #3

; Function Attrs: noinline nounwind uwtable
define internal i64 @QuantizeErrorFlatten(%struct._Image* %image, %struct._CubeInfo* %cube_info, %struct._NodeInfo* %node_info, i64 %offset, float* %quantize_error) #0 !dbg !6716 {
entry:
  %retval = alloca i64, align 8
  %image.addr = alloca %struct._Image*, align 8
  %cube_info.addr = alloca %struct._CubeInfo*, align 8
  %node_info.addr = alloca %struct._NodeInfo*, align 8
  %offset.addr = alloca i64, align 8
  %quantize_error.addr = alloca float*, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %number_children = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6719, metadata !DIExpression()), !dbg !6720
  store %struct._CubeInfo* %cube_info, %struct._CubeInfo** %cube_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info.addr, metadata !6721, metadata !DIExpression()), !dbg !6722
  store %struct._NodeInfo* %node_info, %struct._NodeInfo** %node_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._NodeInfo** %node_info.addr, metadata !6723, metadata !DIExpression()), !dbg !6724
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !6725, metadata !DIExpression()), !dbg !6726
  store float* %quantize_error, float** %quantize_error.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quantize_error.addr, metadata !6727, metadata !DIExpression()), !dbg !6728
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6729, metadata !DIExpression()), !dbg !6730
  call void @llvm.dbg.declare(metadata i64* %n, metadata !6731, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.declare(metadata i64* %number_children, metadata !6733, metadata !DIExpression()), !dbg !6734
  %0 = load i64, i64* %offset.addr, align 8, !dbg !6735
  %1 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6737
  %nodes = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %1, i32 0, i32 9, !dbg !6738
  %2 = load i64, i64* %nodes, align 8, !dbg !6738
  %cmp = icmp sge i64 %0, %2, !dbg !6739
  br i1 %cmp, label %if.then, label %if.end, !dbg !6740

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !6741
  br label %return, !dbg !6741

if.end:                                           ; preds = %entry
  %3 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !6742
  %quantize_error1 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %3, i32 0, i32 4, !dbg !6743
  %4 = load float, float* %quantize_error1, align 8, !dbg !6743
  %5 = load float*, float** %quantize_error.addr, align 8, !dbg !6744
  %6 = load i64, i64* %offset.addr, align 8, !dbg !6745
  %arrayidx = getelementptr inbounds float, float* %5, i64 %6, !dbg !6744
  store float %4, float* %arrayidx, align 4, !dbg !6746
  store i64 1, i64* %n, align 8, !dbg !6747
  %7 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6748
  %associate_alpha = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %7, i32 0, i32 19, !dbg !6749
  %8 = load i32, i32* %associate_alpha, align 8, !dbg !6749
  %cmp2 = icmp eq i32 %8, 0, !dbg !6750
  %9 = zext i1 %cmp2 to i64, !dbg !6748
  %cond = select i1 %cmp2, i64 8, i64 16, !dbg !6748
  store i64 %cond, i64* %number_children, align 8, !dbg !6751
  store i64 0, i64* %i, align 8, !dbg !6752
  br label %for.cond, !dbg !6754

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i64, i64* %i, align 8, !dbg !6755
  %11 = load i64, i64* %number_children, align 8, !dbg !6757
  %cmp3 = icmp slt i64 %10, %11, !dbg !6758
  br i1 %cmp3, label %for.body, label %for.end, !dbg !6759

for.body:                                         ; preds = %for.cond
  %12 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !6760
  %child = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %12, i32 0, i32 1, !dbg !6762
  %13 = load i64, i64* %i, align 8, !dbg !6763
  %arrayidx4 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child, i64 0, i64 %13, !dbg !6760
  %14 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx4, align 8, !dbg !6760
  %cmp5 = icmp ne %struct._NodeInfo* %14, null, !dbg !6764
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !6765

if.then6:                                         ; preds = %for.body
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6766
  %16 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6767
  %17 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !6768
  %child7 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %17, i32 0, i32 1, !dbg !6769
  %18 = load i64, i64* %i, align 8, !dbg !6770
  %arrayidx8 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child7, i64 0, i64 %18, !dbg !6768
  %19 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx8, align 8, !dbg !6768
  %20 = load i64, i64* %offset.addr, align 8, !dbg !6771
  %21 = load i64, i64* %n, align 8, !dbg !6772
  %add = add i64 %20, %21, !dbg !6773
  %22 = load float*, float** %quantize_error.addr, align 8, !dbg !6774
  %call = call i64 @QuantizeErrorFlatten(%struct._Image* %15, %struct._CubeInfo* %16, %struct._NodeInfo* %19, i64 %add, float* %22), !dbg !6775
  %23 = load i64, i64* %n, align 8, !dbg !6776
  %add9 = add i64 %23, %call, !dbg !6776
  store i64 %add9, i64* %n, align 8, !dbg !6776
  br label %if.end10, !dbg !6777

if.end10:                                         ; preds = %if.then6, %for.body
  br label %for.inc, !dbg !6778

for.inc:                                          ; preds = %if.end10
  %24 = load i64, i64* %i, align 8, !dbg !6779
  %inc = add nsw i64 %24, 1, !dbg !6779
  store i64 %inc, i64* %i, align 8, !dbg !6779
  br label %for.cond, !dbg !6780, !llvm.loop !6781

for.end:                                          ; preds = %for.cond
  %25 = load i64, i64* %n, align 8, !dbg !6783
  store i64 %25, i64* %retval, align 8, !dbg !6784
  br label %return, !dbg !6784

return:                                           ; preds = %for.end, %if.then
  %26 = load i64, i64* %retval, align 8, !dbg !6785
  ret i64 %26, !dbg !6785
}

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @MagickRealTypeCompare(i8* %error_p, i8* %error_q) #0 !dbg !6786 {
entry:
  %retval = alloca i32, align 4
  %error_p.addr = alloca i8*, align 8
  %error_q.addr = alloca i8*, align 8
  %p = alloca float*, align 8
  %q = alloca float*, align 8
  store i8* %error_p, i8** %error_p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %error_p.addr, metadata !6789, metadata !DIExpression()), !dbg !6790
  store i8* %error_q, i8** %error_q.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %error_q.addr, metadata !6791, metadata !DIExpression()), !dbg !6792
  call void @llvm.dbg.declare(metadata float** %p, metadata !6793, metadata !DIExpression()), !dbg !6794
  call void @llvm.dbg.declare(metadata float** %q, metadata !6795, metadata !DIExpression()), !dbg !6796
  %0 = load i8*, i8** %error_p.addr, align 8, !dbg !6797
  %1 = bitcast i8* %0 to float*, !dbg !6798
  store float* %1, float** %p, align 8, !dbg !6799
  %2 = load i8*, i8** %error_q.addr, align 8, !dbg !6800
  %3 = bitcast i8* %2 to float*, !dbg !6801
  store float* %3, float** %q, align 8, !dbg !6802
  %4 = load float*, float** %p, align 8, !dbg !6803
  %5 = load float, float* %4, align 4, !dbg !6805
  %6 = load float*, float** %q, align 8, !dbg !6806
  %7 = load float, float* %6, align 4, !dbg !6807
  %cmp = fcmp ogt float %5, %7, !dbg !6808
  br i1 %cmp, label %if.then, label %if.end, !dbg !6809

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !6810
  br label %return, !dbg !6810

if.end:                                           ; preds = %entry
  %8 = load float*, float** %q, align 8, !dbg !6811
  %9 = load float, float* %8, align 4, !dbg !6813
  %10 = load float*, float** %p, align 8, !dbg !6814
  %11 = load float, float* %10, align 4, !dbg !6815
  %sub = fsub float %9, %11, !dbg !6816
  %conv = fpext float %sub to double, !dbg !6817
  %12 = call double @llvm.fabs.f64(double %conv), !dbg !6818
  %cmp1 = fcmp ole double %12, 1.000000e-15, !dbg !6819
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !6820

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6821
  br label %return, !dbg !6821

if.end4:                                          ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !6822
  br label %return, !dbg !6822

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !6823
  ret i32 %13, !dbg !6823
}

; Function Attrs: noinline nounwind uwtable
define internal void @Reduce(%struct._Image* %image, %struct._CubeInfo* %cube_info, %struct._NodeInfo* %node_info) #0 !dbg !6824 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %cube_info.addr = alloca %struct._CubeInfo*, align 8
  %node_info.addr = alloca %struct._NodeInfo*, align 8
  %i = alloca i64, align 8
  %number_children = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6825, metadata !DIExpression()), !dbg !6826
  store %struct._CubeInfo* %cube_info, %struct._CubeInfo** %cube_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CubeInfo** %cube_info.addr, metadata !6827, metadata !DIExpression()), !dbg !6828
  store %struct._NodeInfo* %node_info, %struct._NodeInfo** %node_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._NodeInfo** %node_info.addr, metadata !6829, metadata !DIExpression()), !dbg !6830
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6831, metadata !DIExpression()), !dbg !6832
  call void @llvm.dbg.declare(metadata i64* %number_children, metadata !6833, metadata !DIExpression()), !dbg !6834
  %0 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6835
  %associate_alpha = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %0, i32 0, i32 19, !dbg !6836
  %1 = load i32, i32* %associate_alpha, align 8, !dbg !6836
  %cmp = icmp eq i32 %1, 0, !dbg !6837
  %2 = zext i1 %cmp to i64, !dbg !6835
  %cond = select i1 %cmp, i64 8, i64 16, !dbg !6835
  store i64 %cond, i64* %number_children, align 8, !dbg !6838
  store i64 0, i64* %i, align 8, !dbg !6839
  br label %for.cond, !dbg !6841

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i64, i64* %i, align 8, !dbg !6842
  %4 = load i64, i64* %number_children, align 8, !dbg !6844
  %cmp1 = icmp slt i64 %3, %4, !dbg !6845
  br i1 %cmp1, label %for.body, label %for.end, !dbg !6846

for.body:                                         ; preds = %for.cond
  %5 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !6847
  %child = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %5, i32 0, i32 1, !dbg !6849
  %6 = load i64, i64* %i, align 8, !dbg !6850
  %arrayidx = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child, i64 0, i64 %6, !dbg !6847
  %7 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx, align 8, !dbg !6847
  %cmp2 = icmp ne %struct._NodeInfo* %7, null, !dbg !6851
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6852

if.then:                                          ; preds = %for.body
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6853
  %9 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6854
  %10 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !6855
  %child3 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %10, i32 0, i32 1, !dbg !6856
  %11 = load i64, i64* %i, align 8, !dbg !6857
  %arrayidx4 = getelementptr inbounds [16 x %struct._NodeInfo*], [16 x %struct._NodeInfo*]* %child3, i64 0, i64 %11, !dbg !6855
  %12 = load %struct._NodeInfo*, %struct._NodeInfo** %arrayidx4, align 8, !dbg !6855
  call void @Reduce(%struct._Image* %8, %struct._CubeInfo* %9, %struct._NodeInfo* %12), !dbg !6858
  br label %if.end, !dbg !6858

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6859

for.inc:                                          ; preds = %if.end
  %13 = load i64, i64* %i, align 8, !dbg !6860
  %inc = add nsw i64 %13, 1, !dbg !6860
  store i64 %inc, i64* %i, align 8, !dbg !6860
  br label %for.cond, !dbg !6861, !llvm.loop !6862

for.end:                                          ; preds = %for.cond
  %14 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !6864
  %quantize_error = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %14, i32 0, i32 4, !dbg !6866
  %15 = load float, float* %quantize_error, align 8, !dbg !6866
  %16 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6867
  %pruning_threshold = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %16, i32 0, i32 7, !dbg !6868
  %17 = load float, float* %pruning_threshold, align 4, !dbg !6868
  %cmp5 = fcmp ole float %15, %17, !dbg !6869
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !6870

if.then6:                                         ; preds = %for.end
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6871
  %19 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6872
  %20 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !6873
  call void @PruneChild(%struct._Image* %18, %struct._CubeInfo* %19, %struct._NodeInfo* %20), !dbg !6874
  br label %if.end17, !dbg !6874

if.else:                                          ; preds = %for.end
  %21 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !6875
  %number_unique = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %21, i32 0, i32 2, !dbg !6878
  %22 = load i64, i64* %number_unique, align 8, !dbg !6878
  %cmp7 = icmp ugt i64 %22, 0, !dbg !6879
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !6880

if.then8:                                         ; preds = %if.else
  %23 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6881
  %colors = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %23, i32 0, i32 1, !dbg !6882
  %24 = load i64, i64* %colors, align 8, !dbg !6883
  %inc9 = add i64 %24, 1, !dbg !6883
  store i64 %inc9, i64* %colors, align 8, !dbg !6883
  br label %if.end10, !dbg !6881

if.end10:                                         ; preds = %if.then8, %if.else
  %25 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !6884
  %quantize_error11 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %25, i32 0, i32 4, !dbg !6886
  %26 = load float, float* %quantize_error11, align 8, !dbg !6886
  %27 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6887
  %next_threshold = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %27, i32 0, i32 8, !dbg !6888
  %28 = load float, float* %next_threshold, align 8, !dbg !6888
  %cmp12 = fcmp olt float %26, %28, !dbg !6889
  br i1 %cmp12, label %if.then13, label %if.end16, !dbg !6890

if.then13:                                        ; preds = %if.end10
  %29 = load %struct._NodeInfo*, %struct._NodeInfo** %node_info.addr, align 8, !dbg !6891
  %quantize_error14 = getelementptr inbounds %struct._NodeInfo, %struct._NodeInfo* %29, i32 0, i32 4, !dbg !6892
  %30 = load float, float* %quantize_error14, align 8, !dbg !6892
  %31 = load %struct._CubeInfo*, %struct._CubeInfo** %cube_info.addr, align 8, !dbg !6893
  %next_threshold15 = getelementptr inbounds %struct._CubeInfo, %struct._CubeInfo* %31, i32 0, i32 8, !dbg !6894
  store float %30, float* %next_threshold15, align 8, !dbg !6895
  br label %if.end16, !dbg !6893

if.end16:                                         ; preds = %if.then13, %if.end10
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then6
  ret void, !dbg !6896
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ScaleQuantumToMap(i16 zeroext %quantum) #0 !dbg !6897 {
entry:
  %retval = alloca i32, align 4
  %quantum.addr = alloca i16, align 2
  store i16 %quantum, i16* %quantum.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %quantum.addr, metadata !6901, metadata !DIExpression()), !dbg !6902
  %0 = load i16, i16* %quantum.addr, align 2, !dbg !6903
  %conv = zext i16 %0 to i32, !dbg !6903
  %cmp = icmp sge i32 %conv, 65535, !dbg !6905
  br i1 %cmp, label %if.then, label %if.end, !dbg !6906

if.then:                                          ; preds = %entry
  store i32 65535, i32* %retval, align 4, !dbg !6907
  br label %return, !dbg !6907

if.end:                                           ; preds = %entry
  %1 = load i16, i16* %quantum.addr, align 2, !dbg !6908
  %conv2 = zext i16 %1 to i32, !dbg !6909
  store i32 %conv2, i32* %retval, align 4, !dbg !6910
  br label %return, !dbg !6910

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !6911
  ret i32 %2, !dbg !6911
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @IntensityCompare(i8* %x, i8* %y) #0 !dbg !6912 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %color_1 = alloca %struct._PixelPacket*, align 8
  %color_2 = alloca %struct._PixelPacket*, align 8
  %intensity = alloca i32, align 4
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !6913, metadata !DIExpression()), !dbg !6914
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !6915, metadata !DIExpression()), !dbg !6916
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %color_1, metadata !6917, metadata !DIExpression()), !dbg !6918
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %color_2, metadata !6919, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.declare(metadata i32* %intensity, metadata !6921, metadata !DIExpression()), !dbg !6922
  %0 = load i8*, i8** %x.addr, align 8, !dbg !6923
  %1 = bitcast i8* %0 to %struct._PixelPacket*, !dbg !6924
  store %struct._PixelPacket* %1, %struct._PixelPacket** %color_1, align 8, !dbg !6925
  %2 = load i8*, i8** %y.addr, align 8, !dbg !6926
  %3 = bitcast i8* %2 to %struct._PixelPacket*, !dbg !6927
  store %struct._PixelPacket* %3, %struct._PixelPacket** %color_2, align 8, !dbg !6928
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %color_1, align 8, !dbg !6929
  %call = call zeroext i16 @PixelPacketIntensity(%struct._PixelPacket* %4), !dbg !6930
  %conv = zext i16 %call to i32, !dbg !6930
  %5 = load %struct._PixelPacket*, %struct._PixelPacket** %color_2, align 8, !dbg !6931
  %call1 = call zeroext i16 @PixelPacketIntensity(%struct._PixelPacket* %5), !dbg !6932
  %conv2 = zext i16 %call1 to i32, !dbg !6933
  %sub = sub nsw i32 %conv, %conv2, !dbg !6934
  store i32 %sub, i32* %intensity, align 4, !dbg !6935
  %6 = load i32, i32* %intensity, align 4, !dbg !6936
  ret i32 %6, !dbg !6937
}

declare dso_local i32 @IsMonochromeImage(%struct._Image*, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @PixelPacketIntensity(%struct._PixelPacket* %pixel) #0 !dbg !6938 {
entry:
  %retval = alloca i16, align 2
  %pixel.addr = alloca %struct._PixelPacket*, align 8
  %intensity = alloca float, align 4
  store %struct._PixelPacket* %pixel, %struct._PixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %pixel.addr, metadata !6941, metadata !DIExpression()), !dbg !6942
  call void @llvm.dbg.declare(metadata float* %intensity, metadata !6943, metadata !DIExpression()), !dbg !6944
  %0 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !6945
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %0, i32 0, i32 2, !dbg !6947
  %1 = load i16, i16* %red, align 2, !dbg !6947
  %conv = zext i16 %1 to i32, !dbg !6945
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !6948
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %2, i32 0, i32 1, !dbg !6949
  %3 = load i16, i16* %green, align 2, !dbg !6949
  %conv1 = zext i16 %3 to i32, !dbg !6948
  %cmp = icmp eq i32 %conv, %conv1, !dbg !6950
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6951

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !6952
  %green3 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 1, !dbg !6953
  %5 = load i16, i16* %green3, align 2, !dbg !6953
  %conv4 = zext i16 %5 to i32, !dbg !6952
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !6954
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 0, !dbg !6955
  %7 = load i16, i16* %blue, align 2, !dbg !6955
  %conv5 = zext i16 %7 to i32, !dbg !6954
  %cmp6 = icmp eq i32 %conv4, %conv5, !dbg !6956
  br i1 %cmp6, label %if.then, label %if.end, !dbg !6957

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !6958
  %red8 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 0, i32 2, !dbg !6959
  %9 = load i16, i16* %red8, align 2, !dbg !6959
  store i16 %9, i16* %retval, align 2, !dbg !6960
  br label %return, !dbg !6960

if.end:                                           ; preds = %land.lhs.true, %entry
  %10 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !6961
  %red9 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %10, i32 0, i32 2, !dbg !6962
  %11 = load i16, i16* %red9, align 2, !dbg !6962
  %conv10 = zext i16 %11 to i32, !dbg !6961
  %conv11 = sitofp i32 %conv10 to double, !dbg !6961
  %mul = fmul double 2.126560e-01, %conv11, !dbg !6963
  %12 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !6964
  %green12 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %12, i32 0, i32 1, !dbg !6965
  %13 = load i16, i16* %green12, align 2, !dbg !6965
  %conv13 = zext i16 %13 to i32, !dbg !6964
  %conv14 = sitofp i32 %conv13 to double, !dbg !6964
  %mul15 = fmul double 0x3FE6E29307AF20EA, %conv14, !dbg !6966
  %add = fadd double %mul, %mul15, !dbg !6967
  %14 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !6968
  %blue16 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %14, i32 0, i32 0, !dbg !6969
  %15 = load i16, i16* %blue16, align 2, !dbg !6969
  %conv17 = zext i16 %15 to i32, !dbg !6968
  %conv18 = sitofp i32 %conv17 to double, !dbg !6968
  %mul19 = fmul double 7.218600e-02, %conv18, !dbg !6970
  %add20 = fadd double %add, %mul19, !dbg !6971
  %conv21 = fptrunc double %add20 to float, !dbg !6972
  store float %conv21, float* %intensity, align 4, !dbg !6973
  %16 = load float, float* %intensity, align 4, !dbg !6974
  %call = call zeroext i16 @ClampToQuantum(float %16), !dbg !6975
  store i16 %call, i16* %retval, align 2, !dbg !6976
  br label %return, !dbg !6976

return:                                           ; preds = %if.end, %if.then
  %17 = load i16, i16* %retval, align 2, !dbg !6977
  ret i16 %17, !dbg !6977
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind willreturn }
attributes #9 = { allocsize(0) }
attributes #10 = { nounwind readnone }
attributes #11 = { noreturn }
attributes #12 = { allocsize(0,1) }
attributes #13 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1007, !1008, !1009}
!llvm.ident = !{!1010}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !564, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "magick/quantize.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !9, !46, !53, !78, !90, !100, !106, !111, !125, !158, !180, !185, !193, !228, !243, !314, !322, !328, !401, !418, !430, !451, !527, !552}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 211, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "./magick/magick-type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8}
!7 = !DIEnumerator(name: "MagickFalse", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "MagickTrue", value: 1, isUnsigned: true)
!9 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10, line: 25, baseType: !5, size: 32, elements: !11)
!10 = !DIFile(filename: "./magick/colorspace.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!11 = !{!12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45}
!12 = !DIEnumerator(name: "UndefinedColorspace", value: 0, isUnsigned: true)
!13 = !DIEnumerator(name: "RGBColorspace", value: 1, isUnsigned: true)
!14 = !DIEnumerator(name: "GRAYColorspace", value: 2, isUnsigned: true)
!15 = !DIEnumerator(name: "TransparentColorspace", value: 3, isUnsigned: true)
!16 = !DIEnumerator(name: "OHTAColorspace", value: 4, isUnsigned: true)
!17 = !DIEnumerator(name: "LabColorspace", value: 5, isUnsigned: true)
!18 = !DIEnumerator(name: "XYZColorspace", value: 6, isUnsigned: true)
!19 = !DIEnumerator(name: "YCbCrColorspace", value: 7, isUnsigned: true)
!20 = !DIEnumerator(name: "YCCColorspace", value: 8, isUnsigned: true)
!21 = !DIEnumerator(name: "YIQColorspace", value: 9, isUnsigned: true)
!22 = !DIEnumerator(name: "YPbPrColorspace", value: 10, isUnsigned: true)
!23 = !DIEnumerator(name: "YUVColorspace", value: 11, isUnsigned: true)
!24 = !DIEnumerator(name: "CMYKColorspace", value: 12, isUnsigned: true)
!25 = !DIEnumerator(name: "sRGBColorspace", value: 13, isUnsigned: true)
!26 = !DIEnumerator(name: "HSBColorspace", value: 14, isUnsigned: true)
!27 = !DIEnumerator(name: "HSLColorspace", value: 15, isUnsigned: true)
!28 = !DIEnumerator(name: "HWBColorspace", value: 16, isUnsigned: true)
!29 = !DIEnumerator(name: "Rec601LumaColorspace", value: 17, isUnsigned: true)
!30 = !DIEnumerator(name: "Rec601YCbCrColorspace", value: 18, isUnsigned: true)
!31 = !DIEnumerator(name: "Rec709LumaColorspace", value: 19, isUnsigned: true)
!32 = !DIEnumerator(name: "Rec709YCbCrColorspace", value: 20, isUnsigned: true)
!33 = !DIEnumerator(name: "LogColorspace", value: 21, isUnsigned: true)
!34 = !DIEnumerator(name: "CMYColorspace", value: 22, isUnsigned: true)
!35 = !DIEnumerator(name: "LuvColorspace", value: 23, isUnsigned: true)
!36 = !DIEnumerator(name: "HCLColorspace", value: 24, isUnsigned: true)
!37 = !DIEnumerator(name: "LCHColorspace", value: 25, isUnsigned: true)
!38 = !DIEnumerator(name: "LMSColorspace", value: 26, isUnsigned: true)
!39 = !DIEnumerator(name: "LCHabColorspace", value: 27, isUnsigned: true)
!40 = !DIEnumerator(name: "LCHuvColorspace", value: 28, isUnsigned: true)
!41 = !DIEnumerator(name: "scRGBColorspace", value: 29, isUnsigned: true)
!42 = !DIEnumerator(name: "HSIColorspace", value: 30, isUnsigned: true)
!43 = !DIEnumerator(name: "HSVColorspace", value: 31, isUnsigned: true)
!44 = !DIEnumerator(name: "HCLpColorspace", value: 32, isUnsigned: true)
!45 = !DIEnumerator(name: "YDbDrColorspace", value: 33, isUnsigned: true)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !47, line: 27, baseType: !5, size: 32, elements: !48)
!47 = !DIFile(filename: "./magick/quantize.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!48 = !{!49, !50, !51, !52}
!49 = !DIEnumerator(name: "UndefinedDitherMethod", value: 0, isUnsigned: true)
!50 = !DIEnumerator(name: "NoDitherMethod", value: 1, isUnsigned: true)
!51 = !DIEnumerator(name: "RiemersmaDitherMethod", value: 2, isUnsigned: true)
!52 = !DIEnumerator(name: "FloydSteinbergDitherMethod", value: 3, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !54, line: 25, baseType: !5, size: 32, elements: !55)
!54 = !DIFile(filename: "./magick/compress.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!55 = !{!56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77}
!56 = !DIEnumerator(name: "UndefinedCompression", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "NoCompression", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "BZipCompression", value: 2, isUnsigned: true)
!59 = !DIEnumerator(name: "DXT1Compression", value: 3, isUnsigned: true)
!60 = !DIEnumerator(name: "DXT3Compression", value: 4, isUnsigned: true)
!61 = !DIEnumerator(name: "DXT5Compression", value: 5, isUnsigned: true)
!62 = !DIEnumerator(name: "FaxCompression", value: 6, isUnsigned: true)
!63 = !DIEnumerator(name: "Group4Compression", value: 7, isUnsigned: true)
!64 = !DIEnumerator(name: "JPEGCompression", value: 8, isUnsigned: true)
!65 = !DIEnumerator(name: "JPEG2000Compression", value: 9, isUnsigned: true)
!66 = !DIEnumerator(name: "LosslessJPEGCompression", value: 10, isUnsigned: true)
!67 = !DIEnumerator(name: "LZWCompression", value: 11, isUnsigned: true)
!68 = !DIEnumerator(name: "RLECompression", value: 12, isUnsigned: true)
!69 = !DIEnumerator(name: "ZipCompression", value: 13, isUnsigned: true)
!70 = !DIEnumerator(name: "ZipSCompression", value: 14, isUnsigned: true)
!71 = !DIEnumerator(name: "PizCompression", value: 15, isUnsigned: true)
!72 = !DIEnumerator(name: "Pxr24Compression", value: 16, isUnsigned: true)
!73 = !DIEnumerator(name: "B44Compression", value: 17, isUnsigned: true)
!74 = !DIEnumerator(name: "B44ACompression", value: 18, isUnsigned: true)
!75 = !DIEnumerator(name: "LZMACompression", value: 19, isUnsigned: true)
!76 = !DIEnumerator(name: "JBIG1Compression", value: 20, isUnsigned: true)
!77 = !DIEnumerator(name: "JBIG2Compression", value: 21, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !79, line: 75, baseType: !5, size: 32, elements: !80)
!79 = !DIFile(filename: "./magick/image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!80 = !{!81, !82, !83, !84, !85, !86, !87, !88, !89}
!81 = !DIEnumerator(name: "UndefinedOrientation", value: 0, isUnsigned: true)
!82 = !DIEnumerator(name: "TopLeftOrientation", value: 1, isUnsigned: true)
!83 = !DIEnumerator(name: "TopRightOrientation", value: 2, isUnsigned: true)
!84 = !DIEnumerator(name: "BottomRightOrientation", value: 3, isUnsigned: true)
!85 = !DIEnumerator(name: "BottomLeftOrientation", value: 4, isUnsigned: true)
!86 = !DIEnumerator(name: "LeftTopOrientation", value: 5, isUnsigned: true)
!87 = !DIEnumerator(name: "RightTopOrientation", value: 6, isUnsigned: true)
!88 = !DIEnumerator(name: "RightBottomOrientation", value: 7, isUnsigned: true)
!89 = !DIEnumerator(name: "LeftBottomOrientation", value: 8, isUnsigned: true)
!90 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !79, line: 63, baseType: !5, size: 32, elements: !91)
!91 = !{!92, !93, !94, !95, !96, !97, !98, !99}
!92 = !DIEnumerator(name: "UndefinedInterlace", value: 0, isUnsigned: true)
!93 = !DIEnumerator(name: "NoInterlace", value: 1, isUnsigned: true)
!94 = !DIEnumerator(name: "LineInterlace", value: 2, isUnsigned: true)
!95 = !DIEnumerator(name: "PlaneInterlace", value: 3, isUnsigned: true)
!96 = !DIEnumerator(name: "PartitionInterlace", value: 4, isUnsigned: true)
!97 = !DIEnumerator(name: "GIFInterlace", value: 5, isUnsigned: true)
!98 = !DIEnumerator(name: "JPEGInterlace", value: 6, isUnsigned: true)
!99 = !DIEnumerator(name: "PNGInterlace", value: 7, isUnsigned: true)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !101, line: 30, baseType: !5, size: 32, elements: !102)
!101 = !DIFile(filename: "./magick/quantum.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!102 = !{!103, !104, !105}
!103 = !DIEnumerator(name: "UndefinedEndian", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "LSBEndian", value: 1, isUnsigned: true)
!105 = !DIEnumerator(name: "MSBEndian", value: 2, isUnsigned: true)
!106 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !79, line: 88, baseType: !5, size: 32, elements: !107)
!107 = !{!108, !109, !110}
!108 = !DIEnumerator(name: "UndefinedResolution", value: 0, isUnsigned: true)
!109 = !DIEnumerator(name: "PixelsPerInchResolution", value: 1, isUnsigned: true)
!110 = !DIEnumerator(name: "PixelsPerCentimeterResolution", value: 2, isUnsigned: true)
!111 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !79, line: 47, baseType: !5, size: 32, elements: !112)
!112 = !{!113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124}
!113 = !DIEnumerator(name: "UndefinedType", value: 0, isUnsigned: true)
!114 = !DIEnumerator(name: "BilevelType", value: 1, isUnsigned: true)
!115 = !DIEnumerator(name: "GrayscaleType", value: 2, isUnsigned: true)
!116 = !DIEnumerator(name: "GrayscaleMatteType", value: 3, isUnsigned: true)
!117 = !DIEnumerator(name: "PaletteType", value: 4, isUnsigned: true)
!118 = !DIEnumerator(name: "PaletteMatteType", value: 5, isUnsigned: true)
!119 = !DIEnumerator(name: "TrueColorType", value: 6, isUnsigned: true)
!120 = !DIEnumerator(name: "TrueColorMatteType", value: 7, isUnsigned: true)
!121 = !DIEnumerator(name: "ColorSeparationType", value: 8, isUnsigned: true)
!122 = !DIEnumerator(name: "ColorSeparationMatteType", value: 9, isUnsigned: true)
!123 = !DIEnumerator(name: "OptimizeType", value: 10, isUnsigned: true)
!124 = !DIEnumerator(name: "PaletteBilevelMatteType", value: 11, isUnsigned: true)
!125 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !126, line: 27, baseType: !5, size: 32, elements: !127)
!126 = !DIFile(filename: "./magick/effect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!127 = !{!128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157}
!128 = !DIEnumerator(name: "UndefinedPreview", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "RotatePreview", value: 1, isUnsigned: true)
!130 = !DIEnumerator(name: "ShearPreview", value: 2, isUnsigned: true)
!131 = !DIEnumerator(name: "RollPreview", value: 3, isUnsigned: true)
!132 = !DIEnumerator(name: "HuePreview", value: 4, isUnsigned: true)
!133 = !DIEnumerator(name: "SaturationPreview", value: 5, isUnsigned: true)
!134 = !DIEnumerator(name: "BrightnessPreview", value: 6, isUnsigned: true)
!135 = !DIEnumerator(name: "GammaPreview", value: 7, isUnsigned: true)
!136 = !DIEnumerator(name: "SpiffPreview", value: 8, isUnsigned: true)
!137 = !DIEnumerator(name: "DullPreview", value: 9, isUnsigned: true)
!138 = !DIEnumerator(name: "GrayscalePreview", value: 10, isUnsigned: true)
!139 = !DIEnumerator(name: "QuantizePreview", value: 11, isUnsigned: true)
!140 = !DIEnumerator(name: "DespecklePreview", value: 12, isUnsigned: true)
!141 = !DIEnumerator(name: "ReduceNoisePreview", value: 13, isUnsigned: true)
!142 = !DIEnumerator(name: "AddNoisePreview", value: 14, isUnsigned: true)
!143 = !DIEnumerator(name: "SharpenPreview", value: 15, isUnsigned: true)
!144 = !DIEnumerator(name: "BlurPreview", value: 16, isUnsigned: true)
!145 = !DIEnumerator(name: "ThresholdPreview", value: 17, isUnsigned: true)
!146 = !DIEnumerator(name: "EdgeDetectPreview", value: 18, isUnsigned: true)
!147 = !DIEnumerator(name: "SpreadPreview", value: 19, isUnsigned: true)
!148 = !DIEnumerator(name: "SolarizePreview", value: 20, isUnsigned: true)
!149 = !DIEnumerator(name: "ShadePreview", value: 21, isUnsigned: true)
!150 = !DIEnumerator(name: "RaisePreview", value: 22, isUnsigned: true)
!151 = !DIEnumerator(name: "SegmentPreview", value: 23, isUnsigned: true)
!152 = !DIEnumerator(name: "SwirlPreview", value: 24, isUnsigned: true)
!153 = !DIEnumerator(name: "ImplodePreview", value: 25, isUnsigned: true)
!154 = !DIEnumerator(name: "WavePreview", value: 26, isUnsigned: true)
!155 = !DIEnumerator(name: "OilPaintPreview", value: 27, isUnsigned: true)
!156 = !DIEnumerator(name: "CharcoalDrawingPreview", value: 28, isUnsigned: true)
!157 = !DIEnumerator(name: "JPEGPreview", value: 29, isUnsigned: true)
!158 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 177, baseType: !5, size: 32, elements: !159)
!159 = !{!160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179}
!160 = !DIEnumerator(name: "UndefinedChannel", value: 0, isUnsigned: true)
!161 = !DIEnumerator(name: "RedChannel", value: 1, isUnsigned: true)
!162 = !DIEnumerator(name: "GrayChannel", value: 1, isUnsigned: true)
!163 = !DIEnumerator(name: "CyanChannel", value: 1, isUnsigned: true)
!164 = !DIEnumerator(name: "GreenChannel", value: 2, isUnsigned: true)
!165 = !DIEnumerator(name: "MagentaChannel", value: 2, isUnsigned: true)
!166 = !DIEnumerator(name: "BlueChannel", value: 4, isUnsigned: true)
!167 = !DIEnumerator(name: "YellowChannel", value: 4, isUnsigned: true)
!168 = !DIEnumerator(name: "AlphaChannel", value: 8, isUnsigned: true)
!169 = !DIEnumerator(name: "OpacityChannel", value: 8, isUnsigned: true)
!170 = !DIEnumerator(name: "MatteChannel", value: 8, isUnsigned: true)
!171 = !DIEnumerator(name: "BlackChannel", value: 32, isUnsigned: true)
!172 = !DIEnumerator(name: "IndexChannel", value: 32, isUnsigned: true)
!173 = !DIEnumerator(name: "CompositeChannels", value: 47, isUnsigned: true)
!174 = !DIEnumerator(name: "AllChannels", value: 134217727, isUnsigned: true)
!175 = !DIEnumerator(name: "TrueAlphaChannel", value: 64, isUnsigned: true)
!176 = !DIEnumerator(name: "RGBChannels", value: 128, isUnsigned: true)
!177 = !DIEnumerator(name: "GrayChannels", value: 128, isUnsigned: true)
!178 = !DIEnumerator(name: "SyncChannels", value: 256, isUnsigned: true)
!179 = !DIEnumerator(name: "DefaultChannels", value: 134217719, isUnsigned: true)
!180 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 204, baseType: !5, size: 32, elements: !181)
!181 = !{!182, !183, !184}
!182 = !DIEnumerator(name: "UndefinedClass", value: 0, isUnsigned: true)
!183 = !DIEnumerator(name: "DirectClass", value: 1, isUnsigned: true)
!184 = !DIEnumerator(name: "PseudoClass", value: 2, isUnsigned: true)
!185 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !186, line: 42, baseType: !5, size: 32, elements: !187)
!186 = !DIFile(filename: "./magick/profile.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!187 = !{!188, !189, !190, !191, !192}
!188 = !DIEnumerator(name: "UndefinedIntent", value: 0, isUnsigned: true)
!189 = !DIEnumerator(name: "SaturationIntent", value: 1, isUnsigned: true)
!190 = !DIEnumerator(name: "PerceptualIntent", value: 2, isUnsigned: true)
!191 = !DIEnumerator(name: "AbsoluteIntent", value: 3, isUnsigned: true)
!192 = !DIEnumerator(name: "RelativeIntent", value: 4, isUnsigned: true)
!193 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !194, line: 32, baseType: !5, size: 32, elements: !195)
!194 = !DIFile(filename: "./magick/resample.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!195 = !{!196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227}
!196 = !DIEnumerator(name: "UndefinedFilter", value: 0, isUnsigned: true)
!197 = !DIEnumerator(name: "PointFilter", value: 1, isUnsigned: true)
!198 = !DIEnumerator(name: "BoxFilter", value: 2, isUnsigned: true)
!199 = !DIEnumerator(name: "TriangleFilter", value: 3, isUnsigned: true)
!200 = !DIEnumerator(name: "HermiteFilter", value: 4, isUnsigned: true)
!201 = !DIEnumerator(name: "HanningFilter", value: 5, isUnsigned: true)
!202 = !DIEnumerator(name: "HammingFilter", value: 6, isUnsigned: true)
!203 = !DIEnumerator(name: "BlackmanFilter", value: 7, isUnsigned: true)
!204 = !DIEnumerator(name: "GaussianFilter", value: 8, isUnsigned: true)
!205 = !DIEnumerator(name: "QuadraticFilter", value: 9, isUnsigned: true)
!206 = !DIEnumerator(name: "CubicFilter", value: 10, isUnsigned: true)
!207 = !DIEnumerator(name: "CatromFilter", value: 11, isUnsigned: true)
!208 = !DIEnumerator(name: "MitchellFilter", value: 12, isUnsigned: true)
!209 = !DIEnumerator(name: "JincFilter", value: 13, isUnsigned: true)
!210 = !DIEnumerator(name: "SincFilter", value: 14, isUnsigned: true)
!211 = !DIEnumerator(name: "SincFastFilter", value: 15, isUnsigned: true)
!212 = !DIEnumerator(name: "KaiserFilter", value: 16, isUnsigned: true)
!213 = !DIEnumerator(name: "WelshFilter", value: 17, isUnsigned: true)
!214 = !DIEnumerator(name: "ParzenFilter", value: 18, isUnsigned: true)
!215 = !DIEnumerator(name: "BohmanFilter", value: 19, isUnsigned: true)
!216 = !DIEnumerator(name: "BartlettFilter", value: 20, isUnsigned: true)
!217 = !DIEnumerator(name: "LagrangeFilter", value: 21, isUnsigned: true)
!218 = !DIEnumerator(name: "LanczosFilter", value: 22, isUnsigned: true)
!219 = !DIEnumerator(name: "LanczosSharpFilter", value: 23, isUnsigned: true)
!220 = !DIEnumerator(name: "Lanczos2Filter", value: 24, isUnsigned: true)
!221 = !DIEnumerator(name: "Lanczos2SharpFilter", value: 25, isUnsigned: true)
!222 = !DIEnumerator(name: "RobidouxFilter", value: 26, isUnsigned: true)
!223 = !DIEnumerator(name: "RobidouxSharpFilter", value: 27, isUnsigned: true)
!224 = !DIEnumerator(name: "CosineFilter", value: 28, isUnsigned: true)
!225 = !DIEnumerator(name: "SplineFilter", value: 29, isUnsigned: true)
!226 = !DIEnumerator(name: "LanczosRadiusFilter", value: 30, isUnsigned: true)
!227 = !DIEnumerator(name: "SentinelFilter", value: 31, isUnsigned: true)
!228 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !229, line: 77, baseType: !5, size: 32, elements: !230)
!229 = !DIFile(filename: "./magick/geometry.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!230 = !{!231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242}
!231 = !DIEnumerator(name: "UndefinedGravity", value: 0, isUnsigned: true)
!232 = !DIEnumerator(name: "ForgetGravity", value: 0, isUnsigned: true)
!233 = !DIEnumerator(name: "NorthWestGravity", value: 1, isUnsigned: true)
!234 = !DIEnumerator(name: "NorthGravity", value: 2, isUnsigned: true)
!235 = !DIEnumerator(name: "NorthEastGravity", value: 3, isUnsigned: true)
!236 = !DIEnumerator(name: "WestGravity", value: 4, isUnsigned: true)
!237 = !DIEnumerator(name: "CenterGravity", value: 5, isUnsigned: true)
!238 = !DIEnumerator(name: "EastGravity", value: 6, isUnsigned: true)
!239 = !DIEnumerator(name: "SouthWestGravity", value: 7, isUnsigned: true)
!240 = !DIEnumerator(name: "SouthGravity", value: 8, isUnsigned: true)
!241 = !DIEnumerator(name: "SouthEastGravity", value: 9, isUnsigned: true)
!242 = !DIEnumerator(name: "StaticGravity", value: 10, isUnsigned: true)
!243 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !244, line: 25, baseType: !5, size: 32, elements: !245)
!244 = !DIFile(filename: "./magick/composite.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!245 = !{!246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313}
!246 = !DIEnumerator(name: "UndefinedCompositeOp", value: 0, isUnsigned: true)
!247 = !DIEnumerator(name: "NoCompositeOp", value: 1, isUnsigned: true)
!248 = !DIEnumerator(name: "ModulusAddCompositeOp", value: 2, isUnsigned: true)
!249 = !DIEnumerator(name: "AtopCompositeOp", value: 3, isUnsigned: true)
!250 = !DIEnumerator(name: "BlendCompositeOp", value: 4, isUnsigned: true)
!251 = !DIEnumerator(name: "BumpmapCompositeOp", value: 5, isUnsigned: true)
!252 = !DIEnumerator(name: "ChangeMaskCompositeOp", value: 6, isUnsigned: true)
!253 = !DIEnumerator(name: "ClearCompositeOp", value: 7, isUnsigned: true)
!254 = !DIEnumerator(name: "ColorBurnCompositeOp", value: 8, isUnsigned: true)
!255 = !DIEnumerator(name: "ColorDodgeCompositeOp", value: 9, isUnsigned: true)
!256 = !DIEnumerator(name: "ColorizeCompositeOp", value: 10, isUnsigned: true)
!257 = !DIEnumerator(name: "CopyBlackCompositeOp", value: 11, isUnsigned: true)
!258 = !DIEnumerator(name: "CopyBlueCompositeOp", value: 12, isUnsigned: true)
!259 = !DIEnumerator(name: "CopyCompositeOp", value: 13, isUnsigned: true)
!260 = !DIEnumerator(name: "CopyCyanCompositeOp", value: 14, isUnsigned: true)
!261 = !DIEnumerator(name: "CopyGreenCompositeOp", value: 15, isUnsigned: true)
!262 = !DIEnumerator(name: "CopyMagentaCompositeOp", value: 16, isUnsigned: true)
!263 = !DIEnumerator(name: "CopyOpacityCompositeOp", value: 17, isUnsigned: true)
!264 = !DIEnumerator(name: "CopyRedCompositeOp", value: 18, isUnsigned: true)
!265 = !DIEnumerator(name: "CopyYellowCompositeOp", value: 19, isUnsigned: true)
!266 = !DIEnumerator(name: "DarkenCompositeOp", value: 20, isUnsigned: true)
!267 = !DIEnumerator(name: "DstAtopCompositeOp", value: 21, isUnsigned: true)
!268 = !DIEnumerator(name: "DstCompositeOp", value: 22, isUnsigned: true)
!269 = !DIEnumerator(name: "DstInCompositeOp", value: 23, isUnsigned: true)
!270 = !DIEnumerator(name: "DstOutCompositeOp", value: 24, isUnsigned: true)
!271 = !DIEnumerator(name: "DstOverCompositeOp", value: 25, isUnsigned: true)
!272 = !DIEnumerator(name: "DifferenceCompositeOp", value: 26, isUnsigned: true)
!273 = !DIEnumerator(name: "DisplaceCompositeOp", value: 27, isUnsigned: true)
!274 = !DIEnumerator(name: "DissolveCompositeOp", value: 28, isUnsigned: true)
!275 = !DIEnumerator(name: "ExclusionCompositeOp", value: 29, isUnsigned: true)
!276 = !DIEnumerator(name: "HardLightCompositeOp", value: 30, isUnsigned: true)
!277 = !DIEnumerator(name: "HueCompositeOp", value: 31, isUnsigned: true)
!278 = !DIEnumerator(name: "InCompositeOp", value: 32, isUnsigned: true)
!279 = !DIEnumerator(name: "LightenCompositeOp", value: 33, isUnsigned: true)
!280 = !DIEnumerator(name: "LinearLightCompositeOp", value: 34, isUnsigned: true)
!281 = !DIEnumerator(name: "LuminizeCompositeOp", value: 35, isUnsigned: true)
!282 = !DIEnumerator(name: "MinusDstCompositeOp", value: 36, isUnsigned: true)
!283 = !DIEnumerator(name: "ModulateCompositeOp", value: 37, isUnsigned: true)
!284 = !DIEnumerator(name: "MultiplyCompositeOp", value: 38, isUnsigned: true)
!285 = !DIEnumerator(name: "OutCompositeOp", value: 39, isUnsigned: true)
!286 = !DIEnumerator(name: "OverCompositeOp", value: 40, isUnsigned: true)
!287 = !DIEnumerator(name: "OverlayCompositeOp", value: 41, isUnsigned: true)
!288 = !DIEnumerator(name: "PlusCompositeOp", value: 42, isUnsigned: true)
!289 = !DIEnumerator(name: "ReplaceCompositeOp", value: 43, isUnsigned: true)
!290 = !DIEnumerator(name: "SaturateCompositeOp", value: 44, isUnsigned: true)
!291 = !DIEnumerator(name: "ScreenCompositeOp", value: 45, isUnsigned: true)
!292 = !DIEnumerator(name: "SoftLightCompositeOp", value: 46, isUnsigned: true)
!293 = !DIEnumerator(name: "SrcAtopCompositeOp", value: 47, isUnsigned: true)
!294 = !DIEnumerator(name: "SrcCompositeOp", value: 48, isUnsigned: true)
!295 = !DIEnumerator(name: "SrcInCompositeOp", value: 49, isUnsigned: true)
!296 = !DIEnumerator(name: "SrcOutCompositeOp", value: 50, isUnsigned: true)
!297 = !DIEnumerator(name: "SrcOverCompositeOp", value: 51, isUnsigned: true)
!298 = !DIEnumerator(name: "ModulusSubtractCompositeOp", value: 52, isUnsigned: true)
!299 = !DIEnumerator(name: "ThresholdCompositeOp", value: 53, isUnsigned: true)
!300 = !DIEnumerator(name: "XorCompositeOp", value: 54, isUnsigned: true)
!301 = !DIEnumerator(name: "DivideDstCompositeOp", value: 55, isUnsigned: true)
!302 = !DIEnumerator(name: "DistortCompositeOp", value: 56, isUnsigned: true)
!303 = !DIEnumerator(name: "BlurCompositeOp", value: 57, isUnsigned: true)
!304 = !DIEnumerator(name: "PegtopLightCompositeOp", value: 58, isUnsigned: true)
!305 = !DIEnumerator(name: "VividLightCompositeOp", value: 59, isUnsigned: true)
!306 = !DIEnumerator(name: "PinLightCompositeOp", value: 60, isUnsigned: true)
!307 = !DIEnumerator(name: "LinearDodgeCompositeOp", value: 61, isUnsigned: true)
!308 = !DIEnumerator(name: "LinearBurnCompositeOp", value: 62, isUnsigned: true)
!309 = !DIEnumerator(name: "MathematicsCompositeOp", value: 63, isUnsigned: true)
!310 = !DIEnumerator(name: "DivideSrcCompositeOp", value: 64, isUnsigned: true)
!311 = !DIEnumerator(name: "MinusSrcCompositeOp", value: 65, isUnsigned: true)
!312 = !DIEnumerator(name: "DarkenIntensityCompositeOp", value: 66, isUnsigned: true)
!313 = !DIEnumerator(name: "LightenIntensityCompositeOp", value: 67, isUnsigned: true)
!314 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !315, line: 25, baseType: !5, size: 32, elements: !316)
!315 = !DIFile(filename: "./magick/layer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!316 = !{!317, !318, !319, !320, !321}
!317 = !DIEnumerator(name: "UnrecognizedDispose", value: 0, isUnsigned: true)
!318 = !DIEnumerator(name: "UndefinedDispose", value: 0, isUnsigned: true)
!319 = !DIEnumerator(name: "NoneDispose", value: 1, isUnsigned: true)
!320 = !DIEnumerator(name: "BackgroundDispose", value: 2, isUnsigned: true)
!321 = !DIEnumerator(name: "PreviousDispose", value: 3, isUnsigned: true)
!322 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !323, line: 25, baseType: !5, size: 32, elements: !324)
!323 = !DIFile(filename: "./magick/timer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!324 = !{!325, !326, !327}
!325 = !DIEnumerator(name: "UndefinedTimerState", value: 0, isUnsigned: true)
!326 = !DIEnumerator(name: "StoppedTimerState", value: 1, isUnsigned: true)
!327 = !DIEnumerator(name: "RunningTimerState", value: 2, isUnsigned: true)
!328 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !329, line: 28, baseType: !5, size: 32, elements: !330)
!329 = !DIFile(filename: "./magick/exception.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!330 = !{!331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400}
!331 = !DIEnumerator(name: "UndefinedException", value: 0, isUnsigned: true)
!332 = !DIEnumerator(name: "WarningException", value: 300, isUnsigned: true)
!333 = !DIEnumerator(name: "ResourceLimitWarning", value: 300, isUnsigned: true)
!334 = !DIEnumerator(name: "TypeWarning", value: 305, isUnsigned: true)
!335 = !DIEnumerator(name: "OptionWarning", value: 310, isUnsigned: true)
!336 = !DIEnumerator(name: "DelegateWarning", value: 315, isUnsigned: true)
!337 = !DIEnumerator(name: "MissingDelegateWarning", value: 320, isUnsigned: true)
!338 = !DIEnumerator(name: "CorruptImageWarning", value: 325, isUnsigned: true)
!339 = !DIEnumerator(name: "FileOpenWarning", value: 330, isUnsigned: true)
!340 = !DIEnumerator(name: "BlobWarning", value: 335, isUnsigned: true)
!341 = !DIEnumerator(name: "StreamWarning", value: 340, isUnsigned: true)
!342 = !DIEnumerator(name: "CacheWarning", value: 345, isUnsigned: true)
!343 = !DIEnumerator(name: "CoderWarning", value: 350, isUnsigned: true)
!344 = !DIEnumerator(name: "FilterWarning", value: 352, isUnsigned: true)
!345 = !DIEnumerator(name: "ModuleWarning", value: 355, isUnsigned: true)
!346 = !DIEnumerator(name: "DrawWarning", value: 360, isUnsigned: true)
!347 = !DIEnumerator(name: "ImageWarning", value: 365, isUnsigned: true)
!348 = !DIEnumerator(name: "WandWarning", value: 370, isUnsigned: true)
!349 = !DIEnumerator(name: "RandomWarning", value: 375, isUnsigned: true)
!350 = !DIEnumerator(name: "XServerWarning", value: 380, isUnsigned: true)
!351 = !DIEnumerator(name: "MonitorWarning", value: 385, isUnsigned: true)
!352 = !DIEnumerator(name: "RegistryWarning", value: 390, isUnsigned: true)
!353 = !DIEnumerator(name: "ConfigureWarning", value: 395, isUnsigned: true)
!354 = !DIEnumerator(name: "PolicyWarning", value: 399, isUnsigned: true)
!355 = !DIEnumerator(name: "ErrorException", value: 400, isUnsigned: true)
!356 = !DIEnumerator(name: "ResourceLimitError", value: 400, isUnsigned: true)
!357 = !DIEnumerator(name: "TypeError", value: 405, isUnsigned: true)
!358 = !DIEnumerator(name: "OptionError", value: 410, isUnsigned: true)
!359 = !DIEnumerator(name: "DelegateError", value: 415, isUnsigned: true)
!360 = !DIEnumerator(name: "MissingDelegateError", value: 420, isUnsigned: true)
!361 = !DIEnumerator(name: "CorruptImageError", value: 425, isUnsigned: true)
!362 = !DIEnumerator(name: "FileOpenError", value: 430, isUnsigned: true)
!363 = !DIEnumerator(name: "BlobError", value: 435, isUnsigned: true)
!364 = !DIEnumerator(name: "StreamError", value: 440, isUnsigned: true)
!365 = !DIEnumerator(name: "CacheError", value: 445, isUnsigned: true)
!366 = !DIEnumerator(name: "CoderError", value: 450, isUnsigned: true)
!367 = !DIEnumerator(name: "FilterError", value: 452, isUnsigned: true)
!368 = !DIEnumerator(name: "ModuleError", value: 455, isUnsigned: true)
!369 = !DIEnumerator(name: "DrawError", value: 460, isUnsigned: true)
!370 = !DIEnumerator(name: "ImageError", value: 465, isUnsigned: true)
!371 = !DIEnumerator(name: "WandError", value: 470, isUnsigned: true)
!372 = !DIEnumerator(name: "RandomError", value: 475, isUnsigned: true)
!373 = !DIEnumerator(name: "XServerError", value: 480, isUnsigned: true)
!374 = !DIEnumerator(name: "MonitorError", value: 485, isUnsigned: true)
!375 = !DIEnumerator(name: "RegistryError", value: 490, isUnsigned: true)
!376 = !DIEnumerator(name: "ConfigureError", value: 495, isUnsigned: true)
!377 = !DIEnumerator(name: "PolicyError", value: 499, isUnsigned: true)
!378 = !DIEnumerator(name: "FatalErrorException", value: 700, isUnsigned: true)
!379 = !DIEnumerator(name: "ResourceLimitFatalError", value: 700, isUnsigned: true)
!380 = !DIEnumerator(name: "TypeFatalError", value: 705, isUnsigned: true)
!381 = !DIEnumerator(name: "OptionFatalError", value: 710, isUnsigned: true)
!382 = !DIEnumerator(name: "DelegateFatalError", value: 715, isUnsigned: true)
!383 = !DIEnumerator(name: "MissingDelegateFatalError", value: 720, isUnsigned: true)
!384 = !DIEnumerator(name: "CorruptImageFatalError", value: 725, isUnsigned: true)
!385 = !DIEnumerator(name: "FileOpenFatalError", value: 730, isUnsigned: true)
!386 = !DIEnumerator(name: "BlobFatalError", value: 735, isUnsigned: true)
!387 = !DIEnumerator(name: "StreamFatalError", value: 740, isUnsigned: true)
!388 = !DIEnumerator(name: "CacheFatalError", value: 745, isUnsigned: true)
!389 = !DIEnumerator(name: "CoderFatalError", value: 750, isUnsigned: true)
!390 = !DIEnumerator(name: "FilterFatalError", value: 752, isUnsigned: true)
!391 = !DIEnumerator(name: "ModuleFatalError", value: 755, isUnsigned: true)
!392 = !DIEnumerator(name: "DrawFatalError", value: 760, isUnsigned: true)
!393 = !DIEnumerator(name: "ImageFatalError", value: 765, isUnsigned: true)
!394 = !DIEnumerator(name: "WandFatalError", value: 770, isUnsigned: true)
!395 = !DIEnumerator(name: "RandomFatalError", value: 775, isUnsigned: true)
!396 = !DIEnumerator(name: "XServerFatalError", value: 780, isUnsigned: true)
!397 = !DIEnumerator(name: "MonitorFatalError", value: 785, isUnsigned: true)
!398 = !DIEnumerator(name: "RegistryFatalError", value: 790, isUnsigned: true)
!399 = !DIEnumerator(name: "ConfigureFatalError", value: 795, isUnsigned: true)
!400 = !DIEnumerator(name: "PolicyFatalError", value: 799, isUnsigned: true)
!401 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !402, line: 31, baseType: !5, size: 32, elements: !403)
!402 = !DIFile(filename: "./magick/pixel.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!403 = !{!404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417}
!404 = !DIEnumerator(name: "UndefinedInterpolatePixel", value: 0, isUnsigned: true)
!405 = !DIEnumerator(name: "AverageInterpolatePixel", value: 1, isUnsigned: true)
!406 = !DIEnumerator(name: "BicubicInterpolatePixel", value: 2, isUnsigned: true)
!407 = !DIEnumerator(name: "BilinearInterpolatePixel", value: 3, isUnsigned: true)
!408 = !DIEnumerator(name: "FilterInterpolatePixel", value: 4, isUnsigned: true)
!409 = !DIEnumerator(name: "IntegerInterpolatePixel", value: 5, isUnsigned: true)
!410 = !DIEnumerator(name: "MeshInterpolatePixel", value: 6, isUnsigned: true)
!411 = !DIEnumerator(name: "NearestNeighborInterpolatePixel", value: 7, isUnsigned: true)
!412 = !DIEnumerator(name: "SplineInterpolatePixel", value: 8, isUnsigned: true)
!413 = !DIEnumerator(name: "Average9InterpolatePixel", value: 9, isUnsigned: true)
!414 = !DIEnumerator(name: "Average16InterpolatePixel", value: 10, isUnsigned: true)
!415 = !DIEnumerator(name: "BlendInterpolatePixel", value: 11, isUnsigned: true)
!416 = !DIEnumerator(name: "BackgroundInterpolatePixel", value: 12, isUnsigned: true)
!417 = !DIEnumerator(name: "CatromInterpolatePixel", value: 13, isUnsigned: true)
!418 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !402, line: 67, baseType: !5, size: 32, elements: !419)
!419 = !{!420, !421, !422, !423, !424, !425, !426, !427, !428, !429}
!420 = !DIEnumerator(name: "UndefinedPixelIntensityMethod", value: 0, isUnsigned: true)
!421 = !DIEnumerator(name: "AveragePixelIntensityMethod", value: 1, isUnsigned: true)
!422 = !DIEnumerator(name: "BrightnessPixelIntensityMethod", value: 2, isUnsigned: true)
!423 = !DIEnumerator(name: "LightnessPixelIntensityMethod", value: 3, isUnsigned: true)
!424 = !DIEnumerator(name: "Rec601LumaPixelIntensityMethod", value: 4, isUnsigned: true)
!425 = !DIEnumerator(name: "Rec601LuminancePixelIntensityMethod", value: 5, isUnsigned: true)
!426 = !DIEnumerator(name: "Rec709LumaPixelIntensityMethod", value: 6, isUnsigned: true)
!427 = !DIEnumerator(name: "Rec709LuminancePixelIntensityMethod", value: 7, isUnsigned: true)
!428 = !DIEnumerator(name: "RMSPixelIntensityMethod", value: 8, isUnsigned: true)
!429 = !DIEnumerator(name: "MSPixelIntensityMethod", value: 9, isUnsigned: true)
!430 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !431, line: 27, baseType: !5, size: 32, elements: !432)
!431 = !DIFile(filename: "./magick/cache-view.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!432 = !{!433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450}
!433 = !DIEnumerator(name: "UndefinedVirtualPixelMethod", value: 0, isUnsigned: true)
!434 = !DIEnumerator(name: "BackgroundVirtualPixelMethod", value: 1, isUnsigned: true)
!435 = !DIEnumerator(name: "ConstantVirtualPixelMethod", value: 2, isUnsigned: true)
!436 = !DIEnumerator(name: "DitherVirtualPixelMethod", value: 3, isUnsigned: true)
!437 = !DIEnumerator(name: "EdgeVirtualPixelMethod", value: 4, isUnsigned: true)
!438 = !DIEnumerator(name: "MirrorVirtualPixelMethod", value: 5, isUnsigned: true)
!439 = !DIEnumerator(name: "RandomVirtualPixelMethod", value: 6, isUnsigned: true)
!440 = !DIEnumerator(name: "TileVirtualPixelMethod", value: 7, isUnsigned: true)
!441 = !DIEnumerator(name: "TransparentVirtualPixelMethod", value: 8, isUnsigned: true)
!442 = !DIEnumerator(name: "MaskVirtualPixelMethod", value: 9, isUnsigned: true)
!443 = !DIEnumerator(name: "BlackVirtualPixelMethod", value: 10, isUnsigned: true)
!444 = !DIEnumerator(name: "GrayVirtualPixelMethod", value: 11, isUnsigned: true)
!445 = !DIEnumerator(name: "WhiteVirtualPixelMethod", value: 12, isUnsigned: true)
!446 = !DIEnumerator(name: "HorizontalTileVirtualPixelMethod", value: 13, isUnsigned: true)
!447 = !DIEnumerator(name: "VerticalTileVirtualPixelMethod", value: 14, isUnsigned: true)
!448 = !DIEnumerator(name: "HorizontalTileEdgeVirtualPixelMethod", value: 15, isUnsigned: true)
!449 = !DIEnumerator(name: "VerticalTileEdgeVirtualPixelMethod", value: 16, isUnsigned: true)
!450 = !DIEnumerator(name: "CheckerTileVirtualPixelMethod", value: 17, isUnsigned: true)
!451 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !452, line: 25, baseType: !453, size: 32, elements: !454)
!452 = !DIFile(filename: "./magick/option.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!453 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!454 = !{!455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526}
!455 = !DIEnumerator(name: "MagickUndefinedOptions", value: -1)
!456 = !DIEnumerator(name: "MagickAlignOptions", value: 0)
!457 = !DIEnumerator(name: "MagickAlphaOptions", value: 1)
!458 = !DIEnumerator(name: "MagickBooleanOptions", value: 2)
!459 = !DIEnumerator(name: "MagickCacheOptions", value: 3)
!460 = !DIEnumerator(name: "MagickChannelOptions", value: 4)
!461 = !DIEnumerator(name: "MagickClassOptions", value: 5)
!462 = !DIEnumerator(name: "MagickClipPathOptions", value: 6)
!463 = !DIEnumerator(name: "MagickCoderOptions", value: 7)
!464 = !DIEnumerator(name: "MagickColorOptions", value: 8)
!465 = !DIEnumerator(name: "MagickColorspaceOptions", value: 9)
!466 = !DIEnumerator(name: "MagickCommandOptions", value: 10)
!467 = !DIEnumerator(name: "MagickComposeOptions", value: 11)
!468 = !DIEnumerator(name: "MagickCompressOptions", value: 12)
!469 = !DIEnumerator(name: "MagickConfigureOptions", value: 13)
!470 = !DIEnumerator(name: "MagickDataTypeOptions", value: 14)
!471 = !DIEnumerator(name: "MagickDebugOptions", value: 15)
!472 = !DIEnumerator(name: "MagickDecorateOptions", value: 16)
!473 = !DIEnumerator(name: "MagickDelegateOptions", value: 17)
!474 = !DIEnumerator(name: "MagickDirectionOptions", value: 18)
!475 = !DIEnumerator(name: "MagickDisposeOptions", value: 19)
!476 = !DIEnumerator(name: "MagickDistortOptions", value: 20)
!477 = !DIEnumerator(name: "MagickDitherOptions", value: 21)
!478 = !DIEnumerator(name: "MagickEndianOptions", value: 22)
!479 = !DIEnumerator(name: "MagickEvaluateOptions", value: 23)
!480 = !DIEnumerator(name: "MagickFillRuleOptions", value: 24)
!481 = !DIEnumerator(name: "MagickFilterOptions", value: 25)
!482 = !DIEnumerator(name: "MagickFontOptions", value: 26)
!483 = !DIEnumerator(name: "MagickFontsOptions", value: 27)
!484 = !DIEnumerator(name: "MagickFormatOptions", value: 28)
!485 = !DIEnumerator(name: "MagickFunctionOptions", value: 29)
!486 = !DIEnumerator(name: "MagickGravityOptions", value: 30)
!487 = !DIEnumerator(name: "MagickIntentOptions", value: 31)
!488 = !DIEnumerator(name: "MagickInterlaceOptions", value: 32)
!489 = !DIEnumerator(name: "MagickInterpolateOptions", value: 33)
!490 = !DIEnumerator(name: "MagickKernelOptions", value: 34)
!491 = !DIEnumerator(name: "MagickLayerOptions", value: 35)
!492 = !DIEnumerator(name: "MagickLineCapOptions", value: 36)
!493 = !DIEnumerator(name: "MagickLineJoinOptions", value: 37)
!494 = !DIEnumerator(name: "MagickListOptions", value: 38)
!495 = !DIEnumerator(name: "MagickLocaleOptions", value: 39)
!496 = !DIEnumerator(name: "MagickLogEventOptions", value: 40)
!497 = !DIEnumerator(name: "MagickLogOptions", value: 41)
!498 = !DIEnumerator(name: "MagickMagicOptions", value: 42)
!499 = !DIEnumerator(name: "MagickMethodOptions", value: 43)
!500 = !DIEnumerator(name: "MagickMetricOptions", value: 44)
!501 = !DIEnumerator(name: "MagickMimeOptions", value: 45)
!502 = !DIEnumerator(name: "MagickModeOptions", value: 46)
!503 = !DIEnumerator(name: "MagickModuleOptions", value: 47)
!504 = !DIEnumerator(name: "MagickMorphologyOptions", value: 48)
!505 = !DIEnumerator(name: "MagickNoiseOptions", value: 49)
!506 = !DIEnumerator(name: "MagickOrientationOptions", value: 50)
!507 = !DIEnumerator(name: "MagickPixelIntensityOptions", value: 51)
!508 = !DIEnumerator(name: "MagickPolicyOptions", value: 52)
!509 = !DIEnumerator(name: "MagickPolicyDomainOptions", value: 53)
!510 = !DIEnumerator(name: "MagickPolicyRightsOptions", value: 54)
!511 = !DIEnumerator(name: "MagickPreviewOptions", value: 55)
!512 = !DIEnumerator(name: "MagickPrimitiveOptions", value: 56)
!513 = !DIEnumerator(name: "MagickQuantumFormatOptions", value: 57)
!514 = !DIEnumerator(name: "MagickResolutionOptions", value: 58)
!515 = !DIEnumerator(name: "MagickResourceOptions", value: 59)
!516 = !DIEnumerator(name: "MagickSparseColorOptions", value: 60)
!517 = !DIEnumerator(name: "MagickStatisticOptions", value: 61)
!518 = !DIEnumerator(name: "MagickStorageOptions", value: 62)
!519 = !DIEnumerator(name: "MagickStretchOptions", value: 63)
!520 = !DIEnumerator(name: "MagickStyleOptions", value: 64)
!521 = !DIEnumerator(name: "MagickThresholdOptions", value: 65)
!522 = !DIEnumerator(name: "MagickTypeOptions", value: 66)
!523 = !DIEnumerator(name: "MagickValidateOptions", value: 67)
!524 = !DIEnumerator(name: "MagickVirtualPixelOptions", value: 68)
!525 = !DIEnumerator(name: "MagickComplexOptions", value: 69)
!526 = !DIEnumerator(name: "MagickIntensityOptions", value: 70)
!527 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !528, line: 34, baseType: !5, size: 32, elements: !529)
!528 = !DIFile(filename: "./magick/log.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!529 = !{!530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551}
!530 = !DIEnumerator(name: "UndefinedEvents", value: 0, isUnsigned: true)
!531 = !DIEnumerator(name: "NoEvents", value: 0, isUnsigned: true)
!532 = !DIEnumerator(name: "TraceEvent", value: 1, isUnsigned: true)
!533 = !DIEnumerator(name: "AnnotateEvent", value: 2, isUnsigned: true)
!534 = !DIEnumerator(name: "BlobEvent", value: 4, isUnsigned: true)
!535 = !DIEnumerator(name: "CacheEvent", value: 8, isUnsigned: true)
!536 = !DIEnumerator(name: "CoderEvent", value: 16, isUnsigned: true)
!537 = !DIEnumerator(name: "ConfigureEvent", value: 32, isUnsigned: true)
!538 = !DIEnumerator(name: "DeprecateEvent", value: 64, isUnsigned: true)
!539 = !DIEnumerator(name: "DrawEvent", value: 128, isUnsigned: true)
!540 = !DIEnumerator(name: "ExceptionEvent", value: 256, isUnsigned: true)
!541 = !DIEnumerator(name: "ImageEvent", value: 512, isUnsigned: true)
!542 = !DIEnumerator(name: "LocaleEvent", value: 1024, isUnsigned: true)
!543 = !DIEnumerator(name: "ModuleEvent", value: 2048, isUnsigned: true)
!544 = !DIEnumerator(name: "PolicyEvent", value: 4096, isUnsigned: true)
!545 = !DIEnumerator(name: "ResourceEvent", value: 8192, isUnsigned: true)
!546 = !DIEnumerator(name: "TransformEvent", value: 16384, isUnsigned: true)
!547 = !DIEnumerator(name: "UserEvent", value: 36864, isUnsigned: true)
!548 = !DIEnumerator(name: "WandEvent", value: 65536, isUnsigned: true)
!549 = !DIEnumerator(name: "X11Event", value: 131072, isUnsigned: true)
!550 = !DIEnumerator(name: "AccelerateEvent", value: 262144, isUnsigned: true)
!551 = !DIEnumerator(name: "AllEvents", value: 2147483647, isUnsigned: true)
!552 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !553, line: 25, baseType: !5, size: 32, elements: !554)
!553 = !DIFile(filename: "./magick/resource_.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!554 = !{!555, !556, !557, !558, !559, !560, !561, !562, !563}
!555 = !DIEnumerator(name: "UndefinedResource", value: 0, isUnsigned: true)
!556 = !DIEnumerator(name: "AreaResource", value: 1, isUnsigned: true)
!557 = !DIEnumerator(name: "DiskResource", value: 2, isUnsigned: true)
!558 = !DIEnumerator(name: "FileResource", value: 3, isUnsigned: true)
!559 = !DIEnumerator(name: "MapResource", value: 4, isUnsigned: true)
!560 = !DIEnumerator(name: "MemoryResource", value: 5, isUnsigned: true)
!561 = !DIEnumerator(name: "ThreadResource", value: 6, isUnsigned: true)
!562 = !DIEnumerator(name: "TimeResource", value: 7, isUnsigned: true)
!563 = !DIEnumerator(name: "ThrottleResource", value: 8, isUnsigned: true)
!564 = !{!565, !582, !572, !453, !583, !758, !581, !860, !640, !930, !932, !935, !617, !624, !669, !937, !934, !753, !570, !938, !652, !761, !943, !987, !992, !979, !814, !764, !1004, !1005, !1006, !625, !5}
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantizeInfo", file: !47, line: 57, baseType: !567)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_QuantizeInfo", file: !47, line: 35, size: 384, elements: !568)
!568 = !{!569, !573, !574, !576, !578, !579, !580}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "number_colors", scope: !567, file: !47, line: 38, baseType: !570, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !571, line: 46, baseType: !572)
!571 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!572 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "tree_depth", scope: !567, file: !47, line: 41, baseType: !570, size: 64, offset: 64)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !567, file: !47, line: 44, baseType: !575, size: 32, offset: 128)
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickBooleanType", file: !4, line: 215, baseType: !3)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !567, file: !47, line: 47, baseType: !577, size: 32, offset: 160)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorspaceType", file: !10, line: 61, baseType: !9)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "measure_error", scope: !567, file: !47, line: 50, baseType: !575, size: 32, offset: 192)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !567, file: !47, line: 53, baseType: !570, size: 64, offset: 256)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "dither_method", scope: !567, file: !47, line: 56, baseType: !581, size: 32, offset: 320)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "DitherMethod", file: !47, line: 33, baseType: !46)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageInfo", file: !4, line: 223, baseType: !585)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ImageInfo", file: !79, line: 356, size: 134336, elements: !586)
!586 = !{!587, !589, !591, !592, !593, !594, !595, !598, !599, !600, !601, !602, !603, !604, !606, !608, !610, !611, !612, !613, !614, !615, !616, !618, !619, !629, !630, !631, !632, !633, !634, !635, !637, !639, !645, !646, !647, !648, !649, !651, !844, !845, !846, !847, !848, !859, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !927, !928, !929}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !585, file: !79, line: 359, baseType: !588, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompressionType", file: !54, line: 49, baseType: !53)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !585, file: !79, line: 362, baseType: !590, size: 32, offset: 32)
!590 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrientationType", file: !79, line: 86, baseType: !78)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "temporary", scope: !585, file: !79, line: 365, baseType: !575, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "adjoin", scope: !585, file: !79, line: 366, baseType: !575, size: 32, offset: 96)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "affirm", scope: !585, file: !79, line: 367, baseType: !575, size: 32, offset: 128)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "antialias", scope: !585, file: !79, line: 368, baseType: !575, size: 32, offset: 160)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !585, file: !79, line: 371, baseType: !596, size: 64, offset: 192)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "extract", scope: !585, file: !79, line: 372, baseType: !596, size: 64, offset: 256)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !585, file: !79, line: 373, baseType: !596, size: 64, offset: 320)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "scenes", scope: !585, file: !79, line: 374, baseType: !596, size: 64, offset: 384)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !585, file: !79, line: 377, baseType: !570, size: 64, offset: 448)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "number_scenes", scope: !585, file: !79, line: 378, baseType: !570, size: 64, offset: 512)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !585, file: !79, line: 379, baseType: !570, size: 64, offset: 576)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !585, file: !79, line: 382, baseType: !605, size: 32, offset: 640)
!605 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterlaceType", file: !79, line: 73, baseType: !90)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !585, file: !79, line: 385, baseType: !607, size: 32, offset: 672)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "EndianType", file: !101, line: 35, baseType: !100)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !585, file: !79, line: 388, baseType: !609, size: 32, offset: 704)
!609 = !DIDerivedType(tag: DW_TAG_typedef, name: "ResolutionType", file: !79, line: 93, baseType: !106)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !585, file: !79, line: 391, baseType: !570, size: 64, offset: 768)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_factor", scope: !585, file: !79, line: 394, baseType: !596, size: 64, offset: 832)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "server_name", scope: !585, file: !79, line: 395, baseType: !596, size: 64, offset: 896)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "font", scope: !585, file: !79, line: 396, baseType: !596, size: 64, offset: 960)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "texture", scope: !585, file: !79, line: 397, baseType: !596, size: 64, offset: 1024)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !585, file: !79, line: 398, baseType: !596, size: 64, offset: 1088)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "pointsize", scope: !585, file: !79, line: 401, baseType: !617, size: 64, offset: 1152)
!617 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !585, file: !79, line: 402, baseType: !617, size: 64, offset: 1216)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !585, file: !79, line: 405, baseType: !620, size: 64, offset: 1280)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelPacket", file: !402, line: 148, baseType: !621)
!621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PixelPacket", file: !402, line: 131, size: 64, elements: !622)
!622 = !{!623, !626, !627, !628}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !621, file: !402, line: 143, baseType: !624, size: 16)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "Quantum", file: !4, line: 93, baseType: !625)
!625 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !621, file: !402, line: 144, baseType: !624, size: 16, offset: 16)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !621, file: !402, line: 145, baseType: !624, size: 16, offset: 32)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !621, file: !402, line: 146, baseType: !624, size: 16, offset: 48)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !585, file: !79, line: 406, baseType: !620, size: 64, offset: 1344)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !585, file: !79, line: 407, baseType: !620, size: 64, offset: 1408)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !585, file: !79, line: 410, baseType: !575, size: 32, offset: 1472)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "monochrome", scope: !585, file: !79, line: 411, baseType: !575, size: 32, offset: 1504)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !585, file: !79, line: 414, baseType: !570, size: 64, offset: 1536)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !585, file: !79, line: 417, baseType: !577, size: 32, offset: 1600)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !585, file: !79, line: 420, baseType: !636, size: 32, offset: 1632)
!636 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageType", file: !79, line: 61, baseType: !111)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "preview_type", scope: !585, file: !79, line: 423, baseType: !638, size: 32, offset: 1664)
!638 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviewType", file: !126, line: 59, baseType: !125)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !585, file: !79, line: 426, baseType: !640, size: 64, offset: 1728)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !641, line: 77, baseType: !642)
!641 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!642 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !643, line: 193, baseType: !644)
!643 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!644 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !585, file: !79, line: 429, baseType: !575, size: 32, offset: 1792)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !585, file: !79, line: 430, baseType: !575, size: 32, offset: 1824)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !585, file: !79, line: 433, baseType: !596, size: 64, offset: 1856)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "authenticate", scope: !585, file: !79, line: 434, baseType: !596, size: 64, offset: 1920)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !585, file: !79, line: 437, baseType: !650, size: 32, offset: 1984)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelType", file: !4, line: 202, baseType: !158)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !585, file: !79, line: 440, baseType: !652, size: 64, offset: 2048)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !4, line: 221, baseType: !654)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Image", file: !79, line: 150, size: 105920, elements: !655)
!655 = !{!656, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !670, !671, !672, !673, !674, !688, !690, !691, !692, !693, !694, !695, !696, !697, !698, !706, !707, !708, !709, !710, !711, !713, !714, !715, !717, !719, !721, !723, !724, !725, !726, !727, !728, !729, !737, !752, !766, !767, !768, !769, !773, !777, !781, !782, !783, !784, !785, !802, !803, !805, !806, !816, !817, !819, !820, !821, !822, !823, !824, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !841, !843}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !654, file: !79, line: 153, baseType: !657, size: 32)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClassType", file: !4, line: 209, baseType: !180)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !654, file: !79, line: 156, baseType: !577, size: 32, offset: 32)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !654, file: !79, line: 159, baseType: !588, size: 32, offset: 64)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !654, file: !79, line: 162, baseType: !570, size: 64, offset: 128)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !654, file: !79, line: 165, baseType: !590, size: 32, offset: 192)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "taint", scope: !654, file: !79, line: 168, baseType: !575, size: 32, offset: 224)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !654, file: !79, line: 169, baseType: !575, size: 32, offset: 256)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "columns", scope: !654, file: !79, line: 172, baseType: !570, size: 64, offset: 320)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "rows", scope: !654, file: !79, line: 173, baseType: !570, size: 64, offset: 384)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !654, file: !79, line: 174, baseType: !570, size: 64, offset: 448)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !654, file: !79, line: 175, baseType: !570, size: 64, offset: 512)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !654, file: !79, line: 178, baseType: !669, size: 64, offset: 576)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !654, file: !79, line: 179, baseType: !620, size: 64, offset: 640)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !654, file: !79, line: 180, baseType: !620, size: 64, offset: 704)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !654, file: !79, line: 181, baseType: !620, size: 64, offset: 768)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !654, file: !79, line: 184, baseType: !617, size: 64, offset: 832)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "chromaticity", scope: !654, file: !79, line: 187, baseType: !675, size: 768, offset: 896)
!675 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChromaticityInfo", file: !79, line: 128, baseType: !676)
!676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChromaticityInfo", file: !79, line: 121, size: 768, elements: !677)
!677 = !{!678, !685, !686, !687}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "red_primary", scope: !676, file: !79, line: 124, baseType: !679, size: 192)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "PrimaryInfo", file: !79, line: 101, baseType: !680)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PrimaryInfo", file: !79, line: 95, size: 192, elements: !681)
!681 = !{!682, !683, !684}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !680, file: !79, line: 98, baseType: !617, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !680, file: !79, line: 99, baseType: !617, size: 64, offset: 64)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !680, file: !79, line: 100, baseType: !617, size: 64, offset: 128)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "green_primary", scope: !676, file: !79, line: 125, baseType: !679, size: 192, offset: 192)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "blue_primary", scope: !676, file: !79, line: 126, baseType: !679, size: 192, offset: 384)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !676, file: !79, line: 127, baseType: !679, size: 192, offset: 576)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "rendering_intent", scope: !654, file: !79, line: 190, baseType: !689, size: 32, offset: 1664)
!689 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderingIntent", file: !186, line: 49, baseType: !185)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !654, file: !79, line: 193, baseType: !582, size: 64, offset: 1728)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !654, file: !79, line: 196, baseType: !609, size: 32, offset: 1792)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "montage", scope: !654, file: !79, line: 199, baseType: !596, size: 64, offset: 1856)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "directory", scope: !654, file: !79, line: 200, baseType: !596, size: 64, offset: 1920)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !654, file: !79, line: 201, baseType: !596, size: 64, offset: 1984)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !654, file: !79, line: 204, baseType: !640, size: 64, offset: 2048)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !654, file: !79, line: 207, baseType: !617, size: 64, offset: 2112)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !654, file: !79, line: 208, baseType: !617, size: 64, offset: 2176)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !654, file: !79, line: 211, baseType: !699, size: 256, offset: 2240)
!699 = !DIDerivedType(tag: DW_TAG_typedef, name: "RectangleInfo", file: !229, line: 130, baseType: !700)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_RectangleInfo", file: !229, line: 121, size: 256, elements: !701)
!701 = !{!702, !703, !704, !705}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !700, file: !229, line: 124, baseType: !570, size: 64)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !700, file: !229, line: 125, baseType: !570, size: 64, offset: 64)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !700, file: !229, line: 128, baseType: !640, size: 64, offset: 128)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !700, file: !229, line: 129, baseType: !640, size: 64, offset: 192)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "extract_info", scope: !654, file: !79, line: 212, baseType: !699, size: 256, offset: 2496)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "tile_info", scope: !654, file: !79, line: 213, baseType: !699, size: 256, offset: 2752)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !654, file: !79, line: 216, baseType: !617, size: 64, offset: 3008)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "blur", scope: !654, file: !79, line: 217, baseType: !617, size: 64, offset: 3072)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !654, file: !79, line: 218, baseType: !617, size: 64, offset: 3136)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !654, file: !79, line: 221, baseType: !712, size: 32, offset: 3200)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "FilterTypes", file: !194, line: 66, baseType: !193)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !654, file: !79, line: 224, baseType: !605, size: 32, offset: 3232)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !654, file: !79, line: 227, baseType: !607, size: 32, offset: 3264)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !654, file: !79, line: 230, baseType: !716, size: 32, offset: 3296)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "GravityType", file: !229, line: 91, baseType: !228)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !654, file: !79, line: 233, baseType: !718, size: 32, offset: 3328)
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompositeOperator", file: !244, line: 99, baseType: !243)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "dispose", scope: !654, file: !79, line: 236, baseType: !720, size: 32, offset: 3360)
!720 = !DIDerivedType(tag: DW_TAG_typedef, name: "DisposeType", file: !315, line: 32, baseType: !314)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !654, file: !79, line: 239, baseType: !722, size: 64, offset: 3392)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !654, file: !79, line: 242, baseType: !570, size: 64, offset: 3456)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !654, file: !79, line: 243, baseType: !570, size: 64, offset: 3520)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_second", scope: !654, file: !79, line: 246, baseType: !640, size: 64, offset: 3584)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !654, file: !79, line: 249, baseType: !570, size: 64, offset: 3648)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "total_colors", scope: !654, file: !79, line: 250, baseType: !570, size: 64, offset: 3712)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "start_loop", scope: !654, file: !79, line: 253, baseType: !640, size: 64, offset: 3776)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !654, file: !79, line: 256, baseType: !730, size: 192, offset: 3840)
!730 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorInfo", file: !731, line: 68, baseType: !732)
!731 = !DIFile(filename: "./magick/color.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ErrorInfo", file: !731, line: 62, size: 192, elements: !733)
!733 = !{!734, !735, !736}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "mean_error_per_pixel", scope: !732, file: !731, line: 65, baseType: !617, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_mean_error", scope: !732, file: !731, line: 66, baseType: !617, size: 64, offset: 64)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_maximum_error", scope: !732, file: !731, line: 67, baseType: !617, size: 64, offset: 128)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !654, file: !79, line: 259, baseType: !738, size: 512, offset: 4032)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerInfo", file: !323, line: 51, baseType: !739)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_TimerInfo", file: !323, line: 40, size: 512, elements: !740)
!740 = !{!741, !748, !749, !751}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !739, file: !323, line: 43, baseType: !742, size: 192)
!742 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer", file: !323, line: 38, baseType: !743)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Timer", file: !323, line: 32, size: 192, elements: !744)
!744 = !{!745, !746, !747}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !743, file: !323, line: 35, baseType: !617, size: 64)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !743, file: !323, line: 36, baseType: !617, size: 64, offset: 64)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !743, file: !323, line: 37, baseType: !617, size: 64, offset: 128)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "elapsed", scope: !739, file: !323, line: 44, baseType: !742, size: 192, offset: 192)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !739, file: !323, line: 47, baseType: !750, size: 32, offset: 384)
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerState", file: !323, line: 30, baseType: !322)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !739, file: !323, line: 50, baseType: !570, size: 64, offset: 448)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !654, file: !79, line: 262, baseType: !753, size: 64, offset: 4544)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickProgressMonitor", file: !754, line: 26, baseType: !755)
!754 = !DIFile(filename: "./magick/monitor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DISubroutineType(types: !757)
!757 = !{!575, !758, !760, !763, !582}
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !597)
!760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !761)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickOffsetType", file: !4, line: 150, baseType: !762)
!762 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !764)
!764 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickSizeType", file: !4, line: 151, baseType: !765)
!765 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !654, file: !79, line: 265, baseType: !582, size: 64, offset: 4608)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !654, file: !79, line: 266, baseType: !582, size: 64, offset: 4672)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !654, file: !79, line: 267, baseType: !582, size: 64, offset: 4736)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "ascii85", scope: !654, file: !79, line: 270, baseType: !770, size: 64, offset: 4800)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ascii85Info", file: !54, line: 52, baseType: !772)
!772 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Ascii85Info", file: !54, line: 51, flags: DIFlagFwdDecl)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !654, file: !79, line: 273, baseType: !774, size: 64, offset: 4864)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlobInfo", file: !4, line: 217, baseType: !776)
!776 = !DICompositeType(tag: DW_TAG_structure_type, name: "_BlobInfo", file: !4, line: 217, flags: DIFlagFwdDecl)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !654, file: !79, line: 276, baseType: !778, size: 32768, offset: 4928)
!778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !597, size: 32768, elements: !779)
!779 = !{!780}
!780 = !DISubrange(count: 4096)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "magick_filename", scope: !654, file: !79, line: 277, baseType: !778, size: 32768, offset: 37696)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !654, file: !79, line: 278, baseType: !778, size: 32768, offset: 70464)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "magick_columns", scope: !654, file: !79, line: 281, baseType: !570, size: 64, offset: 103232)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "magick_rows", scope: !654, file: !79, line: 282, baseType: !570, size: 64, offset: 103296)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "exception", scope: !654, file: !79, line: 285, baseType: !786, size: 448, offset: 103360)
!786 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionInfo", file: !4, line: 219, baseType: !787)
!787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ExceptionInfo", file: !329, line: 102, size: 448, elements: !788)
!788 = !{!789, !791, !792, !793, !794, !795, !796, !801}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "severity", scope: !787, file: !329, line: 105, baseType: !790, size: 32)
!790 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionType", file: !329, line: 100, baseType: !328)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "error_number", scope: !787, file: !329, line: 108, baseType: !453, size: 32, offset: 32)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !787, file: !329, line: 111, baseType: !596, size: 64, offset: 64)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !787, file: !329, line: 112, baseType: !596, size: 64, offset: 128)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "exceptions", scope: !787, file: !329, line: 115, baseType: !582, size: 64, offset: 192)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "relinquish", scope: !787, file: !329, line: 118, baseType: !575, size: 32, offset: 256)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !787, file: !329, line: 121, baseType: !797, size: 64, offset: 320)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "SemaphoreInfo", file: !799, line: 26, baseType: !800)
!799 = !DIFile(filename: "./magick/semaphore.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!800 = !DICompositeType(tag: DW_TAG_structure_type, name: "SemaphoreInfo", file: !799, line: 25, flags: DIFlagFwdDecl)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !787, file: !329, line: 124, baseType: !570, size: 64, offset: 384)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !654, file: !79, line: 288, baseType: !575, size: 32, offset: 103808)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "reference_count", scope: !654, file: !79, line: 291, baseType: !804, size: 64, offset: 103872)
!804 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !640)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !654, file: !79, line: 294, baseType: !797, size: 64, offset: 103936)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !654, file: !79, line: 297, baseType: !807, size: 256, offset: 104000)
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProfileInfo", file: !186, line: 40, baseType: !808)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ProfileInfo", file: !186, line: 27, size: 256, elements: !809)
!809 = !{!810, !811, !812, !815}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !808, file: !186, line: 30, baseType: !596, size: 64)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !808, file: !186, line: 33, baseType: !570, size: 64, offset: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !808, file: !186, line: 36, baseType: !813, size: 64, offset: 128)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !808, file: !186, line: 39, baseType: !570, size: 64, offset: 192)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "iptc_profile", scope: !654, file: !79, line: 298, baseType: !807, size: 256, offset: 104256)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profile", scope: !654, file: !79, line: 299, baseType: !818, size: 64, offset: 104512)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profiles", scope: !654, file: !79, line: 302, baseType: !570, size: 64, offset: 104576)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !654, file: !79, line: 305, baseType: !570, size: 64, offset: 104640)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !654, file: !79, line: 308, baseType: !722, size: 64, offset: 104704)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !654, file: !79, line: 309, baseType: !722, size: 64, offset: 104768)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !654, file: !79, line: 310, baseType: !722, size: 64, offset: 104832)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate", scope: !654, file: !79, line: 313, baseType: !825, size: 32, offset: 104896)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterpolatePixelMethod", file: !402, line: 47, baseType: !401)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "black_point_compensation", scope: !654, file: !79, line: 316, baseType: !575, size: 32, offset: 104928)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !654, file: !79, line: 319, baseType: !620, size: 64, offset: 104960)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !654, file: !79, line: 322, baseType: !722, size: 64, offset: 105024)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "tile_offset", scope: !654, file: !79, line: 325, baseType: !699, size: 256, offset: 105088)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !654, file: !79, line: 328, baseType: !582, size: 64, offset: 105344)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "artifacts", scope: !654, file: !79, line: 329, baseType: !582, size: 64, offset: 105408)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !654, file: !79, line: 332, baseType: !636, size: 32, offset: 105472)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !654, file: !79, line: 335, baseType: !575, size: 32, offset: 105504)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !654, file: !79, line: 338, baseType: !764, size: 64, offset: 105536)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !654, file: !79, line: 341, baseType: !575, size: 32, offset: 105600)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !654, file: !79, line: 344, baseType: !570, size: 64, offset: 105664)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !654, file: !79, line: 347, baseType: !838, size: 64, offset: 105728)
!838 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !839, line: 7, baseType: !840)
!839 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!840 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !643, line: 160, baseType: !644)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !654, file: !79, line: 350, baseType: !842, size: 32, offset: 105792)
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelIntensityMethod", file: !402, line: 79, baseType: !418)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !654, file: !79, line: 353, baseType: !570, size: 64, offset: 105856)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !585, file: !79, line: 443, baseType: !582, size: 64, offset: 2112)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !585, file: !79, line: 446, baseType: !753, size: 64, offset: 2176)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !585, file: !79, line: 449, baseType: !582, size: 64, offset: 2240)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !585, file: !79, line: 450, baseType: !582, size: 64, offset: 2304)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !585, file: !79, line: 453, baseType: !849, size: 64, offset: 2368)
!849 = !DIDerivedType(tag: DW_TAG_typedef, name: "StreamHandler", file: !850, line: 26, baseType: !851)
!850 = !DIFile(filename: "./magick/stream.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = !DISubroutineType(types: !853)
!853 = !{!570, !854, !856, !858}
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !653)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !570)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !585, file: !79, line: 456, baseType: !860, size: 64, offset: 2432)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !862, line: 7, baseType: !863)
!862 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !864, line: 49, size: 1728, elements: !865)
!864 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!865 = !{!866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !881, !883, !884, !885, !887, !888, !890, !894, !897, !899, !902, !905, !906, !907, !908, !909}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !863, file: !864, line: 51, baseType: !453, size: 32)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !863, file: !864, line: 54, baseType: !596, size: 64, offset: 64)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !863, file: !864, line: 55, baseType: !596, size: 64, offset: 128)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !863, file: !864, line: 56, baseType: !596, size: 64, offset: 192)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !863, file: !864, line: 57, baseType: !596, size: 64, offset: 256)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !863, file: !864, line: 58, baseType: !596, size: 64, offset: 320)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !863, file: !864, line: 59, baseType: !596, size: 64, offset: 384)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !863, file: !864, line: 60, baseType: !596, size: 64, offset: 448)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !863, file: !864, line: 61, baseType: !596, size: 64, offset: 512)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !863, file: !864, line: 64, baseType: !596, size: 64, offset: 576)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !863, file: !864, line: 65, baseType: !596, size: 64, offset: 640)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !863, file: !864, line: 66, baseType: !596, size: 64, offset: 704)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !863, file: !864, line: 68, baseType: !879, size: 64, offset: 768)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !864, line: 36, flags: DIFlagFwdDecl)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !863, file: !864, line: 70, baseType: !882, size: 64, offset: 832)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !863, file: !864, line: 72, baseType: !453, size: 32, offset: 896)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !863, file: !864, line: 73, baseType: !453, size: 32, offset: 928)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !863, file: !864, line: 74, baseType: !886, size: 64, offset: 960)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !643, line: 152, baseType: !644)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !863, file: !864, line: 77, baseType: !625, size: 16, offset: 1024)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !863, file: !864, line: 78, baseType: !889, size: 8, offset: 1040)
!889 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !863, file: !864, line: 79, baseType: !891, size: 8, offset: 1048)
!891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !597, size: 8, elements: !892)
!892 = !{!893}
!893 = !DISubrange(count: 1)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !863, file: !864, line: 81, baseType: !895, size: 64, offset: 1088)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !864, line: 43, baseType: null)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !863, file: !864, line: 89, baseType: !898, size: 64, offset: 1152)
!898 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !643, line: 153, baseType: !644)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !863, file: !864, line: 91, baseType: !900, size: 64, offset: 1216)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !864, line: 37, flags: DIFlagFwdDecl)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !863, file: !864, line: 92, baseType: !903, size: 64, offset: 1280)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !864, line: 38, flags: DIFlagFwdDecl)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !863, file: !864, line: 93, baseType: !882, size: 64, offset: 1344)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !863, file: !864, line: 94, baseType: !582, size: 64, offset: 1408)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !863, file: !864, line: 95, baseType: !570, size: 64, offset: 1472)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !863, file: !864, line: 96, baseType: !453, size: 32, offset: 1536)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !863, file: !864, line: 98, baseType: !910, size: 160, offset: 1568)
!910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !597, size: 160, elements: !911)
!911 = !{!912}
!912 = !DISubrange(count: 20)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !585, file: !79, line: 459, baseType: !582, size: 64, offset: 2496)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !585, file: !79, line: 462, baseType: !570, size: 64, offset: 2560)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !585, file: !79, line: 465, baseType: !778, size: 32768, offset: 2624)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "unique", scope: !585, file: !79, line: 466, baseType: !778, size: 32768, offset: 35392)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !585, file: !79, line: 467, baseType: !778, size: 32768, offset: 68160)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !585, file: !79, line: 468, baseType: !778, size: 32768, offset: 100928)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !585, file: !79, line: 471, baseType: !575, size: 32, offset: 133696)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !585, file: !79, line: 474, baseType: !596, size: 64, offset: 133760)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "subimage", scope: !585, file: !79, line: 477, baseType: !570, size: 64, offset: 133824)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "subrange", scope: !585, file: !79, line: 478, baseType: !570, size: 64, offset: 133888)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "pen", scope: !585, file: !79, line: 481, baseType: !620, size: 64, offset: 133952)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !585, file: !79, line: 484, baseType: !570, size: 64, offset: 134016)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_pixel_method", scope: !585, file: !79, line: 487, baseType: !926, size: 32, offset: 134080)
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "VirtualPixelMethod", file: !431, line: 47, baseType: !430)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !585, file: !79, line: 490, baseType: !620, size: 64, offset: 134112)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !585, file: !79, line: 493, baseType: !582, size: 64, offset: 134208)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "synchronize", scope: !585, file: !79, line: 496, baseType: !575, size: 32, offset: 134272)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !620)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !934)
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndexPacket", file: !402, line: 129, baseType: !624)
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickRealType", file: !4, line: 78, baseType: !936)
!936 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DIDerivedType(tag: DW_TAG_typedef, name: "CubeInfo", file: !1, line: 321, baseType: !940)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_CubeInfo", file: !1, line: 257, size: 4032, elements: !941)
!941 = !{!942, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !986, !991, !993, !995, !997, !998, !999, !1000, !1001, !1002, !1003}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !940, file: !1, line: 260, baseType: !943, size: 64)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeInfo", file: !1, line: 246, baseType: !945)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_NodeInfo", file: !1, line: 227, size: 1536, elements: !946)
!946 = !{!947, !949, !953, !954, !962, !963, !964, !965}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !945, file: !1, line: 230, baseType: !948, size: 64)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !945, file: !1, line: 231, baseType: !950, size: 1024, offset: 64)
!950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !948, size: 1024, elements: !951)
!951 = !{!952}
!952 = !DISubrange(count: 16)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "number_unique", scope: !945, file: !1, line: 234, baseType: !764, size: 64, offset: 1088)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "total_color", scope: !945, file: !1, line: 237, baseType: !955, size: 128, offset: 1152)
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "RealPixelPacket", file: !1, line: 225, baseType: !956)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_RealPixelPacket", file: !1, line: 218, size: 128, elements: !957)
!957 = !{!958, !959, !960, !961}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !956, file: !1, line: 221, baseType: !935, size: 32)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !956, file: !1, line: 222, baseType: !935, size: 32, offset: 32)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !956, file: !1, line: 223, baseType: !935, size: 32, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !956, file: !1, line: 224, baseType: !935, size: 32, offset: 96)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "quantize_error", scope: !945, file: !1, line: 240, baseType: !935, size: 32, offset: 1280)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "color_number", scope: !945, file: !1, line: 243, baseType: !570, size: 64, offset: 1344)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !945, file: !1, line: 244, baseType: !570, size: 64, offset: 1408)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !945, file: !1, line: 245, baseType: !570, size: 64, offset: 1472)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !940, file: !1, line: 263, baseType: !570, size: 64, offset: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "maximum_colors", scope: !940, file: !1, line: 264, baseType: !570, size: 64, offset: 128)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_index", scope: !940, file: !1, line: 267, baseType: !640, size: 64, offset: 192)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_pixels", scope: !940, file: !1, line: 270, baseType: !764, size: 64, offset: 256)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !940, file: !1, line: 273, baseType: !955, size: 128, offset: 320)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !940, file: !1, line: 276, baseType: !935, size: 32, offset: 448)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "pruning_threshold", scope: !940, file: !1, line: 277, baseType: !935, size: 32, offset: 480)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "next_threshold", scope: !940, file: !1, line: 278, baseType: !935, size: 32, offset: 512)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !940, file: !1, line: 281, baseType: !570, size: 64, offset: 576)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "free_nodes", scope: !940, file: !1, line: 282, baseType: !570, size: 64, offset: 640)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "color_number", scope: !940, file: !1, line: 283, baseType: !570, size: 64, offset: 704)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "next_node", scope: !940, file: !1, line: 286, baseType: !943, size: 64, offset: 768)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "node_queue", scope: !940, file: !1, line: 289, baseType: !979, size: 64, offset: 832)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nodes", file: !1, line: 255, baseType: !981)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Nodes", file: !1, line: 248, size: 128, elements: !982)
!982 = !{!983, !984}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !981, file: !1, line: 251, baseType: !943, size: 64)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !981, file: !1, line: 254, baseType: !985, size: 64, offset: 64)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "memory_info", scope: !940, file: !1, line: 292, baseType: !987, size: 64, offset: 896)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "MemoryInfo", file: !989, line: 26, baseType: !990)
!989 = !DIFile(filename: "./magick/memory_.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!990 = !DICompositeType(tag: DW_TAG_structure_type, name: "_MemoryInfo", file: !989, line: 25, flags: DIFlagFwdDecl)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !940, file: !1, line: 295, baseType: !992, size: 64, offset: 960)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !940, file: !1, line: 298, baseType: !994, size: 2048, offset: 1024)
!994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !955, size: 2048, elements: !951)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "weights", scope: !940, file: !1, line: 301, baseType: !996, size: 512, offset: 3072)
!996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !935, size: 512, elements: !951)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "quantize_info", scope: !940, file: !1, line: 304, baseType: !565, size: 64, offset: 3584)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "associate_alpha", scope: !940, file: !1, line: 307, baseType: !575, size: 32, offset: 3648)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !940, file: !1, line: 310, baseType: !640, size: 64, offset: 3712)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !940, file: !1, line: 311, baseType: !640, size: 64, offset: 3776)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !940, file: !1, line: 314, baseType: !570, size: 64, offset: 3840)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !940, file: !1, line: 317, baseType: !761, size: 64, offset: 3904)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "span", scope: !940, file: !1, line: 320, baseType: !764, size: 64, offset: 3968)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!1007 = !{i32 7, !"Dwarf Version", i32 4}
!1008 = !{i32 2, !"Debug Info Version", i32 3}
!1009 = !{i32 1, !"wchar_size", i32 4}
!1010 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1011 = distinct !DISubprogram(name: "AcquireQuantizeInfo", scope: !1, file: !1, line: 370, type: !1012, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{!565, !1014}
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !584)
!1016 = !{}
!1017 = !DILocalVariable(name: "image_info", arg: 1, scope: !1011, file: !1, line: 370, type: !1014)
!1018 = !DILocation(line: 370, column: 65, scope: !1011)
!1019 = !DILocalVariable(name: "quantize_info", scope: !1011, file: !1, line: 373, type: !565)
!1020 = !DILocation(line: 373, column: 6, scope: !1011)
!1021 = !DILocation(line: 375, column: 34, scope: !1011)
!1022 = !DILocation(line: 375, column: 17, scope: !1011)
!1023 = !DILocation(line: 375, column: 16, scope: !1011)
!1024 = !DILocation(line: 376, column: 7, scope: !1025)
!1025 = distinct !DILexicalBlock(scope: !1011, file: !1, line: 376, column: 7)
!1026 = !DILocation(line: 376, column: 21, scope: !1025)
!1027 = !DILocation(line: 376, column: 7, scope: !1011)
!1028 = !DILocalVariable(name: "message", scope: !1029, file: !1, line: 377, type: !596)
!1029 = distinct !DILexicalBlock(scope: !1025, file: !1, line: 377, column: 5)
!1030 = !DILocation(line: 377, column: 5, scope: !1029)
!1031 = !DILocalVariable(name: "exception", scope: !1029, file: !1, line: 377, type: !786)
!1032 = !DILocation(line: 378, column: 19, scope: !1011)
!1033 = !DILocation(line: 378, column: 3, scope: !1011)
!1034 = !DILocation(line: 379, column: 7, scope: !1035)
!1035 = distinct !DILexicalBlock(scope: !1011, file: !1, line: 379, column: 7)
!1036 = !DILocation(line: 379, column: 18, scope: !1035)
!1037 = !DILocation(line: 379, column: 7, scope: !1011)
!1038 = !DILocalVariable(name: "option", scope: !1039, file: !1, line: 382, type: !758)
!1039 = distinct !DILexicalBlock(scope: !1035, file: !1, line: 380, column: 5)
!1040 = !DILocation(line: 382, column: 10, scope: !1039)
!1041 = !DILocation(line: 384, column: 29, scope: !1039)
!1042 = !DILocation(line: 384, column: 41, scope: !1039)
!1043 = !DILocation(line: 384, column: 7, scope: !1039)
!1044 = !DILocation(line: 384, column: 22, scope: !1039)
!1045 = !DILocation(line: 384, column: 28, scope: !1039)
!1046 = !DILocation(line: 385, column: 29, scope: !1039)
!1047 = !DILocation(line: 385, column: 14, scope: !1039)
!1048 = !DILocation(line: 385, column: 13, scope: !1039)
!1049 = !DILocation(line: 386, column: 11, scope: !1050)
!1050 = distinct !DILexicalBlock(scope: !1039, file: !1, line: 386, column: 11)
!1051 = !DILocation(line: 386, column: 18, scope: !1050)
!1052 = !DILocation(line: 386, column: 11, scope: !1039)
!1053 = !DILocation(line: 388, column: 43, scope: !1050)
!1054 = !DILocation(line: 387, column: 53, scope: !1050)
!1055 = !DILocation(line: 387, column: 38, scope: !1050)
!1056 = !DILocation(line: 387, column: 9, scope: !1050)
!1057 = !DILocation(line: 387, column: 24, scope: !1050)
!1058 = !DILocation(line: 387, column: 37, scope: !1050)
!1059 = !DILocation(line: 389, column: 36, scope: !1039)
!1060 = !DILocation(line: 389, column: 48, scope: !1039)
!1061 = !DILocation(line: 389, column: 7, scope: !1039)
!1062 = !DILocation(line: 389, column: 22, scope: !1039)
!1063 = !DILocation(line: 389, column: 35, scope: !1039)
!1064 = !DILocation(line: 390, column: 5, scope: !1039)
!1065 = !DILocation(line: 391, column: 10, scope: !1011)
!1066 = !DILocation(line: 391, column: 3, scope: !1011)
!1067 = distinct !DISubprogram(name: "GetQuantizeInfo", scope: !1, file: !1, line: 2235, type: !1068, scopeLine: 2236, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!1068 = !DISubroutineType(types: !1069)
!1069 = !{null, !565}
!1070 = !DILocalVariable(name: "quantize_info", arg: 1, scope: !1067, file: !1, line: 2235, type: !565)
!1071 = !DILocation(line: 2235, column: 49, scope: !1067)
!1072 = !DILocation(line: 2237, column: 10, scope: !1067)
!1073 = !DILocation(line: 2239, column: 28, scope: !1067)
!1074 = !DILocation(line: 2239, column: 10, scope: !1067)
!1075 = !DILocation(line: 2240, column: 3, scope: !1067)
!1076 = !DILocation(line: 2240, column: 18, scope: !1067)
!1077 = !DILocation(line: 2240, column: 31, scope: !1067)
!1078 = !DILocation(line: 2241, column: 3, scope: !1067)
!1079 = !DILocation(line: 2241, column: 18, scope: !1067)
!1080 = !DILocation(line: 2241, column: 24, scope: !1067)
!1081 = !DILocation(line: 2242, column: 3, scope: !1067)
!1082 = !DILocation(line: 2242, column: 18, scope: !1067)
!1083 = !DILocation(line: 2242, column: 31, scope: !1067)
!1084 = !DILocation(line: 2243, column: 3, scope: !1067)
!1085 = !DILocation(line: 2243, column: 18, scope: !1067)
!1086 = !DILocation(line: 2243, column: 28, scope: !1067)
!1087 = !DILocation(line: 2244, column: 3, scope: !1067)
!1088 = !DILocation(line: 2244, column: 18, scope: !1067)
!1089 = !DILocation(line: 2244, column: 31, scope: !1067)
!1090 = !DILocation(line: 2245, column: 3, scope: !1067)
!1091 = !DILocation(line: 2245, column: 18, scope: !1067)
!1092 = !DILocation(line: 2245, column: 27, scope: !1067)
!1093 = !DILocation(line: 2246, column: 1, scope: !1067)
!1094 = distinct !DISubprogram(name: "CloneQuantizeInfo", scope: !1, file: !1, line: 1014, type: !1095, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!565, !1097}
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !566)
!1099 = !DILocalVariable(name: "quantize_info", arg: 1, scope: !1094, file: !1, line: 1014, type: !1097)
!1100 = !DILocation(line: 1014, column: 66, scope: !1094)
!1101 = !DILocalVariable(name: "clone_info", scope: !1094, file: !1, line: 1017, type: !565)
!1102 = !DILocation(line: 1017, column: 6, scope: !1094)
!1103 = !DILocation(line: 1019, column: 31, scope: !1094)
!1104 = !DILocation(line: 1019, column: 14, scope: !1094)
!1105 = !DILocation(line: 1019, column: 13, scope: !1094)
!1106 = !DILocation(line: 1020, column: 7, scope: !1107)
!1107 = distinct !DILexicalBlock(scope: !1094, file: !1, line: 1020, column: 7)
!1108 = !DILocation(line: 1020, column: 18, scope: !1107)
!1109 = !DILocation(line: 1020, column: 7, scope: !1094)
!1110 = !DILocalVariable(name: "message", scope: !1111, file: !1, line: 1021, type: !596)
!1111 = distinct !DILexicalBlock(scope: !1107, file: !1, line: 1021, column: 5)
!1112 = !DILocation(line: 1021, column: 5, scope: !1111)
!1113 = !DILocalVariable(name: "exception", scope: !1111, file: !1, line: 1021, type: !786)
!1114 = !DILocation(line: 1022, column: 19, scope: !1094)
!1115 = !DILocation(line: 1022, column: 3, scope: !1094)
!1116 = !DILocation(line: 1023, column: 7, scope: !1117)
!1117 = distinct !DILexicalBlock(scope: !1094, file: !1, line: 1023, column: 7)
!1118 = !DILocation(line: 1023, column: 21, scope: !1117)
!1119 = !DILocation(line: 1023, column: 7, scope: !1094)
!1120 = !DILocation(line: 1024, column: 12, scope: !1117)
!1121 = !DILocation(line: 1024, column: 5, scope: !1117)
!1122 = !DILocation(line: 1025, column: 29, scope: !1094)
!1123 = !DILocation(line: 1025, column: 44, scope: !1094)
!1124 = !DILocation(line: 1025, column: 3, scope: !1094)
!1125 = !DILocation(line: 1025, column: 15, scope: !1094)
!1126 = !DILocation(line: 1025, column: 28, scope: !1094)
!1127 = !DILocation(line: 1026, column: 26, scope: !1094)
!1128 = !DILocation(line: 1026, column: 41, scope: !1094)
!1129 = !DILocation(line: 1026, column: 3, scope: !1094)
!1130 = !DILocation(line: 1026, column: 15, scope: !1094)
!1131 = !DILocation(line: 1026, column: 25, scope: !1094)
!1132 = !DILocation(line: 1027, column: 22, scope: !1094)
!1133 = !DILocation(line: 1027, column: 37, scope: !1094)
!1134 = !DILocation(line: 1027, column: 3, scope: !1094)
!1135 = !DILocation(line: 1027, column: 15, scope: !1094)
!1136 = !DILocation(line: 1027, column: 21, scope: !1094)
!1137 = !DILocation(line: 1028, column: 29, scope: !1094)
!1138 = !DILocation(line: 1028, column: 44, scope: !1094)
!1139 = !DILocation(line: 1028, column: 3, scope: !1094)
!1140 = !DILocation(line: 1028, column: 15, scope: !1094)
!1141 = !DILocation(line: 1028, column: 28, scope: !1094)
!1142 = !DILocation(line: 1029, column: 26, scope: !1094)
!1143 = !DILocation(line: 1029, column: 41, scope: !1094)
!1144 = !DILocation(line: 1029, column: 3, scope: !1094)
!1145 = !DILocation(line: 1029, column: 15, scope: !1094)
!1146 = !DILocation(line: 1029, column: 25, scope: !1094)
!1147 = !DILocation(line: 1030, column: 29, scope: !1094)
!1148 = !DILocation(line: 1030, column: 44, scope: !1094)
!1149 = !DILocation(line: 1030, column: 3, scope: !1094)
!1150 = !DILocation(line: 1030, column: 15, scope: !1094)
!1151 = !DILocation(line: 1030, column: 28, scope: !1094)
!1152 = !DILocation(line: 1031, column: 10, scope: !1094)
!1153 = !DILocation(line: 1031, column: 3, scope: !1094)
!1154 = !DILocation(line: 1032, column: 1, scope: !1094)
!1155 = distinct !DISubprogram(name: "CompressImageColormap", scope: !1, file: !1, line: 1155, type: !1156, scopeLine: 1156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!1156 = !DISubroutineType(types: !1157)
!1157 = !{!575, !652}
!1158 = !DILocalVariable(name: "image", arg: 1, scope: !1155, file: !1, line: 1155, type: !652)
!1159 = !DILocation(line: 1155, column: 61, scope: !1155)
!1160 = !DILocalVariable(name: "quantize_info", scope: !1155, file: !1, line: 1158, type: !566)
!1161 = !DILocation(line: 1158, column: 5, scope: !1155)
!1162 = !DILocation(line: 1162, column: 7, scope: !1163)
!1163 = distinct !DILexicalBlock(scope: !1155, file: !1, line: 1162, column: 7)
!1164 = !DILocation(line: 1162, column: 14, scope: !1163)
!1165 = !DILocation(line: 1162, column: 20, scope: !1163)
!1166 = !DILocation(line: 1162, column: 7, scope: !1155)
!1167 = !DILocation(line: 1163, column: 61, scope: !1163)
!1168 = !DILocation(line: 1163, column: 68, scope: !1163)
!1169 = !DILocation(line: 1163, column: 12, scope: !1163)
!1170 = !DILocation(line: 1163, column: 5, scope: !1163)
!1171 = !DILocation(line: 1164, column: 22, scope: !1172)
!1172 = distinct !DILexicalBlock(scope: !1155, file: !1, line: 1164, column: 7)
!1173 = !DILocation(line: 1164, column: 29, scope: !1172)
!1174 = !DILocation(line: 1164, column: 36, scope: !1172)
!1175 = !DILocation(line: 1164, column: 7, scope: !1172)
!1176 = !DILocation(line: 1164, column: 47, scope: !1172)
!1177 = !DILocation(line: 1164, column: 7, scope: !1155)
!1178 = !DILocation(line: 1165, column: 5, scope: !1172)
!1179 = !DILocation(line: 1166, column: 3, scope: !1155)
!1180 = !DILocation(line: 1167, column: 31, scope: !1155)
!1181 = !DILocation(line: 1167, column: 38, scope: !1155)
!1182 = !DILocation(line: 1167, column: 17, scope: !1155)
!1183 = !DILocation(line: 1167, column: 30, scope: !1155)
!1184 = !DILocation(line: 1168, column: 17, scope: !1155)
!1185 = !DILocation(line: 1168, column: 27, scope: !1155)
!1186 = !DILocation(line: 1169, column: 39, scope: !1155)
!1187 = !DILocation(line: 1169, column: 10, scope: !1155)
!1188 = !DILocation(line: 1169, column: 3, scope: !1155)
!1189 = !DILocation(line: 1170, column: 1, scope: !1155)
!1190 = distinct !DISubprogram(name: "QuantizeImage", scope: !1, file: !1, line: 2677, type: !1191, scopeLine: 2679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!1191 = !DISubroutineType(types: !1192)
!1192 = !{!575, !1097, !652}
!1193 = !DILocalVariable(name: "quantize_info", arg: 1, scope: !1190, file: !1, line: 2677, type: !1097)
!1194 = !DILocation(line: 2677, column: 66, scope: !1190)
!1195 = !DILocalVariable(name: "image", arg: 2, scope: !1190, file: !1, line: 2678, type: !652)
!1196 = !DILocation(line: 2678, column: 10, scope: !1190)
!1197 = !DILocalVariable(name: "cube_info", scope: !1190, file: !1, line: 2681, type: !938)
!1198 = !DILocation(line: 2681, column: 6, scope: !1190)
!1199 = !DILocalVariable(name: "status", scope: !1190, file: !1, line: 2684, type: !575)
!1200 = !DILocation(line: 2684, column: 5, scope: !1190)
!1201 = !DILocalVariable(name: "depth", scope: !1190, file: !1, line: 2687, type: !570)
!1202 = !DILocation(line: 2687, column: 5, scope: !1190)
!1203 = !DILocalVariable(name: "maximum_colors", scope: !1190, file: !1, line: 2688, type: !570)
!1204 = !DILocation(line: 2688, column: 5, scope: !1190)
!1205 = !DILocation(line: 2694, column: 7, scope: !1206)
!1206 = distinct !DILexicalBlock(scope: !1190, file: !1, line: 2694, column: 7)
!1207 = !DILocation(line: 2694, column: 14, scope: !1206)
!1208 = !DILocation(line: 2694, column: 20, scope: !1206)
!1209 = !DILocation(line: 2694, column: 7, scope: !1190)
!1210 = !DILocation(line: 2695, column: 61, scope: !1206)
!1211 = !DILocation(line: 2695, column: 68, scope: !1206)
!1212 = !DILocation(line: 2695, column: 12, scope: !1206)
!1213 = !DILocation(line: 2695, column: 5, scope: !1206)
!1214 = !DILocation(line: 2696, column: 18, scope: !1190)
!1215 = !DILocation(line: 2696, column: 33, scope: !1190)
!1216 = !DILocation(line: 2696, column: 17, scope: !1190)
!1217 = !DILocation(line: 2697, column: 7, scope: !1218)
!1218 = distinct !DILexicalBlock(scope: !1190, file: !1, line: 2697, column: 7)
!1219 = !DILocation(line: 2697, column: 22, scope: !1218)
!1220 = !DILocation(line: 2697, column: 7, scope: !1190)
!1221 = !DILocation(line: 2698, column: 19, scope: !1218)
!1222 = !DILocation(line: 2698, column: 5, scope: !1218)
!1223 = !DILocation(line: 2699, column: 7, scope: !1224)
!1224 = distinct !DILexicalBlock(scope: !1190, file: !1, line: 2699, column: 7)
!1225 = !DILocation(line: 2699, column: 22, scope: !1224)
!1226 = !DILocation(line: 2699, column: 7, scope: !1190)
!1227 = !DILocation(line: 2700, column: 19, scope: !1224)
!1228 = !DILocation(line: 2700, column: 5, scope: !1224)
!1229 = !DILocation(line: 2701, column: 7, scope: !1230)
!1230 = distinct !DILexicalBlock(scope: !1190, file: !1, line: 2701, column: 7)
!1231 = !DILocation(line: 2701, column: 14, scope: !1230)
!1232 = !DILocation(line: 2701, column: 20, scope: !1230)
!1233 = !DILocation(line: 2701, column: 7, scope: !1190)
!1234 = !DILocation(line: 2703, column: 12, scope: !1235)
!1235 = distinct !DILexicalBlock(scope: !1236, file: !1, line: 2703, column: 11)
!1236 = distinct !DILexicalBlock(scope: !1230, file: !1, line: 2702, column: 5)
!1237 = !DILocation(line: 2703, column: 19, scope: !1235)
!1238 = !DILocation(line: 2703, column: 27, scope: !1235)
!1239 = !DILocation(line: 2703, column: 34, scope: !1235)
!1240 = !DILocation(line: 2703, column: 26, scope: !1235)
!1241 = !DILocation(line: 2703, column: 43, scope: !1235)
!1242 = !DILocation(line: 2703, column: 40, scope: !1235)
!1243 = !DILocation(line: 2703, column: 11, scope: !1236)
!1244 = !DILocation(line: 2704, column: 38, scope: !1235)
!1245 = !DILocation(line: 2704, column: 45, scope: !1235)
!1246 = !DILocation(line: 2704, column: 52, scope: !1235)
!1247 = !DILocation(line: 2704, column: 16, scope: !1235)
!1248 = !DILocation(line: 2704, column: 9, scope: !1235)
!1249 = !DILocation(line: 2705, column: 23, scope: !1250)
!1250 = distinct !DILexicalBlock(scope: !1236, file: !1, line: 2705, column: 11)
!1251 = !DILocation(line: 2705, column: 30, scope: !1250)
!1252 = !DILocation(line: 2705, column: 37, scope: !1250)
!1253 = !DILocation(line: 2705, column: 11, scope: !1250)
!1254 = !DILocation(line: 2705, column: 48, scope: !1250)
!1255 = !DILocation(line: 2705, column: 11, scope: !1236)
!1256 = !DILocation(line: 2706, column: 34, scope: !1250)
!1257 = !DILocation(line: 2706, column: 16, scope: !1250)
!1258 = !DILocation(line: 2706, column: 9, scope: !1250)
!1259 = !DILocation(line: 2707, column: 5, scope: !1236)
!1260 = !DILocation(line: 2708, column: 8, scope: !1261)
!1261 = distinct !DILexicalBlock(scope: !1190, file: !1, line: 2708, column: 7)
!1262 = !DILocation(line: 2708, column: 15, scope: !1261)
!1263 = !DILocation(line: 2708, column: 29, scope: !1261)
!1264 = !DILocation(line: 2708, column: 45, scope: !1261)
!1265 = !DILocation(line: 2709, column: 8, scope: !1261)
!1266 = !DILocation(line: 2709, column: 15, scope: !1261)
!1267 = !DILocation(line: 2709, column: 25, scope: !1261)
!1268 = !DILocation(line: 2709, column: 22, scope: !1261)
!1269 = !DILocation(line: 2708, column: 7, scope: !1190)
!1270 = !DILocation(line: 2710, column: 5, scope: !1261)
!1271 = !DILocation(line: 2711, column: 9, scope: !1190)
!1272 = !DILocation(line: 2711, column: 24, scope: !1190)
!1273 = !DILocation(line: 2711, column: 8, scope: !1190)
!1274 = !DILocation(line: 2712, column: 7, scope: !1275)
!1275 = distinct !DILexicalBlock(scope: !1190, file: !1, line: 2712, column: 7)
!1276 = !DILocation(line: 2712, column: 13, scope: !1275)
!1277 = !DILocation(line: 2712, column: 7, scope: !1190)
!1278 = !DILocalVariable(name: "colors", scope: !1279, file: !1, line: 2715, type: !570)
!1279 = distinct !DILexicalBlock(scope: !1275, file: !1, line: 2713, column: 5)
!1280 = !DILocation(line: 2715, column: 9, scope: !1279)
!1281 = !DILocation(line: 2720, column: 14, scope: !1279)
!1282 = !DILocation(line: 2720, column: 13, scope: !1279)
!1283 = !DILocation(line: 2721, column: 17, scope: !1284)
!1284 = distinct !DILexicalBlock(scope: !1279, file: !1, line: 2721, column: 7)
!1285 = !DILocation(line: 2721, column: 12, scope: !1284)
!1286 = !DILocation(line: 2721, column: 21, scope: !1287)
!1287 = distinct !DILexicalBlock(scope: !1284, file: !1, line: 2721, column: 7)
!1288 = !DILocation(line: 2721, column: 28, scope: !1287)
!1289 = !DILocation(line: 2721, column: 7, scope: !1284)
!1290 = !DILocation(line: 2722, column: 15, scope: !1287)
!1291 = !DILocation(line: 2722, column: 9, scope: !1287)
!1292 = !DILocation(line: 2721, column: 39, scope: !1287)
!1293 = !DILocation(line: 2721, column: 7, scope: !1287)
!1294 = distinct !{!1294, !1289, !1295}
!1295 = !DILocation(line: 2722, column: 18, scope: !1284)
!1296 = !DILocation(line: 2723, column: 12, scope: !1297)
!1297 = distinct !DILexicalBlock(scope: !1279, file: !1, line: 2723, column: 11)
!1298 = !DILocation(line: 2723, column: 27, scope: !1297)
!1299 = !DILocation(line: 2723, column: 34, scope: !1297)
!1300 = !DILocation(line: 2723, column: 50, scope: !1297)
!1301 = !DILocation(line: 2723, column: 54, scope: !1297)
!1302 = !DILocation(line: 2723, column: 60, scope: !1297)
!1303 = !DILocation(line: 2723, column: 11, scope: !1279)
!1304 = !DILocation(line: 2724, column: 14, scope: !1297)
!1305 = !DILocation(line: 2724, column: 9, scope: !1297)
!1306 = !DILocation(line: 2725, column: 12, scope: !1307)
!1307 = distinct !DILexicalBlock(scope: !1279, file: !1, line: 2725, column: 11)
!1308 = !DILocation(line: 2725, column: 19, scope: !1307)
!1309 = !DILocation(line: 2725, column: 25, scope: !1307)
!1310 = !DILocation(line: 2725, column: 41, scope: !1307)
!1311 = !DILocation(line: 2725, column: 45, scope: !1307)
!1312 = !DILocation(line: 2725, column: 51, scope: !1307)
!1313 = !DILocation(line: 2725, column: 11, scope: !1279)
!1314 = !DILocation(line: 2726, column: 14, scope: !1307)
!1315 = !DILocation(line: 2726, column: 9, scope: !1307)
!1316 = !DILocation(line: 2727, column: 23, scope: !1317)
!1317 = distinct !DILexicalBlock(scope: !1279, file: !1, line: 2727, column: 11)
!1318 = !DILocation(line: 2727, column: 30, scope: !1317)
!1319 = !DILocation(line: 2727, column: 37, scope: !1317)
!1320 = !DILocation(line: 2727, column: 11, scope: !1317)
!1321 = !DILocation(line: 2727, column: 48, scope: !1317)
!1322 = !DILocation(line: 2727, column: 11, scope: !1279)
!1323 = !DILocation(line: 2728, column: 14, scope: !1317)
!1324 = !DILocation(line: 2728, column: 9, scope: !1317)
!1325 = !DILocation(line: 2729, column: 5, scope: !1279)
!1326 = !DILocation(line: 2733, column: 25, scope: !1190)
!1327 = !DILocation(line: 2733, column: 39, scope: !1190)
!1328 = !DILocation(line: 2733, column: 45, scope: !1190)
!1329 = !DILocation(line: 2733, column: 13, scope: !1190)
!1330 = !DILocation(line: 2733, column: 12, scope: !1190)
!1331 = !DILocation(line: 2734, column: 7, scope: !1332)
!1332 = distinct !DILexicalBlock(scope: !1190, file: !1, line: 2734, column: 7)
!1333 = !DILocation(line: 2734, column: 17, scope: !1332)
!1334 = !DILocation(line: 2734, column: 7, scope: !1190)
!1335 = !DILocation(line: 2735, column: 5, scope: !1336)
!1336 = distinct !DILexicalBlock(scope: !1337, file: !1, line: 2735, column: 5)
!1337 = distinct !DILexicalBlock(scope: !1332, file: !1, line: 2735, column: 5)
!1338 = !DILocation(line: 2735, column: 5, scope: !1337)
!1339 = !DILocation(line: 2737, column: 30, scope: !1190)
!1340 = !DILocation(line: 2737, column: 40, scope: !1190)
!1341 = !DILocation(line: 2737, column: 47, scope: !1190)
!1342 = !DILocation(line: 2737, column: 54, scope: !1190)
!1343 = !DILocation(line: 2737, column: 10, scope: !1190)
!1344 = !DILocation(line: 2737, column: 9, scope: !1190)
!1345 = !DILocation(line: 2738, column: 7, scope: !1346)
!1346 = distinct !DILexicalBlock(scope: !1190, file: !1, line: 2738, column: 7)
!1347 = !DILocation(line: 2738, column: 14, scope: !1346)
!1348 = !DILocation(line: 2738, column: 7, scope: !1190)
!1349 = !DILocation(line: 2743, column: 25, scope: !1350)
!1350 = distinct !DILexicalBlock(scope: !1346, file: !1, line: 2739, column: 5)
!1351 = !DILocation(line: 2743, column: 31, scope: !1350)
!1352 = !DILocation(line: 2743, column: 7, scope: !1350)
!1353 = !DILocation(line: 2744, column: 32, scope: !1350)
!1354 = !DILocation(line: 2744, column: 38, scope: !1350)
!1355 = !DILocation(line: 2744, column: 14, scope: !1350)
!1356 = !DILocation(line: 2744, column: 13, scope: !1350)
!1357 = !DILocation(line: 2745, column: 5, scope: !1350)
!1358 = !DILocation(line: 2746, column: 19, scope: !1190)
!1359 = !DILocation(line: 2746, column: 3, scope: !1190)
!1360 = !DILocation(line: 2747, column: 10, scope: !1190)
!1361 = !DILocation(line: 2747, column: 3, scope: !1190)
!1362 = !DILocation(line: 2748, column: 1, scope: !1190)
!1363 = distinct !DISubprogram(name: "DestroyQuantizeInfo", scope: !1, file: !1, line: 1356, type: !1364, scopeLine: 1357, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!1364 = !DISubroutineType(types: !1365)
!1365 = !{!565, !565}
!1366 = !DILocalVariable(name: "quantize_info", arg: 1, scope: !1363, file: !1, line: 1356, type: !565)
!1367 = !DILocation(line: 1356, column: 62, scope: !1363)
!1368 = !DILocation(line: 1358, column: 10, scope: !1363)
!1369 = !DILocation(line: 1361, column: 3, scope: !1363)
!1370 = !DILocation(line: 1361, column: 18, scope: !1363)
!1371 = !DILocation(line: 1361, column: 27, scope: !1363)
!1372 = !DILocation(line: 1362, column: 57, scope: !1363)
!1373 = !DILocation(line: 1362, column: 34, scope: !1363)
!1374 = !DILocation(line: 1362, column: 17, scope: !1363)
!1375 = !DILocation(line: 1362, column: 16, scope: !1363)
!1376 = !DILocation(line: 1363, column: 10, scope: !1363)
!1377 = !DILocation(line: 1363, column: 3, scope: !1363)
!1378 = distinct !DISubprogram(name: "GetImageQuantizeError", scope: !1, file: !1, line: 2124, type: !1156, scopeLine: 2125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!1379 = !DILocalVariable(name: "image", arg: 1, scope: !1378, file: !1, line: 2124, type: !652)
!1380 = !DILocation(line: 2124, column: 61, scope: !1378)
!1381 = !DILocalVariable(name: "image_view", scope: !1378, file: !1, line: 2127, type: !1382)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "CacheView", file: !431, line: 50, baseType: !1384)
!1384 = !DICompositeType(tag: DW_TAG_structure_type, name: "_CacheView", file: !402, line: 160, flags: DIFlagFwdDecl)
!1385 = !DILocation(line: 2127, column: 6, scope: !1378)
!1386 = !DILocalVariable(name: "exception", scope: !1378, file: !1, line: 2130, type: !1387)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!1388 = !DILocation(line: 2130, column: 6, scope: !1378)
!1389 = !DILocalVariable(name: "indexes", scope: !1378, file: !1, line: 2133, type: !937)
!1390 = !DILocation(line: 2133, column: 6, scope: !1378)
!1391 = !DILocalVariable(name: "alpha", scope: !1378, file: !1, line: 2136, type: !935)
!1392 = !DILocation(line: 2136, column: 5, scope: !1378)
!1393 = !DILocalVariable(name: "area", scope: !1378, file: !1, line: 2137, type: !935)
!1394 = !DILocation(line: 2137, column: 5, scope: !1378)
!1395 = !DILocalVariable(name: "beta", scope: !1378, file: !1, line: 2138, type: !935)
!1396 = !DILocation(line: 2138, column: 5, scope: !1378)
!1397 = !DILocalVariable(name: "distance", scope: !1378, file: !1, line: 2139, type: !935)
!1398 = !DILocation(line: 2139, column: 5, scope: !1378)
!1399 = !DILocalVariable(name: "maximum_error", scope: !1378, file: !1, line: 2140, type: !935)
!1400 = !DILocation(line: 2140, column: 5, scope: !1378)
!1401 = !DILocalVariable(name: "mean_error", scope: !1378, file: !1, line: 2141, type: !935)
!1402 = !DILocation(line: 2141, column: 5, scope: !1378)
!1403 = !DILocalVariable(name: "mean_error_per_pixel", scope: !1378, file: !1, line: 2142, type: !935)
!1404 = !DILocation(line: 2142, column: 5, scope: !1378)
!1405 = !DILocalVariable(name: "index", scope: !1378, file: !1, line: 2145, type: !570)
!1406 = !DILocation(line: 2145, column: 5, scope: !1378)
!1407 = !DILocalVariable(name: "y", scope: !1378, file: !1, line: 2148, type: !640)
!1408 = !DILocation(line: 2148, column: 5, scope: !1378)
!1409 = !DILocation(line: 2152, column: 7, scope: !1410)
!1410 = distinct !DILexicalBlock(scope: !1378, file: !1, line: 2152, column: 7)
!1411 = !DILocation(line: 2152, column: 14, scope: !1410)
!1412 = !DILocation(line: 2152, column: 20, scope: !1410)
!1413 = !DILocation(line: 2152, column: 7, scope: !1378)
!1414 = !DILocation(line: 2153, column: 61, scope: !1410)
!1415 = !DILocation(line: 2153, column: 68, scope: !1410)
!1416 = !DILocation(line: 2153, column: 12, scope: !1410)
!1417 = !DILocation(line: 2153, column: 5, scope: !1410)
!1418 = !DILocation(line: 2154, column: 39, scope: !1378)
!1419 = !DILocation(line: 2154, column: 60, scope: !1378)
!1420 = !DILocation(line: 2154, column: 67, scope: !1378)
!1421 = !DILocation(line: 2154, column: 23, scope: !1378)
!1422 = !DILocation(line: 2154, column: 3, scope: !1378)
!1423 = !DILocation(line: 2154, column: 10, scope: !1378)
!1424 = !DILocation(line: 2154, column: 22, scope: !1378)
!1425 = !DILocation(line: 2155, column: 29, scope: !1378)
!1426 = !DILocation(line: 2155, column: 36, scope: !1378)
!1427 = !DILocation(line: 2155, column: 28, scope: !1378)
!1428 = !DILocation(line: 2155, column: 10, scope: !1378)
!1429 = !DILocation(line: 2156, column: 7, scope: !1430)
!1430 = distinct !DILexicalBlock(scope: !1378, file: !1, line: 2156, column: 7)
!1431 = !DILocation(line: 2156, column: 14, scope: !1430)
!1432 = !DILocation(line: 2156, column: 28, scope: !1430)
!1433 = !DILocation(line: 2156, column: 7, scope: !1378)
!1434 = !DILocation(line: 2157, column: 5, scope: !1430)
!1435 = !DILocation(line: 2158, column: 8, scope: !1378)
!1436 = !DILocation(line: 2159, column: 7, scope: !1378)
!1437 = !DILocation(line: 2160, column: 12, scope: !1378)
!1438 = !DILocation(line: 2160, column: 19, scope: !1378)
!1439 = !DILocation(line: 2160, column: 11, scope: !1378)
!1440 = !DILocation(line: 2160, column: 27, scope: !1378)
!1441 = !DILocation(line: 2160, column: 34, scope: !1378)
!1442 = !DILocation(line: 2160, column: 26, scope: !1378)
!1443 = !DILocation(line: 2160, column: 8, scope: !1378)
!1444 = !DILocation(line: 2160, column: 7, scope: !1378)
!1445 = !DILocation(line: 2161, column: 16, scope: !1378)
!1446 = !DILocation(line: 2162, column: 23, scope: !1378)
!1447 = !DILocation(line: 2163, column: 13, scope: !1378)
!1448 = !DILocation(line: 2164, column: 15, scope: !1378)
!1449 = !DILocation(line: 2164, column: 22, scope: !1378)
!1450 = !DILocation(line: 2164, column: 12, scope: !1378)
!1451 = !DILocation(line: 2165, column: 38, scope: !1378)
!1452 = !DILocation(line: 2165, column: 44, scope: !1378)
!1453 = !DILocation(line: 2165, column: 14, scope: !1378)
!1454 = !DILocation(line: 2165, column: 13, scope: !1378)
!1455 = !DILocation(line: 2166, column: 9, scope: !1456)
!1456 = distinct !DILexicalBlock(scope: !1378, file: !1, line: 2166, column: 3)
!1457 = !DILocation(line: 2166, column: 8, scope: !1456)
!1458 = !DILocation(line: 2166, column: 13, scope: !1459)
!1459 = distinct !DILexicalBlock(scope: !1456, file: !1, line: 2166, column: 3)
!1460 = !DILocation(line: 2166, column: 27, scope: !1459)
!1461 = !DILocation(line: 2166, column: 34, scope: !1459)
!1462 = !DILocation(line: 2166, column: 15, scope: !1459)
!1463 = !DILocation(line: 2166, column: 3, scope: !1456)
!1464 = !DILocalVariable(name: "p", scope: !1465, file: !1, line: 2169, type: !1466)
!1465 = distinct !DILexicalBlock(scope: !1459, file: !1, line: 2167, column: 3)
!1466 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !930)
!1467 = !DILocation(line: 2169, column: 17, scope: !1465)
!1468 = !DILocalVariable(name: "x", scope: !1465, file: !1, line: 2172, type: !640)
!1469 = !DILocation(line: 2172, column: 7, scope: !1465)
!1470 = !DILocation(line: 2174, column: 33, scope: !1465)
!1471 = !DILocation(line: 2174, column: 46, scope: !1465)
!1472 = !DILocation(line: 2174, column: 48, scope: !1465)
!1473 = !DILocation(line: 2174, column: 55, scope: !1465)
!1474 = !DILocation(line: 2174, column: 65, scope: !1465)
!1475 = !DILocation(line: 2174, column: 7, scope: !1465)
!1476 = !DILocation(line: 2174, column: 6, scope: !1465)
!1477 = !DILocation(line: 2175, column: 9, scope: !1478)
!1478 = distinct !DILexicalBlock(scope: !1465, file: !1, line: 2175, column: 9)
!1479 = !DILocation(line: 2175, column: 11, scope: !1478)
!1480 = !DILocation(line: 2175, column: 9, scope: !1465)
!1481 = !DILocation(line: 2176, column: 7, scope: !1478)
!1482 = !DILocation(line: 2177, column: 45, scope: !1465)
!1483 = !DILocation(line: 2177, column: 13, scope: !1465)
!1484 = !DILocation(line: 2177, column: 12, scope: !1465)
!1485 = !DILocation(line: 2178, column: 11, scope: !1486)
!1486 = distinct !DILexicalBlock(scope: !1465, file: !1, line: 2178, column: 5)
!1487 = !DILocation(line: 2178, column: 10, scope: !1486)
!1488 = !DILocation(line: 2178, column: 15, scope: !1489)
!1489 = distinct !DILexicalBlock(scope: !1486, file: !1, line: 2178, column: 5)
!1490 = !DILocation(line: 2178, column: 29, scope: !1489)
!1491 = !DILocation(line: 2178, column: 36, scope: !1489)
!1492 = !DILocation(line: 2178, column: 17, scope: !1489)
!1493 = !DILocation(line: 2178, column: 5, scope: !1486)
!1494 = !DILocation(line: 2180, column: 17, scope: !1495)
!1495 = distinct !DILexicalBlock(scope: !1489, file: !1, line: 2179, column: 5)
!1496 = !DILocation(line: 2180, column: 16, scope: !1495)
!1497 = !DILocation(line: 2180, column: 12, scope: !1495)
!1498 = !DILocation(line: 2181, column: 11, scope: !1499)
!1499 = distinct !DILexicalBlock(scope: !1495, file: !1, line: 2181, column: 11)
!1500 = !DILocation(line: 2181, column: 18, scope: !1499)
!1501 = !DILocation(line: 2181, column: 24, scope: !1499)
!1502 = !DILocation(line: 2181, column: 11, scope: !1495)
!1503 = !DILocation(line: 2183, column: 49, scope: !1504)
!1504 = distinct !DILexicalBlock(scope: !1499, file: !1, line: 2182, column: 9)
!1505 = !DILocation(line: 2183, column: 48, scope: !1504)
!1506 = !DILocation(line: 2183, column: 47, scope: !1504)
!1507 = !DILocation(line: 2183, column: 17, scope: !1504)
!1508 = !DILocation(line: 2183, column: 16, scope: !1504)
!1509 = !DILocation(line: 2185, column: 13, scope: !1504)
!1510 = !DILocation(line: 2185, column: 20, scope: !1504)
!1511 = !DILocation(line: 2185, column: 29, scope: !1504)
!1512 = !DILocation(line: 2185, column: 36, scope: !1504)
!1513 = !DILocation(line: 2184, column: 60, scope: !1504)
!1514 = !DILocation(line: 2184, column: 47, scope: !1504)
!1515 = !DILocation(line: 2184, column: 46, scope: !1504)
!1516 = !DILocation(line: 2184, column: 16, scope: !1504)
!1517 = !DILocation(line: 2184, column: 15, scope: !1504)
!1518 = !DILocation(line: 2186, column: 9, scope: !1504)
!1519 = !DILocation(line: 2187, column: 21, scope: !1495)
!1520 = !DILocation(line: 2187, column: 27, scope: !1495)
!1521 = !DILocation(line: 2187, column: 26, scope: !1495)
!1522 = !DILocation(line: 2187, column: 42, scope: !1495)
!1523 = !DILocation(line: 2187, column: 47, scope: !1495)
!1524 = !DILocation(line: 2187, column: 54, scope: !1495)
!1525 = !DILocation(line: 2187, column: 63, scope: !1495)
!1526 = !DILocation(line: 2187, column: 70, scope: !1495)
!1527 = !DILocation(line: 2187, column: 46, scope: !1495)
!1528 = !DILocation(line: 2187, column: 41, scope: !1495)
!1529 = !DILocation(line: 2187, column: 16, scope: !1495)
!1530 = !DILocation(line: 2187, column: 15, scope: !1495)
!1531 = !DILocation(line: 2188, column: 29, scope: !1495)
!1532 = !DILocation(line: 2188, column: 27, scope: !1495)
!1533 = !DILocation(line: 2189, column: 19, scope: !1495)
!1534 = !DILocation(line: 2189, column: 28, scope: !1495)
!1535 = !DILocation(line: 2189, column: 27, scope: !1495)
!1536 = !DILocation(line: 2189, column: 17, scope: !1495)
!1537 = !DILocation(line: 2190, column: 11, scope: !1538)
!1538 = distinct !DILexicalBlock(scope: !1495, file: !1, line: 2190, column: 11)
!1539 = !DILocation(line: 2190, column: 22, scope: !1538)
!1540 = !DILocation(line: 2190, column: 20, scope: !1538)
!1541 = !DILocation(line: 2190, column: 11, scope: !1495)
!1542 = !DILocation(line: 2191, column: 23, scope: !1538)
!1543 = !DILocation(line: 2191, column: 22, scope: !1538)
!1544 = !DILocation(line: 2191, column: 9, scope: !1538)
!1545 = !DILocation(line: 2192, column: 21, scope: !1495)
!1546 = !DILocation(line: 2192, column: 27, scope: !1495)
!1547 = !DILocation(line: 2192, column: 26, scope: !1495)
!1548 = !DILocation(line: 2192, column: 44, scope: !1495)
!1549 = !DILocation(line: 2192, column: 49, scope: !1495)
!1550 = !DILocation(line: 2192, column: 56, scope: !1495)
!1551 = !DILocation(line: 2192, column: 65, scope: !1495)
!1552 = !DILocation(line: 2192, column: 72, scope: !1495)
!1553 = !DILocation(line: 2192, column: 48, scope: !1495)
!1554 = !DILocation(line: 2192, column: 43, scope: !1495)
!1555 = !DILocation(line: 2192, column: 16, scope: !1495)
!1556 = !DILocation(line: 2192, column: 15, scope: !1495)
!1557 = !DILocation(line: 2193, column: 29, scope: !1495)
!1558 = !DILocation(line: 2193, column: 27, scope: !1495)
!1559 = !DILocation(line: 2194, column: 19, scope: !1495)
!1560 = !DILocation(line: 2194, column: 28, scope: !1495)
!1561 = !DILocation(line: 2194, column: 27, scope: !1495)
!1562 = !DILocation(line: 2194, column: 17, scope: !1495)
!1563 = !DILocation(line: 2195, column: 11, scope: !1564)
!1564 = distinct !DILexicalBlock(scope: !1495, file: !1, line: 2195, column: 11)
!1565 = !DILocation(line: 2195, column: 22, scope: !1564)
!1566 = !DILocation(line: 2195, column: 20, scope: !1564)
!1567 = !DILocation(line: 2195, column: 11, scope: !1495)
!1568 = !DILocation(line: 2196, column: 23, scope: !1564)
!1569 = !DILocation(line: 2196, column: 22, scope: !1564)
!1570 = !DILocation(line: 2196, column: 9, scope: !1564)
!1571 = !DILocation(line: 2197, column: 21, scope: !1495)
!1572 = !DILocation(line: 2197, column: 27, scope: !1495)
!1573 = !DILocation(line: 2197, column: 26, scope: !1495)
!1574 = !DILocation(line: 2197, column: 43, scope: !1495)
!1575 = !DILocation(line: 2197, column: 48, scope: !1495)
!1576 = !DILocation(line: 2197, column: 55, scope: !1495)
!1577 = !DILocation(line: 2197, column: 64, scope: !1495)
!1578 = !DILocation(line: 2197, column: 71, scope: !1495)
!1579 = !DILocation(line: 2197, column: 47, scope: !1495)
!1580 = !DILocation(line: 2197, column: 42, scope: !1495)
!1581 = !DILocation(line: 2197, column: 16, scope: !1495)
!1582 = !DILocation(line: 2197, column: 15, scope: !1495)
!1583 = !DILocation(line: 2198, column: 29, scope: !1495)
!1584 = !DILocation(line: 2198, column: 27, scope: !1495)
!1585 = !DILocation(line: 2199, column: 19, scope: !1495)
!1586 = !DILocation(line: 2199, column: 28, scope: !1495)
!1587 = !DILocation(line: 2199, column: 27, scope: !1495)
!1588 = !DILocation(line: 2199, column: 17, scope: !1495)
!1589 = !DILocation(line: 2200, column: 11, scope: !1590)
!1590 = distinct !DILexicalBlock(scope: !1495, file: !1, line: 2200, column: 11)
!1591 = !DILocation(line: 2200, column: 22, scope: !1590)
!1592 = !DILocation(line: 2200, column: 20, scope: !1590)
!1593 = !DILocation(line: 2200, column: 11, scope: !1495)
!1594 = !DILocation(line: 2201, column: 23, scope: !1590)
!1595 = !DILocation(line: 2201, column: 22, scope: !1590)
!1596 = !DILocation(line: 2201, column: 9, scope: !1590)
!1597 = !DILocation(line: 2202, column: 8, scope: !1495)
!1598 = !DILocation(line: 2203, column: 5, scope: !1495)
!1599 = !DILocation(line: 2178, column: 46, scope: !1489)
!1600 = !DILocation(line: 2178, column: 5, scope: !1489)
!1601 = distinct !{!1601, !1493, !1602}
!1602 = !DILocation(line: 2203, column: 5, scope: !1486)
!1603 = !DILocation(line: 2204, column: 3, scope: !1465)
!1604 = !DILocation(line: 2166, column: 41, scope: !1459)
!1605 = !DILocation(line: 2166, column: 3, scope: !1459)
!1606 = distinct !{!1606, !1463, !1607}
!1607 = !DILocation(line: 2204, column: 3, scope: !1456)
!1608 = !DILocation(line: 2205, column: 31, scope: !1378)
!1609 = !DILocation(line: 2205, column: 14, scope: !1378)
!1610 = !DILocation(line: 2205, column: 13, scope: !1378)
!1611 = !DILocation(line: 2206, column: 46, scope: !1378)
!1612 = !DILocation(line: 2206, column: 37, scope: !1378)
!1613 = !DILocation(line: 2206, column: 67, scope: !1378)
!1614 = !DILocation(line: 2206, column: 66, scope: !1378)
!1615 = !DILocation(line: 2206, column: 3, scope: !1378)
!1616 = !DILocation(line: 2206, column: 10, scope: !1378)
!1617 = !DILocation(line: 2206, column: 16, scope: !1378)
!1618 = !DILocation(line: 2206, column: 36, scope: !1378)
!1619 = !DILocation(line: 2208, column: 5, scope: !1378)
!1620 = !DILocation(line: 2207, column: 72, scope: !1378)
!1621 = !DILocation(line: 2208, column: 16, scope: !1378)
!1622 = !DILocation(line: 2208, column: 15, scope: !1378)
!1623 = !DILocation(line: 2207, column: 3, scope: !1378)
!1624 = !DILocation(line: 2207, column: 10, scope: !1378)
!1625 = !DILocation(line: 2207, column: 16, scope: !1378)
!1626 = !DILocation(line: 2207, column: 37, scope: !1378)
!1627 = !DILocation(line: 2209, column: 63, scope: !1378)
!1628 = !DILocation(line: 2209, column: 62, scope: !1378)
!1629 = !DILocation(line: 2209, column: 3, scope: !1378)
!1630 = !DILocation(line: 2209, column: 10, scope: !1378)
!1631 = !DILocation(line: 2209, column: 16, scope: !1378)
!1632 = !DILocation(line: 2209, column: 40, scope: !1378)
!1633 = !DILocation(line: 2210, column: 3, scope: !1378)
!1634 = !DILocation(line: 2211, column: 1, scope: !1378)
!1635 = distinct !DISubprogram(name: "PosterizeImage", scope: !1, file: !1, line: 2292, type: !1636, scopeLine: 2294, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{!575, !652, !858, !1638}
!1638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !575)
!1639 = !DILocalVariable(name: "image", arg: 1, scope: !1635, file: !1, line: 2292, type: !652)
!1640 = !DILocation(line: 2292, column: 54, scope: !1635)
!1641 = !DILocalVariable(name: "levels", arg: 2, scope: !1635, file: !1, line: 2292, type: !858)
!1642 = !DILocation(line: 2292, column: 73, scope: !1635)
!1643 = !DILocalVariable(name: "dither", arg: 3, scope: !1635, file: !1, line: 2293, type: !1638)
!1644 = !DILocation(line: 2293, column: 27, scope: !1635)
!1645 = !DILocalVariable(name: "status", scope: !1635, file: !1, line: 2296, type: !575)
!1646 = !DILocation(line: 2296, column: 5, scope: !1635)
!1647 = !DILocation(line: 2298, column: 32, scope: !1635)
!1648 = !DILocation(line: 2298, column: 54, scope: !1635)
!1649 = !DILocation(line: 2298, column: 61, scope: !1635)
!1650 = !DILocation(line: 2298, column: 10, scope: !1635)
!1651 = !DILocation(line: 2298, column: 9, scope: !1635)
!1652 = !DILocation(line: 2299, column: 10, scope: !1635)
!1653 = !DILocation(line: 2299, column: 3, scope: !1635)
!1654 = distinct !DISubprogram(name: "PosterizeImageChannel", scope: !1, file: !1, line: 2302, type: !1655, scopeLine: 2304, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!1655 = !DISubroutineType(types: !1656)
!1656 = !{!575, !652, !1657, !858, !1638}
!1657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !650)
!1658 = !DILocalVariable(name: "image", arg: 1, scope: !1654, file: !1, line: 2302, type: !652)
!1659 = !DILocation(line: 2302, column: 61, scope: !1654)
!1660 = !DILocalVariable(name: "channel", arg: 2, scope: !1654, file: !1, line: 2303, type: !1657)
!1661 = !DILocation(line: 2303, column: 21, scope: !1654)
!1662 = !DILocalVariable(name: "levels", arg: 3, scope: !1654, file: !1, line: 2303, type: !858)
!1663 = !DILocation(line: 2303, column: 42, scope: !1654)
!1664 = !DILocalVariable(name: "dither", arg: 4, scope: !1654, file: !1, line: 2303, type: !1638)
!1665 = !DILocation(line: 2303, column: 73, scope: !1654)
!1666 = !DILocalVariable(name: "image_view", scope: !1654, file: !1, line: 2310, type: !1382)
!1667 = !DILocation(line: 2310, column: 6, scope: !1654)
!1668 = !DILocalVariable(name: "exception", scope: !1654, file: !1, line: 2313, type: !1387)
!1669 = !DILocation(line: 2313, column: 6, scope: !1654)
!1670 = !DILocalVariable(name: "status", scope: !1654, file: !1, line: 2316, type: !575)
!1671 = !DILocation(line: 2316, column: 5, scope: !1654)
!1672 = !DILocalVariable(name: "progress", scope: !1654, file: !1, line: 2319, type: !761)
!1673 = !DILocation(line: 2319, column: 5, scope: !1654)
!1674 = !DILocalVariable(name: "quantize_info", scope: !1654, file: !1, line: 2322, type: !565)
!1675 = !DILocation(line: 2322, column: 6, scope: !1654)
!1676 = !DILocalVariable(name: "i", scope: !1654, file: !1, line: 2325, type: !640)
!1677 = !DILocation(line: 2325, column: 5, scope: !1654)
!1678 = !DILocalVariable(name: "y", scope: !1654, file: !1, line: 2328, type: !640)
!1679 = !DILocation(line: 2328, column: 5, scope: !1654)
!1680 = !DILocation(line: 2332, column: 7, scope: !1681)
!1681 = distinct !DILexicalBlock(scope: !1654, file: !1, line: 2332, column: 7)
!1682 = !DILocation(line: 2332, column: 14, scope: !1681)
!1683 = !DILocation(line: 2332, column: 20, scope: !1681)
!1684 = !DILocation(line: 2332, column: 7, scope: !1654)
!1685 = !DILocation(line: 2333, column: 61, scope: !1681)
!1686 = !DILocation(line: 2333, column: 68, scope: !1681)
!1687 = !DILocation(line: 2333, column: 12, scope: !1681)
!1688 = !DILocation(line: 2333, column: 5, scope: !1681)
!1689 = !DILocation(line: 2334, column: 7, scope: !1690)
!1690 = distinct !DILexicalBlock(scope: !1654, file: !1, line: 2334, column: 7)
!1691 = !DILocation(line: 2334, column: 14, scope: !1690)
!1692 = !DILocation(line: 2334, column: 28, scope: !1690)
!1693 = !DILocation(line: 2334, column: 7, scope: !1654)
!1694 = !DILocation(line: 2339, column: 11, scope: !1695)
!1695 = distinct !DILexicalBlock(scope: !1690, file: !1, line: 2339, column: 5)
!1696 = !DILocation(line: 2339, column: 10, scope: !1695)
!1697 = !DILocation(line: 2339, column: 15, scope: !1698)
!1698 = distinct !DILexicalBlock(scope: !1695, file: !1, line: 2339, column: 5)
!1699 = !DILocation(line: 2339, column: 29, scope: !1698)
!1700 = !DILocation(line: 2339, column: 36, scope: !1698)
!1701 = !DILocation(line: 2339, column: 17, scope: !1698)
!1702 = !DILocation(line: 2339, column: 5, scope: !1695)
!1703 = !DILocation(line: 2344, column: 12, scope: !1704)
!1704 = distinct !DILexicalBlock(scope: !1705, file: !1, line: 2344, column: 11)
!1705 = distinct !DILexicalBlock(scope: !1698, file: !1, line: 2340, column: 5)
!1706 = !DILocation(line: 2344, column: 20, scope: !1704)
!1707 = !DILocation(line: 2344, column: 34, scope: !1704)
!1708 = !DILocation(line: 2344, column: 11, scope: !1705)
!1709 = !DILocation(line: 2345, column: 32, scope: !1704)
!1710 = !DILocation(line: 2345, column: 9, scope: !1704)
!1711 = !DILocation(line: 2345, column: 16, scope: !1704)
!1712 = !DILocation(line: 2345, column: 25, scope: !1704)
!1713 = !DILocation(line: 2345, column: 28, scope: !1704)
!1714 = !DILocation(line: 2345, column: 31, scope: !1704)
!1715 = !DILocation(line: 2346, column: 12, scope: !1716)
!1716 = distinct !DILexicalBlock(scope: !1705, file: !1, line: 2346, column: 11)
!1717 = !DILocation(line: 2346, column: 20, scope: !1716)
!1718 = !DILocation(line: 2346, column: 36, scope: !1716)
!1719 = !DILocation(line: 2346, column: 11, scope: !1705)
!1720 = !DILocation(line: 2347, column: 34, scope: !1716)
!1721 = !DILocation(line: 2347, column: 9, scope: !1716)
!1722 = !DILocation(line: 2347, column: 16, scope: !1716)
!1723 = !DILocation(line: 2347, column: 25, scope: !1716)
!1724 = !DILocation(line: 2347, column: 28, scope: !1716)
!1725 = !DILocation(line: 2347, column: 33, scope: !1716)
!1726 = !DILocation(line: 2348, column: 12, scope: !1727)
!1727 = distinct !DILexicalBlock(scope: !1705, file: !1, line: 2348, column: 11)
!1728 = !DILocation(line: 2348, column: 20, scope: !1727)
!1729 = !DILocation(line: 2348, column: 35, scope: !1727)
!1730 = !DILocation(line: 2348, column: 11, scope: !1705)
!1731 = !DILocation(line: 2349, column: 33, scope: !1727)
!1732 = !DILocation(line: 2349, column: 9, scope: !1727)
!1733 = !DILocation(line: 2349, column: 16, scope: !1727)
!1734 = !DILocation(line: 2349, column: 25, scope: !1727)
!1735 = !DILocation(line: 2349, column: 28, scope: !1727)
!1736 = !DILocation(line: 2349, column: 32, scope: !1727)
!1737 = !DILocation(line: 2350, column: 12, scope: !1738)
!1738 = distinct !DILexicalBlock(scope: !1705, file: !1, line: 2350, column: 11)
!1739 = !DILocation(line: 2350, column: 20, scope: !1738)
!1740 = !DILocation(line: 2350, column: 38, scope: !1738)
!1741 = !DILocation(line: 2350, column: 11, scope: !1705)
!1742 = !DILocation(line: 2351, column: 36, scope: !1738)
!1743 = !DILocation(line: 2351, column: 9, scope: !1738)
!1744 = !DILocation(line: 2351, column: 16, scope: !1738)
!1745 = !DILocation(line: 2351, column: 25, scope: !1738)
!1746 = !DILocation(line: 2351, column: 28, scope: !1738)
!1747 = !DILocation(line: 2351, column: 35, scope: !1738)
!1748 = !DILocation(line: 2352, column: 5, scope: !1705)
!1749 = !DILocation(line: 2339, column: 45, scope: !1698)
!1750 = !DILocation(line: 2339, column: 5, scope: !1698)
!1751 = distinct !{!1751, !1702, !1752}
!1752 = !DILocation(line: 2352, column: 5, scope: !1695)
!1753 = !DILocation(line: 2356, column: 9, scope: !1654)
!1754 = !DILocation(line: 2357, column: 11, scope: !1654)
!1755 = !DILocation(line: 2358, column: 15, scope: !1654)
!1756 = !DILocation(line: 2358, column: 22, scope: !1654)
!1757 = !DILocation(line: 2358, column: 12, scope: !1654)
!1758 = !DILocation(line: 2359, column: 40, scope: !1654)
!1759 = !DILocation(line: 2359, column: 46, scope: !1654)
!1760 = !DILocation(line: 2359, column: 14, scope: !1654)
!1761 = !DILocation(line: 2359, column: 13, scope: !1654)
!1762 = !DILocation(line: 2364, column: 9, scope: !1763)
!1763 = distinct !DILexicalBlock(scope: !1654, file: !1, line: 2364, column: 3)
!1764 = !DILocation(line: 2364, column: 8, scope: !1763)
!1765 = !DILocation(line: 2364, column: 13, scope: !1766)
!1766 = distinct !DILexicalBlock(scope: !1763, file: !1, line: 2364, column: 3)
!1767 = !DILocation(line: 2364, column: 27, scope: !1766)
!1768 = !DILocation(line: 2364, column: 34, scope: !1766)
!1769 = !DILocation(line: 2364, column: 15, scope: !1766)
!1770 = !DILocation(line: 2364, column: 3, scope: !1763)
!1771 = !DILocalVariable(name: "indexes", scope: !1772, file: !1, line: 2367, type: !1773)
!1772 = distinct !DILexicalBlock(scope: !1766, file: !1, line: 2365, column: 3)
!1773 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !937)
!1774 = !DILocation(line: 2367, column: 17, scope: !1772)
!1775 = !DILocalVariable(name: "q", scope: !1772, file: !1, line: 2370, type: !1776)
!1776 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !669)
!1777 = !DILocation(line: 2370, column: 17, scope: !1772)
!1778 = !DILocalVariable(name: "x", scope: !1772, file: !1, line: 2373, type: !640)
!1779 = !DILocation(line: 2373, column: 7, scope: !1772)
!1780 = !DILocation(line: 2375, column: 9, scope: !1781)
!1781 = distinct !DILexicalBlock(scope: !1772, file: !1, line: 2375, column: 9)
!1782 = !DILocation(line: 2375, column: 16, scope: !1781)
!1783 = !DILocation(line: 2375, column: 9, scope: !1772)
!1784 = !DILocation(line: 2376, column: 7, scope: !1781)
!1785 = !DILocation(line: 2377, column: 35, scope: !1772)
!1786 = !DILocation(line: 2377, column: 48, scope: !1772)
!1787 = !DILocation(line: 2377, column: 50, scope: !1772)
!1788 = !DILocation(line: 2377, column: 57, scope: !1772)
!1789 = !DILocation(line: 2377, column: 67, scope: !1772)
!1790 = !DILocation(line: 2377, column: 7, scope: !1772)
!1791 = !DILocation(line: 2377, column: 6, scope: !1772)
!1792 = !DILocation(line: 2378, column: 9, scope: !1793)
!1793 = distinct !DILexicalBlock(scope: !1772, file: !1, line: 2378, column: 9)
!1794 = !DILocation(line: 2378, column: 11, scope: !1793)
!1795 = !DILocation(line: 2378, column: 9, scope: !1772)
!1796 = !DILocation(line: 2380, column: 15, scope: !1797)
!1797 = distinct !DILexicalBlock(scope: !1793, file: !1, line: 2379, column: 7)
!1798 = !DILocation(line: 2381, column: 9, scope: !1797)
!1799 = !DILocation(line: 2383, column: 45, scope: !1772)
!1800 = !DILocation(line: 2383, column: 13, scope: !1772)
!1801 = !DILocation(line: 2383, column: 12, scope: !1772)
!1802 = !DILocation(line: 2384, column: 11, scope: !1803)
!1803 = distinct !DILexicalBlock(scope: !1772, file: !1, line: 2384, column: 5)
!1804 = !DILocation(line: 2384, column: 10, scope: !1803)
!1805 = !DILocation(line: 2384, column: 15, scope: !1806)
!1806 = distinct !DILexicalBlock(scope: !1803, file: !1, line: 2384, column: 5)
!1807 = !DILocation(line: 2384, column: 29, scope: !1806)
!1808 = !DILocation(line: 2384, column: 36, scope: !1806)
!1809 = !DILocation(line: 2384, column: 17, scope: !1806)
!1810 = !DILocation(line: 2384, column: 5, scope: !1803)
!1811 = !DILocation(line: 2386, column: 12, scope: !1812)
!1812 = distinct !DILexicalBlock(scope: !1813, file: !1, line: 2386, column: 11)
!1813 = distinct !DILexicalBlock(scope: !1806, file: !1, line: 2385, column: 5)
!1814 = !DILocation(line: 2386, column: 20, scope: !1812)
!1815 = !DILocation(line: 2386, column: 34, scope: !1812)
!1816 = !DILocation(line: 2386, column: 11, scope: !1813)
!1817 = !DILocation(line: 2387, column: 9, scope: !1812)
!1818 = !DILocation(line: 2388, column: 12, scope: !1819)
!1819 = distinct !DILexicalBlock(scope: !1813, file: !1, line: 2388, column: 11)
!1820 = !DILocation(line: 2388, column: 20, scope: !1819)
!1821 = !DILocation(line: 2388, column: 36, scope: !1819)
!1822 = !DILocation(line: 2388, column: 11, scope: !1813)
!1823 = !DILocation(line: 2389, column: 9, scope: !1819)
!1824 = !DILocation(line: 2390, column: 12, scope: !1825)
!1825 = distinct !DILexicalBlock(scope: !1813, file: !1, line: 2390, column: 11)
!1826 = !DILocation(line: 2390, column: 20, scope: !1825)
!1827 = !DILocation(line: 2390, column: 35, scope: !1825)
!1828 = !DILocation(line: 2390, column: 11, scope: !1813)
!1829 = !DILocation(line: 2391, column: 9, scope: !1825)
!1830 = !DILocation(line: 2392, column: 13, scope: !1831)
!1831 = distinct !DILexicalBlock(scope: !1813, file: !1, line: 2392, column: 11)
!1832 = !DILocation(line: 2392, column: 21, scope: !1831)
!1833 = !DILocation(line: 2392, column: 39, scope: !1831)
!1834 = !DILocation(line: 2392, column: 45, scope: !1831)
!1835 = !DILocation(line: 2393, column: 12, scope: !1831)
!1836 = !DILocation(line: 2393, column: 19, scope: !1831)
!1837 = !DILocation(line: 2393, column: 25, scope: !1831)
!1838 = !DILocation(line: 2392, column: 11, scope: !1813)
!1839 = !DILocation(line: 2394, column: 9, scope: !1831)
!1840 = !DILocation(line: 2395, column: 13, scope: !1841)
!1841 = distinct !DILexicalBlock(scope: !1813, file: !1, line: 2395, column: 11)
!1842 = !DILocation(line: 2395, column: 21, scope: !1841)
!1843 = !DILocation(line: 2395, column: 37, scope: !1841)
!1844 = !DILocation(line: 2395, column: 43, scope: !1841)
!1845 = !DILocation(line: 2396, column: 12, scope: !1841)
!1846 = !DILocation(line: 2396, column: 19, scope: !1841)
!1847 = !DILocation(line: 2396, column: 30, scope: !1841)
!1848 = !DILocation(line: 2395, column: 11, scope: !1813)
!1849 = !DILocation(line: 2397, column: 9, scope: !1850)
!1850 = distinct !DILexicalBlock(scope: !1851, file: !1, line: 2397, column: 9)
!1851 = distinct !DILexicalBlock(scope: !1841, file: !1, line: 2397, column: 9)
!1852 = !DILocation(line: 2397, column: 9, scope: !1851)
!1853 = !DILocation(line: 2398, column: 8, scope: !1813)
!1854 = !DILocation(line: 2399, column: 5, scope: !1813)
!1855 = !DILocation(line: 2384, column: 46, scope: !1806)
!1856 = !DILocation(line: 2384, column: 5, scope: !1806)
!1857 = distinct !{!1857, !1810, !1858}
!1858 = !DILocation(line: 2399, column: 5, scope: !1803)
!1859 = !DILocation(line: 2400, column: 38, scope: !1860)
!1860 = distinct !DILexicalBlock(scope: !1772, file: !1, line: 2400, column: 9)
!1861 = !DILocation(line: 2400, column: 49, scope: !1860)
!1862 = !DILocation(line: 2400, column: 9, scope: !1860)
!1863 = !DILocation(line: 2400, column: 60, scope: !1860)
!1864 = !DILocation(line: 2400, column: 9, scope: !1772)
!1865 = !DILocation(line: 2401, column: 13, scope: !1860)
!1866 = !DILocation(line: 2401, column: 7, scope: !1860)
!1867 = !DILocation(line: 2402, column: 9, scope: !1868)
!1868 = distinct !DILexicalBlock(scope: !1772, file: !1, line: 2402, column: 9)
!1869 = !DILocation(line: 2402, column: 16, scope: !1868)
!1870 = !DILocation(line: 2402, column: 33, scope: !1868)
!1871 = !DILocation(line: 2402, column: 9, scope: !1772)
!1872 = !DILocalVariable(name: "proceed", scope: !1873, file: !1, line: 2405, type: !575)
!1873 = distinct !DILexicalBlock(scope: !1868, file: !1, line: 2403, column: 7)
!1874 = !DILocation(line: 2405, column: 11, scope: !1873)
!1875 = !DILocation(line: 2410, column: 34, scope: !1873)
!1876 = !DILocation(line: 2410, column: 66, scope: !1873)
!1877 = !DILocation(line: 2411, column: 11, scope: !1873)
!1878 = !DILocation(line: 2411, column: 18, scope: !1873)
!1879 = !DILocation(line: 2410, column: 17, scope: !1873)
!1880 = !DILocation(line: 2410, column: 16, scope: !1873)
!1881 = !DILocation(line: 2412, column: 13, scope: !1882)
!1882 = distinct !DILexicalBlock(scope: !1873, file: !1, line: 2412, column: 13)
!1883 = !DILocation(line: 2412, column: 21, scope: !1882)
!1884 = !DILocation(line: 2412, column: 13, scope: !1873)
!1885 = !DILocation(line: 2413, column: 17, scope: !1882)
!1886 = !DILocation(line: 2413, column: 11, scope: !1882)
!1887 = !DILocation(line: 2414, column: 7, scope: !1873)
!1888 = !DILocation(line: 2415, column: 3, scope: !1772)
!1889 = !DILocation(line: 2364, column: 41, scope: !1766)
!1890 = !DILocation(line: 2364, column: 3, scope: !1766)
!1891 = distinct !{!1891, !1770, !1892}
!1892 = !DILocation(line: 2415, column: 3, scope: !1763)
!1893 = !DILocation(line: 2416, column: 31, scope: !1654)
!1894 = !DILocation(line: 2416, column: 14, scope: !1654)
!1895 = !DILocation(line: 2416, column: 13, scope: !1654)
!1896 = !DILocation(line: 2417, column: 17, scope: !1654)
!1897 = !DILocation(line: 2417, column: 16, scope: !1654)
!1898 = !DILocation(line: 2418, column: 61, scope: !1654)
!1899 = !DILocation(line: 2418, column: 68, scope: !1654)
!1900 = !DILocation(line: 2418, column: 67, scope: !1654)
!1901 = !DILocation(line: 2419, column: 5, scope: !1654)
!1902 = !DILocation(line: 2418, column: 74, scope: !1654)
!1903 = !DILocation(line: 2418, column: 41, scope: !1654)
!1904 = !DILocation(line: 2418, column: 3, scope: !1654)
!1905 = !DILocation(line: 2418, column: 18, scope: !1654)
!1906 = !DILocation(line: 2418, column: 31, scope: !1654)
!1907 = !DILocation(line: 2420, column: 25, scope: !1654)
!1908 = !DILocation(line: 2420, column: 3, scope: !1654)
!1909 = !DILocation(line: 2420, column: 18, scope: !1654)
!1910 = !DILocation(line: 2420, column: 24, scope: !1654)
!1911 = !DILocation(line: 2421, column: 3, scope: !1654)
!1912 = !DILocation(line: 2421, column: 18, scope: !1654)
!1913 = !DILocation(line: 2421, column: 28, scope: !1654)
!1914 = !DILocation(line: 2422, column: 24, scope: !1654)
!1915 = !DILocation(line: 2422, column: 38, scope: !1654)
!1916 = !DILocation(line: 2422, column: 10, scope: !1654)
!1917 = !DILocation(line: 2422, column: 9, scope: !1654)
!1918 = !DILocation(line: 2423, column: 37, scope: !1654)
!1919 = !DILocation(line: 2423, column: 17, scope: !1654)
!1920 = !DILocation(line: 2423, column: 16, scope: !1654)
!1921 = !DILocation(line: 2424, column: 10, scope: !1654)
!1922 = !DILocation(line: 2424, column: 3, scope: !1654)
!1923 = distinct !DISubprogram(name: "MagickRound", scope: !1, file: !1, line: 2282, type: !1924, scopeLine: 2283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!1924 = !DISubroutineType(types: !1925)
!1925 = !{!617, !617}
!1926 = !DILocalVariable(name: "x", arg: 1, scope: !1923, file: !1, line: 2282, type: !617)
!1927 = !DILocation(line: 2282, column: 41, scope: !1923)
!1928 = !DILocation(line: 2287, column: 8, scope: !1929)
!1929 = distinct !DILexicalBlock(scope: !1923, file: !1, line: 2287, column: 7)
!1930 = !DILocation(line: 2287, column: 16, scope: !1929)
!1931 = !DILocation(line: 2287, column: 10, scope: !1929)
!1932 = !DILocation(line: 2287, column: 9, scope: !1929)
!1933 = !DILocation(line: 2287, column: 28, scope: !1929)
!1934 = !DILocation(line: 2287, column: 23, scope: !1929)
!1935 = !DILocation(line: 2287, column: 31, scope: !1929)
!1936 = !DILocation(line: 2287, column: 30, scope: !1929)
!1937 = !DILocation(line: 2287, column: 20, scope: !1929)
!1938 = !DILocation(line: 2287, column: 7, scope: !1923)
!1939 = !DILocation(line: 2288, column: 18, scope: !1929)
!1940 = !DILocation(line: 2288, column: 12, scope: !1929)
!1941 = !DILocation(line: 2288, column: 5, scope: !1929)
!1942 = !DILocation(line: 2289, column: 15, scope: !1923)
!1943 = !DILocation(line: 2289, column: 10, scope: !1923)
!1944 = !DILocation(line: 2289, column: 3, scope: !1923)
!1945 = !DILocation(line: 2290, column: 1, scope: !1923)
!1946 = distinct !DISubprogram(name: "MagickMax", scope: !1, file: !1, line: 1858, type: !1947, scopeLine: 1859, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!640, !1949, !1949}
!1949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !640)
!1950 = !DILocalVariable(name: "x", arg: 1, scope: !1946, file: !1, line: 1858, type: !1949)
!1951 = !DILocation(line: 1858, column: 47, scope: !1946)
!1952 = !DILocalVariable(name: "y", arg: 2, scope: !1946, file: !1, line: 1858, type: !1949)
!1953 = !DILocation(line: 1858, column: 63, scope: !1946)
!1954 = !DILocation(line: 1860, column: 7, scope: !1955)
!1955 = distinct !DILexicalBlock(scope: !1946, file: !1, line: 1860, column: 7)
!1956 = !DILocation(line: 1860, column: 11, scope: !1955)
!1957 = !DILocation(line: 1860, column: 9, scope: !1955)
!1958 = !DILocation(line: 1860, column: 7, scope: !1946)
!1959 = !DILocation(line: 1861, column: 12, scope: !1955)
!1960 = !DILocation(line: 1861, column: 5, scope: !1955)
!1961 = !DILocation(line: 1862, column: 10, scope: !1946)
!1962 = !DILocation(line: 1862, column: 3, scope: !1946)
!1963 = !DILocation(line: 1863, column: 1, scope: !1946)
!1964 = distinct !DISubprogram(name: "SetImageProgress", scope: !1965, file: !1965, line: 27, type: !1966, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!1965 = !DIFile(filename: "./magick/monitor-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1966 = !DISubroutineType(types: !1967)
!1967 = !{!575, !854, !758, !760, !763}
!1968 = !DILocalVariable(name: "image", arg: 1, scope: !1964, file: !1965, line: 27, type: !854)
!1969 = !DILocation(line: 27, column: 63, scope: !1964)
!1970 = !DILocalVariable(name: "tag", arg: 2, scope: !1964, file: !1965, line: 28, type: !758)
!1971 = !DILocation(line: 28, column: 15, scope: !1964)
!1972 = !DILocalVariable(name: "offset", arg: 3, scope: !1964, file: !1965, line: 28, type: !760)
!1973 = !DILocation(line: 28, column: 42, scope: !1964)
!1974 = !DILocalVariable(name: "extent", arg: 4, scope: !1964, file: !1965, line: 28, type: !763)
!1975 = !DILocation(line: 28, column: 70, scope: !1964)
!1976 = !DILocalVariable(name: "message", scope: !1964, file: !1965, line: 31, type: !778)
!1977 = !DILocation(line: 31, column: 5, scope: !1964)
!1978 = !DILocation(line: 33, column: 7, scope: !1979)
!1979 = distinct !DILexicalBlock(scope: !1964, file: !1965, line: 33, column: 7)
!1980 = !DILocation(line: 33, column: 14, scope: !1979)
!1981 = !DILocation(line: 33, column: 31, scope: !1979)
!1982 = !DILocation(line: 33, column: 7, scope: !1964)
!1983 = !DILocation(line: 34, column: 5, scope: !1979)
!1984 = !DILocation(line: 35, column: 29, scope: !1964)
!1985 = !DILocation(line: 35, column: 59, scope: !1964)
!1986 = !DILocation(line: 35, column: 63, scope: !1964)
!1987 = !DILocation(line: 35, column: 70, scope: !1964)
!1988 = !DILocation(line: 35, column: 10, scope: !1964)
!1989 = !DILocation(line: 36, column: 10, scope: !1964)
!1990 = !DILocation(line: 36, column: 17, scope: !1964)
!1991 = !DILocation(line: 36, column: 34, scope: !1964)
!1992 = !DILocation(line: 36, column: 42, scope: !1964)
!1993 = !DILocation(line: 36, column: 49, scope: !1964)
!1994 = !DILocation(line: 36, column: 56, scope: !1964)
!1995 = !DILocation(line: 36, column: 63, scope: !1964)
!1996 = !DILocation(line: 36, column: 3, scope: !1964)
!1997 = !DILocation(line: 37, column: 1, scope: !1964)
!1998 = distinct !DISubprogram(name: "MagickMin", scope: !1, file: !1, line: 1865, type: !1947, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!1999 = !DILocalVariable(name: "x", arg: 1, scope: !1998, file: !1, line: 1865, type: !1949)
!2000 = !DILocation(line: 1865, column: 47, scope: !1998)
!2001 = !DILocalVariable(name: "y", arg: 2, scope: !1998, file: !1, line: 1865, type: !1949)
!2002 = !DILocation(line: 1865, column: 63, scope: !1998)
!2003 = !DILocation(line: 1867, column: 7, scope: !2004)
!2004 = distinct !DILexicalBlock(scope: !1998, file: !1, line: 1867, column: 7)
!2005 = !DILocation(line: 1867, column: 11, scope: !2004)
!2006 = !DILocation(line: 1867, column: 9, scope: !2004)
!2007 = !DILocation(line: 1867, column: 7, scope: !1998)
!2008 = !DILocation(line: 1868, column: 12, scope: !2004)
!2009 = !DILocation(line: 1868, column: 5, scope: !2004)
!2010 = !DILocation(line: 1869, column: 10, scope: !1998)
!2011 = !DILocation(line: 1869, column: 3, scope: !1998)
!2012 = !DILocation(line: 1870, column: 1, scope: !1998)
!2013 = distinct !DISubprogram(name: "DirectToColormapImage", scope: !1, file: !1, line: 2611, type: !2014, scopeLine: 2613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!575, !652, !1387}
!2016 = !DILocalVariable(name: "image", arg: 1, scope: !2013, file: !1, line: 2611, type: !652)
!2017 = !DILocation(line: 2611, column: 55, scope: !2013)
!2018 = !DILocalVariable(name: "exception", arg: 2, scope: !2013, file: !1, line: 2612, type: !1387)
!2019 = !DILocation(line: 2612, column: 18, scope: !2013)
!2020 = !DILocalVariable(name: "image_view", scope: !2013, file: !1, line: 2615, type: !1382)
!2021 = !DILocation(line: 2615, column: 6, scope: !2013)
!2022 = !DILocalVariable(name: "status", scope: !2013, file: !1, line: 2618, type: !575)
!2023 = !DILocation(line: 2618, column: 5, scope: !2013)
!2024 = !DILocalVariable(name: "i", scope: !2013, file: !1, line: 2621, type: !640)
!2025 = !DILocation(line: 2621, column: 5, scope: !2013)
!2026 = !DILocalVariable(name: "number_colors", scope: !2013, file: !1, line: 2624, type: !570)
!2027 = !DILocation(line: 2624, column: 5, scope: !2013)
!2028 = !DILocalVariable(name: "y", scope: !2013, file: !1, line: 2627, type: !640)
!2029 = !DILocation(line: 2627, column: 5, scope: !2013)
!2030 = !DILocation(line: 2629, column: 9, scope: !2013)
!2031 = !DILocation(line: 2630, column: 27, scope: !2013)
!2032 = !DILocation(line: 2630, column: 34, scope: !2013)
!2033 = !DILocation(line: 2630, column: 42, scope: !2013)
!2034 = !DILocation(line: 2630, column: 49, scope: !2013)
!2035 = !DILocation(line: 2630, column: 41, scope: !2013)
!2036 = !DILocation(line: 2630, column: 16, scope: !2013)
!2037 = !DILocation(line: 2631, column: 28, scope: !2038)
!2038 = distinct !DILexicalBlock(scope: !2013, file: !1, line: 2631, column: 7)
!2039 = !DILocation(line: 2631, column: 34, scope: !2038)
!2040 = !DILocation(line: 2631, column: 7, scope: !2038)
!2041 = !DILocation(line: 2631, column: 49, scope: !2038)
!2042 = !DILocation(line: 2631, column: 7, scope: !2013)
!2043 = !DILocation(line: 2632, column: 5, scope: !2044)
!2044 = distinct !DILexicalBlock(scope: !2045, file: !1, line: 2632, column: 5)
!2045 = distinct !DILexicalBlock(scope: !2038, file: !1, line: 2632, column: 5)
!2046 = !DILocation(line: 2632, column: 5, scope: !2045)
!2047 = !DILocation(line: 2634, column: 7, scope: !2048)
!2048 = distinct !DILexicalBlock(scope: !2013, file: !1, line: 2634, column: 7)
!2049 = !DILocation(line: 2634, column: 14, scope: !2048)
!2050 = !DILocation(line: 2634, column: 24, scope: !2048)
!2051 = !DILocation(line: 2634, column: 21, scope: !2048)
!2052 = !DILocation(line: 2634, column: 7, scope: !2013)
!2053 = !DILocation(line: 2635, column: 5, scope: !2048)
!2054 = !DILocation(line: 2636, column: 4, scope: !2013)
!2055 = !DILocation(line: 2637, column: 40, scope: !2013)
!2056 = !DILocation(line: 2637, column: 46, scope: !2013)
!2057 = !DILocation(line: 2637, column: 14, scope: !2013)
!2058 = !DILocation(line: 2637, column: 13, scope: !2013)
!2059 = !DILocation(line: 2638, column: 9, scope: !2060)
!2060 = distinct !DILexicalBlock(scope: !2013, file: !1, line: 2638, column: 3)
!2061 = !DILocation(line: 2638, column: 8, scope: !2060)
!2062 = !DILocation(line: 2638, column: 13, scope: !2063)
!2063 = distinct !DILexicalBlock(scope: !2060, file: !1, line: 2638, column: 3)
!2064 = !DILocation(line: 2638, column: 27, scope: !2063)
!2065 = !DILocation(line: 2638, column: 34, scope: !2063)
!2066 = !DILocation(line: 2638, column: 15, scope: !2063)
!2067 = !DILocation(line: 2638, column: 3, scope: !2060)
!2068 = !DILocalVariable(name: "proceed", scope: !2069, file: !1, line: 2641, type: !575)
!2069 = distinct !DILexicalBlock(scope: !2063, file: !1, line: 2639, column: 3)
!2070 = !DILocation(line: 2641, column: 7, scope: !2069)
!2071 = !DILocalVariable(name: "indexes", scope: !2069, file: !1, line: 2644, type: !1773)
!2072 = !DILocation(line: 2644, column: 17, scope: !2069)
!2073 = !DILocalVariable(name: "q", scope: !2069, file: !1, line: 2647, type: !1776)
!2074 = !DILocation(line: 2647, column: 17, scope: !2069)
!2075 = !DILocalVariable(name: "x", scope: !2069, file: !1, line: 2650, type: !640)
!2076 = !DILocation(line: 2650, column: 7, scope: !2069)
!2077 = !DILocation(line: 2652, column: 35, scope: !2069)
!2078 = !DILocation(line: 2652, column: 48, scope: !2069)
!2079 = !DILocation(line: 2652, column: 50, scope: !2069)
!2080 = !DILocation(line: 2652, column: 57, scope: !2069)
!2081 = !DILocation(line: 2652, column: 67, scope: !2069)
!2082 = !DILocation(line: 2652, column: 7, scope: !2069)
!2083 = !DILocation(line: 2652, column: 6, scope: !2069)
!2084 = !DILocation(line: 2653, column: 9, scope: !2085)
!2085 = distinct !DILexicalBlock(scope: !2069, file: !1, line: 2653, column: 9)
!2086 = !DILocation(line: 2653, column: 11, scope: !2085)
!2087 = !DILocation(line: 2653, column: 9, scope: !2069)
!2088 = !DILocation(line: 2654, column: 7, scope: !2085)
!2089 = !DILocation(line: 2655, column: 45, scope: !2069)
!2090 = !DILocation(line: 2655, column: 13, scope: !2069)
!2091 = !DILocation(line: 2655, column: 12, scope: !2069)
!2092 = !DILocation(line: 2656, column: 11, scope: !2093)
!2093 = distinct !DILexicalBlock(scope: !2069, file: !1, line: 2656, column: 5)
!2094 = !DILocation(line: 2656, column: 10, scope: !2093)
!2095 = !DILocation(line: 2656, column: 15, scope: !2096)
!2096 = distinct !DILexicalBlock(scope: !2093, file: !1, line: 2656, column: 5)
!2097 = !DILocation(line: 2656, column: 29, scope: !2096)
!2098 = !DILocation(line: 2656, column: 36, scope: !2096)
!2099 = !DILocation(line: 2656, column: 17, scope: !2096)
!2100 = !DILocation(line: 2656, column: 5, scope: !2093)
!2101 = !DILocation(line: 2658, column: 30, scope: !2102)
!2102 = distinct !DILexicalBlock(scope: !2096, file: !1, line: 2657, column: 5)
!2103 = !DILocation(line: 2658, column: 7, scope: !2102)
!2104 = !DILocation(line: 2658, column: 14, scope: !2102)
!2105 = !DILocation(line: 2658, column: 23, scope: !2102)
!2106 = !DILocation(line: 2658, column: 26, scope: !2102)
!2107 = !DILocation(line: 2658, column: 29, scope: !2102)
!2108 = !DILocation(line: 2659, column: 32, scope: !2102)
!2109 = !DILocation(line: 2659, column: 7, scope: !2102)
!2110 = !DILocation(line: 2659, column: 14, scope: !2102)
!2111 = !DILocation(line: 2659, column: 23, scope: !2102)
!2112 = !DILocation(line: 2659, column: 26, scope: !2102)
!2113 = !DILocation(line: 2659, column: 31, scope: !2102)
!2114 = !DILocation(line: 2660, column: 31, scope: !2102)
!2115 = !DILocation(line: 2660, column: 7, scope: !2102)
!2116 = !DILocation(line: 2660, column: 14, scope: !2102)
!2117 = !DILocation(line: 2660, column: 23, scope: !2102)
!2118 = !DILocation(line: 2660, column: 26, scope: !2102)
!2119 = !DILocation(line: 2660, column: 30, scope: !2102)
!2120 = !DILocation(line: 2661, column: 34, scope: !2102)
!2121 = !DILocation(line: 2661, column: 7, scope: !2102)
!2122 = !DILocation(line: 2661, column: 14, scope: !2102)
!2123 = !DILocation(line: 2661, column: 23, scope: !2102)
!2124 = !DILocation(line: 2661, column: 26, scope: !2102)
!2125 = !DILocation(line: 2661, column: 33, scope: !2102)
!2126 = !DILocation(line: 2662, column: 7, scope: !2127)
!2127 = distinct !DILexicalBlock(scope: !2128, file: !1, line: 2662, column: 7)
!2128 = distinct !DILexicalBlock(scope: !2102, file: !1, line: 2662, column: 7)
!2129 = !DILocation(line: 2662, column: 7, scope: !2128)
!2130 = !DILocation(line: 2663, column: 8, scope: !2102)
!2131 = !DILocation(line: 2664, column: 8, scope: !2102)
!2132 = !DILocation(line: 2665, column: 5, scope: !2102)
!2133 = !DILocation(line: 2656, column: 46, scope: !2096)
!2134 = !DILocation(line: 2656, column: 5, scope: !2096)
!2135 = distinct !{!2135, !2100, !2136}
!2136 = !DILocation(line: 2665, column: 5, scope: !2093)
!2137 = !DILocation(line: 2666, column: 38, scope: !2138)
!2138 = distinct !DILexicalBlock(scope: !2069, file: !1, line: 2666, column: 9)
!2139 = !DILocation(line: 2666, column: 49, scope: !2138)
!2140 = !DILocation(line: 2666, column: 9, scope: !2138)
!2141 = !DILocation(line: 2666, column: 60, scope: !2138)
!2142 = !DILocation(line: 2666, column: 9, scope: !2069)
!2143 = !DILocation(line: 2667, column: 7, scope: !2138)
!2144 = !DILocation(line: 2668, column: 30, scope: !2069)
!2145 = !DILocation(line: 2668, column: 70, scope: !2069)
!2146 = !DILocation(line: 2669, column: 7, scope: !2069)
!2147 = !DILocation(line: 2669, column: 14, scope: !2069)
!2148 = !DILocation(line: 2668, column: 13, scope: !2069)
!2149 = !DILocation(line: 2668, column: 12, scope: !2069)
!2150 = !DILocation(line: 2670, column: 9, scope: !2151)
!2151 = distinct !DILexicalBlock(scope: !2069, file: !1, line: 2670, column: 9)
!2152 = !DILocation(line: 2670, column: 17, scope: !2151)
!2153 = !DILocation(line: 2670, column: 9, scope: !2069)
!2154 = !DILocation(line: 2671, column: 13, scope: !2151)
!2155 = !DILocation(line: 2671, column: 7, scope: !2151)
!2156 = !DILocation(line: 2672, column: 3, scope: !2069)
!2157 = !DILocation(line: 2638, column: 41, scope: !2063)
!2158 = !DILocation(line: 2638, column: 3, scope: !2063)
!2159 = distinct !{!2159, !2067, !2160}
!2160 = !DILocation(line: 2672, column: 3, scope: !2060)
!2161 = !DILocation(line: 2673, column: 31, scope: !2013)
!2162 = !DILocation(line: 2673, column: 14, scope: !2013)
!2163 = !DILocation(line: 2673, column: 13, scope: !2013)
!2164 = !DILocation(line: 2674, column: 10, scope: !2013)
!2165 = !DILocation(line: 2674, column: 3, scope: !2013)
!2166 = !DILocation(line: 2675, column: 1, scope: !2013)
!2167 = distinct !DISubprogram(name: "SetGrayscaleImage", scope: !1, file: !1, line: 3315, type: !1156, scopeLine: 3316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!2168 = !DILocalVariable(name: "image", arg: 1, scope: !2167, file: !1, line: 3315, type: !652)
!2169 = !DILocation(line: 3315, column: 51, scope: !2167)
!2170 = !DILocalVariable(name: "image_view", scope: !2167, file: !1, line: 3318, type: !1382)
!2171 = !DILocation(line: 3318, column: 6, scope: !2167)
!2172 = !DILocalVariable(name: "exception", scope: !2167, file: !1, line: 3321, type: !1387)
!2173 = !DILocation(line: 3321, column: 6, scope: !2167)
!2174 = !DILocalVariable(name: "status", scope: !2167, file: !1, line: 3324, type: !575)
!2175 = !DILocation(line: 3324, column: 5, scope: !2167)
!2176 = !DILocalVariable(name: "colormap", scope: !2167, file: !1, line: 3327, type: !669)
!2177 = !DILocation(line: 3327, column: 6, scope: !2167)
!2178 = !DILocalVariable(name: "i", scope: !2167, file: !1, line: 3330, type: !640)
!2179 = !DILocation(line: 3330, column: 5, scope: !2167)
!2180 = !DILocalVariable(name: "colormap_index", scope: !2167, file: !1, line: 3333, type: !992)
!2181 = !DILocation(line: 3333, column: 6, scope: !2167)
!2182 = !DILocalVariable(name: "j", scope: !2167, file: !1, line: 3334, type: !640)
!2183 = !DILocation(line: 3334, column: 5, scope: !2167)
!2184 = !DILocalVariable(name: "y", scope: !2167, file: !1, line: 3335, type: !640)
!2185 = !DILocation(line: 3335, column: 5, scope: !2167)
!2186 = !DILocation(line: 3339, column: 7, scope: !2187)
!2187 = distinct !DILexicalBlock(scope: !2167, file: !1, line: 3339, column: 7)
!2188 = !DILocation(line: 3339, column: 14, scope: !2187)
!2189 = !DILocation(line: 3339, column: 19, scope: !2187)
!2190 = !DILocation(line: 3339, column: 7, scope: !2167)
!2191 = !DILocation(line: 3340, column: 37, scope: !2187)
!2192 = !DILocation(line: 3340, column: 12, scope: !2187)
!2193 = !DILocation(line: 3340, column: 5, scope: !2187)
!2194 = !DILocation(line: 3341, column: 30, scope: !2167)
!2195 = !DILocation(line: 3341, column: 18, scope: !2167)
!2196 = !DILocation(line: 3341, column: 17, scope: !2167)
!2197 = !DILocation(line: 3343, column: 7, scope: !2198)
!2198 = distinct !DILexicalBlock(scope: !2167, file: !1, line: 3343, column: 7)
!2199 = !DILocation(line: 3343, column: 22, scope: !2198)
!2200 = !DILocation(line: 3343, column: 7, scope: !2167)
!2201 = !DILocation(line: 3344, column: 5, scope: !2202)
!2202 = distinct !DILexicalBlock(scope: !2203, file: !1, line: 3344, column: 5)
!2203 = distinct !DILexicalBlock(scope: !2198, file: !1, line: 3344, column: 5)
!2204 = !DILocation(line: 3344, column: 5, scope: !2203)
!2205 = !DILocation(line: 3346, column: 7, scope: !2206)
!2206 = distinct !DILexicalBlock(scope: !2167, file: !1, line: 3346, column: 7)
!2207 = !DILocation(line: 3346, column: 14, scope: !2206)
!2208 = !DILocation(line: 3346, column: 28, scope: !2206)
!2209 = !DILocation(line: 3346, column: 7, scope: !2167)
!2210 = !DILocalVariable(name: "exception", scope: !2211, file: !1, line: 3349, type: !1387)
!2211 = distinct !DILexicalBlock(scope: !2206, file: !1, line: 3347, column: 5)
!2212 = !DILocation(line: 3349, column: 10, scope: !2211)
!2213 = !DILocation(line: 3351, column: 13, scope: !2214)
!2214 = distinct !DILexicalBlock(scope: !2211, file: !1, line: 3351, column: 7)
!2215 = !DILocation(line: 3351, column: 12, scope: !2214)
!2216 = !DILocation(line: 3351, column: 17, scope: !2217)
!2217 = distinct !DILexicalBlock(scope: !2214, file: !1, line: 3351, column: 7)
!2218 = !DILocation(line: 3351, column: 19, scope: !2217)
!2219 = !DILocation(line: 3351, column: 7, scope: !2214)
!2220 = !DILocation(line: 3352, column: 9, scope: !2217)
!2221 = !DILocation(line: 3352, column: 24, scope: !2217)
!2222 = !DILocation(line: 3352, column: 26, scope: !2217)
!2223 = !DILocation(line: 3351, column: 41, scope: !2217)
!2224 = !DILocation(line: 3351, column: 7, scope: !2217)
!2225 = distinct !{!2225, !2219, !2226}
!2226 = !DILocation(line: 3352, column: 30, scope: !2214)
!2227 = !DILocation(line: 3353, column: 32, scope: !2228)
!2228 = distinct !DILexicalBlock(scope: !2211, file: !1, line: 3353, column: 11)
!2229 = !DILocation(line: 3353, column: 11, scope: !2228)
!2230 = !DILocation(line: 3353, column: 48, scope: !2228)
!2231 = !DILocation(line: 3353, column: 11, scope: !2211)
!2232 = !DILocation(line: 3354, column: 9, scope: !2233)
!2233 = distinct !DILexicalBlock(scope: !2234, file: !1, line: 3354, column: 9)
!2234 = distinct !DILexicalBlock(scope: !2228, file: !1, line: 3354, column: 9)
!2235 = !DILocation(line: 3354, column: 9, scope: !2234)
!2236 = !DILocation(line: 3356, column: 7, scope: !2211)
!2237 = !DILocation(line: 3356, column: 14, scope: !2211)
!2238 = !DILocation(line: 3356, column: 20, scope: !2211)
!2239 = !DILocation(line: 3357, column: 13, scope: !2211)
!2240 = !DILocation(line: 3358, column: 19, scope: !2211)
!2241 = !DILocation(line: 3358, column: 26, scope: !2211)
!2242 = !DILocation(line: 3358, column: 16, scope: !2211)
!2243 = !DILocation(line: 3359, column: 44, scope: !2211)
!2244 = !DILocation(line: 3359, column: 50, scope: !2211)
!2245 = !DILocation(line: 3359, column: 18, scope: !2211)
!2246 = !DILocation(line: 3359, column: 17, scope: !2211)
!2247 = !DILocation(line: 3364, column: 13, scope: !2248)
!2248 = distinct !DILexicalBlock(scope: !2211, file: !1, line: 3364, column: 7)
!2249 = !DILocation(line: 3364, column: 12, scope: !2248)
!2250 = !DILocation(line: 3364, column: 17, scope: !2251)
!2251 = distinct !DILexicalBlock(scope: !2248, file: !1, line: 3364, column: 7)
!2252 = !DILocation(line: 3364, column: 31, scope: !2251)
!2253 = !DILocation(line: 3364, column: 38, scope: !2251)
!2254 = !DILocation(line: 3364, column: 19, scope: !2251)
!2255 = !DILocation(line: 3364, column: 7, scope: !2248)
!2256 = !DILocalVariable(name: "indexes", scope: !2257, file: !1, line: 3367, type: !1773)
!2257 = distinct !DILexicalBlock(scope: !2251, file: !1, line: 3365, column: 7)
!2258 = !DILocation(line: 3367, column: 21, scope: !2257)
!2259 = !DILocalVariable(name: "q", scope: !2257, file: !1, line: 3370, type: !1466)
!2260 = !DILocation(line: 3370, column: 21, scope: !2257)
!2261 = !DILocalVariable(name: "x", scope: !2257, file: !1, line: 3373, type: !640)
!2262 = !DILocation(line: 3373, column: 11, scope: !2257)
!2263 = !DILocation(line: 3375, column: 13, scope: !2264)
!2264 = distinct !DILexicalBlock(scope: !2257, file: !1, line: 3375, column: 13)
!2265 = !DILocation(line: 3375, column: 20, scope: !2264)
!2266 = !DILocation(line: 3375, column: 13, scope: !2257)
!2267 = !DILocation(line: 3376, column: 11, scope: !2264)
!2268 = !DILocation(line: 3377, column: 39, scope: !2257)
!2269 = !DILocation(line: 3377, column: 52, scope: !2257)
!2270 = !DILocation(line: 3377, column: 54, scope: !2257)
!2271 = !DILocation(line: 3377, column: 61, scope: !2257)
!2272 = !DILocation(line: 3378, column: 11, scope: !2257)
!2273 = !DILocation(line: 3377, column: 11, scope: !2257)
!2274 = !DILocation(line: 3377, column: 10, scope: !2257)
!2275 = !DILocation(line: 3379, column: 13, scope: !2276)
!2276 = distinct !DILexicalBlock(scope: !2257, file: !1, line: 3379, column: 13)
!2277 = !DILocation(line: 3379, column: 15, scope: !2276)
!2278 = !DILocation(line: 3379, column: 13, scope: !2257)
!2279 = !DILocation(line: 3381, column: 19, scope: !2280)
!2280 = distinct !DILexicalBlock(scope: !2276, file: !1, line: 3380, column: 11)
!2281 = !DILocation(line: 3382, column: 13, scope: !2280)
!2282 = !DILocation(line: 3384, column: 49, scope: !2257)
!2283 = !DILocation(line: 3384, column: 17, scope: !2257)
!2284 = !DILocation(line: 3384, column: 16, scope: !2257)
!2285 = !DILocation(line: 3385, column: 15, scope: !2286)
!2286 = distinct !DILexicalBlock(scope: !2257, file: !1, line: 3385, column: 9)
!2287 = !DILocation(line: 3385, column: 14, scope: !2286)
!2288 = !DILocation(line: 3385, column: 19, scope: !2289)
!2289 = distinct !DILexicalBlock(scope: !2286, file: !1, line: 3385, column: 9)
!2290 = !DILocation(line: 3385, column: 33, scope: !2289)
!2291 = !DILocation(line: 3385, column: 40, scope: !2289)
!2292 = !DILocation(line: 3385, column: 21, scope: !2289)
!2293 = !DILocation(line: 3385, column: 9, scope: !2286)
!2294 = !DILocalVariable(name: "intensity", scope: !2295, file: !1, line: 3388, type: !570)
!2295 = distinct !DILexicalBlock(scope: !2289, file: !1, line: 3386, column: 9)
!2296 = !DILocation(line: 3388, column: 13, scope: !2295)
!2297 = !DILocation(line: 3390, column: 39, scope: !2295)
!2298 = !DILocation(line: 3390, column: 21, scope: !2295)
!2299 = !DILocation(line: 3390, column: 20, scope: !2295)
!2300 = !DILocation(line: 3391, column: 15, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !2295, file: !1, line: 3391, column: 15)
!2302 = !DILocation(line: 3391, column: 30, scope: !2301)
!2303 = !DILocation(line: 3391, column: 41, scope: !2301)
!2304 = !DILocation(line: 3391, column: 15, scope: !2295)
!2305 = !DILocation(line: 3396, column: 19, scope: !2306)
!2306 = distinct !DILexicalBlock(scope: !2307, file: !1, line: 3396, column: 19)
!2307 = distinct !DILexicalBlock(scope: !2301, file: !1, line: 3392, column: 13)
!2308 = !DILocation(line: 3396, column: 34, scope: !2306)
!2309 = !DILocation(line: 3396, column: 45, scope: !2306)
!2310 = !DILocation(line: 3396, column: 19, scope: !2307)
!2311 = !DILocation(line: 3398, column: 55, scope: !2312)
!2312 = distinct !DILexicalBlock(scope: !2306, file: !1, line: 3397, column: 17)
!2313 = !DILocation(line: 3398, column: 62, scope: !2312)
!2314 = !DILocation(line: 3398, column: 19, scope: !2312)
!2315 = !DILocation(line: 3398, column: 34, scope: !2312)
!2316 = !DILocation(line: 3398, column: 44, scope: !2312)
!2317 = !DILocation(line: 3399, column: 54, scope: !2312)
!2318 = !DILocation(line: 3399, column: 19, scope: !2312)
!2319 = !DILocation(line: 3399, column: 26, scope: !2312)
!2320 = !DILocation(line: 3399, column: 35, scope: !2312)
!2321 = !DILocation(line: 3399, column: 42, scope: !2312)
!2322 = !DILocation(line: 3399, column: 50, scope: !2312)
!2323 = !DILocation(line: 3399, column: 53, scope: !2312)
!2324 = !DILocation(line: 3400, column: 56, scope: !2312)
!2325 = !DILocation(line: 3400, column: 19, scope: !2312)
!2326 = !DILocation(line: 3400, column: 26, scope: !2312)
!2327 = !DILocation(line: 3400, column: 35, scope: !2312)
!2328 = !DILocation(line: 3400, column: 42, scope: !2312)
!2329 = !DILocation(line: 3400, column: 50, scope: !2312)
!2330 = !DILocation(line: 3400, column: 55, scope: !2312)
!2331 = !DILocation(line: 3401, column: 55, scope: !2312)
!2332 = !DILocation(line: 3401, column: 19, scope: !2312)
!2333 = !DILocation(line: 3401, column: 26, scope: !2312)
!2334 = !DILocation(line: 3401, column: 35, scope: !2312)
!2335 = !DILocation(line: 3401, column: 42, scope: !2312)
!2336 = !DILocation(line: 3401, column: 50, scope: !2312)
!2337 = !DILocation(line: 3401, column: 54, scope: !2312)
!2338 = !DILocation(line: 3402, column: 19, scope: !2312)
!2339 = !DILocation(line: 3402, column: 26, scope: !2312)
!2340 = !DILocation(line: 3402, column: 32, scope: !2312)
!2341 = !DILocation(line: 3403, column: 16, scope: !2312)
!2342 = !DILocation(line: 3404, column: 13, scope: !2307)
!2343 = !DILocation(line: 3405, column: 11, scope: !2344)
!2344 = distinct !DILexicalBlock(scope: !2345, file: !1, line: 3405, column: 11)
!2345 = distinct !DILexicalBlock(scope: !2295, file: !1, line: 3405, column: 11)
!2346 = !DILocation(line: 3405, column: 11, scope: !2345)
!2347 = !DILocation(line: 3406, column: 12, scope: !2295)
!2348 = !DILocation(line: 3407, column: 9, scope: !2295)
!2349 = !DILocation(line: 3385, column: 50, scope: !2289)
!2350 = !DILocation(line: 3385, column: 9, scope: !2289)
!2351 = distinct !{!2351, !2293, !2352}
!2352 = !DILocation(line: 3407, column: 9, scope: !2286)
!2353 = !DILocation(line: 3408, column: 42, scope: !2354)
!2354 = distinct !DILexicalBlock(scope: !2257, file: !1, line: 3408, column: 13)
!2355 = !DILocation(line: 3408, column: 53, scope: !2354)
!2356 = !DILocation(line: 3408, column: 13, scope: !2354)
!2357 = !DILocation(line: 3408, column: 64, scope: !2354)
!2358 = !DILocation(line: 3408, column: 13, scope: !2257)
!2359 = !DILocation(line: 3409, column: 17, scope: !2354)
!2360 = !DILocation(line: 3409, column: 11, scope: !2354)
!2361 = !DILocation(line: 3410, column: 7, scope: !2257)
!2362 = !DILocation(line: 3364, column: 45, scope: !2251)
!2363 = !DILocation(line: 3364, column: 7, scope: !2251)
!2364 = distinct !{!2364, !2255, !2365}
!2365 = !DILocation(line: 3410, column: 7, scope: !2248)
!2366 = !DILocation(line: 3411, column: 35, scope: !2211)
!2367 = !DILocation(line: 3411, column: 18, scope: !2211)
!2368 = !DILocation(line: 3411, column: 17, scope: !2211)
!2369 = !DILocation(line: 3412, column: 5, scope: !2211)
!2370 = !DILocation(line: 3413, column: 9, scope: !2371)
!2371 = distinct !DILexicalBlock(scope: !2167, file: !1, line: 3413, column: 3)
!2372 = !DILocation(line: 3413, column: 8, scope: !2371)
!2373 = !DILocation(line: 3413, column: 13, scope: !2374)
!2374 = distinct !DILexicalBlock(scope: !2371, file: !1, line: 3413, column: 3)
!2375 = !DILocation(line: 3413, column: 27, scope: !2374)
!2376 = !DILocation(line: 3413, column: 34, scope: !2374)
!2377 = !DILocation(line: 3413, column: 15, scope: !2374)
!2378 = !DILocation(line: 3413, column: 3, scope: !2371)
!2379 = !DILocation(line: 3414, column: 49, scope: !2374)
!2380 = !DILocation(line: 3414, column: 32, scope: !2374)
!2381 = !DILocation(line: 3414, column: 5, scope: !2374)
!2382 = !DILocation(line: 3414, column: 12, scope: !2374)
!2383 = !DILocation(line: 3414, column: 21, scope: !2374)
!2384 = !DILocation(line: 3414, column: 24, scope: !2374)
!2385 = !DILocation(line: 3414, column: 31, scope: !2374)
!2386 = !DILocation(line: 3413, column: 43, scope: !2374)
!2387 = !DILocation(line: 3413, column: 3, scope: !2374)
!2388 = distinct !{!2388, !2378, !2389}
!2389 = !DILocation(line: 3414, column: 49, scope: !2371)
!2390 = !DILocation(line: 3415, column: 18, scope: !2167)
!2391 = !DILocation(line: 3415, column: 25, scope: !2167)
!2392 = !DILocation(line: 3415, column: 9, scope: !2167)
!2393 = !DILocation(line: 3415, column: 34, scope: !2167)
!2394 = !DILocation(line: 3415, column: 41, scope: !2167)
!2395 = !DILocation(line: 3415, column: 3, scope: !2167)
!2396 = !DILocation(line: 3417, column: 49, scope: !2167)
!2397 = !DILocation(line: 3417, column: 56, scope: !2167)
!2398 = !DILocation(line: 3417, column: 28, scope: !2167)
!2399 = !DILocation(line: 3417, column: 12, scope: !2167)
!2400 = !DILocation(line: 3417, column: 11, scope: !2167)
!2401 = !DILocation(line: 3419, column: 7, scope: !2402)
!2402 = distinct !DILexicalBlock(scope: !2167, file: !1, line: 3419, column: 7)
!2403 = !DILocation(line: 3419, column: 16, scope: !2402)
!2404 = !DILocation(line: 3419, column: 7, scope: !2167)
!2405 = !DILocation(line: 3420, column: 5, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2407, file: !1, line: 3420, column: 5)
!2407 = distinct !DILexicalBlock(scope: !2402, file: !1, line: 3420, column: 5)
!2408 = !DILocation(line: 3420, column: 5, scope: !2407)
!2409 = !DILocation(line: 3422, column: 4, scope: !2167)
!2410 = !DILocation(line: 3423, column: 3, scope: !2167)
!2411 = !DILocation(line: 3423, column: 12, scope: !2167)
!2412 = !DILocation(line: 3423, column: 15, scope: !2167)
!2413 = !DILocation(line: 3423, column: 22, scope: !2167)
!2414 = !DILocation(line: 3424, column: 9, scope: !2415)
!2415 = distinct !DILexicalBlock(scope: !2167, file: !1, line: 3424, column: 3)
!2416 = !DILocation(line: 3424, column: 8, scope: !2415)
!2417 = !DILocation(line: 3424, column: 13, scope: !2418)
!2418 = distinct !DILexicalBlock(scope: !2415, file: !1, line: 3424, column: 3)
!2419 = !DILocation(line: 3424, column: 27, scope: !2418)
!2420 = !DILocation(line: 3424, column: 34, scope: !2418)
!2421 = !DILocation(line: 3424, column: 15, scope: !2418)
!2422 = !DILocation(line: 3424, column: 3, scope: !2415)
!2423 = !DILocation(line: 3426, column: 21, scope: !2424)
!2424 = distinct !DILexicalBlock(scope: !2425, file: !1, line: 3426, column: 9)
!2425 = distinct !DILexicalBlock(scope: !2418, file: !1, line: 3425, column: 3)
!2426 = !DILocation(line: 3426, column: 28, scope: !2424)
!2427 = !DILocation(line: 3426, column: 37, scope: !2424)
!2428 = !DILocation(line: 3426, column: 41, scope: !2424)
!2429 = !DILocation(line: 3426, column: 48, scope: !2424)
!2430 = !DILocation(line: 3426, column: 57, scope: !2424)
!2431 = !DILocation(line: 3426, column: 9, scope: !2424)
!2432 = !DILocation(line: 3426, column: 61, scope: !2424)
!2433 = !DILocation(line: 3426, column: 9, scope: !2425)
!2434 = !DILocation(line: 3428, column: 10, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2424, file: !1, line: 3427, column: 7)
!2436 = !DILocation(line: 3429, column: 9, scope: !2435)
!2437 = !DILocation(line: 3429, column: 18, scope: !2435)
!2438 = !DILocation(line: 3429, column: 21, scope: !2435)
!2439 = !DILocation(line: 3429, column: 28, scope: !2435)
!2440 = !DILocation(line: 3429, column: 37, scope: !2435)
!2441 = !DILocation(line: 3430, column: 7, scope: !2435)
!2442 = !DILocation(line: 3431, column: 58, scope: !2425)
!2443 = !DILocation(line: 3431, column: 5, scope: !2425)
!2444 = !DILocation(line: 3431, column: 30, scope: !2425)
!2445 = !DILocation(line: 3431, column: 37, scope: !2425)
!2446 = !DILocation(line: 3431, column: 46, scope: !2425)
!2447 = !DILocation(line: 3431, column: 49, scope: !2425)
!2448 = !DILocation(line: 3431, column: 20, scope: !2425)
!2449 = !DILocation(line: 3431, column: 57, scope: !2425)
!2450 = !DILocation(line: 3432, column: 3, scope: !2425)
!2451 = !DILocation(line: 3424, column: 43, scope: !2418)
!2452 = !DILocation(line: 3424, column: 3, scope: !2418)
!2453 = distinct !{!2453, !2422, !2454}
!2454 = !DILocation(line: 3432, column: 3, scope: !2415)
!2455 = !DILocation(line: 3433, column: 27, scope: !2167)
!2456 = !DILocation(line: 3433, column: 28, scope: !2167)
!2457 = !DILocation(line: 3433, column: 3, scope: !2167)
!2458 = !DILocation(line: 3433, column: 10, scope: !2167)
!2459 = !DILocation(line: 3433, column: 16, scope: !2167)
!2460 = !DILocation(line: 3434, column: 58, scope: !2167)
!2461 = !DILocation(line: 3434, column: 65, scope: !2167)
!2462 = !DILocation(line: 3434, column: 35, scope: !2167)
!2463 = !DILocation(line: 3434, column: 19, scope: !2167)
!2464 = !DILocation(line: 3434, column: 3, scope: !2167)
!2465 = !DILocation(line: 3434, column: 10, scope: !2167)
!2466 = !DILocation(line: 3434, column: 18, scope: !2167)
!2467 = !DILocation(line: 3435, column: 19, scope: !2167)
!2468 = !DILocation(line: 3435, column: 3, scope: !2167)
!2469 = !DILocation(line: 3435, column: 10, scope: !2167)
!2470 = !DILocation(line: 3435, column: 18, scope: !2167)
!2471 = !DILocation(line: 3436, column: 9, scope: !2167)
!2472 = !DILocation(line: 3437, column: 15, scope: !2167)
!2473 = !DILocation(line: 3437, column: 22, scope: !2167)
!2474 = !DILocation(line: 3437, column: 12, scope: !2167)
!2475 = !DILocation(line: 3438, column: 40, scope: !2167)
!2476 = !DILocation(line: 3438, column: 46, scope: !2167)
!2477 = !DILocation(line: 3438, column: 14, scope: !2167)
!2478 = !DILocation(line: 3438, column: 13, scope: !2167)
!2479 = !DILocation(line: 3443, column: 9, scope: !2480)
!2480 = distinct !DILexicalBlock(scope: !2167, file: !1, line: 3443, column: 3)
!2481 = !DILocation(line: 3443, column: 8, scope: !2480)
!2482 = !DILocation(line: 3443, column: 13, scope: !2483)
!2483 = distinct !DILexicalBlock(scope: !2480, file: !1, line: 3443, column: 3)
!2484 = !DILocation(line: 3443, column: 27, scope: !2483)
!2485 = !DILocation(line: 3443, column: 34, scope: !2483)
!2486 = !DILocation(line: 3443, column: 15, scope: !2483)
!2487 = !DILocation(line: 3443, column: 3, scope: !2480)
!2488 = !DILocalVariable(name: "indexes", scope: !2489, file: !1, line: 3446, type: !1773)
!2489 = distinct !DILexicalBlock(scope: !2483, file: !1, line: 3444, column: 3)
!2490 = !DILocation(line: 3446, column: 17, scope: !2489)
!2491 = !DILocalVariable(name: "q", scope: !2489, file: !1, line: 3449, type: !1466)
!2492 = !DILocation(line: 3449, column: 17, scope: !2489)
!2493 = !DILocalVariable(name: "x", scope: !2489, file: !1, line: 3452, type: !640)
!2494 = !DILocation(line: 3452, column: 7, scope: !2489)
!2495 = !DILocation(line: 3454, column: 9, scope: !2496)
!2496 = distinct !DILexicalBlock(scope: !2489, file: !1, line: 3454, column: 9)
!2497 = !DILocation(line: 3454, column: 16, scope: !2496)
!2498 = !DILocation(line: 3454, column: 9, scope: !2489)
!2499 = !DILocation(line: 3455, column: 7, scope: !2496)
!2500 = !DILocation(line: 3456, column: 35, scope: !2489)
!2501 = !DILocation(line: 3456, column: 48, scope: !2489)
!2502 = !DILocation(line: 3456, column: 50, scope: !2489)
!2503 = !DILocation(line: 3456, column: 57, scope: !2489)
!2504 = !DILocation(line: 3456, column: 67, scope: !2489)
!2505 = !DILocation(line: 3456, column: 7, scope: !2489)
!2506 = !DILocation(line: 3456, column: 6, scope: !2489)
!2507 = !DILocation(line: 3457, column: 9, scope: !2508)
!2508 = distinct !DILexicalBlock(scope: !2489, file: !1, line: 3457, column: 9)
!2509 = !DILocation(line: 3457, column: 11, scope: !2508)
!2510 = !DILocation(line: 3457, column: 9, scope: !2489)
!2511 = !DILocation(line: 3459, column: 15, scope: !2512)
!2512 = distinct !DILexicalBlock(scope: !2508, file: !1, line: 3458, column: 7)
!2513 = !DILocation(line: 3460, column: 9, scope: !2512)
!2514 = !DILocation(line: 3462, column: 45, scope: !2489)
!2515 = !DILocation(line: 3462, column: 13, scope: !2489)
!2516 = !DILocation(line: 3462, column: 12, scope: !2489)
!2517 = !DILocation(line: 3463, column: 11, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2489, file: !1, line: 3463, column: 5)
!2519 = !DILocation(line: 3463, column: 10, scope: !2518)
!2520 = !DILocation(line: 3463, column: 15, scope: !2521)
!2521 = distinct !DILexicalBlock(scope: !2518, file: !1, line: 3463, column: 5)
!2522 = !DILocation(line: 3463, column: 29, scope: !2521)
!2523 = !DILocation(line: 3463, column: 36, scope: !2521)
!2524 = !DILocation(line: 3463, column: 17, scope: !2521)
!2525 = !DILocation(line: 3463, column: 5, scope: !2518)
!2526 = !DILocation(line: 3464, column: 7, scope: !2527)
!2527 = distinct !DILexicalBlock(scope: !2528, file: !1, line: 3464, column: 7)
!2528 = distinct !DILexicalBlock(scope: !2521, file: !1, line: 3464, column: 7)
!2529 = !DILocation(line: 3464, column: 7, scope: !2528)
!2530 = !DILocation(line: 3463, column: 46, scope: !2521)
!2531 = !DILocation(line: 3463, column: 5, scope: !2521)
!2532 = distinct !{!2532, !2525, !2533}
!2533 = !DILocation(line: 3464, column: 7, scope: !2518)
!2534 = !DILocation(line: 3466, column: 38, scope: !2535)
!2535 = distinct !DILexicalBlock(scope: !2489, file: !1, line: 3466, column: 9)
!2536 = !DILocation(line: 3466, column: 49, scope: !2535)
!2537 = !DILocation(line: 3466, column: 9, scope: !2535)
!2538 = !DILocation(line: 3466, column: 60, scope: !2535)
!2539 = !DILocation(line: 3466, column: 9, scope: !2489)
!2540 = !DILocation(line: 3467, column: 13, scope: !2535)
!2541 = !DILocation(line: 3467, column: 7, scope: !2535)
!2542 = !DILocation(line: 3468, column: 3, scope: !2489)
!2543 = !DILocation(line: 3443, column: 41, scope: !2483)
!2544 = !DILocation(line: 3443, column: 3, scope: !2483)
!2545 = distinct !{!2545, !2487, !2546}
!2546 = !DILocation(line: 3468, column: 3, scope: !2480)
!2547 = !DILocation(line: 3469, column: 31, scope: !2167)
!2548 = !DILocation(line: 3469, column: 14, scope: !2167)
!2549 = !DILocation(line: 3469, column: 13, scope: !2167)
!2550 = !DILocation(line: 3470, column: 53, scope: !2167)
!2551 = !DILocation(line: 3470, column: 30, scope: !2167)
!2552 = !DILocation(line: 3470, column: 18, scope: !2167)
!2553 = !DILocation(line: 3470, column: 17, scope: !2167)
!2554 = !DILocation(line: 3471, column: 3, scope: !2167)
!2555 = !DILocation(line: 3471, column: 10, scope: !2167)
!2556 = !DILocation(line: 3471, column: 14, scope: !2167)
!2557 = !DILocation(line: 3472, column: 25, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2167, file: !1, line: 3472, column: 7)
!2559 = !DILocation(line: 3472, column: 32, scope: !2558)
!2560 = !DILocation(line: 3472, column: 39, scope: !2558)
!2561 = !DILocation(line: 3472, column: 7, scope: !2558)
!2562 = !DILocation(line: 3472, column: 50, scope: !2558)
!2563 = !DILocation(line: 3472, column: 7, scope: !2167)
!2564 = !DILocation(line: 3473, column: 5, scope: !2558)
!2565 = !DILocation(line: 3473, column: 12, scope: !2558)
!2566 = !DILocation(line: 3473, column: 16, scope: !2558)
!2567 = !DILocation(line: 3474, column: 10, scope: !2167)
!2568 = !DILocation(line: 3474, column: 3, scope: !2167)
!2569 = !DILocation(line: 3475, column: 1, scope: !2167)
!2570 = distinct !DISubprogram(name: "GetCubeInfo", scope: !1, file: !1, line: 1944, type: !2571, scopeLine: 1946, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!2571 = !DISubroutineType(types: !2572)
!2572 = !{!938, !1097, !858, !858}
!2573 = !DILocalVariable(name: "quantize_info", arg: 1, scope: !2570, file: !1, line: 1944, type: !1097)
!2574 = !DILocation(line: 1944, column: 50, scope: !2570)
!2575 = !DILocalVariable(name: "depth", arg: 2, scope: !2570, file: !1, line: 1945, type: !858)
!2576 = !DILocation(line: 1945, column: 16, scope: !2570)
!2577 = !DILocalVariable(name: "maximum_colors", arg: 3, scope: !2570, file: !1, line: 1945, type: !858)
!2578 = !DILocation(line: 1945, column: 35, scope: !2570)
!2579 = !DILocalVariable(name: "cube_info", scope: !2570, file: !1, line: 1948, type: !938)
!2580 = !DILocation(line: 1948, column: 6, scope: !2570)
!2581 = !DILocalVariable(name: "sum", scope: !2570, file: !1, line: 1951, type: !935)
!2582 = !DILocation(line: 1951, column: 5, scope: !2570)
!2583 = !DILocalVariable(name: "weight", scope: !2570, file: !1, line: 1952, type: !935)
!2584 = !DILocation(line: 1952, column: 5, scope: !2570)
!2585 = !DILocalVariable(name: "i", scope: !2570, file: !1, line: 1955, type: !640)
!2586 = !DILocation(line: 1955, column: 5, scope: !2570)
!2587 = !DILocalVariable(name: "length", scope: !2570, file: !1, line: 1958, type: !570)
!2588 = !DILocation(line: 1958, column: 5, scope: !2570)
!2589 = !DILocation(line: 1963, column: 26, scope: !2570)
!2590 = !DILocation(line: 1963, column: 13, scope: !2570)
!2591 = !DILocation(line: 1963, column: 12, scope: !2570)
!2592 = !DILocation(line: 1964, column: 7, scope: !2593)
!2593 = distinct !DILexicalBlock(scope: !2570, file: !1, line: 1964, column: 7)
!2594 = !DILocation(line: 1964, column: 17, scope: !2593)
!2595 = !DILocation(line: 1964, column: 7, scope: !2570)
!2596 = !DILocation(line: 1965, column: 5, scope: !2593)
!2597 = !DILocation(line: 1966, column: 28, scope: !2570)
!2598 = !DILocation(line: 1966, column: 10, scope: !2570)
!2599 = !DILocation(line: 1967, column: 20, scope: !2570)
!2600 = !DILocation(line: 1967, column: 3, scope: !2570)
!2601 = !DILocation(line: 1967, column: 14, scope: !2570)
!2602 = !DILocation(line: 1967, column: 19, scope: !2570)
!2603 = !DILocation(line: 1968, column: 7, scope: !2604)
!2604 = distinct !DILexicalBlock(scope: !2570, file: !1, line: 1968, column: 7)
!2605 = !DILocation(line: 1968, column: 18, scope: !2604)
!2606 = !DILocation(line: 1968, column: 24, scope: !2604)
!2607 = !DILocation(line: 1968, column: 7, scope: !2570)
!2608 = !DILocation(line: 1969, column: 5, scope: !2604)
!2609 = !DILocation(line: 1969, column: 16, scope: !2604)
!2610 = !DILocation(line: 1969, column: 21, scope: !2604)
!2611 = !DILocation(line: 1970, column: 7, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2570, file: !1, line: 1970, column: 7)
!2613 = !DILocation(line: 1970, column: 18, scope: !2612)
!2614 = !DILocation(line: 1970, column: 24, scope: !2612)
!2615 = !DILocation(line: 1970, column: 7, scope: !2570)
!2616 = !DILocation(line: 1971, column: 5, scope: !2612)
!2617 = !DILocation(line: 1971, column: 16, scope: !2612)
!2618 = !DILocation(line: 1971, column: 21, scope: !2612)
!2619 = !DILocation(line: 1972, column: 29, scope: !2570)
!2620 = !DILocation(line: 1972, column: 3, scope: !2570)
!2621 = !DILocation(line: 1972, column: 14, scope: !2570)
!2622 = !DILocation(line: 1972, column: 28, scope: !2570)
!2623 = !DILocation(line: 1976, column: 31, scope: !2570)
!2624 = !DILocation(line: 1976, column: 19, scope: !2570)
!2625 = !DILocation(line: 1976, column: 3, scope: !2570)
!2626 = !DILocation(line: 1976, column: 14, scope: !2570)
!2627 = !DILocation(line: 1976, column: 18, scope: !2570)
!2628 = !DILocation(line: 1977, column: 7, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2570, file: !1, line: 1977, column: 7)
!2630 = !DILocation(line: 1977, column: 18, scope: !2629)
!2631 = !DILocation(line: 1977, column: 23, scope: !2629)
!2632 = !DILocation(line: 1977, column: 7, scope: !2570)
!2633 = !DILocation(line: 1978, column: 5, scope: !2629)
!2634 = !DILocation(line: 1979, column: 27, scope: !2570)
!2635 = !DILocation(line: 1979, column: 38, scope: !2570)
!2636 = !DILocation(line: 1979, column: 3, scope: !2570)
!2637 = !DILocation(line: 1979, column: 14, scope: !2570)
!2638 = !DILocation(line: 1979, column: 20, scope: !2570)
!2639 = !DILocation(line: 1979, column: 26, scope: !2570)
!2640 = !DILocation(line: 1980, column: 46, scope: !2570)
!2641 = !DILocation(line: 1980, column: 28, scope: !2570)
!2642 = !DILocation(line: 1980, column: 3, scope: !2570)
!2643 = !DILocation(line: 1980, column: 14, scope: !2570)
!2644 = !DILocation(line: 1980, column: 27, scope: !2570)
!2645 = !DILocation(line: 1981, column: 7, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2570, file: !1, line: 1981, column: 7)
!2647 = !DILocation(line: 1981, column: 18, scope: !2646)
!2648 = !DILocation(line: 1981, column: 33, scope: !2646)
!2649 = !DILocation(line: 1981, column: 40, scope: !2646)
!2650 = !DILocation(line: 1981, column: 7, scope: !2570)
!2651 = !DILocation(line: 1982, column: 12, scope: !2646)
!2652 = !DILocation(line: 1982, column: 5, scope: !2646)
!2653 = !DILocation(line: 1986, column: 9, scope: !2570)
!2654 = !DILocation(line: 1987, column: 47, scope: !2570)
!2655 = !DILocation(line: 1987, column: 26, scope: !2570)
!2656 = !DILocation(line: 1987, column: 3, scope: !2570)
!2657 = !DILocation(line: 1987, column: 14, scope: !2570)
!2658 = !DILocation(line: 1987, column: 25, scope: !2570)
!2659 = !DILocation(line: 1988, column: 7, scope: !2660)
!2660 = distinct !DILexicalBlock(scope: !2570, file: !1, line: 1988, column: 7)
!2661 = !DILocation(line: 1988, column: 18, scope: !2660)
!2662 = !DILocation(line: 1988, column: 30, scope: !2660)
!2663 = !DILocation(line: 1988, column: 7, scope: !2570)
!2664 = !DILocation(line: 1989, column: 5, scope: !2660)
!2665 = !DILocation(line: 1990, column: 53, scope: !2570)
!2666 = !DILocation(line: 1990, column: 64, scope: !2570)
!2667 = !DILocation(line: 1990, column: 32, scope: !2570)
!2668 = !DILocation(line: 1990, column: 20, scope: !2570)
!2669 = !DILocation(line: 1990, column: 3, scope: !2570)
!2670 = !DILocation(line: 1990, column: 14, scope: !2570)
!2671 = !DILocation(line: 1990, column: 19, scope: !2570)
!2672 = !DILocation(line: 1994, column: 9, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !2570, file: !1, line: 1994, column: 3)
!2674 = !DILocation(line: 1994, column: 8, scope: !2673)
!2675 = !DILocation(line: 1994, column: 13, scope: !2676)
!2676 = distinct !DILexicalBlock(scope: !2673, file: !1, line: 1994, column: 3)
!2677 = !DILocation(line: 1994, column: 27, scope: !2676)
!2678 = !DILocation(line: 1994, column: 15, scope: !2676)
!2679 = !DILocation(line: 1994, column: 3, scope: !2673)
!2680 = !DILocation(line: 1995, column: 5, scope: !2676)
!2681 = !DILocation(line: 1995, column: 16, scope: !2676)
!2682 = !DILocation(line: 1995, column: 22, scope: !2676)
!2683 = !DILocation(line: 1995, column: 24, scope: !2676)
!2684 = !DILocation(line: 1994, column: 36, scope: !2676)
!2685 = !DILocation(line: 1994, column: 3, scope: !2676)
!2686 = distinct !{!2686, !2679, !2687}
!2687 = !DILocation(line: 1995, column: 28, scope: !2673)
!2688 = !DILocation(line: 1999, column: 9, scope: !2570)
!2689 = !DILocation(line: 2000, column: 9, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2570, file: !1, line: 2000, column: 3)
!2691 = !DILocation(line: 2000, column: 8, scope: !2690)
!2692 = !DILocation(line: 2000, column: 13, scope: !2693)
!2693 = distinct !DILexicalBlock(scope: !2690, file: !1, line: 2000, column: 3)
!2694 = !DILocation(line: 2000, column: 15, scope: !2693)
!2695 = !DILocation(line: 2000, column: 3, scope: !2690)
!2696 = !DILocation(line: 2002, column: 68, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2693, file: !1, line: 2001, column: 3)
!2698 = !DILocation(line: 2002, column: 46, scope: !2697)
!2699 = !DILocation(line: 2002, column: 5, scope: !2697)
!2700 = !DILocation(line: 2002, column: 16, scope: !2697)
!2701 = !DILocation(line: 2002, column: 41, scope: !2697)
!2702 = !DILocation(line: 2002, column: 40, scope: !2697)
!2703 = !DILocation(line: 2002, column: 42, scope: !2697)
!2704 = !DILocation(line: 2002, column: 45, scope: !2697)
!2705 = !DILocation(line: 2003, column: 17, scope: !2697)
!2706 = !DILocation(line: 2003, column: 49, scope: !2697)
!2707 = !DILocation(line: 2003, column: 13, scope: !2697)
!2708 = !DILocation(line: 2003, column: 11, scope: !2697)
!2709 = !DILocation(line: 2004, column: 3, scope: !2697)
!2710 = !DILocation(line: 2000, column: 36, scope: !2693)
!2711 = !DILocation(line: 2000, column: 3, scope: !2693)
!2712 = distinct !{!2712, !2695, !2713}
!2713 = !DILocation(line: 2004, column: 3, scope: !2690)
!2714 = !DILocation(line: 2008, column: 9, scope: !2570)
!2715 = !DILocation(line: 2009, column: 9, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2570, file: !1, line: 2009, column: 3)
!2717 = !DILocation(line: 2009, column: 8, scope: !2716)
!2718 = !DILocation(line: 2009, column: 13, scope: !2719)
!2719 = distinct !DILexicalBlock(scope: !2716, file: !1, line: 2009, column: 3)
!2720 = !DILocation(line: 2009, column: 15, scope: !2719)
!2721 = !DILocation(line: 2009, column: 3, scope: !2716)
!2722 = !DILocation(line: 2010, column: 13, scope: !2719)
!2723 = !DILocation(line: 2010, column: 24, scope: !2719)
!2724 = !DILocation(line: 2010, column: 32, scope: !2719)
!2725 = !DILocation(line: 2010, column: 11, scope: !2719)
!2726 = !DILocation(line: 2010, column: 5, scope: !2719)
!2727 = !DILocation(line: 2009, column: 36, scope: !2719)
!2728 = !DILocation(line: 2009, column: 3, scope: !2719)
!2729 = distinct !{!2729, !2721, !2730}
!2730 = !DILocation(line: 2010, column: 33, scope: !2716)
!2731 = !DILocation(line: 2011, column: 6, scope: !2570)
!2732 = !DILocation(line: 2012, column: 9, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2570, file: !1, line: 2012, column: 3)
!2734 = !DILocation(line: 2012, column: 8, scope: !2733)
!2735 = !DILocation(line: 2012, column: 13, scope: !2736)
!2736 = distinct !DILexicalBlock(scope: !2733, file: !1, line: 2012, column: 3)
!2737 = !DILocation(line: 2012, column: 15, scope: !2736)
!2738 = !DILocation(line: 2012, column: 3, scope: !2733)
!2739 = !DILocation(line: 2014, column: 28, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2736, file: !1, line: 2013, column: 3)
!2741 = !DILocation(line: 2014, column: 5, scope: !2740)
!2742 = !DILocation(line: 2014, column: 16, scope: !2740)
!2743 = !DILocation(line: 2014, column: 24, scope: !2740)
!2744 = !DILocation(line: 2014, column: 26, scope: !2740)
!2745 = !DILocation(line: 2015, column: 10, scope: !2740)
!2746 = !DILocation(line: 2015, column: 21, scope: !2740)
!2747 = !DILocation(line: 2015, column: 29, scope: !2740)
!2748 = !DILocation(line: 2015, column: 8, scope: !2740)
!2749 = !DILocation(line: 2016, column: 3, scope: !2740)
!2750 = !DILocation(line: 2012, column: 36, scope: !2736)
!2751 = !DILocation(line: 2012, column: 3, scope: !2736)
!2752 = distinct !{!2752, !2738, !2753}
!2753 = !DILocation(line: 2016, column: 3, scope: !2733)
!2754 = !DILocation(line: 2017, column: 30, scope: !2570)
!2755 = !DILocation(line: 2017, column: 29, scope: !2570)
!2756 = !DILocation(line: 2017, column: 3, scope: !2570)
!2757 = !DILocation(line: 2017, column: 14, scope: !2570)
!2758 = !DILocation(line: 2017, column: 24, scope: !2570)
!2759 = !DILocation(line: 2018, column: 10, scope: !2570)
!2760 = !DILocation(line: 2018, column: 3, scope: !2570)
!2761 = !DILocation(line: 2019, column: 1, scope: !2570)
!2762 = distinct !DISubprogram(name: "ClassifyImageColors", scope: !1, file: !1, line: 751, type: !2763, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!2763 = !DISubroutineType(types: !2764)
!2764 = !{!575, !938, !854, !1387}
!2765 = !DILocalVariable(name: "cube_info", arg: 1, scope: !2762, file: !1, line: 751, type: !938)
!2766 = !DILocation(line: 751, column: 56, scope: !2762)
!2767 = !DILocalVariable(name: "image", arg: 2, scope: !2762, file: !1, line: 752, type: !854)
!2768 = !DILocation(line: 752, column: 16, scope: !2762)
!2769 = !DILocalVariable(name: "exception", arg: 3, scope: !2762, file: !1, line: 752, type: !1387)
!2770 = !DILocation(line: 752, column: 37, scope: !2762)
!2771 = !DILocalVariable(name: "image_view", scope: !2762, file: !1, line: 757, type: !1382)
!2772 = !DILocation(line: 757, column: 6, scope: !2762)
!2773 = !DILocalVariable(name: "proceed", scope: !2762, file: !1, line: 760, type: !575)
!2774 = !DILocation(line: 760, column: 5, scope: !2762)
!2775 = !DILocalVariable(name: "bisect", scope: !2762, file: !1, line: 763, type: !935)
!2776 = !DILocation(line: 763, column: 5, scope: !2762)
!2777 = !DILocalVariable(name: "node_info", scope: !2762, file: !1, line: 766, type: !943)
!2778 = !DILocation(line: 766, column: 6, scope: !2762)
!2779 = !DILocalVariable(name: "error", scope: !2762, file: !1, line: 769, type: !955)
!2780 = !DILocation(line: 769, column: 5, scope: !2762)
!2781 = !DILocalVariable(name: "mid", scope: !2762, file: !1, line: 770, type: !955)
!2782 = !DILocation(line: 770, column: 5, scope: !2762)
!2783 = !DILocalVariable(name: "midpoint", scope: !2762, file: !1, line: 771, type: !955)
!2784 = !DILocation(line: 771, column: 5, scope: !2762)
!2785 = !DILocalVariable(name: "pixel", scope: !2762, file: !1, line: 772, type: !955)
!2786 = !DILocation(line: 772, column: 5, scope: !2762)
!2787 = !DILocalVariable(name: "count", scope: !2762, file: !1, line: 775, type: !570)
!2788 = !DILocation(line: 775, column: 5, scope: !2762)
!2789 = !DILocalVariable(name: "id", scope: !2762, file: !1, line: 776, type: !570)
!2790 = !DILocation(line: 776, column: 5, scope: !2762)
!2791 = !DILocalVariable(name: "index", scope: !2762, file: !1, line: 777, type: !570)
!2792 = !DILocation(line: 777, column: 5, scope: !2762)
!2793 = !DILocalVariable(name: "level", scope: !2762, file: !1, line: 778, type: !570)
!2794 = !DILocation(line: 778, column: 5, scope: !2762)
!2795 = !DILocalVariable(name: "y", scope: !2762, file: !1, line: 781, type: !640)
!2796 = !DILocation(line: 781, column: 5, scope: !2762)
!2797 = !DILocation(line: 786, column: 22, scope: !2762)
!2798 = !DILocation(line: 786, column: 28, scope: !2762)
!2799 = !DILocation(line: 786, column: 3, scope: !2762)
!2800 = !DILocation(line: 787, column: 8, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2762, file: !1, line: 787, column: 7)
!2802 = !DILocation(line: 787, column: 19, scope: !2801)
!2803 = !DILocation(line: 787, column: 34, scope: !2801)
!2804 = !DILocation(line: 787, column: 45, scope: !2801)
!2805 = !DILocation(line: 787, column: 69, scope: !2801)
!2806 = !DILocation(line: 788, column: 8, scope: !2801)
!2807 = !DILocation(line: 788, column: 19, scope: !2801)
!2808 = !DILocation(line: 788, column: 34, scope: !2801)
!2809 = !DILocation(line: 788, column: 45, scope: !2801)
!2810 = !DILocation(line: 787, column: 7, scope: !2762)
!2811 = !DILocation(line: 789, column: 47, scope: !2801)
!2812 = !DILocation(line: 790, column: 7, scope: !2801)
!2813 = !DILocation(line: 790, column: 18, scope: !2801)
!2814 = !DILocation(line: 790, column: 33, scope: !2801)
!2815 = !DILocation(line: 789, column: 12, scope: !2801)
!2816 = !DILocation(line: 789, column: 5, scope: !2801)
!2817 = !DILocation(line: 792, column: 36, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2801, file: !1, line: 792, column: 9)
!2819 = !DILocation(line: 792, column: 43, scope: !2818)
!2820 = !DILocation(line: 792, column: 9, scope: !2818)
!2821 = !DILocation(line: 792, column: 55, scope: !2818)
!2822 = !DILocation(line: 792, column: 9, scope: !2801)
!2823 = !DILocation(line: 793, column: 49, scope: !2818)
!2824 = !DILocation(line: 793, column: 14, scope: !2818)
!2825 = !DILocation(line: 793, column: 7, scope: !2818)
!2826 = !DILocation(line: 794, column: 12, scope: !2762)
!2827 = !DILocation(line: 794, column: 15, scope: !2762)
!2828 = !DILocation(line: 795, column: 12, scope: !2762)
!2829 = !DILocation(line: 795, column: 17, scope: !2762)
!2830 = !DILocation(line: 796, column: 12, scope: !2762)
!2831 = !DILocation(line: 796, column: 16, scope: !2762)
!2832 = !DILocation(line: 797, column: 12, scope: !2762)
!2833 = !DILocation(line: 797, column: 19, scope: !2762)
!2834 = !DILocation(line: 798, column: 9, scope: !2762)
!2835 = !DILocation(line: 798, column: 16, scope: !2762)
!2836 = !DILocation(line: 799, column: 38, scope: !2762)
!2837 = !DILocation(line: 799, column: 44, scope: !2762)
!2838 = !DILocation(line: 799, column: 14, scope: !2762)
!2839 = !DILocation(line: 799, column: 13, scope: !2762)
!2840 = !DILocation(line: 800, column: 9, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !2762, file: !1, line: 800, column: 3)
!2842 = !DILocation(line: 800, column: 8, scope: !2841)
!2843 = !DILocation(line: 800, column: 13, scope: !2844)
!2844 = distinct !DILexicalBlock(scope: !2841, file: !1, line: 800, column: 3)
!2845 = !DILocation(line: 800, column: 27, scope: !2844)
!2846 = !DILocation(line: 800, column: 34, scope: !2844)
!2847 = !DILocation(line: 800, column: 15, scope: !2844)
!2848 = !DILocation(line: 800, column: 3, scope: !2841)
!2849 = !DILocalVariable(name: "p", scope: !2850, file: !1, line: 803, type: !1466)
!2850 = distinct !DILexicalBlock(scope: !2844, file: !1, line: 801, column: 3)
!2851 = !DILocation(line: 803, column: 17, scope: !2850)
!2852 = !DILocalVariable(name: "x", scope: !2850, file: !1, line: 806, type: !640)
!2853 = !DILocation(line: 806, column: 7, scope: !2850)
!2854 = !DILocation(line: 808, column: 33, scope: !2850)
!2855 = !DILocation(line: 808, column: 46, scope: !2850)
!2856 = !DILocation(line: 808, column: 48, scope: !2850)
!2857 = !DILocation(line: 808, column: 55, scope: !2850)
!2858 = !DILocation(line: 808, column: 65, scope: !2850)
!2859 = !DILocation(line: 808, column: 7, scope: !2850)
!2860 = !DILocation(line: 808, column: 6, scope: !2850)
!2861 = !DILocation(line: 809, column: 9, scope: !2862)
!2862 = distinct !DILexicalBlock(scope: !2850, file: !1, line: 809, column: 9)
!2863 = !DILocation(line: 809, column: 11, scope: !2862)
!2864 = !DILocation(line: 809, column: 9, scope: !2850)
!2865 = !DILocation(line: 810, column: 7, scope: !2862)
!2866 = !DILocation(line: 811, column: 9, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2850, file: !1, line: 811, column: 9)
!2868 = !DILocation(line: 811, column: 20, scope: !2867)
!2869 = !DILocation(line: 811, column: 26, scope: !2867)
!2870 = !DILocation(line: 811, column: 9, scope: !2850)
!2871 = !DILocation(line: 816, column: 20, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !2867, file: !1, line: 812, column: 7)
!2873 = !DILocation(line: 816, column: 26, scope: !2872)
!2874 = !DILocation(line: 816, column: 36, scope: !2872)
!2875 = !DILocation(line: 816, column: 47, scope: !2872)
!2876 = !DILocation(line: 816, column: 9, scope: !2872)
!2877 = !DILocation(line: 817, column: 9, scope: !2872)
!2878 = !DILocation(line: 817, column: 20, scope: !2872)
!2879 = !DILocation(line: 817, column: 25, scope: !2872)
!2880 = !DILocation(line: 818, column: 7, scope: !2872)
!2881 = !DILocation(line: 819, column: 11, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2850, file: !1, line: 819, column: 5)
!2883 = !DILocation(line: 819, column: 10, scope: !2882)
!2884 = !DILocation(line: 819, column: 15, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2882, file: !1, line: 819, column: 5)
!2886 = !DILocation(line: 819, column: 29, scope: !2885)
!2887 = !DILocation(line: 819, column: 36, scope: !2885)
!2888 = !DILocation(line: 819, column: 17, scope: !2885)
!2889 = !DILocation(line: 819, column: 5, scope: !2882)
!2890 = !DILocation(line: 824, column: 17, scope: !2891)
!2891 = distinct !DILexicalBlock(scope: !2892, file: !1, line: 824, column: 7)
!2892 = distinct !DILexicalBlock(scope: !2885, file: !1, line: 820, column: 5)
!2893 = !DILocation(line: 824, column: 12, scope: !2891)
!2894 = !DILocation(line: 824, column: 22, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2891, file: !1, line: 824, column: 7)
!2896 = !DILocation(line: 824, column: 34, scope: !2895)
!2897 = !DILocation(line: 824, column: 23, scope: !2895)
!2898 = !DILocation(line: 824, column: 53, scope: !2895)
!2899 = !DILocation(line: 824, column: 60, scope: !2895)
!2900 = !DILocation(line: 824, column: 41, scope: !2895)
!2901 = !DILocation(line: 824, column: 7, scope: !2891)
!2902 = !DILocation(line: 825, column: 25, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2895, file: !1, line: 825, column: 13)
!2904 = !DILocation(line: 825, column: 31, scope: !2903)
!2905 = !DILocation(line: 825, column: 33, scope: !2903)
!2906 = !DILocation(line: 825, column: 35, scope: !2903)
!2907 = !DILocation(line: 825, column: 34, scope: !2903)
!2908 = !DILocation(line: 825, column: 13, scope: !2903)
!2909 = !DILocation(line: 825, column: 42, scope: !2903)
!2910 = !DILocation(line: 825, column: 13, scope: !2895)
!2911 = !DILocation(line: 826, column: 11, scope: !2903)
!2912 = !DILocation(line: 825, column: 45, scope: !2903)
!2913 = !DILocation(line: 824, column: 74, scope: !2895)
!2914 = !DILocation(line: 824, column: 7, scope: !2895)
!2915 = distinct !{!2915, !2901, !2916}
!2916 = !DILocation(line: 826, column: 11, scope: !2891)
!2917 = !DILocation(line: 827, column: 27, scope: !2892)
!2918 = !DILocation(line: 827, column: 37, scope: !2892)
!2919 = !DILocation(line: 827, column: 7, scope: !2892)
!2920 = !DILocation(line: 828, column: 12, scope: !2892)
!2921 = !DILocation(line: 829, column: 13, scope: !2892)
!2922 = !DILocation(line: 830, column: 11, scope: !2892)
!2923 = !DILocation(line: 831, column: 17, scope: !2892)
!2924 = !DILocation(line: 831, column: 28, scope: !2892)
!2925 = !DILocation(line: 831, column: 16, scope: !2892)
!2926 = !DILocation(line: 832, column: 17, scope: !2927)
!2927 = distinct !DILexicalBlock(scope: !2892, file: !1, line: 832, column: 7)
!2928 = !DILocation(line: 832, column: 12, scope: !2927)
!2929 = !DILocation(line: 832, column: 21, scope: !2930)
!2930 = distinct !DILexicalBlock(scope: !2927, file: !1, line: 832, column: 7)
!2931 = !DILocation(line: 832, column: 27, scope: !2930)
!2932 = !DILocation(line: 832, column: 7, scope: !2927)
!2933 = !DILocation(line: 834, column: 15, scope: !2934)
!2934 = distinct !DILexicalBlock(scope: !2930, file: !1, line: 833, column: 7)
!2935 = !DILocation(line: 835, column: 26, scope: !2934)
!2936 = !DILocation(line: 835, column: 43, scope: !2934)
!2937 = !DILocation(line: 835, column: 12, scope: !2934)
!2938 = !DILocation(line: 835, column: 11, scope: !2934)
!2939 = !DILocation(line: 836, column: 19, scope: !2934)
!2940 = !DILocation(line: 836, column: 22, scope: !2934)
!2941 = !DILocation(line: 836, column: 27, scope: !2934)
!2942 = !DILocation(line: 836, column: 18, scope: !2934)
!2943 = !DILocation(line: 836, column: 34, scope: !2934)
!2944 = !DILocation(line: 836, column: 44, scope: !2934)
!2945 = !DILocation(line: 836, column: 43, scope: !2934)
!2946 = !DILocation(line: 836, column: 13, scope: !2934)
!2947 = !DILocation(line: 836, column: 16, scope: !2934)
!2948 = !DILocation(line: 837, column: 21, scope: !2934)
!2949 = !DILocation(line: 837, column: 24, scope: !2934)
!2950 = !DILocation(line: 837, column: 29, scope: !2934)
!2951 = !DILocation(line: 837, column: 20, scope: !2934)
!2952 = !DILocation(line: 837, column: 36, scope: !2934)
!2953 = !DILocation(line: 837, column: 46, scope: !2934)
!2954 = !DILocation(line: 837, column: 45, scope: !2934)
!2955 = !DILocation(line: 837, column: 13, scope: !2934)
!2956 = !DILocation(line: 837, column: 18, scope: !2934)
!2957 = !DILocation(line: 838, column: 20, scope: !2934)
!2958 = !DILocation(line: 838, column: 23, scope: !2934)
!2959 = !DILocation(line: 838, column: 28, scope: !2934)
!2960 = !DILocation(line: 838, column: 19, scope: !2934)
!2961 = !DILocation(line: 838, column: 35, scope: !2934)
!2962 = !DILocation(line: 838, column: 45, scope: !2934)
!2963 = !DILocation(line: 838, column: 44, scope: !2934)
!2964 = !DILocation(line: 838, column: 13, scope: !2934)
!2965 = !DILocation(line: 838, column: 17, scope: !2934)
!2966 = !DILocation(line: 839, column: 23, scope: !2934)
!2967 = !DILocation(line: 839, column: 26, scope: !2934)
!2968 = !DILocation(line: 839, column: 31, scope: !2934)
!2969 = !DILocation(line: 839, column: 22, scope: !2934)
!2970 = !DILocation(line: 839, column: 38, scope: !2934)
!2971 = !DILocation(line: 839, column: 48, scope: !2934)
!2972 = !DILocation(line: 839, column: 47, scope: !2934)
!2973 = !DILocation(line: 839, column: 13, scope: !2934)
!2974 = !DILocation(line: 839, column: 20, scope: !2934)
!2975 = !DILocation(line: 840, column: 13, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2934, file: !1, line: 840, column: 13)
!2977 = !DILocation(line: 840, column: 24, scope: !2976)
!2978 = !DILocation(line: 840, column: 30, scope: !2976)
!2979 = !DILocation(line: 840, column: 34, scope: !2976)
!2980 = !DILocation(line: 840, column: 13, scope: !2934)
!2981 = !DILocation(line: 845, column: 46, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2976, file: !1, line: 841, column: 11)
!2983 = !DILocation(line: 845, column: 56, scope: !2982)
!2984 = !DILocation(line: 845, column: 59, scope: !2982)
!2985 = !DILocation(line: 845, column: 65, scope: !2982)
!2986 = !DILocation(line: 845, column: 34, scope: !2982)
!2987 = !DILocation(line: 845, column: 13, scope: !2982)
!2988 = !DILocation(line: 845, column: 24, scope: !2982)
!2989 = !DILocation(line: 845, column: 30, scope: !2982)
!2990 = !DILocation(line: 845, column: 33, scope: !2982)
!2991 = !DILocation(line: 846, column: 17, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2982, file: !1, line: 846, column: 17)
!2993 = !DILocation(line: 846, column: 28, scope: !2992)
!2994 = !DILocation(line: 846, column: 34, scope: !2992)
!2995 = !DILocation(line: 846, column: 38, scope: !2992)
!2996 = !DILocation(line: 846, column: 17, scope: !2982)
!2997 = !DILocation(line: 848, column: 45, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2992, file: !1, line: 847, column: 15)
!2999 = !DILocation(line: 850, column: 19, scope: !2998)
!3000 = !DILocation(line: 850, column: 26, scope: !2998)
!3001 = !DILocation(line: 848, column: 24, scope: !2998)
!3002 = !DILocation(line: 851, column: 17, scope: !2998)
!3003 = !DILocation(line: 853, column: 17, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !2982, file: !1, line: 853, column: 17)
!3005 = !DILocation(line: 853, column: 23, scope: !3004)
!3006 = !DILocation(line: 853, column: 17, scope: !2982)
!3007 = !DILocation(line: 854, column: 15, scope: !3004)
!3008 = !DILocation(line: 854, column: 26, scope: !3004)
!3009 = !DILocation(line: 854, column: 32, scope: !3004)
!3010 = !DILocation(line: 855, column: 11, scope: !2982)
!3011 = !DILocation(line: 859, column: 19, scope: !2934)
!3012 = !DILocation(line: 859, column: 30, scope: !2934)
!3013 = !DILocation(line: 859, column: 36, scope: !2934)
!3014 = !DILocation(line: 859, column: 18, scope: !2934)
!3015 = !DILocation(line: 860, column: 39, scope: !2934)
!3016 = !DILocation(line: 860, column: 47, scope: !2934)
!3017 = !DILocation(line: 860, column: 42, scope: !2934)
!3018 = !DILocation(line: 860, column: 32, scope: !2934)
!3019 = !DILocation(line: 860, column: 31, scope: !2934)
!3020 = !DILocation(line: 860, column: 19, scope: !2934)
!3021 = !DILocation(line: 860, column: 15, scope: !2934)
!3022 = !DILocation(line: 860, column: 18, scope: !2934)
!3023 = !DILocation(line: 861, column: 41, scope: !2934)
!3024 = !DILocation(line: 861, column: 51, scope: !2934)
!3025 = !DILocation(line: 861, column: 46, scope: !2934)
!3026 = !DILocation(line: 861, column: 34, scope: !2934)
!3027 = !DILocation(line: 861, column: 33, scope: !2934)
!3028 = !DILocation(line: 861, column: 21, scope: !2934)
!3029 = !DILocation(line: 861, column: 15, scope: !2934)
!3030 = !DILocation(line: 861, column: 20, scope: !2934)
!3031 = !DILocation(line: 862, column: 40, scope: !2934)
!3032 = !DILocation(line: 862, column: 49, scope: !2934)
!3033 = !DILocation(line: 862, column: 44, scope: !2934)
!3034 = !DILocation(line: 862, column: 33, scope: !2934)
!3035 = !DILocation(line: 862, column: 32, scope: !2934)
!3036 = !DILocation(line: 862, column: 20, scope: !2934)
!3037 = !DILocation(line: 862, column: 15, scope: !2934)
!3038 = !DILocation(line: 862, column: 19, scope: !2934)
!3039 = !DILocation(line: 863, column: 13, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !2934, file: !1, line: 863, column: 13)
!3041 = !DILocation(line: 863, column: 24, scope: !3040)
!3042 = !DILocation(line: 863, column: 40, scope: !3040)
!3043 = !DILocation(line: 863, column: 13, scope: !2934)
!3044 = !DILocation(line: 864, column: 45, scope: !3040)
!3045 = !DILocation(line: 864, column: 57, scope: !3040)
!3046 = !DILocation(line: 864, column: 52, scope: !3040)
!3047 = !DILocation(line: 864, column: 38, scope: !3040)
!3048 = !DILocation(line: 864, column: 37, scope: !3040)
!3049 = !DILocation(line: 864, column: 25, scope: !3040)
!3050 = !DILocation(line: 864, column: 17, scope: !3040)
!3051 = !DILocation(line: 864, column: 24, scope: !3040)
!3052 = !DILocation(line: 864, column: 11, scope: !3040)
!3053 = !DILocation(line: 865, column: 36, scope: !2934)
!3054 = !DILocation(line: 865, column: 63, scope: !2934)
!3055 = !DILocation(line: 865, column: 73, scope: !2934)
!3056 = !DILocation(line: 865, column: 66, scope: !2934)
!3057 = !DILocation(line: 866, column: 17, scope: !2934)
!3058 = !DILocation(line: 866, column: 29, scope: !2934)
!3059 = !DILocation(line: 866, column: 22, scope: !2934)
!3060 = !DILocation(line: 865, column: 76, scope: !2934)
!3061 = !DILocation(line: 866, column: 41, scope: !2934)
!3062 = !DILocation(line: 866, column: 52, scope: !2934)
!3063 = !DILocation(line: 866, column: 45, scope: !2934)
!3064 = !DILocation(line: 866, column: 34, scope: !2934)
!3065 = !DILocation(line: 867, column: 17, scope: !2934)
!3066 = !DILocation(line: 867, column: 31, scope: !2934)
!3067 = !DILocation(line: 867, column: 24, scope: !2934)
!3068 = !DILocation(line: 866, column: 56, scope: !2934)
!3069 = !DILocation(line: 865, column: 47, scope: !2934)
!3070 = !DILocation(line: 865, column: 42, scope: !2934)
!3071 = !DILocation(line: 865, column: 41, scope: !2934)
!3072 = !DILocation(line: 865, column: 9, scope: !2934)
!3073 = !DILocation(line: 865, column: 20, scope: !2934)
!3074 = !DILocation(line: 865, column: 34, scope: !2934)
!3075 = !DILocation(line: 868, column: 42, scope: !2934)
!3076 = !DILocation(line: 868, column: 53, scope: !2934)
!3077 = !DILocation(line: 868, column: 9, scope: !2934)
!3078 = !DILocation(line: 868, column: 20, scope: !2934)
!3079 = !DILocation(line: 868, column: 26, scope: !2934)
!3080 = !DILocation(line: 868, column: 40, scope: !2934)
!3081 = !DILocation(line: 869, column: 14, scope: !2934)
!3082 = !DILocation(line: 870, column: 7, scope: !2934)
!3083 = !DILocation(line: 832, column: 49, scope: !2930)
!3084 = !DILocation(line: 832, column: 7, scope: !2930)
!3085 = distinct !{!3085, !2932, !3086}
!3086 = !DILocation(line: 870, column: 7, scope: !2927)
!3087 = !DILocation(line: 874, column: 33, scope: !2892)
!3088 = !DILocation(line: 874, column: 7, scope: !2892)
!3089 = !DILocation(line: 874, column: 18, scope: !2892)
!3090 = !DILocation(line: 874, column: 31, scope: !2892)
!3091 = !DILocation(line: 875, column: 35, scope: !2892)
!3092 = !DILocation(line: 875, column: 40, scope: !2892)
!3093 = !DILocation(line: 875, column: 71, scope: !2892)
!3094 = !DILocation(line: 875, column: 54, scope: !2892)
!3095 = !DILocation(line: 875, column: 53, scope: !2892)
!3096 = !DILocation(line: 875, column: 7, scope: !2892)
!3097 = !DILocation(line: 875, column: 18, scope: !2892)
!3098 = !DILocation(line: 875, column: 30, scope: !2892)
!3099 = !DILocation(line: 875, column: 33, scope: !2892)
!3100 = !DILocation(line: 876, column: 37, scope: !2892)
!3101 = !DILocation(line: 876, column: 42, scope: !2892)
!3102 = !DILocation(line: 876, column: 73, scope: !2892)
!3103 = !DILocation(line: 876, column: 56, scope: !2892)
!3104 = !DILocation(line: 876, column: 55, scope: !2892)
!3105 = !DILocation(line: 876, column: 7, scope: !2892)
!3106 = !DILocation(line: 876, column: 18, scope: !2892)
!3107 = !DILocation(line: 876, column: 30, scope: !2892)
!3108 = !DILocation(line: 876, column: 35, scope: !2892)
!3109 = !DILocation(line: 877, column: 36, scope: !2892)
!3110 = !DILocation(line: 877, column: 41, scope: !2892)
!3111 = !DILocation(line: 877, column: 72, scope: !2892)
!3112 = !DILocation(line: 877, column: 55, scope: !2892)
!3113 = !DILocation(line: 877, column: 54, scope: !2892)
!3114 = !DILocation(line: 877, column: 7, scope: !2892)
!3115 = !DILocation(line: 877, column: 18, scope: !2892)
!3116 = !DILocation(line: 877, column: 30, scope: !2892)
!3117 = !DILocation(line: 877, column: 34, scope: !2892)
!3118 = !DILocation(line: 878, column: 11, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !2892, file: !1, line: 878, column: 11)
!3120 = !DILocation(line: 878, column: 22, scope: !3119)
!3121 = !DILocation(line: 878, column: 38, scope: !3119)
!3122 = !DILocation(line: 878, column: 11, scope: !2892)
!3123 = !DILocation(line: 879, column: 41, scope: !3119)
!3124 = !DILocation(line: 879, column: 46, scope: !3119)
!3125 = !DILocation(line: 880, column: 28, scope: !3119)
!3126 = !DILocation(line: 880, column: 11, scope: !3119)
!3127 = !DILocation(line: 879, column: 59, scope: !3119)
!3128 = !DILocation(line: 879, column: 9, scope: !3119)
!3129 = !DILocation(line: 879, column: 20, scope: !3119)
!3130 = !DILocation(line: 879, column: 32, scope: !3119)
!3131 = !DILocation(line: 879, column: 39, scope: !3119)
!3132 = !DILocation(line: 881, column: 10, scope: !2892)
!3133 = !DILocation(line: 881, column: 8, scope: !2892)
!3134 = !DILocation(line: 882, column: 5, scope: !2892)
!3135 = !DILocation(line: 819, column: 58, scope: !2885)
!3136 = !DILocation(line: 819, column: 46, scope: !2885)
!3137 = !DILocation(line: 819, column: 5, scope: !2885)
!3138 = distinct !{!3138, !2889, !3139}
!3139 = !DILocation(line: 882, column: 5, scope: !2882)
!3140 = !DILocation(line: 883, column: 9, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !2850, file: !1, line: 883, column: 9)
!3142 = !DILocation(line: 883, column: 20, scope: !3141)
!3143 = !DILocation(line: 883, column: 29, scope: !3141)
!3144 = !DILocation(line: 883, column: 40, scope: !3141)
!3145 = !DILocation(line: 883, column: 27, scope: !3141)
!3146 = !DILocation(line: 883, column: 9, scope: !2850)
!3147 = !DILocation(line: 885, column: 26, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !3141, file: !1, line: 884, column: 7)
!3149 = !DILocation(line: 885, column: 32, scope: !3148)
!3150 = !DILocation(line: 885, column: 42, scope: !3148)
!3151 = !DILocation(line: 885, column: 53, scope: !3148)
!3152 = !DILocation(line: 885, column: 9, scope: !3148)
!3153 = !DILocation(line: 886, column: 9, scope: !3148)
!3154 = !DILocation(line: 888, column: 30, scope: !2850)
!3155 = !DILocation(line: 888, column: 72, scope: !2850)
!3156 = !DILocation(line: 889, column: 7, scope: !2850)
!3157 = !DILocation(line: 889, column: 14, scope: !2850)
!3158 = !DILocation(line: 888, column: 13, scope: !2850)
!3159 = !DILocation(line: 888, column: 12, scope: !2850)
!3160 = !DILocation(line: 890, column: 9, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !2850, file: !1, line: 890, column: 9)
!3162 = !DILocation(line: 890, column: 17, scope: !3161)
!3163 = !DILocation(line: 890, column: 9, scope: !2850)
!3164 = !DILocation(line: 891, column: 7, scope: !3161)
!3165 = !DILocation(line: 892, column: 3, scope: !2850)
!3166 = !DILocation(line: 800, column: 41, scope: !2844)
!3167 = !DILocation(line: 800, column: 3, scope: !2844)
!3168 = distinct !{!3168, !2848, !3169}
!3169 = !DILocation(line: 892, column: 3, scope: !2841)
!3170 = !DILocation(line: 893, column: 9, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !2762, file: !1, line: 893, column: 3)
!3172 = !DILocation(line: 893, column: 8, scope: !3171)
!3173 = !DILocation(line: 893, column: 13, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3171, file: !1, line: 893, column: 3)
!3175 = !DILocation(line: 893, column: 27, scope: !3174)
!3176 = !DILocation(line: 893, column: 34, scope: !3174)
!3177 = !DILocation(line: 893, column: 15, scope: !3174)
!3178 = !DILocation(line: 893, column: 3, scope: !3171)
!3179 = !DILocalVariable(name: "p", scope: !3180, file: !1, line: 896, type: !1466)
!3180 = distinct !DILexicalBlock(scope: !3174, file: !1, line: 894, column: 3)
!3181 = !DILocation(line: 896, column: 17, scope: !3180)
!3182 = !DILocalVariable(name: "x", scope: !3180, file: !1, line: 899, type: !640)
!3183 = !DILocation(line: 899, column: 7, scope: !3180)
!3184 = !DILocation(line: 901, column: 33, scope: !3180)
!3185 = !DILocation(line: 901, column: 46, scope: !3180)
!3186 = !DILocation(line: 901, column: 48, scope: !3180)
!3187 = !DILocation(line: 901, column: 55, scope: !3180)
!3188 = !DILocation(line: 901, column: 65, scope: !3180)
!3189 = !DILocation(line: 901, column: 7, scope: !3180)
!3190 = !DILocation(line: 901, column: 6, scope: !3180)
!3191 = !DILocation(line: 902, column: 9, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3180, file: !1, line: 902, column: 9)
!3193 = !DILocation(line: 902, column: 11, scope: !3192)
!3194 = !DILocation(line: 902, column: 9, scope: !3180)
!3195 = !DILocation(line: 903, column: 7, scope: !3192)
!3196 = !DILocation(line: 904, column: 9, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3180, file: !1, line: 904, column: 9)
!3198 = !DILocation(line: 904, column: 20, scope: !3197)
!3199 = !DILocation(line: 904, column: 26, scope: !3197)
!3200 = !DILocation(line: 904, column: 9, scope: !3180)
!3201 = !DILocation(line: 909, column: 20, scope: !3202)
!3202 = distinct !DILexicalBlock(scope: !3197, file: !1, line: 905, column: 7)
!3203 = !DILocation(line: 909, column: 26, scope: !3202)
!3204 = !DILocation(line: 909, column: 36, scope: !3202)
!3205 = !DILocation(line: 909, column: 47, scope: !3202)
!3206 = !DILocation(line: 909, column: 9, scope: !3202)
!3207 = !DILocation(line: 910, column: 9, scope: !3202)
!3208 = !DILocation(line: 910, column: 20, scope: !3202)
!3209 = !DILocation(line: 910, column: 25, scope: !3202)
!3210 = !DILocation(line: 911, column: 7, scope: !3202)
!3211 = !DILocation(line: 912, column: 11, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3180, file: !1, line: 912, column: 5)
!3213 = !DILocation(line: 912, column: 10, scope: !3212)
!3214 = !DILocation(line: 912, column: 15, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3212, file: !1, line: 912, column: 5)
!3216 = !DILocation(line: 912, column: 29, scope: !3215)
!3217 = !DILocation(line: 912, column: 36, scope: !3215)
!3218 = !DILocation(line: 912, column: 17, scope: !3215)
!3219 = !DILocation(line: 912, column: 5, scope: !3212)
!3220 = !DILocation(line: 917, column: 17, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3222, file: !1, line: 917, column: 7)
!3222 = distinct !DILexicalBlock(scope: !3215, file: !1, line: 913, column: 5)
!3223 = !DILocation(line: 917, column: 12, scope: !3221)
!3224 = !DILocation(line: 917, column: 22, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3221, file: !1, line: 917, column: 7)
!3226 = !DILocation(line: 917, column: 34, scope: !3225)
!3227 = !DILocation(line: 917, column: 23, scope: !3225)
!3228 = !DILocation(line: 917, column: 53, scope: !3225)
!3229 = !DILocation(line: 917, column: 60, scope: !3225)
!3230 = !DILocation(line: 917, column: 41, scope: !3225)
!3231 = !DILocation(line: 917, column: 7, scope: !3221)
!3232 = !DILocation(line: 918, column: 25, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3225, file: !1, line: 918, column: 13)
!3234 = !DILocation(line: 918, column: 31, scope: !3233)
!3235 = !DILocation(line: 918, column: 33, scope: !3233)
!3236 = !DILocation(line: 918, column: 35, scope: !3233)
!3237 = !DILocation(line: 918, column: 34, scope: !3233)
!3238 = !DILocation(line: 918, column: 13, scope: !3233)
!3239 = !DILocation(line: 918, column: 42, scope: !3233)
!3240 = !DILocation(line: 918, column: 13, scope: !3225)
!3241 = !DILocation(line: 919, column: 11, scope: !3233)
!3242 = !DILocation(line: 918, column: 45, scope: !3233)
!3243 = !DILocation(line: 917, column: 74, scope: !3225)
!3244 = !DILocation(line: 917, column: 7, scope: !3225)
!3245 = distinct !{!3245, !3231, !3246}
!3246 = !DILocation(line: 919, column: 11, scope: !3221)
!3247 = !DILocation(line: 920, column: 27, scope: !3222)
!3248 = !DILocation(line: 920, column: 37, scope: !3222)
!3249 = !DILocation(line: 920, column: 7, scope: !3222)
!3250 = !DILocation(line: 921, column: 12, scope: !3222)
!3251 = !DILocation(line: 922, column: 13, scope: !3222)
!3252 = !DILocation(line: 923, column: 11, scope: !3222)
!3253 = !DILocation(line: 924, column: 17, scope: !3222)
!3254 = !DILocation(line: 924, column: 28, scope: !3222)
!3255 = !DILocation(line: 924, column: 16, scope: !3222)
!3256 = !DILocation(line: 925, column: 17, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3222, file: !1, line: 925, column: 7)
!3258 = !DILocation(line: 925, column: 12, scope: !3257)
!3259 = !DILocation(line: 925, column: 21, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3257, file: !1, line: 925, column: 7)
!3261 = !DILocation(line: 925, column: 30, scope: !3260)
!3262 = !DILocation(line: 925, column: 41, scope: !3260)
!3263 = !DILocation(line: 925, column: 27, scope: !3260)
!3264 = !DILocation(line: 925, column: 7, scope: !3257)
!3265 = !DILocation(line: 927, column: 15, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3260, file: !1, line: 926, column: 7)
!3267 = !DILocation(line: 928, column: 26, scope: !3266)
!3268 = !DILocation(line: 928, column: 43, scope: !3266)
!3269 = !DILocation(line: 928, column: 12, scope: !3266)
!3270 = !DILocation(line: 928, column: 11, scope: !3266)
!3271 = !DILocation(line: 929, column: 19, scope: !3266)
!3272 = !DILocation(line: 929, column: 22, scope: !3266)
!3273 = !DILocation(line: 929, column: 27, scope: !3266)
!3274 = !DILocation(line: 929, column: 18, scope: !3266)
!3275 = !DILocation(line: 929, column: 34, scope: !3266)
!3276 = !DILocation(line: 929, column: 44, scope: !3266)
!3277 = !DILocation(line: 929, column: 43, scope: !3266)
!3278 = !DILocation(line: 929, column: 13, scope: !3266)
!3279 = !DILocation(line: 929, column: 16, scope: !3266)
!3280 = !DILocation(line: 930, column: 21, scope: !3266)
!3281 = !DILocation(line: 930, column: 24, scope: !3266)
!3282 = !DILocation(line: 930, column: 29, scope: !3266)
!3283 = !DILocation(line: 930, column: 20, scope: !3266)
!3284 = !DILocation(line: 930, column: 36, scope: !3266)
!3285 = !DILocation(line: 930, column: 46, scope: !3266)
!3286 = !DILocation(line: 930, column: 45, scope: !3266)
!3287 = !DILocation(line: 930, column: 13, scope: !3266)
!3288 = !DILocation(line: 930, column: 18, scope: !3266)
!3289 = !DILocation(line: 931, column: 20, scope: !3266)
!3290 = !DILocation(line: 931, column: 23, scope: !3266)
!3291 = !DILocation(line: 931, column: 28, scope: !3266)
!3292 = !DILocation(line: 931, column: 19, scope: !3266)
!3293 = !DILocation(line: 931, column: 35, scope: !3266)
!3294 = !DILocation(line: 931, column: 45, scope: !3266)
!3295 = !DILocation(line: 931, column: 44, scope: !3266)
!3296 = !DILocation(line: 931, column: 13, scope: !3266)
!3297 = !DILocation(line: 931, column: 17, scope: !3266)
!3298 = !DILocation(line: 932, column: 23, scope: !3266)
!3299 = !DILocation(line: 932, column: 26, scope: !3266)
!3300 = !DILocation(line: 932, column: 31, scope: !3266)
!3301 = !DILocation(line: 932, column: 22, scope: !3266)
!3302 = !DILocation(line: 932, column: 38, scope: !3266)
!3303 = !DILocation(line: 932, column: 48, scope: !3266)
!3304 = !DILocation(line: 932, column: 47, scope: !3266)
!3305 = !DILocation(line: 932, column: 13, scope: !3266)
!3306 = !DILocation(line: 932, column: 20, scope: !3266)
!3307 = !DILocation(line: 933, column: 13, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3266, file: !1, line: 933, column: 13)
!3309 = !DILocation(line: 933, column: 24, scope: !3308)
!3310 = !DILocation(line: 933, column: 30, scope: !3308)
!3311 = !DILocation(line: 933, column: 34, scope: !3308)
!3312 = !DILocation(line: 933, column: 13, scope: !3266)
!3313 = !DILocation(line: 938, column: 46, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3308, file: !1, line: 934, column: 11)
!3315 = !DILocation(line: 938, column: 56, scope: !3314)
!3316 = !DILocation(line: 938, column: 59, scope: !3314)
!3317 = !DILocation(line: 938, column: 65, scope: !3314)
!3318 = !DILocation(line: 938, column: 34, scope: !3314)
!3319 = !DILocation(line: 938, column: 13, scope: !3314)
!3320 = !DILocation(line: 938, column: 24, scope: !3314)
!3321 = !DILocation(line: 938, column: 30, scope: !3314)
!3322 = !DILocation(line: 938, column: 33, scope: !3314)
!3323 = !DILocation(line: 939, column: 17, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3314, file: !1, line: 939, column: 17)
!3325 = !DILocation(line: 939, column: 28, scope: !3324)
!3326 = !DILocation(line: 939, column: 34, scope: !3324)
!3327 = !DILocation(line: 939, column: 38, scope: !3324)
!3328 = !DILocation(line: 939, column: 17, scope: !3314)
!3329 = !DILocation(line: 941, column: 45, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3324, file: !1, line: 940, column: 15)
!3331 = !DILocation(line: 943, column: 19, scope: !3330)
!3332 = !DILocation(line: 943, column: 26, scope: !3330)
!3333 = !DILocation(line: 941, column: 24, scope: !3330)
!3334 = !DILocation(line: 944, column: 19, scope: !3330)
!3335 = !DILocation(line: 946, column: 17, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3314, file: !1, line: 946, column: 17)
!3337 = !DILocation(line: 946, column: 26, scope: !3336)
!3338 = !DILocation(line: 946, column: 37, scope: !3336)
!3339 = !DILocation(line: 946, column: 23, scope: !3336)
!3340 = !DILocation(line: 946, column: 17, scope: !3314)
!3341 = !DILocation(line: 947, column: 15, scope: !3336)
!3342 = !DILocation(line: 947, column: 26, scope: !3336)
!3343 = !DILocation(line: 947, column: 32, scope: !3336)
!3344 = !DILocation(line: 948, column: 11, scope: !3314)
!3345 = !DILocation(line: 952, column: 19, scope: !3266)
!3346 = !DILocation(line: 952, column: 30, scope: !3266)
!3347 = !DILocation(line: 952, column: 36, scope: !3266)
!3348 = !DILocation(line: 952, column: 18, scope: !3266)
!3349 = !DILocation(line: 953, column: 39, scope: !3266)
!3350 = !DILocation(line: 953, column: 47, scope: !3266)
!3351 = !DILocation(line: 953, column: 42, scope: !3266)
!3352 = !DILocation(line: 953, column: 32, scope: !3266)
!3353 = !DILocation(line: 953, column: 31, scope: !3266)
!3354 = !DILocation(line: 953, column: 19, scope: !3266)
!3355 = !DILocation(line: 953, column: 15, scope: !3266)
!3356 = !DILocation(line: 953, column: 18, scope: !3266)
!3357 = !DILocation(line: 954, column: 41, scope: !3266)
!3358 = !DILocation(line: 954, column: 51, scope: !3266)
!3359 = !DILocation(line: 954, column: 46, scope: !3266)
!3360 = !DILocation(line: 954, column: 34, scope: !3266)
!3361 = !DILocation(line: 954, column: 33, scope: !3266)
!3362 = !DILocation(line: 954, column: 21, scope: !3266)
!3363 = !DILocation(line: 954, column: 15, scope: !3266)
!3364 = !DILocation(line: 954, column: 20, scope: !3266)
!3365 = !DILocation(line: 955, column: 40, scope: !3266)
!3366 = !DILocation(line: 955, column: 49, scope: !3266)
!3367 = !DILocation(line: 955, column: 44, scope: !3266)
!3368 = !DILocation(line: 955, column: 33, scope: !3266)
!3369 = !DILocation(line: 955, column: 32, scope: !3266)
!3370 = !DILocation(line: 955, column: 20, scope: !3266)
!3371 = !DILocation(line: 955, column: 15, scope: !3266)
!3372 = !DILocation(line: 955, column: 19, scope: !3266)
!3373 = !DILocation(line: 956, column: 13, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3266, file: !1, line: 956, column: 13)
!3375 = !DILocation(line: 956, column: 24, scope: !3374)
!3376 = !DILocation(line: 956, column: 40, scope: !3374)
!3377 = !DILocation(line: 956, column: 13, scope: !3266)
!3378 = !DILocation(line: 957, column: 45, scope: !3374)
!3379 = !DILocation(line: 957, column: 57, scope: !3374)
!3380 = !DILocation(line: 957, column: 52, scope: !3374)
!3381 = !DILocation(line: 957, column: 38, scope: !3374)
!3382 = !DILocation(line: 957, column: 37, scope: !3374)
!3383 = !DILocation(line: 957, column: 25, scope: !3374)
!3384 = !DILocation(line: 957, column: 17, scope: !3374)
!3385 = !DILocation(line: 957, column: 24, scope: !3374)
!3386 = !DILocation(line: 957, column: 11, scope: !3374)
!3387 = !DILocation(line: 958, column: 36, scope: !3266)
!3388 = !DILocation(line: 958, column: 63, scope: !3266)
!3389 = !DILocation(line: 958, column: 73, scope: !3266)
!3390 = !DILocation(line: 958, column: 66, scope: !3266)
!3391 = !DILocation(line: 959, column: 17, scope: !3266)
!3392 = !DILocation(line: 959, column: 29, scope: !3266)
!3393 = !DILocation(line: 959, column: 22, scope: !3266)
!3394 = !DILocation(line: 958, column: 76, scope: !3266)
!3395 = !DILocation(line: 959, column: 41, scope: !3266)
!3396 = !DILocation(line: 959, column: 52, scope: !3266)
!3397 = !DILocation(line: 959, column: 45, scope: !3266)
!3398 = !DILocation(line: 959, column: 34, scope: !3266)
!3399 = !DILocation(line: 960, column: 17, scope: !3266)
!3400 = !DILocation(line: 960, column: 31, scope: !3266)
!3401 = !DILocation(line: 960, column: 24, scope: !3266)
!3402 = !DILocation(line: 959, column: 56, scope: !3266)
!3403 = !DILocation(line: 958, column: 47, scope: !3266)
!3404 = !DILocation(line: 958, column: 42, scope: !3266)
!3405 = !DILocation(line: 958, column: 41, scope: !3266)
!3406 = !DILocation(line: 958, column: 9, scope: !3266)
!3407 = !DILocation(line: 958, column: 20, scope: !3266)
!3408 = !DILocation(line: 958, column: 34, scope: !3266)
!3409 = !DILocation(line: 961, column: 42, scope: !3266)
!3410 = !DILocation(line: 961, column: 53, scope: !3266)
!3411 = !DILocation(line: 961, column: 9, scope: !3266)
!3412 = !DILocation(line: 961, column: 20, scope: !3266)
!3413 = !DILocation(line: 961, column: 26, scope: !3266)
!3414 = !DILocation(line: 961, column: 40, scope: !3266)
!3415 = !DILocation(line: 962, column: 14, scope: !3266)
!3416 = !DILocation(line: 963, column: 7, scope: !3266)
!3417 = !DILocation(line: 925, column: 53, scope: !3260)
!3418 = !DILocation(line: 925, column: 7, scope: !3260)
!3419 = distinct !{!3419, !3264, !3420}
!3420 = !DILocation(line: 963, column: 7, scope: !3257)
!3421 = !DILocation(line: 967, column: 33, scope: !3222)
!3422 = !DILocation(line: 967, column: 7, scope: !3222)
!3423 = !DILocation(line: 967, column: 18, scope: !3222)
!3424 = !DILocation(line: 967, column: 31, scope: !3222)
!3425 = !DILocation(line: 968, column: 35, scope: !3222)
!3426 = !DILocation(line: 968, column: 40, scope: !3222)
!3427 = !DILocation(line: 968, column: 71, scope: !3222)
!3428 = !DILocation(line: 968, column: 54, scope: !3222)
!3429 = !DILocation(line: 968, column: 53, scope: !3222)
!3430 = !DILocation(line: 968, column: 7, scope: !3222)
!3431 = !DILocation(line: 968, column: 18, scope: !3222)
!3432 = !DILocation(line: 968, column: 30, scope: !3222)
!3433 = !DILocation(line: 968, column: 33, scope: !3222)
!3434 = !DILocation(line: 969, column: 37, scope: !3222)
!3435 = !DILocation(line: 969, column: 42, scope: !3222)
!3436 = !DILocation(line: 969, column: 73, scope: !3222)
!3437 = !DILocation(line: 969, column: 56, scope: !3222)
!3438 = !DILocation(line: 969, column: 55, scope: !3222)
!3439 = !DILocation(line: 969, column: 7, scope: !3222)
!3440 = !DILocation(line: 969, column: 18, scope: !3222)
!3441 = !DILocation(line: 969, column: 30, scope: !3222)
!3442 = !DILocation(line: 969, column: 35, scope: !3222)
!3443 = !DILocation(line: 970, column: 36, scope: !3222)
!3444 = !DILocation(line: 970, column: 41, scope: !3222)
!3445 = !DILocation(line: 970, column: 72, scope: !3222)
!3446 = !DILocation(line: 970, column: 55, scope: !3222)
!3447 = !DILocation(line: 970, column: 54, scope: !3222)
!3448 = !DILocation(line: 970, column: 7, scope: !3222)
!3449 = !DILocation(line: 970, column: 18, scope: !3222)
!3450 = !DILocation(line: 970, column: 30, scope: !3222)
!3451 = !DILocation(line: 970, column: 34, scope: !3222)
!3452 = !DILocation(line: 971, column: 11, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3222, file: !1, line: 971, column: 11)
!3454 = !DILocation(line: 971, column: 22, scope: !3453)
!3455 = !DILocation(line: 971, column: 38, scope: !3453)
!3456 = !DILocation(line: 971, column: 11, scope: !3222)
!3457 = !DILocation(line: 972, column: 41, scope: !3453)
!3458 = !DILocation(line: 972, column: 46, scope: !3453)
!3459 = !DILocation(line: 973, column: 17, scope: !3453)
!3460 = !DILocation(line: 972, column: 60, scope: !3453)
!3461 = !DILocation(line: 972, column: 59, scope: !3453)
!3462 = !DILocation(line: 972, column: 9, scope: !3453)
!3463 = !DILocation(line: 972, column: 20, scope: !3453)
!3464 = !DILocation(line: 972, column: 32, scope: !3453)
!3465 = !DILocation(line: 972, column: 39, scope: !3453)
!3466 = !DILocation(line: 974, column: 10, scope: !3222)
!3467 = !DILocation(line: 974, column: 8, scope: !3222)
!3468 = !DILocation(line: 975, column: 5, scope: !3222)
!3469 = !DILocation(line: 912, column: 58, scope: !3215)
!3470 = !DILocation(line: 912, column: 46, scope: !3215)
!3471 = !DILocation(line: 912, column: 5, scope: !3215)
!3472 = distinct !{!3472, !3219, !3473}
!3473 = !DILocation(line: 975, column: 5, scope: !3212)
!3474 = !DILocation(line: 976, column: 30, scope: !3180)
!3475 = !DILocation(line: 976, column: 72, scope: !3180)
!3476 = !DILocation(line: 977, column: 7, scope: !3180)
!3477 = !DILocation(line: 977, column: 14, scope: !3180)
!3478 = !DILocation(line: 976, column: 13, scope: !3180)
!3479 = !DILocation(line: 976, column: 12, scope: !3180)
!3480 = !DILocation(line: 978, column: 9, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3180, file: !1, line: 978, column: 9)
!3482 = !DILocation(line: 978, column: 17, scope: !3481)
!3483 = !DILocation(line: 978, column: 9, scope: !3180)
!3484 = !DILocation(line: 979, column: 7, scope: !3481)
!3485 = !DILocation(line: 980, column: 3, scope: !3180)
!3486 = !DILocation(line: 893, column: 41, scope: !3174)
!3487 = !DILocation(line: 893, column: 3, scope: !3174)
!3488 = distinct !{!3488, !3178, !3489}
!3489 = !DILocation(line: 980, column: 3, scope: !3171)
!3490 = !DILocation(line: 981, column: 31, scope: !2762)
!3491 = !DILocation(line: 981, column: 14, scope: !2762)
!3492 = !DILocation(line: 981, column: 13, scope: !2762)
!3493 = !DILocation(line: 982, column: 8, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !2762, file: !1, line: 982, column: 7)
!3495 = !DILocation(line: 982, column: 19, scope: !3494)
!3496 = !DILocation(line: 982, column: 34, scope: !3494)
!3497 = !DILocation(line: 982, column: 45, scope: !3494)
!3498 = !DILocation(line: 982, column: 69, scope: !3494)
!3499 = !DILocation(line: 983, column: 8, scope: !3494)
!3500 = !DILocation(line: 983, column: 19, scope: !3494)
!3501 = !DILocation(line: 983, column: 34, scope: !3494)
!3502 = !DILocation(line: 983, column: 45, scope: !3494)
!3503 = !DILocation(line: 982, column: 7, scope: !2762)
!3504 = !DILocation(line: 984, column: 47, scope: !3494)
!3505 = !DILocation(line: 984, column: 12, scope: !3494)
!3506 = !DILocation(line: 984, column: 5, scope: !3494)
!3507 = !DILocation(line: 985, column: 10, scope: !2762)
!3508 = !DILocation(line: 985, column: 24, scope: !2762)
!3509 = !DILocation(line: 985, column: 31, scope: !2762)
!3510 = !DILocation(line: 985, column: 12, scope: !2762)
!3511 = !DILocation(line: 985, column: 3, scope: !2762)
!3512 = distinct !DISubprogram(name: "ReduceImageColors", scope: !1, file: !1, line: 3074, type: !3513, scopeLine: 3075, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!3513 = !DISubroutineType(types: !3514)
!3514 = !{null, !854, !938}
!3515 = !DILocalVariable(name: "image", arg: 1, scope: !3512, file: !1, line: 3074, type: !854)
!3516 = !DILocation(line: 3074, column: 44, scope: !3512)
!3517 = !DILocalVariable(name: "cube_info", arg: 2, scope: !3512, file: !1, line: 3074, type: !938)
!3518 = !DILocation(line: 3074, column: 60, scope: !3512)
!3519 = !DILocalVariable(name: "proceed", scope: !3512, file: !1, line: 3079, type: !575)
!3520 = !DILocation(line: 3079, column: 5, scope: !3512)
!3521 = !DILocalVariable(name: "offset", scope: !3512, file: !1, line: 3082, type: !761)
!3522 = !DILocation(line: 3082, column: 5, scope: !3512)
!3523 = !DILocalVariable(name: "span", scope: !3512, file: !1, line: 3085, type: !570)
!3524 = !DILocation(line: 3085, column: 5, scope: !3512)
!3525 = !DILocation(line: 3087, column: 3, scope: !3512)
!3526 = !DILocation(line: 3087, column: 14, scope: !3512)
!3527 = !DILocation(line: 3087, column: 28, scope: !3512)
!3528 = !DILocation(line: 3088, column: 8, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3512, file: !1, line: 3088, column: 7)
!3530 = !DILocation(line: 3088, column: 19, scope: !3529)
!3531 = !DILocation(line: 3088, column: 28, scope: !3529)
!3532 = !DILocation(line: 3088, column: 39, scope: !3529)
!3533 = !DILocation(line: 3088, column: 26, scope: !3529)
!3534 = !DILocation(line: 3088, column: 55, scope: !3529)
!3535 = !DILocation(line: 3089, column: 8, scope: !3529)
!3536 = !DILocation(line: 3089, column: 19, scope: !3529)
!3537 = !DILocation(line: 3089, column: 25, scope: !3529)
!3538 = !DILocation(line: 3088, column: 7, scope: !3512)
!3539 = !DILocalVariable(name: "quantize_error", scope: !3540, file: !1, line: 3092, type: !1006)
!3540 = distinct !DILexicalBlock(scope: !3529, file: !1, line: 3090, column: 5)
!3541 = !DILocation(line: 3092, column: 10, scope: !3540)
!3542 = !DILocation(line: 3097, column: 62, scope: !3540)
!3543 = !DILocation(line: 3097, column: 73, scope: !3540)
!3544 = !DILocation(line: 3097, column: 41, scope: !3540)
!3545 = !DILocation(line: 3097, column: 22, scope: !3540)
!3546 = !DILocation(line: 3097, column: 21, scope: !3540)
!3547 = !DILocation(line: 3099, column: 11, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3540, file: !1, line: 3099, column: 11)
!3549 = !DILocation(line: 3099, column: 26, scope: !3548)
!3550 = !DILocation(line: 3099, column: 11, scope: !3540)
!3551 = !DILocation(line: 3101, column: 39, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3548, file: !1, line: 3100, column: 9)
!3553 = !DILocation(line: 3101, column: 45, scope: !3552)
!3554 = !DILocation(line: 3101, column: 55, scope: !3552)
!3555 = !DILocation(line: 3101, column: 66, scope: !3552)
!3556 = !DILocation(line: 3102, column: 13, scope: !3552)
!3557 = !DILocation(line: 3101, column: 18, scope: !3552)
!3558 = !DILocation(line: 3103, column: 17, scope: !3552)
!3559 = !DILocation(line: 3103, column: 32, scope: !3552)
!3560 = !DILocation(line: 3103, column: 43, scope: !3552)
!3561 = !DILocation(line: 3103, column: 11, scope: !3552)
!3562 = !DILocation(line: 3105, column: 37, scope: !3552)
!3563 = !DILocation(line: 3105, column: 62, scope: !3552)
!3564 = !DILocation(line: 3105, column: 73, scope: !3552)
!3565 = !DILocation(line: 3106, column: 18, scope: !3552)
!3566 = !DILocation(line: 3106, column: 29, scope: !3552)
!3567 = !DILocation(line: 3106, column: 43, scope: !3552)
!3568 = !DILocation(line: 3106, column: 16, scope: !3552)
!3569 = !DILocation(line: 3106, column: 46, scope: !3552)
!3570 = !DILocation(line: 3105, column: 78, scope: !3552)
!3571 = !DILocation(line: 3105, column: 52, scope: !3552)
!3572 = !DILocation(line: 3105, column: 11, scope: !3552)
!3573 = !DILocation(line: 3105, column: 22, scope: !3552)
!3574 = !DILocation(line: 3105, column: 36, scope: !3552)
!3575 = !DILocation(line: 3108, column: 13, scope: !3552)
!3576 = !DILocation(line: 3107, column: 45, scope: !3552)
!3577 = !DILocation(line: 3107, column: 26, scope: !3552)
!3578 = !DILocation(line: 3107, column: 25, scope: !3552)
!3579 = !DILocation(line: 3109, column: 9, scope: !3552)
!3580 = !DILocation(line: 3110, column: 3, scope: !3540)
!3581 = !DILocation(line: 3111, column: 13, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3512, file: !1, line: 3111, column: 3)
!3583 = !DILocation(line: 3111, column: 24, scope: !3582)
!3584 = !DILocation(line: 3111, column: 12, scope: !3582)
!3585 = !DILocation(line: 3111, column: 8, scope: !3582)
!3586 = !DILocation(line: 3111, column: 32, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3582, file: !1, line: 3111, column: 3)
!3588 = !DILocation(line: 3111, column: 43, scope: !3587)
!3589 = !DILocation(line: 3111, column: 52, scope: !3587)
!3590 = !DILocation(line: 3111, column: 63, scope: !3587)
!3591 = !DILocation(line: 3111, column: 50, scope: !3587)
!3592 = !DILocation(line: 3111, column: 3, scope: !3582)
!3593 = !DILocation(line: 3113, column: 34, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3587, file: !1, line: 3112, column: 3)
!3595 = !DILocation(line: 3113, column: 45, scope: !3594)
!3596 = !DILocation(line: 3113, column: 5, scope: !3594)
!3597 = !DILocation(line: 3113, column: 16, scope: !3594)
!3598 = !DILocation(line: 3113, column: 33, scope: !3594)
!3599 = !DILocation(line: 3114, column: 31, scope: !3594)
!3600 = !DILocation(line: 3114, column: 42, scope: !3594)
!3601 = !DILocation(line: 3114, column: 48, scope: !3594)
!3602 = !DILocation(line: 3114, column: 62, scope: !3594)
!3603 = !DILocation(line: 3114, column: 5, scope: !3594)
!3604 = !DILocation(line: 3114, column: 16, scope: !3594)
!3605 = !DILocation(line: 3114, column: 30, scope: !3594)
!3606 = !DILocation(line: 3115, column: 5, scope: !3594)
!3607 = !DILocation(line: 3115, column: 16, scope: !3594)
!3608 = !DILocation(line: 3115, column: 22, scope: !3594)
!3609 = !DILocation(line: 3116, column: 12, scope: !3594)
!3610 = !DILocation(line: 3116, column: 18, scope: !3594)
!3611 = !DILocation(line: 3116, column: 28, scope: !3594)
!3612 = !DILocation(line: 3116, column: 39, scope: !3594)
!3613 = !DILocation(line: 3116, column: 5, scope: !3594)
!3614 = !DILocation(line: 3117, column: 31, scope: !3594)
!3615 = !DILocation(line: 3117, column: 36, scope: !3594)
!3616 = !DILocation(line: 3117, column: 47, scope: !3594)
!3617 = !DILocation(line: 3117, column: 35, scope: !3594)
!3618 = !DILocation(line: 3117, column: 11, scope: !3594)
!3619 = !DILocation(line: 3118, column: 30, scope: !3594)
!3620 = !DILocation(line: 3118, column: 51, scope: !3594)
!3621 = !DILocation(line: 3118, column: 58, scope: !3594)
!3622 = !DILocation(line: 3119, column: 7, scope: !3594)
!3623 = !DILocation(line: 3119, column: 18, scope: !3594)
!3624 = !DILocation(line: 3118, column: 62, scope: !3594)
!3625 = !DILocation(line: 3119, column: 32, scope: !3594)
!3626 = !DILocation(line: 3118, column: 13, scope: !3594)
!3627 = !DILocation(line: 3118, column: 12, scope: !3594)
!3628 = !DILocation(line: 3120, column: 9, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3594, file: !1, line: 3120, column: 9)
!3630 = !DILocation(line: 3120, column: 17, scope: !3629)
!3631 = !DILocation(line: 3120, column: 9, scope: !3594)
!3632 = !DILocation(line: 3121, column: 7, scope: !3629)
!3633 = !DILocation(line: 3111, column: 3, scope: !3587)
!3634 = distinct !{!3634, !3592, !3635}
!3635 = !DILocation(line: 3122, column: 3, scope: !3582)
!3636 = !DILocation(line: 3123, column: 1, scope: !3512)
!3637 = distinct !DISubprogram(name: "AssignImageColors", scope: !1, file: !1, line: 498, type: !3638, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!3638 = !DISubroutineType(types: !3639)
!3639 = !{!575, !652, !938}
!3640 = !DILocalVariable(name: "image", arg: 1, scope: !3637, file: !1, line: 498, type: !652)
!3641 = !DILocation(line: 498, column: 51, scope: !3637)
!3642 = !DILocalVariable(name: "cube_info", arg: 2, scope: !3637, file: !1, line: 498, type: !938)
!3643 = !DILocation(line: 498, column: 67, scope: !3637)
!3644 = !DILocalVariable(name: "y", scope: !3637, file: !1, line: 503, type: !640)
!3645 = !DILocation(line: 503, column: 5, scope: !3637)
!3646 = !DILocation(line: 508, column: 8, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3637, file: !1, line: 508, column: 7)
!3648 = !DILocation(line: 508, column: 19, scope: !3647)
!3649 = !DILocation(line: 508, column: 34, scope: !3647)
!3650 = !DILocation(line: 508, column: 45, scope: !3647)
!3651 = !DILocation(line: 508, column: 69, scope: !3647)
!3652 = !DILocation(line: 509, column: 8, scope: !3647)
!3653 = !DILocation(line: 509, column: 19, scope: !3647)
!3654 = !DILocation(line: 509, column: 34, scope: !3647)
!3655 = !DILocation(line: 509, column: 45, scope: !3647)
!3656 = !DILocation(line: 508, column: 7, scope: !3637)
!3657 = !DILocation(line: 510, column: 47, scope: !3647)
!3658 = !DILocation(line: 511, column: 7, scope: !3647)
!3659 = !DILocation(line: 511, column: 18, scope: !3647)
!3660 = !DILocation(line: 511, column: 33, scope: !3647)
!3661 = !DILocation(line: 510, column: 12, scope: !3647)
!3662 = !DILocation(line: 510, column: 5, scope: !3647)
!3663 = !DILocation(line: 513, column: 36, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3647, file: !1, line: 513, column: 9)
!3665 = !DILocation(line: 513, column: 43, scope: !3664)
!3666 = !DILocation(line: 513, column: 9, scope: !3664)
!3667 = !DILocation(line: 513, column: 55, scope: !3664)
!3668 = !DILocation(line: 513, column: 9, scope: !3647)
!3669 = !DILocation(line: 514, column: 49, scope: !3664)
!3670 = !DILocation(line: 514, column: 14, scope: !3664)
!3671 = !DILocation(line: 514, column: 7, scope: !3664)
!3672 = !DILocation(line: 515, column: 28, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3637, file: !1, line: 515, column: 7)
!3674 = !DILocation(line: 515, column: 34, scope: !3673)
!3675 = !DILocation(line: 515, column: 45, scope: !3673)
!3676 = !DILocation(line: 515, column: 7, scope: !3673)
!3677 = !DILocation(line: 515, column: 53, scope: !3673)
!3678 = !DILocation(line: 515, column: 7, scope: !3637)
!3679 = !DILocation(line: 516, column: 5, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3681, file: !1, line: 516, column: 5)
!3681 = distinct !DILexicalBlock(scope: !3673, file: !1, line: 516, column: 5)
!3682 = !DILocation(line: 516, column: 5, scope: !3681)
!3683 = !DILocation(line: 518, column: 3, scope: !3637)
!3684 = !DILocation(line: 518, column: 10, scope: !3637)
!3685 = !DILocation(line: 518, column: 16, scope: !3637)
!3686 = !DILocation(line: 519, column: 3, scope: !3637)
!3687 = !DILocation(line: 519, column: 14, scope: !3637)
!3688 = !DILocation(line: 519, column: 32, scope: !3637)
!3689 = !DILocation(line: 520, column: 3, scope: !3637)
!3690 = !DILocation(line: 520, column: 14, scope: !3637)
!3691 = !DILocation(line: 520, column: 31, scope: !3637)
!3692 = !DILocation(line: 521, column: 30, scope: !3637)
!3693 = !DILocation(line: 521, column: 36, scope: !3637)
!3694 = !DILocation(line: 521, column: 46, scope: !3637)
!3695 = !DILocation(line: 521, column: 57, scope: !3637)
!3696 = !DILocation(line: 521, column: 10, scope: !3637)
!3697 = !DILocation(line: 525, column: 8, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3637, file: !1, line: 525, column: 7)
!3699 = !DILocation(line: 525, column: 19, scope: !3698)
!3700 = !DILocation(line: 525, column: 34, scope: !3698)
!3701 = !DILocation(line: 525, column: 41, scope: !3698)
!3702 = !DILocation(line: 525, column: 57, scope: !3698)
!3703 = !DILocation(line: 526, column: 8, scope: !3698)
!3704 = !DILocation(line: 526, column: 19, scope: !3698)
!3705 = !DILocation(line: 526, column: 34, scope: !3698)
!3706 = !DILocation(line: 526, column: 48, scope: !3698)
!3707 = !DILocation(line: 525, column: 7, scope: !3637)
!3708 = !DILocation(line: 527, column: 24, scope: !3698)
!3709 = !DILocation(line: 527, column: 30, scope: !3698)
!3710 = !DILocation(line: 527, column: 12, scope: !3698)
!3711 = !DILocation(line: 527, column: 5, scope: !3698)
!3712 = !DILocalVariable(name: "image_view", scope: !3713, file: !1, line: 531, type: !1382)
!3713 = distinct !DILexicalBlock(scope: !3698, file: !1, line: 529, column: 5)
!3714 = !DILocation(line: 531, column: 10, scope: !3713)
!3715 = !DILocalVariable(name: "exception", scope: !3713, file: !1, line: 534, type: !1387)
!3716 = !DILocation(line: 534, column: 10, scope: !3713)
!3717 = !DILocalVariable(name: "status", scope: !3713, file: !1, line: 537, type: !575)
!3718 = !DILocation(line: 537, column: 9, scope: !3713)
!3719 = !DILocation(line: 539, column: 13, scope: !3713)
!3720 = !DILocation(line: 540, column: 19, scope: !3713)
!3721 = !DILocation(line: 540, column: 26, scope: !3713)
!3722 = !DILocation(line: 540, column: 16, scope: !3713)
!3723 = !DILocation(line: 541, column: 44, scope: !3713)
!3724 = !DILocation(line: 541, column: 50, scope: !3713)
!3725 = !DILocation(line: 541, column: 18, scope: !3713)
!3726 = !DILocation(line: 541, column: 17, scope: !3713)
!3727 = !DILocation(line: 546, column: 13, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3713, file: !1, line: 546, column: 7)
!3729 = !DILocation(line: 546, column: 12, scope: !3728)
!3730 = !DILocation(line: 546, column: 17, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3728, file: !1, line: 546, column: 7)
!3732 = !DILocation(line: 546, column: 31, scope: !3731)
!3733 = !DILocation(line: 546, column: 38, scope: !3731)
!3734 = !DILocation(line: 546, column: 19, scope: !3731)
!3735 = !DILocation(line: 546, column: 7, scope: !3728)
!3736 = !DILocalVariable(name: "cube", scope: !3737, file: !1, line: 549, type: !939)
!3737 = distinct !DILexicalBlock(scope: !3731, file: !1, line: 547, column: 7)
!3738 = !DILocation(line: 549, column: 11, scope: !3737)
!3739 = !DILocalVariable(name: "indexes", scope: !3737, file: !1, line: 552, type: !1773)
!3740 = !DILocation(line: 552, column: 21, scope: !3737)
!3741 = !DILocalVariable(name: "q", scope: !3737, file: !1, line: 555, type: !1776)
!3742 = !DILocation(line: 555, column: 21, scope: !3737)
!3743 = !DILocalVariable(name: "x", scope: !3737, file: !1, line: 558, type: !640)
!3744 = !DILocation(line: 558, column: 11, scope: !3737)
!3745 = !DILocalVariable(name: "count", scope: !3737, file: !1, line: 561, type: !640)
!3746 = !DILocation(line: 561, column: 11, scope: !3737)
!3747 = !DILocation(line: 563, column: 13, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3737, file: !1, line: 563, column: 13)
!3749 = !DILocation(line: 563, column: 20, scope: !3748)
!3750 = !DILocation(line: 563, column: 13, scope: !3737)
!3751 = !DILocation(line: 564, column: 11, scope: !3748)
!3752 = !DILocation(line: 565, column: 39, scope: !3737)
!3753 = !DILocation(line: 565, column: 52, scope: !3737)
!3754 = !DILocation(line: 565, column: 54, scope: !3737)
!3755 = !DILocation(line: 565, column: 61, scope: !3737)
!3756 = !DILocation(line: 566, column: 11, scope: !3737)
!3757 = !DILocation(line: 565, column: 11, scope: !3737)
!3758 = !DILocation(line: 565, column: 10, scope: !3737)
!3759 = !DILocation(line: 567, column: 13, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3737, file: !1, line: 567, column: 13)
!3761 = !DILocation(line: 567, column: 15, scope: !3760)
!3762 = !DILocation(line: 567, column: 13, scope: !3737)
!3763 = !DILocation(line: 569, column: 19, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3760, file: !1, line: 568, column: 11)
!3765 = !DILocation(line: 570, column: 13, scope: !3764)
!3766 = !DILocation(line: 572, column: 49, scope: !3737)
!3767 = !DILocation(line: 572, column: 17, scope: !3737)
!3768 = !DILocation(line: 572, column: 16, scope: !3737)
!3769 = !DILocation(line: 573, column: 16, scope: !3737)
!3770 = !DILocation(line: 573, column: 15, scope: !3737)
!3771 = !DILocation(line: 574, column: 15, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3737, file: !1, line: 574, column: 9)
!3773 = !DILocation(line: 574, column: 14, scope: !3772)
!3774 = !DILocation(line: 574, column: 19, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3772, file: !1, line: 574, column: 9)
!3776 = !DILocation(line: 574, column: 33, scope: !3775)
!3777 = !DILocation(line: 574, column: 40, scope: !3775)
!3778 = !DILocation(line: 574, column: 21, scope: !3775)
!3779 = !DILocation(line: 574, column: 9, scope: !3772)
!3780 = !DILocalVariable(name: "pixel", scope: !3781, file: !1, line: 577, type: !955)
!3781 = distinct !DILexicalBlock(scope: !3775, file: !1, line: 575, column: 9)
!3782 = !DILocation(line: 577, column: 13, scope: !3781)
!3783 = !DILocalVariable(name: "node_info", scope: !3781, file: !1, line: 580, type: !3784)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !944)
!3786 = !DILocation(line: 580, column: 14, scope: !3781)
!3787 = !DILocalVariable(name: "i", scope: !3781, file: !1, line: 583, type: !640)
!3788 = !DILocation(line: 583, column: 13, scope: !3781)
!3789 = !DILocalVariable(name: "id", scope: !3781, file: !1, line: 586, type: !570)
!3790 = !DILocation(line: 586, column: 13, scope: !3781)
!3791 = !DILocalVariable(name: "index", scope: !3781, file: !1, line: 587, type: !570)
!3792 = !DILocation(line: 587, column: 13, scope: !3781)
!3793 = !DILocation(line: 592, column: 21, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3781, file: !1, line: 592, column: 11)
!3795 = !DILocation(line: 592, column: 16, scope: !3794)
!3796 = !DILocation(line: 592, column: 26, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3794, file: !1, line: 592, column: 11)
!3798 = !DILocation(line: 592, column: 28, scope: !3797)
!3799 = !DILocation(line: 592, column: 27, scope: !3797)
!3800 = !DILocation(line: 592, column: 47, scope: !3797)
!3801 = !DILocation(line: 592, column: 54, scope: !3797)
!3802 = !DILocation(line: 592, column: 35, scope: !3797)
!3803 = !DILocation(line: 592, column: 11, scope: !3794)
!3804 = !DILocation(line: 593, column: 29, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3797, file: !1, line: 593, column: 17)
!3806 = !DILocation(line: 593, column: 35, scope: !3805)
!3807 = !DILocation(line: 593, column: 37, scope: !3805)
!3808 = !DILocation(line: 593, column: 39, scope: !3805)
!3809 = !DILocation(line: 593, column: 38, scope: !3805)
!3810 = !DILocation(line: 593, column: 17, scope: !3805)
!3811 = !DILocation(line: 593, column: 46, scope: !3805)
!3812 = !DILocation(line: 593, column: 17, scope: !3797)
!3813 = !DILocation(line: 594, column: 15, scope: !3805)
!3814 = !DILocation(line: 593, column: 49, scope: !3805)
!3815 = !DILocation(line: 592, column: 68, scope: !3797)
!3816 = !DILocation(line: 592, column: 11, scope: !3797)
!3817 = distinct !{!3817, !3803, !3818}
!3818 = !DILocation(line: 594, column: 15, scope: !3794)
!3819 = !DILocation(line: 595, column: 37, scope: !3781)
!3820 = !DILocation(line: 595, column: 11, scope: !3781)
!3821 = !DILocation(line: 596, column: 26, scope: !3781)
!3822 = !DILocation(line: 596, column: 20, scope: !3781)
!3823 = !DILocation(line: 597, column: 21, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3781, file: !1, line: 597, column: 11)
!3825 = !DILocation(line: 597, column: 16, scope: !3824)
!3826 = !DILocation(line: 597, column: 48, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3824, file: !1, line: 597, column: 11)
!3828 = !DILocation(line: 597, column: 54, scope: !3827)
!3829 = !DILocation(line: 597, column: 11, scope: !3824)
!3830 = !DILocation(line: 599, column: 43, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3827, file: !1, line: 598, column: 11)
!3832 = !DILocation(line: 599, column: 16, scope: !3831)
!3833 = !DILocation(line: 599, column: 15, scope: !3831)
!3834 = !DILocation(line: 600, column: 17, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3831, file: !1, line: 600, column: 17)
!3836 = !DILocation(line: 600, column: 28, scope: !3835)
!3837 = !DILocation(line: 600, column: 34, scope: !3835)
!3838 = !DILocation(line: 600, column: 38, scope: !3835)
!3839 = !DILocation(line: 600, column: 17, scope: !3831)
!3840 = !DILocation(line: 601, column: 15, scope: !3835)
!3841 = !DILocation(line: 602, column: 23, scope: !3831)
!3842 = !DILocation(line: 602, column: 34, scope: !3831)
!3843 = !DILocation(line: 602, column: 40, scope: !3831)
!3844 = !DILocation(line: 602, column: 22, scope: !3831)
!3845 = !DILocation(line: 603, column: 11, scope: !3831)
!3846 = !DILocation(line: 597, column: 64, scope: !3827)
!3847 = !DILocation(line: 597, column: 11, scope: !3827)
!3848 = distinct !{!3848, !3829, !3849}
!3849 = !DILocation(line: 603, column: 11, scope: !3824)
!3850 = !DILocation(line: 607, column: 16, scope: !3781)
!3851 = !DILocation(line: 607, column: 23, scope: !3781)
!3852 = !DILocation(line: 608, column: 16, scope: !3781)
!3853 = !DILocation(line: 608, column: 24, scope: !3781)
!3854 = !DILocation(line: 610, column: 24, scope: !3781)
!3855 = !DILocation(line: 610, column: 36, scope: !3781)
!3856 = !DILocation(line: 610, column: 47, scope: !3781)
!3857 = !DILocation(line: 610, column: 11, scope: !3781)
!3858 = !DILocation(line: 611, column: 22, scope: !3781)
!3859 = !DILocation(line: 611, column: 16, scope: !3781)
!3860 = !DILocation(line: 612, column: 17, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3781, file: !1, line: 612, column: 11)
!3862 = !DILocation(line: 612, column: 16, scope: !3861)
!3863 = !DILocation(line: 612, column: 21, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3861, file: !1, line: 612, column: 11)
!3865 = !DILocation(line: 612, column: 35, scope: !3864)
!3866 = !DILocation(line: 612, column: 23, scope: !3864)
!3867 = !DILocation(line: 612, column: 11, scope: !3861)
!3868 = !DILocation(line: 614, column: 17, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3870, file: !1, line: 614, column: 17)
!3870 = distinct !DILexicalBlock(scope: !3864, file: !1, line: 613, column: 11)
!3871 = !DILocation(line: 614, column: 24, scope: !3869)
!3872 = !DILocation(line: 614, column: 38, scope: !3869)
!3873 = !DILocation(line: 614, column: 17, scope: !3870)
!3874 = !DILocation(line: 615, column: 15, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3876, file: !1, line: 615, column: 15)
!3876 = distinct !DILexicalBlock(scope: !3869, file: !1, line: 615, column: 15)
!3877 = !DILocation(line: 615, column: 15, scope: !3876)
!3878 = !DILocation(line: 616, column: 22, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3870, file: !1, line: 616, column: 17)
!3880 = !DILocation(line: 616, column: 37, scope: !3879)
!3881 = !DILocation(line: 616, column: 51, scope: !3879)
!3882 = !DILocation(line: 616, column: 17, scope: !3870)
!3883 = !DILocation(line: 618, column: 17, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3885, file: !1, line: 618, column: 17)
!3885 = distinct !DILexicalBlock(scope: !3879, file: !1, line: 617, column: 15)
!3886 = !DILocation(line: 619, column: 26, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3885, file: !1, line: 619, column: 21)
!3888 = !DILocation(line: 619, column: 42, scope: !3887)
!3889 = !DILocation(line: 619, column: 21, scope: !3885)
!3890 = !DILocation(line: 620, column: 19, scope: !3887)
!3891 = !DILocation(line: 621, column: 15, scope: !3885)
!3892 = !DILocation(line: 622, column: 14, scope: !3870)
!3893 = !DILocation(line: 623, column: 11, scope: !3870)
!3894 = !DILocation(line: 612, column: 43, scope: !3864)
!3895 = !DILocation(line: 612, column: 11, scope: !3864)
!3896 = distinct !{!3896, !3867, !3897}
!3897 = !DILocation(line: 623, column: 11, scope: !3861)
!3898 = !DILocation(line: 624, column: 9, scope: !3781)
!3899 = !DILocation(line: 574, column: 52, scope: !3775)
!3900 = !DILocation(line: 574, column: 50, scope: !3775)
!3901 = !DILocation(line: 574, column: 9, scope: !3775)
!3902 = distinct !{!3902, !3779, !3903}
!3903 = !DILocation(line: 624, column: 9, scope: !3772)
!3904 = !DILocation(line: 625, column: 42, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3737, file: !1, line: 625, column: 13)
!3906 = !DILocation(line: 625, column: 53, scope: !3905)
!3907 = !DILocation(line: 625, column: 13, scope: !3905)
!3908 = !DILocation(line: 625, column: 64, scope: !3905)
!3909 = !DILocation(line: 625, column: 13, scope: !3737)
!3910 = !DILocation(line: 626, column: 17, scope: !3905)
!3911 = !DILocation(line: 626, column: 11, scope: !3905)
!3912 = !DILocation(line: 627, column: 13, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3737, file: !1, line: 627, column: 13)
!3914 = !DILocation(line: 627, column: 20, scope: !3913)
!3915 = !DILocation(line: 627, column: 37, scope: !3913)
!3916 = !DILocation(line: 627, column: 13, scope: !3737)
!3917 = !DILocalVariable(name: "proceed", scope: !3918, file: !1, line: 630, type: !575)
!3918 = distinct !DILexicalBlock(scope: !3913, file: !1, line: 628, column: 11)
!3919 = !DILocation(line: 630, column: 15, scope: !3918)
!3920 = !DILocation(line: 635, column: 38, scope: !3918)
!3921 = !DILocation(line: 635, column: 78, scope: !3918)
!3922 = !DILocation(line: 636, column: 15, scope: !3918)
!3923 = !DILocation(line: 636, column: 22, scope: !3918)
!3924 = !DILocation(line: 635, column: 21, scope: !3918)
!3925 = !DILocation(line: 635, column: 20, scope: !3918)
!3926 = !DILocation(line: 637, column: 17, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3918, file: !1, line: 637, column: 17)
!3928 = !DILocation(line: 637, column: 25, scope: !3927)
!3929 = !DILocation(line: 637, column: 17, scope: !3918)
!3930 = !DILocation(line: 638, column: 21, scope: !3927)
!3931 = !DILocation(line: 638, column: 15, scope: !3927)
!3932 = !DILocation(line: 639, column: 11, scope: !3918)
!3933 = !DILocation(line: 640, column: 7, scope: !3737)
!3934 = !DILocation(line: 546, column: 45, scope: !3731)
!3935 = !DILocation(line: 546, column: 7, scope: !3731)
!3936 = distinct !{!3936, !3735, !3937}
!3937 = !DILocation(line: 640, column: 7, scope: !3728)
!3938 = !DILocation(line: 641, column: 35, scope: !3713)
!3939 = !DILocation(line: 641, column: 18, scope: !3713)
!3940 = !DILocation(line: 641, column: 17, scope: !3713)
!3941 = !DILocation(line: 643, column: 7, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3637, file: !1, line: 643, column: 7)
!3943 = !DILocation(line: 643, column: 18, scope: !3942)
!3944 = !DILocation(line: 643, column: 33, scope: !3942)
!3945 = !DILocation(line: 643, column: 47, scope: !3942)
!3946 = !DILocation(line: 643, column: 7, scope: !3637)
!3947 = !DILocation(line: 644, column: 34, scope: !3942)
!3948 = !DILocation(line: 644, column: 12, scope: !3942)
!3949 = !DILocation(line: 644, column: 5, scope: !3942)
!3950 = !DILocation(line: 645, column: 8, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3637, file: !1, line: 645, column: 7)
!3952 = !DILocation(line: 645, column: 19, scope: !3951)
!3953 = !DILocation(line: 645, column: 34, scope: !3951)
!3954 = !DILocation(line: 645, column: 48, scope: !3951)
!3955 = !DILocation(line: 645, column: 54, scope: !3951)
!3956 = !DILocation(line: 646, column: 8, scope: !3951)
!3957 = !DILocation(line: 646, column: 19, scope: !3951)
!3958 = !DILocation(line: 646, column: 34, scope: !3951)
!3959 = !DILocation(line: 646, column: 45, scope: !3951)
!3960 = !DILocation(line: 645, column: 7, scope: !3637)
!3961 = !DILocalVariable(name: "intensity", scope: !3962, file: !1, line: 649, type: !624)
!3962 = distinct !DILexicalBlock(scope: !3951, file: !1, line: 647, column: 5)
!3963 = !DILocation(line: 649, column: 9, scope: !3962)
!3964 = !DILocalVariable(name: "q", scope: !3962, file: !1, line: 652, type: !1776)
!3965 = !DILocation(line: 652, column: 19, scope: !3962)
!3966 = !DILocalVariable(name: "i", scope: !3962, file: !1, line: 655, type: !640)
!3967 = !DILocation(line: 655, column: 9, scope: !3962)
!3968 = !DILocation(line: 660, column: 9, scope: !3962)
!3969 = !DILocation(line: 660, column: 16, scope: !3962)
!3970 = !DILocation(line: 660, column: 8, scope: !3962)
!3971 = !DILocation(line: 661, column: 13, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3962, file: !1, line: 661, column: 7)
!3973 = !DILocation(line: 661, column: 12, scope: !3972)
!3974 = !DILocation(line: 661, column: 17, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 661, column: 7)
!3976 = !DILocation(line: 661, column: 31, scope: !3975)
!3977 = !DILocation(line: 661, column: 38, scope: !3975)
!3978 = !DILocation(line: 661, column: 19, scope: !3975)
!3979 = !DILocation(line: 661, column: 7, scope: !3972)
!3980 = !DILocation(line: 663, column: 43, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3975, file: !1, line: 662, column: 7)
!3982 = !DILocation(line: 663, column: 49, scope: !3981)
!3983 = !DILocation(line: 663, column: 30, scope: !3981)
!3984 = !DILocation(line: 663, column: 52, scope: !3981)
!3985 = !DILocation(line: 663, column: 19, scope: !3981)
!3986 = !DILocation(line: 663, column: 18, scope: !3981)
!3987 = !DILocation(line: 665, column: 9, scope: !3981)
!3988 = !DILocation(line: 666, column: 9, scope: !3981)
!3989 = !DILocation(line: 667, column: 9, scope: !3981)
!3990 = !DILocation(line: 668, column: 10, scope: !3981)
!3991 = !DILocation(line: 669, column: 7, scope: !3981)
!3992 = !DILocation(line: 661, column: 47, scope: !3975)
!3993 = !DILocation(line: 661, column: 7, scope: !3975)
!3994 = distinct !{!3994, !3979, !3995}
!3995 = !DILocation(line: 669, column: 7, scope: !3972)
!3996 = !DILocation(line: 670, column: 5, scope: !3962)
!3997 = !DILocation(line: 671, column: 20, scope: !3637)
!3998 = !DILocation(line: 671, column: 10, scope: !3637)
!3999 = !DILocation(line: 672, column: 8, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3637, file: !1, line: 672, column: 7)
!4001 = !DILocation(line: 672, column: 19, scope: !4000)
!4002 = !DILocation(line: 672, column: 34, scope: !4000)
!4003 = !DILocation(line: 672, column: 45, scope: !4000)
!4004 = !DILocation(line: 672, column: 69, scope: !4000)
!4005 = !DILocation(line: 673, column: 8, scope: !4000)
!4006 = !DILocation(line: 673, column: 19, scope: !4000)
!4007 = !DILocation(line: 673, column: 34, scope: !4000)
!4008 = !DILocation(line: 673, column: 45, scope: !4000)
!4009 = !DILocation(line: 672, column: 7, scope: !3637)
!4010 = !DILocation(line: 674, column: 47, scope: !4000)
!4011 = !DILocation(line: 674, column: 12, scope: !4000)
!4012 = !DILocation(line: 674, column: 5, scope: !4000)
!4013 = !DILocation(line: 675, column: 3, scope: !3637)
!4014 = !DILocation(line: 676, column: 1, scope: !3637)
!4015 = distinct !DISubprogram(name: "DestroyCubeInfo", scope: !1, file: !1, line: 1310, type: !4016, scopeLine: 1311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!4016 = !DISubroutineType(types: !4017)
!4017 = !{null, !938}
!4018 = !DILocalVariable(name: "cube_info", arg: 1, scope: !4015, file: !1, line: 1310, type: !938)
!4019 = !DILocation(line: 1310, column: 39, scope: !4015)
!4020 = !DILocalVariable(name: "nodes", scope: !4015, file: !1, line: 1313, type: !979)
!4021 = !DILocation(line: 1313, column: 6, scope: !4015)
!4022 = !DILocation(line: 1318, column: 3, scope: !4015)
!4023 = !DILocation(line: 1320, column: 11, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4015, file: !1, line: 1319, column: 3)
!4025 = !DILocation(line: 1320, column: 22, scope: !4024)
!4026 = !DILocation(line: 1320, column: 34, scope: !4024)
!4027 = !DILocation(line: 1320, column: 10, scope: !4024)
!4028 = !DILocation(line: 1322, column: 7, scope: !4024)
!4029 = !DILocation(line: 1322, column: 18, scope: !4024)
!4030 = !DILocation(line: 1322, column: 30, scope: !4024)
!4031 = !DILocation(line: 1321, column: 47, scope: !4024)
!4032 = !DILocation(line: 1321, column: 34, scope: !4024)
!4033 = !DILocation(line: 1321, column: 5, scope: !4024)
!4034 = !DILocation(line: 1321, column: 16, scope: !4024)
!4035 = !DILocation(line: 1321, column: 28, scope: !4024)
!4036 = !DILocation(line: 1321, column: 33, scope: !4024)
!4037 = !DILocation(line: 1324, column: 7, scope: !4024)
!4038 = !DILocation(line: 1324, column: 18, scope: !4024)
!4039 = !DILocation(line: 1323, column: 37, scope: !4024)
!4040 = !DILocation(line: 1323, column: 27, scope: !4024)
!4041 = !DILocation(line: 1323, column: 5, scope: !4024)
!4042 = !DILocation(line: 1323, column: 16, scope: !4024)
!4043 = !DILocation(line: 1323, column: 26, scope: !4024)
!4044 = !DILocation(line: 1325, column: 27, scope: !4024)
!4045 = !DILocation(line: 1325, column: 5, scope: !4024)
!4046 = !DILocation(line: 1325, column: 16, scope: !4024)
!4047 = !DILocation(line: 1325, column: 26, scope: !4024)
!4048 = !DILocation(line: 1326, column: 3, scope: !4024)
!4049 = !DILocation(line: 1326, column: 12, scope: !4015)
!4050 = !DILocation(line: 1326, column: 23, scope: !4015)
!4051 = !DILocation(line: 1326, column: 34, scope: !4015)
!4052 = distinct !{!4052, !4022, !4053}
!4053 = !DILocation(line: 1326, column: 51, scope: !4015)
!4054 = !DILocation(line: 1327, column: 7, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4015, file: !1, line: 1327, column: 7)
!4056 = !DILocation(line: 1327, column: 18, scope: !4055)
!4057 = !DILocation(line: 1327, column: 30, scope: !4055)
!4058 = !DILocation(line: 1327, column: 7, scope: !4015)
!4059 = !DILocation(line: 1328, column: 52, scope: !4055)
!4060 = !DILocation(line: 1328, column: 63, scope: !4055)
!4061 = !DILocation(line: 1328, column: 28, scope: !4055)
!4062 = !DILocation(line: 1328, column: 5, scope: !4055)
!4063 = !DILocation(line: 1328, column: 16, scope: !4055)
!4064 = !DILocation(line: 1328, column: 27, scope: !4055)
!4065 = !DILocation(line: 1329, column: 48, scope: !4015)
!4066 = !DILocation(line: 1329, column: 59, scope: !4015)
!4067 = !DILocation(line: 1329, column: 28, scope: !4015)
!4068 = !DILocation(line: 1329, column: 3, scope: !4015)
!4069 = !DILocation(line: 1329, column: 14, scope: !4015)
!4070 = !DILocation(line: 1329, column: 27, scope: !4015)
!4071 = !DILocation(line: 1330, column: 49, scope: !4015)
!4072 = !DILocation(line: 1330, column: 26, scope: !4015)
!4073 = !DILocation(line: 1330, column: 13, scope: !4015)
!4074 = !DILocation(line: 1330, column: 12, scope: !4015)
!4075 = !DILocation(line: 1331, column: 1, scope: !4015)
!4076 = distinct !DISubprogram(name: "QuantizeImages", scope: !1, file: !1, line: 2778, type: !1191, scopeLine: 2780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!4077 = !DILocalVariable(name: "quantize_info", arg: 1, scope: !4076, file: !1, line: 2778, type: !1097)
!4078 = !DILocation(line: 2778, column: 67, scope: !4076)
!4079 = !DILocalVariable(name: "images", arg: 2, scope: !4076, file: !1, line: 2779, type: !652)
!4080 = !DILocation(line: 2779, column: 10, scope: !4076)
!4081 = !DILocalVariable(name: "cube_info", scope: !4076, file: !1, line: 2782, type: !938)
!4082 = !DILocation(line: 2782, column: 6, scope: !4076)
!4083 = !DILocalVariable(name: "image", scope: !4076, file: !1, line: 2785, type: !652)
!4084 = !DILocation(line: 2785, column: 6, scope: !4076)
!4085 = !DILocalVariable(name: "proceed", scope: !4076, file: !1, line: 2788, type: !575)
!4086 = !DILocation(line: 2788, column: 5, scope: !4076)
!4087 = !DILocalVariable(name: "status", scope: !4076, file: !1, line: 2789, type: !575)
!4088 = !DILocation(line: 2789, column: 5, scope: !4076)
!4089 = !DILocalVariable(name: "progress_monitor", scope: !4076, file: !1, line: 2792, type: !753)
!4090 = !DILocation(line: 2792, column: 5, scope: !4076)
!4091 = !DILocalVariable(name: "i", scope: !4076, file: !1, line: 2795, type: !640)
!4092 = !DILocation(line: 2795, column: 5, scope: !4076)
!4093 = !DILocalVariable(name: "depth", scope: !4076, file: !1, line: 2798, type: !570)
!4094 = !DILocation(line: 2798, column: 5, scope: !4076)
!4095 = !DILocalVariable(name: "maximum_colors", scope: !4076, file: !1, line: 2799, type: !570)
!4096 = !DILocation(line: 2799, column: 5, scope: !4076)
!4097 = !DILocalVariable(name: "number_images", scope: !4076, file: !1, line: 2800, type: !570)
!4098 = !DILocation(line: 2800, column: 5, scope: !4076)
!4099 = !DILocation(line: 2806, column: 7, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4076, file: !1, line: 2806, column: 7)
!4101 = !DILocation(line: 2806, column: 15, scope: !4100)
!4102 = !DILocation(line: 2806, column: 21, scope: !4100)
!4103 = !DILocation(line: 2806, column: 7, scope: !4076)
!4104 = !DILocation(line: 2807, column: 61, scope: !4100)
!4105 = !DILocation(line: 2807, column: 69, scope: !4100)
!4106 = !DILocation(line: 2807, column: 12, scope: !4100)
!4107 = !DILocation(line: 2807, column: 5, scope: !4100)
!4108 = !DILocation(line: 2808, column: 26, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4076, file: !1, line: 2808, column: 7)
!4110 = !DILocation(line: 2808, column: 7, scope: !4109)
!4111 = !DILocation(line: 2808, column: 34, scope: !4109)
!4112 = !DILocation(line: 2808, column: 7, scope: !4076)
!4113 = !DILocation(line: 2813, column: 28, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4109, file: !1, line: 2809, column: 5)
!4115 = !DILocation(line: 2813, column: 42, scope: !4114)
!4116 = !DILocation(line: 2813, column: 14, scope: !4114)
!4117 = !DILocation(line: 2813, column: 13, scope: !4114)
!4118 = !DILocation(line: 2814, column: 14, scope: !4114)
!4119 = !DILocation(line: 2814, column: 7, scope: !4114)
!4120 = !DILocation(line: 2816, column: 9, scope: !4076)
!4121 = !DILocation(line: 2817, column: 18, scope: !4076)
!4122 = !DILocation(line: 2817, column: 33, scope: !4076)
!4123 = !DILocation(line: 2817, column: 17, scope: !4076)
!4124 = !DILocation(line: 2818, column: 7, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4076, file: !1, line: 2818, column: 7)
!4126 = !DILocation(line: 2818, column: 22, scope: !4125)
!4127 = !DILocation(line: 2818, column: 7, scope: !4076)
!4128 = !DILocation(line: 2819, column: 19, scope: !4125)
!4129 = !DILocation(line: 2819, column: 5, scope: !4125)
!4130 = !DILocation(line: 2820, column: 7, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4076, file: !1, line: 2820, column: 7)
!4132 = !DILocation(line: 2820, column: 22, scope: !4131)
!4133 = !DILocation(line: 2820, column: 7, scope: !4076)
!4134 = !DILocation(line: 2821, column: 19, scope: !4131)
!4135 = !DILocation(line: 2821, column: 5, scope: !4131)
!4136 = !DILocation(line: 2822, column: 9, scope: !4076)
!4137 = !DILocation(line: 2822, column: 24, scope: !4076)
!4138 = !DILocation(line: 2822, column: 8, scope: !4076)
!4139 = !DILocation(line: 2823, column: 7, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4076, file: !1, line: 2823, column: 7)
!4141 = !DILocation(line: 2823, column: 13, scope: !4140)
!4142 = !DILocation(line: 2823, column: 7, scope: !4076)
!4143 = !DILocalVariable(name: "colors", scope: !4144, file: !1, line: 2826, type: !570)
!4144 = distinct !DILexicalBlock(scope: !4140, file: !1, line: 2824, column: 5)
!4145 = !DILocation(line: 2826, column: 9, scope: !4144)
!4146 = !DILocation(line: 2831, column: 14, scope: !4144)
!4147 = !DILocation(line: 2831, column: 13, scope: !4144)
!4148 = !DILocation(line: 2832, column: 17, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4144, file: !1, line: 2832, column: 7)
!4150 = !DILocation(line: 2832, column: 12, scope: !4149)
!4151 = !DILocation(line: 2832, column: 21, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4149, file: !1, line: 2832, column: 7)
!4153 = !DILocation(line: 2832, column: 28, scope: !4152)
!4154 = !DILocation(line: 2832, column: 7, scope: !4149)
!4155 = !DILocation(line: 2833, column: 15, scope: !4152)
!4156 = !DILocation(line: 2833, column: 9, scope: !4152)
!4157 = !DILocation(line: 2832, column: 39, scope: !4152)
!4158 = !DILocation(line: 2832, column: 7, scope: !4152)
!4159 = distinct !{!4159, !4154, !4160}
!4160 = !DILocation(line: 2833, column: 18, scope: !4149)
!4161 = !DILocation(line: 2834, column: 11, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4144, file: !1, line: 2834, column: 11)
!4163 = !DILocation(line: 2834, column: 26, scope: !4162)
!4164 = !DILocation(line: 2834, column: 33, scope: !4162)
!4165 = !DILocation(line: 2834, column: 11, scope: !4144)
!4166 = !DILocation(line: 2835, column: 14, scope: !4162)
!4167 = !DILocation(line: 2835, column: 9, scope: !4162)
!4168 = !DILocation(line: 2836, column: 5, scope: !4144)
!4169 = !DILocation(line: 2840, column: 25, scope: !4076)
!4170 = !DILocation(line: 2840, column: 39, scope: !4076)
!4171 = !DILocation(line: 2840, column: 45, scope: !4076)
!4172 = !DILocation(line: 2840, column: 13, scope: !4076)
!4173 = !DILocation(line: 2840, column: 12, scope: !4076)
!4174 = !DILocation(line: 2841, column: 7, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4076, file: !1, line: 2841, column: 7)
!4176 = !DILocation(line: 2841, column: 17, scope: !4175)
!4177 = !DILocation(line: 2841, column: 7, scope: !4076)
!4178 = !DILocation(line: 2843, column: 36, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4175, file: !1, line: 2842, column: 5)
!4180 = !DILocation(line: 2843, column: 44, scope: !4179)
!4181 = !DILocation(line: 2844, column: 60, scope: !4179)
!4182 = !DILocation(line: 2844, column: 68, scope: !4179)
!4183 = !DILocation(line: 2843, column: 14, scope: !4179)
!4184 = !DILocation(line: 2845, column: 7, scope: !4179)
!4185 = !DILocation(line: 2847, column: 36, scope: !4076)
!4186 = !DILocation(line: 2847, column: 17, scope: !4076)
!4187 = !DILocation(line: 2847, column: 16, scope: !4076)
!4188 = !DILocation(line: 2848, column: 9, scope: !4076)
!4189 = !DILocation(line: 2848, column: 8, scope: !4076)
!4190 = !DILocation(line: 2849, column: 9, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4076, file: !1, line: 2849, column: 3)
!4192 = !DILocation(line: 2849, column: 8, scope: !4191)
!4193 = !DILocation(line: 2849, column: 13, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4191, file: !1, line: 2849, column: 3)
!4195 = !DILocation(line: 2849, column: 19, scope: !4194)
!4196 = !DILocation(line: 2849, column: 3, scope: !4191)
!4197 = !DILocation(line: 2851, column: 46, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4194, file: !1, line: 2850, column: 3)
!4199 = !DILocation(line: 2852, column: 7, scope: !4198)
!4200 = !DILocation(line: 2852, column: 14, scope: !4198)
!4201 = !DILocation(line: 2851, column: 22, scope: !4198)
!4202 = !DILocation(line: 2851, column: 21, scope: !4198)
!4203 = !DILocation(line: 2853, column: 32, scope: !4198)
!4204 = !DILocation(line: 2853, column: 42, scope: !4198)
!4205 = !DILocation(line: 2853, column: 49, scope: !4198)
!4206 = !DILocation(line: 2853, column: 56, scope: !4198)
!4207 = !DILocation(line: 2853, column: 12, scope: !4198)
!4208 = !DILocation(line: 2853, column: 11, scope: !4198)
!4209 = !DILocation(line: 2854, column: 9, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4198, file: !1, line: 2854, column: 9)
!4211 = !DILocation(line: 2854, column: 16, scope: !4210)
!4212 = !DILocation(line: 2854, column: 9, scope: !4198)
!4213 = !DILocation(line: 2855, column: 7, scope: !4210)
!4214 = !DILocation(line: 2856, column: 36, scope: !4198)
!4215 = !DILocation(line: 2856, column: 42, scope: !4198)
!4216 = !DILocation(line: 2856, column: 59, scope: !4198)
!4217 = !DILocation(line: 2856, column: 66, scope: !4198)
!4218 = !DILocation(line: 2856, column: 12, scope: !4198)
!4219 = !DILocation(line: 2857, column: 30, scope: !4198)
!4220 = !DILocation(line: 2857, column: 70, scope: !4198)
!4221 = !DILocation(line: 2858, column: 7, scope: !4198)
!4222 = !DILocation(line: 2857, column: 13, scope: !4198)
!4223 = !DILocation(line: 2857, column: 12, scope: !4198)
!4224 = !DILocation(line: 2859, column: 9, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4198, file: !1, line: 2859, column: 9)
!4226 = !DILocation(line: 2859, column: 17, scope: !4225)
!4227 = !DILocation(line: 2859, column: 9, scope: !4198)
!4228 = !DILocation(line: 2860, column: 7, scope: !4225)
!4229 = !DILocation(line: 2861, column: 30, scope: !4198)
!4230 = !DILocation(line: 2861, column: 11, scope: !4198)
!4231 = !DILocation(line: 2861, column: 10, scope: !4198)
!4232 = !DILocation(line: 2862, column: 3, scope: !4198)
!4233 = !DILocation(line: 2849, column: 39, scope: !4194)
!4234 = !DILocation(line: 2849, column: 3, scope: !4194)
!4235 = distinct !{!4235, !4196, !4236}
!4236 = !DILocation(line: 2862, column: 3, scope: !4191)
!4237 = !DILocation(line: 2863, column: 7, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4076, file: !1, line: 2863, column: 7)
!4239 = !DILocation(line: 2863, column: 14, scope: !4238)
!4240 = !DILocation(line: 2863, column: 7, scope: !4076)
!4241 = !DILocation(line: 2868, column: 25, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4238, file: !1, line: 2864, column: 5)
!4243 = !DILocation(line: 2868, column: 32, scope: !4242)
!4244 = !DILocation(line: 2868, column: 7, scope: !4242)
!4245 = !DILocation(line: 2869, column: 13, scope: !4242)
!4246 = !DILocation(line: 2869, column: 12, scope: !4242)
!4247 = !DILocation(line: 2870, column: 13, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4242, file: !1, line: 2870, column: 7)
!4249 = !DILocation(line: 2870, column: 12, scope: !4248)
!4250 = !DILocation(line: 2870, column: 17, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4248, file: !1, line: 2870, column: 7)
!4252 = !DILocation(line: 2870, column: 23, scope: !4251)
!4253 = !DILocation(line: 2870, column: 7, scope: !4248)
!4254 = !DILocation(line: 2872, column: 50, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4251, file: !1, line: 2871, column: 7)
!4256 = !DILocation(line: 2873, column: 16, scope: !4255)
!4257 = !DILocation(line: 2873, column: 23, scope: !4255)
!4258 = !DILocation(line: 2872, column: 26, scope: !4255)
!4259 = !DILocation(line: 2872, column: 25, scope: !4255)
!4260 = !DILocation(line: 2874, column: 34, scope: !4255)
!4261 = !DILocation(line: 2874, column: 40, scope: !4255)
!4262 = !DILocation(line: 2874, column: 16, scope: !4255)
!4263 = !DILocation(line: 2874, column: 15, scope: !4255)
!4264 = !DILocation(line: 2875, column: 13, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4255, file: !1, line: 2875, column: 13)
!4266 = !DILocation(line: 2875, column: 20, scope: !4265)
!4267 = !DILocation(line: 2875, column: 13, scope: !4255)
!4268 = !DILocation(line: 2876, column: 11, scope: !4265)
!4269 = !DILocation(line: 2877, column: 40, scope: !4255)
!4270 = !DILocation(line: 2877, column: 46, scope: !4255)
!4271 = !DILocation(line: 2878, column: 11, scope: !4255)
!4272 = !DILocation(line: 2878, column: 18, scope: !4255)
!4273 = !DILocation(line: 2877, column: 16, scope: !4255)
!4274 = !DILocation(line: 2879, column: 34, scope: !4255)
!4275 = !DILocation(line: 2879, column: 74, scope: !4255)
!4276 = !DILocation(line: 2880, column: 11, scope: !4255)
!4277 = !DILocation(line: 2879, column: 17, scope: !4255)
!4278 = !DILocation(line: 2879, column: 16, scope: !4255)
!4279 = !DILocation(line: 2881, column: 13, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4255, file: !1, line: 2881, column: 13)
!4281 = !DILocation(line: 2881, column: 21, scope: !4280)
!4282 = !DILocation(line: 2881, column: 13, scope: !4255)
!4283 = !DILocation(line: 2882, column: 11, scope: !4280)
!4284 = !DILocation(line: 2883, column: 34, scope: !4255)
!4285 = !DILocation(line: 2883, column: 15, scope: !4255)
!4286 = !DILocation(line: 2883, column: 14, scope: !4255)
!4287 = !DILocation(line: 2884, column: 7, scope: !4255)
!4288 = !DILocation(line: 2870, column: 43, scope: !4251)
!4289 = !DILocation(line: 2870, column: 7, scope: !4251)
!4290 = distinct !{!4290, !4253, !4291}
!4291 = !DILocation(line: 2884, column: 7, scope: !4248)
!4292 = !DILocation(line: 2885, column: 5, scope: !4242)
!4293 = !DILocation(line: 2886, column: 19, scope: !4076)
!4294 = !DILocation(line: 2886, column: 3, scope: !4076)
!4295 = !DILocation(line: 2887, column: 10, scope: !4076)
!4296 = !DILocation(line: 2887, column: 3, scope: !4076)
!4297 = !DILocation(line: 2888, column: 1, scope: !4076)
!4298 = distinct !DISubprogram(name: "RemapImage", scope: !1, file: !1, line: 3153, type: !4299, scopeLine: 3155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!4299 = !DISubroutineType(types: !4300)
!4300 = !{!575, !1097, !652, !854}
!4301 = !DILocalVariable(name: "quantize_info", arg: 1, scope: !4298, file: !1, line: 3153, type: !1097)
!4302 = !DILocation(line: 3153, column: 63, scope: !4298)
!4303 = !DILocalVariable(name: "image", arg: 2, scope: !4298, file: !1, line: 3154, type: !652)
!4304 = !DILocation(line: 3154, column: 10, scope: !4298)
!4305 = !DILocalVariable(name: "remap_image", arg: 3, scope: !4298, file: !1, line: 3154, type: !854)
!4306 = !DILocation(line: 3154, column: 29, scope: !4298)
!4307 = !DILocalVariable(name: "cube_info", scope: !4298, file: !1, line: 3157, type: !938)
!4308 = !DILocation(line: 3157, column: 6, scope: !4298)
!4309 = !DILocalVariable(name: "status", scope: !4298, file: !1, line: 3160, type: !575)
!4310 = !DILocation(line: 3160, column: 5, scope: !4298)
!4311 = !DILocation(line: 3167, column: 7, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4298, file: !1, line: 3167, column: 7)
!4313 = !DILocation(line: 3167, column: 14, scope: !4312)
!4314 = !DILocation(line: 3167, column: 20, scope: !4312)
!4315 = !DILocation(line: 3167, column: 7, scope: !4298)
!4316 = !DILocation(line: 3168, column: 61, scope: !4312)
!4317 = !DILocation(line: 3168, column: 68, scope: !4312)
!4318 = !DILocation(line: 3168, column: 12, scope: !4312)
!4319 = !DILocation(line: 3168, column: 5, scope: !4312)
!4320 = !DILocation(line: 3171, column: 25, scope: !4298)
!4321 = !DILocation(line: 3172, column: 5, scope: !4298)
!4322 = !DILocation(line: 3172, column: 20, scope: !4298)
!4323 = !DILocation(line: 3171, column: 13, scope: !4298)
!4324 = !DILocation(line: 3171, column: 12, scope: !4298)
!4325 = !DILocation(line: 3173, column: 7, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4298, file: !1, line: 3173, column: 7)
!4327 = !DILocation(line: 3173, column: 17, scope: !4326)
!4328 = !DILocation(line: 3173, column: 7, scope: !4298)
!4329 = !DILocation(line: 3174, column: 5, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4331, file: !1, line: 3174, column: 5)
!4331 = distinct !DILexicalBlock(scope: !4326, file: !1, line: 3174, column: 5)
!4332 = !DILocation(line: 3174, column: 5, scope: !4331)
!4333 = !DILocation(line: 3176, column: 30, scope: !4298)
!4334 = !DILocation(line: 3176, column: 40, scope: !4298)
!4335 = !DILocation(line: 3176, column: 53, scope: !4298)
!4336 = !DILocation(line: 3176, column: 60, scope: !4298)
!4337 = !DILocation(line: 3176, column: 10, scope: !4298)
!4338 = !DILocation(line: 3176, column: 9, scope: !4298)
!4339 = !DILocation(line: 3177, column: 7, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4298, file: !1, line: 3177, column: 7)
!4341 = !DILocation(line: 3177, column: 14, scope: !4340)
!4342 = !DILocation(line: 3177, column: 7, scope: !4298)
!4343 = !DILocation(line: 3182, column: 47, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4340, file: !1, line: 3178, column: 5)
!4345 = !DILocation(line: 3182, column: 58, scope: !4344)
!4346 = !DILocation(line: 3182, column: 7, scope: !4344)
!4347 = !DILocation(line: 3182, column: 18, scope: !4344)
!4348 = !DILocation(line: 3182, column: 33, scope: !4344)
!4349 = !DILocation(line: 3182, column: 46, scope: !4344)
!4350 = !DILocation(line: 3183, column: 32, scope: !4344)
!4351 = !DILocation(line: 3183, column: 38, scope: !4344)
!4352 = !DILocation(line: 3183, column: 14, scope: !4344)
!4353 = !DILocation(line: 3183, column: 13, scope: !4344)
!4354 = !DILocation(line: 3184, column: 5, scope: !4344)
!4355 = !DILocation(line: 3185, column: 19, scope: !4298)
!4356 = !DILocation(line: 3185, column: 3, scope: !4298)
!4357 = !DILocation(line: 3186, column: 10, scope: !4298)
!4358 = !DILocation(line: 3186, column: 3, scope: !4298)
!4359 = !DILocation(line: 3187, column: 1, scope: !4298)
!4360 = distinct !DISubprogram(name: "RemapImages", scope: !1, file: !1, line: 3217, type: !4299, scopeLine: 3219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!4361 = !DILocalVariable(name: "quantize_info", arg: 1, scope: !4360, file: !1, line: 3217, type: !1097)
!4362 = !DILocation(line: 3217, column: 64, scope: !4360)
!4363 = !DILocalVariable(name: "images", arg: 2, scope: !4360, file: !1, line: 3218, type: !652)
!4364 = !DILocation(line: 3218, column: 10, scope: !4360)
!4365 = !DILocalVariable(name: "remap_image", arg: 3, scope: !4360, file: !1, line: 3218, type: !854)
!4366 = !DILocation(line: 3218, column: 30, scope: !4360)
!4367 = !DILocalVariable(name: "cube_info", scope: !4360, file: !1, line: 3221, type: !938)
!4368 = !DILocation(line: 3221, column: 6, scope: !4360)
!4369 = !DILocalVariable(name: "image", scope: !4360, file: !1, line: 3224, type: !652)
!4370 = !DILocation(line: 3224, column: 6, scope: !4360)
!4371 = !DILocalVariable(name: "status", scope: !4360, file: !1, line: 3227, type: !575)
!4372 = !DILocation(line: 3227, column: 5, scope: !4360)
!4373 = !DILocation(line: 3231, column: 7, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4360, file: !1, line: 3231, column: 7)
!4375 = !DILocation(line: 3231, column: 15, scope: !4374)
!4376 = !DILocation(line: 3231, column: 21, scope: !4374)
!4377 = !DILocation(line: 3231, column: 7, scope: !4360)
!4378 = !DILocation(line: 3232, column: 61, scope: !4374)
!4379 = !DILocation(line: 3232, column: 69, scope: !4374)
!4380 = !DILocation(line: 3232, column: 12, scope: !4374)
!4381 = !DILocation(line: 3232, column: 5, scope: !4374)
!4382 = !DILocation(line: 3233, column: 9, scope: !4360)
!4383 = !DILocation(line: 3233, column: 8, scope: !4360)
!4384 = !DILocation(line: 3234, column: 7, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4360, file: !1, line: 3234, column: 7)
!4386 = !DILocation(line: 3234, column: 19, scope: !4385)
!4387 = !DILocation(line: 3234, column: 7, scope: !4360)
!4388 = !DILocation(line: 3239, column: 29, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4385, file: !1, line: 3235, column: 5)
!4390 = !DILocation(line: 3239, column: 43, scope: !4389)
!4391 = !DILocation(line: 3239, column: 14, scope: !4389)
!4392 = !DILocation(line: 3239, column: 13, scope: !4389)
!4393 = !DILocation(line: 3240, column: 14, scope: !4389)
!4394 = !DILocation(line: 3240, column: 7, scope: !4389)
!4395 = !DILocation(line: 3245, column: 25, scope: !4360)
!4396 = !DILocation(line: 3246, column: 5, scope: !4360)
!4397 = !DILocation(line: 3246, column: 20, scope: !4360)
!4398 = !DILocation(line: 3245, column: 13, scope: !4360)
!4399 = !DILocation(line: 3245, column: 12, scope: !4360)
!4400 = !DILocation(line: 3247, column: 7, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4360, file: !1, line: 3247, column: 7)
!4402 = !DILocation(line: 3247, column: 17, scope: !4401)
!4403 = !DILocation(line: 3247, column: 7, scope: !4360)
!4404 = !DILocation(line: 3248, column: 5, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4406, file: !1, line: 3248, column: 5)
!4406 = distinct !DILexicalBlock(scope: !4401, file: !1, line: 3248, column: 5)
!4407 = !DILocation(line: 3248, column: 5, scope: !4406)
!4408 = !DILocation(line: 3250, column: 30, scope: !4360)
!4409 = !DILocation(line: 3250, column: 40, scope: !4360)
!4410 = !DILocation(line: 3250, column: 53, scope: !4360)
!4411 = !DILocation(line: 3250, column: 60, scope: !4360)
!4412 = !DILocation(line: 3250, column: 10, scope: !4360)
!4413 = !DILocation(line: 3250, column: 9, scope: !4360)
!4414 = !DILocation(line: 3251, column: 7, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4360, file: !1, line: 3251, column: 7)
!4416 = !DILocation(line: 3251, column: 14, scope: !4415)
!4417 = !DILocation(line: 3251, column: 7, scope: !4360)
!4418 = !DILocation(line: 3256, column: 47, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4415, file: !1, line: 3252, column: 5)
!4420 = !DILocation(line: 3256, column: 58, scope: !4419)
!4421 = !DILocation(line: 3256, column: 7, scope: !4419)
!4422 = !DILocation(line: 3256, column: 18, scope: !4419)
!4423 = !DILocation(line: 3256, column: 33, scope: !4419)
!4424 = !DILocation(line: 3256, column: 46, scope: !4419)
!4425 = !DILocation(line: 3257, column: 13, scope: !4419)
!4426 = !DILocation(line: 3257, column: 12, scope: !4419)
!4427 = !DILocation(line: 3258, column: 7, scope: !4419)
!4428 = !DILocation(line: 3258, column: 15, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4430, file: !1, line: 3258, column: 7)
!4430 = distinct !DILexicalBlock(scope: !4419, file: !1, line: 3258, column: 7)
!4431 = !DILocation(line: 3258, column: 21, scope: !4429)
!4432 = !DILocation(line: 3258, column: 7, scope: !4430)
!4433 = !DILocation(line: 3260, column: 34, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4429, file: !1, line: 3259, column: 7)
!4435 = !DILocation(line: 3260, column: 40, scope: !4434)
!4436 = !DILocation(line: 3260, column: 16, scope: !4434)
!4437 = !DILocation(line: 3260, column: 15, scope: !4434)
!4438 = !DILocation(line: 3261, column: 13, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4434, file: !1, line: 3261, column: 13)
!4440 = !DILocation(line: 3261, column: 20, scope: !4439)
!4441 = !DILocation(line: 3261, column: 13, scope: !4434)
!4442 = !DILocation(line: 3262, column: 11, scope: !4439)
!4443 = !DILocation(line: 3263, column: 7, scope: !4434)
!4444 = !DILocation(line: 3258, column: 65, scope: !4429)
!4445 = !DILocation(line: 3258, column: 46, scope: !4429)
!4446 = !DILocation(line: 3258, column: 45, scope: !4429)
!4447 = !DILocation(line: 3258, column: 7, scope: !4429)
!4448 = distinct !{!4448, !4432, !4449}
!4449 = !DILocation(line: 3263, column: 7, scope: !4430)
!4450 = !DILocation(line: 3264, column: 5, scope: !4419)
!4451 = !DILocation(line: 3265, column: 19, scope: !4360)
!4452 = !DILocation(line: 3265, column: 3, scope: !4360)
!4453 = !DILocation(line: 3266, column: 10, scope: !4360)
!4454 = !DILocation(line: 3266, column: 3, scope: !4360)
!4455 = !DILocation(line: 3267, column: 1, scope: !4360)
!4456 = distinct !DISubprogram(name: "GetNodeInfo", scope: !1, file: !1, line: 2049, type: !4457, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!4457 = !DISubroutineType(types: !4458)
!4458 = !{!943, !938, !858, !858, !943}
!4459 = !DILocalVariable(name: "cube_info", arg: 1, scope: !4456, file: !1, line: 2049, type: !938)
!4460 = !DILocation(line: 2049, column: 40, scope: !4456)
!4461 = !DILocalVariable(name: "id", arg: 2, scope: !4456, file: !1, line: 2049, type: !858)
!4462 = !DILocation(line: 2049, column: 63, scope: !4456)
!4463 = !DILocalVariable(name: "level", arg: 3, scope: !4456, file: !1, line: 2050, type: !858)
!4464 = !DILocation(line: 2050, column: 16, scope: !4456)
!4465 = !DILocalVariable(name: "parent", arg: 4, scope: !4456, file: !1, line: 2050, type: !943)
!4466 = !DILocation(line: 2050, column: 32, scope: !4456)
!4467 = !DILocalVariable(name: "node_info", scope: !4456, file: !1, line: 2053, type: !943)
!4468 = !DILocation(line: 2053, column: 6, scope: !4456)
!4469 = !DILocation(line: 2055, column: 7, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4456, file: !1, line: 2055, column: 7)
!4471 = !DILocation(line: 2055, column: 18, scope: !4470)
!4472 = !DILocation(line: 2055, column: 29, scope: !4470)
!4473 = !DILocation(line: 2055, column: 7, scope: !4456)
!4474 = !DILocalVariable(name: "nodes", scope: !4475, file: !1, line: 2058, type: !979)
!4475 = distinct !DILexicalBlock(scope: !4470, file: !1, line: 2056, column: 5)
!4476 = !DILocation(line: 2058, column: 10, scope: !4475)
!4477 = !DILocation(line: 2063, column: 23, scope: !4475)
!4478 = !DILocation(line: 2063, column: 13, scope: !4475)
!4479 = !DILocation(line: 2063, column: 12, scope: !4475)
!4480 = !DILocation(line: 2064, column: 11, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4475, file: !1, line: 2064, column: 11)
!4482 = !DILocation(line: 2064, column: 17, scope: !4481)
!4483 = !DILocation(line: 2064, column: 11, scope: !4475)
!4484 = !DILocation(line: 2065, column: 9, scope: !4481)
!4485 = !DILocation(line: 2066, column: 33, scope: !4475)
!4486 = !DILocation(line: 2066, column: 20, scope: !4475)
!4487 = !DILocation(line: 2066, column: 7, scope: !4475)
!4488 = !DILocation(line: 2066, column: 14, scope: !4475)
!4489 = !DILocation(line: 2066, column: 19, scope: !4475)
!4490 = !DILocation(line: 2068, column: 11, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4475, file: !1, line: 2068, column: 11)
!4492 = !DILocation(line: 2068, column: 18, scope: !4491)
!4493 = !DILocation(line: 2068, column: 24, scope: !4491)
!4494 = !DILocation(line: 2068, column: 11, scope: !4475)
!4495 = !DILocation(line: 2069, column: 9, scope: !4491)
!4496 = !DILocation(line: 2070, column: 19, scope: !4475)
!4497 = !DILocation(line: 2070, column: 30, scope: !4475)
!4498 = !DILocation(line: 2070, column: 7, scope: !4475)
!4499 = !DILocation(line: 2070, column: 14, scope: !4475)
!4500 = !DILocation(line: 2070, column: 18, scope: !4475)
!4501 = !DILocation(line: 2071, column: 29, scope: !4475)
!4502 = !DILocation(line: 2071, column: 7, scope: !4475)
!4503 = !DILocation(line: 2071, column: 18, scope: !4475)
!4504 = !DILocation(line: 2071, column: 28, scope: !4475)
!4505 = !DILocation(line: 2072, column: 28, scope: !4475)
!4506 = !DILocation(line: 2072, column: 35, scope: !4475)
!4507 = !DILocation(line: 2072, column: 7, scope: !4475)
!4508 = !DILocation(line: 2072, column: 18, scope: !4475)
!4509 = !DILocation(line: 2072, column: 27, scope: !4475)
!4510 = !DILocation(line: 2073, column: 7, scope: !4475)
!4511 = !DILocation(line: 2073, column: 18, scope: !4475)
!4512 = !DILocation(line: 2073, column: 28, scope: !4475)
!4513 = !DILocation(line: 2074, column: 5, scope: !4475)
!4514 = !DILocation(line: 2075, column: 3, scope: !4456)
!4515 = !DILocation(line: 2075, column: 14, scope: !4456)
!4516 = !DILocation(line: 2075, column: 19, scope: !4456)
!4517 = !DILocation(line: 2076, column: 3, scope: !4456)
!4518 = !DILocation(line: 2076, column: 14, scope: !4456)
!4519 = !DILocation(line: 2076, column: 24, scope: !4456)
!4520 = !DILocation(line: 2077, column: 13, scope: !4456)
!4521 = !DILocation(line: 2077, column: 24, scope: !4456)
!4522 = !DILocation(line: 2077, column: 33, scope: !4456)
!4523 = !DILocation(line: 2077, column: 12, scope: !4456)
!4524 = !DILocation(line: 2078, column: 28, scope: !4456)
!4525 = !DILocation(line: 2078, column: 10, scope: !4456)
!4526 = !DILocation(line: 2079, column: 21, scope: !4456)
!4527 = !DILocation(line: 2079, column: 3, scope: !4456)
!4528 = !DILocation(line: 2079, column: 14, scope: !4456)
!4529 = !DILocation(line: 2079, column: 20, scope: !4456)
!4530 = !DILocation(line: 2080, column: 17, scope: !4456)
!4531 = !DILocation(line: 2080, column: 3, scope: !4456)
!4532 = !DILocation(line: 2080, column: 14, scope: !4456)
!4533 = !DILocation(line: 2080, column: 16, scope: !4456)
!4534 = !DILocation(line: 2081, column: 20, scope: !4456)
!4535 = !DILocation(line: 2081, column: 3, scope: !4456)
!4536 = !DILocation(line: 2081, column: 14, scope: !4456)
!4537 = !DILocation(line: 2081, column: 19, scope: !4456)
!4538 = !DILocation(line: 2082, column: 10, scope: !4456)
!4539 = !DILocation(line: 2082, column: 3, scope: !4456)
!4540 = !DILocation(line: 2083, column: 1, scope: !4456)
!4541 = distinct !DISubprogram(name: "PerceptibleReciprocal", scope: !4542, file: !4542, line: 78, type: !4543, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!4542 = !DIFile(filename: "./magick/pixel-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!4543 = !DISubroutineType(types: !4544)
!4544 = !{!617, !4545}
!4545 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !617)
!4546 = !DILocalVariable(name: "x", arg: 1, scope: !4541, file: !4542, line: 78, type: !4545)
!4547 = !DILocation(line: 78, column: 57, scope: !4541)
!4548 = !DILocalVariable(name: "sign", scope: !4541, file: !4542, line: 81, type: !617)
!4549 = !DILocation(line: 81, column: 5, scope: !4541)
!4550 = !DILocation(line: 86, column: 8, scope: !4541)
!4551 = !DILocation(line: 86, column: 10, scope: !4541)
!4552 = !DILocation(line: 86, column: 7, scope: !4541)
!4553 = !DILocation(line: 87, column: 8, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4541, file: !4542, line: 87, column: 7)
!4555 = !DILocation(line: 87, column: 13, scope: !4554)
!4556 = !DILocation(line: 87, column: 12, scope: !4554)
!4557 = !DILocation(line: 87, column: 16, scope: !4554)
!4558 = !DILocation(line: 87, column: 7, scope: !4541)
!4559 = !DILocation(line: 88, column: 16, scope: !4554)
!4560 = !DILocation(line: 88, column: 15, scope: !4554)
!4561 = !DILocation(line: 88, column: 5, scope: !4554)
!4562 = !DILocation(line: 89, column: 10, scope: !4541)
!4563 = !DILocation(line: 89, column: 14, scope: !4541)
!4564 = !DILocation(line: 89, column: 3, scope: !4541)
!4565 = !DILocation(line: 90, column: 1, scope: !4541)
!4566 = distinct !DISubprogram(name: "SetAssociatedAlpha", scope: !1, file: !1, line: 739, type: !3513, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!4567 = !DILocalVariable(name: "image", arg: 1, scope: !4566, file: !1, line: 739, type: !854)
!4568 = !DILocation(line: 739, column: 52, scope: !4566)
!4569 = !DILocalVariable(name: "cube_info", arg: 2, scope: !4566, file: !1, line: 739, type: !938)
!4570 = !DILocation(line: 739, column: 68, scope: !4566)
!4571 = !DILocalVariable(name: "associate_alpha", scope: !4566, file: !1, line: 742, type: !575)
!4572 = !DILocation(line: 742, column: 5, scope: !4566)
!4573 = !DILocation(line: 744, column: 19, scope: !4566)
!4574 = !DILocation(line: 744, column: 26, scope: !4566)
!4575 = !DILocation(line: 744, column: 18, scope: !4566)
!4576 = !DILocation(line: 745, column: 8, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4566, file: !1, line: 745, column: 7)
!4578 = !DILocation(line: 745, column: 19, scope: !4577)
!4579 = !DILocation(line: 745, column: 34, scope: !4577)
!4580 = !DILocation(line: 745, column: 48, scope: !4577)
!4581 = !DILocation(line: 745, column: 54, scope: !4577)
!4582 = !DILocation(line: 746, column: 8, scope: !4577)
!4583 = !DILocation(line: 746, column: 19, scope: !4577)
!4584 = !DILocation(line: 746, column: 34, scope: !4577)
!4585 = !DILocation(line: 746, column: 45, scope: !4577)
!4586 = !DILocation(line: 745, column: 7, scope: !4566)
!4587 = !DILocation(line: 747, column: 20, scope: !4577)
!4588 = !DILocation(line: 747, column: 5, scope: !4577)
!4589 = !DILocation(line: 748, column: 30, scope: !4566)
!4590 = !DILocation(line: 748, column: 3, scope: !4566)
!4591 = !DILocation(line: 748, column: 14, scope: !4566)
!4592 = !DILocation(line: 748, column: 29, scope: !4566)
!4593 = !DILocation(line: 749, column: 1, scope: !4566)
!4594 = distinct !DISubprogram(name: "IssRGBCompatibleColorspace", scope: !4595, file: !4595, line: 109, type: !4596, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!4595 = !DIFile(filename: "./magick/colorspace-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!4596 = !DISubroutineType(types: !4597)
!4597 = !{!575, !4598}
!4598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !577)
!4599 = !DILocalVariable(name: "colorspace", arg: 1, scope: !4594, file: !4595, line: 110, type: !4598)
!4600 = !DILocation(line: 110, column: 24, scope: !4594)
!4601 = !DILocation(line: 112, column: 8, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4594, file: !4595, line: 112, column: 7)
!4603 = !DILocation(line: 112, column: 19, scope: !4602)
!4604 = !DILocation(line: 112, column: 38, scope: !4602)
!4605 = !DILocation(line: 112, column: 42, scope: !4602)
!4606 = !DILocation(line: 112, column: 53, scope: !4602)
!4607 = !DILocation(line: 112, column: 71, scope: !4602)
!4608 = !DILocation(line: 113, column: 8, scope: !4602)
!4609 = !DILocation(line: 113, column: 19, scope: !4602)
!4610 = !DILocation(line: 113, column: 39, scope: !4602)
!4611 = !DILocation(line: 114, column: 8, scope: !4602)
!4612 = !DILocation(line: 114, column: 19, scope: !4602)
!4613 = !DILocation(line: 114, column: 45, scope: !4602)
!4614 = !DILocation(line: 115, column: 25, scope: !4602)
!4615 = !DILocation(line: 115, column: 8, scope: !4602)
!4616 = !DILocation(line: 115, column: 37, scope: !4602)
!4617 = !DILocation(line: 112, column: 7, scope: !4594)
!4618 = !DILocation(line: 116, column: 5, scope: !4602)
!4619 = !DILocation(line: 117, column: 3, scope: !4594)
!4620 = !DILocation(line: 118, column: 1, scope: !4594)
!4621 = distinct !DISubprogram(name: "PruneLevel", scope: !1, file: !1, line: 2515, type: !4622, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!4622 = !DISubroutineType(types: !4623)
!4623 = !{null, !854, !938, !3784}
!4624 = !DILocalVariable(name: "image", arg: 1, scope: !4621, file: !1, line: 2515, type: !854)
!4625 = !DILocation(line: 2515, column: 37, scope: !4621)
!4626 = !DILocalVariable(name: "cube_info", arg: 2, scope: !4621, file: !1, line: 2515, type: !938)
!4627 = !DILocation(line: 2515, column: 53, scope: !4621)
!4628 = !DILocalVariable(name: "node_info", arg: 3, scope: !4621, file: !1, line: 2516, type: !3784)
!4629 = !DILocation(line: 2516, column: 19, scope: !4621)
!4630 = !DILocalVariable(name: "i", scope: !4621, file: !1, line: 2519, type: !640)
!4631 = !DILocation(line: 2519, column: 5, scope: !4621)
!4632 = !DILocalVariable(name: "number_children", scope: !4621, file: !1, line: 2522, type: !570)
!4633 = !DILocation(line: 2522, column: 5, scope: !4621)
!4634 = !DILocation(line: 2527, column: 19, scope: !4621)
!4635 = !DILocation(line: 2527, column: 30, scope: !4621)
!4636 = !DILocation(line: 2527, column: 46, scope: !4621)
!4637 = !DILocation(line: 2527, column: 18, scope: !4621)
!4638 = !DILocation(line: 2528, column: 9, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4621, file: !1, line: 2528, column: 3)
!4640 = !DILocation(line: 2528, column: 8, scope: !4639)
!4641 = !DILocation(line: 2528, column: 13, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4639, file: !1, line: 2528, column: 3)
!4643 = !DILocation(line: 2528, column: 27, scope: !4642)
!4644 = !DILocation(line: 2528, column: 15, scope: !4642)
!4645 = !DILocation(line: 2528, column: 3, scope: !4639)
!4646 = !DILocation(line: 2529, column: 9, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4642, file: !1, line: 2529, column: 9)
!4648 = !DILocation(line: 2529, column: 20, scope: !4647)
!4649 = !DILocation(line: 2529, column: 26, scope: !4647)
!4650 = !DILocation(line: 2529, column: 29, scope: !4647)
!4651 = !DILocation(line: 2529, column: 9, scope: !4642)
!4652 = !DILocation(line: 2530, column: 18, scope: !4647)
!4653 = !DILocation(line: 2530, column: 24, scope: !4647)
!4654 = !DILocation(line: 2530, column: 34, scope: !4647)
!4655 = !DILocation(line: 2530, column: 45, scope: !4647)
!4656 = !DILocation(line: 2530, column: 51, scope: !4647)
!4657 = !DILocation(line: 2530, column: 7, scope: !4647)
!4658 = !DILocation(line: 2529, column: 45, scope: !4647)
!4659 = !DILocation(line: 2528, column: 45, scope: !4642)
!4660 = !DILocation(line: 2528, column: 3, scope: !4642)
!4661 = distinct !{!4661, !4645, !4662}
!4662 = !DILocation(line: 2530, column: 53, scope: !4639)
!4663 = !DILocation(line: 2531, column: 7, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4621, file: !1, line: 2531, column: 7)
!4665 = !DILocation(line: 2531, column: 18, scope: !4664)
!4666 = !DILocation(line: 2531, column: 27, scope: !4664)
!4667 = !DILocation(line: 2531, column: 38, scope: !4664)
!4668 = !DILocation(line: 2531, column: 24, scope: !4664)
!4669 = !DILocation(line: 2531, column: 7, scope: !4621)
!4670 = !DILocation(line: 2532, column: 16, scope: !4664)
!4671 = !DILocation(line: 2532, column: 22, scope: !4664)
!4672 = !DILocation(line: 2532, column: 32, scope: !4664)
!4673 = !DILocation(line: 2532, column: 5, scope: !4664)
!4674 = !DILocation(line: 2533, column: 1, scope: !4621)
!4675 = distinct !DISubprogram(name: "IsSameColor", scope: !1, file: !1, line: 485, type: !4676, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!4676 = !DISubroutineType(types: !4677)
!4677 = !{!575, !854, !930, !930}
!4678 = !DILocalVariable(name: "image", arg: 1, scope: !4675, file: !1, line: 485, type: !854)
!4679 = !DILocation(line: 485, column: 58, scope: !4675)
!4680 = !DILocalVariable(name: "p", arg: 2, scope: !4675, file: !1, line: 486, type: !930)
!4681 = !DILocation(line: 486, column: 22, scope: !4675)
!4682 = !DILocalVariable(name: "q", arg: 3, scope: !4675, file: !1, line: 486, type: !930)
!4683 = !DILocation(line: 486, column: 43, scope: !4675)
!4684 = !DILocation(line: 488, column: 8, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4675, file: !1, line: 488, column: 7)
!4686 = !DILocation(line: 488, column: 26, scope: !4685)
!4687 = !DILocation(line: 488, column: 23, scope: !4685)
!4688 = !DILocation(line: 488, column: 42, scope: !4685)
!4689 = !DILocation(line: 489, column: 8, scope: !4685)
!4690 = !DILocation(line: 489, column: 28, scope: !4685)
!4691 = !DILocation(line: 489, column: 25, scope: !4685)
!4692 = !DILocation(line: 489, column: 46, scope: !4685)
!4693 = !DILocation(line: 490, column: 8, scope: !4685)
!4694 = !DILocation(line: 490, column: 27, scope: !4685)
!4695 = !DILocation(line: 490, column: 24, scope: !4685)
!4696 = !DILocation(line: 488, column: 7, scope: !4675)
!4697 = !DILocation(line: 491, column: 5, scope: !4685)
!4698 = !DILocation(line: 492, column: 8, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4675, file: !1, line: 492, column: 7)
!4700 = !DILocation(line: 492, column: 15, scope: !4699)
!4701 = !DILocation(line: 492, column: 21, scope: !4699)
!4702 = !DILocation(line: 492, column: 37, scope: !4699)
!4703 = !DILocation(line: 493, column: 8, scope: !4699)
!4704 = !DILocation(line: 493, column: 30, scope: !4699)
!4705 = !DILocation(line: 493, column: 27, scope: !4699)
!4706 = !DILocation(line: 492, column: 7, scope: !4675)
!4707 = !DILocation(line: 494, column: 5, scope: !4699)
!4708 = !DILocation(line: 495, column: 3, scope: !4675)
!4709 = !DILocation(line: 496, column: 1, scope: !4675)
!4710 = distinct !DISubprogram(name: "AssociateAlphaPixel", scope: !1, file: !1, line: 434, type: !4711, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!4711 = !DISubroutineType(types: !4712)
!4712 = !{null, !4713, !930, !1005}
!4713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4714, size: 64)
!4714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !939)
!4715 = !DILocalVariable(name: "cube_info", arg: 1, scope: !4710, file: !1, line: 434, type: !4713)
!4716 = !DILocation(line: 434, column: 56, scope: !4710)
!4717 = !DILocalVariable(name: "pixel", arg: 2, scope: !4710, file: !1, line: 435, type: !930)
!4718 = !DILocation(line: 435, column: 22, scope: !4710)
!4719 = !DILocalVariable(name: "alpha_pixel", arg: 3, scope: !4710, file: !1, line: 435, type: !1005)
!4720 = !DILocation(line: 435, column: 45, scope: !4710)
!4721 = !DILocalVariable(name: "alpha", scope: !4710, file: !1, line: 438, type: !935)
!4722 = !DILocation(line: 438, column: 5, scope: !4710)
!4723 = !DILocation(line: 440, column: 8, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4710, file: !1, line: 440, column: 7)
!4725 = !DILocation(line: 440, column: 19, scope: !4724)
!4726 = !DILocation(line: 440, column: 35, scope: !4724)
!4727 = !DILocation(line: 440, column: 51, scope: !4724)
!4728 = !DILocation(line: 441, column: 8, scope: !4724)
!4729 = !DILocation(line: 441, column: 15, scope: !4724)
!4730 = !DILocation(line: 441, column: 23, scope: !4724)
!4731 = !DILocation(line: 440, column: 7, scope: !4710)
!4732 = !DILocation(line: 443, column: 41, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4724, file: !1, line: 442, column: 5)
!4734 = !DILocation(line: 443, column: 24, scope: !4733)
!4735 = !DILocation(line: 443, column: 7, scope: !4733)
!4736 = !DILocation(line: 443, column: 20, scope: !4733)
!4737 = !DILocation(line: 443, column: 23, scope: !4733)
!4738 = !DILocation(line: 444, column: 43, scope: !4733)
!4739 = !DILocation(line: 444, column: 26, scope: !4733)
!4740 = !DILocation(line: 444, column: 7, scope: !4733)
!4741 = !DILocation(line: 444, column: 20, scope: !4733)
!4742 = !DILocation(line: 444, column: 25, scope: !4733)
!4743 = !DILocation(line: 445, column: 42, scope: !4733)
!4744 = !DILocation(line: 445, column: 25, scope: !4733)
!4745 = !DILocation(line: 445, column: 7, scope: !4733)
!4746 = !DILocation(line: 445, column: 20, scope: !4733)
!4747 = !DILocation(line: 445, column: 24, scope: !4733)
!4748 = !DILocation(line: 446, column: 45, scope: !4733)
!4749 = !DILocation(line: 446, column: 28, scope: !4733)
!4750 = !DILocation(line: 446, column: 7, scope: !4733)
!4751 = !DILocation(line: 446, column: 20, scope: !4733)
!4752 = !DILocation(line: 446, column: 27, scope: !4733)
!4753 = !DILocation(line: 447, column: 7, scope: !4733)
!4754 = !DILocation(line: 449, column: 54, scope: !4710)
!4755 = !DILocation(line: 449, column: 53, scope: !4710)
!4756 = !DILocation(line: 449, column: 40, scope: !4710)
!4757 = !DILocation(line: 449, column: 39, scope: !4710)
!4758 = !DILocation(line: 449, column: 9, scope: !4710)
!4759 = !DILocation(line: 449, column: 8, scope: !4710)
!4760 = !DILocation(line: 450, column: 20, scope: !4710)
!4761 = !DILocation(line: 450, column: 26, scope: !4710)
!4762 = !DILocation(line: 450, column: 25, scope: !4710)
!4763 = !DILocation(line: 450, column: 3, scope: !4710)
!4764 = !DILocation(line: 450, column: 16, scope: !4710)
!4765 = !DILocation(line: 450, column: 19, scope: !4710)
!4766 = !DILocation(line: 451, column: 22, scope: !4710)
!4767 = !DILocation(line: 451, column: 28, scope: !4710)
!4768 = !DILocation(line: 451, column: 27, scope: !4710)
!4769 = !DILocation(line: 451, column: 3, scope: !4710)
!4770 = !DILocation(line: 451, column: 16, scope: !4710)
!4771 = !DILocation(line: 451, column: 21, scope: !4710)
!4772 = !DILocation(line: 452, column: 21, scope: !4710)
!4773 = !DILocation(line: 452, column: 27, scope: !4710)
!4774 = !DILocation(line: 452, column: 26, scope: !4710)
!4775 = !DILocation(line: 452, column: 3, scope: !4710)
!4776 = !DILocation(line: 452, column: 16, scope: !4710)
!4777 = !DILocation(line: 452, column: 20, scope: !4710)
!4778 = !DILocation(line: 453, column: 41, scope: !4710)
!4779 = !DILocation(line: 453, column: 24, scope: !4710)
!4780 = !DILocation(line: 453, column: 3, scope: !4710)
!4781 = !DILocation(line: 453, column: 16, scope: !4710)
!4782 = !DILocation(line: 453, column: 23, scope: !4710)
!4783 = !DILocation(line: 454, column: 1, scope: !4710)
!4784 = distinct !DISubprogram(name: "ColorToNodeId", scope: !1, file: !1, line: 469, type: !4785, scopeLine: 471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!4785 = !DISubroutineType(types: !4786)
!4786 = !{!570, !4713, !4787, !570}
!4787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4788, size: 64)
!4788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !955)
!4789 = !DILocalVariable(name: "cube_info", arg: 1, scope: !4784, file: !1, line: 469, type: !4713)
!4790 = !DILocation(line: 469, column: 52, scope: !4784)
!4791 = !DILocalVariable(name: "pixel", arg: 2, scope: !4784, file: !1, line: 470, type: !4787)
!4792 = !DILocation(line: 470, column: 26, scope: !4784)
!4793 = !DILocalVariable(name: "index", arg: 3, scope: !4784, file: !1, line: 470, type: !570)
!4794 = !DILocation(line: 470, column: 39, scope: !4784)
!4795 = !DILocalVariable(name: "id", scope: !4784, file: !1, line: 473, type: !570)
!4796 = !DILocation(line: 473, column: 5, scope: !4784)
!4797 = !DILocation(line: 475, column: 48, scope: !4784)
!4798 = !DILocation(line: 475, column: 37, scope: !4784)
!4799 = !DILocation(line: 475, column: 18, scope: !4784)
!4800 = !DILocation(line: 475, column: 72, scope: !4784)
!4801 = !DILocation(line: 475, column: 69, scope: !4784)
!4802 = !DILocation(line: 475, column: 79, scope: !4784)
!4803 = !DILocation(line: 476, column: 45, scope: !4784)
!4804 = !DILocation(line: 476, column: 34, scope: !4784)
!4805 = !DILocation(line: 476, column: 15, scope: !4784)
!4806 = !DILocation(line: 476, column: 71, scope: !4784)
!4807 = !DILocation(line: 476, column: 68, scope: !4784)
!4808 = !DILocation(line: 476, column: 78, scope: !4784)
!4809 = !DILocation(line: 477, column: 11, scope: !4784)
!4810 = !DILocation(line: 476, column: 11, scope: !4784)
!4811 = !DILocation(line: 477, column: 50, scope: !4784)
!4812 = !DILocation(line: 477, column: 39, scope: !4784)
!4813 = !DILocation(line: 477, column: 20, scope: !4784)
!4814 = !DILocation(line: 478, column: 5, scope: !4784)
!4815 = !DILocation(line: 477, column: 72, scope: !4784)
!4816 = !DILocation(line: 478, column: 12, scope: !4784)
!4817 = !DILocation(line: 478, column: 20, scope: !4784)
!4818 = !DILocation(line: 477, column: 16, scope: !4784)
!4819 = !DILocation(line: 475, column: 6, scope: !4784)
!4820 = !DILocation(line: 475, column: 5, scope: !4784)
!4821 = !DILocation(line: 479, column: 7, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4784, file: !1, line: 479, column: 7)
!4823 = !DILocation(line: 479, column: 18, scope: !4822)
!4824 = !DILocation(line: 479, column: 34, scope: !4822)
!4825 = !DILocation(line: 479, column: 7, scope: !4784)
!4826 = !DILocation(line: 480, column: 41, scope: !4822)
!4827 = !DILocation(line: 480, column: 30, scope: !4822)
!4828 = !DILocation(line: 480, column: 11, scope: !4822)
!4829 = !DILocation(line: 480, column: 69, scope: !4822)
!4830 = !DILocation(line: 480, column: 66, scope: !4822)
!4831 = !DILocation(line: 480, column: 76, scope: !4822)
!4832 = !DILocation(line: 481, column: 12, scope: !4822)
!4833 = !DILocation(line: 480, column: 9, scope: !4822)
!4834 = !DILocation(line: 480, column: 7, scope: !4822)
!4835 = !DILocation(line: 480, column: 5, scope: !4822)
!4836 = !DILocation(line: 482, column: 10, scope: !4784)
!4837 = !DILocation(line: 482, column: 3, scope: !4784)
!4838 = distinct !DISubprogram(name: "ClampPixel", scope: !1, file: !1, line: 456, type: !4839, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!4839 = !DISubroutineType(types: !4840)
!4840 = !{!624, !4841}
!4841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !935)
!4842 = !DILocalVariable(name: "value", arg: 1, scope: !4838, file: !1, line: 456, type: !4841)
!4843 = !DILocation(line: 456, column: 55, scope: !4838)
!4844 = !DILocation(line: 458, column: 7, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4838, file: !1, line: 458, column: 7)
!4846 = !DILocation(line: 458, column: 13, scope: !4845)
!4847 = !DILocation(line: 458, column: 7, scope: !4838)
!4848 = !DILocation(line: 459, column: 5, scope: !4845)
!4849 = !DILocation(line: 460, column: 7, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4838, file: !1, line: 460, column: 7)
!4851 = !DILocation(line: 460, column: 13, scope: !4850)
!4852 = !DILocation(line: 460, column: 7, scope: !4838)
!4853 = !DILocation(line: 461, column: 5, scope: !4850)
!4854 = !DILocation(line: 463, column: 21, scope: !4838)
!4855 = !DILocation(line: 463, column: 26, scope: !4838)
!4856 = !DILocation(line: 463, column: 10, scope: !4838)
!4857 = !DILocation(line: 463, column: 3, scope: !4838)
!4858 = !DILocation(line: 467, column: 1, scope: !4838)
!4859 = distinct !DISubprogram(name: "PruneToCubeDepth", scope: !1, file: !1, line: 2562, type: !4622, scopeLine: 2564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!4860 = !DILocalVariable(name: "image", arg: 1, scope: !4859, file: !1, line: 2562, type: !854)
!4861 = !DILocation(line: 2562, column: 43, scope: !4859)
!4862 = !DILocalVariable(name: "cube_info", arg: 2, scope: !4859, file: !1, line: 2562, type: !938)
!4863 = !DILocation(line: 2562, column: 59, scope: !4859)
!4864 = !DILocalVariable(name: "node_info", arg: 3, scope: !4859, file: !1, line: 2563, type: !3784)
!4865 = !DILocation(line: 2563, column: 19, scope: !4859)
!4866 = !DILocalVariable(name: "i", scope: !4859, file: !1, line: 2566, type: !640)
!4867 = !DILocation(line: 2566, column: 5, scope: !4859)
!4868 = !DILocalVariable(name: "number_children", scope: !4859, file: !1, line: 2569, type: !570)
!4869 = !DILocation(line: 2569, column: 5, scope: !4859)
!4870 = !DILocation(line: 2574, column: 19, scope: !4859)
!4871 = !DILocation(line: 2574, column: 30, scope: !4859)
!4872 = !DILocation(line: 2574, column: 46, scope: !4859)
!4873 = !DILocation(line: 2574, column: 18, scope: !4859)
!4874 = !DILocation(line: 2575, column: 9, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4859, file: !1, line: 2575, column: 3)
!4876 = !DILocation(line: 2575, column: 8, scope: !4875)
!4877 = !DILocation(line: 2575, column: 13, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4875, file: !1, line: 2575, column: 3)
!4879 = !DILocation(line: 2575, column: 27, scope: !4878)
!4880 = !DILocation(line: 2575, column: 15, scope: !4878)
!4881 = !DILocation(line: 2575, column: 3, scope: !4875)
!4882 = !DILocation(line: 2576, column: 9, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4878, file: !1, line: 2576, column: 9)
!4884 = !DILocation(line: 2576, column: 20, scope: !4883)
!4885 = !DILocation(line: 2576, column: 26, scope: !4883)
!4886 = !DILocation(line: 2576, column: 29, scope: !4883)
!4887 = !DILocation(line: 2576, column: 9, scope: !4878)
!4888 = !DILocation(line: 2577, column: 24, scope: !4883)
!4889 = !DILocation(line: 2577, column: 30, scope: !4883)
!4890 = !DILocation(line: 2577, column: 40, scope: !4883)
!4891 = !DILocation(line: 2577, column: 51, scope: !4883)
!4892 = !DILocation(line: 2577, column: 57, scope: !4883)
!4893 = !DILocation(line: 2577, column: 7, scope: !4883)
!4894 = !DILocation(line: 2576, column: 45, scope: !4883)
!4895 = !DILocation(line: 2575, column: 45, scope: !4878)
!4896 = !DILocation(line: 2575, column: 3, scope: !4878)
!4897 = distinct !{!4897, !4881, !4898}
!4898 = !DILocation(line: 2577, column: 59, scope: !4875)
!4899 = !DILocation(line: 2578, column: 7, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4859, file: !1, line: 2578, column: 7)
!4901 = !DILocation(line: 2578, column: 18, scope: !4900)
!4902 = !DILocation(line: 2578, column: 26, scope: !4900)
!4903 = !DILocation(line: 2578, column: 37, scope: !4900)
!4904 = !DILocation(line: 2578, column: 24, scope: !4900)
!4905 = !DILocation(line: 2578, column: 7, scope: !4859)
!4906 = !DILocation(line: 2579, column: 16, scope: !4900)
!4907 = !DILocation(line: 2579, column: 22, scope: !4900)
!4908 = !DILocation(line: 2579, column: 32, scope: !4900)
!4909 = !DILocation(line: 2579, column: 5, scope: !4900)
!4910 = !DILocation(line: 2580, column: 1, scope: !4859)
!4911 = distinct !DISubprogram(name: "IsGrayColorspace", scope: !4595, file: !4595, line: 85, type: !4596, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!4912 = !DILocalVariable(name: "colorspace", arg: 1, scope: !4911, file: !4595, line: 86, type: !4598)
!4913 = !DILocation(line: 86, column: 24, scope: !4911)
!4914 = !DILocation(line: 88, column: 8, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4911, file: !4595, line: 88, column: 7)
!4916 = !DILocation(line: 88, column: 19, scope: !4915)
!4917 = !DILocation(line: 88, column: 38, scope: !4915)
!4918 = !DILocation(line: 88, column: 42, scope: !4915)
!4919 = !DILocation(line: 88, column: 53, scope: !4915)
!4920 = !DILocation(line: 88, column: 78, scope: !4915)
!4921 = !DILocation(line: 89, column: 8, scope: !4915)
!4922 = !DILocation(line: 89, column: 19, scope: !4915)
!4923 = !DILocation(line: 88, column: 7, scope: !4911)
!4924 = !DILocation(line: 90, column: 5, scope: !4915)
!4925 = !DILocation(line: 91, column: 3, scope: !4911)
!4926 = !DILocation(line: 92, column: 1, scope: !4911)
!4927 = distinct !DISubprogram(name: "PruneChild", scope: !1, file: !1, line: 2455, type: !4622, scopeLine: 2457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!4928 = !DILocalVariable(name: "image", arg: 1, scope: !4927, file: !1, line: 2455, type: !854)
!4929 = !DILocation(line: 2455, column: 37, scope: !4927)
!4930 = !DILocalVariable(name: "cube_info", arg: 2, scope: !4927, file: !1, line: 2455, type: !938)
!4931 = !DILocation(line: 2455, column: 53, scope: !4927)
!4932 = !DILocalVariable(name: "node_info", arg: 3, scope: !4927, file: !1, line: 2456, type: !3784)
!4933 = !DILocation(line: 2456, column: 19, scope: !4927)
!4934 = !DILocalVariable(name: "parent", scope: !4927, file: !1, line: 2459, type: !943)
!4935 = !DILocation(line: 2459, column: 6, scope: !4927)
!4936 = !DILocalVariable(name: "i", scope: !4927, file: !1, line: 2462, type: !640)
!4937 = !DILocation(line: 2462, column: 5, scope: !4927)
!4938 = !DILocalVariable(name: "number_children", scope: !4927, file: !1, line: 2465, type: !570)
!4939 = !DILocation(line: 2465, column: 5, scope: !4927)
!4940 = !DILocation(line: 2470, column: 19, scope: !4927)
!4941 = !DILocation(line: 2470, column: 30, scope: !4927)
!4942 = !DILocation(line: 2470, column: 46, scope: !4927)
!4943 = !DILocation(line: 2470, column: 18, scope: !4927)
!4944 = !DILocation(line: 2471, column: 9, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4927, file: !1, line: 2471, column: 3)
!4946 = !DILocation(line: 2471, column: 8, scope: !4945)
!4947 = !DILocation(line: 2471, column: 13, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4945, file: !1, line: 2471, column: 3)
!4949 = !DILocation(line: 2471, column: 27, scope: !4948)
!4950 = !DILocation(line: 2471, column: 15, scope: !4948)
!4951 = !DILocation(line: 2471, column: 3, scope: !4945)
!4952 = !DILocation(line: 2472, column: 9, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4948, file: !1, line: 2472, column: 9)
!4954 = !DILocation(line: 2472, column: 20, scope: !4953)
!4955 = !DILocation(line: 2472, column: 26, scope: !4953)
!4956 = !DILocation(line: 2472, column: 29, scope: !4953)
!4957 = !DILocation(line: 2472, column: 9, scope: !4948)
!4958 = !DILocation(line: 2473, column: 18, scope: !4953)
!4959 = !DILocation(line: 2473, column: 24, scope: !4953)
!4960 = !DILocation(line: 2473, column: 34, scope: !4953)
!4961 = !DILocation(line: 2473, column: 45, scope: !4953)
!4962 = !DILocation(line: 2473, column: 51, scope: !4953)
!4963 = !DILocation(line: 2473, column: 7, scope: !4953)
!4964 = !DILocation(line: 2472, column: 45, scope: !4953)
!4965 = !DILocation(line: 2471, column: 45, scope: !4948)
!4966 = !DILocation(line: 2471, column: 3, scope: !4948)
!4967 = distinct !{!4967, !4951, !4968}
!4968 = !DILocation(line: 2473, column: 53, scope: !4945)
!4969 = !DILocation(line: 2477, column: 10, scope: !4927)
!4970 = !DILocation(line: 2477, column: 21, scope: !4927)
!4971 = !DILocation(line: 2477, column: 9, scope: !4927)
!4972 = !DILocation(line: 2478, column: 26, scope: !4927)
!4973 = !DILocation(line: 2478, column: 37, scope: !4927)
!4974 = !DILocation(line: 2478, column: 3, scope: !4927)
!4975 = !DILocation(line: 2478, column: 11, scope: !4927)
!4976 = !DILocation(line: 2478, column: 24, scope: !4927)
!4977 = !DILocation(line: 2479, column: 28, scope: !4927)
!4978 = !DILocation(line: 2479, column: 39, scope: !4927)
!4979 = !DILocation(line: 2479, column: 51, scope: !4927)
!4980 = !DILocation(line: 2479, column: 3, scope: !4927)
!4981 = !DILocation(line: 2479, column: 11, scope: !4927)
!4982 = !DILocation(line: 2479, column: 23, scope: !4927)
!4983 = !DILocation(line: 2479, column: 26, scope: !4927)
!4984 = !DILocation(line: 2480, column: 30, scope: !4927)
!4985 = !DILocation(line: 2480, column: 41, scope: !4927)
!4986 = !DILocation(line: 2480, column: 53, scope: !4927)
!4987 = !DILocation(line: 2480, column: 3, scope: !4927)
!4988 = !DILocation(line: 2480, column: 11, scope: !4927)
!4989 = !DILocation(line: 2480, column: 23, scope: !4927)
!4990 = !DILocation(line: 2480, column: 28, scope: !4927)
!4991 = !DILocation(line: 2481, column: 29, scope: !4927)
!4992 = !DILocation(line: 2481, column: 40, scope: !4927)
!4993 = !DILocation(line: 2481, column: 52, scope: !4927)
!4994 = !DILocation(line: 2481, column: 3, scope: !4927)
!4995 = !DILocation(line: 2481, column: 11, scope: !4927)
!4996 = !DILocation(line: 2481, column: 23, scope: !4927)
!4997 = !DILocation(line: 2481, column: 27, scope: !4927)
!4998 = !DILocation(line: 2482, column: 32, scope: !4927)
!4999 = !DILocation(line: 2482, column: 43, scope: !4927)
!5000 = !DILocation(line: 2482, column: 55, scope: !4927)
!5001 = !DILocation(line: 2482, column: 3, scope: !4927)
!5002 = !DILocation(line: 2482, column: 11, scope: !4927)
!5003 = !DILocation(line: 2482, column: 23, scope: !4927)
!5004 = !DILocation(line: 2482, column: 30, scope: !4927)
!5005 = !DILocation(line: 2483, column: 3, scope: !4927)
!5006 = !DILocation(line: 2483, column: 11, scope: !4927)
!5007 = !DILocation(line: 2483, column: 17, scope: !4927)
!5008 = !DILocation(line: 2483, column: 28, scope: !4927)
!5009 = !DILocation(line: 2483, column: 31, scope: !4927)
!5010 = !DILocation(line: 2484, column: 3, scope: !4927)
!5011 = !DILocation(line: 2484, column: 14, scope: !4927)
!5012 = !DILocation(line: 2484, column: 19, scope: !4927)
!5013 = !DILocation(line: 2485, column: 1, scope: !4927)
!5014 = distinct !DISubprogram(name: "ScaleQuantumToChar", scope: !101, file: !101, line: 114, type: !5015, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!5015 = !DISubroutineType(types: !5016)
!5016 = !{!814, !5017}
!5017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !624)
!5018 = !DILocalVariable(name: "quantum", arg: 1, scope: !5014, file: !101, line: 114, type: !5017)
!5019 = !DILocation(line: 114, column: 62, scope: !5014)
!5020 = !DILocation(line: 117, column: 29, scope: !5014)
!5021 = !DILocation(line: 117, column: 36, scope: !5014)
!5022 = !DILocation(line: 117, column: 46, scope: !5014)
!5023 = !DILocation(line: 117, column: 53, scope: !5014)
!5024 = !DILocation(line: 117, column: 61, scope: !5014)
!5025 = !DILocation(line: 117, column: 43, scope: !5014)
!5026 = !DILocation(line: 117, column: 68, scope: !5014)
!5027 = !DILocation(line: 117, column: 10, scope: !5014)
!5028 = !DILocation(line: 117, column: 3, scope: !5014)
!5029 = distinct !DISubprogram(name: "DefineImageColormap", scope: !1, file: !1, line: 1203, type: !5030, scopeLine: 1205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!5030 = !DISubroutineType(types: !5031)
!5031 = !{!570, !652, !938, !943}
!5032 = !DILocalVariable(name: "image", arg: 1, scope: !5029, file: !1, line: 1203, type: !652)
!5033 = !DILocation(line: 1203, column: 42, scope: !5029)
!5034 = !DILocalVariable(name: "cube_info", arg: 2, scope: !5029, file: !1, line: 1203, type: !938)
!5035 = !DILocation(line: 1203, column: 58, scope: !5029)
!5036 = !DILocalVariable(name: "node_info", arg: 3, scope: !5029, file: !1, line: 1204, type: !943)
!5037 = !DILocation(line: 1204, column: 13, scope: !5029)
!5038 = !DILocalVariable(name: "i", scope: !5029, file: !1, line: 1207, type: !640)
!5039 = !DILocation(line: 1207, column: 5, scope: !5029)
!5040 = !DILocalVariable(name: "number_children", scope: !5029, file: !1, line: 1210, type: !570)
!5041 = !DILocation(line: 1210, column: 5, scope: !5029)
!5042 = !DILocation(line: 1215, column: 19, scope: !5029)
!5043 = !DILocation(line: 1215, column: 30, scope: !5029)
!5044 = !DILocation(line: 1215, column: 46, scope: !5029)
!5045 = !DILocation(line: 1215, column: 18, scope: !5029)
!5046 = !DILocation(line: 1216, column: 9, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5029, file: !1, line: 1216, column: 3)
!5048 = !DILocation(line: 1216, column: 8, scope: !5047)
!5049 = !DILocation(line: 1216, column: 13, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5047, file: !1, line: 1216, column: 3)
!5051 = !DILocation(line: 1216, column: 27, scope: !5050)
!5052 = !DILocation(line: 1216, column: 15, scope: !5050)
!5053 = !DILocation(line: 1216, column: 3, scope: !5047)
!5054 = !DILocation(line: 1217, column: 9, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5050, file: !1, line: 1217, column: 9)
!5056 = !DILocation(line: 1217, column: 20, scope: !5055)
!5057 = !DILocation(line: 1217, column: 26, scope: !5055)
!5058 = !DILocation(line: 1217, column: 29, scope: !5055)
!5059 = !DILocation(line: 1217, column: 9, scope: !5050)
!5060 = !DILocation(line: 1218, column: 34, scope: !5055)
!5061 = !DILocation(line: 1218, column: 40, scope: !5055)
!5062 = !DILocation(line: 1218, column: 50, scope: !5055)
!5063 = !DILocation(line: 1218, column: 61, scope: !5055)
!5064 = !DILocation(line: 1218, column: 67, scope: !5055)
!5065 = !DILocation(line: 1218, column: 14, scope: !5055)
!5066 = !DILocation(line: 1218, column: 7, scope: !5055)
!5067 = !DILocation(line: 1217, column: 45, scope: !5055)
!5068 = !DILocation(line: 1216, column: 45, scope: !5050)
!5069 = !DILocation(line: 1216, column: 3, scope: !5050)
!5070 = distinct !{!5070, !5053, !5071}
!5071 = !DILocation(line: 1218, column: 69, scope: !5047)
!5072 = !DILocation(line: 1219, column: 7, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5029, file: !1, line: 1219, column: 7)
!5074 = !DILocation(line: 1219, column: 18, scope: !5073)
!5075 = !DILocation(line: 1219, column: 32, scope: !5073)
!5076 = !DILocation(line: 1219, column: 7, scope: !5029)
!5077 = !DILocalVariable(name: "alpha", scope: !5078, file: !1, line: 1222, type: !935)
!5078 = distinct !DILexicalBlock(scope: !5073, file: !1, line: 1220, column: 5)
!5079 = !DILocation(line: 1222, column: 9, scope: !5078)
!5080 = !DILocalVariable(name: "q", scope: !5078, file: !1, line: 1225, type: !1776)
!5081 = !DILocation(line: 1225, column: 19, scope: !5078)
!5082 = !DILocation(line: 1230, column: 9, scope: !5078)
!5083 = !DILocation(line: 1230, column: 16, scope: !5078)
!5084 = !DILocation(line: 1230, column: 25, scope: !5078)
!5085 = !DILocation(line: 1230, column: 32, scope: !5078)
!5086 = !DILocation(line: 1230, column: 24, scope: !5078)
!5087 = !DILocation(line: 1230, column: 8, scope: !5078)
!5088 = !DILocation(line: 1231, column: 50, scope: !5078)
!5089 = !DILocation(line: 1231, column: 61, scope: !5078)
!5090 = !DILocation(line: 1231, column: 13, scope: !5078)
!5091 = !DILocation(line: 1231, column: 12, scope: !5078)
!5092 = !DILocation(line: 1232, column: 35, scope: !5078)
!5093 = !DILocation(line: 1232, column: 13, scope: !5078)
!5094 = !DILocation(line: 1232, column: 12, scope: !5078)
!5095 = !DILocation(line: 1233, column: 11, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5078, file: !1, line: 1233, column: 11)
!5097 = !DILocation(line: 1233, column: 22, scope: !5096)
!5098 = !DILocation(line: 1233, column: 38, scope: !5096)
!5099 = !DILocation(line: 1233, column: 11, scope: !5078)
!5100 = !DILocation(line: 1235, column: 11, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5096, file: !1, line: 1234, column: 9)
!5102 = !DILocation(line: 1237, column: 11, scope: !5101)
!5103 = !DILocation(line: 1239, column: 11, scope: !5101)
!5104 = !DILocation(line: 1241, column: 11, scope: !5101)
!5105 = !DILocation(line: 1242, column: 9, scope: !5101)
!5106 = !DILocalVariable(name: "opacity", scope: !5107, file: !1, line: 1246, type: !935)
!5107 = distinct !DILexicalBlock(scope: !5096, file: !1, line: 1244, column: 9)
!5108 = !DILocation(line: 1246, column: 13, scope: !5107)
!5109 = !DILocation(line: 1248, column: 37, scope: !5107)
!5110 = !DILocation(line: 1248, column: 42, scope: !5107)
!5111 = !DILocation(line: 1249, column: 13, scope: !5107)
!5112 = !DILocation(line: 1249, column: 24, scope: !5107)
!5113 = !DILocation(line: 1249, column: 36, scope: !5107)
!5114 = !DILocation(line: 1248, column: 55, scope: !5107)
!5115 = !DILocation(line: 1248, column: 18, scope: !5107)
!5116 = !DILocation(line: 1250, column: 11, scope: !5107)
!5117 = !DILocation(line: 1251, column: 15, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5107, file: !1, line: 1251, column: 15)
!5119 = !DILocation(line: 1251, column: 18, scope: !5118)
!5120 = !DILocation(line: 1251, column: 26, scope: !5118)
!5121 = !DILocation(line: 1251, column: 15, scope: !5107)
!5122 = !DILocation(line: 1253, column: 15, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5118, file: !1, line: 1252, column: 13)
!5124 = !DILocation(line: 1255, column: 15, scope: !5123)
!5125 = !DILocation(line: 1257, column: 15, scope: !5123)
!5126 = !DILocation(line: 1259, column: 13, scope: !5123)
!5127 = !DILocalVariable(name: "gamma", scope: !5128, file: !1, line: 1263, type: !617)
!5128 = distinct !DILexicalBlock(scope: !5118, file: !1, line: 1261, column: 13)
!5129 = !DILocation(line: 1263, column: 17, scope: !5128)
!5130 = !DILocation(line: 1265, column: 67, scope: !5128)
!5131 = !DILocation(line: 1265, column: 70, scope: !5128)
!5132 = !DILocation(line: 1265, column: 58, scope: !5128)
!5133 = !DILocation(line: 1265, column: 57, scope: !5128)
!5134 = !DILocation(line: 1265, column: 43, scope: !5128)
!5135 = !DILocation(line: 1265, column: 20, scope: !5128)
!5136 = !DILocation(line: 1267, column: 19, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5128, file: !1, line: 1267, column: 19)
!5138 = !DILocation(line: 1267, column: 25, scope: !5137)
!5139 = !DILocation(line: 1267, column: 19, scope: !5128)
!5140 = !DILocation(line: 1267, column: 38, scope: !5137)
!5141 = !DILocation(line: 1267, column: 32, scope: !5137)
!5142 = !DILocation(line: 1269, column: 43, scope: !5128)
!5143 = !DILocation(line: 1269, column: 21, scope: !5128)
!5144 = !DILocation(line: 1269, column: 20, scope: !5128)
!5145 = !DILocation(line: 1270, column: 15, scope: !5128)
!5146 = !DILocation(line: 1272, column: 15, scope: !5128)
!5147 = !DILocation(line: 1274, column: 15, scope: !5128)
!5148 = !DILocation(line: 1276, column: 19, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5128, file: !1, line: 1276, column: 19)
!5150 = !DILocation(line: 1276, column: 30, scope: !5149)
!5151 = !DILocation(line: 1276, column: 46, scope: !5149)
!5152 = !DILocation(line: 1276, column: 57, scope: !5149)
!5153 = !DILocation(line: 1276, column: 44, scope: !5149)
!5154 = !DILocation(line: 1276, column: 19, scope: !5128)
!5155 = !DILocation(line: 1278, column: 49, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5149, file: !1, line: 1277, column: 17)
!5157 = !DILocation(line: 1278, column: 60, scope: !5156)
!5158 = !DILocation(line: 1278, column: 19, scope: !5156)
!5159 = !DILocation(line: 1278, column: 30, scope: !5156)
!5160 = !DILocation(line: 1278, column: 48, scope: !5156)
!5161 = !DILocation(line: 1279, column: 58, scope: !5156)
!5162 = !DILocation(line: 1279, column: 65, scope: !5156)
!5163 = !DILocation(line: 1279, column: 19, scope: !5156)
!5164 = !DILocation(line: 1279, column: 30, scope: !5156)
!5165 = !DILocation(line: 1279, column: 47, scope: !5156)
!5166 = !DILocation(line: 1280, column: 17, scope: !5156)
!5167 = !DILocation(line: 1283, column: 31, scope: !5078)
!5168 = !DILocation(line: 1283, column: 38, scope: !5078)
!5169 = !DILocation(line: 1283, column: 44, scope: !5078)
!5170 = !DILocation(line: 1283, column: 7, scope: !5078)
!5171 = !DILocation(line: 1283, column: 18, scope: !5078)
!5172 = !DILocation(line: 1283, column: 30, scope: !5078)
!5173 = !DILocation(line: 1284, column: 5, scope: !5078)
!5174 = !DILocation(line: 1285, column: 10, scope: !5029)
!5175 = !DILocation(line: 1285, column: 17, scope: !5029)
!5176 = !DILocation(line: 1285, column: 3, scope: !5029)
!5177 = distinct !DISubprogram(name: "DitherImage", scope: !1, file: !1, line: 1872, type: !3638, scopeLine: 1873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!5178 = !DILocalVariable(name: "image", arg: 1, scope: !5177, file: !1, line: 1872, type: !652)
!5179 = !DILocation(line: 1872, column: 45, scope: !5177)
!5180 = !DILocalVariable(name: "cube_info", arg: 2, scope: !5177, file: !1, line: 1872, type: !938)
!5181 = !DILocation(line: 1872, column: 61, scope: !5177)
!5182 = !DILocalVariable(name: "image_view", scope: !5177, file: !1, line: 1875, type: !1382)
!5183 = !DILocation(line: 1875, column: 6, scope: !5177)
!5184 = !DILocalVariable(name: "status", scope: !5177, file: !1, line: 1878, type: !575)
!5185 = !DILocation(line: 1878, column: 5, scope: !5177)
!5186 = !DILocalVariable(name: "i", scope: !5177, file: !1, line: 1881, type: !640)
!5187 = !DILocation(line: 1881, column: 5, scope: !5177)
!5188 = !DILocalVariable(name: "depth", scope: !5177, file: !1, line: 1884, type: !570)
!5189 = !DILocation(line: 1884, column: 5, scope: !5177)
!5190 = !DILocation(line: 1886, column: 7, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5177, file: !1, line: 1886, column: 7)
!5192 = !DILocation(line: 1886, column: 18, scope: !5191)
!5193 = !DILocation(line: 1886, column: 33, scope: !5191)
!5194 = !DILocation(line: 1886, column: 47, scope: !5191)
!5195 = !DILocation(line: 1886, column: 7, scope: !5177)
!5196 = !DILocation(line: 1887, column: 33, scope: !5191)
!5197 = !DILocation(line: 1887, column: 39, scope: !5191)
!5198 = !DILocation(line: 1887, column: 12, scope: !5191)
!5199 = !DILocation(line: 1887, column: 5, scope: !5191)
!5200 = !DILocation(line: 1891, column: 28, scope: !5177)
!5201 = !DILocation(line: 1891, column: 39, scope: !5177)
!5202 = !DILocation(line: 1891, column: 10, scope: !5177)
!5203 = !DILocation(line: 1893, column: 3, scope: !5177)
!5204 = !DILocation(line: 1893, column: 14, scope: !5177)
!5205 = !DILocation(line: 1893, column: 15, scope: !5177)
!5206 = !DILocation(line: 1894, column: 3, scope: !5177)
!5207 = !DILocation(line: 1894, column: 14, scope: !5177)
!5208 = !DILocation(line: 1894, column: 15, scope: !5177)
!5209 = !DILocation(line: 1895, column: 25, scope: !5177)
!5210 = !DILocation(line: 1895, column: 32, scope: !5177)
!5211 = !DILocation(line: 1895, column: 50, scope: !5177)
!5212 = !DILocation(line: 1895, column: 57, scope: !5177)
!5213 = !DILocation(line: 1895, column: 5, scope: !5177)
!5214 = !DILocation(line: 1895, column: 4, scope: !5177)
!5215 = !DILocation(line: 1896, column: 13, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5177, file: !1, line: 1896, column: 3)
!5217 = !DILocation(line: 1896, column: 8, scope: !5216)
!5218 = !DILocation(line: 1896, column: 17, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5216, file: !1, line: 1896, column: 3)
!5220 = !DILocation(line: 1896, column: 19, scope: !5219)
!5221 = !DILocation(line: 1896, column: 3, scope: !5216)
!5222 = !DILocation(line: 1897, column: 6, scope: !5219)
!5223 = !DILocation(line: 1897, column: 5, scope: !5219)
!5224 = !DILocation(line: 1896, column: 30, scope: !5219)
!5225 = !DILocation(line: 1896, column: 3, scope: !5219)
!5226 = distinct !{!5226, !5221, !5227}
!5227 = !DILocation(line: 1897, column: 9, scope: !5216)
!5228 = !DILocation(line: 1898, column: 24, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5177, file: !1, line: 1898, column: 7)
!5230 = !DILocation(line: 1898, column: 21, scope: !5229)
!5231 = !DILocation(line: 1898, column: 53, scope: !5229)
!5232 = !DILocation(line: 1898, column: 60, scope: !5229)
!5233 = !DILocation(line: 1898, column: 78, scope: !5229)
!5234 = !DILocation(line: 1898, column: 85, scope: !5229)
!5235 = !DILocation(line: 1898, column: 33, scope: !5229)
!5236 = !DILocation(line: 1898, column: 31, scope: !5229)
!5237 = !DILocation(line: 1898, column: 7, scope: !5177)
!5238 = !DILocation(line: 1899, column: 10, scope: !5229)
!5239 = !DILocation(line: 1899, column: 5, scope: !5229)
!5240 = !DILocation(line: 1900, column: 3, scope: !5177)
!5241 = !DILocation(line: 1900, column: 14, scope: !5177)
!5242 = !DILocation(line: 1900, column: 20, scope: !5177)
!5243 = !DILocation(line: 1901, column: 36, scope: !5177)
!5244 = !DILocation(line: 1901, column: 43, scope: !5177)
!5245 = !DILocation(line: 1901, column: 51, scope: !5177)
!5246 = !DILocation(line: 1901, column: 58, scope: !5177)
!5247 = !DILocation(line: 1901, column: 50, scope: !5177)
!5248 = !DILocation(line: 1901, column: 3, scope: !5177)
!5249 = !DILocation(line: 1901, column: 14, scope: !5177)
!5250 = !DILocation(line: 1901, column: 18, scope: !5177)
!5251 = !DILocation(line: 1902, column: 40, scope: !5177)
!5252 = !DILocation(line: 1902, column: 47, scope: !5177)
!5253 = !DILocation(line: 1902, column: 54, scope: !5177)
!5254 = !DILocation(line: 1902, column: 14, scope: !5177)
!5255 = !DILocation(line: 1902, column: 13, scope: !5177)
!5256 = !DILocation(line: 1903, column: 7, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5177, file: !1, line: 1903, column: 7)
!5258 = !DILocation(line: 1903, column: 13, scope: !5257)
!5259 = !DILocation(line: 1903, column: 7, scope: !5177)
!5260 = !DILocation(line: 1904, column: 15, scope: !5257)
!5261 = !DILocation(line: 1904, column: 21, scope: !5257)
!5262 = !DILocation(line: 1904, column: 32, scope: !5257)
!5263 = !DILocation(line: 1904, column: 42, scope: !5257)
!5264 = !DILocation(line: 1904, column: 47, scope: !5257)
!5265 = !DILocation(line: 1904, column: 5, scope: !5257)
!5266 = !DILocation(line: 1905, column: 26, scope: !5177)
!5267 = !DILocation(line: 1905, column: 32, scope: !5177)
!5268 = !DILocation(line: 1905, column: 43, scope: !5177)
!5269 = !DILocation(line: 1905, column: 10, scope: !5177)
!5270 = !DILocation(line: 1905, column: 9, scope: !5177)
!5271 = !DILocation(line: 1906, column: 31, scope: !5177)
!5272 = !DILocation(line: 1906, column: 14, scope: !5177)
!5273 = !DILocation(line: 1906, column: 13, scope: !5177)
!5274 = !DILocation(line: 1907, column: 10, scope: !5177)
!5275 = !DILocation(line: 1907, column: 3, scope: !5177)
!5276 = !DILocation(line: 1908, column: 1, scope: !5177)
!5277 = distinct !DISubprogram(name: "ClosestColor", scope: !1, file: !1, line: 1063, type: !4622, scopeLine: 1065, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!5278 = !DILocalVariable(name: "image", arg: 1, scope: !5277, file: !1, line: 1063, type: !854)
!5279 = !DILocation(line: 1063, column: 39, scope: !5277)
!5280 = !DILocalVariable(name: "cube_info", arg: 2, scope: !5277, file: !1, line: 1063, type: !938)
!5281 = !DILocation(line: 1063, column: 55, scope: !5277)
!5282 = !DILocalVariable(name: "node_info", arg: 3, scope: !5277, file: !1, line: 1064, type: !3784)
!5283 = !DILocation(line: 1064, column: 19, scope: !5277)
!5284 = !DILocalVariable(name: "i", scope: !5277, file: !1, line: 1067, type: !640)
!5285 = !DILocation(line: 1067, column: 5, scope: !5277)
!5286 = !DILocalVariable(name: "number_children", scope: !5277, file: !1, line: 1070, type: !570)
!5287 = !DILocation(line: 1070, column: 5, scope: !5277)
!5288 = !DILocation(line: 1075, column: 19, scope: !5277)
!5289 = !DILocation(line: 1075, column: 30, scope: !5277)
!5290 = !DILocation(line: 1075, column: 46, scope: !5277)
!5291 = !DILocation(line: 1075, column: 18, scope: !5277)
!5292 = !DILocation(line: 1076, column: 9, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5277, file: !1, line: 1076, column: 3)
!5294 = !DILocation(line: 1076, column: 8, scope: !5293)
!5295 = !DILocation(line: 1076, column: 13, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5293, file: !1, line: 1076, column: 3)
!5297 = !DILocation(line: 1076, column: 27, scope: !5296)
!5298 = !DILocation(line: 1076, column: 15, scope: !5296)
!5299 = !DILocation(line: 1076, column: 3, scope: !5293)
!5300 = !DILocation(line: 1077, column: 9, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5296, file: !1, line: 1077, column: 9)
!5302 = !DILocation(line: 1077, column: 20, scope: !5301)
!5303 = !DILocation(line: 1077, column: 26, scope: !5301)
!5304 = !DILocation(line: 1077, column: 29, scope: !5301)
!5305 = !DILocation(line: 1077, column: 9, scope: !5296)
!5306 = !DILocation(line: 1078, column: 20, scope: !5301)
!5307 = !DILocation(line: 1078, column: 26, scope: !5301)
!5308 = !DILocation(line: 1078, column: 36, scope: !5301)
!5309 = !DILocation(line: 1078, column: 47, scope: !5301)
!5310 = !DILocation(line: 1078, column: 53, scope: !5301)
!5311 = !DILocation(line: 1078, column: 7, scope: !5301)
!5312 = !DILocation(line: 1077, column: 45, scope: !5301)
!5313 = !DILocation(line: 1076, column: 45, scope: !5296)
!5314 = !DILocation(line: 1076, column: 3, scope: !5296)
!5315 = distinct !{!5315, !5299, !5316}
!5316 = !DILocation(line: 1078, column: 55, scope: !5293)
!5317 = !DILocation(line: 1079, column: 7, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5277, file: !1, line: 1079, column: 7)
!5319 = !DILocation(line: 1079, column: 18, scope: !5318)
!5320 = !DILocation(line: 1079, column: 32, scope: !5318)
!5321 = !DILocation(line: 1079, column: 7, scope: !5277)
!5322 = !DILocalVariable(name: "pixel", scope: !5323, file: !1, line: 1082, type: !935)
!5323 = distinct !DILexicalBlock(scope: !5318, file: !1, line: 1080, column: 5)
!5324 = !DILocation(line: 1082, column: 9, scope: !5323)
!5325 = !DILocalVariable(name: "alpha", scope: !5323, file: !1, line: 1085, type: !935)
!5326 = !DILocation(line: 1085, column: 9, scope: !5323)
!5327 = !DILocalVariable(name: "beta", scope: !5323, file: !1, line: 1086, type: !935)
!5328 = !DILocation(line: 1086, column: 9, scope: !5323)
!5329 = !DILocalVariable(name: "distance", scope: !5323, file: !1, line: 1087, type: !935)
!5330 = !DILocation(line: 1087, column: 9, scope: !5323)
!5331 = !DILocalVariable(name: "p", scope: !5323, file: !1, line: 1090, type: !1776)
!5332 = !DILocation(line: 1090, column: 19, scope: !5323)
!5333 = !DILocalVariable(name: "q", scope: !5323, file: !1, line: 1093, type: !5334)
!5334 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1005)
!5335 = !DILocation(line: 1093, column: 19, scope: !5323)
!5336 = !DILocation(line: 1098, column: 9, scope: !5323)
!5337 = !DILocation(line: 1098, column: 16, scope: !5323)
!5338 = !DILocation(line: 1098, column: 25, scope: !5323)
!5339 = !DILocation(line: 1098, column: 36, scope: !5323)
!5340 = !DILocation(line: 1098, column: 24, scope: !5323)
!5341 = !DILocation(line: 1098, column: 8, scope: !5323)
!5342 = !DILocation(line: 1099, column: 11, scope: !5323)
!5343 = !DILocation(line: 1099, column: 22, scope: !5323)
!5344 = !DILocation(line: 1099, column: 8, scope: !5323)
!5345 = !DILocation(line: 1100, column: 12, scope: !5323)
!5346 = !DILocation(line: 1101, column: 11, scope: !5323)
!5347 = !DILocation(line: 1102, column: 11, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5323, file: !1, line: 1102, column: 11)
!5349 = !DILocation(line: 1102, column: 22, scope: !5348)
!5350 = !DILocation(line: 1102, column: 38, scope: !5348)
!5351 = !DILocation(line: 1102, column: 11, scope: !5323)
!5352 = !DILocation(line: 1104, column: 48, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5348, file: !1, line: 1103, column: 9)
!5354 = !DILocation(line: 1104, column: 47, scope: !5353)
!5355 = !DILocation(line: 1104, column: 17, scope: !5353)
!5356 = !DILocation(line: 1104, column: 16, scope: !5353)
!5357 = !DILocation(line: 1105, column: 47, scope: !5353)
!5358 = !DILocation(line: 1105, column: 46, scope: !5353)
!5359 = !DILocation(line: 1105, column: 16, scope: !5353)
!5360 = !DILocation(line: 1105, column: 15, scope: !5353)
!5361 = !DILocation(line: 1106, column: 9, scope: !5353)
!5362 = !DILocation(line: 1107, column: 13, scope: !5323)
!5363 = !DILocation(line: 1107, column: 19, scope: !5323)
!5364 = !DILocation(line: 1107, column: 18, scope: !5323)
!5365 = !DILocation(line: 1107, column: 34, scope: !5323)
!5366 = !DILocation(line: 1107, column: 39, scope: !5323)
!5367 = !DILocation(line: 1107, column: 38, scope: !5323)
!5368 = !DILocation(line: 1107, column: 33, scope: !5323)
!5369 = !DILocation(line: 1107, column: 12, scope: !5323)
!5370 = !DILocation(line: 1108, column: 16, scope: !5323)
!5371 = !DILocation(line: 1108, column: 22, scope: !5323)
!5372 = !DILocation(line: 1108, column: 21, scope: !5323)
!5373 = !DILocation(line: 1108, column: 15, scope: !5323)
!5374 = !DILocation(line: 1109, column: 11, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5323, file: !1, line: 1109, column: 11)
!5376 = !DILocation(line: 1109, column: 23, scope: !5375)
!5377 = !DILocation(line: 1109, column: 34, scope: !5375)
!5378 = !DILocation(line: 1109, column: 20, scope: !5375)
!5379 = !DILocation(line: 1109, column: 11, scope: !5323)
!5380 = !DILocation(line: 1111, column: 17, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5375, file: !1, line: 1110, column: 9)
!5382 = !DILocation(line: 1111, column: 23, scope: !5381)
!5383 = !DILocation(line: 1111, column: 22, scope: !5381)
!5384 = !DILocation(line: 1111, column: 40, scope: !5381)
!5385 = !DILocation(line: 1111, column: 45, scope: !5381)
!5386 = !DILocation(line: 1111, column: 44, scope: !5381)
!5387 = !DILocation(line: 1111, column: 39, scope: !5381)
!5388 = !DILocation(line: 1111, column: 16, scope: !5381)
!5389 = !DILocation(line: 1112, column: 21, scope: !5381)
!5390 = !DILocation(line: 1112, column: 27, scope: !5381)
!5391 = !DILocation(line: 1112, column: 26, scope: !5381)
!5392 = !DILocation(line: 1112, column: 19, scope: !5381)
!5393 = !DILocation(line: 1113, column: 15, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5381, file: !1, line: 1113, column: 15)
!5395 = !DILocation(line: 1113, column: 27, scope: !5394)
!5396 = !DILocation(line: 1113, column: 38, scope: !5394)
!5397 = !DILocation(line: 1113, column: 24, scope: !5394)
!5398 = !DILocation(line: 1113, column: 15, scope: !5381)
!5399 = !DILocation(line: 1115, column: 21, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5394, file: !1, line: 1114, column: 13)
!5401 = !DILocation(line: 1115, column: 27, scope: !5400)
!5402 = !DILocation(line: 1115, column: 26, scope: !5400)
!5403 = !DILocation(line: 1115, column: 43, scope: !5400)
!5404 = !DILocation(line: 1115, column: 48, scope: !5400)
!5405 = !DILocation(line: 1115, column: 47, scope: !5400)
!5406 = !DILocation(line: 1115, column: 42, scope: !5400)
!5407 = !DILocation(line: 1115, column: 20, scope: !5400)
!5408 = !DILocation(line: 1116, column: 25, scope: !5400)
!5409 = !DILocation(line: 1116, column: 31, scope: !5400)
!5410 = !DILocation(line: 1116, column: 30, scope: !5400)
!5411 = !DILocation(line: 1116, column: 23, scope: !5400)
!5412 = !DILocation(line: 1117, column: 19, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5400, file: !1, line: 1117, column: 19)
!5414 = !DILocation(line: 1117, column: 31, scope: !5413)
!5415 = !DILocation(line: 1117, column: 42, scope: !5413)
!5416 = !DILocation(line: 1117, column: 28, scope: !5413)
!5417 = !DILocation(line: 1117, column: 19, scope: !5400)
!5418 = !DILocation(line: 1119, column: 25, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5413, file: !1, line: 1118, column: 17)
!5420 = !DILocation(line: 1119, column: 31, scope: !5419)
!5421 = !DILocation(line: 1119, column: 30, scope: !5419)
!5422 = !DILocation(line: 1119, column: 24, scope: !5419)
!5423 = !DILocation(line: 1120, column: 29, scope: !5419)
!5424 = !DILocation(line: 1120, column: 35, scope: !5419)
!5425 = !DILocation(line: 1120, column: 34, scope: !5419)
!5426 = !DILocation(line: 1120, column: 27, scope: !5419)
!5427 = !DILocation(line: 1121, column: 23, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5419, file: !1, line: 1121, column: 23)
!5429 = !DILocation(line: 1121, column: 35, scope: !5428)
!5430 = !DILocation(line: 1121, column: 46, scope: !5428)
!5431 = !DILocation(line: 1121, column: 32, scope: !5428)
!5432 = !DILocation(line: 1121, column: 23, scope: !5419)
!5433 = !DILocation(line: 1123, column: 43, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5428, file: !1, line: 1122, column: 21)
!5435 = !DILocation(line: 1123, column: 23, scope: !5434)
!5436 = !DILocation(line: 1123, column: 34, scope: !5434)
!5437 = !DILocation(line: 1123, column: 42, scope: !5434)
!5438 = !DILocation(line: 1124, column: 47, scope: !5434)
!5439 = !DILocation(line: 1124, column: 58, scope: !5434)
!5440 = !DILocation(line: 1124, column: 23, scope: !5434)
!5441 = !DILocation(line: 1124, column: 34, scope: !5434)
!5442 = !DILocation(line: 1124, column: 46, scope: !5434)
!5443 = !DILocation(line: 1125, column: 21, scope: !5434)
!5444 = !DILocation(line: 1126, column: 17, scope: !5419)
!5445 = !DILocation(line: 1127, column: 13, scope: !5400)
!5446 = !DILocation(line: 1128, column: 9, scope: !5381)
!5447 = !DILocation(line: 1129, column: 5, scope: !5323)
!5448 = !DILocation(line: 1130, column: 1, scope: !5277)
!5449 = distinct !DISubprogram(name: "GetPixelLuma", scope: !5450, file: !5450, line: 116, type: !5451, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!5450 = !DIFile(filename: "./magick/pixel-accessor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!5451 = !DISubroutineType(types: !5452)
!5452 = !{!935, !5453, !1466}
!5453 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !854)
!5454 = !DILocalVariable(name: "image", arg: 1, scope: !5449, file: !5450, line: 116, type: !5453)
!5455 = !DILocation(line: 116, column: 65, scope: !5449)
!5456 = !DILocalVariable(name: "pixel", arg: 2, scope: !5449, file: !5450, line: 117, type: !1466)
!5457 = !DILocation(line: 117, column: 31, scope: !5449)
!5458 = !DILocation(line: 119, column: 7, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5449, file: !5450, line: 119, column: 7)
!5460 = !DILocation(line: 119, column: 14, scope: !5459)
!5461 = !DILocation(line: 119, column: 25, scope: !5459)
!5462 = !DILocation(line: 119, column: 7, scope: !5449)
!5463 = !DILocation(line: 120, column: 29, scope: !5459)
!5464 = !DILocation(line: 120, column: 36, scope: !5459)
!5465 = !DILocation(line: 120, column: 12, scope: !5459)
!5466 = !DILocation(line: 120, column: 5, scope: !5459)
!5467 = !DILocation(line: 121, column: 20, scope: !5449)
!5468 = !DILocation(line: 121, column: 27, scope: !5449)
!5469 = !DILocation(line: 121, column: 19, scope: !5449)
!5470 = !DILocation(line: 121, column: 41, scope: !5449)
!5471 = !DILocation(line: 121, column: 48, scope: !5449)
!5472 = !DILocation(line: 121, column: 40, scope: !5449)
!5473 = !DILocation(line: 121, column: 30, scope: !5449)
!5474 = !DILocation(line: 121, column: 64, scope: !5449)
!5475 = !DILocation(line: 121, column: 71, scope: !5449)
!5476 = !DILocation(line: 121, column: 63, scope: !5449)
!5477 = !DILocation(line: 121, column: 53, scope: !5449)
!5478 = !DILocation(line: 121, column: 3, scope: !5449)
!5479 = !DILocation(line: 122, column: 1, scope: !5449)
!5480 = distinct !DISubprogram(name: "ClampToQuantum", scope: !101, file: !101, line: 87, type: !4839, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!5481 = !DILocalVariable(name: "value", arg: 1, scope: !5480, file: !101, line: 87, type: !4841)
!5482 = !DILocation(line: 87, column: 59, scope: !5480)
!5483 = !DILocation(line: 92, column: 7, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5480, file: !101, line: 92, column: 7)
!5485 = !DILocation(line: 92, column: 13, scope: !5484)
!5486 = !DILocation(line: 92, column: 7, scope: !5480)
!5487 = !DILocation(line: 93, column: 5, scope: !5484)
!5488 = !DILocation(line: 94, column: 7, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5480, file: !101, line: 94, column: 7)
!5490 = !DILocation(line: 94, column: 13, scope: !5489)
!5491 = !DILocation(line: 94, column: 7, scope: !5480)
!5492 = !DILocation(line: 95, column: 5, scope: !5489)
!5493 = !DILocation(line: 96, column: 21, scope: !5480)
!5494 = !DILocation(line: 96, column: 26, scope: !5480)
!5495 = !DILocation(line: 96, column: 10, scope: !5480)
!5496 = !DILocation(line: 96, column: 3, scope: !5480)
!5497 = !DILocation(line: 98, column: 1, scope: !5480)
!5498 = distinct !DISubprogram(name: "FloydSteinbergDither", scope: !1, file: !1, line: 1453, type: !3638, scopeLine: 1454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!5499 = !DILocalVariable(name: "image", arg: 1, scope: !5498, file: !1, line: 1453, type: !652)
!5500 = !DILocation(line: 1453, column: 54, scope: !5498)
!5501 = !DILocalVariable(name: "cube_info", arg: 2, scope: !5498, file: !1, line: 1453, type: !938)
!5502 = !DILocation(line: 1453, column: 70, scope: !5498)
!5503 = !DILocalVariable(name: "image_view", scope: !5498, file: !1, line: 1458, type: !1382)
!5504 = !DILocation(line: 1458, column: 6, scope: !5498)
!5505 = !DILocalVariable(name: "exception", scope: !5498, file: !1, line: 1461, type: !1387)
!5506 = !DILocation(line: 1461, column: 6, scope: !5498)
!5507 = !DILocalVariable(name: "status", scope: !5498, file: !1, line: 1464, type: !575)
!5508 = !DILocation(line: 1464, column: 5, scope: !5498)
!5509 = !DILocalVariable(name: "pixels", scope: !5498, file: !1, line: 1467, type: !1004)
!5510 = !DILocation(line: 1467, column: 7, scope: !5498)
!5511 = !DILocalVariable(name: "y", scope: !5498, file: !1, line: 1470, type: !640)
!5512 = !DILocation(line: 1470, column: 5, scope: !5498)
!5513 = !DILocation(line: 1475, column: 32, scope: !5498)
!5514 = !DILocation(line: 1475, column: 39, scope: !5498)
!5515 = !DILocation(line: 1475, column: 10, scope: !5498)
!5516 = !DILocation(line: 1475, column: 9, scope: !5498)
!5517 = !DILocation(line: 1476, column: 7, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5498, file: !1, line: 1476, column: 7)
!5519 = !DILocation(line: 1476, column: 14, scope: !5518)
!5520 = !DILocation(line: 1476, column: 7, scope: !5498)
!5521 = !DILocation(line: 1477, column: 5, scope: !5518)
!5522 = !DILocation(line: 1478, column: 15, scope: !5498)
!5523 = !DILocation(line: 1478, column: 22, scope: !5498)
!5524 = !DILocation(line: 1478, column: 12, scope: !5498)
!5525 = !DILocation(line: 1479, column: 9, scope: !5498)
!5526 = !DILocation(line: 1480, column: 40, scope: !5498)
!5527 = !DILocation(line: 1480, column: 46, scope: !5498)
!5528 = !DILocation(line: 1480, column: 14, scope: !5498)
!5529 = !DILocation(line: 1480, column: 13, scope: !5498)
!5530 = !DILocation(line: 1481, column: 9, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5498, file: !1, line: 1481, column: 3)
!5532 = !DILocation(line: 1481, column: 8, scope: !5531)
!5533 = !DILocation(line: 1481, column: 13, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5531, file: !1, line: 1481, column: 3)
!5535 = !DILocation(line: 1481, column: 27, scope: !5534)
!5536 = !DILocation(line: 1481, column: 34, scope: !5534)
!5537 = !DILocation(line: 1481, column: 15, scope: !5534)
!5538 = !DILocation(line: 1481, column: 3, scope: !5531)
!5539 = !DILocalVariable(name: "id", scope: !5540, file: !1, line: 1484, type: !5541)
!5540 = distinct !DILexicalBlock(scope: !5534, file: !1, line: 1482, column: 3)
!5541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !453)
!5542 = !DILocation(line: 1484, column: 7, scope: !5540)
!5543 = !DILocation(line: 1484, column: 12, scope: !5540)
!5544 = !DILocalVariable(name: "cube", scope: !5540, file: !1, line: 1487, type: !939)
!5545 = !DILocation(line: 1487, column: 7, scope: !5540)
!5546 = !DILocalVariable(name: "current", scope: !5540, file: !1, line: 1490, type: !1005)
!5547 = !DILocation(line: 1490, column: 8, scope: !5540)
!5548 = !DILocalVariable(name: "previous", scope: !5540, file: !1, line: 1491, type: !1005)
!5549 = !DILocation(line: 1491, column: 8, scope: !5540)
!5550 = !DILocalVariable(name: "indexes", scope: !5540, file: !1, line: 1494, type: !1773)
!5551 = !DILocation(line: 1494, column: 17, scope: !5540)
!5552 = !DILocalVariable(name: "q", scope: !5540, file: !1, line: 1497, type: !1776)
!5553 = !DILocation(line: 1497, column: 17, scope: !5540)
!5554 = !DILocalVariable(name: "x", scope: !5540, file: !1, line: 1500, type: !640)
!5555 = !DILocation(line: 1500, column: 7, scope: !5540)
!5556 = !DILocalVariable(name: "index", scope: !5540, file: !1, line: 1503, type: !570)
!5557 = !DILocation(line: 1503, column: 7, scope: !5540)
!5558 = !DILocalVariable(name: "v", scope: !5540, file: !1, line: 1506, type: !640)
!5559 = !DILocation(line: 1506, column: 7, scope: !5540)
!5560 = !DILocation(line: 1508, column: 9, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5540, file: !1, line: 1508, column: 9)
!5562 = !DILocation(line: 1508, column: 16, scope: !5561)
!5563 = !DILocation(line: 1508, column: 9, scope: !5540)
!5564 = !DILocation(line: 1509, column: 7, scope: !5561)
!5565 = !DILocation(line: 1510, column: 35, scope: !5540)
!5566 = !DILocation(line: 1510, column: 48, scope: !5540)
!5567 = !DILocation(line: 1510, column: 50, scope: !5540)
!5568 = !DILocation(line: 1510, column: 57, scope: !5540)
!5569 = !DILocation(line: 1510, column: 67, scope: !5540)
!5570 = !DILocation(line: 1510, column: 7, scope: !5540)
!5571 = !DILocation(line: 1510, column: 6, scope: !5540)
!5572 = !DILocation(line: 1511, column: 9, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5540, file: !1, line: 1511, column: 9)
!5574 = !DILocation(line: 1511, column: 11, scope: !5573)
!5575 = !DILocation(line: 1511, column: 9, scope: !5540)
!5576 = !DILocation(line: 1513, column: 15, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5573, file: !1, line: 1512, column: 7)
!5578 = !DILocation(line: 1514, column: 9, scope: !5577)
!5579 = !DILocation(line: 1516, column: 45, scope: !5540)
!5580 = !DILocation(line: 1516, column: 13, scope: !5540)
!5581 = !DILocation(line: 1516, column: 12, scope: !5540)
!5582 = !DILocation(line: 1517, column: 12, scope: !5540)
!5583 = !DILocation(line: 1517, column: 11, scope: !5540)
!5584 = !DILocation(line: 1518, column: 13, scope: !5540)
!5585 = !DILocation(line: 1518, column: 20, scope: !5540)
!5586 = !DILocation(line: 1518, column: 25, scope: !5540)
!5587 = !DILocation(line: 1518, column: 27, scope: !5540)
!5588 = !DILocation(line: 1518, column: 35, scope: !5540)
!5589 = !DILocation(line: 1518, column: 42, scope: !5540)
!5590 = !DILocation(line: 1518, column: 34, scope: !5540)
!5591 = !DILocation(line: 1518, column: 23, scope: !5540)
!5592 = !DILocation(line: 1518, column: 12, scope: !5540)
!5593 = !DILocation(line: 1519, column: 14, scope: !5540)
!5594 = !DILocation(line: 1519, column: 21, scope: !5540)
!5595 = !DILocation(line: 1519, column: 27, scope: !5540)
!5596 = !DILocation(line: 1519, column: 28, scope: !5540)
!5597 = !DILocation(line: 1519, column: 32, scope: !5540)
!5598 = !DILocation(line: 1519, column: 40, scope: !5540)
!5599 = !DILocation(line: 1519, column: 47, scope: !5540)
!5600 = !DILocation(line: 1519, column: 39, scope: !5540)
!5601 = !DILocation(line: 1519, column: 24, scope: !5540)
!5602 = !DILocation(line: 1519, column: 13, scope: !5540)
!5603 = !DILocation(line: 1520, column: 19, scope: !5540)
!5604 = !DILocation(line: 1520, column: 21, scope: !5540)
!5605 = !DILocation(line: 1520, column: 18, scope: !5540)
!5606 = !DILocation(line: 1520, column: 7, scope: !5540)
!5607 = !DILocation(line: 1520, column: 6, scope: !5540)
!5608 = !DILocation(line: 1521, column: 11, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5540, file: !1, line: 1521, column: 5)
!5610 = !DILocation(line: 1521, column: 10, scope: !5609)
!5611 = !DILocation(line: 1521, column: 15, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5609, file: !1, line: 1521, column: 5)
!5613 = !DILocation(line: 1521, column: 29, scope: !5612)
!5614 = !DILocation(line: 1521, column: 36, scope: !5612)
!5615 = !DILocation(line: 1521, column: 17, scope: !5612)
!5616 = !DILocation(line: 1521, column: 5, scope: !5609)
!5617 = !DILocalVariable(name: "color", scope: !5618, file: !1, line: 1524, type: !955)
!5618 = distinct !DILexicalBlock(scope: !5612, file: !1, line: 1522, column: 5)
!5619 = !DILocation(line: 1524, column: 9, scope: !5618)
!5620 = !DILocalVariable(name: "pixel", scope: !5618, file: !1, line: 1525, type: !955)
!5621 = !DILocation(line: 1525, column: 9, scope: !5618)
!5622 = !DILocalVariable(name: "i", scope: !5618, file: !1, line: 1528, type: !640)
!5623 = !DILocation(line: 1528, column: 9, scope: !5618)
!5624 = !DILocalVariable(name: "u", scope: !5618, file: !1, line: 1531, type: !640)
!5625 = !DILocation(line: 1531, column: 9, scope: !5618)
!5626 = !DILocation(line: 1533, column: 10, scope: !5618)
!5627 = !DILocation(line: 1533, column: 12, scope: !5618)
!5628 = !DILocation(line: 1533, column: 9, scope: !5618)
!5629 = !DILocation(line: 1533, column: 32, scope: !5618)
!5630 = !DILocation(line: 1533, column: 39, scope: !5618)
!5631 = !DILocation(line: 1533, column: 46, scope: !5618)
!5632 = !DILocation(line: 1533, column: 49, scope: !5618)
!5633 = !DILocation(line: 1533, column: 48, scope: !5618)
!5634 = !DILocation(line: 1533, column: 53, scope: !5618)
!5635 = !DILocation(line: 1533, column: 8, scope: !5618)
!5636 = !DILocation(line: 1534, column: 33, scope: !5618)
!5637 = !DILocation(line: 1534, column: 35, scope: !5618)
!5638 = !DILocation(line: 1534, column: 34, scope: !5618)
!5639 = !DILocation(line: 1534, column: 7, scope: !5618)
!5640 = !DILocation(line: 1535, column: 11, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5618, file: !1, line: 1535, column: 11)
!5642 = !DILocation(line: 1535, column: 13, scope: !5641)
!5643 = !DILocation(line: 1535, column: 11, scope: !5618)
!5644 = !DILocation(line: 1537, column: 24, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5641, file: !1, line: 1536, column: 9)
!5646 = !DILocation(line: 1537, column: 32, scope: !5645)
!5647 = !DILocation(line: 1537, column: 34, scope: !5645)
!5648 = !DILocation(line: 1537, column: 33, scope: !5645)
!5649 = !DILocation(line: 1537, column: 37, scope: !5645)
!5650 = !DILocation(line: 1537, column: 23, scope: !5645)
!5651 = !DILocation(line: 1537, column: 40, scope: !5645)
!5652 = !DILocation(line: 1537, column: 17, scope: !5645)
!5653 = !DILocation(line: 1537, column: 20, scope: !5645)
!5654 = !DILocation(line: 1538, column: 26, scope: !5645)
!5655 = !DILocation(line: 1538, column: 34, scope: !5645)
!5656 = !DILocation(line: 1538, column: 36, scope: !5645)
!5657 = !DILocation(line: 1538, column: 35, scope: !5645)
!5658 = !DILocation(line: 1538, column: 39, scope: !5645)
!5659 = !DILocation(line: 1538, column: 25, scope: !5645)
!5660 = !DILocation(line: 1538, column: 44, scope: !5645)
!5661 = !DILocation(line: 1538, column: 17, scope: !5645)
!5662 = !DILocation(line: 1538, column: 22, scope: !5645)
!5663 = !DILocation(line: 1539, column: 25, scope: !5645)
!5664 = !DILocation(line: 1539, column: 33, scope: !5645)
!5665 = !DILocation(line: 1539, column: 35, scope: !5645)
!5666 = !DILocation(line: 1539, column: 34, scope: !5645)
!5667 = !DILocation(line: 1539, column: 38, scope: !5645)
!5668 = !DILocation(line: 1539, column: 24, scope: !5645)
!5669 = !DILocation(line: 1539, column: 42, scope: !5645)
!5670 = !DILocation(line: 1539, column: 17, scope: !5645)
!5671 = !DILocation(line: 1539, column: 21, scope: !5645)
!5672 = !DILocation(line: 1540, column: 20, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5645, file: !1, line: 1540, column: 15)
!5674 = !DILocation(line: 1540, column: 36, scope: !5673)
!5675 = !DILocation(line: 1540, column: 15, scope: !5645)
!5676 = !DILocation(line: 1541, column: 30, scope: !5673)
!5677 = !DILocation(line: 1541, column: 38, scope: !5673)
!5678 = !DILocation(line: 1541, column: 40, scope: !5673)
!5679 = !DILocation(line: 1541, column: 39, scope: !5673)
!5680 = !DILocation(line: 1541, column: 43, scope: !5673)
!5681 = !DILocation(line: 1541, column: 29, scope: !5673)
!5682 = !DILocation(line: 1541, column: 50, scope: !5673)
!5683 = !DILocation(line: 1541, column: 19, scope: !5673)
!5684 = !DILocation(line: 1541, column: 26, scope: !5673)
!5685 = !DILocation(line: 1541, column: 13, scope: !5673)
!5686 = !DILocation(line: 1542, column: 9, scope: !5645)
!5687 = !DILocation(line: 1543, column: 11, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5618, file: !1, line: 1543, column: 11)
!5689 = !DILocation(line: 1543, column: 13, scope: !5688)
!5690 = !DILocation(line: 1543, column: 11, scope: !5618)
!5691 = !DILocation(line: 1545, column: 15, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5693, file: !1, line: 1545, column: 15)
!5693 = distinct !DILexicalBlock(scope: !5688, file: !1, line: 1544, column: 9)
!5694 = !DILocation(line: 1545, column: 30, scope: !5692)
!5695 = !DILocation(line: 1545, column: 37, scope: !5692)
!5696 = !DILocation(line: 1545, column: 44, scope: !5692)
!5697 = !DILocation(line: 1545, column: 17, scope: !5692)
!5698 = !DILocation(line: 1545, column: 15, scope: !5693)
!5699 = !DILocation(line: 1547, column: 26, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5692, file: !1, line: 1546, column: 13)
!5701 = !DILocation(line: 1547, column: 35, scope: !5700)
!5702 = !DILocation(line: 1547, column: 37, scope: !5700)
!5703 = !DILocation(line: 1547, column: 36, scope: !5700)
!5704 = !DILocation(line: 1547, column: 40, scope: !5700)
!5705 = !DILocation(line: 1547, column: 43, scope: !5700)
!5706 = !DILocation(line: 1547, column: 21, scope: !5700)
!5707 = !DILocation(line: 1547, column: 24, scope: !5700)
!5708 = !DILocation(line: 1548, column: 28, scope: !5700)
!5709 = !DILocation(line: 1548, column: 37, scope: !5700)
!5710 = !DILocation(line: 1548, column: 39, scope: !5700)
!5711 = !DILocation(line: 1548, column: 38, scope: !5700)
!5712 = !DILocation(line: 1548, column: 42, scope: !5700)
!5713 = !DILocation(line: 1548, column: 47, scope: !5700)
!5714 = !DILocation(line: 1548, column: 21, scope: !5700)
!5715 = !DILocation(line: 1548, column: 26, scope: !5700)
!5716 = !DILocation(line: 1549, column: 27, scope: !5700)
!5717 = !DILocation(line: 1549, column: 36, scope: !5700)
!5718 = !DILocation(line: 1549, column: 38, scope: !5700)
!5719 = !DILocation(line: 1549, column: 37, scope: !5700)
!5720 = !DILocation(line: 1549, column: 41, scope: !5700)
!5721 = !DILocation(line: 1549, column: 45, scope: !5700)
!5722 = !DILocation(line: 1549, column: 21, scope: !5700)
!5723 = !DILocation(line: 1549, column: 25, scope: !5700)
!5724 = !DILocation(line: 1550, column: 24, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5700, file: !1, line: 1550, column: 19)
!5726 = !DILocation(line: 1550, column: 40, scope: !5725)
!5727 = !DILocation(line: 1550, column: 19, scope: !5700)
!5728 = !DILocation(line: 1551, column: 32, scope: !5725)
!5729 = !DILocation(line: 1551, column: 41, scope: !5725)
!5730 = !DILocation(line: 1551, column: 43, scope: !5725)
!5731 = !DILocation(line: 1551, column: 42, scope: !5725)
!5732 = !DILocation(line: 1551, column: 46, scope: !5725)
!5733 = !DILocation(line: 1551, column: 53, scope: !5725)
!5734 = !DILocation(line: 1551, column: 23, scope: !5725)
!5735 = !DILocation(line: 1551, column: 30, scope: !5725)
!5736 = !DILocation(line: 1551, column: 17, scope: !5725)
!5737 = !DILocation(line: 1552, column: 13, scope: !5700)
!5738 = !DILocation(line: 1553, column: 24, scope: !5693)
!5739 = !DILocation(line: 1553, column: 33, scope: !5693)
!5740 = !DILocation(line: 1553, column: 36, scope: !5693)
!5741 = !DILocation(line: 1553, column: 23, scope: !5693)
!5742 = !DILocation(line: 1553, column: 39, scope: !5693)
!5743 = !DILocation(line: 1553, column: 17, scope: !5693)
!5744 = !DILocation(line: 1553, column: 20, scope: !5693)
!5745 = !DILocation(line: 1554, column: 26, scope: !5693)
!5746 = !DILocation(line: 1554, column: 35, scope: !5693)
!5747 = !DILocation(line: 1554, column: 38, scope: !5693)
!5748 = !DILocation(line: 1554, column: 25, scope: !5693)
!5749 = !DILocation(line: 1554, column: 43, scope: !5693)
!5750 = !DILocation(line: 1554, column: 17, scope: !5693)
!5751 = !DILocation(line: 1554, column: 22, scope: !5693)
!5752 = !DILocation(line: 1555, column: 25, scope: !5693)
!5753 = !DILocation(line: 1555, column: 34, scope: !5693)
!5754 = !DILocation(line: 1555, column: 37, scope: !5693)
!5755 = !DILocation(line: 1555, column: 24, scope: !5693)
!5756 = !DILocation(line: 1555, column: 41, scope: !5693)
!5757 = !DILocation(line: 1555, column: 17, scope: !5693)
!5758 = !DILocation(line: 1555, column: 21, scope: !5693)
!5759 = !DILocation(line: 1556, column: 20, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5693, file: !1, line: 1556, column: 15)
!5761 = !DILocation(line: 1556, column: 36, scope: !5760)
!5762 = !DILocation(line: 1556, column: 15, scope: !5693)
!5763 = !DILocation(line: 1557, column: 30, scope: !5760)
!5764 = !DILocation(line: 1557, column: 39, scope: !5760)
!5765 = !DILocation(line: 1557, column: 42, scope: !5760)
!5766 = !DILocation(line: 1557, column: 29, scope: !5760)
!5767 = !DILocation(line: 1557, column: 49, scope: !5760)
!5768 = !DILocation(line: 1557, column: 19, scope: !5760)
!5769 = !DILocation(line: 1557, column: 26, scope: !5760)
!5770 = !DILocation(line: 1557, column: 13, scope: !5760)
!5771 = !DILocation(line: 1558, column: 15, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5693, file: !1, line: 1558, column: 15)
!5773 = !DILocation(line: 1558, column: 17, scope: !5772)
!5774 = !DILocation(line: 1558, column: 15, scope: !5693)
!5775 = !DILocation(line: 1560, column: 28, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5772, file: !1, line: 1559, column: 13)
!5777 = !DILocation(line: 1560, column: 37, scope: !5776)
!5778 = !DILocation(line: 1560, column: 39, scope: !5776)
!5779 = !DILocation(line: 1560, column: 38, scope: !5776)
!5780 = !DILocation(line: 1560, column: 42, scope: !5776)
!5781 = !DILocation(line: 1560, column: 27, scope: !5776)
!5782 = !DILocation(line: 1560, column: 45, scope: !5776)
!5783 = !DILocation(line: 1560, column: 21, scope: !5776)
!5784 = !DILocation(line: 1560, column: 24, scope: !5776)
!5785 = !DILocation(line: 1561, column: 30, scope: !5776)
!5786 = !DILocation(line: 1561, column: 39, scope: !5776)
!5787 = !DILocation(line: 1561, column: 41, scope: !5776)
!5788 = !DILocation(line: 1561, column: 40, scope: !5776)
!5789 = !DILocation(line: 1561, column: 44, scope: !5776)
!5790 = !DILocation(line: 1561, column: 29, scope: !5776)
!5791 = !DILocation(line: 1561, column: 49, scope: !5776)
!5792 = !DILocation(line: 1561, column: 21, scope: !5776)
!5793 = !DILocation(line: 1561, column: 26, scope: !5776)
!5794 = !DILocation(line: 1562, column: 29, scope: !5776)
!5795 = !DILocation(line: 1562, column: 38, scope: !5776)
!5796 = !DILocation(line: 1562, column: 40, scope: !5776)
!5797 = !DILocation(line: 1562, column: 39, scope: !5776)
!5798 = !DILocation(line: 1562, column: 43, scope: !5776)
!5799 = !DILocation(line: 1562, column: 28, scope: !5776)
!5800 = !DILocation(line: 1562, column: 47, scope: !5776)
!5801 = !DILocation(line: 1562, column: 21, scope: !5776)
!5802 = !DILocation(line: 1562, column: 25, scope: !5776)
!5803 = !DILocation(line: 1563, column: 24, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5776, file: !1, line: 1563, column: 19)
!5805 = !DILocation(line: 1563, column: 40, scope: !5804)
!5806 = !DILocation(line: 1563, column: 19, scope: !5776)
!5807 = !DILocation(line: 1564, column: 34, scope: !5804)
!5808 = !DILocation(line: 1564, column: 43, scope: !5804)
!5809 = !DILocation(line: 1564, column: 45, scope: !5804)
!5810 = !DILocation(line: 1564, column: 44, scope: !5804)
!5811 = !DILocation(line: 1564, column: 48, scope: !5804)
!5812 = !DILocation(line: 1564, column: 33, scope: !5804)
!5813 = !DILocation(line: 1564, column: 55, scope: !5804)
!5814 = !DILocation(line: 1564, column: 23, scope: !5804)
!5815 = !DILocation(line: 1564, column: 30, scope: !5804)
!5816 = !DILocation(line: 1564, column: 17, scope: !5804)
!5817 = !DILocation(line: 1565, column: 13, scope: !5776)
!5818 = !DILocation(line: 1566, column: 9, scope: !5693)
!5819 = !DILocation(line: 1567, column: 51, scope: !5618)
!5820 = !DILocation(line: 1567, column: 34, scope: !5618)
!5821 = !DILocation(line: 1567, column: 17, scope: !5618)
!5822 = !DILocation(line: 1567, column: 13, scope: !5618)
!5823 = !DILocation(line: 1567, column: 16, scope: !5618)
!5824 = !DILocation(line: 1568, column: 53, scope: !5618)
!5825 = !DILocation(line: 1568, column: 36, scope: !5618)
!5826 = !DILocation(line: 1568, column: 19, scope: !5618)
!5827 = !DILocation(line: 1568, column: 13, scope: !5618)
!5828 = !DILocation(line: 1568, column: 18, scope: !5618)
!5829 = !DILocation(line: 1569, column: 52, scope: !5618)
!5830 = !DILocation(line: 1569, column: 35, scope: !5618)
!5831 = !DILocation(line: 1569, column: 18, scope: !5618)
!5832 = !DILocation(line: 1569, column: 13, scope: !5618)
!5833 = !DILocation(line: 1569, column: 17, scope: !5618)
!5834 = !DILocation(line: 1570, column: 16, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5618, file: !1, line: 1570, column: 11)
!5836 = !DILocation(line: 1570, column: 32, scope: !5835)
!5837 = !DILocation(line: 1570, column: 11, scope: !5618)
!5838 = !DILocation(line: 1571, column: 57, scope: !5835)
!5839 = !DILocation(line: 1571, column: 40, scope: !5835)
!5840 = !DILocation(line: 1571, column: 23, scope: !5835)
!5841 = !DILocation(line: 1571, column: 15, scope: !5835)
!5842 = !DILocation(line: 1571, column: 22, scope: !5835)
!5843 = !DILocation(line: 1571, column: 9, scope: !5835)
!5844 = !DILocation(line: 1572, column: 9, scope: !5618)
!5845 = !DILocation(line: 1572, column: 8, scope: !5618)
!5846 = !DILocation(line: 1573, column: 16, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5618, file: !1, line: 1573, column: 11)
!5848 = !DILocation(line: 1573, column: 22, scope: !5847)
!5849 = !DILocation(line: 1573, column: 11, scope: !5847)
!5850 = !DILocation(line: 1573, column: 25, scope: !5847)
!5851 = !DILocation(line: 1573, column: 11, scope: !5618)
!5852 = !DILocalVariable(name: "node_info", scope: !5853, file: !1, line: 1576, type: !943)
!5853 = distinct !DILexicalBlock(scope: !5847, file: !1, line: 1574, column: 9)
!5854 = !DILocation(line: 1576, column: 14, scope: !5853)
!5855 = !DILocalVariable(name: "id", scope: !5853, file: !1, line: 1579, type: !570)
!5856 = !DILocation(line: 1579, column: 13, scope: !5853)
!5857 = !DILocation(line: 1584, column: 26, scope: !5853)
!5858 = !DILocation(line: 1584, column: 20, scope: !5853)
!5859 = !DILocation(line: 1585, column: 21, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5853, file: !1, line: 1585, column: 11)
!5861 = !DILocation(line: 1585, column: 16, scope: !5860)
!5862 = !DILocation(line: 1585, column: 48, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5860, file: !1, line: 1585, column: 11)
!5864 = !DILocation(line: 1585, column: 54, scope: !5863)
!5865 = !DILocation(line: 1585, column: 11, scope: !5860)
!5866 = !DILocation(line: 1587, column: 43, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5863, file: !1, line: 1586, column: 11)
!5868 = !DILocation(line: 1587, column: 16, scope: !5867)
!5869 = !DILocation(line: 1587, column: 15, scope: !5867)
!5870 = !DILocation(line: 1588, column: 17, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5867, file: !1, line: 1588, column: 17)
!5872 = !DILocation(line: 1588, column: 28, scope: !5871)
!5873 = !DILocation(line: 1588, column: 34, scope: !5871)
!5874 = !DILocation(line: 1588, column: 38, scope: !5871)
!5875 = !DILocation(line: 1588, column: 17, scope: !5867)
!5876 = !DILocation(line: 1589, column: 15, scope: !5871)
!5877 = !DILocation(line: 1590, column: 23, scope: !5867)
!5878 = !DILocation(line: 1590, column: 34, scope: !5867)
!5879 = !DILocation(line: 1590, column: 40, scope: !5867)
!5880 = !DILocation(line: 1590, column: 22, scope: !5867)
!5881 = !DILocation(line: 1591, column: 11, scope: !5867)
!5882 = !DILocation(line: 1585, column: 64, scope: !5863)
!5883 = !DILocation(line: 1585, column: 11, scope: !5863)
!5884 = distinct !{!5884, !5865, !5885}
!5885 = !DILocation(line: 1591, column: 11, scope: !5860)
!5886 = !DILocation(line: 1595, column: 16, scope: !5853)
!5887 = !DILocation(line: 1595, column: 23, scope: !5853)
!5888 = !DILocation(line: 1596, column: 16, scope: !5853)
!5889 = !DILocation(line: 1596, column: 24, scope: !5853)
!5890 = !DILocation(line: 1598, column: 24, scope: !5853)
!5891 = !DILocation(line: 1598, column: 36, scope: !5853)
!5892 = !DILocation(line: 1598, column: 47, scope: !5853)
!5893 = !DILocation(line: 1598, column: 11, scope: !5853)
!5894 = !DILocation(line: 1599, column: 40, scope: !5853)
!5895 = !DILocation(line: 1599, column: 16, scope: !5853)
!5896 = !DILocation(line: 1599, column: 22, scope: !5853)
!5897 = !DILocation(line: 1599, column: 11, scope: !5853)
!5898 = !DILocation(line: 1599, column: 24, scope: !5853)
!5899 = !DILocation(line: 1600, column: 9, scope: !5853)
!5900 = !DILocation(line: 1604, column: 27, scope: !5618)
!5901 = !DILocation(line: 1604, column: 33, scope: !5618)
!5902 = !DILocation(line: 1604, column: 22, scope: !5618)
!5903 = !DILocation(line: 1604, column: 12, scope: !5618)
!5904 = !DILocation(line: 1605, column: 11, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5618, file: !1, line: 1605, column: 11)
!5906 = !DILocation(line: 1605, column: 18, scope: !5905)
!5907 = !DILocation(line: 1605, column: 32, scope: !5905)
!5908 = !DILocation(line: 1605, column: 11, scope: !5618)
!5909 = !DILocation(line: 1606, column: 9, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5911, file: !1, line: 1606, column: 9)
!5911 = distinct !DILexicalBlock(scope: !5905, file: !1, line: 1606, column: 9)
!5912 = !DILocation(line: 1606, column: 9, scope: !5911)
!5913 = !DILocation(line: 1607, column: 16, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5618, file: !1, line: 1607, column: 11)
!5915 = !DILocation(line: 1607, column: 31, scope: !5914)
!5916 = !DILocation(line: 1607, column: 45, scope: !5914)
!5917 = !DILocation(line: 1607, column: 11, scope: !5618)
!5918 = !DILocation(line: 1609, column: 11, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5920, file: !1, line: 1609, column: 11)
!5920 = distinct !DILexicalBlock(scope: !5914, file: !1, line: 1608, column: 9)
!5921 = !DILocation(line: 1610, column: 20, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5920, file: !1, line: 1610, column: 15)
!5923 = !DILocation(line: 1610, column: 36, scope: !5922)
!5924 = !DILocation(line: 1610, column: 15, scope: !5920)
!5925 = !DILocation(line: 1611, column: 13, scope: !5922)
!5926 = !DILocation(line: 1612, column: 9, scope: !5920)
!5927 = !DILocation(line: 1613, column: 40, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5618, file: !1, line: 1613, column: 11)
!5929 = !DILocation(line: 1613, column: 51, scope: !5928)
!5930 = !DILocation(line: 1613, column: 11, scope: !5928)
!5931 = !DILocation(line: 1613, column: 62, scope: !5928)
!5932 = !DILocation(line: 1613, column: 11, scope: !5618)
!5933 = !DILocation(line: 1614, column: 15, scope: !5928)
!5934 = !DILocation(line: 1614, column: 9, scope: !5928)
!5935 = !DILocation(line: 1618, column: 33, scope: !5618)
!5936 = !DILocation(line: 1618, column: 40, scope: !5618)
!5937 = !DILocation(line: 1618, column: 49, scope: !5618)
!5938 = !DILocation(line: 1618, column: 48, scope: !5618)
!5939 = !DILocation(line: 1618, column: 7, scope: !5618)
!5940 = !DILocation(line: 1619, column: 28, scope: !5618)
!5941 = !DILocation(line: 1619, column: 38, scope: !5618)
!5942 = !DILocation(line: 1619, column: 31, scope: !5618)
!5943 = !DILocation(line: 1619, column: 7, scope: !5618)
!5944 = !DILocation(line: 1619, column: 15, scope: !5618)
!5945 = !DILocation(line: 1619, column: 18, scope: !5618)
!5946 = !DILocation(line: 1619, column: 21, scope: !5618)
!5947 = !DILocation(line: 1620, column: 30, scope: !5618)
!5948 = !DILocation(line: 1620, column: 42, scope: !5618)
!5949 = !DILocation(line: 1620, column: 35, scope: !5618)
!5950 = !DILocation(line: 1620, column: 7, scope: !5618)
!5951 = !DILocation(line: 1620, column: 15, scope: !5618)
!5952 = !DILocation(line: 1620, column: 18, scope: !5618)
!5953 = !DILocation(line: 1620, column: 23, scope: !5618)
!5954 = !DILocation(line: 1621, column: 29, scope: !5618)
!5955 = !DILocation(line: 1621, column: 40, scope: !5618)
!5956 = !DILocation(line: 1621, column: 33, scope: !5618)
!5957 = !DILocation(line: 1621, column: 7, scope: !5618)
!5958 = !DILocation(line: 1621, column: 15, scope: !5618)
!5959 = !DILocation(line: 1621, column: 18, scope: !5618)
!5960 = !DILocation(line: 1621, column: 22, scope: !5618)
!5961 = !DILocation(line: 1622, column: 16, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5618, file: !1, line: 1622, column: 11)
!5963 = !DILocation(line: 1622, column: 32, scope: !5962)
!5964 = !DILocation(line: 1622, column: 11, scope: !5618)
!5965 = !DILocation(line: 1623, column: 34, scope: !5962)
!5966 = !DILocation(line: 1623, column: 48, scope: !5962)
!5967 = !DILocation(line: 1623, column: 41, scope: !5962)
!5968 = !DILocation(line: 1623, column: 9, scope: !5962)
!5969 = !DILocation(line: 1623, column: 17, scope: !5962)
!5970 = !DILocation(line: 1623, column: 20, scope: !5962)
!5971 = !DILocation(line: 1623, column: 27, scope: !5962)
!5972 = !DILocation(line: 1624, column: 11, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5618, file: !1, line: 1624, column: 11)
!5974 = !DILocation(line: 1624, column: 18, scope: !5973)
!5975 = !DILocation(line: 1624, column: 35, scope: !5973)
!5976 = !DILocation(line: 1624, column: 11, scope: !5618)
!5977 = !DILocalVariable(name: "proceed", scope: !5978, file: !1, line: 1627, type: !575)
!5978 = distinct !DILexicalBlock(scope: !5973, file: !1, line: 1625, column: 9)
!5979 = !DILocation(line: 1627, column: 13, scope: !5978)
!5980 = !DILocation(line: 1629, column: 36, scope: !5978)
!5981 = !DILocation(line: 1629, column: 76, scope: !5978)
!5982 = !DILocation(line: 1630, column: 13, scope: !5978)
!5983 = !DILocation(line: 1630, column: 20, scope: !5978)
!5984 = !DILocation(line: 1629, column: 19, scope: !5978)
!5985 = !DILocation(line: 1629, column: 18, scope: !5978)
!5986 = !DILocation(line: 1631, column: 15, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5978, file: !1, line: 1631, column: 15)
!5988 = !DILocation(line: 1631, column: 23, scope: !5987)
!5989 = !DILocation(line: 1631, column: 15, scope: !5978)
!5990 = !DILocation(line: 1632, column: 19, scope: !5987)
!5991 = !DILocation(line: 1632, column: 13, scope: !5987)
!5992 = !DILocation(line: 1633, column: 9, scope: !5978)
!5993 = !DILocation(line: 1634, column: 5, scope: !5618)
!5994 = !DILocation(line: 1521, column: 46, scope: !5612)
!5995 = !DILocation(line: 1521, column: 5, scope: !5612)
!5996 = distinct !{!5996, !5616, !5997}
!5997 = !DILocation(line: 1634, column: 5, scope: !5609)
!5998 = !DILocation(line: 1635, column: 3, scope: !5540)
!5999 = !DILocation(line: 1481, column: 41, scope: !5534)
!6000 = !DILocation(line: 1481, column: 3, scope: !5534)
!6001 = distinct !{!6001, !5538, !6002}
!6002 = !DILocation(line: 1635, column: 3, scope: !5531)
!6003 = !DILocation(line: 1636, column: 31, scope: !5498)
!6004 = !DILocation(line: 1636, column: 14, scope: !5498)
!6005 = !DILocation(line: 1636, column: 13, scope: !5498)
!6006 = !DILocation(line: 1637, column: 32, scope: !5498)
!6007 = !DILocation(line: 1637, column: 10, scope: !5498)
!6008 = !DILocation(line: 1637, column: 9, scope: !5498)
!6009 = !DILocation(line: 1638, column: 3, scope: !5498)
!6010 = !DILocation(line: 1639, column: 1, scope: !5498)
!6011 = distinct !DISubprogram(name: "Riemersma", scope: !1, file: !1, line: 1644, type: !6012, scopeLine: 1646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!6012 = !DISubroutineType(types: !6013)
!6013 = !{null, !652, !1382, !938, !858, !6014}
!6014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!6015 = !DILocalVariable(name: "image", arg: 1, scope: !6011, file: !1, line: 1644, type: !652)
!6016 = !DILocation(line: 1644, column: 30, scope: !6011)
!6017 = !DILocalVariable(name: "image_view", arg: 2, scope: !6011, file: !1, line: 1644, type: !1382)
!6018 = !DILocation(line: 1644, column: 47, scope: !6011)
!6019 = !DILocalVariable(name: "cube_info", arg: 3, scope: !6011, file: !1, line: 1644, type: !938)
!6020 = !DILocation(line: 1644, column: 68, scope: !6011)
!6021 = !DILocalVariable(name: "level", arg: 4, scope: !6011, file: !1, line: 1645, type: !858)
!6022 = !DILocation(line: 1645, column: 16, scope: !6011)
!6023 = !DILocalVariable(name: "direction", arg: 5, scope: !6011, file: !1, line: 1645, type: !6014)
!6024 = !DILocation(line: 1645, column: 41, scope: !6011)
!6025 = !DILocation(line: 1647, column: 7, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6011, file: !1, line: 1647, column: 7)
!6027 = !DILocation(line: 1647, column: 13, scope: !6026)
!6028 = !DILocation(line: 1647, column: 7, scope: !6011)
!6029 = !DILocation(line: 1648, column: 13, scope: !6026)
!6030 = !DILocation(line: 1648, column: 5, scope: !6026)
!6031 = !DILocation(line: 1652, column: 32, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6033, file: !1, line: 1651, column: 7)
!6033 = distinct !DILexicalBlock(scope: !6026, file: !1, line: 1649, column: 5)
!6034 = !DILocation(line: 1652, column: 38, scope: !6032)
!6035 = !DILocation(line: 1652, column: 49, scope: !6032)
!6036 = !DILocation(line: 1652, column: 16, scope: !6032)
!6037 = !DILocation(line: 1653, column: 32, scope: !6032)
!6038 = !DILocation(line: 1653, column: 38, scope: !6032)
!6039 = !DILocation(line: 1653, column: 49, scope: !6032)
!6040 = !DILocation(line: 1653, column: 16, scope: !6032)
!6041 = !DILocation(line: 1654, column: 32, scope: !6032)
!6042 = !DILocation(line: 1654, column: 38, scope: !6032)
!6043 = !DILocation(line: 1654, column: 49, scope: !6032)
!6044 = !DILocation(line: 1654, column: 16, scope: !6032)
!6045 = !DILocation(line: 1655, column: 9, scope: !6032)
!6046 = !DILocation(line: 1659, column: 32, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6033, file: !1, line: 1658, column: 7)
!6048 = !DILocation(line: 1659, column: 38, scope: !6047)
!6049 = !DILocation(line: 1659, column: 49, scope: !6047)
!6050 = !DILocation(line: 1659, column: 16, scope: !6047)
!6051 = !DILocation(line: 1660, column: 32, scope: !6047)
!6052 = !DILocation(line: 1660, column: 38, scope: !6047)
!6053 = !DILocation(line: 1660, column: 49, scope: !6047)
!6054 = !DILocation(line: 1660, column: 16, scope: !6047)
!6055 = !DILocation(line: 1661, column: 32, scope: !6047)
!6056 = !DILocation(line: 1661, column: 38, scope: !6047)
!6057 = !DILocation(line: 1661, column: 49, scope: !6047)
!6058 = !DILocation(line: 1661, column: 16, scope: !6047)
!6059 = !DILocation(line: 1662, column: 9, scope: !6047)
!6060 = !DILocation(line: 1666, column: 32, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6033, file: !1, line: 1665, column: 7)
!6062 = !DILocation(line: 1666, column: 38, scope: !6061)
!6063 = !DILocation(line: 1666, column: 49, scope: !6061)
!6064 = !DILocation(line: 1666, column: 16, scope: !6061)
!6065 = !DILocation(line: 1667, column: 32, scope: !6061)
!6066 = !DILocation(line: 1667, column: 38, scope: !6061)
!6067 = !DILocation(line: 1667, column: 49, scope: !6061)
!6068 = !DILocation(line: 1667, column: 16, scope: !6061)
!6069 = !DILocation(line: 1668, column: 32, scope: !6061)
!6070 = !DILocation(line: 1668, column: 38, scope: !6061)
!6071 = !DILocation(line: 1668, column: 49, scope: !6061)
!6072 = !DILocation(line: 1668, column: 16, scope: !6061)
!6073 = !DILocation(line: 1669, column: 9, scope: !6061)
!6074 = !DILocation(line: 1673, column: 32, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6033, file: !1, line: 1672, column: 7)
!6076 = !DILocation(line: 1673, column: 38, scope: !6075)
!6077 = !DILocation(line: 1673, column: 49, scope: !6075)
!6078 = !DILocation(line: 1673, column: 16, scope: !6075)
!6079 = !DILocation(line: 1674, column: 32, scope: !6075)
!6080 = !DILocation(line: 1674, column: 38, scope: !6075)
!6081 = !DILocation(line: 1674, column: 49, scope: !6075)
!6082 = !DILocation(line: 1674, column: 16, scope: !6075)
!6083 = !DILocation(line: 1675, column: 32, scope: !6075)
!6084 = !DILocation(line: 1675, column: 38, scope: !6075)
!6085 = !DILocation(line: 1675, column: 49, scope: !6075)
!6086 = !DILocation(line: 1675, column: 16, scope: !6075)
!6087 = !DILocation(line: 1676, column: 9, scope: !6075)
!6088 = !DILocation(line: 1679, column: 9, scope: !6033)
!6089 = !DILocation(line: 1680, column: 5, scope: !6033)
!6090 = !DILocation(line: 1682, column: 13, scope: !6026)
!6091 = !DILocation(line: 1682, column: 5, scope: !6026)
!6092 = !DILocation(line: 1686, column: 19, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6094, file: !1, line: 1685, column: 7)
!6094 = distinct !DILexicalBlock(scope: !6026, file: !1, line: 1683, column: 5)
!6095 = !DILocation(line: 1686, column: 25, scope: !6093)
!6096 = !DILocation(line: 1686, column: 36, scope: !6093)
!6097 = !DILocation(line: 1686, column: 46, scope: !6093)
!6098 = !DILocation(line: 1686, column: 51, scope: !6093)
!6099 = !DILocation(line: 1686, column: 9, scope: !6093)
!6100 = !DILocation(line: 1687, column: 32, scope: !6093)
!6101 = !DILocation(line: 1687, column: 38, scope: !6093)
!6102 = !DILocation(line: 1687, column: 49, scope: !6093)
!6103 = !DILocation(line: 1687, column: 16, scope: !6093)
!6104 = !DILocation(line: 1688, column: 19, scope: !6093)
!6105 = !DILocation(line: 1688, column: 25, scope: !6093)
!6106 = !DILocation(line: 1688, column: 36, scope: !6093)
!6107 = !DILocation(line: 1688, column: 46, scope: !6093)
!6108 = !DILocation(line: 1688, column: 51, scope: !6093)
!6109 = !DILocation(line: 1688, column: 9, scope: !6093)
!6110 = !DILocation(line: 1689, column: 32, scope: !6093)
!6111 = !DILocation(line: 1689, column: 38, scope: !6093)
!6112 = !DILocation(line: 1689, column: 49, scope: !6093)
!6113 = !DILocation(line: 1689, column: 16, scope: !6093)
!6114 = !DILocation(line: 1690, column: 19, scope: !6093)
!6115 = !DILocation(line: 1690, column: 25, scope: !6093)
!6116 = !DILocation(line: 1690, column: 36, scope: !6093)
!6117 = !DILocation(line: 1690, column: 46, scope: !6093)
!6118 = !DILocation(line: 1690, column: 51, scope: !6093)
!6119 = !DILocation(line: 1690, column: 9, scope: !6093)
!6120 = !DILocation(line: 1691, column: 32, scope: !6093)
!6121 = !DILocation(line: 1691, column: 38, scope: !6093)
!6122 = !DILocation(line: 1691, column: 49, scope: !6093)
!6123 = !DILocation(line: 1691, column: 16, scope: !6093)
!6124 = !DILocation(line: 1692, column: 19, scope: !6093)
!6125 = !DILocation(line: 1692, column: 25, scope: !6093)
!6126 = !DILocation(line: 1692, column: 36, scope: !6093)
!6127 = !DILocation(line: 1692, column: 46, scope: !6093)
!6128 = !DILocation(line: 1692, column: 51, scope: !6093)
!6129 = !DILocation(line: 1692, column: 9, scope: !6093)
!6130 = !DILocation(line: 1693, column: 9, scope: !6093)
!6131 = !DILocation(line: 1697, column: 19, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6094, file: !1, line: 1696, column: 7)
!6133 = !DILocation(line: 1697, column: 25, scope: !6132)
!6134 = !DILocation(line: 1697, column: 36, scope: !6132)
!6135 = !DILocation(line: 1697, column: 46, scope: !6132)
!6136 = !DILocation(line: 1697, column: 51, scope: !6132)
!6137 = !DILocation(line: 1697, column: 9, scope: !6132)
!6138 = !DILocation(line: 1698, column: 32, scope: !6132)
!6139 = !DILocation(line: 1698, column: 38, scope: !6132)
!6140 = !DILocation(line: 1698, column: 49, scope: !6132)
!6141 = !DILocation(line: 1698, column: 16, scope: !6132)
!6142 = !DILocation(line: 1699, column: 19, scope: !6132)
!6143 = !DILocation(line: 1699, column: 25, scope: !6132)
!6144 = !DILocation(line: 1699, column: 36, scope: !6132)
!6145 = !DILocation(line: 1699, column: 46, scope: !6132)
!6146 = !DILocation(line: 1699, column: 51, scope: !6132)
!6147 = !DILocation(line: 1699, column: 9, scope: !6132)
!6148 = !DILocation(line: 1700, column: 32, scope: !6132)
!6149 = !DILocation(line: 1700, column: 38, scope: !6132)
!6150 = !DILocation(line: 1700, column: 49, scope: !6132)
!6151 = !DILocation(line: 1700, column: 16, scope: !6132)
!6152 = !DILocation(line: 1701, column: 19, scope: !6132)
!6153 = !DILocation(line: 1701, column: 25, scope: !6132)
!6154 = !DILocation(line: 1701, column: 36, scope: !6132)
!6155 = !DILocation(line: 1701, column: 46, scope: !6132)
!6156 = !DILocation(line: 1701, column: 51, scope: !6132)
!6157 = !DILocation(line: 1701, column: 9, scope: !6132)
!6158 = !DILocation(line: 1702, column: 32, scope: !6132)
!6159 = !DILocation(line: 1702, column: 38, scope: !6132)
!6160 = !DILocation(line: 1702, column: 49, scope: !6132)
!6161 = !DILocation(line: 1702, column: 16, scope: !6132)
!6162 = !DILocation(line: 1703, column: 19, scope: !6132)
!6163 = !DILocation(line: 1703, column: 25, scope: !6132)
!6164 = !DILocation(line: 1703, column: 36, scope: !6132)
!6165 = !DILocation(line: 1703, column: 46, scope: !6132)
!6166 = !DILocation(line: 1703, column: 51, scope: !6132)
!6167 = !DILocation(line: 1703, column: 9, scope: !6132)
!6168 = !DILocation(line: 1704, column: 9, scope: !6132)
!6169 = !DILocation(line: 1708, column: 19, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6094, file: !1, line: 1707, column: 7)
!6171 = !DILocation(line: 1708, column: 25, scope: !6170)
!6172 = !DILocation(line: 1708, column: 36, scope: !6170)
!6173 = !DILocation(line: 1708, column: 46, scope: !6170)
!6174 = !DILocation(line: 1708, column: 51, scope: !6170)
!6175 = !DILocation(line: 1708, column: 9, scope: !6170)
!6176 = !DILocation(line: 1709, column: 32, scope: !6170)
!6177 = !DILocation(line: 1709, column: 38, scope: !6170)
!6178 = !DILocation(line: 1709, column: 49, scope: !6170)
!6179 = !DILocation(line: 1709, column: 16, scope: !6170)
!6180 = !DILocation(line: 1710, column: 19, scope: !6170)
!6181 = !DILocation(line: 1710, column: 25, scope: !6170)
!6182 = !DILocation(line: 1710, column: 36, scope: !6170)
!6183 = !DILocation(line: 1710, column: 46, scope: !6170)
!6184 = !DILocation(line: 1710, column: 51, scope: !6170)
!6185 = !DILocation(line: 1710, column: 9, scope: !6170)
!6186 = !DILocation(line: 1711, column: 32, scope: !6170)
!6187 = !DILocation(line: 1711, column: 38, scope: !6170)
!6188 = !DILocation(line: 1711, column: 49, scope: !6170)
!6189 = !DILocation(line: 1711, column: 16, scope: !6170)
!6190 = !DILocation(line: 1712, column: 19, scope: !6170)
!6191 = !DILocation(line: 1712, column: 25, scope: !6170)
!6192 = !DILocation(line: 1712, column: 36, scope: !6170)
!6193 = !DILocation(line: 1712, column: 46, scope: !6170)
!6194 = !DILocation(line: 1712, column: 51, scope: !6170)
!6195 = !DILocation(line: 1712, column: 9, scope: !6170)
!6196 = !DILocation(line: 1713, column: 32, scope: !6170)
!6197 = !DILocation(line: 1713, column: 38, scope: !6170)
!6198 = !DILocation(line: 1713, column: 49, scope: !6170)
!6199 = !DILocation(line: 1713, column: 16, scope: !6170)
!6200 = !DILocation(line: 1714, column: 19, scope: !6170)
!6201 = !DILocation(line: 1714, column: 25, scope: !6170)
!6202 = !DILocation(line: 1714, column: 36, scope: !6170)
!6203 = !DILocation(line: 1714, column: 46, scope: !6170)
!6204 = !DILocation(line: 1714, column: 51, scope: !6170)
!6205 = !DILocation(line: 1714, column: 9, scope: !6170)
!6206 = !DILocation(line: 1715, column: 9, scope: !6170)
!6207 = !DILocation(line: 1719, column: 19, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6094, file: !1, line: 1718, column: 7)
!6209 = !DILocation(line: 1719, column: 25, scope: !6208)
!6210 = !DILocation(line: 1719, column: 36, scope: !6208)
!6211 = !DILocation(line: 1719, column: 46, scope: !6208)
!6212 = !DILocation(line: 1719, column: 51, scope: !6208)
!6213 = !DILocation(line: 1719, column: 9, scope: !6208)
!6214 = !DILocation(line: 1720, column: 32, scope: !6208)
!6215 = !DILocation(line: 1720, column: 38, scope: !6208)
!6216 = !DILocation(line: 1720, column: 49, scope: !6208)
!6217 = !DILocation(line: 1720, column: 16, scope: !6208)
!6218 = !DILocation(line: 1721, column: 19, scope: !6208)
!6219 = !DILocation(line: 1721, column: 25, scope: !6208)
!6220 = !DILocation(line: 1721, column: 36, scope: !6208)
!6221 = !DILocation(line: 1721, column: 46, scope: !6208)
!6222 = !DILocation(line: 1721, column: 51, scope: !6208)
!6223 = !DILocation(line: 1721, column: 9, scope: !6208)
!6224 = !DILocation(line: 1722, column: 32, scope: !6208)
!6225 = !DILocation(line: 1722, column: 38, scope: !6208)
!6226 = !DILocation(line: 1722, column: 49, scope: !6208)
!6227 = !DILocation(line: 1722, column: 16, scope: !6208)
!6228 = !DILocation(line: 1723, column: 19, scope: !6208)
!6229 = !DILocation(line: 1723, column: 25, scope: !6208)
!6230 = !DILocation(line: 1723, column: 36, scope: !6208)
!6231 = !DILocation(line: 1723, column: 46, scope: !6208)
!6232 = !DILocation(line: 1723, column: 51, scope: !6208)
!6233 = !DILocation(line: 1723, column: 9, scope: !6208)
!6234 = !DILocation(line: 1724, column: 32, scope: !6208)
!6235 = !DILocation(line: 1724, column: 38, scope: !6208)
!6236 = !DILocation(line: 1724, column: 49, scope: !6208)
!6237 = !DILocation(line: 1724, column: 16, scope: !6208)
!6238 = !DILocation(line: 1725, column: 19, scope: !6208)
!6239 = !DILocation(line: 1725, column: 25, scope: !6208)
!6240 = !DILocation(line: 1725, column: 36, scope: !6208)
!6241 = !DILocation(line: 1725, column: 46, scope: !6208)
!6242 = !DILocation(line: 1725, column: 51, scope: !6208)
!6243 = !DILocation(line: 1725, column: 9, scope: !6208)
!6244 = !DILocation(line: 1726, column: 9, scope: !6208)
!6245 = !DILocation(line: 1729, column: 9, scope: !6094)
!6246 = !DILocation(line: 1731, column: 1, scope: !6011)
!6247 = distinct !DISubprogram(name: "RiemersmaDither", scope: !1, file: !1, line: 1733, type: !6248, scopeLine: 1735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!6248 = !DISubroutineType(types: !6249)
!6249 = !{!575, !652, !1382, !938, !6014}
!6250 = !DILocalVariable(name: "image", arg: 1, scope: !6247, file: !1, line: 1733, type: !652)
!6251 = !DILocation(line: 1733, column: 49, scope: !6247)
!6252 = !DILocalVariable(name: "image_view", arg: 2, scope: !6247, file: !1, line: 1733, type: !1382)
!6253 = !DILocation(line: 1733, column: 66, scope: !6247)
!6254 = !DILocalVariable(name: "cube_info", arg: 3, scope: !6247, file: !1, line: 1734, type: !938)
!6255 = !DILocation(line: 1734, column: 13, scope: !6247)
!6256 = !DILocalVariable(name: "direction", arg: 4, scope: !6247, file: !1, line: 1734, type: !6014)
!6257 = !DILocation(line: 1734, column: 42, scope: !6247)
!6258 = !DILocalVariable(name: "proceed", scope: !6247, file: !1, line: 1739, type: !575)
!6259 = !DILocation(line: 1739, column: 5, scope: !6247)
!6260 = !DILocalVariable(name: "color", scope: !6247, file: !1, line: 1742, type: !955)
!6261 = !DILocation(line: 1742, column: 5, scope: !6247)
!6262 = !DILocalVariable(name: "pixel", scope: !6247, file: !1, line: 1743, type: !955)
!6263 = !DILocation(line: 1743, column: 5, scope: !6247)
!6264 = !DILocalVariable(name: "p", scope: !6247, file: !1, line: 1746, type: !938)
!6265 = !DILocation(line: 1746, column: 6, scope: !6247)
!6266 = !DILocalVariable(name: "index", scope: !6247, file: !1, line: 1749, type: !570)
!6267 = !DILocation(line: 1749, column: 5, scope: !6247)
!6268 = !DILocation(line: 1751, column: 5, scope: !6247)
!6269 = !DILocation(line: 1751, column: 4, scope: !6247)
!6270 = !DILocation(line: 1752, column: 8, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6247, file: !1, line: 1752, column: 7)
!6272 = !DILocation(line: 1752, column: 11, scope: !6271)
!6273 = !DILocation(line: 1752, column: 13, scope: !6271)
!6274 = !DILocation(line: 1752, column: 19, scope: !6271)
!6275 = !DILocation(line: 1752, column: 23, scope: !6271)
!6276 = !DILocation(line: 1752, column: 26, scope: !6271)
!6277 = !DILocation(line: 1752, column: 40, scope: !6271)
!6278 = !DILocation(line: 1752, column: 47, scope: !6271)
!6279 = !DILocation(line: 1752, column: 28, scope: !6271)
!6280 = !DILocation(line: 1752, column: 56, scope: !6271)
!6281 = !DILocation(line: 1753, column: 8, scope: !6271)
!6282 = !DILocation(line: 1753, column: 11, scope: !6271)
!6283 = !DILocation(line: 1753, column: 13, scope: !6271)
!6284 = !DILocation(line: 1753, column: 19, scope: !6271)
!6285 = !DILocation(line: 1753, column: 23, scope: !6271)
!6286 = !DILocation(line: 1753, column: 26, scope: !6271)
!6287 = !DILocation(line: 1753, column: 40, scope: !6271)
!6288 = !DILocation(line: 1753, column: 47, scope: !6271)
!6289 = !DILocation(line: 1753, column: 28, scope: !6271)
!6290 = !DILocation(line: 1752, column: 7, scope: !6247)
!6291 = !DILocalVariable(name: "exception", scope: !6292, file: !1, line: 1756, type: !1387)
!6292 = distinct !DILexicalBlock(scope: !6271, file: !1, line: 1754, column: 5)
!6293 = !DILocation(line: 1756, column: 10, scope: !6292)
!6294 = !DILocalVariable(name: "indexes", scope: !6292, file: !1, line: 1759, type: !1773)
!6295 = !DILocation(line: 1759, column: 19, scope: !6292)
!6296 = !DILocalVariable(name: "q", scope: !6292, file: !1, line: 1762, type: !1776)
!6297 = !DILocation(line: 1762, column: 19, scope: !6292)
!6298 = !DILocalVariable(name: "i", scope: !6292, file: !1, line: 1765, type: !640)
!6299 = !DILocation(line: 1765, column: 9, scope: !6292)
!6300 = !DILocation(line: 1770, column: 19, scope: !6292)
!6301 = !DILocation(line: 1770, column: 26, scope: !6292)
!6302 = !DILocation(line: 1770, column: 16, scope: !6292)
!6303 = !DILocation(line: 1771, column: 37, scope: !6292)
!6304 = !DILocation(line: 1771, column: 48, scope: !6292)
!6305 = !DILocation(line: 1771, column: 51, scope: !6292)
!6306 = !DILocation(line: 1771, column: 53, scope: !6292)
!6307 = !DILocation(line: 1771, column: 56, scope: !6292)
!6308 = !DILocation(line: 1771, column: 62, scope: !6292)
!6309 = !DILocation(line: 1771, column: 9, scope: !6292)
!6310 = !DILocation(line: 1771, column: 8, scope: !6292)
!6311 = !DILocation(line: 1772, column: 11, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6292, file: !1, line: 1772, column: 11)
!6313 = !DILocation(line: 1772, column: 13, scope: !6312)
!6314 = !DILocation(line: 1772, column: 11, scope: !6292)
!6315 = !DILocation(line: 1773, column: 9, scope: !6312)
!6316 = !DILocation(line: 1774, column: 47, scope: !6292)
!6317 = !DILocation(line: 1774, column: 15, scope: !6292)
!6318 = !DILocation(line: 1774, column: 14, scope: !6292)
!6319 = !DILocation(line: 1775, column: 27, scope: !6292)
!6320 = !DILocation(line: 1775, column: 37, scope: !6292)
!6321 = !DILocation(line: 1775, column: 7, scope: !6292)
!6322 = !DILocation(line: 1776, column: 13, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6292, file: !1, line: 1776, column: 7)
!6324 = !DILocation(line: 1776, column: 12, scope: !6323)
!6325 = !DILocation(line: 1776, column: 17, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6323, file: !1, line: 1776, column: 7)
!6327 = !DILocation(line: 1776, column: 19, scope: !6326)
!6328 = !DILocation(line: 1776, column: 7, scope: !6323)
!6329 = !DILocation(line: 1778, column: 20, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6326, file: !1, line: 1777, column: 7)
!6331 = !DILocation(line: 1778, column: 23, scope: !6330)
!6332 = !DILocation(line: 1778, column: 31, scope: !6330)
!6333 = !DILocation(line: 1778, column: 34, scope: !6330)
!6334 = !DILocation(line: 1778, column: 37, scope: !6330)
!6335 = !DILocation(line: 1778, column: 43, scope: !6330)
!6336 = !DILocation(line: 1778, column: 46, scope: !6330)
!6337 = !DILocation(line: 1778, column: 33, scope: !6330)
!6338 = !DILocation(line: 1778, column: 15, scope: !6330)
!6339 = !DILocation(line: 1778, column: 18, scope: !6330)
!6340 = !DILocation(line: 1779, column: 22, scope: !6330)
!6341 = !DILocation(line: 1779, column: 25, scope: !6330)
!6342 = !DILocation(line: 1779, column: 33, scope: !6330)
!6343 = !DILocation(line: 1779, column: 36, scope: !6330)
!6344 = !DILocation(line: 1779, column: 39, scope: !6330)
!6345 = !DILocation(line: 1779, column: 45, scope: !6330)
!6346 = !DILocation(line: 1779, column: 48, scope: !6330)
!6347 = !DILocation(line: 1779, column: 35, scope: !6330)
!6348 = !DILocation(line: 1779, column: 15, scope: !6330)
!6349 = !DILocation(line: 1779, column: 20, scope: !6330)
!6350 = !DILocation(line: 1780, column: 21, scope: !6330)
!6351 = !DILocation(line: 1780, column: 24, scope: !6330)
!6352 = !DILocation(line: 1780, column: 32, scope: !6330)
!6353 = !DILocation(line: 1780, column: 35, scope: !6330)
!6354 = !DILocation(line: 1780, column: 38, scope: !6330)
!6355 = !DILocation(line: 1780, column: 44, scope: !6330)
!6356 = !DILocation(line: 1780, column: 47, scope: !6330)
!6357 = !DILocation(line: 1780, column: 34, scope: !6330)
!6358 = !DILocation(line: 1780, column: 15, scope: !6330)
!6359 = !DILocation(line: 1780, column: 19, scope: !6330)
!6360 = !DILocation(line: 1781, column: 13, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6330, file: !1, line: 1781, column: 13)
!6362 = !DILocation(line: 1781, column: 24, scope: !6361)
!6363 = !DILocation(line: 1781, column: 40, scope: !6361)
!6364 = !DILocation(line: 1781, column: 13, scope: !6330)
!6365 = !DILocation(line: 1782, column: 26, scope: !6361)
!6366 = !DILocation(line: 1782, column: 29, scope: !6361)
!6367 = !DILocation(line: 1782, column: 37, scope: !6361)
!6368 = !DILocation(line: 1782, column: 40, scope: !6361)
!6369 = !DILocation(line: 1782, column: 43, scope: !6361)
!6370 = !DILocation(line: 1782, column: 49, scope: !6361)
!6371 = !DILocation(line: 1782, column: 52, scope: !6361)
!6372 = !DILocation(line: 1782, column: 39, scope: !6361)
!6373 = !DILocation(line: 1782, column: 17, scope: !6361)
!6374 = !DILocation(line: 1782, column: 24, scope: !6361)
!6375 = !DILocation(line: 1782, column: 11, scope: !6361)
!6376 = !DILocation(line: 1783, column: 7, scope: !6330)
!6377 = !DILocation(line: 1776, column: 40, scope: !6326)
!6378 = !DILocation(line: 1776, column: 7, scope: !6326)
!6379 = distinct !{!6379, !6328, !6380}
!6380 = !DILocation(line: 1783, column: 7, scope: !6323)
!6381 = !DILocation(line: 1784, column: 51, scope: !6292)
!6382 = !DILocation(line: 1784, column: 34, scope: !6292)
!6383 = !DILocation(line: 1784, column: 17, scope: !6292)
!6384 = !DILocation(line: 1784, column: 13, scope: !6292)
!6385 = !DILocation(line: 1784, column: 16, scope: !6292)
!6386 = !DILocation(line: 1785, column: 53, scope: !6292)
!6387 = !DILocation(line: 1785, column: 36, scope: !6292)
!6388 = !DILocation(line: 1785, column: 19, scope: !6292)
!6389 = !DILocation(line: 1785, column: 13, scope: !6292)
!6390 = !DILocation(line: 1785, column: 18, scope: !6292)
!6391 = !DILocation(line: 1786, column: 52, scope: !6292)
!6392 = !DILocation(line: 1786, column: 35, scope: !6292)
!6393 = !DILocation(line: 1786, column: 18, scope: !6292)
!6394 = !DILocation(line: 1786, column: 13, scope: !6292)
!6395 = !DILocation(line: 1786, column: 17, scope: !6292)
!6396 = !DILocation(line: 1787, column: 11, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6292, file: !1, line: 1787, column: 11)
!6398 = !DILocation(line: 1787, column: 22, scope: !6397)
!6399 = !DILocation(line: 1787, column: 38, scope: !6397)
!6400 = !DILocation(line: 1787, column: 11, scope: !6292)
!6401 = !DILocation(line: 1788, column: 57, scope: !6397)
!6402 = !DILocation(line: 1788, column: 40, scope: !6397)
!6403 = !DILocation(line: 1788, column: 23, scope: !6397)
!6404 = !DILocation(line: 1788, column: 15, scope: !6397)
!6405 = !DILocation(line: 1788, column: 22, scope: !6397)
!6406 = !DILocation(line: 1788, column: 9, scope: !6397)
!6407 = !DILocation(line: 1789, column: 21, scope: !6292)
!6408 = !DILocation(line: 1789, column: 9, scope: !6292)
!6409 = !DILocation(line: 1789, column: 8, scope: !6292)
!6410 = !DILocation(line: 1790, column: 11, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6292, file: !1, line: 1790, column: 11)
!6412 = !DILocation(line: 1790, column: 14, scope: !6411)
!6413 = !DILocation(line: 1790, column: 20, scope: !6411)
!6414 = !DILocation(line: 1790, column: 23, scope: !6411)
!6415 = !DILocation(line: 1790, column: 11, scope: !6292)
!6416 = !DILocalVariable(name: "node_info", scope: !6417, file: !1, line: 1793, type: !943)
!6417 = distinct !DILexicalBlock(scope: !6411, file: !1, line: 1791, column: 9)
!6418 = !DILocation(line: 1793, column: 14, scope: !6417)
!6419 = !DILocalVariable(name: "id", scope: !6417, file: !1, line: 1796, type: !570)
!6420 = !DILocation(line: 1796, column: 13, scope: !6417)
!6421 = !DILocation(line: 1801, column: 21, scope: !6417)
!6422 = !DILocation(line: 1801, column: 24, scope: !6417)
!6423 = !DILocation(line: 1801, column: 20, scope: !6417)
!6424 = !DILocation(line: 1802, column: 21, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6417, file: !1, line: 1802, column: 11)
!6426 = !DILocation(line: 1802, column: 16, scope: !6425)
!6427 = !DILocation(line: 1802, column: 48, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6425, file: !1, line: 1802, column: 11)
!6429 = !DILocation(line: 1802, column: 54, scope: !6428)
!6430 = !DILocation(line: 1802, column: 11, scope: !6425)
!6431 = !DILocation(line: 1804, column: 30, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6428, file: !1, line: 1803, column: 11)
!6433 = !DILocation(line: 1804, column: 47, scope: !6432)
!6434 = !DILocation(line: 1804, column: 16, scope: !6432)
!6435 = !DILocation(line: 1804, column: 15, scope: !6432)
!6436 = !DILocation(line: 1805, column: 17, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6432, file: !1, line: 1805, column: 17)
!6438 = !DILocation(line: 1805, column: 28, scope: !6437)
!6439 = !DILocation(line: 1805, column: 34, scope: !6437)
!6440 = !DILocation(line: 1805, column: 38, scope: !6437)
!6441 = !DILocation(line: 1805, column: 17, scope: !6432)
!6442 = !DILocation(line: 1806, column: 15, scope: !6437)
!6443 = !DILocation(line: 1807, column: 23, scope: !6432)
!6444 = !DILocation(line: 1807, column: 34, scope: !6432)
!6445 = !DILocation(line: 1807, column: 40, scope: !6432)
!6446 = !DILocation(line: 1807, column: 22, scope: !6432)
!6447 = !DILocation(line: 1808, column: 11, scope: !6432)
!6448 = !DILocation(line: 1802, column: 64, scope: !6428)
!6449 = !DILocation(line: 1802, column: 11, scope: !6428)
!6450 = distinct !{!6450, !6430, !6451}
!6451 = !DILocation(line: 1808, column: 11, scope: !6425)
!6452 = !DILocation(line: 1812, column: 11, scope: !6417)
!6453 = !DILocation(line: 1812, column: 14, scope: !6417)
!6454 = !DILocation(line: 1812, column: 21, scope: !6417)
!6455 = !DILocation(line: 1813, column: 11, scope: !6417)
!6456 = !DILocation(line: 1813, column: 14, scope: !6417)
!6457 = !DILocation(line: 1813, column: 22, scope: !6417)
!6458 = !DILocation(line: 1815, column: 24, scope: !6417)
!6459 = !DILocation(line: 1815, column: 30, scope: !6417)
!6460 = !DILocation(line: 1815, column: 32, scope: !6417)
!6461 = !DILocation(line: 1815, column: 43, scope: !6417)
!6462 = !DILocation(line: 1815, column: 11, scope: !6417)
!6463 = !DILocation(line: 1816, column: 33, scope: !6417)
!6464 = !DILocation(line: 1816, column: 36, scope: !6417)
!6465 = !DILocation(line: 1816, column: 11, scope: !6417)
!6466 = !DILocation(line: 1816, column: 14, scope: !6417)
!6467 = !DILocation(line: 1816, column: 20, scope: !6417)
!6468 = !DILocation(line: 1816, column: 22, scope: !6417)
!6469 = !DILocation(line: 1817, column: 9, scope: !6417)
!6470 = !DILocation(line: 1821, column: 25, scope: !6292)
!6471 = !DILocation(line: 1821, column: 28, scope: !6292)
!6472 = !DILocation(line: 1821, column: 34, scope: !6292)
!6473 = !DILocation(line: 1821, column: 24, scope: !6292)
!6474 = !DILocation(line: 1821, column: 12, scope: !6292)
!6475 = !DILocation(line: 1822, column: 11, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6292, file: !1, line: 1822, column: 11)
!6477 = !DILocation(line: 1822, column: 18, scope: !6476)
!6478 = !DILocation(line: 1822, column: 32, scope: !6476)
!6479 = !DILocation(line: 1822, column: 11, scope: !6292)
!6480 = !DILocation(line: 1823, column: 32, scope: !6476)
!6481 = !DILocation(line: 1823, column: 18, scope: !6476)
!6482 = !DILocation(line: 1823, column: 10, scope: !6476)
!6483 = !DILocation(line: 1823, column: 17, scope: !6476)
!6484 = !DILocation(line: 1823, column: 9, scope: !6476)
!6485 = !DILocation(line: 1824, column: 11, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6292, file: !1, line: 1824, column: 11)
!6487 = !DILocation(line: 1824, column: 22, scope: !6486)
!6488 = !DILocation(line: 1824, column: 37, scope: !6486)
!6489 = !DILocation(line: 1824, column: 51, scope: !6486)
!6490 = !DILocation(line: 1824, column: 11, scope: !6292)
!6491 = !DILocation(line: 1826, column: 11, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6493, file: !1, line: 1826, column: 11)
!6493 = distinct !DILexicalBlock(scope: !6486, file: !1, line: 1825, column: 9)
!6494 = !DILocation(line: 1827, column: 15, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6493, file: !1, line: 1827, column: 15)
!6496 = !DILocation(line: 1827, column: 26, scope: !6495)
!6497 = !DILocation(line: 1827, column: 42, scope: !6495)
!6498 = !DILocation(line: 1827, column: 15, scope: !6493)
!6499 = !DILocation(line: 1828, column: 13, scope: !6495)
!6500 = !DILocation(line: 1829, column: 9, scope: !6493)
!6501 = !DILocation(line: 1830, column: 40, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6292, file: !1, line: 1830, column: 11)
!6503 = !DILocation(line: 1830, column: 51, scope: !6502)
!6504 = !DILocation(line: 1830, column: 11, scope: !6502)
!6505 = !DILocation(line: 1830, column: 62, scope: !6502)
!6506 = !DILocation(line: 1830, column: 11, scope: !6292)
!6507 = !DILocation(line: 1831, column: 9, scope: !6502)
!6508 = !DILocation(line: 1835, column: 31, scope: !6292)
!6509 = !DILocation(line: 1835, column: 34, scope: !6292)
!6510 = !DILocation(line: 1835, column: 40, scope: !6292)
!6511 = !DILocation(line: 1835, column: 43, scope: !6292)
!6512 = !DILocation(line: 1835, column: 48, scope: !6292)
!6513 = !DILocation(line: 1835, column: 14, scope: !6292)
!6514 = !DILocation(line: 1837, column: 27, scope: !6292)
!6515 = !DILocation(line: 1837, column: 37, scope: !6292)
!6516 = !DILocation(line: 1837, column: 44, scope: !6292)
!6517 = !DILocation(line: 1837, column: 53, scope: !6292)
!6518 = !DILocation(line: 1837, column: 52, scope: !6292)
!6519 = !DILocation(line: 1837, column: 7, scope: !6292)
!6520 = !DILocation(line: 1838, column: 46, scope: !6292)
!6521 = !DILocation(line: 1838, column: 56, scope: !6292)
!6522 = !DILocation(line: 1838, column: 49, scope: !6292)
!6523 = !DILocation(line: 1838, column: 7, scope: !6292)
!6524 = !DILocation(line: 1838, column: 10, scope: !6292)
!6525 = !DILocation(line: 1838, column: 36, scope: !6292)
!6526 = !DILocation(line: 1838, column: 39, scope: !6292)
!6527 = !DILocation(line: 1839, column: 48, scope: !6292)
!6528 = !DILocation(line: 1839, column: 60, scope: !6292)
!6529 = !DILocation(line: 1839, column: 53, scope: !6292)
!6530 = !DILocation(line: 1839, column: 7, scope: !6292)
!6531 = !DILocation(line: 1839, column: 10, scope: !6292)
!6532 = !DILocation(line: 1839, column: 36, scope: !6292)
!6533 = !DILocation(line: 1839, column: 41, scope: !6292)
!6534 = !DILocation(line: 1840, column: 47, scope: !6292)
!6535 = !DILocation(line: 1840, column: 58, scope: !6292)
!6536 = !DILocation(line: 1840, column: 51, scope: !6292)
!6537 = !DILocation(line: 1840, column: 7, scope: !6292)
!6538 = !DILocation(line: 1840, column: 10, scope: !6292)
!6539 = !DILocation(line: 1840, column: 36, scope: !6292)
!6540 = !DILocation(line: 1840, column: 40, scope: !6292)
!6541 = !DILocation(line: 1841, column: 11, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6292, file: !1, line: 1841, column: 11)
!6543 = !DILocation(line: 1841, column: 22, scope: !6542)
!6544 = !DILocation(line: 1841, column: 38, scope: !6542)
!6545 = !DILocation(line: 1841, column: 11, scope: !6292)
!6546 = !DILocation(line: 1842, column: 52, scope: !6542)
!6547 = !DILocation(line: 1842, column: 66, scope: !6542)
!6548 = !DILocation(line: 1842, column: 59, scope: !6542)
!6549 = !DILocation(line: 1842, column: 9, scope: !6542)
!6550 = !DILocation(line: 1842, column: 12, scope: !6542)
!6551 = !DILocation(line: 1842, column: 38, scope: !6542)
!6552 = !DILocation(line: 1842, column: 45, scope: !6542)
!6553 = !DILocation(line: 1843, column: 32, scope: !6292)
!6554 = !DILocation(line: 1843, column: 53, scope: !6292)
!6555 = !DILocation(line: 1843, column: 56, scope: !6292)
!6556 = !DILocation(line: 1843, column: 63, scope: !6292)
!6557 = !DILocation(line: 1843, column: 66, scope: !6292)
!6558 = !DILocation(line: 1843, column: 15, scope: !6292)
!6559 = !DILocation(line: 1843, column: 14, scope: !6292)
!6560 = !DILocation(line: 1844, column: 11, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6292, file: !1, line: 1844, column: 11)
!6562 = !DILocation(line: 1844, column: 19, scope: !6561)
!6563 = !DILocation(line: 1844, column: 11, scope: !6292)
!6564 = !DILocation(line: 1845, column: 9, scope: !6561)
!6565 = !DILocation(line: 1846, column: 7, scope: !6292)
!6566 = !DILocation(line: 1846, column: 10, scope: !6292)
!6567 = !DILocation(line: 1846, column: 16, scope: !6292)
!6568 = !DILocation(line: 1847, column: 5, scope: !6292)
!6569 = !DILocation(line: 1848, column: 11, scope: !6247)
!6570 = !DILocation(line: 1848, column: 3, scope: !6247)
!6571 = !DILocation(line: 1850, column: 23, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6247, file: !1, line: 1849, column: 3)
!6573 = !DILocation(line: 1850, column: 26, scope: !6572)
!6574 = !DILocation(line: 1850, column: 27, scope: !6572)
!6575 = !DILocation(line: 1850, column: 31, scope: !6572)
!6576 = !DILocation(line: 1851, column: 23, scope: !6572)
!6577 = !DILocation(line: 1851, column: 26, scope: !6572)
!6578 = !DILocation(line: 1851, column: 27, scope: !6572)
!6579 = !DILocation(line: 1851, column: 31, scope: !6572)
!6580 = !DILocation(line: 1852, column: 24, scope: !6572)
!6581 = !DILocation(line: 1852, column: 27, scope: !6572)
!6582 = !DILocation(line: 1852, column: 28, scope: !6572)
!6583 = !DILocation(line: 1852, column: 32, scope: !6572)
!6584 = !DILocation(line: 1853, column: 24, scope: !6572)
!6585 = !DILocation(line: 1853, column: 27, scope: !6572)
!6586 = !DILocation(line: 1853, column: 28, scope: !6572)
!6587 = !DILocation(line: 1853, column: 32, scope: !6572)
!6588 = !DILocation(line: 1855, column: 3, scope: !6247)
!6589 = !DILocation(line: 1856, column: 1, scope: !6247)
!6590 = distinct !DISubprogram(name: "AcquirePixelThreadSet", scope: !1, file: !1, line: 1407, type: !6591, scopeLine: 1408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!6591 = !DISubroutineType(types: !6592)
!6592 = !{!1004, !858}
!6593 = !DILocalVariable(name: "count", arg: 1, scope: !6590, file: !1, line: 1407, type: !858)
!6594 = !DILocation(line: 1407, column: 61, scope: !6590)
!6595 = !DILocalVariable(name: "pixels", scope: !6590, file: !1, line: 1410, type: !1004)
!6596 = !DILocation(line: 1410, column: 7, scope: !6590)
!6597 = !DILocalVariable(name: "i", scope: !6590, file: !1, line: 1413, type: !640)
!6598 = !DILocation(line: 1413, column: 5, scope: !6590)
!6599 = !DILocalVariable(name: "number_threads", scope: !6590, file: !1, line: 1416, type: !570)
!6600 = !DILocation(line: 1416, column: 5, scope: !6590)
!6601 = !DILocation(line: 1418, column: 27, scope: !6590)
!6602 = !DILocation(line: 1418, column: 17, scope: !6590)
!6603 = !DILocation(line: 1419, column: 52, scope: !6590)
!6604 = !DILocation(line: 1419, column: 31, scope: !6590)
!6605 = !DILocation(line: 1419, column: 10, scope: !6590)
!6606 = !DILocation(line: 1419, column: 9, scope: !6590)
!6607 = !DILocation(line: 1421, column: 7, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6590, file: !1, line: 1421, column: 7)
!6609 = !DILocation(line: 1421, column: 14, scope: !6608)
!6610 = !DILocation(line: 1421, column: 7, scope: !6590)
!6611 = !DILocation(line: 1422, column: 5, scope: !6608)
!6612 = !DILocation(line: 1423, column: 28, scope: !6590)
!6613 = !DILocation(line: 1423, column: 37, scope: !6590)
!6614 = !DILocation(line: 1423, column: 51, scope: !6590)
!6615 = !DILocation(line: 1423, column: 10, scope: !6590)
!6616 = !DILocation(line: 1424, column: 9, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6590, file: !1, line: 1424, column: 3)
!6618 = !DILocation(line: 1424, column: 8, scope: !6617)
!6619 = !DILocation(line: 1424, column: 13, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6617, file: !1, line: 1424, column: 3)
!6621 = !DILocation(line: 1424, column: 27, scope: !6620)
!6622 = !DILocation(line: 1424, column: 15, scope: !6620)
!6623 = !DILocation(line: 1424, column: 3, scope: !6617)
!6624 = !DILocation(line: 1426, column: 56, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6620, file: !1, line: 1425, column: 3)
!6626 = !DILocation(line: 1426, column: 35, scope: !6625)
!6627 = !DILocation(line: 1426, column: 15, scope: !6625)
!6628 = !DILocation(line: 1426, column: 5, scope: !6625)
!6629 = !DILocation(line: 1426, column: 12, scope: !6625)
!6630 = !DILocation(line: 1426, column: 14, scope: !6625)
!6631 = !DILocation(line: 1428, column: 9, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6625, file: !1, line: 1428, column: 9)
!6633 = !DILocation(line: 1428, column: 16, scope: !6632)
!6634 = !DILocation(line: 1428, column: 19, scope: !6632)
!6635 = !DILocation(line: 1428, column: 9, scope: !6625)
!6636 = !DILocation(line: 1429, column: 36, scope: !6632)
!6637 = !DILocation(line: 1429, column: 14, scope: !6632)
!6638 = !DILocation(line: 1429, column: 7, scope: !6632)
!6639 = !DILocation(line: 1430, column: 3, scope: !6625)
!6640 = !DILocation(line: 1424, column: 44, scope: !6620)
!6641 = !DILocation(line: 1424, column: 3, scope: !6620)
!6642 = distinct !{!6642, !6623, !6643}
!6643 = !DILocation(line: 1430, column: 3, scope: !6617)
!6644 = !DILocation(line: 1431, column: 10, scope: !6590)
!6645 = !DILocation(line: 1431, column: 3, scope: !6590)
!6646 = !DILocation(line: 1432, column: 1, scope: !6590)
!6647 = distinct !DISubprogram(name: "GetOpenMPThreadId", scope: !6648, file: !6648, line: 117, type: !6649, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!6648 = !DIFile(filename: "./magick/thread-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!6649 = !DISubroutineType(types: !6650)
!6650 = !{!453}
!6651 = !DILocation(line: 122, column: 3, scope: !6647)
!6652 = distinct !DISubprogram(name: "CacheOffset", scope: !1, file: !1, line: 1434, type: !6653, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!6653 = !DISubroutineType(types: !6654)
!6654 = !{!640, !938, !4787}
!6655 = !DILocalVariable(name: "cube_info", arg: 1, scope: !6652, file: !1, line: 1434, type: !938)
!6656 = !DILocation(line: 1434, column: 45, scope: !6652)
!6657 = !DILocalVariable(name: "pixel", arg: 2, scope: !6652, file: !1, line: 1435, type: !4787)
!6658 = !DILocation(line: 1435, column: 26, scope: !6652)
!6659 = !DILocalVariable(name: "offset", scope: !6652, file: !1, line: 1443, type: !640)
!6660 = !DILocation(line: 1443, column: 5, scope: !6652)
!6661 = !DILocation(line: 1445, column: 21, scope: !6652)
!6662 = !DILocation(line: 1446, column: 5, scope: !6652)
!6663 = !DILocation(line: 1445, column: 74, scope: !6652)
!6664 = !DILocation(line: 1447, column: 5, scope: !6652)
!6665 = !DILocation(line: 1446, column: 62, scope: !6652)
!6666 = !DILocation(line: 1445, column: 10, scope: !6652)
!6667 = !DILocation(line: 1445, column: 9, scope: !6652)
!6668 = !DILocation(line: 1448, column: 7, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6652, file: !1, line: 1448, column: 7)
!6670 = !DILocation(line: 1448, column: 18, scope: !6669)
!6671 = !DILocation(line: 1448, column: 34, scope: !6669)
!6672 = !DILocation(line: 1448, column: 7, scope: !6652)
!6673 = !DILocation(line: 1449, column: 13, scope: !6669)
!6674 = !DILocation(line: 1449, column: 11, scope: !6669)
!6675 = !DILocation(line: 1449, column: 5, scope: !6669)
!6676 = !DILocation(line: 1450, column: 10, scope: !6652)
!6677 = !DILocation(line: 1450, column: 3, scope: !6652)
!6678 = distinct !DISubprogram(name: "DestroyPixelThreadSet", scope: !1, file: !1, line: 1394, type: !6679, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!6679 = !DISubroutineType(types: !6680)
!6680 = !{!1004, !1004}
!6681 = !DILocalVariable(name: "pixels", arg: 1, scope: !6678, file: !1, line: 1394, type: !1004)
!6682 = !DILocation(line: 1394, column: 66, scope: !6678)
!6683 = !DILocalVariable(name: "i", scope: !6678, file: !1, line: 1397, type: !640)
!6684 = !DILocation(line: 1397, column: 5, scope: !6678)
!6685 = !DILocation(line: 1400, column: 9, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6678, file: !1, line: 1400, column: 3)
!6687 = !DILocation(line: 1400, column: 8, scope: !6686)
!6688 = !DILocation(line: 1400, column: 13, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6686, file: !1, line: 1400, column: 3)
!6690 = !DILocation(line: 1400, column: 27, scope: !6689)
!6691 = !DILocation(line: 1400, column: 15, scope: !6689)
!6692 = !DILocation(line: 1400, column: 3, scope: !6686)
!6693 = !DILocation(line: 1401, column: 9, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6689, file: !1, line: 1401, column: 9)
!6695 = !DILocation(line: 1401, column: 16, scope: !6694)
!6696 = !DILocation(line: 1401, column: 19, scope: !6694)
!6697 = !DILocation(line: 1401, column: 9, scope: !6689)
!6698 = !DILocation(line: 1402, column: 60, scope: !6694)
!6699 = !DILocation(line: 1402, column: 67, scope: !6694)
!6700 = !DILocation(line: 1402, column: 37, scope: !6694)
!6701 = !DILocation(line: 1402, column: 17, scope: !6694)
!6702 = !DILocation(line: 1402, column: 7, scope: !6694)
!6703 = !DILocation(line: 1402, column: 14, scope: !6694)
!6704 = !DILocation(line: 1402, column: 16, scope: !6694)
!6705 = !DILocation(line: 1401, column: 42, scope: !6694)
!6706 = !DILocation(line: 1400, column: 68, scope: !6689)
!6707 = !DILocation(line: 1400, column: 3, scope: !6689)
!6708 = distinct !{!6708, !6692, !6709}
!6709 = !DILocation(line: 1402, column: 69, scope: !6686)
!6710 = !DILocation(line: 1403, column: 54, scope: !6678)
!6711 = !DILocation(line: 1403, column: 31, scope: !6678)
!6712 = !DILocation(line: 1403, column: 10, scope: !6678)
!6713 = !DILocation(line: 1403, column: 9, scope: !6678)
!6714 = !DILocation(line: 1404, column: 10, scope: !6678)
!6715 = !DILocation(line: 1404, column: 3, scope: !6678)
!6716 = distinct !DISubprogram(name: "QuantizeErrorFlatten", scope: !1, file: !1, line: 2925, type: !6717, scopeLine: 2927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!6717 = !DISubroutineType(types: !6718)
!6718 = !{!570, !854, !4713, !3784, !1949, !1006}
!6719 = !DILocalVariable(name: "image", arg: 1, scope: !6716, file: !1, line: 2925, type: !854)
!6720 = !DILocation(line: 2925, column: 49, scope: !6716)
!6721 = !DILocalVariable(name: "cube_info", arg: 2, scope: !6716, file: !1, line: 2925, type: !4713)
!6722 = !DILocation(line: 2925, column: 71, scope: !6716)
!6723 = !DILocalVariable(name: "node_info", arg: 3, scope: !6716, file: !1, line: 2926, type: !3784)
!6724 = !DILocation(line: 2926, column: 19, scope: !6716)
!6725 = !DILocalVariable(name: "offset", arg: 4, scope: !6716, file: !1, line: 2926, type: !1949)
!6726 = !DILocation(line: 2926, column: 43, scope: !6716)
!6727 = !DILocalVariable(name: "quantize_error", arg: 5, scope: !6716, file: !1, line: 2926, type: !1006)
!6728 = !DILocation(line: 2926, column: 66, scope: !6716)
!6729 = !DILocalVariable(name: "i", scope: !6716, file: !1, line: 2929, type: !640)
!6730 = !DILocation(line: 2929, column: 5, scope: !6716)
!6731 = !DILocalVariable(name: "n", scope: !6716, file: !1, line: 2932, type: !570)
!6732 = !DILocation(line: 2932, column: 5, scope: !6716)
!6733 = !DILocalVariable(name: "number_children", scope: !6716, file: !1, line: 2933, type: !570)
!6734 = !DILocation(line: 2933, column: 5, scope: !6716)
!6735 = !DILocation(line: 2935, column: 7, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6716, file: !1, line: 2935, column: 7)
!6737 = !DILocation(line: 2935, column: 27, scope: !6736)
!6738 = !DILocation(line: 2935, column: 38, scope: !6736)
!6739 = !DILocation(line: 2935, column: 14, scope: !6736)
!6740 = !DILocation(line: 2935, column: 7, scope: !6716)
!6741 = !DILocation(line: 2936, column: 5, scope: !6736)
!6742 = !DILocation(line: 2937, column: 26, scope: !6716)
!6743 = !DILocation(line: 2937, column: 37, scope: !6716)
!6744 = !DILocation(line: 2937, column: 3, scope: !6716)
!6745 = !DILocation(line: 2937, column: 18, scope: !6716)
!6746 = !DILocation(line: 2937, column: 25, scope: !6716)
!6747 = !DILocation(line: 2938, column: 4, scope: !6716)
!6748 = !DILocation(line: 2939, column: 19, scope: !6716)
!6749 = !DILocation(line: 2939, column: 30, scope: !6716)
!6750 = !DILocation(line: 2939, column: 46, scope: !6716)
!6751 = !DILocation(line: 2939, column: 18, scope: !6716)
!6752 = !DILocation(line: 2940, column: 9, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6716, file: !1, line: 2940, column: 3)
!6754 = !DILocation(line: 2940, column: 8, scope: !6753)
!6755 = !DILocation(line: 2940, column: 13, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6753, file: !1, line: 2940, column: 3)
!6757 = !DILocation(line: 2940, column: 27, scope: !6756)
!6758 = !DILocation(line: 2940, column: 15, scope: !6756)
!6759 = !DILocation(line: 2940, column: 3, scope: !6753)
!6760 = !DILocation(line: 2941, column: 9, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6756, file: !1, line: 2941, column: 9)
!6762 = !DILocation(line: 2941, column: 20, scope: !6761)
!6763 = !DILocation(line: 2941, column: 26, scope: !6761)
!6764 = !DILocation(line: 2941, column: 29, scope: !6761)
!6765 = !DILocation(line: 2941, column: 9, scope: !6756)
!6766 = !DILocation(line: 2942, column: 31, scope: !6761)
!6767 = !DILocation(line: 2942, column: 37, scope: !6761)
!6768 = !DILocation(line: 2942, column: 47, scope: !6761)
!6769 = !DILocation(line: 2942, column: 58, scope: !6761)
!6770 = !DILocation(line: 2942, column: 64, scope: !6761)
!6771 = !DILocation(line: 2942, column: 67, scope: !6761)
!6772 = !DILocation(line: 2942, column: 74, scope: !6761)
!6773 = !DILocation(line: 2942, column: 73, scope: !6761)
!6774 = !DILocation(line: 2943, column: 9, scope: !6761)
!6775 = !DILocation(line: 2942, column: 10, scope: !6761)
!6776 = !DILocation(line: 2942, column: 8, scope: !6761)
!6777 = !DILocation(line: 2942, column: 7, scope: !6761)
!6778 = !DILocation(line: 2941, column: 45, scope: !6761)
!6779 = !DILocation(line: 2940, column: 46, scope: !6756)
!6780 = !DILocation(line: 2940, column: 3, scope: !6756)
!6781 = distinct !{!6781, !6759, !6782}
!6782 = !DILocation(line: 2943, column: 23, scope: !6753)
!6783 = !DILocation(line: 2944, column: 10, scope: !6716)
!6784 = !DILocation(line: 2944, column: 3, scope: !6716)
!6785 = !DILocation(line: 2945, column: 1, scope: !6716)
!6786 = distinct !DISubprogram(name: "MagickRealTypeCompare", scope: !1, file: !1, line: 3059, type: !6787, scopeLine: 3060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!6787 = !DISubroutineType(types: !6788)
!6788 = !{!453, !856, !856}
!6789 = !DILocalVariable(name: "error_p", arg: 1, scope: !6786, file: !1, line: 3059, type: !856)
!6790 = !DILocation(line: 3059, column: 46, scope: !6786)
!6791 = !DILocalVariable(name: "error_q", arg: 2, scope: !6786, file: !1, line: 3059, type: !856)
!6792 = !DILocation(line: 3059, column: 66, scope: !6786)
!6793 = !DILocalVariable(name: "p", scope: !6786, file: !1, line: 3062, type: !1006)
!6794 = !DILocation(line: 3062, column: 6, scope: !6786)
!6795 = !DILocalVariable(name: "q", scope: !6786, file: !1, line: 3063, type: !1006)
!6796 = !DILocation(line: 3063, column: 6, scope: !6786)
!6797 = !DILocation(line: 3065, column: 24, scope: !6786)
!6798 = !DILocation(line: 3065, column: 5, scope: !6786)
!6799 = !DILocation(line: 3065, column: 4, scope: !6786)
!6800 = !DILocation(line: 3066, column: 24, scope: !6786)
!6801 = !DILocation(line: 3066, column: 5, scope: !6786)
!6802 = !DILocation(line: 3066, column: 4, scope: !6786)
!6803 = !DILocation(line: 3067, column: 8, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6786, file: !1, line: 3067, column: 7)
!6805 = !DILocation(line: 3067, column: 7, scope: !6804)
!6806 = !DILocation(line: 3067, column: 13, scope: !6804)
!6807 = !DILocation(line: 3067, column: 12, scope: !6804)
!6808 = !DILocation(line: 3067, column: 10, scope: !6804)
!6809 = !DILocation(line: 3067, column: 7, scope: !6786)
!6810 = !DILocation(line: 3068, column: 5, scope: !6804)
!6811 = !DILocation(line: 3069, column: 23, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6786, file: !1, line: 3069, column: 7)
!6813 = !DILocation(line: 3069, column: 22, scope: !6812)
!6814 = !DILocation(line: 3069, column: 26, scope: !6812)
!6815 = !DILocation(line: 3069, column: 25, scope: !6812)
!6816 = !DILocation(line: 3069, column: 24, scope: !6812)
!6817 = !DILocation(line: 3069, column: 12, scope: !6812)
!6818 = !DILocation(line: 3069, column: 7, scope: !6812)
!6819 = !DILocation(line: 3069, column: 30, scope: !6812)
!6820 = !DILocation(line: 3069, column: 7, scope: !6786)
!6821 = !DILocation(line: 3070, column: 5, scope: !6812)
!6822 = !DILocation(line: 3071, column: 3, scope: !6786)
!6823 = !DILocation(line: 3072, column: 1, scope: !6786)
!6824 = distinct !DISubprogram(name: "Reduce", scope: !1, file: !1, line: 2974, type: !4622, scopeLine: 2976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!6825 = !DILocalVariable(name: "image", arg: 1, scope: !6824, file: !1, line: 2974, type: !854)
!6826 = !DILocation(line: 2974, column: 33, scope: !6824)
!6827 = !DILocalVariable(name: "cube_info", arg: 2, scope: !6824, file: !1, line: 2974, type: !938)
!6828 = !DILocation(line: 2974, column: 49, scope: !6824)
!6829 = !DILocalVariable(name: "node_info", arg: 3, scope: !6824, file: !1, line: 2975, type: !3784)
!6830 = !DILocation(line: 2975, column: 19, scope: !6824)
!6831 = !DILocalVariable(name: "i", scope: !6824, file: !1, line: 2978, type: !640)
!6832 = !DILocation(line: 2978, column: 5, scope: !6824)
!6833 = !DILocalVariable(name: "number_children", scope: !6824, file: !1, line: 2981, type: !570)
!6834 = !DILocation(line: 2981, column: 5, scope: !6824)
!6835 = !DILocation(line: 2986, column: 19, scope: !6824)
!6836 = !DILocation(line: 2986, column: 30, scope: !6824)
!6837 = !DILocation(line: 2986, column: 46, scope: !6824)
!6838 = !DILocation(line: 2986, column: 18, scope: !6824)
!6839 = !DILocation(line: 2987, column: 9, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6824, file: !1, line: 2987, column: 3)
!6841 = !DILocation(line: 2987, column: 8, scope: !6840)
!6842 = !DILocation(line: 2987, column: 13, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6840, file: !1, line: 2987, column: 3)
!6844 = !DILocation(line: 2987, column: 27, scope: !6843)
!6845 = !DILocation(line: 2987, column: 15, scope: !6843)
!6846 = !DILocation(line: 2987, column: 3, scope: !6840)
!6847 = !DILocation(line: 2988, column: 9, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6843, file: !1, line: 2988, column: 9)
!6849 = !DILocation(line: 2988, column: 20, scope: !6848)
!6850 = !DILocation(line: 2988, column: 26, scope: !6848)
!6851 = !DILocation(line: 2988, column: 29, scope: !6848)
!6852 = !DILocation(line: 2988, column: 9, scope: !6843)
!6853 = !DILocation(line: 2989, column: 14, scope: !6848)
!6854 = !DILocation(line: 2989, column: 20, scope: !6848)
!6855 = !DILocation(line: 2989, column: 30, scope: !6848)
!6856 = !DILocation(line: 2989, column: 41, scope: !6848)
!6857 = !DILocation(line: 2989, column: 47, scope: !6848)
!6858 = !DILocation(line: 2989, column: 7, scope: !6848)
!6859 = !DILocation(line: 2988, column: 45, scope: !6848)
!6860 = !DILocation(line: 2987, column: 45, scope: !6843)
!6861 = !DILocation(line: 2987, column: 3, scope: !6843)
!6862 = distinct !{!6862, !6846, !6863}
!6863 = !DILocation(line: 2989, column: 49, scope: !6840)
!6864 = !DILocation(line: 2990, column: 7, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6824, file: !1, line: 2990, column: 7)
!6866 = !DILocation(line: 2990, column: 18, scope: !6865)
!6867 = !DILocation(line: 2990, column: 36, scope: !6865)
!6868 = !DILocation(line: 2990, column: 47, scope: !6865)
!6869 = !DILocation(line: 2990, column: 33, scope: !6865)
!6870 = !DILocation(line: 2990, column: 7, scope: !6824)
!6871 = !DILocation(line: 2991, column: 16, scope: !6865)
!6872 = !DILocation(line: 2991, column: 22, scope: !6865)
!6873 = !DILocation(line: 2991, column: 32, scope: !6865)
!6874 = !DILocation(line: 2991, column: 5, scope: !6865)
!6875 = !DILocation(line: 2997, column: 11, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6877, file: !1, line: 2997, column: 11)
!6877 = distinct !DILexicalBlock(scope: !6865, file: !1, line: 2993, column: 5)
!6878 = !DILocation(line: 2997, column: 22, scope: !6876)
!6879 = !DILocation(line: 2997, column: 36, scope: !6876)
!6880 = !DILocation(line: 2997, column: 11, scope: !6877)
!6881 = !DILocation(line: 2998, column: 9, scope: !6876)
!6882 = !DILocation(line: 2998, column: 20, scope: !6876)
!6883 = !DILocation(line: 2998, column: 26, scope: !6876)
!6884 = !DILocation(line: 2999, column: 11, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6877, file: !1, line: 2999, column: 11)
!6886 = !DILocation(line: 2999, column: 22, scope: !6885)
!6887 = !DILocation(line: 2999, column: 39, scope: !6885)
!6888 = !DILocation(line: 2999, column: 50, scope: !6885)
!6889 = !DILocation(line: 2999, column: 37, scope: !6885)
!6890 = !DILocation(line: 2999, column: 11, scope: !6877)
!6891 = !DILocation(line: 3000, column: 35, scope: !6885)
!6892 = !DILocation(line: 3000, column: 46, scope: !6885)
!6893 = !DILocation(line: 3000, column: 9, scope: !6885)
!6894 = !DILocation(line: 3000, column: 20, scope: !6885)
!6895 = !DILocation(line: 3000, column: 34, scope: !6885)
!6896 = !DILocation(line: 3002, column: 1, scope: !6824)
!6897 = distinct !DISubprogram(name: "ScaleQuantumToMap", scope: !6898, file: !6898, line: 408, type: !6899, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!6898 = !DIFile(filename: "./magick/quantum-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!6899 = !DISubroutineType(types: !6900)
!6900 = !{!5, !5017}
!6901 = !DILocalVariable(name: "quantum", arg: 1, scope: !6897, file: !6898, line: 408, type: !5017)
!6902 = !DILocation(line: 408, column: 60, scope: !6897)
!6903 = !DILocation(line: 410, column: 7, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6897, file: !6898, line: 410, column: 7)
!6905 = !DILocation(line: 410, column: 15, scope: !6904)
!6906 = !DILocation(line: 410, column: 7, scope: !6897)
!6907 = !DILocation(line: 411, column: 5, scope: !6904)
!6908 = !DILocation(line: 413, column: 25, scope: !6897)
!6909 = !DILocation(line: 413, column: 10, scope: !6897)
!6910 = !DILocation(line: 413, column: 3, scope: !6897)
!6911 = !DILocation(line: 419, column: 1, scope: !6897)
!6912 = distinct !DISubprogram(name: "IntensityCompare", scope: !1, file: !1, line: 3296, type: !6787, scopeLine: 3297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!6913 = !DILocalVariable(name: "x", arg: 1, scope: !6912, file: !1, line: 3296, type: !856)
!6914 = !DILocation(line: 3296, column: 41, scope: !6912)
!6915 = !DILocalVariable(name: "y", arg: 2, scope: !6912, file: !1, line: 3296, type: !856)
!6916 = !DILocation(line: 3296, column: 55, scope: !6912)
!6917 = !DILocalVariable(name: "color_1", scope: !6912, file: !1, line: 3299, type: !669)
!6918 = !DILocation(line: 3299, column: 6, scope: !6912)
!6919 = !DILocalVariable(name: "color_2", scope: !6912, file: !1, line: 3300, type: !669)
!6920 = !DILocation(line: 3300, column: 6, scope: !6912)
!6921 = !DILocalVariable(name: "intensity", scope: !6912, file: !1, line: 3303, type: !453)
!6922 = !DILocation(line: 3303, column: 5, scope: !6912)
!6923 = !DILocation(line: 3305, column: 27, scope: !6912)
!6924 = !DILocation(line: 3305, column: 11, scope: !6912)
!6925 = !DILocation(line: 3305, column: 10, scope: !6912)
!6926 = !DILocation(line: 3306, column: 27, scope: !6912)
!6927 = !DILocation(line: 3306, column: 11, scope: !6912)
!6928 = !DILocation(line: 3306, column: 10, scope: !6912)
!6929 = !DILocation(line: 3307, column: 34, scope: !6912)
!6930 = !DILocation(line: 3307, column: 13, scope: !6912)
!6931 = !DILocation(line: 3307, column: 70, scope: !6912)
!6932 = !DILocation(line: 3307, column: 49, scope: !6912)
!6933 = !DILocation(line: 3307, column: 43, scope: !6912)
!6934 = !DILocation(line: 3307, column: 42, scope: !6912)
!6935 = !DILocation(line: 3307, column: 12, scope: !6912)
!6936 = !DILocation(line: 3308, column: 16, scope: !6912)
!6937 = !DILocation(line: 3308, column: 3, scope: !6912)
!6938 = distinct !DISubprogram(name: "PixelPacketIntensity", scope: !5450, file: !5450, line: 174, type: !6939, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1016)
!6939 = !DISubroutineType(types: !6940)
!6940 = !{!624, !930}
!6941 = !DILocalVariable(name: "pixel", arg: 1, scope: !6938, file: !5450, line: 174, type: !930)
!6942 = !DILocation(line: 174, column: 63, scope: !6938)
!6943 = !DILocalVariable(name: "intensity", scope: !6938, file: !5450, line: 177, type: !935)
!6944 = !DILocation(line: 177, column: 5, scope: !6938)
!6945 = !DILocation(line: 179, column: 8, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6938, file: !5450, line: 179, column: 7)
!6947 = !DILocation(line: 179, column: 15, scope: !6946)
!6948 = !DILocation(line: 179, column: 23, scope: !6946)
!6949 = !DILocation(line: 179, column: 30, scope: !6946)
!6950 = !DILocation(line: 179, column: 20, scope: !6946)
!6951 = !DILocation(line: 179, column: 37, scope: !6946)
!6952 = !DILocation(line: 179, column: 41, scope: !6946)
!6953 = !DILocation(line: 179, column: 48, scope: !6946)
!6954 = !DILocation(line: 179, column: 57, scope: !6946)
!6955 = !DILocation(line: 179, column: 64, scope: !6946)
!6956 = !DILocation(line: 179, column: 54, scope: !6946)
!6957 = !DILocation(line: 179, column: 7, scope: !6938)
!6958 = !DILocation(line: 180, column: 12, scope: !6946)
!6959 = !DILocation(line: 180, column: 19, scope: !6946)
!6960 = !DILocation(line: 180, column: 5, scope: !6946)
!6961 = !DILocation(line: 181, column: 40, scope: !6938)
!6962 = !DILocation(line: 181, column: 47, scope: !6938)
!6963 = !DILocation(line: 181, column: 39, scope: !6938)
!6964 = !DILocation(line: 181, column: 60, scope: !6938)
!6965 = !DILocation(line: 181, column: 67, scope: !6938)
!6966 = !DILocation(line: 181, column: 59, scope: !6938)
!6967 = !DILocation(line: 181, column: 50, scope: !6938)
!6968 = !DILocation(line: 182, column: 14, scope: !6938)
!6969 = !DILocation(line: 182, column: 21, scope: !6938)
!6970 = !DILocation(line: 182, column: 13, scope: !6938)
!6971 = !DILocation(line: 181, column: 72, scope: !6938)
!6972 = !DILocation(line: 181, column: 13, scope: !6938)
!6973 = !DILocation(line: 181, column: 12, scope: !6938)
!6974 = !DILocation(line: 183, column: 25, scope: !6938)
!6975 = !DILocation(line: 183, column: 10, scope: !6938)
!6976 = !DILocation(line: 183, column: 3, scope: !6938)
!6977 = !DILocation(line: 184, column: 1, scope: !6938)
