; ModuleID = 'dist/Storable/Storable.c'
source_filename = "dist/Storable/Storable.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sv = type { i8*, i32, i32, %union.anon }
%union.anon = type { i8* }
%struct.stcxt = type { i32, i32, %struct.ptr_tbl*, %struct.hv*, %struct.av*, %struct.av*, i64, %struct.hv*, %struct.av*, %struct.hv*, i64, i64, i32, i32, i32, i32, %struct.sv*, i32, i32, i32, i32, %struct.extendable, %struct.extendable, %struct.extendable, %struct._PerlIO**, i32, i32, %struct.sv* (%struct.stcxt*, i8*)**, %struct.sv*, %struct.sv*, i32 }
%struct.ptr_tbl = type { %struct.ptr_tbl_ent**, i64, i64, %struct.ptr_tbl_arena*, %struct.ptr_tbl_ent*, %struct.ptr_tbl_ent* }
%struct.ptr_tbl_arena = type opaque
%struct.ptr_tbl_ent = type { %struct.ptr_tbl_ent*, i8*, i8* }
%struct.av = type { %struct.xpvav*, i32, i32, %union.anon.2 }
%struct.xpvav = type { %struct.hv*, %union._xmgu, i64, i64, %struct.sv** }
%union._xmgu = type { %struct.magic* }
%struct.magic = type { %struct.magic*, %struct.mgvtbl*, i16, i8, i8, i64, %struct.sv*, i8* }
%struct.mgvtbl = type { i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*, %struct.sv*, i8*, i32)*, i32 (%struct.magic*, %struct.clone_params*)*, i32 (%struct.sv*, %struct.magic*)* }
%struct.clone_params = type { %struct.av*, i64, %struct.interpreter*, %struct.interpreter*, %struct.av* }
%struct.interpreter = type { i8 }
%union.anon.2 = type { i8* }
%struct.hv = type { %struct.xpvhv*, i32, i32, %union.anon.4 }
%struct.xpvhv = type { %struct.hv*, %union._xmgu, i64, i64 }
%union.anon.4 = type { i8* }
%struct.extendable = type { i8*, i64, i8*, i8* }
%struct._PerlIO = type opaque
%struct.cv = type { %struct.xpvcv*, i32, i32, %union.anon.10 }
%struct.xpvcv = type { %struct.hv*, %union._xmgu, i64, %union.anon.5, %struct.hv*, %union.anon.6, %union.anon.7, %union.anon.8, i8*, %union.anon.9, %struct.cv*, i32, i32, i32 }
%union.anon.5 = type { i64 }
%union.anon.6 = type { %struct.op* }
%struct.op = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i8, i8 }
%union.anon.7 = type { %struct.op* }
%union.anon.8 = type { %struct.gv* }
%struct.gv = type { %struct.xpvgv*, i32, i32, %union.anon.3 }
%struct.xpvgv = type { %struct.hv*, %union._xmgu, i64, %union.anon.13, %union._xivu, %union._xnvu }
%union.anon.13 = type { i64 }
%union._xivu = type { i64 }
%union._xnvu = type { double }
%union.anon.3 = type { i8* }
%union.anon.9 = type { %struct.padlist* }
%struct.padlist = type { i64, %struct.av**, i32, i32 }
%union.anon.10 = type { i8* }
%union.any = type { i8* }
%struct.io = type { %struct.xpvio*, i32, i32, %union.anon.1 }
%struct.xpvio = type { %struct.hv*, %union._xmgu, i64, %union.anon.14, %union._xivu, %struct._PerlIO**, %union.anon.15, i64, i64, i64, i8*, %struct.gv*, i8*, %struct.gv*, i8*, %struct.gv*, i8, i8 }
%union.anon.14 = type { i64 }
%union.anon.15 = type { %struct.__dirstream* }
%struct.__dirstream = type opaque
%union.anon.1 = type { i8* }
%struct.xpvmg = type { %struct.hv*, %union._xmgu, i64, %union.anon.16, %union._xivu, %union._xnvu }
%union.anon.16 = type { i64 }
%struct.he = type { %struct.he*, %struct.hek*, %union.anon.0 }
%struct.hek = type { i32, i32, [1 x i8] }
%union.anon.0 = type { %struct.sv* }
%struct.xpvhv_aux = type { %union._xhvnameu, %struct.av*, %struct.he*, i32, i32, %struct.mro_meta*, i32, i32, i32, i32 }
%union._xhvnameu = type { %struct.hek* }
%struct.mro_meta = type { %struct.hv*, %struct.sv*, %struct.hv*, i32, i32, %struct.mro_alg*, %struct.hv*, %struct.hv*, i32 }
%struct.mro_alg = type { %struct.av* (%struct.hv*, i32)*, i8*, i16, i16, i32 }
%struct.xpv = type { %struct.hv*, %union._xmgu, i64, %union.anon.17 }
%union.anon.17 = type { i64 }
%struct.gp = type { %struct.sv*, %struct.io*, %struct.cv*, i32, i32, %struct.hv*, %struct.av*, %struct.cv*, %struct.gv*, i32, %struct.hek* }
%struct.xpviv = type { %struct.hv*, %union._xmgu, i64, %union.anon.18, %union._xivu }
%union.anon.18 = type { i64 }
%struct.xpvuv = type { %struct.hv*, %union._xmgu, i64, %union.anon.19, %union._xivu }
%union.anon.19 = type { i64 }
%struct.xpvnv = type { %struct.hv*, %union._xmgu, i64, %union.anon.20, %union._xivu, %union._xnvu }
%union.anon.20 = type { i64 }

@.str = private unnamed_addr constant [25 x i8] c"dist/Storable/Storable.c\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"v5.22.0\00", align 1
@PL_stack_base = external dso_local global %struct.sv**, align 8
@PL_stack_sp = external dso_local global %struct.sv**, align 8
@.str.2 = private unnamed_addr constant [25 x i8] c"Storable::init_perinterp\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"Storable::net_pstore\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"$$\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"Storable::pstore\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"Storable::mstore\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"$\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"Storable::net_mstore\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"Storable::pretrieve\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"Storable::mretrieve\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"Storable::dclone\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"Storable::is_retrieving\00", align 1
@.str.14 = private unnamed_addr constant [21 x i8] c"Storable::is_storing\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"Storable::last_op_in_netorder\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"Storable\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"BIN_MAJOR\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"BIN_MINOR\00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"BIN_WRITE_MINOR\00", align 1
@.str.20 = private unnamed_addr constant [20 x i8] c"Storable::drop_utf8\00", align 1
@PL_markstack_ptr = external dso_local global i32*, align 8
@.str.21 = private unnamed_addr constant [7 x i8] c"f, obj\00", align 1
@PL_sv_yes = external dso_local global %struct.sv, align 8
@PL_sv_undef = external dso_local global %struct.sv, align 8
@Context_ptr = internal global %struct.stcxt* null, align 8
@.str.22 = private unnamed_addr constant [16 x i8] c"Not a reference\00", align 1
@vtbl_storable = internal global %struct.mgvtbl { i32 (%struct.sv*, %struct.magic*)* null, i32 (%struct.sv*, %struct.magic*)* null, i32 (%struct.sv*, %struct.magic*)* null, i32 (%struct.sv*, %struct.magic*)* null, i32 (%struct.sv*, %struct.magic*)* @storable_free, i32 (%struct.sv*, %struct.magic*, %struct.sv*, i8*, i32)* null, i32 (%struct.magic*, %struct.clone_params*)* null, i32 (%struct.sv*, %struct.magic*)* null }, align 8
@magic_write.network_file_header = internal constant [6 x i8] c"pst0\05\0A", align 1
@magic_write.file_header = internal constant [19 x i8] c"pst0\04\0A\0812345678\04\08\08\08", align 16
@sv_store = internal constant [8 x i32 (%struct.stcxt*, %struct.sv*)*] [i32 (%struct.stcxt*, %struct.sv*)* @store_ref, i32 (%struct.stcxt*, %struct.sv*)* @store_scalar, i32 (%struct.stcxt*, %struct.sv*)* bitcast (i32 (%struct.stcxt*, %struct.av*)* @store_array to i32 (%struct.stcxt*, %struct.sv*)*), i32 (%struct.stcxt*, %struct.sv*)* bitcast (i32 (%struct.stcxt*, %struct.hv*)* @store_hash to i32 (%struct.stcxt*, %struct.sv*)*), i32 (%struct.stcxt*, %struct.sv*)* @store_tied, i32 (%struct.stcxt*, %struct.sv*)* @store_tied_item, i32 (%struct.stcxt*, %struct.sv*)* bitcast (i32 (%struct.stcxt*, %struct.cv*)* @store_code to i32 (%struct.stcxt*, %struct.sv*)*), i32 (%struct.stcxt*, %struct.sv*)* @store_other], align 16
@.str.23 = private unnamed_addr constant [16 x i8] c"STORABLE_freeze\00", align 1
@.str.24 = private unnamed_addr constant [44 x i8] c"Unexpected object type (%d) in store_hook()\00", align 1
@.str.25 = private unnamed_addr constant [43 x i8] c"Too late to ignore hooks for %s class \22%s\22\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"cloning\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"storing\00", align 1
@.str.28 = private unnamed_addr constant [16 x i8] c"STORABLE_attach\00", align 1
@.str.29 = private unnamed_addr constant [69 x i8] c"Freeze cannot return references if %s class is using STORABLE_attach\00", align 1
@.str.30 = private unnamed_addr constant [63 x i8] c"Item #%d returned by STORABLE_freeze for %s is not a reference\00", align 1
@.str.31 = private unnamed_addr constant [45 x i8] c"Could not serialize item #%d from hook in %s\00", align 1
@.str.32 = private unnamed_addr constant [59 x i8] c"No magic '%c' found while storing ref to tied %s with hook\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"hash\00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"array\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"scalar\00", align 1
@PL_tmps_floor = external dso_local global i64, align 8
@PL_tmps_ix = external dso_local global i64, align 8
@PL_markstack_max = external dso_local global i32*, align 8
@PL_stack_max = external dso_local global %struct.sv**, align 8
@.str.36 = private unnamed_addr constant [31 x i8] c"Unable to record new classname\00", align 1
@PL_sv_no = external dso_local global %struct.sv, align 8
@.str.37 = private unnamed_addr constant [34 x i8] c"Can't determine type of %s(0x%lx)\00", align 1
@.str.38 = private unnamed_addr constant [20 x i8] c"Storable::canonical\00", align 1
@.str.39 = private unnamed_addr constant [54 x i8] c"Hash %p inconsistent - expected %d keys, %dth is NULL\00", align 1
@PL_sv_placeholder = external dso_local global %struct.sv, align 8
@.str.40 = private unnamed_addr constant [42 x i8] c"No magic '%c' found while storing tied %s\00", align 1
@.str.41 = private unnamed_addr constant [56 x i8] c"No magic 'p' found while storing reference to tied item\00", align 1
@.str.42 = private unnamed_addr constant [18 x i8] c"Storable::Deparse\00", align 1
@.str.43 = private unnamed_addr constant [11 x i8] c"B::Deparse\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@.str.45 = private unnamed_addr constant [46 x i8] c"Unexpected return value from B::Deparse::new\0A\00", align 1
@.str.46 = private unnamed_addr constant [13 x i8] c"coderef2text\00", align 1
@.str.47 = private unnamed_addr constant [55 x i8] c"Unexpected return value from B::Deparse::coderef2text\0A\00", align 1
@.str.48 = private unnamed_addr constant [101 x i8] c"The result of B::Deparse::coderef2text was empty - maybe you're trying to serialize an XS function?\0A\00", align 1
@.str.49 = private unnamed_addr constant [21 x i8] c"Storable::forgive_me\00", align 1
@.str.50 = private unnamed_addr constant [21 x i8] c"Can't store %s items\00", align 1
@.str.51 = private unnamed_addr constant [27 x i8] c"Can't store item %s(0x%lx)\00", align 1
@.str.52 = private unnamed_addr constant [21 x i8] c"You lost %s(0x%lx)%c\00", align 1
@.str.53 = private unnamed_addr constant [4 x i8] c"obj\00", align 1
@.str.54 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str.55 = private unnamed_addr constant [58 x i8] c"Frozen string corrupt - contains characters outside 0-255\00", align 1
@.str.56 = private unnamed_addr constant [20 x i8] c"Not a scalar string\00", align 1
@.str.57 = private unnamed_addr constant [44 x i8] c"Magic number checking on storable %s failed\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.59 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@magicstr = internal constant [5 x i8] c"pst0\00", align 1
@old_magicstr = internal constant [11 x i8] c"perl-store\00", align 1
@.str.60 = private unnamed_addr constant [28 x i8] c"File is not a perl storable\00", align 1
@sv_retrieve = internal constant [33 x %struct.sv* (%struct.stcxt*, i8*)*] [%struct.sv* (%struct.stcxt*, i8*)* null, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_lscalar, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_array, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_hash, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_ref, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_undef, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_integer, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_double, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_byte, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_netint, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_scalar, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_tied_array, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_tied_hash, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_tied_scalar, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_sv_undef, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_sv_yes, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_sv_no, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_blessed, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_idx_blessed, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_hook, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_overloaded, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_tied_key, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_tied_idx, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_utf8str, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_lutf8str, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_flag_hash, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_code, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_weakref, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_weakoverloaded, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_vstring, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_lvstring, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_svundef_elem, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other], align 16
@sv_old_retrieve = internal constant [33 x %struct.sv* (%struct.stcxt*, i8*)*] [%struct.sv* (%struct.stcxt*, i8*)* null, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_lscalar, %struct.sv* (%struct.stcxt*, i8*)* @old_retrieve_array, %struct.sv* (%struct.stcxt*, i8*)* @old_retrieve_hash, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_ref, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_undef, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_integer, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_double, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_byte, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_netint, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_scalar, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_tied_array, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_tied_hash, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_tied_scalar, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other], align 16
@.str.61 = private unnamed_addr constant [30 x i8] c"Storable::accept_future_minor\00", align 1
@.str.62 = private unnamed_addr constant [60 x i8] c"Storable binary image v%d.%d more recent than I am (v%d.%d)\00", align 1
@byteorderstr = internal constant [9 x i8] c"12345678\00", align 1
@.str.63 = private unnamed_addr constant [29 x i8] c"Byte order is not compatible\00", align 1
@.str.64 = private unnamed_addr constant [31 x i8] c"Integer size is not compatible\00", align 1
@.str.65 = private unnamed_addr constant [36 x i8] c"Long integer size is not compatible\00", align 1
@.str.66 = private unnamed_addr constant [31 x i8] c"Pointer size is not compatible\00", align 1
@.str.67 = private unnamed_addr constant [30 x i8] c"Double size is not compatible\00", align 1
@PL_tainting = external dso_local global i8, align 1
@PL_tainted = external dso_local global i8, align 1
@.str.68 = private unnamed_addr constant [46 x i8] c"Class name #%ld should have been seen already\00", align 1
@.str.69 = private unnamed_addr constant [47 x i8] c"Object #%ld should have been retrieved already\00", align 1
@.str.70 = private unnamed_addr constant [50 x i8] c"STORABLE_attach called with unexpected references\00", align 1
@.str.71 = private unnamed_addr constant [43 x i8] c"STORABLE_attach did not return a %s object\00", align 1
@.str.72 = private unnamed_addr constant [14 x i8] c"STORABLE_thaw\00", align 1
@.str.73 = private unnamed_addr constant [78 x i8] c"No STORABLE_thaw defined for objects of class %s (even after a \22require %s;\22)\00", align 1
@.str.74 = private unnamed_addr constant [34 x i8] c"Forgot to deal with extra type %d\00", align 1
@.str.75 = private unnamed_addr constant [60 x i8] c"Cannot restore overloading on %s(0x%lx) (package <unknown>)\00", align 1
@.str.76 = private unnamed_addr constant [82 x i8] c"Cannot restore overloading on %s(0x%lx) (package %s) (even after a \22require %s;\22)\00", align 1
@.str.77 = private unnamed_addr constant [37 x i8] c"Unexpected type %d in retrieve_code\0A\00", align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"sub \00", align 1
@.str.79 = private unnamed_addr constant [15 x i8] c"Storable::Eval\00", align 1
@.str.80 = private unnamed_addr constant [55 x i8] c"Can't eval, please set $Storable::Eval to a true value\00", align 1
@.str.81 = private unnamed_addr constant [2 x i8] c"@\00", align 1
@.str.82 = private unnamed_addr constant [55 x i8] c"Unexpected return value from $Storable::Eval callback\0A\00", align 1
@.str.83 = private unnamed_addr constant [28 x i8] c"code %s caused an error: %s\00", align 1
@.str.84 = private unnamed_addr constant [52 x i8] c"code %s did not evaluate to a subroutine reference\0A\00", align 1
@.str.85 = private unnamed_addr constant [57 x i8] c"Corrupted storable %s (binary v%d.%d), current is v%d.%d\00", align 1
@.str.86 = private unnamed_addr constant [38 x i8] c"Corrupted storable %s (binary v%d.%d)\00", align 1
@.str.87 = private unnamed_addr constant [46 x i8] c"Old tag 0x%lx should have been mapped already\00", align 1
@.str.88 = private unnamed_addr constant [119 x i8] c"Storable binary image v%d.%d contains data of type %d. This Storable is v%d.%d and can only handle data types up to %d\00", align 1
@.str.89 = private unnamed_addr constant [3 x i8] c"sv\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @boot_Storable(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %ax = alloca i32, align 4
  %mark = alloca %struct.sv**, align 8
  %sp = alloca %struct.sv**, align 8
  %items = alloca i32, align 4
  %file = alloca i8*, align 8
  %cv1 = alloca %struct.cv*, align 8
  %stash = alloca %struct.hv*, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %1 = bitcast %struct.cv* %0 to i8*
  %call = call i32 (i32, i8*, i8*, ...) @Perl_xs_handshake(i32 219676775, i8* %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0))
  store i32 %call, i32* %ax, align 4
  %2 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %3 = load i32, i32* %ax, align 4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %2, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %4 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %4, %struct.sv*** %sp, align 8
  %5 = load %struct.sv**, %struct.sv*** %sp, align 8
  %6 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv = trunc i64 %sub.ptr.div to i32
  store i32 %conv, i32* %items, align 4
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8** %file, align 8
  %7 = load i8*, i8** %file, align 8
  %8 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %9 = load i32, i32* %items, align 4
  %10 = load i8*, i8** %file, align 8
  %call2 = call %struct.cv* @Perl_newXS_flags(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0), void (%struct.cv*)* @XS_Storable_init_perinterp, i8* %10, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0)
  %11 = load i8*, i8** %file, align 8
  %call3 = call %struct.cv* @Perl_newXS_flags(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), void (%struct.cv*)* @XS_Storable_pstore, i8* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i32 0)
  store %struct.cv* %call3, %struct.cv** %cv1, align 8
  %12 = load %struct.cv*, %struct.cv** %cv1, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %12, i32 0, i32 0
  %13 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %14 = bitcast %struct.xpvcv* %13 to i8*
  %15 = bitcast i8* %14 to %struct.xpvcv*
  %xcv_start_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %15, i32 0, i32 5
  %xcv_xsubany = bitcast %union.anon.6* %xcv_start_u to %union.any*
  %any_i32 = bitcast %union.any* %xcv_xsubany to i32*
  store i32 1, i32* %any_i32, align 8
  %16 = load i8*, i8** %file, align 8
  %call4 = call %struct.cv* @Perl_newXS_flags(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), void (%struct.cv*)* @XS_Storable_pstore, i8* %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i32 0)
  store %struct.cv* %call4, %struct.cv** %cv1, align 8
  %17 = load %struct.cv*, %struct.cv** %cv1, align 8
  %sv_any5 = getelementptr inbounds %struct.cv, %struct.cv* %17, i32 0, i32 0
  %18 = load %struct.xpvcv*, %struct.xpvcv** %sv_any5, align 8
  %19 = bitcast %struct.xpvcv* %18 to i8*
  %20 = bitcast i8* %19 to %struct.xpvcv*
  %xcv_start_u6 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %20, i32 0, i32 5
  %xcv_xsubany7 = bitcast %union.anon.6* %xcv_start_u6 to %union.any*
  %any_i328 = bitcast %union.any* %xcv_xsubany7 to i32*
  store i32 0, i32* %any_i328, align 8
  %21 = load i8*, i8** %file, align 8
  %call9 = call %struct.cv* @Perl_newXS_flags(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), void (%struct.cv*)* @XS_Storable_mstore, i8* %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 0)
  store %struct.cv* %call9, %struct.cv** %cv1, align 8
  %22 = load %struct.cv*, %struct.cv** %cv1, align 8
  %sv_any10 = getelementptr inbounds %struct.cv, %struct.cv* %22, i32 0, i32 0
  %23 = load %struct.xpvcv*, %struct.xpvcv** %sv_any10, align 8
  %24 = bitcast %struct.xpvcv* %23 to i8*
  %25 = bitcast i8* %24 to %struct.xpvcv*
  %xcv_start_u11 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %25, i32 0, i32 5
  %xcv_xsubany12 = bitcast %union.anon.6* %xcv_start_u11 to %union.any*
  %any_i3213 = bitcast %union.any* %xcv_xsubany12 to i32*
  store i32 0, i32* %any_i3213, align 8
  %26 = load i8*, i8** %file, align 8
  %call14 = call %struct.cv* @Perl_newXS_flags(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), void (%struct.cv*)* @XS_Storable_mstore, i8* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 0)
  store %struct.cv* %call14, %struct.cv** %cv1, align 8
  %27 = load %struct.cv*, %struct.cv** %cv1, align 8
  %sv_any15 = getelementptr inbounds %struct.cv, %struct.cv* %27, i32 0, i32 0
  %28 = load %struct.xpvcv*, %struct.xpvcv** %sv_any15, align 8
  %29 = bitcast %struct.xpvcv* %28 to i8*
  %30 = bitcast i8* %29 to %struct.xpvcv*
  %xcv_start_u16 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %30, i32 0, i32 5
  %xcv_xsubany17 = bitcast %union.anon.6* %xcv_start_u16 to %union.any*
  %any_i3218 = bitcast %union.any* %xcv_xsubany17 to i32*
  store i32 1, i32* %any_i3218, align 8
  %31 = load i8*, i8** %file, align 8
  %call19 = call %struct.cv* @Perl_newXS_flags(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0), void (%struct.cv*)* @XS_Storable_pretrieve, i8* %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 0)
  %32 = load i8*, i8** %file, align 8
  %call20 = call %struct.cv* @Perl_newXS_flags(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0), void (%struct.cv*)* @XS_Storable_mretrieve, i8* %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 0)
  %33 = load i8*, i8** %file, align 8
  %call21 = call %struct.cv* @Perl_newXS_flags(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), void (%struct.cv*)* @XS_Storable_dclone, i8* %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 0)
  %34 = load i8*, i8** %file, align 8
  %call22 = call %struct.cv* @Perl_newXS_flags(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0), void (%struct.cv*)* @XS_Storable_last_op_in_netorder, i8* %34, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0)
  store %struct.cv* %call22, %struct.cv** %cv1, align 8
  %35 = load %struct.cv*, %struct.cv** %cv1, align 8
  %sv_any23 = getelementptr inbounds %struct.cv, %struct.cv* %35, i32 0, i32 0
  %36 = load %struct.xpvcv*, %struct.xpvcv** %sv_any23, align 8
  %37 = bitcast %struct.xpvcv* %36 to i8*
  %38 = bitcast i8* %37 to %struct.xpvcv*
  %xcv_start_u24 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %38, i32 0, i32 5
  %xcv_xsubany25 = bitcast %union.anon.6* %xcv_start_u24 to %union.any*
  %any_i3226 = bitcast %union.any* %xcv_xsubany25 to i32*
  store i32 2, i32* %any_i3226, align 8
  %39 = load i8*, i8** %file, align 8
  %call27 = call %struct.cv* @Perl_newXS_flags(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0), void (%struct.cv*)* @XS_Storable_last_op_in_netorder, i8* %39, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0)
  store %struct.cv* %call27, %struct.cv** %cv1, align 8
  %40 = load %struct.cv*, %struct.cv** %cv1, align 8
  %sv_any28 = getelementptr inbounds %struct.cv, %struct.cv* %40, i32 0, i32 0
  %41 = load %struct.xpvcv*, %struct.xpvcv** %sv_any28, align 8
  %42 = bitcast %struct.xpvcv* %41 to i8*
  %43 = bitcast i8* %42 to %struct.xpvcv*
  %xcv_start_u29 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %43, i32 0, i32 5
  %xcv_xsubany30 = bitcast %union.anon.6* %xcv_start_u29 to %union.any*
  %any_i3231 = bitcast %union.any* %xcv_xsubany30 to i32*
  store i32 1, i32* %any_i3231, align 8
  %44 = load i8*, i8** %file, align 8
  %call32 = call %struct.cv* @Perl_newXS_flags(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i64 0, i64 0), void (%struct.cv*)* @XS_Storable_last_op_in_netorder, i8* %44, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0)
  store %struct.cv* %call32, %struct.cv** %cv1, align 8
  %45 = load %struct.cv*, %struct.cv** %cv1, align 8
  %sv_any33 = getelementptr inbounds %struct.cv, %struct.cv* %45, i32 0, i32 0
  %46 = load %struct.xpvcv*, %struct.xpvcv** %sv_any33, align 8
  %47 = bitcast %struct.xpvcv* %46 to i8*
  %48 = bitcast i8* %47 to %struct.xpvcv*
  %xcv_start_u34 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %48, i32 0, i32 5
  %xcv_xsubany35 = bitcast %union.anon.6* %xcv_start_u34 to %union.any*
  %any_i3236 = bitcast %union.any* %xcv_xsubany35 to i32*
  store i32 0, i32* %any_i3236, align 8
  %call37 = call %struct.hv* @Perl_gv_stashpvn(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i32 8, i32 1)
  store %struct.hv* %call37, %struct.hv** %stash, align 8
  %49 = load %struct.hv*, %struct.hv** %stash, align 8
  %call38 = call %struct.sv* @Perl_newSViv(i64 2)
  %call39 = call %struct.cv* @Perl_newCONSTSUB(%struct.hv* %49, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0), %struct.sv* %call38)
  %50 = load %struct.hv*, %struct.hv** %stash, align 8
  %call40 = call %struct.sv* @Perl_newSViv(i64 10)
  %call41 = call %struct.cv* @Perl_newCONSTSUB(%struct.hv* %50, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), %struct.sv* %call40)
  %51 = load %struct.hv*, %struct.hv** %stash, align 8
  %call42 = call %struct.sv* @Perl_newSViv(i64 10)
  %call43 = call %struct.cv* @Perl_newCONSTSUB(%struct.hv* %51, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i64 0, i64 0), %struct.sv* %call42)
  call void @init_perinterp()
  %call44 = call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i64 0, i64 0), i32 2, i32 3)
  %52 = load i32, i32* %ax, align 4
  call void @Perl_xs_boot_epilog(i32 %52)
  ret void
}

declare dso_local i32 @Perl_xs_handshake(i32, i8*, i8*, ...) #1

declare dso_local %struct.cv* @Perl_newXS_flags(i8*, void (%struct.cv*)*, i8*, i8*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal void @XS_Storable_init_perinterp(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %ax = alloca i32, align 4
  %mark = alloca %struct.sv**, align 8
  %items = alloca i32, align 4
  %tmpXSoff = alloca i64, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %1, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %2 = load i32, i32* %1, align 4
  store i32 %2, i32* %ax, align 4
  %3 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %4 = load i32, i32* %ax, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %ax, align 4
  %idx.ext = sext i32 %4 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %3, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** %sp, align 8
  %6 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv = trunc i64 %sub.ptr.div to i32
  store i32 %conv, i32* %items, align 4
  %7 = load i32, i32* %items, align 4
  %cmp = icmp ne i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  call void @Perl_croak_xs_usage(%struct.cv* %8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @init_perinterp()
  br label %do.body

do.body:                                          ; preds = %if.end
  br label %do.body2

do.body2:                                         ; preds = %do.body
  store i64 0, i64* %tmpXSoff, align 8
  %9 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %10 = load i32, i32* %ax, align 4
  %idx.ext3 = sext i32 %10 to i64
  %add.ptr4 = getelementptr inbounds %struct.sv*, %struct.sv** %9, i64 %idx.ext3
  %add.ptr5 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr4, i64 -1
  store %struct.sv** %add.ptr5, %struct.sv*** @PL_stack_sp, align 8
  br label %do.end6

do.end:                                           ; No predecessors!
  br label %do.end6

do.end6:                                          ; preds = %do.body2, %do.end
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @XS_Storable_pstore(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %ax = alloca i32, align 4
  %mark = alloca %struct.sv**, align 8
  %items = alloca i32, align 4
  %ix = alloca i32, align 4
  %f = alloca %struct._PerlIO**, align 8
  %obj = alloca %struct.sv*, align 8
  %RETVAL = alloca %struct.sv*, align 8
  %tmpXSoff = alloca i64, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %1, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %2 = load i32, i32* %1, align 4
  store i32 %2, i32* %ax, align 4
  %3 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %4 = load i32, i32* %ax, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %ax, align 4
  %idx.ext = sext i32 %4 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %3, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** %sp, align 8
  %6 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv = trunc i64 %sub.ptr.div to i32
  store i32 %conv, i32* %items, align 4
  %7 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %7, i32 0, i32 0
  %8 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %9 = bitcast %struct.xpvcv* %8 to i8*
  %10 = bitcast i8* %9 to %struct.xpvcv*
  %xcv_start_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %10, i32 0, i32 5
  %xcv_xsubany = bitcast %union.anon.6* %xcv_start_u to %union.any*
  %any_i32 = bitcast %union.any* %xcv_xsubany to i32*
  %11 = load i32, i32* %any_i32, align 8
  store i32 %11, i32* %ix, align 4
  %12 = load i32, i32* %items, align 4
  %cmp = icmp ne i32 %12, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %13 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  call void @Perl_croak_xs_usage(%struct.cv* %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %ax, align 4
  %15 = load i32, i32* %items, align 4
  %16 = load %struct.sv**, %struct.sv*** %sp, align 8
  %idx.ext2 = sext i32 %15 to i64
  %idx.neg = sub i64 0, %idx.ext2
  %add.ptr3 = getelementptr inbounds %struct.sv*, %struct.sv** %16, i64 %idx.neg
  store %struct.sv** %add.ptr3, %struct.sv*** %sp, align 8
  %17 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %18 = load i32, i32* %ax, align 4
  %add = add nsw i32 %18, 0
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %17, i64 %idxprom
  %19 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  %call = call %struct.io* @Perl_sv_2io(%struct.sv* %19)
  %sv_any4 = getelementptr inbounds %struct.io, %struct.io* %call, i32 0, i32 0
  %20 = load %struct.xpvio*, %struct.xpvio** %sv_any4, align 8
  %xio_ofp = getelementptr inbounds %struct.xpvio, %struct.xpvio* %20, i32 0, i32 5
  %21 = load %struct._PerlIO**, %struct._PerlIO*** %xio_ofp, align 8
  store %struct._PerlIO** %21, %struct._PerlIO*** %f, align 8
  %22 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %23 = load i32, i32* %ax, align 4
  %add5 = add nsw i32 %23, 1
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds %struct.sv*, %struct.sv** %22, i64 %idxprom6
  %24 = load %struct.sv*, %struct.sv** %arrayidx7, align 8
  store %struct.sv* %24, %struct.sv** %obj, align 8
  %25 = load %struct._PerlIO**, %struct._PerlIO*** %f, align 8
  %26 = load %struct.sv*, %struct.sv** %obj, align 8
  %27 = load i32, i32* %ix, align 4
  %call8 = call i32 @do_store(%struct._PerlIO** %25, %struct.sv* %26, i32 0, i32 %27, %struct.sv** null)
  %tobool = icmp ne i32 %call8, 0
  %28 = zext i1 %tobool to i64
  %cond = select i1 %tobool, %struct.sv* @PL_sv_yes, %struct.sv* @PL_sv_undef
  store %struct.sv* %cond, %struct.sv** %RETVAL, align 8
  %29 = load %struct.sv*, %struct.sv** %RETVAL, align 8
  %30 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %31 = load i32, i32* %ax, align 4
  %add9 = add nsw i32 %31, 0
  %idxprom10 = sext i32 %add9 to i64
  %arrayidx11 = getelementptr inbounds %struct.sv*, %struct.sv** %30, i64 %idxprom10
  store %struct.sv* %29, %struct.sv** %arrayidx11, align 8
  br label %do.body

do.body:                                          ; preds = %if.end
  store i64 1, i64* %tmpXSoff, align 8
  %32 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %33 = load i32, i32* %ax, align 4
  %idx.ext12 = sext i32 %33 to i64
  %add.ptr13 = getelementptr inbounds %struct.sv*, %struct.sv** %32, i64 %idx.ext12
  %add.ptr14 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr13, i64 0
  store %struct.sv** %add.ptr14, %struct.sv*** @PL_stack_sp, align 8
  br label %return

do.end:                                           ; No predecessors!
  %34 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %34, %struct.sv*** @PL_stack_sp, align 8
  br label %return

return:                                           ; preds = %do.end, %do.body
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @XS_Storable_mstore(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %ax = alloca i32, align 4
  %mark = alloca %struct.sv**, align 8
  %items = alloca i32, align 4
  %ix = alloca i32, align 4
  %obj = alloca %struct.sv*, align 8
  %RETVAL = alloca %struct.sv*, align 8
  %tmpXSoff = alloca i64, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %1, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %2 = load i32, i32* %1, align 4
  store i32 %2, i32* %ax, align 4
  %3 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %4 = load i32, i32* %ax, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %ax, align 4
  %idx.ext = sext i32 %4 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %3, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** %sp, align 8
  %6 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv = trunc i64 %sub.ptr.div to i32
  store i32 %conv, i32* %items, align 4
  %7 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %7, i32 0, i32 0
  %8 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %9 = bitcast %struct.xpvcv* %8 to i8*
  %10 = bitcast i8* %9 to %struct.xpvcv*
  %xcv_start_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %10, i32 0, i32 5
  %xcv_xsubany = bitcast %union.anon.6* %xcv_start_u to %union.any*
  %any_i32 = bitcast %union.any* %xcv_xsubany to i32*
  %11 = load i32, i32* %any_i32, align 8
  store i32 %11, i32* %ix, align 4
  %12 = load i32, i32* %items, align 4
  %cmp = icmp ne i32 %12, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %13 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  call void @Perl_croak_xs_usage(%struct.cv* %13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %15 = load i32, i32* %ax, align 4
  %add = add nsw i32 %15, 0
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %14, i64 %idxprom
  %16 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  store %struct.sv* %16, %struct.sv** %obj, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %RETVAL, align 8
  %17 = load %struct.sv*, %struct.sv** %obj, align 8
  %18 = load i32, i32* %ix, align 4
  %call = call i32 @do_store(%struct._PerlIO** null, %struct.sv* %17, i32 0, i32 %18, %struct.sv** %RETVAL)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.end
  store %struct.sv* @PL_sv_undef, %struct.sv** %RETVAL, align 8
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %19 = load %struct.sv*, %struct.sv** %RETVAL, align 8
  %call4 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %19)
  store %struct.sv* %call4, %struct.sv** %RETVAL, align 8
  %20 = load %struct.sv*, %struct.sv** %RETVAL, align 8
  %21 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %22 = load i32, i32* %ax, align 4
  %add5 = add nsw i32 %22, 0
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds %struct.sv*, %struct.sv** %21, i64 %idxprom6
  store %struct.sv* %20, %struct.sv** %arrayidx7, align 8
  br label %do.body

do.body:                                          ; preds = %if.end3
  store i64 1, i64* %tmpXSoff, align 8
  %23 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %24 = load i32, i32* %ax, align 4
  %idx.ext8 = sext i32 %24 to i64
  %add.ptr9 = getelementptr inbounds %struct.sv*, %struct.sv** %23, i64 %idx.ext8
  %add.ptr10 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr9, i64 0
  store %struct.sv** %add.ptr10, %struct.sv*** @PL_stack_sp, align 8
  br label %do.end

do.end:                                           ; preds = %do.body
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @XS_Storable_pretrieve(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %ax = alloca i32, align 4
  %mark = alloca %struct.sv**, align 8
  %items = alloca i32, align 4
  %f = alloca %struct._PerlIO**, align 8
  %RETVAL = alloca %struct.sv*, align 8
  %tmpXSoff = alloca i64, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %1, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %2 = load i32, i32* %1, align 4
  store i32 %2, i32* %ax, align 4
  %3 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %4 = load i32, i32* %ax, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %ax, align 4
  %idx.ext = sext i32 %4 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %3, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** %sp, align 8
  %6 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv = trunc i64 %sub.ptr.div to i32
  store i32 %conv, i32* %items, align 4
  %7 = load i32, i32* %items, align 4
  %cmp = icmp ne i32 %7, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  call void @Perl_croak_xs_usage(%struct.cv* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %10 = load i32, i32* %ax, align 4
  %add = add nsw i32 %10, 0
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %9, i64 %idxprom
  %11 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  %call = call %struct.io* @Perl_sv_2io(%struct.sv* %11)
  %sv_u = getelementptr inbounds %struct.io, %struct.io* %call, i32 0, i32 3
  %svu_fp = bitcast %union.anon.1* %sv_u to %struct._PerlIO***
  %12 = load %struct._PerlIO**, %struct._PerlIO*** %svu_fp, align 8
  store %struct._PerlIO** %12, %struct._PerlIO*** %f, align 8
  %13 = load %struct._PerlIO**, %struct._PerlIO*** %f, align 8
  %call2 = call %struct.sv* @pretrieve(%struct._PerlIO** %13)
  store %struct.sv* %call2, %struct.sv** %RETVAL, align 8
  %14 = load %struct.sv*, %struct.sv** %RETVAL, align 8
  %call3 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %14)
  store %struct.sv* %call3, %struct.sv** %RETVAL, align 8
  %15 = load %struct.sv*, %struct.sv** %RETVAL, align 8
  %16 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %17 = load i32, i32* %ax, align 4
  %add4 = add nsw i32 %17, 0
  %idxprom5 = sext i32 %add4 to i64
  %arrayidx6 = getelementptr inbounds %struct.sv*, %struct.sv** %16, i64 %idxprom5
  store %struct.sv* %15, %struct.sv** %arrayidx6, align 8
  br label %do.body

do.body:                                          ; preds = %if.end
  store i64 1, i64* %tmpXSoff, align 8
  %18 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %19 = load i32, i32* %ax, align 4
  %idx.ext7 = sext i32 %19 to i64
  %add.ptr8 = getelementptr inbounds %struct.sv*, %struct.sv** %18, i64 %idx.ext7
  %add.ptr9 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr8, i64 0
  store %struct.sv** %add.ptr9, %struct.sv*** @PL_stack_sp, align 8
  br label %do.end

do.end:                                           ; preds = %do.body
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @XS_Storable_mretrieve(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %ax = alloca i32, align 4
  %mark = alloca %struct.sv**, align 8
  %items = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  %RETVAL = alloca %struct.sv*, align 8
  %tmpXSoff = alloca i64, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %1, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %2 = load i32, i32* %1, align 4
  store i32 %2, i32* %ax, align 4
  %3 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %4 = load i32, i32* %ax, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %ax, align 4
  %idx.ext = sext i32 %4 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %3, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** %sp, align 8
  %6 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv = trunc i64 %sub.ptr.div to i32
  store i32 %conv, i32* %items, align 4
  %7 = load i32, i32* %items, align 4
  %cmp = icmp ne i32 %7, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  call void @Perl_croak_xs_usage(%struct.cv* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.89, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %10 = load i32, i32* %ax, align 4
  %add = add nsw i32 %10, 0
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %9, i64 %idxprom
  %11 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  store %struct.sv* %11, %struct.sv** %sv, align 8
  %12 = load %struct.sv*, %struct.sv** %sv, align 8
  %call = call %struct.sv* @mretrieve(%struct.sv* %12)
  store %struct.sv* %call, %struct.sv** %RETVAL, align 8
  %13 = load %struct.sv*, %struct.sv** %RETVAL, align 8
  %call2 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %13)
  store %struct.sv* %call2, %struct.sv** %RETVAL, align 8
  %14 = load %struct.sv*, %struct.sv** %RETVAL, align 8
  %15 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %16 = load i32, i32* %ax, align 4
  %add3 = add nsw i32 %16, 0
  %idxprom4 = sext i32 %add3 to i64
  %arrayidx5 = getelementptr inbounds %struct.sv*, %struct.sv** %15, i64 %idxprom4
  store %struct.sv* %14, %struct.sv** %arrayidx5, align 8
  br label %do.body

do.body:                                          ; preds = %if.end
  store i64 1, i64* %tmpXSoff, align 8
  %17 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %18 = load i32, i32* %ax, align 4
  %idx.ext6 = sext i32 %18 to i64
  %add.ptr7 = getelementptr inbounds %struct.sv*, %struct.sv** %17, i64 %idx.ext6
  %add.ptr8 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr7, i64 0
  store %struct.sv** %add.ptr8, %struct.sv*** @PL_stack_sp, align 8
  br label %do.end

do.end:                                           ; preds = %do.body
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @XS_Storable_dclone(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %ax = alloca i32, align 4
  %mark = alloca %struct.sv**, align 8
  %items = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  %RETVAL = alloca %struct.sv*, align 8
  %tmpXSoff = alloca i64, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %1, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %2 = load i32, i32* %1, align 4
  store i32 %2, i32* %ax, align 4
  %3 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %4 = load i32, i32* %ax, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %ax, align 4
  %idx.ext = sext i32 %4 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %3, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** %sp, align 8
  %6 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv = trunc i64 %sub.ptr.div to i32
  store i32 %conv, i32* %items, align 4
  %7 = load i32, i32* %items, align 4
  %cmp = icmp ne i32 %7, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  call void @Perl_croak_xs_usage(%struct.cv* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.89, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %10 = load i32, i32* %ax, align 4
  %add = add nsw i32 %10, 0
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %9, i64 %idxprom
  %11 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  store %struct.sv* %11, %struct.sv** %sv, align 8
  %12 = load %struct.sv*, %struct.sv** %sv, align 8
  %call = call %struct.sv* @dclone(%struct.sv* %12)
  store %struct.sv* %call, %struct.sv** %RETVAL, align 8
  %13 = load %struct.sv*, %struct.sv** %RETVAL, align 8
  %call2 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %13)
  store %struct.sv* %call2, %struct.sv** %RETVAL, align 8
  %14 = load %struct.sv*, %struct.sv** %RETVAL, align 8
  %15 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %16 = load i32, i32* %ax, align 4
  %add3 = add nsw i32 %16, 0
  %idxprom4 = sext i32 %add3 to i64
  %arrayidx5 = getelementptr inbounds %struct.sv*, %struct.sv** %15, i64 %idxprom4
  store %struct.sv* %14, %struct.sv** %arrayidx5, align 8
  br label %do.body

do.body:                                          ; preds = %if.end
  store i64 1, i64* %tmpXSoff, align 8
  %17 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %18 = load i32, i32* %ax, align 4
  %idx.ext6 = sext i32 %18 to i64
  %add.ptr7 = getelementptr inbounds %struct.sv*, %struct.sv** %17, i64 %idx.ext6
  %add.ptr8 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr7, i64 0
  store %struct.sv** %add.ptr8, %struct.sv*** @PL_stack_sp, align 8
  br label %do.end

do.end:                                           ; preds = %do.body
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @XS_Storable_last_op_in_netorder(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %ax = alloca i32, align 4
  %mark = alloca %struct.sv**, align 8
  %items = alloca i32, align 4
  %ix = alloca i32, align 4
  %result = alloca i8, align 1
  %cxt = alloca %struct.stcxt*, align 8
  %tmpXSoff = alloca i64, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %1, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %2 = load i32, i32* %1, align 4
  store i32 %2, i32* %ax, align 4
  %3 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %4 = load i32, i32* %ax, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %ax, align 4
  %idx.ext = sext i32 %4 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %3, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** %sp, align 8
  %6 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv = trunc i64 %sub.ptr.div to i32
  store i32 %conv, i32* %items, align 4
  %7 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %7, i32 0, i32 0
  %8 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %9 = bitcast %struct.xpvcv* %8 to i8*
  %10 = bitcast i8* %9 to %struct.xpvcv*
  %xcv_start_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %10, i32 0, i32 5
  %xcv_xsubany = bitcast %union.anon.6* %xcv_start_u to %union.any*
  %any_i32 = bitcast %union.any* %xcv_xsubany to i32*
  %11 = load i32, i32* %any_i32, align 8
  store i32 %11, i32* %ix, align 4
  %12 = load i32, i32* %items, align 4
  %cmp = icmp ne i32 %12, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %13 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  call void @Perl_croak_xs_usage(%struct.cv* %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %ax, align 4
  %15 = load i32, i32* %items, align 4
  %16 = load %struct.sv**, %struct.sv*** %sp, align 8
  %idx.ext2 = sext i32 %15 to i64
  %idx.neg = sub i64 0, %idx.ext2
  %add.ptr3 = getelementptr inbounds %struct.sv*, %struct.sv** %16, i64 %idx.neg
  store %struct.sv** %add.ptr3, %struct.sv*** %sp, align 8
  %17 = load i32, i32* %ix, align 4
  %tobool = icmp ne i32 %17, 0
  br i1 %tobool, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.end
  %18 = load %struct.stcxt*, %struct.stcxt** @Context_ptr, align 8
  store %struct.stcxt* %18, %struct.stcxt** %cxt, align 8
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %entry5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 0
  %20 = load i32, i32* %entry5, align 8
  %tobool6 = icmp ne i32 %20, 0
  br i1 %tobool6, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then4
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %optype = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 1
  %22 = load i32, i32* %optype, align 4
  %23 = load i32, i32* %ix, align 4
  %and = and i32 %22, %23
  %tobool7 = icmp ne i32 %and, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then4
  %24 = phi i1 [ false, %if.then4 ], [ %tobool7, %land.rhs ]
  %25 = zext i1 %24 to i64
  %cond = select i1 %24, i32 1, i32 0
  %tobool8 = icmp ne i32 %cond, 0
  %frombool = zext i1 %tobool8 to i8
  store i8 %frombool, i8* %result, align 1
  br label %if.end12

if.else:                                          ; preds = %if.end
  %call = call i32 @last_op_in_netorder()
  %tobool9 = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool9, true
  %lnot10 = xor i1 %lnot, true
  %frombool11 = zext i1 %lnot10 to i8
  store i8 %frombool11, i8* %result, align 1
  br label %if.end12

if.end12:                                         ; preds = %if.else, %land.end
  %26 = load i8, i8* %result, align 1
  %tobool13 = trunc i8 %26 to i1
  %27 = zext i1 %tobool13 to i64
  %cond15 = select i1 %tobool13, %struct.sv* @PL_sv_yes, %struct.sv* @PL_sv_no
  %28 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %29 = load i32, i32* %ax, align 4
  %add = add nsw i32 %29, 0
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %28, i64 %idxprom
  store %struct.sv* %cond15, %struct.sv** %arrayidx, align 8
  br label %do.body

do.body:                                          ; preds = %if.end12
  store i64 1, i64* %tmpXSoff, align 8
  %30 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %31 = load i32, i32* %ax, align 4
  %idx.ext16 = sext i32 %31 to i64
  %add.ptr17 = getelementptr inbounds %struct.sv*, %struct.sv** %30, i64 %idx.ext16
  %add.ptr18 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr17, i64 0
  store %struct.sv** %add.ptr18, %struct.sv*** @PL_stack_sp, align 8
  br label %return

do.end:                                           ; No predecessors!
  %32 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %32, %struct.sv*** @PL_stack_sp, align 8
  br label %return

return:                                           ; preds = %do.end, %do.body
  ret void
}

declare dso_local %struct.hv* @Perl_gv_stashpvn(i8*, i32, i32) #1

declare dso_local %struct.cv* @Perl_newCONSTSUB(%struct.hv*, i8*, %struct.sv*) #1

declare dso_local %struct.sv* @Perl_newSViv(i64) #1

; Function Attrs: noinline nounwind uwtable
define internal void @init_perinterp() #0 {
entry:
  %cxt = alloca %struct.stcxt*, align 8
  %self = alloca %struct.sv*, align 8
  %my_sv = alloca %struct.sv*, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** @Context_ptr, align 8
  store %struct.stcxt* %0, %struct.stcxt** %cxt, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %call = call %struct.sv* @Perl_newSV(i64 271)
  store %struct.sv* %call, %struct.sv** %self, align 8
  %1 = load %struct.sv*, %struct.sv** %self, align 8
  %call1 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %1)
  store %struct.sv* %call1, %struct.sv** %my_sv, align 8
  %2 = load %struct.sv*, %struct.sv** %self, align 8
  %call2 = call %struct.magic* @Perl_sv_magicext(%struct.sv* %2, %struct.sv* null, i32 126, %struct.mgvtbl* @vtbl_storable, i8* null, i32 0)
  %3 = load %struct.sv*, %struct.sv** %self, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %3, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %4 = load i8*, i8** %svu_pv, align 8
  %5 = bitcast i8* %4 to %struct.stcxt*
  store %struct.stcxt* %5, %struct.stcxt** %cxt, align 8
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %7 = bitcast %struct.stcxt* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %7, i8 0, i64 272, i1 false)
  %8 = load %struct.sv*, %struct.sv** %my_sv, align 8
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %my_sv3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 29
  store %struct.sv* %8, %struct.sv** %my_sv3, align 8
  br label %do.end

do.end:                                           ; preds = %do.body
  %10 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  store %struct.stcxt* %10, %struct.stcxt** @Context_ptr, align 8
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 12
  store i32 0, i32* %netorder, align 8
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %forgive_me = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 14
  store i32 -1, i32* %forgive_me, align 8
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %accept_future_minor = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 18
  store i32 -1, i32* %accept_future_minor, align 4
  ret void
}

declare dso_local %struct.gv* @Perl_gv_fetchpv(i8*, i32, i32) #1

declare dso_local void @Perl_xs_boot_epilog(i32) #1

declare dso_local void @Perl_croak_xs_usage(%struct.cv*, i8*) #1

declare dso_local %struct.io* @Perl_sv_2io(%struct.sv*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @do_store(%struct._PerlIO** %f, %struct.sv* %sv, i32 %optype, i32 %network_order, %struct.sv** %res) #0 {
entry:
  %retval = alloca i32, align 4
  %f.addr = alloca %struct._PerlIO**, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %optype.addr = alloca i32, align 4
  %network_order.addr = alloca i32, align 4
  %res.addr = alloca %struct.sv**, align 8
  %cxt = alloca %struct.stcxt*, align 8
  %status = alloca i32, align 4
  store %struct._PerlIO** %f, %struct._PerlIO*** %f.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i32 %optype, i32* %optype.addr, align 4
  store i32 %network_order, i32* %network_order.addr, align 4
  store %struct.sv** %res, %struct.sv*** %res.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** @Context_ptr, align 8
  store %struct.stcxt* %0, %struct.stcxt** %cxt, align 8
  %1 = load i32, i32* %optype.addr, align 4
  %or = or i32 %1, 1
  store i32 %or, i32* %optype.addr, align 4
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 19
  %3 = load i32, i32* %s_dirty, align 8
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  call void @clean_context(%struct.stcxt* %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %entry1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 0
  %6 = load i32, i32* %entry1, align 8
  %tobool2 = icmp ne i32 %6, 0
  br i1 %tobool2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %call = call %struct.stcxt* @allocate_context(%struct.stcxt* %7)
  store %struct.stcxt* %call, %struct.stcxt** %cxt, align 8
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %entry5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 0
  %9 = load i32, i32* %entry5, align 8
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %entry5, align 8
  %10 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %10, i32 0, i32 2
  %11 = load i32, i32* %sv_flags, align 4
  %and = and i32 %11, 2048
  %tobool6 = icmp ne i32 %and, 0
  br i1 %tobool6, label %if.end9, label %if.then7

if.then7:                                         ; preds = %if.end4
  br label %do.body

do.body:                                          ; preds = %if.then7
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %s_dirty8 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 19
  store i32 1, i32* %s_dirty8, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i64 0, i64 0))
  br label %do.end

do.end:                                           ; preds = %do.body
  br label %if.end9

if.end9:                                          ; preds = %do.end, %if.end4
  %13 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %13, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u to %struct.sv**
  %14 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  store %struct.sv* %14, %struct.sv** %sv.addr, align 8
  %15 = load %struct._PerlIO**, %struct._PerlIO*** %f.addr, align 8
  %tobool10 = icmp ne %struct._PerlIO** %15, null
  br i1 %tobool10, label %if.end29, label %if.then11

if.then11:                                        ; preds = %if.end9
  br label %do.body12

do.body12:                                        ; preds = %if.then11
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 22
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 0
  %17 = load i8*, i8** %arena, align 8
  %tobool13 = icmp ne i8* %17, null
  br i1 %tobool13, label %if.end19, label %if.then14

if.then14:                                        ; preds = %do.body12
  %call15 = call i8* @Perl_safesysmalloc(i64 8192)
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf16 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 22
  %arena17 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf16, i32 0, i32 0
  store i8* %call15, i8** %arena17, align 8
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf18 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 22
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf18, i32 0, i32 1
  store i64 8192, i64* %asiz, align 8
  br label %if.end19

if.end19:                                         ; preds = %if.then14, %do.body12
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf20 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %20, i32 0, i32 22
  %arena21 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf20, i32 0, i32 0
  %21 = load i8*, i8** %arena21, align 8
  %22 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %22, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf22, i32 0, i32 2
  store i8* %21, i8** %aptr, align 8
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf23 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 22
  %arena24 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf23, i32 0, i32 0
  %24 = load i8*, i8** %arena24, align 8
  %25 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf25 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %25, i32 0, i32 22
  %asiz26 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf25, i32 0, i32 1
  %26 = load i64, i64* %asiz26, align 8
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %26
  %27 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf27 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %27, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf27, i32 0, i32 3
  store i8* %add.ptr, i8** %aend, align 8
  br label %do.end28

do.end28:                                         ; preds = %if.end19
  br label %if.end29

if.end29:                                         ; preds = %do.end28, %if.end9
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %29 = load %struct._PerlIO**, %struct._PerlIO*** %f.addr, align 8
  %30 = load i32, i32* %optype.addr, align 4
  %31 = load i32, i32* %network_order.addr, align 4
  call void @init_store_context(%struct.stcxt* %28, %struct._PerlIO** %29, i32 %30, i32 %31)
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %call30 = call i32 @magic_write(%struct.stcxt* %32)
  %cmp = icmp eq i32 -1, %call30
  br i1 %cmp, label %if.then31, label %if.end32

if.then31:                                        ; preds = %if.end29
  store i32 0, i32* %retval, align 4
  br label %return

if.end32:                                         ; preds = %if.end29
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %34 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call33 = call i32 @store(%struct.stcxt* %33, %struct.sv* %34)
  store i32 %call33, i32* %status, align 4
  %35 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %35, i32 0, i32 24
  %36 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool34 = icmp ne %struct._PerlIO** %36, null
  br i1 %tobool34, label %if.end38, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end32
  %37 = load %struct.sv**, %struct.sv*** %res.addr, align 8
  %tobool35 = icmp ne %struct.sv** %37, null
  br i1 %tobool35, label %if.then36, label %if.end38

if.then36:                                        ; preds = %land.lhs.true
  %call37 = call %struct.sv* @mbuf2sv()
  %38 = load %struct.sv**, %struct.sv*** %res.addr, align 8
  store %struct.sv* %call37, %struct.sv** %38, align 8
  br label %if.end38

if.end38:                                         ; preds = %if.then36, %land.lhs.true, %if.end32
  %39 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  call void @clean_store_context(%struct.stcxt* %39)
  %40 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %prev = getelementptr inbounds %struct.stcxt, %struct.stcxt* %40, i32 0, i32 28
  %41 = load %struct.sv*, %struct.sv** %prev, align 8
  %tobool39 = icmp ne %struct.sv* %41, null
  br i1 %tobool39, label %land.lhs.true40, label %if.end45

land.lhs.true40:                                  ; preds = %if.end38
  %42 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %optype41 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %42, i32 0, i32 1
  %43 = load i32, i32* %optype41, align 4
  %and42 = and i32 %43, 4
  %tobool43 = icmp ne i32 %and42, 0
  br i1 %tobool43, label %if.end45, label %if.then44

if.then44:                                        ; preds = %land.lhs.true40
  %44 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  call void @free_context(%struct.stcxt* %44)
  br label %if.end45

if.end45:                                         ; preds = %if.then44, %land.lhs.true40, %if.end38
  %45 = load i32, i32* %status, align 4
  %cmp46 = icmp eq i32 %45, 0
  %conv = zext i1 %cmp46 to i32
  store i32 %conv, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end45, %if.then31
  %46 = load i32, i32* %retval, align 4
  ret i32 %46
}

; Function Attrs: noinline nounwind uwtable
define internal void @clean_context(%struct.stcxt* %cxt) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf_ro = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 20
  %1 = load i32, i32* %membuf_ro, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %if.then
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf_ro1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 20
  store i32 0, i32* %membuf_ro1, align 4
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 22
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %msaved = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 23
  %5 = bitcast %struct.extendable* %membuf to i8*
  %6 = bitcast %struct.extendable* %msaved to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 32, i1 false)
  br label %do.end

do.end:                                           ; preds = %do.body
  br label %if.end

if.end:                                           ; preds = %do.end, %entry
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %optype = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 1
  %8 = load i32, i32* %optype, align 4
  %and = and i32 %8, 2
  %tobool2 = icmp ne i32 %and, 0
  br i1 %tobool2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  call void @clean_retrieve_context(%struct.stcxt* %9)
  br label %if.end10

if.else:                                          ; preds = %if.end
  %10 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %optype4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %10, i32 0, i32 1
  %11 = load i32, i32* %optype4, align 4
  %and5 = and i32 %11, 1
  %tobool6 = icmp ne i32 %and5, 0
  br i1 %tobool6, label %if.then7, label %if.else8

if.then7:                                         ; preds = %if.else
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  call void @clean_store_context(%struct.stcxt* %12)
  br label %if.end9

if.else8:                                         ; preds = %if.else
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  call void @reset_context(%struct.stcxt* %13)
  br label %if.end9

if.end9:                                          ; preds = %if.else8, %if.then7
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.then3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.stcxt* @allocate_context(%struct.stcxt* %parent_cxt) #0 {
entry:
  %parent_cxt.addr = alloca %struct.stcxt*, align 8
  %cxt = alloca %struct.stcxt*, align 8
  %self = alloca %struct.sv*, align 8
  %my_sv = alloca %struct.sv*, align 8
  store %struct.stcxt* %parent_cxt, %struct.stcxt** %parent_cxt.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %call = call %struct.sv* @Perl_newSV(i64 271)
  store %struct.sv* %call, %struct.sv** %self, align 8
  %0 = load %struct.sv*, %struct.sv** %self, align 8
  %call1 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %0)
  store %struct.sv* %call1, %struct.sv** %my_sv, align 8
  %1 = load %struct.sv*, %struct.sv** %self, align 8
  %call2 = call %struct.magic* @Perl_sv_magicext(%struct.sv* %1, %struct.sv* null, i32 126, %struct.mgvtbl* @vtbl_storable, i8* null, i32 0)
  %2 = load %struct.sv*, %struct.sv** %self, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %3 = load i8*, i8** %svu_pv, align 8
  %4 = bitcast i8* %3 to %struct.stcxt*
  store %struct.stcxt* %4, %struct.stcxt** %cxt, align 8
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %6 = bitcast %struct.stcxt* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %6, i8 0, i64 272, i1 false)
  %7 = load %struct.sv*, %struct.sv** %my_sv, align 8
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %my_sv3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 29
  store %struct.sv* %7, %struct.sv** %my_sv3, align 8
  br label %do.end

do.end:                                           ; preds = %do.body
  %9 = load %struct.stcxt*, %struct.stcxt** %parent_cxt.addr, align 8
  %my_sv4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 29
  %10 = load %struct.sv*, %struct.sv** %my_sv4, align 8
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %prev = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 28
  store %struct.sv* %10, %struct.sv** %prev, align 8
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  store %struct.stcxt* %12, %struct.stcxt** @Context_ptr, align 8
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  ret %struct.stcxt* %13
}

declare dso_local void @Perl_croak(i8*, ...) #1

declare dso_local i8* @Perl_safesysmalloc(i64) #1

; Function Attrs: noinline nounwind uwtable
define internal void @init_store_context(%struct.stcxt* %cxt, %struct._PerlIO** %f, i32 %optype, i32 %network_order) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  %f.addr = alloca %struct._PerlIO**, align 8
  %optype.addr = alloca i32, align 4
  %network_order.addr = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct._PerlIO** %f, %struct._PerlIO*** %f.addr, align 8
  store i32 %optype, i32* %optype.addr, align 4
  store i32 %network_order, i32* %network_order.addr, align 4
  %0 = load i32, i32* %network_order.addr, align 4
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 12
  store i32 %0, i32* %netorder, align 8
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %forgive_me = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 14
  store i32 -1, i32* %forgive_me, align 8
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %deparse = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 15
  store i32 -1, i32* %deparse, align 4
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 16
  store %struct.sv* null, %struct.sv** %eval, align 8
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %canonical = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 17
  store i32 -1, i32* %canonical, align 8
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 10
  store i64 -1, i64* %tagnum, align 8
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %classnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 11
  store i64 -1, i64* %classnum, align 8
  %8 = load %struct._PerlIO**, %struct._PerlIO*** %f.addr, align 8
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 24
  store %struct._PerlIO** %8, %struct._PerlIO*** %fio, align 8
  %10 = load i32, i32* %optype.addr, align 4
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %optype1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 1
  store i32 %10, i32* %optype1, align 4
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %entry2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 0
  store i32 1, i32* %entry2, align 8
  %call = call %struct.ptr_tbl* @Perl_ptr_table_new()
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %pseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 2
  store %struct.ptr_tbl* %call, %struct.ptr_tbl** %pseen, align 8
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 3
  store %struct.hv* null, %struct.hv** %hseen, align 8
  %call3 = call %struct.sv* @Perl_newSV_type(i32 12)
  %15 = bitcast %struct.sv* %call3 to i8*
  %16 = bitcast i8* %15 to %struct.hv*
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hclass = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 7
  store %struct.hv* %16, %struct.hv** %hclass, align 8
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hclass4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 7
  %19 = load %struct.hv*, %struct.hv** %hclass4, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %19, i32 0, i32 0
  %20 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %20, i32 0, i32 3
  store i64 4095, i64* %xhv_max, align 8
  %call5 = call %struct.sv* @Perl_newSV_type(i32 12)
  %21 = bitcast %struct.sv* %call5 to i8*
  %22 = bitcast i8* %21 to %struct.hv*
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 9
  store %struct.hv* %22, %struct.hv** %hook, align 8
  %call6 = call %struct.sv* @Perl_newSV_type(i32 11)
  %24 = bitcast %struct.sv* %call6 to i8*
  %25 = bitcast i8* %24 to %struct.av*
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook_seen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 4
  store %struct.av* %25, %struct.av** %hook_seen, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @magic_write(%struct.stcxt* %cxt) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %header = alloca i8*, align 8
  %length = alloca i64, align 8
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 12
  %1 = load i32, i32* %netorder, align 8
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @magic_write.network_file_header, i64 0, i64 0), i8** %header, align 8
  store i64 6, i64* %length, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @magic_write.file_header, i64 0, i64 0), i8** %header, align 8
  store i64 19, i64* %length, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 24
  %3 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool1 = icmp ne %struct._PerlIO** %3, null
  br i1 %tobool1, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.end
  %4 = load i8*, i8** %header, align 8
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 4
  store i8* %add.ptr, i8** %header, align 8
  %5 = load i64, i64* %length, align 8
  %sub = sub i64 %5, 4
  store i64 %sub, i64* %length, align 8
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  br label %do.body

do.body:                                          ; preds = %if.end3
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 24
  %7 = load %struct._PerlIO**, %struct._PerlIO*** %fio4, align 8
  %tobool5 = icmp ne %struct._PerlIO** %7, null
  br i1 %tobool5, label %if.else46, label %if.then6

if.then6:                                         ; preds = %do.body
  br label %do.body7

do.body7:                                         ; preds = %if.then6
  br label %do.body8

do.body8:                                         ; preds = %do.body7
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %9 = load i8*, i8** %aptr, align 8
  %10 = load i64, i64* %length, align 8
  %add.ptr9 = getelementptr inbounds i8, i8* %9, i64 %10
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf10 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf10, i32 0, i32 3
  %12 = load i8*, i8** %aend, align 8
  %cmp = icmp ugt i8* %add.ptr9, %12
  br i1 %cmp, label %if.then11, label %if.end38

if.then11:                                        ; preds = %do.body8
  br label %do.body12

do.body12:                                        ; preds = %if.then11
  %13 = load i64, i64* %length, align 8
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf13 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 22
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf13, i32 0, i32 1
  %15 = load i64, i64* %asiz, align 8
  %add = add i64 %13, %15
  %add14 = add i64 %add, 8191
  %and = and i64 %add14, -8192
  %conv = trunc i64 %and to i32
  store i32 %conv, i32* %nsz, align 4
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf15 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 22
  %aptr16 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf15, i32 0, i32 2
  %17 = load i8*, i8** %aptr16, align 8
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf17 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 22
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf17, i32 0, i32 0
  %19 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %17 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv18 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv18, i32* %offset, align 4
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %20, i32 0, i32 22
  %arena20 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf19, i32 0, i32 0
  %21 = load i8*, i8** %arena20, align 8
  %22 = load i32, i32* %nsz, align 4
  %conv21 = sext i32 %22 to i64
  %mul = mul i64 %conv21, 1
  %call = call i8* @Perl_safesysrealloc(i8* %21, i64 %mul)
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 22
  %arena23 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf22, i32 0, i32 0
  store i8* %call, i8** %arena23, align 8
  %24 = load i32, i32* %nsz, align 4
  %conv24 = sext i32 %24 to i64
  %25 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf25 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %25, i32 0, i32 22
  %asiz26 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf25, i32 0, i32 1
  store i64 %conv24, i64* %asiz26, align 8
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf27 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 22
  %arena28 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf27, i32 0, i32 0
  %27 = load i8*, i8** %arena28, align 8
  %28 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %28 to i64
  %add.ptr29 = getelementptr inbounds i8, i8* %27, i64 %idx.ext
  %29 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf30 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %29, i32 0, i32 22
  %aptr31 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf30, i32 0, i32 2
  store i8* %add.ptr29, i8** %aptr31, align 8
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf32 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 22
  %arena33 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf32, i32 0, i32 0
  %31 = load i8*, i8** %arena33, align 8
  %32 = load i32, i32* %nsz, align 4
  %idx.ext34 = sext i32 %32 to i64
  %add.ptr35 = getelementptr inbounds i8, i8* %31, i64 %idx.ext34
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf36 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 22
  %aend37 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf36, i32 0, i32 3
  store i8* %add.ptr35, i8** %aend37, align 8
  br label %do.end

do.end:                                           ; preds = %do.body12
  br label %if.end38

if.end38:                                         ; preds = %do.end, %do.body8
  br label %do.end39

do.end39:                                         ; preds = %if.end38
  %34 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf40 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %34, i32 0, i32 22
  %aptr41 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf40, i32 0, i32 2
  %35 = load i8*, i8** %aptr41, align 8
  %36 = load i8*, i8** %header, align 8
  %37 = load i64, i64* %length, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %35, i8* align 1 %36, i64 %37, i1 false)
  %38 = load i64, i64* %length, align 8
  %39 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf42 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %39, i32 0, i32 22
  %aptr43 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf42, i32 0, i32 2
  %40 = load i8*, i8** %aptr43, align 8
  %add.ptr44 = getelementptr inbounds i8, i8* %40, i64 %38
  store i8* %add.ptr44, i8** %aptr43, align 8
  br label %do.end45

do.end45:                                         ; preds = %do.end39
  br label %if.end53

if.else46:                                        ; preds = %do.body
  %41 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio47 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %41, i32 0, i32 24
  %42 = load %struct._PerlIO**, %struct._PerlIO*** %fio47, align 8
  %43 = load i8*, i8** %header, align 8
  %44 = load i64, i64* %length, align 8
  %call48 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %42, i8* %43, i64 %44)
  %45 = load i64, i64* %length, align 8
  %cmp49 = icmp ne i64 %call48, %45
  br i1 %cmp49, label %if.then51, label %if.end52

if.then51:                                        ; preds = %if.else46
  store i32 -1, i32* %retval, align 4
  br label %return

if.end52:                                         ; preds = %if.else46
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %do.end45
  br label %do.end54

do.end54:                                         ; preds = %if.end53
  %46 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder55 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %46, i32 0, i32 12
  %47 = load i32, i32* %netorder55, align 8
  %tobool56 = icmp ne i32 %47, 0
  br i1 %tobool56, label %if.end58, label %if.then57

if.then57:                                        ; preds = %do.end54
  br label %if.end58

if.end58:                                         ; preds = %if.then57, %do.end54
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end58, %if.then51
  %48 = load i32, i32* %retval, align 4
  ret i32 %48
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @store(%struct.stcxt* %cxt, %struct.sv* %sv) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %svh = alloca %struct.sv**, align 8
  %ret = alloca i32, align 4
  %type = alloca i32, align 4
  %pseen = alloca %struct.ptr_tbl*, align 8
  %tagval = alloca i32, align 4
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %nsz71 = alloca i32, align 4
  %offset78 = alloca i32, align 4
  %pkg = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %pseen1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 2
  %1 = load %struct.ptr_tbl*, %struct.ptr_tbl** %pseen1, align 8
  store %struct.ptr_tbl* %1, %struct.ptr_tbl** %pseen, align 8
  %2 = load %struct.ptr_tbl*, %struct.ptr_tbl** %pseen, align 8
  %3 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %4 = bitcast %struct.sv* %3 to i8*
  %call = call i8* @Perl_ptr_table_fetch(%struct.ptr_tbl* %2, i8* %4)
  %5 = bitcast i8* %call to %struct.sv**
  store %struct.sv** %5, %struct.sv*** %svh, align 8
  %6 = load %struct.sv**, %struct.sv*** %svh, align 8
  %tobool = icmp ne %struct.sv** %6, null
  br i1 %tobool, label %if.then, label %if.end139

if.then:                                          ; preds = %entry
  %7 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp = icmp eq %struct.sv* %7, @PL_sv_undef
  br i1 %cmp, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 10
  %9 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %9, 1
  store i64 %inc, i64* %tagnum, align 8
  store i32 1, i32* %type, align 4
  br label %undef_special_case

if.end:                                           ; preds = %if.then
  %10 = load %struct.sv**, %struct.sv*** %svh, align 8
  %11 = bitcast %struct.sv** %10 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 -1
  %12 = ptrtoint i8* %add.ptr to i64
  %and = and i64 %12, 4294967295
  %conv = trunc i64 %and to i32
  %call3 = call i32 @my_swap32(i32 %conv)
  store i32 %call3, i32* %tagval, align 4
  br label %do.body

do.body:                                          ; preds = %if.end
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 24
  %14 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool4 = icmp ne %struct._PerlIO** %14, null
  br i1 %tobool4, label %if.else47, label %if.then5

if.then5:                                         ; preds = %do.body
  br label %do.body6

do.body6:                                         ; preds = %if.then5
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %16 = load i8*, i8** %aptr, align 8
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf7 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf7, i32 0, i32 3
  %18 = load i8*, i8** %aend, align 8
  %cmp8 = icmp ult i8* %16, %18
  br i1 %cmp8, label %if.then10, label %if.else

if.then10:                                        ; preds = %do.body6
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf11 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 22
  %aptr12 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf11, i32 0, i32 2
  %20 = load i8*, i8** %aptr12, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %20, i32 1
  store i8* %incdec.ptr, i8** %aptr12, align 8
  store i8 0, i8* %20, align 1
  br label %if.end45

if.else:                                          ; preds = %do.body6
  br label %do.body13

do.body13:                                        ; preds = %if.else
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 22
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf14, i32 0, i32 1
  %22 = load i64, i64* %asiz, align 8
  %add = add i64 1, %22
  %add15 = add i64 %add, 8191
  %and16 = and i64 %add15, -8192
  %conv17 = trunc i64 %and16 to i32
  store i32 %conv17, i32* %nsz, align 4
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf18 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 22
  %aptr19 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf18, i32 0, i32 2
  %24 = load i8*, i8** %aptr19, align 8
  %25 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf20 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %25, i32 0, i32 22
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf20, i32 0, i32 0
  %26 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %24 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %26 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv21 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv21, i32* %offset, align 4
  %27 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %27, i32 0, i32 22
  %arena23 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf22, i32 0, i32 0
  %28 = load i8*, i8** %arena23, align 8
  %29 = load i32, i32* %nsz, align 4
  %conv24 = sext i32 %29 to i64
  %mul = mul i64 %conv24, 1
  %call25 = call i8* @Perl_safesysrealloc(i8* %28, i64 %mul)
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 22
  %arena27 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 0
  store i8* %call25, i8** %arena27, align 8
  %31 = load i32, i32* %nsz, align 4
  %conv28 = sext i32 %31 to i64
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf29 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %32, i32 0, i32 22
  %asiz30 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf29, i32 0, i32 1
  store i64 %conv28, i64* %asiz30, align 8
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf31 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 22
  %arena32 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf31, i32 0, i32 0
  %34 = load i8*, i8** %arena32, align 8
  %35 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %35 to i64
  %add.ptr33 = getelementptr inbounds i8, i8* %34, i64 %idx.ext
  %36 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf34 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %36, i32 0, i32 22
  %aptr35 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf34, i32 0, i32 2
  store i8* %add.ptr33, i8** %aptr35, align 8
  %37 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf36 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %37, i32 0, i32 22
  %arena37 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf36, i32 0, i32 0
  %38 = load i8*, i8** %arena37, align 8
  %39 = load i32, i32* %nsz, align 4
  %idx.ext38 = sext i32 %39 to i64
  %add.ptr39 = getelementptr inbounds i8, i8* %38, i64 %idx.ext38
  %40 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf40 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %40, i32 0, i32 22
  %aend41 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf40, i32 0, i32 3
  store i8* %add.ptr39, i8** %aend41, align 8
  br label %do.end

do.end:                                           ; preds = %do.body13
  %41 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf42 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %41, i32 0, i32 22
  %aptr43 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf42, i32 0, i32 2
  %42 = load i8*, i8** %aptr43, align 8
  %incdec.ptr44 = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %incdec.ptr44, i8** %aptr43, align 8
  store i8 0, i8* %42, align 1
  br label %if.end45

if.end45:                                         ; preds = %do.end, %if.then10
  br label %do.end46

do.end46:                                         ; preds = %if.end45
  br label %if.end54

if.else47:                                        ; preds = %do.body
  %43 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio48 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %43, i32 0, i32 24
  %44 = load %struct._PerlIO**, %struct._PerlIO*** %fio48, align 8
  %call49 = call i32 @PerlIO_putc(%struct._PerlIO** %44, i32 0)
  %cmp50 = icmp eq i32 %call49, -1
  br i1 %cmp50, label %if.then52, label %if.end53

if.then52:                                        ; preds = %if.else47
  store i32 -1, i32* %retval, align 4
  br label %return

if.end53:                                         ; preds = %if.else47
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %do.end46
  br label %do.end55

do.end55:                                         ; preds = %if.end54
  br label %do.body56

do.body56:                                        ; preds = %do.end55
  %45 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio57 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %45, i32 0, i32 24
  %46 = load %struct._PerlIO**, %struct._PerlIO*** %fio57, align 8
  %tobool58 = icmp ne %struct._PerlIO** %46, null
  br i1 %tobool58, label %if.else130, label %if.then59

if.then59:                                        ; preds = %do.body56
  br label %do.body60

do.body60:                                        ; preds = %if.then59
  br label %do.body61

do.body61:                                        ; preds = %do.body60
  %47 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf62 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %47, i32 0, i32 22
  %aptr63 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf62, i32 0, i32 2
  %48 = load i8*, i8** %aptr63, align 8
  %add.ptr64 = getelementptr inbounds i8, i8* %48, i64 4
  %49 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf65 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %49, i32 0, i32 22
  %aend66 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf65, i32 0, i32 3
  %50 = load i8*, i8** %aend66, align 8
  %cmp67 = icmp ugt i8* %add.ptr64, %50
  br i1 %cmp67, label %if.then69, label %if.end110

if.then69:                                        ; preds = %do.body61
  br label %do.body70

do.body70:                                        ; preds = %if.then69
  %51 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf72 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %51, i32 0, i32 22
  %asiz73 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf72, i32 0, i32 1
  %52 = load i64, i64* %asiz73, align 8
  %add74 = add i64 4, %52
  %add75 = add i64 %add74, 8191
  %and76 = and i64 %add75, -8192
  %conv77 = trunc i64 %and76 to i32
  store i32 %conv77, i32* %nsz71, align 4
  %53 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf79 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %53, i32 0, i32 22
  %aptr80 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf79, i32 0, i32 2
  %54 = load i8*, i8** %aptr80, align 8
  %55 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf81 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %55, i32 0, i32 22
  %arena82 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf81, i32 0, i32 0
  %56 = load i8*, i8** %arena82, align 8
  %sub.ptr.lhs.cast83 = ptrtoint i8* %54 to i64
  %sub.ptr.rhs.cast84 = ptrtoint i8* %56 to i64
  %sub.ptr.sub85 = sub i64 %sub.ptr.lhs.cast83, %sub.ptr.rhs.cast84
  %conv86 = trunc i64 %sub.ptr.sub85 to i32
  store i32 %conv86, i32* %offset78, align 4
  %57 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf87 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %57, i32 0, i32 22
  %arena88 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf87, i32 0, i32 0
  %58 = load i8*, i8** %arena88, align 8
  %59 = load i32, i32* %nsz71, align 4
  %conv89 = sext i32 %59 to i64
  %mul90 = mul i64 %conv89, 1
  %call91 = call i8* @Perl_safesysrealloc(i8* %58, i64 %mul90)
  %60 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf92 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %60, i32 0, i32 22
  %arena93 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf92, i32 0, i32 0
  store i8* %call91, i8** %arena93, align 8
  %61 = load i32, i32* %nsz71, align 4
  %conv94 = sext i32 %61 to i64
  %62 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf95 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %62, i32 0, i32 22
  %asiz96 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf95, i32 0, i32 1
  store i64 %conv94, i64* %asiz96, align 8
  %63 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf97 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %63, i32 0, i32 22
  %arena98 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf97, i32 0, i32 0
  %64 = load i8*, i8** %arena98, align 8
  %65 = load i32, i32* %offset78, align 4
  %idx.ext99 = sext i32 %65 to i64
  %add.ptr100 = getelementptr inbounds i8, i8* %64, i64 %idx.ext99
  %66 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf101 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %66, i32 0, i32 22
  %aptr102 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf101, i32 0, i32 2
  store i8* %add.ptr100, i8** %aptr102, align 8
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf103 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %67, i32 0, i32 22
  %arena104 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf103, i32 0, i32 0
  %68 = load i8*, i8** %arena104, align 8
  %69 = load i32, i32* %nsz71, align 4
  %idx.ext105 = sext i32 %69 to i64
  %add.ptr106 = getelementptr inbounds i8, i8* %68, i64 %idx.ext105
  %70 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf107 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %70, i32 0, i32 22
  %aend108 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf107, i32 0, i32 3
  store i8* %add.ptr106, i8** %aend108, align 8
  br label %do.end109

do.end109:                                        ; preds = %do.body70
  br label %if.end110

if.end110:                                        ; preds = %do.end109, %do.body61
  br label %do.end111

do.end111:                                        ; preds = %if.end110
  %71 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf112 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %71, i32 0, i32 22
  %aptr113 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf112, i32 0, i32 2
  %72 = load i8*, i8** %aptr113, align 8
  %73 = ptrtoint i8* %72 to i64
  %74 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf114 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %74, i32 0, i32 22
  %aptr115 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf114, i32 0, i32 2
  %75 = load i8*, i8** %aptr115, align 8
  %76 = ptrtoint i8* %75 to i64
  %and116 = and i64 %76, -4
  %cmp117 = icmp eq i64 %73, %and116
  br i1 %cmp117, label %if.then119, label %if.else122

if.then119:                                       ; preds = %do.end111
  %77 = load i32, i32* %tagval, align 4
  %78 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf120 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %78, i32 0, i32 22
  %aptr121 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf120, i32 0, i32 2
  %79 = load i8*, i8** %aptr121, align 8
  %80 = bitcast i8* %79 to i32*
  store i32 %77, i32* %80, align 4
  br label %if.end125

if.else122:                                       ; preds = %do.end111
  %81 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf123 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %81, i32 0, i32 22
  %aptr124 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf123, i32 0, i32 2
  %82 = load i8*, i8** %aptr124, align 8
  %83 = bitcast i32* %tagval to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %82, i8* align 4 %83, i64 4, i1 false)
  br label %if.end125

if.end125:                                        ; preds = %if.else122, %if.then119
  %84 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf126 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %84, i32 0, i32 22
  %aptr127 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf126, i32 0, i32 2
  %85 = load i8*, i8** %aptr127, align 8
  %add.ptr128 = getelementptr inbounds i8, i8* %85, i64 4
  store i8* %add.ptr128, i8** %aptr127, align 8
  br label %do.end129

do.end129:                                        ; preds = %if.end125
  br label %if.end137

if.else130:                                       ; preds = %do.body56
  %86 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio131 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %86, i32 0, i32 24
  %87 = load %struct._PerlIO**, %struct._PerlIO*** %fio131, align 8
  %88 = bitcast i32* %tagval to i8*
  %call132 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %87, i8* %88, i64 4)
  %cmp133 = icmp ne i64 %call132, 4
  br i1 %cmp133, label %if.then135, label %if.end136

if.then135:                                       ; preds = %if.else130
  store i32 -1, i32* %retval, align 4
  br label %return

if.end136:                                        ; preds = %if.else130
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %do.end129
  br label %do.end138

do.end138:                                        ; preds = %if.end137
  store i32 0, i32* %retval, align 4
  br label %return

if.end139:                                        ; preds = %entry
  %89 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum140 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %89, i32 0, i32 10
  %90 = load i64, i64* %tagnum140, align 8
  %inc141 = add nsw i64 %90, 1
  store i64 %inc141, i64* %tagnum140, align 8
  %91 = load %struct.ptr_tbl*, %struct.ptr_tbl** %pseen, align 8
  %92 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %93 = bitcast %struct.sv* %92 to i8*
  %94 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum142 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %94, i32 0, i32 10
  %95 = load i64, i64* %tagnum142, align 8
  %add143 = add nsw i64 1, %95
  %96 = inttoptr i64 %add143 to %struct.sv*
  %97 = bitcast %struct.sv* %96 to i8*
  call void @Perl_ptr_table_store(%struct.ptr_tbl* %91, i8* %93, i8* %97)
  %98 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call144 = call i32 @sv_type(%struct.sv* %98)
  store i32 %call144, i32* %type, align 4
  br label %undef_special_case

undef_special_case:                               ; preds = %if.end139, %if.then2
  %99 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %99, i32 0, i32 2
  %100 = load i32, i32* %sv_flags, align 4
  %and145 = and i32 %100, 1048576
  %tobool146 = icmp ne i32 %and145, 0
  br i1 %tobool146, label %if.then147, label %if.else149

if.then147:                                       ; preds = %undef_special_case
  %101 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %101, i32 0, i32 0
  %102 = load i8*, i8** %sv_any, align 8
  %103 = bitcast i8* %102 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %103, i32 0, i32 0
  %104 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  store %struct.hv* %104, %struct.hv** %pkg, align 8
  %105 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %106 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %107 = load i32, i32* %type, align 4
  %108 = load %struct.hv*, %struct.hv** %pkg, align 8
  %call148 = call i32 @store_blessed(%struct.stcxt* %105, %struct.sv* %106, i32 %107, %struct.hv* %108)
  store i32 %call148, i32* %ret, align 4
  br label %if.end151

if.else149:                                       ; preds = %undef_special_case
  %109 = load i32, i32* %type, align 4
  %idxprom = sext i32 %109 to i64
  %arrayidx = getelementptr inbounds [8 x i32 (%struct.stcxt*, %struct.sv*)*], [8 x i32 (%struct.stcxt*, %struct.sv*)*]* @sv_store, i64 0, i64 %idxprom
  %110 = load i32 (%struct.stcxt*, %struct.sv*)*, i32 (%struct.stcxt*, %struct.sv*)** %arrayidx, align 8
  %111 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %112 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call150 = call i32 %110(%struct.stcxt* %111, %struct.sv* %112)
  store i32 %call150, i32* %ret, align 4
  br label %if.end151

if.end151:                                        ; preds = %if.else149, %if.then147
  %113 = load i32, i32* %ret, align 4
  store i32 %113, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end151, %do.end138, %if.then135, %if.then52
  %114 = load i32, i32* %retval, align 4
  ret i32 %114
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @mbuf2sv() #0 {
entry:
  %cxt = alloca %struct.stcxt*, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** @Context_ptr, align 8
  store %struct.stcxt* %0, %struct.stcxt** %cxt, align 8
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 22
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 0
  %2 = load i8*, i8** %arena, align 8
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1, i32 0, i32 2
  %4 = load i8*, i8** %aptr, align 8
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 22
  %arena3 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2, i32 0, i32 0
  %6 = load i8*, i8** %arena3, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call = call %struct.sv* @Perl_newSVpv(i8* %2, i64 %sub.ptr.sub)
  ret %struct.sv* %call
}

; Function Attrs: noinline nounwind uwtable
define internal void @clean_store_context(%struct.stcxt* %cxt) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  %he = alloca %struct.he*, align 8
  %pseen7 = alloca %struct.ptr_tbl*, align 8
  %hclass14 = alloca %struct.hv*, align 8
  %hook20 = alloca %struct.hv*, align 8
  %hook_seen26 = alloca %struct.av*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hclass = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 7
  %1 = load %struct.hv*, %struct.hv** %hclass, align 8
  %tobool = icmp ne %struct.hv* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hclass1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 7
  %3 = load %struct.hv*, %struct.hv** %hclass1, align 8
  %call = call i32 @Perl_hv_iterinit(%struct.hv* %3)
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hclass2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 7
  %5 = load %struct.hv*, %struct.hv** %hclass2, align 8
  %call3 = call %struct.he* @Perl_hv_iternext_flags(%struct.hv* %5, i32 0)
  store %struct.he* %call3, %struct.he** %he, align 8
  %tobool4 = icmp ne %struct.he* %call3, null
  br i1 %tobool4, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %6 = load %struct.he*, %struct.he** %he, align 8
  %he_valu = getelementptr inbounds %struct.he, %struct.he* %6, i32 0, i32 2
  %hent_val = bitcast %union.anon.0* %he_valu to %struct.sv**
  store %struct.sv* @PL_sv_undef, %struct.sv** %hent_val, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end

if.end:                                           ; preds = %while.end, %entry
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %pseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 2
  %8 = load %struct.ptr_tbl*, %struct.ptr_tbl** %pseen, align 8
  %tobool5 = icmp ne %struct.ptr_tbl* %8, null
  br i1 %tobool5, label %if.then6, label %if.end10

if.then6:                                         ; preds = %if.end
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %pseen8 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 2
  %10 = load %struct.ptr_tbl*, %struct.ptr_tbl** %pseen8, align 8
  store %struct.ptr_tbl* %10, %struct.ptr_tbl** %pseen7, align 8
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %pseen9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 2
  store %struct.ptr_tbl* null, %struct.ptr_tbl** %pseen9, align 8
  %12 = load %struct.ptr_tbl*, %struct.ptr_tbl** %pseen7, align 8
  call void @Perl_ptr_table_free(%struct.ptr_tbl* %12)
  br label %if.end10

if.end10:                                         ; preds = %if.then6, %if.end
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hclass11 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 7
  %14 = load %struct.hv*, %struct.hv** %hclass11, align 8
  %tobool12 = icmp ne %struct.hv* %14, null
  br i1 %tobool12, label %if.then13, label %if.end17

if.then13:                                        ; preds = %if.end10
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hclass15 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 7
  %16 = load %struct.hv*, %struct.hv** %hclass15, align 8
  store %struct.hv* %16, %struct.hv** %hclass14, align 8
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hclass16 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 7
  store %struct.hv* null, %struct.hv** %hclass16, align 8
  %18 = load %struct.hv*, %struct.hv** %hclass14, align 8
  call void @Perl_hv_undef_flags(%struct.hv* %18, i32 0)
  %19 = load %struct.hv*, %struct.hv** %hclass14, align 8
  %20 = bitcast %struct.hv* %19 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %20)
  br label %if.end17

if.end17:                                         ; preds = %if.then13, %if.end10
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 9
  %22 = load %struct.hv*, %struct.hv** %hook, align 8
  %tobool18 = icmp ne %struct.hv* %22, null
  br i1 %tobool18, label %if.then19, label %if.end23

if.then19:                                        ; preds = %if.end17
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook21 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 9
  %24 = load %struct.hv*, %struct.hv** %hook21, align 8
  store %struct.hv* %24, %struct.hv** %hook20, align 8
  %25 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %25, i32 0, i32 9
  store %struct.hv* null, %struct.hv** %hook22, align 8
  %26 = load %struct.hv*, %struct.hv** %hook20, align 8
  call void @Perl_hv_undef_flags(%struct.hv* %26, i32 0)
  %27 = load %struct.hv*, %struct.hv** %hook20, align 8
  %28 = bitcast %struct.hv* %27 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %28)
  br label %if.end23

if.end23:                                         ; preds = %if.then19, %if.end17
  %29 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook_seen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %29, i32 0, i32 4
  %30 = load %struct.av*, %struct.av** %hook_seen, align 8
  %tobool24 = icmp ne %struct.av* %30, null
  br i1 %tobool24, label %if.then25, label %if.end29

if.then25:                                        ; preds = %if.end23
  %31 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook_seen27 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %31, i32 0, i32 4
  %32 = load %struct.av*, %struct.av** %hook_seen27, align 8
  store %struct.av* %32, %struct.av** %hook_seen26, align 8
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook_seen28 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 4
  store %struct.av* null, %struct.av** %hook_seen28, align 8
  %34 = load %struct.av*, %struct.av** %hook_seen26, align 8
  call void @Perl_av_undef(%struct.av* %34)
  %35 = load %struct.av*, %struct.av** %hook_seen26, align 8
  %36 = bitcast %struct.av* %35 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %36)
  br label %if.end29

if.end29:                                         ; preds = %if.then25, %if.end23
  %37 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %forgive_me = getelementptr inbounds %struct.stcxt, %struct.stcxt* %37, i32 0, i32 14
  store i32 -1, i32* %forgive_me, align 8
  %38 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %deparse = getelementptr inbounds %struct.stcxt, %struct.stcxt* %38, i32 0, i32 15
  store i32 -1, i32* %deparse, align 4
  %39 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval = getelementptr inbounds %struct.stcxt, %struct.stcxt* %39, i32 0, i32 16
  %40 = load %struct.sv*, %struct.sv** %eval, align 8
  %tobool30 = icmp ne %struct.sv* %40, null
  br i1 %tobool30, label %if.then31, label %if.end33

if.then31:                                        ; preds = %if.end29
  %41 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval32 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %41, i32 0, i32 16
  %42 = load %struct.sv*, %struct.sv** %eval32, align 8
  %43 = bitcast %struct.sv* %42 to i8*
  %44 = bitcast i8* %43 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %44)
  br label %if.end33

if.end33:                                         ; preds = %if.then31, %if.end29
  %45 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval34 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %45, i32 0, i32 16
  store %struct.sv* null, %struct.sv** %eval34, align 8
  %46 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %canonical = getelementptr inbounds %struct.stcxt, %struct.stcxt* %46, i32 0, i32 17
  store i32 -1, i32* %canonical, align 8
  %47 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  call void @reset_context(%struct.stcxt* %47)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_context(%struct.stcxt* %cxt) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  %prev = alloca %struct.stcxt*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %prev1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 28
  %1 = load %struct.sv*, %struct.sv** %prev1, align 8
  %tobool = icmp ne %struct.sv* %1, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %prev2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 28
  %3 = load %struct.sv*, %struct.sv** %prev2, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %3, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u to %struct.sv**
  %4 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  %sv_u3 = getelementptr inbounds %struct.sv, %struct.sv* %4, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u3 to i8**
  %5 = load i8*, i8** %svu_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %5, %cond.true ], [ null, %cond.false ]
  %6 = bitcast i8* %cond to %struct.stcxt*
  store %struct.stcxt* %6, %struct.stcxt** %prev, align 8
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %my_sv = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 29
  %8 = load %struct.sv*, %struct.sv** %my_sv, align 8
  %9 = bitcast %struct.sv* %8 to i8*
  %10 = bitcast i8* %9 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %10)
  %11 = load %struct.stcxt*, %struct.stcxt** %prev, align 8
  store %struct.stcxt* %11, %struct.stcxt** @Context_ptr, align 8
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline nounwind uwtable
define internal void @clean_retrieve_context(%struct.stcxt* %cxt) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  %aseen1 = alloca %struct.av*, align 8
  %aclass6 = alloca %struct.av*, align 8
  %hook12 = alloca %struct.hv*, align 8
  %hseen18 = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 5
  %1 = load %struct.av*, %struct.av** %aseen, align 8
  %tobool = icmp ne %struct.av* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 5
  %3 = load %struct.av*, %struct.av** %aseen2, align 8
  store %struct.av* %3, %struct.av** %aseen1, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 5
  store %struct.av* null, %struct.av** %aseen3, align 8
  %5 = load %struct.av*, %struct.av** %aseen1, align 8
  call void @Perl_av_undef(%struct.av* %5)
  %6 = load %struct.av*, %struct.av** %aseen1, align 8
  %7 = bitcast %struct.av* %6 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %7)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %where_is_undef = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 6
  store i64 -1, i64* %where_is_undef, align 8
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aclass = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 8
  %10 = load %struct.av*, %struct.av** %aclass, align 8
  %tobool4 = icmp ne %struct.av* %10, null
  br i1 %tobool4, label %if.then5, label %if.end9

if.then5:                                         ; preds = %if.end
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aclass7 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 8
  %12 = load %struct.av*, %struct.av** %aclass7, align 8
  store %struct.av* %12, %struct.av** %aclass6, align 8
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aclass8 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 8
  store %struct.av* null, %struct.av** %aclass8, align 8
  %14 = load %struct.av*, %struct.av** %aclass6, align 8
  call void @Perl_av_undef(%struct.av* %14)
  %15 = load %struct.av*, %struct.av** %aclass6, align 8
  %16 = bitcast %struct.av* %15 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %16)
  br label %if.end9

if.end9:                                          ; preds = %if.then5, %if.end
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 9
  %18 = load %struct.hv*, %struct.hv** %hook, align 8
  %tobool10 = icmp ne %struct.hv* %18, null
  br i1 %tobool10, label %if.then11, label %if.end15

if.then11:                                        ; preds = %if.end9
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook13 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 9
  %20 = load %struct.hv*, %struct.hv** %hook13, align 8
  store %struct.hv* %20, %struct.hv** %hook12, align 8
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 9
  store %struct.hv* null, %struct.hv** %hook14, align 8
  %22 = load %struct.hv*, %struct.hv** %hook12, align 8
  call void @Perl_hv_undef_flags(%struct.hv* %22, i32 0)
  %23 = load %struct.hv*, %struct.hv** %hook12, align 8
  %24 = bitcast %struct.hv* %23 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %24)
  br label %if.end15

if.end15:                                         ; preds = %if.then11, %if.end9
  %25 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %25, i32 0, i32 3
  %26 = load %struct.hv*, %struct.hv** %hseen, align 8
  %tobool16 = icmp ne %struct.hv* %26, null
  br i1 %tobool16, label %if.then17, label %if.end21

if.then17:                                        ; preds = %if.end15
  %27 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %27, i32 0, i32 3
  %28 = load %struct.hv*, %struct.hv** %hseen19, align 8
  store %struct.hv* %28, %struct.hv** %hseen18, align 8
  %29 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen20 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %29, i32 0, i32 3
  store %struct.hv* null, %struct.hv** %hseen20, align 8
  %30 = load %struct.hv*, %struct.hv** %hseen18, align 8
  call void @Perl_hv_undef_flags(%struct.hv* %30, i32 0)
  %31 = load %struct.hv*, %struct.hv** %hseen18, align 8
  %32 = bitcast %struct.hv* %31 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %32)
  br label %if.end21

if.end21:                                         ; preds = %if.then17, %if.end15
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %accept_future_minor = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 18
  store i32 -1, i32* %accept_future_minor, align 4
  %34 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %34, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded, align 8
  %35 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  call void @reset_context(%struct.stcxt* %35)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @reset_context(%struct.stcxt* %cxt) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %entry1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 0
  store i32 0, i32* %entry1, align 8
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 19
  store i32 0, i32* %s_dirty, align 8
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %optype = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 1
  %3 = load i32, i32* %optype, align 4
  %and = and i32 %3, -4
  store i32 %and, i32* %optype, align 4
  ret void
}

declare dso_local void @Perl_av_undef(%struct.av*) #1

declare dso_local void @Perl_sv_free(%struct.sv*) #1

declare dso_local void @Perl_hv_undef_flags(%struct.hv*, i32) #1

declare dso_local %struct.sv* @Perl_newSV(i64) #1

declare dso_local %struct.sv* @Perl_newRV_noinc(%struct.sv*) #1

declare dso_local %struct.magic* @Perl_sv_magicext(%struct.sv*, %struct.sv*, i32, %struct.mgvtbl*, i8*, i32) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @storable_free(%struct.sv* %sv, %struct.magic* %mg) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  %mg.addr = alloca %struct.magic*, align 8
  %cxt = alloca %struct.stcxt*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store %struct.magic* %mg, %struct.magic** %mg.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %1 = load i8*, i8** %svu_pv, align 8
  %2 = bitcast i8* %1 to %struct.stcxt*
  store %struct.stcxt* %2, %struct.stcxt** %cxt, align 8
  %3 = load %struct.magic*, %struct.magic** %mg.addr, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %keybuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf, i32 0, i32 0
  %5 = load i8*, i8** %arena, align 8
  %tobool = icmp ne i8* %5, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %keybuf1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 21
  %arena2 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf1, i32 0, i32 0
  %7 = load i8*, i8** %arena2, align 8
  call void @Perl_safesysfree(i8* %7)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf_ro = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 20
  %9 = load i32, i32* %membuf_ro, align 4
  %tobool3 = icmp ne i32 %9, 0
  br i1 %tobool3, label %if.end9, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %10, i32 0, i32 22
  %arena4 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 0
  %11 = load i8*, i8** %arena4, align 8
  %tobool5 = icmp ne i8* %11, null
  br i1 %tobool5, label %if.then6, label %if.end9

if.then6:                                         ; preds = %land.lhs.true
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf7 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 22
  %arena8 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf7, i32 0, i32 0
  %13 = load i8*, i8** %arena8, align 8
  call void @Perl_safesysfree(i8* %13)
  br label %if.end9

if.end9:                                          ; preds = %if.then6, %land.lhs.true, %if.end
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf_ro10 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 20
  %15 = load i32, i32* %membuf_ro10, align 4
  %tobool11 = icmp ne i32 %15, 0
  br i1 %tobool11, label %land.lhs.true12, label %if.end18

land.lhs.true12:                                  ; preds = %if.end9
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %msaved = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 23
  %arena13 = getelementptr inbounds %struct.extendable, %struct.extendable* %msaved, i32 0, i32 0
  %17 = load i8*, i8** %arena13, align 8
  %tobool14 = icmp ne i8* %17, null
  br i1 %tobool14, label %if.then15, label %if.end18

if.then15:                                        ; preds = %land.lhs.true12
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %msaved16 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 23
  %arena17 = getelementptr inbounds %struct.extendable, %struct.extendable* %msaved16, i32 0, i32 0
  %19 = load i8*, i8** %arena17, align 8
  call void @Perl_safesysfree(i8* %19)
  br label %if.end18

if.end18:                                         ; preds = %if.then15, %land.lhs.true12, %if.end9
  ret i32 0
}

declare dso_local void @Perl_safesysfree(i8*) #1

declare dso_local %struct.ptr_tbl* @Perl_ptr_table_new() #1

declare dso_local %struct.sv* @Perl_newSV_type(i32) #1

declare dso_local i8* @Perl_safesysrealloc(i8*, i64) #1

declare dso_local i64 @Perl_PerlIO_write(%struct._PerlIO**, i8*, i64) #1

declare dso_local i8* @Perl_ptr_table_fetch(%struct.ptr_tbl*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @my_swap32(i32 %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  %0 = load i32, i32* %x.addr, align 4
  %and = and i32 %0, 255
  %shl = shl i32 %and, 24
  %1 = load i32, i32* %x.addr, align 4
  %shr = lshr i32 %1, 24
  %and1 = and i32 %shr, 255
  %or = or i32 %shl, %and1
  %2 = load i32, i32* %x.addr, align 4
  %and2 = and i32 %2, 65280
  %shl3 = shl i32 %and2, 8
  %or4 = or i32 %or, %shl3
  %3 = load i32, i32* %x.addr, align 4
  %and5 = and i32 %3, 16711680
  %shr6 = lshr i32 %and5, 8
  %or7 = or i32 %or4, %shr6
  ret i32 %or7
}

declare dso_local i32 @PerlIO_putc(%struct._PerlIO**, i32) #1

declare dso_local void @Perl_ptr_table_store(%struct.ptr_tbl*, i8*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @sv_type(%struct.sv* %sv) #0 {
entry:
  %retval = alloca i32, align 4
  %sv.addr = alloca %struct.sv*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 255
  switch i32 %and, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb1
    i32 1, label %sw.bb1
    i32 5, label %sw.bb1
    i32 6, label %sw.bb1
    i32 7, label %sw.bb4
    i32 10, label %sw.bb4
    i32 11, label %sw.bb20
    i32 12, label %sw.bb29
    i32 13, label %sw.bb38
  ]

sw.bb:                                            ; preds = %entry, %entry
  store i32 1, i32* %retval, align 4
  br label %return

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry
  %2 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags2 = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 2
  %3 = load i32, i32* %sv_flags2, align 4
  %and3 = and i32 %3, 2048
  %tobool = icmp ne i32 %and3, 0
  %4 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 0, i32 1
  store i32 %cond, i32* %retval, align 4
  br label %return

sw.bb4:                                           ; preds = %entry, %entry
  %5 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags5 = getelementptr inbounds %struct.sv, %struct.sv* %5, i32 0, i32 2
  %6 = load i32, i32* %sv_flags5, align 4
  %and6 = and i32 %6, 14680064
  %cmp = icmp eq i32 %and6, 14680064
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %sw.bb4
  %7 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call = call %struct.magic* @Perl_mg_find(%struct.sv* %7, i32 112)
  %tobool7 = icmp ne %struct.magic* %call, null
  br i1 %tobool7, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i32 5, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true, %sw.bb4
  %8 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags8 = getelementptr inbounds %struct.sv, %struct.sv* %8, i32 0, i32 2
  %9 = load i32, i32* %sv_flags8, align 4
  %and9 = and i32 %9, 14680064
  %cmp10 = icmp eq i32 %and9, 14680064
  br i1 %cmp10, label %land.lhs.true11, label %if.end15

land.lhs.true11:                                  ; preds = %if.end
  %10 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call12 = call %struct.magic* @Perl_mg_find(%struct.sv* %10, i32 113)
  %tobool13 = icmp ne %struct.magic* %call12, null
  br i1 %tobool13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %land.lhs.true11
  store i32 4, i32* %retval, align 4
  br label %return

if.end15:                                         ; preds = %land.lhs.true11, %if.end
  %11 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags16 = getelementptr inbounds %struct.sv, %struct.sv* %11, i32 0, i32 2
  %12 = load i32, i32* %sv_flags16, align 4
  %and17 = and i32 %12, 2048
  %tobool18 = icmp ne i32 %and17, 0
  %13 = zext i1 %tobool18 to i64
  %cond19 = select i1 %tobool18, i32 0, i32 1
  store i32 %cond19, i32* %retval, align 4
  br label %return

sw.bb20:                                          ; preds = %entry
  %14 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags21 = getelementptr inbounds %struct.sv, %struct.sv* %14, i32 0, i32 2
  %15 = load i32, i32* %sv_flags21, align 4
  %and22 = and i32 %15, 8388608
  %tobool23 = icmp ne i32 %and22, 0
  br i1 %tobool23, label %land.lhs.true24, label %if.end28

land.lhs.true24:                                  ; preds = %sw.bb20
  %16 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call25 = call %struct.magic* @Perl_mg_find(%struct.sv* %16, i32 80)
  %tobool26 = icmp ne %struct.magic* %call25, null
  br i1 %tobool26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %land.lhs.true24
  store i32 4, i32* %retval, align 4
  br label %return

if.end28:                                         ; preds = %land.lhs.true24, %sw.bb20
  store i32 2, i32* %retval, align 4
  br label %return

sw.bb29:                                          ; preds = %entry
  %17 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags30 = getelementptr inbounds %struct.sv, %struct.sv* %17, i32 0, i32 2
  %18 = load i32, i32* %sv_flags30, align 4
  %and31 = and i32 %18, 8388608
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %land.lhs.true33, label %if.end37

land.lhs.true33:                                  ; preds = %sw.bb29
  %19 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call34 = call %struct.magic* @Perl_mg_find(%struct.sv* %19, i32 80)
  %tobool35 = icmp ne %struct.magic* %call34, null
  br i1 %tobool35, label %if.then36, label %if.end37

if.then36:                                        ; preds = %land.lhs.true33
  store i32 4, i32* %retval, align 4
  br label %return

if.end37:                                         ; preds = %land.lhs.true33, %sw.bb29
  store i32 3, i32* %retval, align 4
  br label %return

sw.bb38:                                          ; preds = %entry
  store i32 6, i32* %retval, align 4
  br label %return

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  store i32 7, i32* %retval, align 4
  br label %return

return:                                           ; preds = %sw.epilog, %sw.bb38, %if.end37, %if.then36, %if.end28, %if.then27, %if.end15, %if.then14, %if.then, %sw.bb1, %sw.bb
  %20 = load i32, i32* %retval, align 4
  ret i32 %20
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @store_blessed(%struct.stcxt* %cxt, %struct.sv* %sv, i32 %type, %struct.hv* %pkg) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %type.addr = alloca i32, align 4
  %pkg.addr = alloca %struct.hv*, align 8
  %hook = alloca %struct.sv*, align 8
  %len = alloca i32, align 4
  %classname = alloca i8*, align 8
  %classnum = alloca i32, align 4
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %cnum = alloca i8, align 1
  %nsz136 = alloca i32, align 4
  %offset143 = alloca i32, align 4
  %flag = alloca i8, align 1
  %nsz208 = alloca i32, align 4
  %offset215 = alloca i32, align 4
  %y = alloca i32, align 4
  %nsz280 = alloca i32, align 4
  %offset287 = alloca i32, align 4
  %nsz362 = alloca i32, align 4
  %offset369 = alloca i32, align 4
  %nsz450 = alloca i32, align 4
  %offset457 = alloca i32, align 4
  %clen = alloca i8, align 1
  %nsz524 = alloca i32, align 4
  %offset531 = alloca i32, align 4
  %flag579 = alloca i8, align 1
  %nsz597 = alloca i32, align 4
  %offset604 = alloca i32, align 4
  %y655 = alloca i32, align 4
  %nsz671 = alloca i32, align 4
  %offset678 = alloca i32, align 4
  %nsz753 = alloca i32, align 4
  %offset760 = alloca i32, align 4
  %nsz839 = alloca i32, align 4
  %offset847 = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i32 %type, i32* %type.addr, align 4
  store %struct.hv* %pkg, %struct.hv** %pkg.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 9
  %1 = load %struct.hv*, %struct.hv** %hook1, align 8
  %2 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %call = call %struct.sv* @pkg_can(%struct.hv* %1, %struct.hv* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i64 0, i64 0))
  store %struct.sv* %call, %struct.sv** %hook, align 8
  %3 = load %struct.sv*, %struct.sv** %hook, align 8
  %tobool = icmp ne %struct.sv* %3, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %5 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %6 = load i32, i32* %type.addr, align 4
  %7 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %8 = load %struct.sv*, %struct.sv** %hook, align 8
  %call2 = call i32 @store_hook(%struct.stcxt* %4, %struct.sv* %5, i32 %6, %struct.hv* %7, %struct.sv* %8)
  store i32 %call2, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %9 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %9, i32 0, i32 2
  %10 = load i32, i32* %sv_flags, align 4
  %and = and i32 %10, 33554432
  %tobool3 = icmp ne i32 %and, 0
  br i1 %tobool3, label %land.lhs.true, label %cond.false57

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %11, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %12 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %13 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %13, i32 0, i32 0
  %14 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %14, i32 0, i32 3
  %15 = load i64, i64* %xhv_max, align 8
  %add = add i64 %15, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %12, i64 %add
  %16 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %16, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %17 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool4 = icmp ne %struct.hek* %17, null
  br i1 %tobool4, label %land.lhs.true5, label %cond.false57

land.lhs.true5:                                   ; preds = %land.lhs.true
  %18 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u6 = getelementptr inbounds %struct.hv, %struct.hv* %18, i32 0, i32 3
  %svu_hash7 = bitcast %union.anon.4* %sv_u6 to %struct.he***
  %19 = load %struct.he**, %struct.he*** %svu_hash7, align 8
  %20 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any8 = getelementptr inbounds %struct.hv, %struct.hv* %20, i32 0, i32 0
  %21 = load %struct.xpvhv*, %struct.xpvhv** %sv_any8, align 8
  %xhv_max9 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %21, i32 0, i32 3
  %22 = load i64, i64* %xhv_max9, align 8
  %add10 = add i64 %22, 1
  %arrayidx11 = getelementptr inbounds %struct.he*, %struct.he** %19, i64 %add10
  %23 = bitcast %struct.he** %arrayidx11 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %23, i32 0, i32 4
  %24 = load i32, i32* %xhv_name_count, align 4
  %tobool12 = icmp ne i32 %24, 0
  br i1 %tobool12, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true5
  %25 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u13 = getelementptr inbounds %struct.hv, %struct.hv* %25, i32 0, i32 3
  %svu_hash14 = bitcast %union.anon.4* %sv_u13 to %struct.he***
  %26 = load %struct.he**, %struct.he*** %svu_hash14, align 8
  %27 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any15 = getelementptr inbounds %struct.hv, %struct.hv* %27, i32 0, i32 0
  %28 = load %struct.xpvhv*, %struct.xpvhv** %sv_any15, align 8
  %xhv_max16 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %28, i32 0, i32 3
  %29 = load i64, i64* %xhv_max16, align 8
  %add17 = add i64 %29, 1
  %arrayidx18 = getelementptr inbounds %struct.he*, %struct.he** %26, i64 %add17
  %30 = bitcast %struct.he** %arrayidx18 to %struct.xpvhv_aux*
  %xhv_name_u19 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %30, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u19 to %struct.hek***
  %31 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %32 = load %struct.hek*, %struct.hek** %31, align 8
  %tobool20 = icmp ne %struct.hek* %32, null
  br i1 %tobool20, label %cond.true30, label %cond.false57

cond.false:                                       ; preds = %land.lhs.true5
  %33 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u21 = getelementptr inbounds %struct.hv, %struct.hv* %33, i32 0, i32 3
  %svu_hash22 = bitcast %union.anon.4* %sv_u21 to %struct.he***
  %34 = load %struct.he**, %struct.he*** %svu_hash22, align 8
  %35 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any23 = getelementptr inbounds %struct.hv, %struct.hv* %35, i32 0, i32 0
  %36 = load %struct.xpvhv*, %struct.xpvhv** %sv_any23, align 8
  %xhv_max24 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %36, i32 0, i32 3
  %37 = load i64, i64* %xhv_max24, align 8
  %add25 = add i64 %37, 1
  %arrayidx26 = getelementptr inbounds %struct.he*, %struct.he** %34, i64 %add25
  %38 = bitcast %struct.he** %arrayidx26 to %struct.xpvhv_aux*
  %xhv_name_u27 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %38, i32 0, i32 0
  %xhvnameu_name28 = bitcast %union._xhvnameu* %xhv_name_u27 to %struct.hek**
  %39 = load %struct.hek*, %struct.hek** %xhvnameu_name28, align 8
  %tobool29 = icmp ne %struct.hek* %39, null
  br i1 %tobool29, label %cond.true30, label %cond.false57

cond.true30:                                      ; preds = %cond.false, %cond.true
  %40 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u31 = getelementptr inbounds %struct.hv, %struct.hv* %40, i32 0, i32 3
  %svu_hash32 = bitcast %union.anon.4* %sv_u31 to %struct.he***
  %41 = load %struct.he**, %struct.he*** %svu_hash32, align 8
  %42 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any33 = getelementptr inbounds %struct.hv, %struct.hv* %42, i32 0, i32 0
  %43 = load %struct.xpvhv*, %struct.xpvhv** %sv_any33, align 8
  %xhv_max34 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %43, i32 0, i32 3
  %44 = load i64, i64* %xhv_max34, align 8
  %add35 = add i64 %44, 1
  %arrayidx36 = getelementptr inbounds %struct.he*, %struct.he** %41, i64 %add35
  %45 = bitcast %struct.he** %arrayidx36 to %struct.xpvhv_aux*
  %xhv_name_count37 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %45, i32 0, i32 4
  %46 = load i32, i32* %xhv_name_count37, align 4
  %tobool38 = icmp ne i32 %46, 0
  br i1 %tobool38, label %cond.true39, label %cond.false48

cond.true39:                                      ; preds = %cond.true30
  %47 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u40 = getelementptr inbounds %struct.hv, %struct.hv* %47, i32 0, i32 3
  %svu_hash41 = bitcast %union.anon.4* %sv_u40 to %struct.he***
  %48 = load %struct.he**, %struct.he*** %svu_hash41, align 8
  %49 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any42 = getelementptr inbounds %struct.hv, %struct.hv* %49, i32 0, i32 0
  %50 = load %struct.xpvhv*, %struct.xpvhv** %sv_any42, align 8
  %xhv_max43 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %50, i32 0, i32 3
  %51 = load i64, i64* %xhv_max43, align 8
  %add44 = add i64 %51, 1
  %arrayidx45 = getelementptr inbounds %struct.he*, %struct.he** %48, i64 %add44
  %52 = bitcast %struct.he** %arrayidx45 to %struct.xpvhv_aux*
  %xhv_name_u46 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %52, i32 0, i32 0
  %xhvnameu_names47 = bitcast %union._xhvnameu* %xhv_name_u46 to %struct.hek***
  %53 = load %struct.hek**, %struct.hek*** %xhvnameu_names47, align 8
  %54 = load %struct.hek*, %struct.hek** %53, align 8
  br label %cond.end

cond.false48:                                     ; preds = %cond.true30
  %55 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u49 = getelementptr inbounds %struct.hv, %struct.hv* %55, i32 0, i32 3
  %svu_hash50 = bitcast %union.anon.4* %sv_u49 to %struct.he***
  %56 = load %struct.he**, %struct.he*** %svu_hash50, align 8
  %57 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any51 = getelementptr inbounds %struct.hv, %struct.hv* %57, i32 0, i32 0
  %58 = load %struct.xpvhv*, %struct.xpvhv** %sv_any51, align 8
  %xhv_max52 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %58, i32 0, i32 3
  %59 = load i64, i64* %xhv_max52, align 8
  %add53 = add i64 %59, 1
  %arrayidx54 = getelementptr inbounds %struct.he*, %struct.he** %56, i64 %add53
  %60 = bitcast %struct.he** %arrayidx54 to %struct.xpvhv_aux*
  %xhv_name_u55 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %60, i32 0, i32 0
  %xhvnameu_name56 = bitcast %union._xhvnameu* %xhv_name_u55 to %struct.hek**
  %61 = load %struct.hek*, %struct.hek** %xhvnameu_name56, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false48, %cond.true39
  %cond = phi %struct.hek* [ %54, %cond.true39 ], [ %61, %cond.false48 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  br label %cond.end58

cond.false57:                                     ; preds = %cond.false, %cond.true, %land.lhs.true, %if.end
  br label %cond.end58

cond.end58:                                       ; preds = %cond.false57, %cond.end
  %cond59 = phi i8* [ %arraydecay, %cond.end ], [ null, %cond.false57 ]
  store i8* %cond59, i8** %classname, align 8
  %62 = load i8*, i8** %classname, align 8
  %call60 = call i64 @strlen(i8* %62) #5
  %conv = trunc i64 %call60 to i32
  store i32 %conv, i32* %len, align 4
  %63 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %64 = load i8*, i8** %classname, align 8
  %65 = load i32, i32* %len, align 4
  %call61 = call i32 @known_class(%struct.stcxt* %63, i8* %64, i32 %65, i32* %classnum)
  %tobool62 = icmp ne i32 %call61, 0
  br i1 %tobool62, label %if.then63, label %if.else432

if.then63:                                        ; preds = %cond.end58
  br label %do.body

do.body:                                          ; preds = %if.then63
  %66 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %66, i32 0, i32 24
  %67 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool64 = icmp ne %struct._PerlIO** %67, null
  br i1 %tobool64, label %if.else106, label %if.then65

if.then65:                                        ; preds = %do.body
  br label %do.body66

do.body66:                                        ; preds = %if.then65
  %68 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %68, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %69 = load i8*, i8** %aptr, align 8
  %70 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf67 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %70, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf67, i32 0, i32 3
  %71 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %69, %71
  br i1 %cmp, label %if.then69, label %if.else

if.then69:                                        ; preds = %do.body66
  %72 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf70 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %72, i32 0, i32 22
  %aptr71 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf70, i32 0, i32 2
  %73 = load i8*, i8** %aptr71, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %73, i32 1
  store i8* %incdec.ptr, i8** %aptr71, align 8
  store i8 18, i8* %73, align 1
  br label %if.end104

if.else:                                          ; preds = %do.body66
  br label %do.body72

do.body72:                                        ; preds = %if.else
  %74 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf73 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %74, i32 0, i32 22
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf73, i32 0, i32 1
  %75 = load i64, i64* %asiz, align 8
  %add74 = add i64 1, %75
  %add75 = add i64 %add74, 8191
  %and76 = and i64 %add75, -8192
  %conv77 = trunc i64 %and76 to i32
  store i32 %conv77, i32* %nsz, align 4
  %76 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf78 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %76, i32 0, i32 22
  %aptr79 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf78, i32 0, i32 2
  %77 = load i8*, i8** %aptr79, align 8
  %78 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf80 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %78, i32 0, i32 22
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf80, i32 0, i32 0
  %79 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %77 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %79 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv81 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv81, i32* %offset, align 4
  %80 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf82 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %80, i32 0, i32 22
  %arena83 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf82, i32 0, i32 0
  %81 = load i8*, i8** %arena83, align 8
  %82 = load i32, i32* %nsz, align 4
  %conv84 = sext i32 %82 to i64
  %mul = mul i64 %conv84, 1
  %call85 = call i8* @Perl_safesysrealloc(i8* %81, i64 %mul)
  %83 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf86 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %83, i32 0, i32 22
  %arena87 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf86, i32 0, i32 0
  store i8* %call85, i8** %arena87, align 8
  %84 = load i32, i32* %nsz, align 4
  %conv88 = sext i32 %84 to i64
  %85 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf89 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %85, i32 0, i32 22
  %asiz90 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf89, i32 0, i32 1
  store i64 %conv88, i64* %asiz90, align 8
  %86 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf91 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %86, i32 0, i32 22
  %arena92 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf91, i32 0, i32 0
  %87 = load i8*, i8** %arena92, align 8
  %88 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %88 to i64
  %add.ptr = getelementptr inbounds i8, i8* %87, i64 %idx.ext
  %89 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf93 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %89, i32 0, i32 22
  %aptr94 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf93, i32 0, i32 2
  store i8* %add.ptr, i8** %aptr94, align 8
  %90 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf95 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %90, i32 0, i32 22
  %arena96 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf95, i32 0, i32 0
  %91 = load i8*, i8** %arena96, align 8
  %92 = load i32, i32* %nsz, align 4
  %idx.ext97 = sext i32 %92 to i64
  %add.ptr98 = getelementptr inbounds i8, i8* %91, i64 %idx.ext97
  %93 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf99 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %93, i32 0, i32 22
  %aend100 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf99, i32 0, i32 3
  store i8* %add.ptr98, i8** %aend100, align 8
  br label %do.end

do.end:                                           ; preds = %do.body72
  %94 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf101 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %94, i32 0, i32 22
  %aptr102 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf101, i32 0, i32 2
  %95 = load i8*, i8** %aptr102, align 8
  %incdec.ptr103 = getelementptr inbounds i8, i8* %95, i32 1
  store i8* %incdec.ptr103, i8** %aptr102, align 8
  store i8 18, i8* %95, align 1
  br label %if.end104

if.end104:                                        ; preds = %do.end, %if.then69
  br label %do.end105

do.end105:                                        ; preds = %if.end104
  br label %if.end113

if.else106:                                       ; preds = %do.body
  %96 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio107 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %96, i32 0, i32 24
  %97 = load %struct._PerlIO**, %struct._PerlIO*** %fio107, align 8
  %call108 = call i32 @PerlIO_putc(%struct._PerlIO** %97, i32 18)
  %cmp109 = icmp eq i32 %call108, -1
  br i1 %cmp109, label %if.then111, label %if.end112

if.then111:                                       ; preds = %if.else106
  store i32 -1, i32* %retval, align 4
  br label %return

if.end112:                                        ; preds = %if.else106
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %do.end105
  br label %do.end114

do.end114:                                        ; preds = %if.end113
  %98 = load i32, i32* %classnum, align 4
  %cmp115 = icmp sle i32 %98, 127
  br i1 %cmp115, label %if.then117, label %if.else190

if.then117:                                       ; preds = %do.end114
  %99 = load i32, i32* %classnum, align 4
  %conv118 = trunc i32 %99 to i8
  store i8 %conv118, i8* %cnum, align 1
  br label %do.body119

do.body119:                                       ; preds = %if.then117
  %100 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio120 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %100, i32 0, i32 24
  %101 = load %struct._PerlIO**, %struct._PerlIO*** %fio120, align 8
  %tobool121 = icmp ne %struct._PerlIO** %101, null
  br i1 %tobool121, label %if.else180, label %if.then122

if.then122:                                       ; preds = %do.body119
  br label %do.body123

do.body123:                                       ; preds = %if.then122
  %102 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf124 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %102, i32 0, i32 22
  %aptr125 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf124, i32 0, i32 2
  %103 = load i8*, i8** %aptr125, align 8
  %104 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf126 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %104, i32 0, i32 22
  %aend127 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf126, i32 0, i32 3
  %105 = load i8*, i8** %aend127, align 8
  %cmp128 = icmp ult i8* %103, %105
  br i1 %cmp128, label %if.then130, label %if.else134

if.then130:                                       ; preds = %do.body123
  %106 = load i8, i8* %cnum, align 1
  %107 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf131 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %107, i32 0, i32 22
  %aptr132 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf131, i32 0, i32 2
  %108 = load i8*, i8** %aptr132, align 8
  %incdec.ptr133 = getelementptr inbounds i8, i8* %108, i32 1
  store i8* %incdec.ptr133, i8** %aptr132, align 8
  store i8 %106, i8* %108, align 1
  br label %if.end178

if.else134:                                       ; preds = %do.body123
  br label %do.body135

do.body135:                                       ; preds = %if.else134
  %109 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf137 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %109, i32 0, i32 22
  %asiz138 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf137, i32 0, i32 1
  %110 = load i64, i64* %asiz138, align 8
  %add139 = add i64 1, %110
  %add140 = add i64 %add139, 8191
  %and141 = and i64 %add140, -8192
  %conv142 = trunc i64 %and141 to i32
  store i32 %conv142, i32* %nsz136, align 4
  %111 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf144 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %111, i32 0, i32 22
  %aptr145 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf144, i32 0, i32 2
  %112 = load i8*, i8** %aptr145, align 8
  %113 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf146 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %113, i32 0, i32 22
  %arena147 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf146, i32 0, i32 0
  %114 = load i8*, i8** %arena147, align 8
  %sub.ptr.lhs.cast148 = ptrtoint i8* %112 to i64
  %sub.ptr.rhs.cast149 = ptrtoint i8* %114 to i64
  %sub.ptr.sub150 = sub i64 %sub.ptr.lhs.cast148, %sub.ptr.rhs.cast149
  %conv151 = trunc i64 %sub.ptr.sub150 to i32
  store i32 %conv151, i32* %offset143, align 4
  %115 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf152 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %115, i32 0, i32 22
  %arena153 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf152, i32 0, i32 0
  %116 = load i8*, i8** %arena153, align 8
  %117 = load i32, i32* %nsz136, align 4
  %conv154 = sext i32 %117 to i64
  %mul155 = mul i64 %conv154, 1
  %call156 = call i8* @Perl_safesysrealloc(i8* %116, i64 %mul155)
  %118 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf157 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %118, i32 0, i32 22
  %arena158 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf157, i32 0, i32 0
  store i8* %call156, i8** %arena158, align 8
  %119 = load i32, i32* %nsz136, align 4
  %conv159 = sext i32 %119 to i64
  %120 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf160 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %120, i32 0, i32 22
  %asiz161 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf160, i32 0, i32 1
  store i64 %conv159, i64* %asiz161, align 8
  %121 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf162 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %121, i32 0, i32 22
  %arena163 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf162, i32 0, i32 0
  %122 = load i8*, i8** %arena163, align 8
  %123 = load i32, i32* %offset143, align 4
  %idx.ext164 = sext i32 %123 to i64
  %add.ptr165 = getelementptr inbounds i8, i8* %122, i64 %idx.ext164
  %124 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf166 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %124, i32 0, i32 22
  %aptr167 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf166, i32 0, i32 2
  store i8* %add.ptr165, i8** %aptr167, align 8
  %125 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf168 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %125, i32 0, i32 22
  %arena169 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf168, i32 0, i32 0
  %126 = load i8*, i8** %arena169, align 8
  %127 = load i32, i32* %nsz136, align 4
  %idx.ext170 = sext i32 %127 to i64
  %add.ptr171 = getelementptr inbounds i8, i8* %126, i64 %idx.ext170
  %128 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf172 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %128, i32 0, i32 22
  %aend173 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf172, i32 0, i32 3
  store i8* %add.ptr171, i8** %aend173, align 8
  br label %do.end174

do.end174:                                        ; preds = %do.body135
  %129 = load i8, i8* %cnum, align 1
  %130 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf175 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %130, i32 0, i32 22
  %aptr176 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf175, i32 0, i32 2
  %131 = load i8*, i8** %aptr176, align 8
  %incdec.ptr177 = getelementptr inbounds i8, i8* %131, i32 1
  store i8* %incdec.ptr177, i8** %aptr176, align 8
  store i8 %129, i8* %131, align 1
  br label %if.end178

if.end178:                                        ; preds = %do.end174, %if.then130
  br label %do.end179

do.end179:                                        ; preds = %if.end178
  br label %if.end188

if.else180:                                       ; preds = %do.body119
  %132 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio181 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %132, i32 0, i32 24
  %133 = load %struct._PerlIO**, %struct._PerlIO*** %fio181, align 8
  %134 = load i8, i8* %cnum, align 1
  %conv182 = zext i8 %134 to i32
  %call183 = call i32 @PerlIO_putc(%struct._PerlIO** %133, i32 %conv182)
  %cmp184 = icmp eq i32 %call183, -1
  br i1 %cmp184, label %if.then186, label %if.end187

if.then186:                                       ; preds = %if.else180
  store i32 -1, i32* %retval, align 4
  br label %return

if.end187:                                        ; preds = %if.else180
  br label %if.end188

if.end188:                                        ; preds = %if.end187, %do.end179
  br label %do.end189

do.end189:                                        ; preds = %if.end188
  br label %if.end431

if.else190:                                       ; preds = %do.end114
  store i8 -128, i8* %flag, align 1
  br label %do.body191

do.body191:                                       ; preds = %if.else190
  %135 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio192 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %135, i32 0, i32 24
  %136 = load %struct._PerlIO**, %struct._PerlIO*** %fio192, align 8
  %tobool193 = icmp ne %struct._PerlIO** %136, null
  br i1 %tobool193, label %if.else252, label %if.then194

if.then194:                                       ; preds = %do.body191
  br label %do.body195

do.body195:                                       ; preds = %if.then194
  %137 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf196 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %137, i32 0, i32 22
  %aptr197 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf196, i32 0, i32 2
  %138 = load i8*, i8** %aptr197, align 8
  %139 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf198 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %139, i32 0, i32 22
  %aend199 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf198, i32 0, i32 3
  %140 = load i8*, i8** %aend199, align 8
  %cmp200 = icmp ult i8* %138, %140
  br i1 %cmp200, label %if.then202, label %if.else206

if.then202:                                       ; preds = %do.body195
  %141 = load i8, i8* %flag, align 1
  %142 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf203 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %142, i32 0, i32 22
  %aptr204 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf203, i32 0, i32 2
  %143 = load i8*, i8** %aptr204, align 8
  %incdec.ptr205 = getelementptr inbounds i8, i8* %143, i32 1
  store i8* %incdec.ptr205, i8** %aptr204, align 8
  store i8 %141, i8* %143, align 1
  br label %if.end250

if.else206:                                       ; preds = %do.body195
  br label %do.body207

do.body207:                                       ; preds = %if.else206
  %144 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf209 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %144, i32 0, i32 22
  %asiz210 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf209, i32 0, i32 1
  %145 = load i64, i64* %asiz210, align 8
  %add211 = add i64 1, %145
  %add212 = add i64 %add211, 8191
  %and213 = and i64 %add212, -8192
  %conv214 = trunc i64 %and213 to i32
  store i32 %conv214, i32* %nsz208, align 4
  %146 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf216 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %146, i32 0, i32 22
  %aptr217 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf216, i32 0, i32 2
  %147 = load i8*, i8** %aptr217, align 8
  %148 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf218 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %148, i32 0, i32 22
  %arena219 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf218, i32 0, i32 0
  %149 = load i8*, i8** %arena219, align 8
  %sub.ptr.lhs.cast220 = ptrtoint i8* %147 to i64
  %sub.ptr.rhs.cast221 = ptrtoint i8* %149 to i64
  %sub.ptr.sub222 = sub i64 %sub.ptr.lhs.cast220, %sub.ptr.rhs.cast221
  %conv223 = trunc i64 %sub.ptr.sub222 to i32
  store i32 %conv223, i32* %offset215, align 4
  %150 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf224 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %150, i32 0, i32 22
  %arena225 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf224, i32 0, i32 0
  %151 = load i8*, i8** %arena225, align 8
  %152 = load i32, i32* %nsz208, align 4
  %conv226 = sext i32 %152 to i64
  %mul227 = mul i64 %conv226, 1
  %call228 = call i8* @Perl_safesysrealloc(i8* %151, i64 %mul227)
  %153 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf229 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %153, i32 0, i32 22
  %arena230 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf229, i32 0, i32 0
  store i8* %call228, i8** %arena230, align 8
  %154 = load i32, i32* %nsz208, align 4
  %conv231 = sext i32 %154 to i64
  %155 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf232 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %155, i32 0, i32 22
  %asiz233 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf232, i32 0, i32 1
  store i64 %conv231, i64* %asiz233, align 8
  %156 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf234 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %156, i32 0, i32 22
  %arena235 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf234, i32 0, i32 0
  %157 = load i8*, i8** %arena235, align 8
  %158 = load i32, i32* %offset215, align 4
  %idx.ext236 = sext i32 %158 to i64
  %add.ptr237 = getelementptr inbounds i8, i8* %157, i64 %idx.ext236
  %159 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf238 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %159, i32 0, i32 22
  %aptr239 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf238, i32 0, i32 2
  store i8* %add.ptr237, i8** %aptr239, align 8
  %160 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf240 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %160, i32 0, i32 22
  %arena241 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf240, i32 0, i32 0
  %161 = load i8*, i8** %arena241, align 8
  %162 = load i32, i32* %nsz208, align 4
  %idx.ext242 = sext i32 %162 to i64
  %add.ptr243 = getelementptr inbounds i8, i8* %161, i64 %idx.ext242
  %163 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf244 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %163, i32 0, i32 22
  %aend245 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf244, i32 0, i32 3
  store i8* %add.ptr243, i8** %aend245, align 8
  br label %do.end246

do.end246:                                        ; preds = %do.body207
  %164 = load i8, i8* %flag, align 1
  %165 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf247 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %165, i32 0, i32 22
  %aptr248 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf247, i32 0, i32 2
  %166 = load i8*, i8** %aptr248, align 8
  %incdec.ptr249 = getelementptr inbounds i8, i8* %166, i32 1
  store i8* %incdec.ptr249, i8** %aptr248, align 8
  store i8 %164, i8* %166, align 1
  br label %if.end250

if.end250:                                        ; preds = %do.end246, %if.then202
  br label %do.end251

do.end251:                                        ; preds = %if.end250
  br label %if.end260

if.else252:                                       ; preds = %do.body191
  %167 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio253 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %167, i32 0, i32 24
  %168 = load %struct._PerlIO**, %struct._PerlIO*** %fio253, align 8
  %169 = load i8, i8* %flag, align 1
  %conv254 = zext i8 %169 to i32
  %call255 = call i32 @PerlIO_putc(%struct._PerlIO** %168, i32 %conv254)
  %cmp256 = icmp eq i32 %call255, -1
  br i1 %cmp256, label %if.then258, label %if.end259

if.then258:                                       ; preds = %if.else252
  store i32 -1, i32* %retval, align 4
  br label %return

if.end259:                                        ; preds = %if.else252
  br label %if.end260

if.end260:                                        ; preds = %if.end259, %do.end251
  br label %do.end261

do.end261:                                        ; preds = %if.end260
  br label %do.body262

do.body262:                                       ; preds = %do.end261
  %170 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %170, i32 0, i32 12
  %171 = load i32, i32* %netorder, align 8
  %tobool263 = icmp ne i32 %171, 0
  br i1 %tobool263, label %if.then264, label %if.else347

if.then264:                                       ; preds = %do.body262
  %172 = load i32, i32* %classnum, align 4
  %call265 = call i32 @my_swap32(i32 %172)
  store i32 %call265, i32* %y, align 4
  %173 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio266 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %173, i32 0, i32 24
  %174 = load %struct._PerlIO**, %struct._PerlIO*** %fio266, align 8
  %tobool267 = icmp ne %struct._PerlIO** %174, null
  br i1 %tobool267, label %if.else339, label %if.then268

if.then268:                                       ; preds = %if.then264
  br label %do.body269

do.body269:                                       ; preds = %if.then268
  br label %do.body270

do.body270:                                       ; preds = %do.body269
  %175 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf271 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %175, i32 0, i32 22
  %aptr272 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf271, i32 0, i32 2
  %176 = load i8*, i8** %aptr272, align 8
  %add.ptr273 = getelementptr inbounds i8, i8* %176, i64 4
  %177 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf274 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %177, i32 0, i32 22
  %aend275 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf274, i32 0, i32 3
  %178 = load i8*, i8** %aend275, align 8
  %cmp276 = icmp ugt i8* %add.ptr273, %178
  br i1 %cmp276, label %if.then278, label %if.end319

if.then278:                                       ; preds = %do.body270
  br label %do.body279

do.body279:                                       ; preds = %if.then278
  %179 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf281 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %179, i32 0, i32 22
  %asiz282 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf281, i32 0, i32 1
  %180 = load i64, i64* %asiz282, align 8
  %add283 = add i64 4, %180
  %add284 = add i64 %add283, 8191
  %and285 = and i64 %add284, -8192
  %conv286 = trunc i64 %and285 to i32
  store i32 %conv286, i32* %nsz280, align 4
  %181 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf288 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %181, i32 0, i32 22
  %aptr289 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf288, i32 0, i32 2
  %182 = load i8*, i8** %aptr289, align 8
  %183 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf290 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %183, i32 0, i32 22
  %arena291 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf290, i32 0, i32 0
  %184 = load i8*, i8** %arena291, align 8
  %sub.ptr.lhs.cast292 = ptrtoint i8* %182 to i64
  %sub.ptr.rhs.cast293 = ptrtoint i8* %184 to i64
  %sub.ptr.sub294 = sub i64 %sub.ptr.lhs.cast292, %sub.ptr.rhs.cast293
  %conv295 = trunc i64 %sub.ptr.sub294 to i32
  store i32 %conv295, i32* %offset287, align 4
  %185 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf296 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %185, i32 0, i32 22
  %arena297 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf296, i32 0, i32 0
  %186 = load i8*, i8** %arena297, align 8
  %187 = load i32, i32* %nsz280, align 4
  %conv298 = sext i32 %187 to i64
  %mul299 = mul i64 %conv298, 1
  %call300 = call i8* @Perl_safesysrealloc(i8* %186, i64 %mul299)
  %188 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf301 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %188, i32 0, i32 22
  %arena302 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf301, i32 0, i32 0
  store i8* %call300, i8** %arena302, align 8
  %189 = load i32, i32* %nsz280, align 4
  %conv303 = sext i32 %189 to i64
  %190 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf304 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %190, i32 0, i32 22
  %asiz305 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf304, i32 0, i32 1
  store i64 %conv303, i64* %asiz305, align 8
  %191 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf306 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %191, i32 0, i32 22
  %arena307 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf306, i32 0, i32 0
  %192 = load i8*, i8** %arena307, align 8
  %193 = load i32, i32* %offset287, align 4
  %idx.ext308 = sext i32 %193 to i64
  %add.ptr309 = getelementptr inbounds i8, i8* %192, i64 %idx.ext308
  %194 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf310 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %194, i32 0, i32 22
  %aptr311 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf310, i32 0, i32 2
  store i8* %add.ptr309, i8** %aptr311, align 8
  %195 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf312 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %195, i32 0, i32 22
  %arena313 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf312, i32 0, i32 0
  %196 = load i8*, i8** %arena313, align 8
  %197 = load i32, i32* %nsz280, align 4
  %idx.ext314 = sext i32 %197 to i64
  %add.ptr315 = getelementptr inbounds i8, i8* %196, i64 %idx.ext314
  %198 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf316 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %198, i32 0, i32 22
  %aend317 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf316, i32 0, i32 3
  store i8* %add.ptr315, i8** %aend317, align 8
  br label %do.end318

do.end318:                                        ; preds = %do.body279
  br label %if.end319

if.end319:                                        ; preds = %do.end318, %do.body270
  br label %do.end320

do.end320:                                        ; preds = %if.end319
  %199 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf321 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %199, i32 0, i32 22
  %aptr322 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf321, i32 0, i32 2
  %200 = load i8*, i8** %aptr322, align 8
  %201 = ptrtoint i8* %200 to i64
  %202 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf323 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %202, i32 0, i32 22
  %aptr324 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf323, i32 0, i32 2
  %203 = load i8*, i8** %aptr324, align 8
  %204 = ptrtoint i8* %203 to i64
  %and325 = and i64 %204, -4
  %cmp326 = icmp eq i64 %201, %and325
  br i1 %cmp326, label %if.then328, label %if.else331

if.then328:                                       ; preds = %do.end320
  %205 = load i32, i32* %y, align 4
  %206 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf329 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %206, i32 0, i32 22
  %aptr330 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf329, i32 0, i32 2
  %207 = load i8*, i8** %aptr330, align 8
  %208 = bitcast i8* %207 to i32*
  store i32 %205, i32* %208, align 4
  br label %if.end334

if.else331:                                       ; preds = %do.end320
  %209 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf332 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %209, i32 0, i32 22
  %aptr333 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf332, i32 0, i32 2
  %210 = load i8*, i8** %aptr333, align 8
  %211 = bitcast i32* %y to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %210, i8* align 4 %211, i64 4, i1 false)
  br label %if.end334

if.end334:                                        ; preds = %if.else331, %if.then328
  %212 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf335 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %212, i32 0, i32 22
  %aptr336 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf335, i32 0, i32 2
  %213 = load i8*, i8** %aptr336, align 8
  %add.ptr337 = getelementptr inbounds i8, i8* %213, i64 4
  store i8* %add.ptr337, i8** %aptr336, align 8
  br label %do.end338

do.end338:                                        ; preds = %if.end334
  br label %if.end346

if.else339:                                       ; preds = %if.then264
  %214 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio340 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %214, i32 0, i32 24
  %215 = load %struct._PerlIO**, %struct._PerlIO*** %fio340, align 8
  %216 = bitcast i32* %y to i8*
  %call341 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %215, i8* %216, i64 4)
  %cmp342 = icmp ne i64 %call341, 4
  br i1 %cmp342, label %if.then344, label %if.end345

if.then344:                                       ; preds = %if.else339
  store i32 -1, i32* %retval, align 4
  br label %return

if.end345:                                        ; preds = %if.else339
  br label %if.end346

if.end346:                                        ; preds = %if.end345, %do.end338
  br label %if.end429

if.else347:                                       ; preds = %do.body262
  %217 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio348 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %217, i32 0, i32 24
  %218 = load %struct._PerlIO**, %struct._PerlIO*** %fio348, align 8
  %tobool349 = icmp ne %struct._PerlIO** %218, null
  br i1 %tobool349, label %if.else421, label %if.then350

if.then350:                                       ; preds = %if.else347
  br label %do.body351

do.body351:                                       ; preds = %if.then350
  br label %do.body352

do.body352:                                       ; preds = %do.body351
  %219 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf353 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %219, i32 0, i32 22
  %aptr354 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf353, i32 0, i32 2
  %220 = load i8*, i8** %aptr354, align 8
  %add.ptr355 = getelementptr inbounds i8, i8* %220, i64 4
  %221 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf356 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %221, i32 0, i32 22
  %aend357 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf356, i32 0, i32 3
  %222 = load i8*, i8** %aend357, align 8
  %cmp358 = icmp ugt i8* %add.ptr355, %222
  br i1 %cmp358, label %if.then360, label %if.end401

if.then360:                                       ; preds = %do.body352
  br label %do.body361

do.body361:                                       ; preds = %if.then360
  %223 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf363 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %223, i32 0, i32 22
  %asiz364 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf363, i32 0, i32 1
  %224 = load i64, i64* %asiz364, align 8
  %add365 = add i64 4, %224
  %add366 = add i64 %add365, 8191
  %and367 = and i64 %add366, -8192
  %conv368 = trunc i64 %and367 to i32
  store i32 %conv368, i32* %nsz362, align 4
  %225 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf370 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %225, i32 0, i32 22
  %aptr371 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf370, i32 0, i32 2
  %226 = load i8*, i8** %aptr371, align 8
  %227 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf372 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %227, i32 0, i32 22
  %arena373 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf372, i32 0, i32 0
  %228 = load i8*, i8** %arena373, align 8
  %sub.ptr.lhs.cast374 = ptrtoint i8* %226 to i64
  %sub.ptr.rhs.cast375 = ptrtoint i8* %228 to i64
  %sub.ptr.sub376 = sub i64 %sub.ptr.lhs.cast374, %sub.ptr.rhs.cast375
  %conv377 = trunc i64 %sub.ptr.sub376 to i32
  store i32 %conv377, i32* %offset369, align 4
  %229 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf378 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %229, i32 0, i32 22
  %arena379 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf378, i32 0, i32 0
  %230 = load i8*, i8** %arena379, align 8
  %231 = load i32, i32* %nsz362, align 4
  %conv380 = sext i32 %231 to i64
  %mul381 = mul i64 %conv380, 1
  %call382 = call i8* @Perl_safesysrealloc(i8* %230, i64 %mul381)
  %232 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf383 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %232, i32 0, i32 22
  %arena384 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf383, i32 0, i32 0
  store i8* %call382, i8** %arena384, align 8
  %233 = load i32, i32* %nsz362, align 4
  %conv385 = sext i32 %233 to i64
  %234 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf386 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %234, i32 0, i32 22
  %asiz387 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf386, i32 0, i32 1
  store i64 %conv385, i64* %asiz387, align 8
  %235 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf388 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %235, i32 0, i32 22
  %arena389 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf388, i32 0, i32 0
  %236 = load i8*, i8** %arena389, align 8
  %237 = load i32, i32* %offset369, align 4
  %idx.ext390 = sext i32 %237 to i64
  %add.ptr391 = getelementptr inbounds i8, i8* %236, i64 %idx.ext390
  %238 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf392 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %238, i32 0, i32 22
  %aptr393 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf392, i32 0, i32 2
  store i8* %add.ptr391, i8** %aptr393, align 8
  %239 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf394 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %239, i32 0, i32 22
  %arena395 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf394, i32 0, i32 0
  %240 = load i8*, i8** %arena395, align 8
  %241 = load i32, i32* %nsz362, align 4
  %idx.ext396 = sext i32 %241 to i64
  %add.ptr397 = getelementptr inbounds i8, i8* %240, i64 %idx.ext396
  %242 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf398 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %242, i32 0, i32 22
  %aend399 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf398, i32 0, i32 3
  store i8* %add.ptr397, i8** %aend399, align 8
  br label %do.end400

do.end400:                                        ; preds = %do.body361
  br label %if.end401

if.end401:                                        ; preds = %do.end400, %do.body352
  br label %do.end402

do.end402:                                        ; preds = %if.end401
  %243 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf403 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %243, i32 0, i32 22
  %aptr404 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf403, i32 0, i32 2
  %244 = load i8*, i8** %aptr404, align 8
  %245 = ptrtoint i8* %244 to i64
  %246 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf405 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %246, i32 0, i32 22
  %aptr406 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf405, i32 0, i32 2
  %247 = load i8*, i8** %aptr406, align 8
  %248 = ptrtoint i8* %247 to i64
  %and407 = and i64 %248, -4
  %cmp408 = icmp eq i64 %245, %and407
  br i1 %cmp408, label %if.then410, label %if.else413

if.then410:                                       ; preds = %do.end402
  %249 = load i32, i32* %classnum, align 4
  %250 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf411 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %250, i32 0, i32 22
  %aptr412 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf411, i32 0, i32 2
  %251 = load i8*, i8** %aptr412, align 8
  %252 = bitcast i8* %251 to i32*
  store i32 %249, i32* %252, align 4
  br label %if.end416

if.else413:                                       ; preds = %do.end402
  %253 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf414 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %253, i32 0, i32 22
  %aptr415 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf414, i32 0, i32 2
  %254 = load i8*, i8** %aptr415, align 8
  %255 = bitcast i32* %classnum to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %254, i8* align 4 %255, i64 4, i1 false)
  br label %if.end416

if.end416:                                        ; preds = %if.else413, %if.then410
  %256 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf417 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %256, i32 0, i32 22
  %aptr418 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf417, i32 0, i32 2
  %257 = load i8*, i8** %aptr418, align 8
  %add.ptr419 = getelementptr inbounds i8, i8* %257, i64 4
  store i8* %add.ptr419, i8** %aptr418, align 8
  br label %do.end420

do.end420:                                        ; preds = %if.end416
  br label %if.end428

if.else421:                                       ; preds = %if.else347
  %258 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio422 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %258, i32 0, i32 24
  %259 = load %struct._PerlIO**, %struct._PerlIO*** %fio422, align 8
  %260 = bitcast i32* %classnum to i8*
  %call423 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %259, i8* %260, i64 4)
  %cmp424 = icmp ne i64 %call423, 4
  br i1 %cmp424, label %if.then426, label %if.end427

if.then426:                                       ; preds = %if.else421
  store i32 -1, i32* %retval, align 4
  br label %return

if.end427:                                        ; preds = %if.else421
  br label %if.end428

if.end428:                                        ; preds = %if.end427, %do.end420
  br label %if.end429

if.end429:                                        ; preds = %if.end428, %if.end346
  br label %do.end430

do.end430:                                        ; preds = %if.end429
  br label %if.end431

if.end431:                                        ; preds = %do.end430, %do.end189
  br label %if.end900

if.else432:                                       ; preds = %cond.end58
  br label %do.body433

do.body433:                                       ; preds = %if.else432
  %261 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio434 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %261, i32 0, i32 24
  %262 = load %struct._PerlIO**, %struct._PerlIO*** %fio434, align 8
  %tobool435 = icmp ne %struct._PerlIO** %262, null
  br i1 %tobool435, label %if.else494, label %if.then436

if.then436:                                       ; preds = %do.body433
  br label %do.body437

do.body437:                                       ; preds = %if.then436
  %263 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf438 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %263, i32 0, i32 22
  %aptr439 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf438, i32 0, i32 2
  %264 = load i8*, i8** %aptr439, align 8
  %265 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf440 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %265, i32 0, i32 22
  %aend441 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf440, i32 0, i32 3
  %266 = load i8*, i8** %aend441, align 8
  %cmp442 = icmp ult i8* %264, %266
  br i1 %cmp442, label %if.then444, label %if.else448

if.then444:                                       ; preds = %do.body437
  %267 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf445 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %267, i32 0, i32 22
  %aptr446 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf445, i32 0, i32 2
  %268 = load i8*, i8** %aptr446, align 8
  %incdec.ptr447 = getelementptr inbounds i8, i8* %268, i32 1
  store i8* %incdec.ptr447, i8** %aptr446, align 8
  store i8 17, i8* %268, align 1
  br label %if.end492

if.else448:                                       ; preds = %do.body437
  br label %do.body449

do.body449:                                       ; preds = %if.else448
  %269 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf451 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %269, i32 0, i32 22
  %asiz452 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf451, i32 0, i32 1
  %270 = load i64, i64* %asiz452, align 8
  %add453 = add i64 1, %270
  %add454 = add i64 %add453, 8191
  %and455 = and i64 %add454, -8192
  %conv456 = trunc i64 %and455 to i32
  store i32 %conv456, i32* %nsz450, align 4
  %271 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf458 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %271, i32 0, i32 22
  %aptr459 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf458, i32 0, i32 2
  %272 = load i8*, i8** %aptr459, align 8
  %273 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf460 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %273, i32 0, i32 22
  %arena461 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf460, i32 0, i32 0
  %274 = load i8*, i8** %arena461, align 8
  %sub.ptr.lhs.cast462 = ptrtoint i8* %272 to i64
  %sub.ptr.rhs.cast463 = ptrtoint i8* %274 to i64
  %sub.ptr.sub464 = sub i64 %sub.ptr.lhs.cast462, %sub.ptr.rhs.cast463
  %conv465 = trunc i64 %sub.ptr.sub464 to i32
  store i32 %conv465, i32* %offset457, align 4
  %275 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf466 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %275, i32 0, i32 22
  %arena467 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf466, i32 0, i32 0
  %276 = load i8*, i8** %arena467, align 8
  %277 = load i32, i32* %nsz450, align 4
  %conv468 = sext i32 %277 to i64
  %mul469 = mul i64 %conv468, 1
  %call470 = call i8* @Perl_safesysrealloc(i8* %276, i64 %mul469)
  %278 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf471 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %278, i32 0, i32 22
  %arena472 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf471, i32 0, i32 0
  store i8* %call470, i8** %arena472, align 8
  %279 = load i32, i32* %nsz450, align 4
  %conv473 = sext i32 %279 to i64
  %280 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf474 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %280, i32 0, i32 22
  %asiz475 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf474, i32 0, i32 1
  store i64 %conv473, i64* %asiz475, align 8
  %281 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf476 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %281, i32 0, i32 22
  %arena477 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf476, i32 0, i32 0
  %282 = load i8*, i8** %arena477, align 8
  %283 = load i32, i32* %offset457, align 4
  %idx.ext478 = sext i32 %283 to i64
  %add.ptr479 = getelementptr inbounds i8, i8* %282, i64 %idx.ext478
  %284 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf480 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %284, i32 0, i32 22
  %aptr481 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf480, i32 0, i32 2
  store i8* %add.ptr479, i8** %aptr481, align 8
  %285 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf482 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %285, i32 0, i32 22
  %arena483 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf482, i32 0, i32 0
  %286 = load i8*, i8** %arena483, align 8
  %287 = load i32, i32* %nsz450, align 4
  %idx.ext484 = sext i32 %287 to i64
  %add.ptr485 = getelementptr inbounds i8, i8* %286, i64 %idx.ext484
  %288 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf486 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %288, i32 0, i32 22
  %aend487 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf486, i32 0, i32 3
  store i8* %add.ptr485, i8** %aend487, align 8
  br label %do.end488

do.end488:                                        ; preds = %do.body449
  %289 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf489 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %289, i32 0, i32 22
  %aptr490 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf489, i32 0, i32 2
  %290 = load i8*, i8** %aptr490, align 8
  %incdec.ptr491 = getelementptr inbounds i8, i8* %290, i32 1
  store i8* %incdec.ptr491, i8** %aptr490, align 8
  store i8 17, i8* %290, align 1
  br label %if.end492

if.end492:                                        ; preds = %do.end488, %if.then444
  br label %do.end493

do.end493:                                        ; preds = %if.end492
  br label %if.end501

if.else494:                                       ; preds = %do.body433
  %291 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio495 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %291, i32 0, i32 24
  %292 = load %struct._PerlIO**, %struct._PerlIO*** %fio495, align 8
  %call496 = call i32 @PerlIO_putc(%struct._PerlIO** %292, i32 17)
  %cmp497 = icmp eq i32 %call496, -1
  br i1 %cmp497, label %if.then499, label %if.end500

if.then499:                                       ; preds = %if.else494
  store i32 -1, i32* %retval, align 4
  br label %return

if.end500:                                        ; preds = %if.else494
  br label %if.end501

if.end501:                                        ; preds = %if.end500, %do.end493
  br label %do.end502

do.end502:                                        ; preds = %if.end501
  %293 = load i32, i32* %len, align 4
  %cmp503 = icmp sle i32 %293, 127
  br i1 %cmp503, label %if.then505, label %if.else578

if.then505:                                       ; preds = %do.end502
  %294 = load i32, i32* %len, align 4
  %conv506 = trunc i32 %294 to i8
  store i8 %conv506, i8* %clen, align 1
  br label %do.body507

do.body507:                                       ; preds = %if.then505
  %295 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio508 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %295, i32 0, i32 24
  %296 = load %struct._PerlIO**, %struct._PerlIO*** %fio508, align 8
  %tobool509 = icmp ne %struct._PerlIO** %296, null
  br i1 %tobool509, label %if.else568, label %if.then510

if.then510:                                       ; preds = %do.body507
  br label %do.body511

do.body511:                                       ; preds = %if.then510
  %297 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf512 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %297, i32 0, i32 22
  %aptr513 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf512, i32 0, i32 2
  %298 = load i8*, i8** %aptr513, align 8
  %299 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf514 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %299, i32 0, i32 22
  %aend515 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf514, i32 0, i32 3
  %300 = load i8*, i8** %aend515, align 8
  %cmp516 = icmp ult i8* %298, %300
  br i1 %cmp516, label %if.then518, label %if.else522

if.then518:                                       ; preds = %do.body511
  %301 = load i8, i8* %clen, align 1
  %302 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf519 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %302, i32 0, i32 22
  %aptr520 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf519, i32 0, i32 2
  %303 = load i8*, i8** %aptr520, align 8
  %incdec.ptr521 = getelementptr inbounds i8, i8* %303, i32 1
  store i8* %incdec.ptr521, i8** %aptr520, align 8
  store i8 %301, i8* %303, align 1
  br label %if.end566

if.else522:                                       ; preds = %do.body511
  br label %do.body523

do.body523:                                       ; preds = %if.else522
  %304 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf525 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %304, i32 0, i32 22
  %asiz526 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf525, i32 0, i32 1
  %305 = load i64, i64* %asiz526, align 8
  %add527 = add i64 1, %305
  %add528 = add i64 %add527, 8191
  %and529 = and i64 %add528, -8192
  %conv530 = trunc i64 %and529 to i32
  store i32 %conv530, i32* %nsz524, align 4
  %306 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf532 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %306, i32 0, i32 22
  %aptr533 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf532, i32 0, i32 2
  %307 = load i8*, i8** %aptr533, align 8
  %308 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf534 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %308, i32 0, i32 22
  %arena535 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf534, i32 0, i32 0
  %309 = load i8*, i8** %arena535, align 8
  %sub.ptr.lhs.cast536 = ptrtoint i8* %307 to i64
  %sub.ptr.rhs.cast537 = ptrtoint i8* %309 to i64
  %sub.ptr.sub538 = sub i64 %sub.ptr.lhs.cast536, %sub.ptr.rhs.cast537
  %conv539 = trunc i64 %sub.ptr.sub538 to i32
  store i32 %conv539, i32* %offset531, align 4
  %310 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf540 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %310, i32 0, i32 22
  %arena541 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf540, i32 0, i32 0
  %311 = load i8*, i8** %arena541, align 8
  %312 = load i32, i32* %nsz524, align 4
  %conv542 = sext i32 %312 to i64
  %mul543 = mul i64 %conv542, 1
  %call544 = call i8* @Perl_safesysrealloc(i8* %311, i64 %mul543)
  %313 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf545 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %313, i32 0, i32 22
  %arena546 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf545, i32 0, i32 0
  store i8* %call544, i8** %arena546, align 8
  %314 = load i32, i32* %nsz524, align 4
  %conv547 = sext i32 %314 to i64
  %315 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf548 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %315, i32 0, i32 22
  %asiz549 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf548, i32 0, i32 1
  store i64 %conv547, i64* %asiz549, align 8
  %316 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf550 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %316, i32 0, i32 22
  %arena551 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf550, i32 0, i32 0
  %317 = load i8*, i8** %arena551, align 8
  %318 = load i32, i32* %offset531, align 4
  %idx.ext552 = sext i32 %318 to i64
  %add.ptr553 = getelementptr inbounds i8, i8* %317, i64 %idx.ext552
  %319 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf554 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %319, i32 0, i32 22
  %aptr555 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf554, i32 0, i32 2
  store i8* %add.ptr553, i8** %aptr555, align 8
  %320 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf556 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %320, i32 0, i32 22
  %arena557 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf556, i32 0, i32 0
  %321 = load i8*, i8** %arena557, align 8
  %322 = load i32, i32* %nsz524, align 4
  %idx.ext558 = sext i32 %322 to i64
  %add.ptr559 = getelementptr inbounds i8, i8* %321, i64 %idx.ext558
  %323 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf560 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %323, i32 0, i32 22
  %aend561 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf560, i32 0, i32 3
  store i8* %add.ptr559, i8** %aend561, align 8
  br label %do.end562

do.end562:                                        ; preds = %do.body523
  %324 = load i8, i8* %clen, align 1
  %325 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf563 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %325, i32 0, i32 22
  %aptr564 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf563, i32 0, i32 2
  %326 = load i8*, i8** %aptr564, align 8
  %incdec.ptr565 = getelementptr inbounds i8, i8* %326, i32 1
  store i8* %incdec.ptr565, i8** %aptr564, align 8
  store i8 %324, i8* %326, align 1
  br label %if.end566

if.end566:                                        ; preds = %do.end562, %if.then518
  br label %do.end567

do.end567:                                        ; preds = %if.end566
  br label %if.end576

if.else568:                                       ; preds = %do.body507
  %327 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio569 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %327, i32 0, i32 24
  %328 = load %struct._PerlIO**, %struct._PerlIO*** %fio569, align 8
  %329 = load i8, i8* %clen, align 1
  %conv570 = zext i8 %329 to i32
  %call571 = call i32 @PerlIO_putc(%struct._PerlIO** %328, i32 %conv570)
  %cmp572 = icmp eq i32 %call571, -1
  br i1 %cmp572, label %if.then574, label %if.end575

if.then574:                                       ; preds = %if.else568
  store i32 -1, i32* %retval, align 4
  br label %return

if.end575:                                        ; preds = %if.else568
  br label %if.end576

if.end576:                                        ; preds = %if.end575, %do.end567
  br label %do.end577

do.end577:                                        ; preds = %if.end576
  br label %if.end822

if.else578:                                       ; preds = %do.end502
  store i8 -128, i8* %flag579, align 1
  br label %do.body580

do.body580:                                       ; preds = %if.else578
  %330 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio581 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %330, i32 0, i32 24
  %331 = load %struct._PerlIO**, %struct._PerlIO*** %fio581, align 8
  %tobool582 = icmp ne %struct._PerlIO** %331, null
  br i1 %tobool582, label %if.else641, label %if.then583

if.then583:                                       ; preds = %do.body580
  br label %do.body584

do.body584:                                       ; preds = %if.then583
  %332 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf585 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %332, i32 0, i32 22
  %aptr586 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf585, i32 0, i32 2
  %333 = load i8*, i8** %aptr586, align 8
  %334 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf587 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %334, i32 0, i32 22
  %aend588 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf587, i32 0, i32 3
  %335 = load i8*, i8** %aend588, align 8
  %cmp589 = icmp ult i8* %333, %335
  br i1 %cmp589, label %if.then591, label %if.else595

if.then591:                                       ; preds = %do.body584
  %336 = load i8, i8* %flag579, align 1
  %337 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf592 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %337, i32 0, i32 22
  %aptr593 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf592, i32 0, i32 2
  %338 = load i8*, i8** %aptr593, align 8
  %incdec.ptr594 = getelementptr inbounds i8, i8* %338, i32 1
  store i8* %incdec.ptr594, i8** %aptr593, align 8
  store i8 %336, i8* %338, align 1
  br label %if.end639

if.else595:                                       ; preds = %do.body584
  br label %do.body596

do.body596:                                       ; preds = %if.else595
  %339 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf598 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %339, i32 0, i32 22
  %asiz599 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf598, i32 0, i32 1
  %340 = load i64, i64* %asiz599, align 8
  %add600 = add i64 1, %340
  %add601 = add i64 %add600, 8191
  %and602 = and i64 %add601, -8192
  %conv603 = trunc i64 %and602 to i32
  store i32 %conv603, i32* %nsz597, align 4
  %341 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf605 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %341, i32 0, i32 22
  %aptr606 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf605, i32 0, i32 2
  %342 = load i8*, i8** %aptr606, align 8
  %343 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf607 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %343, i32 0, i32 22
  %arena608 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf607, i32 0, i32 0
  %344 = load i8*, i8** %arena608, align 8
  %sub.ptr.lhs.cast609 = ptrtoint i8* %342 to i64
  %sub.ptr.rhs.cast610 = ptrtoint i8* %344 to i64
  %sub.ptr.sub611 = sub i64 %sub.ptr.lhs.cast609, %sub.ptr.rhs.cast610
  %conv612 = trunc i64 %sub.ptr.sub611 to i32
  store i32 %conv612, i32* %offset604, align 4
  %345 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf613 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %345, i32 0, i32 22
  %arena614 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf613, i32 0, i32 0
  %346 = load i8*, i8** %arena614, align 8
  %347 = load i32, i32* %nsz597, align 4
  %conv615 = sext i32 %347 to i64
  %mul616 = mul i64 %conv615, 1
  %call617 = call i8* @Perl_safesysrealloc(i8* %346, i64 %mul616)
  %348 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf618 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %348, i32 0, i32 22
  %arena619 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf618, i32 0, i32 0
  store i8* %call617, i8** %arena619, align 8
  %349 = load i32, i32* %nsz597, align 4
  %conv620 = sext i32 %349 to i64
  %350 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf621 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %350, i32 0, i32 22
  %asiz622 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf621, i32 0, i32 1
  store i64 %conv620, i64* %asiz622, align 8
  %351 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf623 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %351, i32 0, i32 22
  %arena624 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf623, i32 0, i32 0
  %352 = load i8*, i8** %arena624, align 8
  %353 = load i32, i32* %offset604, align 4
  %idx.ext625 = sext i32 %353 to i64
  %add.ptr626 = getelementptr inbounds i8, i8* %352, i64 %idx.ext625
  %354 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf627 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %354, i32 0, i32 22
  %aptr628 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf627, i32 0, i32 2
  store i8* %add.ptr626, i8** %aptr628, align 8
  %355 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf629 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %355, i32 0, i32 22
  %arena630 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf629, i32 0, i32 0
  %356 = load i8*, i8** %arena630, align 8
  %357 = load i32, i32* %nsz597, align 4
  %idx.ext631 = sext i32 %357 to i64
  %add.ptr632 = getelementptr inbounds i8, i8* %356, i64 %idx.ext631
  %358 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf633 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %358, i32 0, i32 22
  %aend634 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf633, i32 0, i32 3
  store i8* %add.ptr632, i8** %aend634, align 8
  br label %do.end635

do.end635:                                        ; preds = %do.body596
  %359 = load i8, i8* %flag579, align 1
  %360 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf636 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %360, i32 0, i32 22
  %aptr637 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf636, i32 0, i32 2
  %361 = load i8*, i8** %aptr637, align 8
  %incdec.ptr638 = getelementptr inbounds i8, i8* %361, i32 1
  store i8* %incdec.ptr638, i8** %aptr637, align 8
  store i8 %359, i8* %361, align 1
  br label %if.end639

if.end639:                                        ; preds = %do.end635, %if.then591
  br label %do.end640

do.end640:                                        ; preds = %if.end639
  br label %if.end649

if.else641:                                       ; preds = %do.body580
  %362 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio642 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %362, i32 0, i32 24
  %363 = load %struct._PerlIO**, %struct._PerlIO*** %fio642, align 8
  %364 = load i8, i8* %flag579, align 1
  %conv643 = zext i8 %364 to i32
  %call644 = call i32 @PerlIO_putc(%struct._PerlIO** %363, i32 %conv643)
  %cmp645 = icmp eq i32 %call644, -1
  br i1 %cmp645, label %if.then647, label %if.end648

if.then647:                                       ; preds = %if.else641
  store i32 -1, i32* %retval, align 4
  br label %return

if.end648:                                        ; preds = %if.else641
  br label %if.end649

if.end649:                                        ; preds = %if.end648, %do.end640
  br label %do.end650

do.end650:                                        ; preds = %if.end649
  br label %do.body651

do.body651:                                       ; preds = %do.end650
  %365 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder652 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %365, i32 0, i32 12
  %366 = load i32, i32* %netorder652, align 8
  %tobool653 = icmp ne i32 %366, 0
  br i1 %tobool653, label %if.then654, label %if.else738

if.then654:                                       ; preds = %do.body651
  %367 = load i32, i32* %len, align 4
  %call656 = call i32 @my_swap32(i32 %367)
  store i32 %call656, i32* %y655, align 4
  %368 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio657 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %368, i32 0, i32 24
  %369 = load %struct._PerlIO**, %struct._PerlIO*** %fio657, align 8
  %tobool658 = icmp ne %struct._PerlIO** %369, null
  br i1 %tobool658, label %if.else730, label %if.then659

if.then659:                                       ; preds = %if.then654
  br label %do.body660

do.body660:                                       ; preds = %if.then659
  br label %do.body661

do.body661:                                       ; preds = %do.body660
  %370 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf662 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %370, i32 0, i32 22
  %aptr663 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf662, i32 0, i32 2
  %371 = load i8*, i8** %aptr663, align 8
  %add.ptr664 = getelementptr inbounds i8, i8* %371, i64 4
  %372 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf665 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %372, i32 0, i32 22
  %aend666 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf665, i32 0, i32 3
  %373 = load i8*, i8** %aend666, align 8
  %cmp667 = icmp ugt i8* %add.ptr664, %373
  br i1 %cmp667, label %if.then669, label %if.end710

if.then669:                                       ; preds = %do.body661
  br label %do.body670

do.body670:                                       ; preds = %if.then669
  %374 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf672 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %374, i32 0, i32 22
  %asiz673 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf672, i32 0, i32 1
  %375 = load i64, i64* %asiz673, align 8
  %add674 = add i64 4, %375
  %add675 = add i64 %add674, 8191
  %and676 = and i64 %add675, -8192
  %conv677 = trunc i64 %and676 to i32
  store i32 %conv677, i32* %nsz671, align 4
  %376 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf679 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %376, i32 0, i32 22
  %aptr680 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf679, i32 0, i32 2
  %377 = load i8*, i8** %aptr680, align 8
  %378 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf681 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %378, i32 0, i32 22
  %arena682 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf681, i32 0, i32 0
  %379 = load i8*, i8** %arena682, align 8
  %sub.ptr.lhs.cast683 = ptrtoint i8* %377 to i64
  %sub.ptr.rhs.cast684 = ptrtoint i8* %379 to i64
  %sub.ptr.sub685 = sub i64 %sub.ptr.lhs.cast683, %sub.ptr.rhs.cast684
  %conv686 = trunc i64 %sub.ptr.sub685 to i32
  store i32 %conv686, i32* %offset678, align 4
  %380 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf687 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %380, i32 0, i32 22
  %arena688 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf687, i32 0, i32 0
  %381 = load i8*, i8** %arena688, align 8
  %382 = load i32, i32* %nsz671, align 4
  %conv689 = sext i32 %382 to i64
  %mul690 = mul i64 %conv689, 1
  %call691 = call i8* @Perl_safesysrealloc(i8* %381, i64 %mul690)
  %383 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf692 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %383, i32 0, i32 22
  %arena693 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf692, i32 0, i32 0
  store i8* %call691, i8** %arena693, align 8
  %384 = load i32, i32* %nsz671, align 4
  %conv694 = sext i32 %384 to i64
  %385 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf695 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %385, i32 0, i32 22
  %asiz696 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf695, i32 0, i32 1
  store i64 %conv694, i64* %asiz696, align 8
  %386 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf697 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %386, i32 0, i32 22
  %arena698 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf697, i32 0, i32 0
  %387 = load i8*, i8** %arena698, align 8
  %388 = load i32, i32* %offset678, align 4
  %idx.ext699 = sext i32 %388 to i64
  %add.ptr700 = getelementptr inbounds i8, i8* %387, i64 %idx.ext699
  %389 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf701 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %389, i32 0, i32 22
  %aptr702 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf701, i32 0, i32 2
  store i8* %add.ptr700, i8** %aptr702, align 8
  %390 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf703 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %390, i32 0, i32 22
  %arena704 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf703, i32 0, i32 0
  %391 = load i8*, i8** %arena704, align 8
  %392 = load i32, i32* %nsz671, align 4
  %idx.ext705 = sext i32 %392 to i64
  %add.ptr706 = getelementptr inbounds i8, i8* %391, i64 %idx.ext705
  %393 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf707 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %393, i32 0, i32 22
  %aend708 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf707, i32 0, i32 3
  store i8* %add.ptr706, i8** %aend708, align 8
  br label %do.end709

do.end709:                                        ; preds = %do.body670
  br label %if.end710

if.end710:                                        ; preds = %do.end709, %do.body661
  br label %do.end711

do.end711:                                        ; preds = %if.end710
  %394 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf712 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %394, i32 0, i32 22
  %aptr713 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf712, i32 0, i32 2
  %395 = load i8*, i8** %aptr713, align 8
  %396 = ptrtoint i8* %395 to i64
  %397 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf714 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %397, i32 0, i32 22
  %aptr715 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf714, i32 0, i32 2
  %398 = load i8*, i8** %aptr715, align 8
  %399 = ptrtoint i8* %398 to i64
  %and716 = and i64 %399, -4
  %cmp717 = icmp eq i64 %396, %and716
  br i1 %cmp717, label %if.then719, label %if.else722

if.then719:                                       ; preds = %do.end711
  %400 = load i32, i32* %y655, align 4
  %401 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf720 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %401, i32 0, i32 22
  %aptr721 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf720, i32 0, i32 2
  %402 = load i8*, i8** %aptr721, align 8
  %403 = bitcast i8* %402 to i32*
  store i32 %400, i32* %403, align 4
  br label %if.end725

if.else722:                                       ; preds = %do.end711
  %404 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf723 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %404, i32 0, i32 22
  %aptr724 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf723, i32 0, i32 2
  %405 = load i8*, i8** %aptr724, align 8
  %406 = bitcast i32* %y655 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %405, i8* align 4 %406, i64 4, i1 false)
  br label %if.end725

if.end725:                                        ; preds = %if.else722, %if.then719
  %407 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf726 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %407, i32 0, i32 22
  %aptr727 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf726, i32 0, i32 2
  %408 = load i8*, i8** %aptr727, align 8
  %add.ptr728 = getelementptr inbounds i8, i8* %408, i64 4
  store i8* %add.ptr728, i8** %aptr727, align 8
  br label %do.end729

do.end729:                                        ; preds = %if.end725
  br label %if.end737

if.else730:                                       ; preds = %if.then654
  %409 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio731 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %409, i32 0, i32 24
  %410 = load %struct._PerlIO**, %struct._PerlIO*** %fio731, align 8
  %411 = bitcast i32* %y655 to i8*
  %call732 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %410, i8* %411, i64 4)
  %cmp733 = icmp ne i64 %call732, 4
  br i1 %cmp733, label %if.then735, label %if.end736

if.then735:                                       ; preds = %if.else730
  store i32 -1, i32* %retval, align 4
  br label %return

if.end736:                                        ; preds = %if.else730
  br label %if.end737

if.end737:                                        ; preds = %if.end736, %do.end729
  br label %if.end820

if.else738:                                       ; preds = %do.body651
  %412 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio739 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %412, i32 0, i32 24
  %413 = load %struct._PerlIO**, %struct._PerlIO*** %fio739, align 8
  %tobool740 = icmp ne %struct._PerlIO** %413, null
  br i1 %tobool740, label %if.else812, label %if.then741

if.then741:                                       ; preds = %if.else738
  br label %do.body742

do.body742:                                       ; preds = %if.then741
  br label %do.body743

do.body743:                                       ; preds = %do.body742
  %414 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf744 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %414, i32 0, i32 22
  %aptr745 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf744, i32 0, i32 2
  %415 = load i8*, i8** %aptr745, align 8
  %add.ptr746 = getelementptr inbounds i8, i8* %415, i64 4
  %416 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf747 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %416, i32 0, i32 22
  %aend748 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf747, i32 0, i32 3
  %417 = load i8*, i8** %aend748, align 8
  %cmp749 = icmp ugt i8* %add.ptr746, %417
  br i1 %cmp749, label %if.then751, label %if.end792

if.then751:                                       ; preds = %do.body743
  br label %do.body752

do.body752:                                       ; preds = %if.then751
  %418 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf754 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %418, i32 0, i32 22
  %asiz755 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf754, i32 0, i32 1
  %419 = load i64, i64* %asiz755, align 8
  %add756 = add i64 4, %419
  %add757 = add i64 %add756, 8191
  %and758 = and i64 %add757, -8192
  %conv759 = trunc i64 %and758 to i32
  store i32 %conv759, i32* %nsz753, align 4
  %420 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf761 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %420, i32 0, i32 22
  %aptr762 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf761, i32 0, i32 2
  %421 = load i8*, i8** %aptr762, align 8
  %422 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf763 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %422, i32 0, i32 22
  %arena764 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf763, i32 0, i32 0
  %423 = load i8*, i8** %arena764, align 8
  %sub.ptr.lhs.cast765 = ptrtoint i8* %421 to i64
  %sub.ptr.rhs.cast766 = ptrtoint i8* %423 to i64
  %sub.ptr.sub767 = sub i64 %sub.ptr.lhs.cast765, %sub.ptr.rhs.cast766
  %conv768 = trunc i64 %sub.ptr.sub767 to i32
  store i32 %conv768, i32* %offset760, align 4
  %424 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf769 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %424, i32 0, i32 22
  %arena770 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf769, i32 0, i32 0
  %425 = load i8*, i8** %arena770, align 8
  %426 = load i32, i32* %nsz753, align 4
  %conv771 = sext i32 %426 to i64
  %mul772 = mul i64 %conv771, 1
  %call773 = call i8* @Perl_safesysrealloc(i8* %425, i64 %mul772)
  %427 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf774 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %427, i32 0, i32 22
  %arena775 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf774, i32 0, i32 0
  store i8* %call773, i8** %arena775, align 8
  %428 = load i32, i32* %nsz753, align 4
  %conv776 = sext i32 %428 to i64
  %429 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf777 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %429, i32 0, i32 22
  %asiz778 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf777, i32 0, i32 1
  store i64 %conv776, i64* %asiz778, align 8
  %430 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf779 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %430, i32 0, i32 22
  %arena780 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf779, i32 0, i32 0
  %431 = load i8*, i8** %arena780, align 8
  %432 = load i32, i32* %offset760, align 4
  %idx.ext781 = sext i32 %432 to i64
  %add.ptr782 = getelementptr inbounds i8, i8* %431, i64 %idx.ext781
  %433 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf783 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %433, i32 0, i32 22
  %aptr784 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf783, i32 0, i32 2
  store i8* %add.ptr782, i8** %aptr784, align 8
  %434 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf785 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %434, i32 0, i32 22
  %arena786 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf785, i32 0, i32 0
  %435 = load i8*, i8** %arena786, align 8
  %436 = load i32, i32* %nsz753, align 4
  %idx.ext787 = sext i32 %436 to i64
  %add.ptr788 = getelementptr inbounds i8, i8* %435, i64 %idx.ext787
  %437 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf789 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %437, i32 0, i32 22
  %aend790 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf789, i32 0, i32 3
  store i8* %add.ptr788, i8** %aend790, align 8
  br label %do.end791

do.end791:                                        ; preds = %do.body752
  br label %if.end792

if.end792:                                        ; preds = %do.end791, %do.body743
  br label %do.end793

do.end793:                                        ; preds = %if.end792
  %438 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf794 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %438, i32 0, i32 22
  %aptr795 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf794, i32 0, i32 2
  %439 = load i8*, i8** %aptr795, align 8
  %440 = ptrtoint i8* %439 to i64
  %441 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf796 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %441, i32 0, i32 22
  %aptr797 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf796, i32 0, i32 2
  %442 = load i8*, i8** %aptr797, align 8
  %443 = ptrtoint i8* %442 to i64
  %and798 = and i64 %443, -4
  %cmp799 = icmp eq i64 %440, %and798
  br i1 %cmp799, label %if.then801, label %if.else804

if.then801:                                       ; preds = %do.end793
  %444 = load i32, i32* %len, align 4
  %445 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf802 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %445, i32 0, i32 22
  %aptr803 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf802, i32 0, i32 2
  %446 = load i8*, i8** %aptr803, align 8
  %447 = bitcast i8* %446 to i32*
  store i32 %444, i32* %447, align 4
  br label %if.end807

if.else804:                                       ; preds = %do.end793
  %448 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf805 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %448, i32 0, i32 22
  %aptr806 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf805, i32 0, i32 2
  %449 = load i8*, i8** %aptr806, align 8
  %450 = bitcast i32* %len to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %449, i8* align 4 %450, i64 4, i1 false)
  br label %if.end807

if.end807:                                        ; preds = %if.else804, %if.then801
  %451 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf808 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %451, i32 0, i32 22
  %aptr809 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf808, i32 0, i32 2
  %452 = load i8*, i8** %aptr809, align 8
  %add.ptr810 = getelementptr inbounds i8, i8* %452, i64 4
  store i8* %add.ptr810, i8** %aptr809, align 8
  br label %do.end811

do.end811:                                        ; preds = %if.end807
  br label %if.end819

if.else812:                                       ; preds = %if.else738
  %453 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio813 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %453, i32 0, i32 24
  %454 = load %struct._PerlIO**, %struct._PerlIO*** %fio813, align 8
  %455 = bitcast i32* %len to i8*
  %call814 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %454, i8* %455, i64 4)
  %cmp815 = icmp ne i64 %call814, 4
  br i1 %cmp815, label %if.then817, label %if.end818

if.then817:                                       ; preds = %if.else812
  store i32 -1, i32* %retval, align 4
  br label %return

if.end818:                                        ; preds = %if.else812
  br label %if.end819

if.end819:                                        ; preds = %if.end818, %do.end811
  br label %if.end820

if.end820:                                        ; preds = %if.end819, %if.end737
  br label %do.end821

do.end821:                                        ; preds = %if.end820
  br label %if.end822

if.end822:                                        ; preds = %do.end821, %do.end577
  br label %do.body823

do.body823:                                       ; preds = %if.end822
  %456 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio824 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %456, i32 0, i32 24
  %457 = load %struct._PerlIO**, %struct._PerlIO*** %fio824, align 8
  %tobool825 = icmp ne %struct._PerlIO** %457, null
  br i1 %tobool825, label %if.else889, label %if.then826

if.then826:                                       ; preds = %do.body823
  br label %do.body827

do.body827:                                       ; preds = %if.then826
  br label %do.body828

do.body828:                                       ; preds = %do.body827
  %458 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf829 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %458, i32 0, i32 22
  %aptr830 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf829, i32 0, i32 2
  %459 = load i8*, i8** %aptr830, align 8
  %460 = load i32, i32* %len, align 4
  %idx.ext831 = sext i32 %460 to i64
  %add.ptr832 = getelementptr inbounds i8, i8* %459, i64 %idx.ext831
  %461 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf833 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %461, i32 0, i32 22
  %aend834 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf833, i32 0, i32 3
  %462 = load i8*, i8** %aend834, align 8
  %cmp835 = icmp ugt i8* %add.ptr832, %462
  br i1 %cmp835, label %if.then837, label %if.end879

if.then837:                                       ; preds = %do.body828
  br label %do.body838

do.body838:                                       ; preds = %if.then837
  %463 = load i32, i32* %len, align 4
  %conv840 = sext i32 %463 to i64
  %464 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf841 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %464, i32 0, i32 22
  %asiz842 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf841, i32 0, i32 1
  %465 = load i64, i64* %asiz842, align 8
  %add843 = add i64 %conv840, %465
  %add844 = add i64 %add843, 8191
  %and845 = and i64 %add844, -8192
  %conv846 = trunc i64 %and845 to i32
  store i32 %conv846, i32* %nsz839, align 4
  %466 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf848 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %466, i32 0, i32 22
  %aptr849 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf848, i32 0, i32 2
  %467 = load i8*, i8** %aptr849, align 8
  %468 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf850 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %468, i32 0, i32 22
  %arena851 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf850, i32 0, i32 0
  %469 = load i8*, i8** %arena851, align 8
  %sub.ptr.lhs.cast852 = ptrtoint i8* %467 to i64
  %sub.ptr.rhs.cast853 = ptrtoint i8* %469 to i64
  %sub.ptr.sub854 = sub i64 %sub.ptr.lhs.cast852, %sub.ptr.rhs.cast853
  %conv855 = trunc i64 %sub.ptr.sub854 to i32
  store i32 %conv855, i32* %offset847, align 4
  %470 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf856 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %470, i32 0, i32 22
  %arena857 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf856, i32 0, i32 0
  %471 = load i8*, i8** %arena857, align 8
  %472 = load i32, i32* %nsz839, align 4
  %conv858 = sext i32 %472 to i64
  %mul859 = mul i64 %conv858, 1
  %call860 = call i8* @Perl_safesysrealloc(i8* %471, i64 %mul859)
  %473 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf861 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %473, i32 0, i32 22
  %arena862 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf861, i32 0, i32 0
  store i8* %call860, i8** %arena862, align 8
  %474 = load i32, i32* %nsz839, align 4
  %conv863 = sext i32 %474 to i64
  %475 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf864 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %475, i32 0, i32 22
  %asiz865 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf864, i32 0, i32 1
  store i64 %conv863, i64* %asiz865, align 8
  %476 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf866 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %476, i32 0, i32 22
  %arena867 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf866, i32 0, i32 0
  %477 = load i8*, i8** %arena867, align 8
  %478 = load i32, i32* %offset847, align 4
  %idx.ext868 = sext i32 %478 to i64
  %add.ptr869 = getelementptr inbounds i8, i8* %477, i64 %idx.ext868
  %479 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf870 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %479, i32 0, i32 22
  %aptr871 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf870, i32 0, i32 2
  store i8* %add.ptr869, i8** %aptr871, align 8
  %480 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf872 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %480, i32 0, i32 22
  %arena873 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf872, i32 0, i32 0
  %481 = load i8*, i8** %arena873, align 8
  %482 = load i32, i32* %nsz839, align 4
  %idx.ext874 = sext i32 %482 to i64
  %add.ptr875 = getelementptr inbounds i8, i8* %481, i64 %idx.ext874
  %483 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf876 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %483, i32 0, i32 22
  %aend877 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf876, i32 0, i32 3
  store i8* %add.ptr875, i8** %aend877, align 8
  br label %do.end878

do.end878:                                        ; preds = %do.body838
  br label %if.end879

if.end879:                                        ; preds = %do.end878, %do.body828
  br label %do.end880

do.end880:                                        ; preds = %if.end879
  %484 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf881 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %484, i32 0, i32 22
  %aptr882 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf881, i32 0, i32 2
  %485 = load i8*, i8** %aptr882, align 8
  %486 = load i8*, i8** %classname, align 8
  %487 = load i32, i32* %len, align 4
  %conv883 = sext i32 %487 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %485, i8* align 1 %486, i64 %conv883, i1 false)
  %488 = load i32, i32* %len, align 4
  %489 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf884 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %489, i32 0, i32 22
  %aptr885 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf884, i32 0, i32 2
  %490 = load i8*, i8** %aptr885, align 8
  %idx.ext886 = sext i32 %488 to i64
  %add.ptr887 = getelementptr inbounds i8, i8* %490, i64 %idx.ext886
  store i8* %add.ptr887, i8** %aptr885, align 8
  br label %do.end888

do.end888:                                        ; preds = %do.end880
  br label %if.end898

if.else889:                                       ; preds = %do.body823
  %491 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio890 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %491, i32 0, i32 24
  %492 = load %struct._PerlIO**, %struct._PerlIO*** %fio890, align 8
  %493 = load i8*, i8** %classname, align 8
  %494 = load i32, i32* %len, align 4
  %conv891 = sext i32 %494 to i64
  %call892 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %492, i8* %493, i64 %conv891)
  %495 = load i32, i32* %len, align 4
  %conv893 = sext i32 %495 to i64
  %cmp894 = icmp ne i64 %call892, %conv893
  br i1 %cmp894, label %if.then896, label %if.end897

if.then896:                                       ; preds = %if.else889
  store i32 -1, i32* %retval, align 4
  br label %return

if.end897:                                        ; preds = %if.else889
  br label %if.end898

if.end898:                                        ; preds = %if.end897, %do.end888
  br label %do.end899

do.end899:                                        ; preds = %if.end898
  br label %if.end900

if.end900:                                        ; preds = %do.end899, %if.end431
  %496 = load i32, i32* %type.addr, align 4
  %idxprom = sext i32 %496 to i64
  %arrayidx901 = getelementptr inbounds [8 x i32 (%struct.stcxt*, %struct.sv*)*], [8 x i32 (%struct.stcxt*, %struct.sv*)*]* @sv_store, i64 0, i64 %idxprom
  %497 = load i32 (%struct.stcxt*, %struct.sv*)*, i32 (%struct.stcxt*, %struct.sv*)** %arrayidx901, align 8
  %498 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %499 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call902 = call i32 %497(%struct.stcxt* %498, %struct.sv* %499)
  store i32 %call902, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end900, %if.then896, %if.then817, %if.then735, %if.then647, %if.then574, %if.then499, %if.then426, %if.then344, %if.then258, %if.then186, %if.then111, %if.then
  %500 = load i32, i32* %retval, align 4
  ret i32 %500
}

declare dso_local %struct.magic* @Perl_mg_find(%struct.sv*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @pkg_can(%struct.hv* %cache, %struct.hv* %pkg, i8* %method) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cache.addr = alloca %struct.hv*, align 8
  %pkg.addr = alloca %struct.hv*, align 8
  %method.addr = alloca i8*, align 8
  %svh = alloca %struct.sv**, align 8
  %sv = alloca %struct.sv*, align 8
  %hvname = alloca i8*, align 8
  store %struct.hv* %cache, %struct.hv** %cache.addr, align 8
  store %struct.hv* %pkg, %struct.hv** %pkg.addr, align 8
  store i8* %method, i8** %method.addr, align 8
  %0 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 33554432
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %cond.false54

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %2, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %3 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %4 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %4, i32 0, i32 0
  %5 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %5, i32 0, i32 3
  %6 = load i64, i64* %xhv_max, align 8
  %add = add i64 %6, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %3, i64 %add
  %7 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %7, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %8 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool1 = icmp ne %struct.hek* %8, null
  br i1 %tobool1, label %land.lhs.true2, label %cond.false54

land.lhs.true2:                                   ; preds = %land.lhs.true
  %9 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u3 = getelementptr inbounds %struct.hv, %struct.hv* %9, i32 0, i32 3
  %svu_hash4 = bitcast %union.anon.4* %sv_u3 to %struct.he***
  %10 = load %struct.he**, %struct.he*** %svu_hash4, align 8
  %11 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any5 = getelementptr inbounds %struct.hv, %struct.hv* %11, i32 0, i32 0
  %12 = load %struct.xpvhv*, %struct.xpvhv** %sv_any5, align 8
  %xhv_max6 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %12, i32 0, i32 3
  %13 = load i64, i64* %xhv_max6, align 8
  %add7 = add i64 %13, 1
  %arrayidx8 = getelementptr inbounds %struct.he*, %struct.he** %10, i64 %add7
  %14 = bitcast %struct.he** %arrayidx8 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %14, i32 0, i32 4
  %15 = load i32, i32* %xhv_name_count, align 4
  %tobool9 = icmp ne i32 %15, 0
  br i1 %tobool9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  %16 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u10 = getelementptr inbounds %struct.hv, %struct.hv* %16, i32 0, i32 3
  %svu_hash11 = bitcast %union.anon.4* %sv_u10 to %struct.he***
  %17 = load %struct.he**, %struct.he*** %svu_hash11, align 8
  %18 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any12 = getelementptr inbounds %struct.hv, %struct.hv* %18, i32 0, i32 0
  %19 = load %struct.xpvhv*, %struct.xpvhv** %sv_any12, align 8
  %xhv_max13 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %19, i32 0, i32 3
  %20 = load i64, i64* %xhv_max13, align 8
  %add14 = add i64 %20, 1
  %arrayidx15 = getelementptr inbounds %struct.he*, %struct.he** %17, i64 %add14
  %21 = bitcast %struct.he** %arrayidx15 to %struct.xpvhv_aux*
  %xhv_name_u16 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %21, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u16 to %struct.hek***
  %22 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %23 = load %struct.hek*, %struct.hek** %22, align 8
  %tobool17 = icmp ne %struct.hek* %23, null
  br i1 %tobool17, label %cond.true27, label %cond.false54

cond.false:                                       ; preds = %land.lhs.true2
  %24 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u18 = getelementptr inbounds %struct.hv, %struct.hv* %24, i32 0, i32 3
  %svu_hash19 = bitcast %union.anon.4* %sv_u18 to %struct.he***
  %25 = load %struct.he**, %struct.he*** %svu_hash19, align 8
  %26 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any20 = getelementptr inbounds %struct.hv, %struct.hv* %26, i32 0, i32 0
  %27 = load %struct.xpvhv*, %struct.xpvhv** %sv_any20, align 8
  %xhv_max21 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %27, i32 0, i32 3
  %28 = load i64, i64* %xhv_max21, align 8
  %add22 = add i64 %28, 1
  %arrayidx23 = getelementptr inbounds %struct.he*, %struct.he** %25, i64 %add22
  %29 = bitcast %struct.he** %arrayidx23 to %struct.xpvhv_aux*
  %xhv_name_u24 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %29, i32 0, i32 0
  %xhvnameu_name25 = bitcast %union._xhvnameu* %xhv_name_u24 to %struct.hek**
  %30 = load %struct.hek*, %struct.hek** %xhvnameu_name25, align 8
  %tobool26 = icmp ne %struct.hek* %30, null
  br i1 %tobool26, label %cond.true27, label %cond.false54

cond.true27:                                      ; preds = %cond.false, %cond.true
  %31 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u28 = getelementptr inbounds %struct.hv, %struct.hv* %31, i32 0, i32 3
  %svu_hash29 = bitcast %union.anon.4* %sv_u28 to %struct.he***
  %32 = load %struct.he**, %struct.he*** %svu_hash29, align 8
  %33 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any30 = getelementptr inbounds %struct.hv, %struct.hv* %33, i32 0, i32 0
  %34 = load %struct.xpvhv*, %struct.xpvhv** %sv_any30, align 8
  %xhv_max31 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %34, i32 0, i32 3
  %35 = load i64, i64* %xhv_max31, align 8
  %add32 = add i64 %35, 1
  %arrayidx33 = getelementptr inbounds %struct.he*, %struct.he** %32, i64 %add32
  %36 = bitcast %struct.he** %arrayidx33 to %struct.xpvhv_aux*
  %xhv_name_count34 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %36, i32 0, i32 4
  %37 = load i32, i32* %xhv_name_count34, align 4
  %tobool35 = icmp ne i32 %37, 0
  br i1 %tobool35, label %cond.true36, label %cond.false45

cond.true36:                                      ; preds = %cond.true27
  %38 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u37 = getelementptr inbounds %struct.hv, %struct.hv* %38, i32 0, i32 3
  %svu_hash38 = bitcast %union.anon.4* %sv_u37 to %struct.he***
  %39 = load %struct.he**, %struct.he*** %svu_hash38, align 8
  %40 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any39 = getelementptr inbounds %struct.hv, %struct.hv* %40, i32 0, i32 0
  %41 = load %struct.xpvhv*, %struct.xpvhv** %sv_any39, align 8
  %xhv_max40 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %41, i32 0, i32 3
  %42 = load i64, i64* %xhv_max40, align 8
  %add41 = add i64 %42, 1
  %arrayidx42 = getelementptr inbounds %struct.he*, %struct.he** %39, i64 %add41
  %43 = bitcast %struct.he** %arrayidx42 to %struct.xpvhv_aux*
  %xhv_name_u43 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %43, i32 0, i32 0
  %xhvnameu_names44 = bitcast %union._xhvnameu* %xhv_name_u43 to %struct.hek***
  %44 = load %struct.hek**, %struct.hek*** %xhvnameu_names44, align 8
  %45 = load %struct.hek*, %struct.hek** %44, align 8
  br label %cond.end

cond.false45:                                     ; preds = %cond.true27
  %46 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u46 = getelementptr inbounds %struct.hv, %struct.hv* %46, i32 0, i32 3
  %svu_hash47 = bitcast %union.anon.4* %sv_u46 to %struct.he***
  %47 = load %struct.he**, %struct.he*** %svu_hash47, align 8
  %48 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any48 = getelementptr inbounds %struct.hv, %struct.hv* %48, i32 0, i32 0
  %49 = load %struct.xpvhv*, %struct.xpvhv** %sv_any48, align 8
  %xhv_max49 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %49, i32 0, i32 3
  %50 = load i64, i64* %xhv_max49, align 8
  %add50 = add i64 %50, 1
  %arrayidx51 = getelementptr inbounds %struct.he*, %struct.he** %47, i64 %add50
  %51 = bitcast %struct.he** %arrayidx51 to %struct.xpvhv_aux*
  %xhv_name_u52 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %51, i32 0, i32 0
  %xhvnameu_name53 = bitcast %union._xhvnameu* %xhv_name_u52 to %struct.hek**
  %52 = load %struct.hek*, %struct.hek** %xhvnameu_name53, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false45, %cond.true36
  %cond = phi %struct.hek* [ %45, %cond.true36 ], [ %52, %cond.false45 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  br label %cond.end55

cond.false54:                                     ; preds = %cond.false, %cond.true, %land.lhs.true, %entry
  br label %cond.end55

cond.end55:                                       ; preds = %cond.false54, %cond.end
  %cond56 = phi i8* [ %arraydecay, %cond.end ], [ null, %cond.false54 ]
  store i8* %cond56, i8** %hvname, align 8
  %53 = load %struct.hv*, %struct.hv** %cache.addr, align 8
  %54 = load i8*, i8** %hvname, align 8
  %55 = load i8*, i8** %hvname, align 8
  %call = call i64 @strlen(i8* %55) #5
  %conv = trunc i64 %call to i32
  %call57 = call i8* @Perl_hv_common_key_len(%struct.hv* %53, i8* %54, i32 %conv, i32 32, %struct.sv* null, i32 0)
  %56 = bitcast i8* %call57 to %struct.sv**
  store %struct.sv** %56, %struct.sv*** %svh, align 8
  %57 = load %struct.sv**, %struct.sv*** %svh, align 8
  %tobool58 = icmp ne %struct.sv** %57, null
  br i1 %tobool58, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end55
  %58 = load %struct.sv**, %struct.sv*** %svh, align 8
  %59 = load %struct.sv*, %struct.sv** %58, align 8
  store %struct.sv* %59, %struct.sv** %sv, align 8
  %60 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags59 = getelementptr inbounds %struct.sv, %struct.sv* %60, i32 0, i32 2
  %61 = load i32, i32* %sv_flags59, align 4
  %and60 = and i32 %61, 65280
  %tobool61 = icmp ne i32 %and60, 0
  br i1 %tobool61, label %if.else, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %62 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags62 = getelementptr inbounds %struct.sv, %struct.sv* %62, i32 0, i32 2
  %63 = load i32, i32* %sv_flags62, align 4
  %and63 = and i32 %63, 255
  %cmp = icmp eq i32 %and63, 8
  br i1 %cmp, label %if.else, label %lor.lhs.false65

lor.lhs.false65:                                  ; preds = %lor.lhs.false
  %64 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags66 = getelementptr inbounds %struct.sv, %struct.sv* %64, i32 0, i32 2
  %65 = load i32, i32* %sv_flags66, align 4
  %and67 = and i32 %65, 16826623
  %cmp68 = icmp eq i32 %and67, 16777226
  br i1 %cmp68, label %if.else, label %if.then70

if.then70:                                        ; preds = %lor.lhs.false65
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.else:                                          ; preds = %lor.lhs.false65, %lor.lhs.false, %if.then
  %66 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %66, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %cond.end55
  %67 = load %struct.hv*, %struct.hv** %cache.addr, align 8
  %68 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %69 = load i8*, i8** %method.addr, align 8
  %call71 = call %struct.sv* @pkg_fetchmeth(%struct.hv* %67, %struct.hv* %68, i8* %69)
  store %struct.sv* %call71, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.else, %if.then70
  %70 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %70
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @store_hook(%struct.stcxt* %cxt, %struct.sv* %sv, i32 %type, %struct.hv* %pkg, %struct.sv* %hook) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %type.addr = alloca i32, align 4
  %pkg.addr = alloca %struct.hv*, align 8
  %hook.addr = alloca %struct.sv*, align 8
  %len = alloca i32, align 4
  %classname = alloca i8*, align 8
  %len2 = alloca i64, align 8
  %ref = alloca %struct.sv*, align 8
  %av = alloca %struct.av*, align 8
  %ary = alloca %struct.sv**, align 8
  %count = alloca i32, align 4
  %flags = alloca i8, align 1
  %pv = alloca i8*, align 8
  %i = alloca i32, align 4
  %recursed = alloca i32, align 4
  %obj_type = alloca i32, align 4
  %classnum = alloca i32, align 4
  %ret = alloca i32, align 4
  %clone = alloca i32, align 4
  %mtype = alloca i8, align 1
  %eflags = alloca i8, align 1
  %gv = alloca %struct.gv*, align 8
  %fake_tag = alloca i8*, align 8
  %rsv = alloca %struct.sv*, align 8
  %xsv = alloca %struct.sv*, align 8
  %tag = alloca %struct.sv*, align 8
  %av_hook = alloca %struct.av*, align 8
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %nsz207 = alloca i32, align 4
  %offset214 = alloca i32, align 4
  %nsz281 = alloca i32, align 4
  %offset288 = alloca i32, align 4
  %nsz354 = alloca i32, align 4
  %offset361 = alloca i32, align 4
  %nsz496 = alloca i32, align 4
  %offset503 = alloca i32, align 4
  %nsz566 = alloca i32, align 4
  %offset573 = alloca i32, align 4
  %nsz640 = alloca i32, align 4
  %offset647 = alloca i32, align 4
  %nsz713 = alloca i32, align 4
  %offset720 = alloca i32, align 4
  %y = alloca i32, align 4
  %nsz794 = alloca i32, align 4
  %offset801 = alloca i32, align 4
  %nsz876 = alloca i32, align 4
  %offset883 = alloca i32, align 4
  %cnum = alloca i8, align 1
  %nsz964 = alloca i32, align 4
  %offset971 = alloca i32, align 4
  %y1028 = alloca i32, align 4
  %nsz1044 = alloca i32, align 4
  %offset1051 = alloca i32, align 4
  %nsz1126 = alloca i32, align 4
  %offset1133 = alloca i32, align 4
  %clen = alloca i8, align 1
  %nsz1214 = alloca i32, align 4
  %offset1221 = alloca i32, align 4
  %nsz1285 = alloca i32, align 4
  %offset1293 = alloca i32, align 4
  %wlen2 = alloca i32, align 4
  %y1356 = alloca i32, align 4
  %nsz1372 = alloca i32, align 4
  %offset1379 = alloca i32, align 4
  %nsz1454 = alloca i32, align 4
  %offset1461 = alloca i32, align 4
  %clen1524 = alloca i8, align 1
  %nsz1543 = alloca i32, align 4
  %offset1550 = alloca i32, align 4
  %nsz1615 = alloca i32, align 4
  %offset1622 = alloca i32, align 4
  %len3 = alloca i32, align 4
  %y1684 = alloca i32, align 4
  %nsz1700 = alloca i32, align 4
  %offset1707 = alloca i32, align 4
  %nsz1782 = alloca i32, align 4
  %offset1789 = alloca i32, align 4
  %clen1852 = alloca i8, align 1
  %nsz1871 = alloca i32, align 4
  %offset1878 = alloca i32, align 4
  %tagval = alloca i32, align 4
  %nsz1950 = alloca i32, align 4
  %offset1957 = alloca i32, align 4
  %mg = alloca %struct.magic*, align 8
  %svt = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i32 %type, i32* %type.addr, align 4
  store %struct.hv* %pkg, %struct.hv** %pkg.addr, align 8
  store %struct.sv* %hook, %struct.sv** %hook.addr, align 8
  store i32 0, i32* %recursed, align 4
  store i32 0, i32* %obj_type, align 4
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %optype = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 1
  %1 = load i32, i32* %optype, align 4
  %and = and i32 %1, 4
  store i32 %and, i32* %clone, align 4
  store i8 0, i8* %mtype, align 1
  store i8 0, i8* %eflags, align 1
  %2 = load i32, i32* %type.addr, align 4
  switch i32 %2, label %sw.default7 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
    i32 4, label %sw.bb3
  ]

sw.bb:                                            ; preds = %entry, %entry
  store i32 0, i32* %obj_type, align 4
  br label %sw.epilog8

sw.bb1:                                           ; preds = %entry
  store i32 1, i32* %obj_type, align 4
  br label %sw.epilog8

sw.bb2:                                           ; preds = %entry
  store i32 2, i32* %obj_type, align 4
  br label %sw.epilog8

sw.bb3:                                           ; preds = %entry
  store i32 3, i32* %obj_type, align 4
  %3 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %3, i32 0, i32 2
  %4 = load i32, i32* %sv_flags, align 4
  %and4 = and i32 %4, 255
  switch i32 %and4, label %sw.default [
    i32 12, label %sw.bb5
    i32 11, label %sw.bb6
  ]

sw.bb5:                                           ; preds = %sw.bb3
  store i8 6, i8* %eflags, align 1
  store i8 80, i8* %mtype, align 1
  br label %sw.epilog

sw.bb6:                                           ; preds = %sw.bb3
  store i8 5, i8* %eflags, align 1
  store i8 80, i8* %mtype, align 1
  br label %sw.epilog

sw.default:                                       ; preds = %sw.bb3
  store i8 4, i8* %eflags, align 1
  store i8 113, i8* %mtype, align 1
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb5
  br label %sw.epilog8

sw.default7:                                      ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %sw.default7
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 19
  store i32 1, i32* %s_dirty, align 8
  %6 = load i32, i32* %type.addr, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.24, i64 0, i64 0), i32 %6)
  br label %do.end

do.end:                                           ; preds = %do.body
  br label %sw.epilog8

sw.epilog8:                                       ; preds = %do.end, %sw.epilog, %sw.bb2, %sw.bb1, %sw.bb
  %7 = load i32, i32* %obj_type, align 4
  %or = or i32 64, %7
  %conv = trunc i32 %or to i8
  store i8 %conv, i8* %flags, align 1
  %8 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_flags9 = getelementptr inbounds %struct.hv, %struct.hv* %8, i32 0, i32 2
  %9 = load i32, i32* %sv_flags9, align 4
  %and10 = and i32 %9, 33554432
  %tobool = icmp ne i32 %and10, 0
  br i1 %tobool, label %land.lhs.true, label %cond.false64

land.lhs.true:                                    ; preds = %sw.epilog8
  %10 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %10, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %11 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %12 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %12, i32 0, i32 0
  %13 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %13, i32 0, i32 3
  %14 = load i64, i64* %xhv_max, align 8
  %add = add i64 %14, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %11, i64 %add
  %15 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %15, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %16 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool11 = icmp ne %struct.hek* %16, null
  br i1 %tobool11, label %land.lhs.true12, label %cond.false64

land.lhs.true12:                                  ; preds = %land.lhs.true
  %17 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u13 = getelementptr inbounds %struct.hv, %struct.hv* %17, i32 0, i32 3
  %svu_hash14 = bitcast %union.anon.4* %sv_u13 to %struct.he***
  %18 = load %struct.he**, %struct.he*** %svu_hash14, align 8
  %19 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any15 = getelementptr inbounds %struct.hv, %struct.hv* %19, i32 0, i32 0
  %20 = load %struct.xpvhv*, %struct.xpvhv** %sv_any15, align 8
  %xhv_max16 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %20, i32 0, i32 3
  %21 = load i64, i64* %xhv_max16, align 8
  %add17 = add i64 %21, 1
  %arrayidx18 = getelementptr inbounds %struct.he*, %struct.he** %18, i64 %add17
  %22 = bitcast %struct.he** %arrayidx18 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %22, i32 0, i32 4
  %23 = load i32, i32* %xhv_name_count, align 4
  %tobool19 = icmp ne i32 %23, 0
  br i1 %tobool19, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true12
  %24 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u20 = getelementptr inbounds %struct.hv, %struct.hv* %24, i32 0, i32 3
  %svu_hash21 = bitcast %union.anon.4* %sv_u20 to %struct.he***
  %25 = load %struct.he**, %struct.he*** %svu_hash21, align 8
  %26 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any22 = getelementptr inbounds %struct.hv, %struct.hv* %26, i32 0, i32 0
  %27 = load %struct.xpvhv*, %struct.xpvhv** %sv_any22, align 8
  %xhv_max23 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %27, i32 0, i32 3
  %28 = load i64, i64* %xhv_max23, align 8
  %add24 = add i64 %28, 1
  %arrayidx25 = getelementptr inbounds %struct.he*, %struct.he** %25, i64 %add24
  %29 = bitcast %struct.he** %arrayidx25 to %struct.xpvhv_aux*
  %xhv_name_u26 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %29, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u26 to %struct.hek***
  %30 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %31 = load %struct.hek*, %struct.hek** %30, align 8
  %tobool27 = icmp ne %struct.hek* %31, null
  br i1 %tobool27, label %cond.true37, label %cond.false64

cond.false:                                       ; preds = %land.lhs.true12
  %32 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u28 = getelementptr inbounds %struct.hv, %struct.hv* %32, i32 0, i32 3
  %svu_hash29 = bitcast %union.anon.4* %sv_u28 to %struct.he***
  %33 = load %struct.he**, %struct.he*** %svu_hash29, align 8
  %34 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any30 = getelementptr inbounds %struct.hv, %struct.hv* %34, i32 0, i32 0
  %35 = load %struct.xpvhv*, %struct.xpvhv** %sv_any30, align 8
  %xhv_max31 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %35, i32 0, i32 3
  %36 = load i64, i64* %xhv_max31, align 8
  %add32 = add i64 %36, 1
  %arrayidx33 = getelementptr inbounds %struct.he*, %struct.he** %33, i64 %add32
  %37 = bitcast %struct.he** %arrayidx33 to %struct.xpvhv_aux*
  %xhv_name_u34 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %37, i32 0, i32 0
  %xhvnameu_name35 = bitcast %union._xhvnameu* %xhv_name_u34 to %struct.hek**
  %38 = load %struct.hek*, %struct.hek** %xhvnameu_name35, align 8
  %tobool36 = icmp ne %struct.hek* %38, null
  br i1 %tobool36, label %cond.true37, label %cond.false64

cond.true37:                                      ; preds = %cond.false, %cond.true
  %39 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u38 = getelementptr inbounds %struct.hv, %struct.hv* %39, i32 0, i32 3
  %svu_hash39 = bitcast %union.anon.4* %sv_u38 to %struct.he***
  %40 = load %struct.he**, %struct.he*** %svu_hash39, align 8
  %41 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any40 = getelementptr inbounds %struct.hv, %struct.hv* %41, i32 0, i32 0
  %42 = load %struct.xpvhv*, %struct.xpvhv** %sv_any40, align 8
  %xhv_max41 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %42, i32 0, i32 3
  %43 = load i64, i64* %xhv_max41, align 8
  %add42 = add i64 %43, 1
  %arrayidx43 = getelementptr inbounds %struct.he*, %struct.he** %40, i64 %add42
  %44 = bitcast %struct.he** %arrayidx43 to %struct.xpvhv_aux*
  %xhv_name_count44 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %44, i32 0, i32 4
  %45 = load i32, i32* %xhv_name_count44, align 4
  %tobool45 = icmp ne i32 %45, 0
  br i1 %tobool45, label %cond.true46, label %cond.false55

cond.true46:                                      ; preds = %cond.true37
  %46 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u47 = getelementptr inbounds %struct.hv, %struct.hv* %46, i32 0, i32 3
  %svu_hash48 = bitcast %union.anon.4* %sv_u47 to %struct.he***
  %47 = load %struct.he**, %struct.he*** %svu_hash48, align 8
  %48 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any49 = getelementptr inbounds %struct.hv, %struct.hv* %48, i32 0, i32 0
  %49 = load %struct.xpvhv*, %struct.xpvhv** %sv_any49, align 8
  %xhv_max50 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %49, i32 0, i32 3
  %50 = load i64, i64* %xhv_max50, align 8
  %add51 = add i64 %50, 1
  %arrayidx52 = getelementptr inbounds %struct.he*, %struct.he** %47, i64 %add51
  %51 = bitcast %struct.he** %arrayidx52 to %struct.xpvhv_aux*
  %xhv_name_u53 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %51, i32 0, i32 0
  %xhvnameu_names54 = bitcast %union._xhvnameu* %xhv_name_u53 to %struct.hek***
  %52 = load %struct.hek**, %struct.hek*** %xhvnameu_names54, align 8
  %53 = load %struct.hek*, %struct.hek** %52, align 8
  br label %cond.end

cond.false55:                                     ; preds = %cond.true37
  %54 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u56 = getelementptr inbounds %struct.hv, %struct.hv* %54, i32 0, i32 3
  %svu_hash57 = bitcast %union.anon.4* %sv_u56 to %struct.he***
  %55 = load %struct.he**, %struct.he*** %svu_hash57, align 8
  %56 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any58 = getelementptr inbounds %struct.hv, %struct.hv* %56, i32 0, i32 0
  %57 = load %struct.xpvhv*, %struct.xpvhv** %sv_any58, align 8
  %xhv_max59 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %57, i32 0, i32 3
  %58 = load i64, i64* %xhv_max59, align 8
  %add60 = add i64 %58, 1
  %arrayidx61 = getelementptr inbounds %struct.he*, %struct.he** %55, i64 %add60
  %59 = bitcast %struct.he** %arrayidx61 to %struct.xpvhv_aux*
  %xhv_name_u62 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %59, i32 0, i32 0
  %xhvnameu_name63 = bitcast %union._xhvnameu* %xhv_name_u62 to %struct.hek**
  %60 = load %struct.hek*, %struct.hek** %xhvnameu_name63, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false55, %cond.true46
  %cond = phi %struct.hek* [ %53, %cond.true46 ], [ %60, %cond.false55 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  br label %cond.end65

cond.false64:                                     ; preds = %cond.false, %cond.true, %land.lhs.true, %sw.epilog8
  br label %cond.end65

cond.end65:                                       ; preds = %cond.false64, %cond.end
  %cond66 = phi i8* [ %arraydecay, %cond.end ], [ null, %cond.false64 ]
  store i8* %cond66, i8** %classname, align 8
  %61 = load i8*, i8** %classname, align 8
  %call = call i64 @strlen(i8* %61) #5
  %conv67 = trunc i64 %call to i32
  store i32 %conv67, i32* %len, align 4
  %62 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call68 = call %struct.sv* @Perl_newRV(%struct.sv* %62)
  store %struct.sv* %call68, %struct.sv** %ref, align 8
  %63 = load %struct.sv*, %struct.sv** %ref, align 8
  %64 = load %struct.sv*, %struct.sv** %hook.addr, align 8
  %65 = load i32, i32* %clone, align 4
  %call69 = call %struct.av* @array_call(%struct.sv* %63, %struct.sv* %64, i32 %65)
  store %struct.av* %call69, %struct.av** %av, align 8
  %66 = load %struct.sv*, %struct.sv** %ref, align 8
  %67 = bitcast %struct.sv* %66 to i8*
  %68 = bitcast i8* %67 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %68)
  %69 = load %struct.av*, %struct.av** %av, align 8
  %sv_any70 = getelementptr inbounds %struct.av, %struct.av* %69, i32 0, i32 0
  %70 = load %struct.xpvav*, %struct.xpvav** %sv_any70, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %70, i32 0, i32 2
  %71 = load i64, i64* %xav_fill, align 8
  %add71 = add nsw i64 %71, 1
  %conv72 = trunc i64 %add71 to i32
  store i32 %conv72, i32* %count, align 4
  %72 = load i32, i32* %count, align 4
  %tobool73 = icmp ne i32 %72, 0
  br i1 %tobool73, label %if.end86, label %if.then

if.then:                                          ; preds = %cond.end65
  %73 = load %struct.av*, %struct.av** %av, align 8
  call void @Perl_av_undef(%struct.av* %73)
  %74 = load %struct.av*, %struct.av** %av, align 8
  %75 = bitcast %struct.av* %74 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %75)
  %76 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hclass = getelementptr inbounds %struct.stcxt, %struct.stcxt* %76, i32 0, i32 7
  %77 = load %struct.hv*, %struct.hv** %hclass, align 8
  %78 = load i8*, i8** %classname, align 8
  %79 = load i32, i32* %len, align 4
  %call74 = call i8* @Perl_hv_common_key_len(%struct.hv* %77, i8* %78, i32 %79, i32 32, %struct.sv* null, i32 0)
  %80 = bitcast i8* %call74 to %struct.sv**
  %tobool75 = icmp ne %struct.sv** %80, null
  br i1 %tobool75, label %if.then76, label %if.end

if.then76:                                        ; preds = %if.then
  br label %do.body77

do.body77:                                        ; preds = %if.then76
  %81 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty78 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %81, i32 0, i32 19
  store i32 1, i32* %s_dirty78, align 8
  %82 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %optype79 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %82, i32 0, i32 1
  %83 = load i32, i32* %optype79, align 4
  %and80 = and i32 %83, 4
  %tobool81 = icmp ne i32 %and80, 0
  %84 = zext i1 %tobool81 to i64
  %cond82 = select i1 %tobool81, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i64 0, i64 0)
  %85 = load i8*, i8** %classname, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.25, i64 0, i64 0), i8* %cond82, i8* %85)
  br label %do.end83

do.end83:                                         ; preds = %do.body77
  br label %if.end

if.end:                                           ; preds = %do.end83, %if.then
  %86 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook84 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %86, i32 0, i32 9
  %87 = load %struct.hv*, %struct.hv** %hook84, align 8
  %88 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  call void @pkg_hide(%struct.hv* %87, %struct.hv* %88, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i64 0, i64 0))
  %89 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %90 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %91 = load i32, i32* %type.addr, align 4
  %92 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %call85 = call i32 @store_blessed(%struct.stcxt* %89, %struct.sv* %90, i32 %91, %struct.hv* %92)
  store i32 %call85, i32* %retval, align 4
  br label %return

if.end86:                                         ; preds = %cond.end65
  %93 = load %struct.av*, %struct.av** %av, align 8
  %sv_u87 = getelementptr inbounds %struct.av, %struct.av* %93, i32 0, i32 3
  %svu_array = bitcast %union.anon.2* %sv_u87 to %struct.sv***
  %94 = load %struct.sv**, %struct.sv*** %svu_array, align 8
  store %struct.sv** %94, %struct.sv*** %ary, align 8
  %95 = load %struct.sv**, %struct.sv*** %ary, align 8
  %arrayidx88 = getelementptr inbounds %struct.sv*, %struct.sv** %95, i64 0
  %96 = load %struct.sv*, %struct.sv** %arrayidx88, align 8
  %sv_flags89 = getelementptr inbounds %struct.sv, %struct.sv* %96, i32 0, i32 2
  %97 = load i32, i32* %sv_flags89, align 4
  %and90 = and i32 %97, 2098176
  %cmp = icmp eq i32 %and90, 1024
  br i1 %cmp, label %cond.true92, label %cond.false97

cond.true92:                                      ; preds = %if.end86
  %98 = load %struct.sv**, %struct.sv*** %ary, align 8
  %arrayidx93 = getelementptr inbounds %struct.sv*, %struct.sv** %98, i64 0
  %99 = load %struct.sv*, %struct.sv** %arrayidx93, align 8
  %sv_any94 = getelementptr inbounds %struct.sv, %struct.sv* %99, i32 0, i32 0
  %100 = load i8*, i8** %sv_any94, align 8
  %101 = bitcast i8* %100 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %101, i32 0, i32 2
  %102 = load i64, i64* %xpv_cur, align 8
  store i64 %102, i64* %len2, align 8
  %103 = load %struct.sv**, %struct.sv*** %ary, align 8
  %arrayidx95 = getelementptr inbounds %struct.sv*, %struct.sv** %103, i64 0
  %104 = load %struct.sv*, %struct.sv** %arrayidx95, align 8
  %sv_u96 = getelementptr inbounds %struct.sv, %struct.sv* %104, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u96 to i8**
  %105 = load i8*, i8** %svu_pv, align 8
  br label %cond.end100

cond.false97:                                     ; preds = %if.end86
  %106 = load %struct.sv**, %struct.sv*** %ary, align 8
  %arrayidx98 = getelementptr inbounds %struct.sv*, %struct.sv** %106, i64 0
  %107 = load %struct.sv*, %struct.sv** %arrayidx98, align 8
  %call99 = call i8* @Perl_sv_2pv_flags(%struct.sv* %107, i64* %len2, i32 2)
  br label %cond.end100

cond.end100:                                      ; preds = %cond.false97, %cond.true92
  %cond101 = phi i8* [ %105, %cond.true92 ], [ %call99, %cond.false97 ]
  store i8* %cond101, i8** %pv, align 8
  %108 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %call102 = call %struct.gv* @Perl_gv_fetchmethod_autoload(%struct.hv* %108, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i64 0, i64 0), i32 0)
  store %struct.gv* %call102, %struct.gv** %gv, align 8
  %109 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool103 = icmp ne %struct.gv* %109, null
  br i1 %tobool103, label %land.lhs.true104, label %if.end117

land.lhs.true104:                                 ; preds = %cond.end100
  %110 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_flags105 = getelementptr inbounds %struct.gv, %struct.gv* %110, i32 0, i32 2
  %111 = load i32, i32* %sv_flags105, align 4
  %and106 = and i32 %111, 255
  %cmp107 = icmp eq i32 %and106, 9
  br i1 %cmp107, label %if.then109, label %if.end117

if.then109:                                       ; preds = %land.lhs.true104
  %112 = load i32, i32* %count, align 4
  %cmp110 = icmp sgt i32 %112, 1
  br i1 %cmp110, label %if.then112, label %if.end116

if.then112:                                       ; preds = %if.then109
  br label %do.body113

do.body113:                                       ; preds = %if.then112
  %113 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty114 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %113, i32 0, i32 19
  store i32 1, i32* %s_dirty114, align 8
  %114 = load i8*, i8** %classname, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.29, i64 0, i64 0), i8* %114)
  br label %do.end115

do.end115:                                        ; preds = %do.body113
  br label %if.end116

if.end116:                                        ; preds = %do.end115, %if.then109
  br label %check_done

if.end117:                                        ; preds = %land.lhs.true104, %cond.end100
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end117
  %115 = load i32, i32* %i, align 4
  %116 = load i32, i32* %count, align 4
  %cmp118 = icmp slt i32 %115, %116
  br i1 %cmp118, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %117 = load %struct.sv**, %struct.sv*** %ary, align 8
  %118 = load i32, i32* %i, align 4
  %idxprom = sext i32 %118 to i64
  %arrayidx120 = getelementptr inbounds %struct.sv*, %struct.sv** %117, i64 %idxprom
  %119 = load %struct.sv*, %struct.sv** %arrayidx120, align 8
  store %struct.sv* %119, %struct.sv** %rsv, align 8
  %120 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook_seen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %120, i32 0, i32 4
  %121 = load %struct.av*, %struct.av** %hook_seen, align 8
  store %struct.av* %121, %struct.av** %av_hook, align 8
  %122 = load %struct.sv*, %struct.sv** %rsv, align 8
  %sv_flags121 = getelementptr inbounds %struct.sv, %struct.sv* %122, i32 0, i32 2
  %123 = load i32, i32* %sv_flags121, align 4
  %and122 = and i32 %123, 2048
  %tobool123 = icmp ne i32 %and122, 0
  br i1 %tobool123, label %if.end128, label %if.then124

if.then124:                                       ; preds = %for.body
  br label %do.body125

do.body125:                                       ; preds = %if.then124
  %124 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty126 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %124, i32 0, i32 19
  store i32 1, i32* %s_dirty126, align 8
  %125 = load i32, i32* %i, align 4
  %126 = load i8*, i8** %classname, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.30, i64 0, i64 0), i32 %125, i8* %126)
  br label %do.end127

do.end127:                                        ; preds = %do.body125
  br label %if.end128

if.end128:                                        ; preds = %do.end127, %for.body
  %127 = load %struct.sv*, %struct.sv** %rsv, align 8
  %sv_u129 = getelementptr inbounds %struct.sv, %struct.sv* %127, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u129 to %struct.sv**
  %128 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  store %struct.sv* %128, %struct.sv** %xsv, align 8
  %129 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %pseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %129, i32 0, i32 2
  %130 = load %struct.ptr_tbl*, %struct.ptr_tbl** %pseen, align 8
  %131 = load %struct.sv*, %struct.sv** %xsv, align 8
  %132 = bitcast %struct.sv* %131 to i8*
  %call130 = call i8* @Perl_ptr_table_fetch(%struct.ptr_tbl* %130, i8* %132)
  store i8* %call130, i8** %fake_tag, align 8
  %tobool131 = icmp ne i8* %call130, null
  br i1 %tobool131, label %if.then132, label %if.end133

if.then132:                                       ; preds = %if.end128
  br label %sv_seen

if.end133:                                        ; preds = %if.end128
  %133 = load i32, i32* %recursed, align 4
  %inc = add nsw i32 %133, 1
  store i32 %inc, i32* %recursed, align 4
  %tobool134 = icmp ne i32 %133, 0
  br i1 %tobool134, label %if.else336, label %if.then135

if.then135:                                       ; preds = %if.end133
  br label %do.body136

do.body136:                                       ; preds = %if.then135
  %134 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %134, i32 0, i32 24
  %135 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool137 = icmp ne %struct._PerlIO** %135, null
  br i1 %tobool137, label %if.else181, label %if.then138

if.then138:                                       ; preds = %do.body136
  br label %do.body139

do.body139:                                       ; preds = %if.then138
  %136 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %136, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %137 = load i8*, i8** %aptr, align 8
  %138 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf140 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %138, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf140, i32 0, i32 3
  %139 = load i8*, i8** %aend, align 8
  %cmp141 = icmp ult i8* %137, %139
  br i1 %cmp141, label %if.then143, label %if.else

if.then143:                                       ; preds = %do.body139
  %140 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf144 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %140, i32 0, i32 22
  %aptr145 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf144, i32 0, i32 2
  %141 = load i8*, i8** %aptr145, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %141, i32 1
  store i8* %incdec.ptr, i8** %aptr145, align 8
  store i8 19, i8* %141, align 1
  br label %if.end179

if.else:                                          ; preds = %do.body139
  br label %do.body146

do.body146:                                       ; preds = %if.else
  %142 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf147 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %142, i32 0, i32 22
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf147, i32 0, i32 1
  %143 = load i64, i64* %asiz, align 8
  %add148 = add i64 1, %143
  %add149 = add i64 %add148, 8191
  %and150 = and i64 %add149, -8192
  %conv151 = trunc i64 %and150 to i32
  store i32 %conv151, i32* %nsz, align 4
  %144 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf152 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %144, i32 0, i32 22
  %aptr153 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf152, i32 0, i32 2
  %145 = load i8*, i8** %aptr153, align 8
  %146 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf154 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %146, i32 0, i32 22
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf154, i32 0, i32 0
  %147 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %145 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %147 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv155 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv155, i32* %offset, align 4
  %148 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf156 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %148, i32 0, i32 22
  %arena157 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf156, i32 0, i32 0
  %149 = load i8*, i8** %arena157, align 8
  %150 = load i32, i32* %nsz, align 4
  %conv158 = sext i32 %150 to i64
  %mul = mul i64 %conv158, 1
  %call159 = call i8* @Perl_safesysrealloc(i8* %149, i64 %mul)
  %151 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf160 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %151, i32 0, i32 22
  %arena161 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf160, i32 0, i32 0
  store i8* %call159, i8** %arena161, align 8
  %152 = load i32, i32* %nsz, align 4
  %conv162 = sext i32 %152 to i64
  %153 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf163 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %153, i32 0, i32 22
  %asiz164 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf163, i32 0, i32 1
  store i64 %conv162, i64* %asiz164, align 8
  %154 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf165 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %154, i32 0, i32 22
  %arena166 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf165, i32 0, i32 0
  %155 = load i8*, i8** %arena166, align 8
  %156 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %156 to i64
  %add.ptr = getelementptr inbounds i8, i8* %155, i64 %idx.ext
  %157 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf167 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %157, i32 0, i32 22
  %aptr168 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf167, i32 0, i32 2
  store i8* %add.ptr, i8** %aptr168, align 8
  %158 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf169 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %158, i32 0, i32 22
  %arena170 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf169, i32 0, i32 0
  %159 = load i8*, i8** %arena170, align 8
  %160 = load i32, i32* %nsz, align 4
  %idx.ext171 = sext i32 %160 to i64
  %add.ptr172 = getelementptr inbounds i8, i8* %159, i64 %idx.ext171
  %161 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf173 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %161, i32 0, i32 22
  %aend174 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf173, i32 0, i32 3
  store i8* %add.ptr172, i8** %aend174, align 8
  br label %do.end175

do.end175:                                        ; preds = %do.body146
  %162 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf176 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %162, i32 0, i32 22
  %aptr177 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf176, i32 0, i32 2
  %163 = load i8*, i8** %aptr177, align 8
  %incdec.ptr178 = getelementptr inbounds i8, i8* %163, i32 1
  store i8* %incdec.ptr178, i8** %aptr177, align 8
  store i8 19, i8* %163, align 1
  br label %if.end179

if.end179:                                        ; preds = %do.end175, %if.then143
  br label %do.end180

do.end180:                                        ; preds = %if.end179
  br label %if.end188

if.else181:                                       ; preds = %do.body136
  %164 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio182 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %164, i32 0, i32 24
  %165 = load %struct._PerlIO**, %struct._PerlIO*** %fio182, align 8
  %call183 = call i32 @PerlIO_putc(%struct._PerlIO** %165, i32 19)
  %cmp184 = icmp eq i32 %call183, -1
  br i1 %cmp184, label %if.then186, label %if.end187

if.then186:                                       ; preds = %if.else181
  store i32 -1, i32* %retval, align 4
  br label %return

if.end187:                                        ; preds = %if.else181
  br label %if.end188

if.end188:                                        ; preds = %if.end187, %do.end180
  br label %do.end189

do.end189:                                        ; preds = %if.end188
  br label %do.body190

do.body190:                                       ; preds = %do.end189
  %166 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio191 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %166, i32 0, i32 24
  %167 = load %struct._PerlIO**, %struct._PerlIO*** %fio191, align 8
  %tobool192 = icmp ne %struct._PerlIO** %167, null
  br i1 %tobool192, label %if.else251, label %if.then193

if.then193:                                       ; preds = %do.body190
  br label %do.body194

do.body194:                                       ; preds = %if.then193
  %168 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf195 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %168, i32 0, i32 22
  %aptr196 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf195, i32 0, i32 2
  %169 = load i8*, i8** %aptr196, align 8
  %170 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf197 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %170, i32 0, i32 22
  %aend198 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf197, i32 0, i32 3
  %171 = load i8*, i8** %aend198, align 8
  %cmp199 = icmp ult i8* %169, %171
  br i1 %cmp199, label %if.then201, label %if.else205

if.then201:                                       ; preds = %do.body194
  %172 = load i8, i8* %flags, align 1
  %173 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf202 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %173, i32 0, i32 22
  %aptr203 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf202, i32 0, i32 2
  %174 = load i8*, i8** %aptr203, align 8
  %incdec.ptr204 = getelementptr inbounds i8, i8* %174, i32 1
  store i8* %incdec.ptr204, i8** %aptr203, align 8
  store i8 %172, i8* %174, align 1
  br label %if.end249

if.else205:                                       ; preds = %do.body194
  br label %do.body206

do.body206:                                       ; preds = %if.else205
  %175 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf208 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %175, i32 0, i32 22
  %asiz209 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf208, i32 0, i32 1
  %176 = load i64, i64* %asiz209, align 8
  %add210 = add i64 1, %176
  %add211 = add i64 %add210, 8191
  %and212 = and i64 %add211, -8192
  %conv213 = trunc i64 %and212 to i32
  store i32 %conv213, i32* %nsz207, align 4
  %177 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf215 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %177, i32 0, i32 22
  %aptr216 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf215, i32 0, i32 2
  %178 = load i8*, i8** %aptr216, align 8
  %179 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf217 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %179, i32 0, i32 22
  %arena218 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf217, i32 0, i32 0
  %180 = load i8*, i8** %arena218, align 8
  %sub.ptr.lhs.cast219 = ptrtoint i8* %178 to i64
  %sub.ptr.rhs.cast220 = ptrtoint i8* %180 to i64
  %sub.ptr.sub221 = sub i64 %sub.ptr.lhs.cast219, %sub.ptr.rhs.cast220
  %conv222 = trunc i64 %sub.ptr.sub221 to i32
  store i32 %conv222, i32* %offset214, align 4
  %181 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf223 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %181, i32 0, i32 22
  %arena224 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf223, i32 0, i32 0
  %182 = load i8*, i8** %arena224, align 8
  %183 = load i32, i32* %nsz207, align 4
  %conv225 = sext i32 %183 to i64
  %mul226 = mul i64 %conv225, 1
  %call227 = call i8* @Perl_safesysrealloc(i8* %182, i64 %mul226)
  %184 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf228 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %184, i32 0, i32 22
  %arena229 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf228, i32 0, i32 0
  store i8* %call227, i8** %arena229, align 8
  %185 = load i32, i32* %nsz207, align 4
  %conv230 = sext i32 %185 to i64
  %186 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf231 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %186, i32 0, i32 22
  %asiz232 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf231, i32 0, i32 1
  store i64 %conv230, i64* %asiz232, align 8
  %187 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf233 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %187, i32 0, i32 22
  %arena234 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf233, i32 0, i32 0
  %188 = load i8*, i8** %arena234, align 8
  %189 = load i32, i32* %offset214, align 4
  %idx.ext235 = sext i32 %189 to i64
  %add.ptr236 = getelementptr inbounds i8, i8* %188, i64 %idx.ext235
  %190 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf237 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %190, i32 0, i32 22
  %aptr238 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf237, i32 0, i32 2
  store i8* %add.ptr236, i8** %aptr238, align 8
  %191 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf239 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %191, i32 0, i32 22
  %arena240 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf239, i32 0, i32 0
  %192 = load i8*, i8** %arena240, align 8
  %193 = load i32, i32* %nsz207, align 4
  %idx.ext241 = sext i32 %193 to i64
  %add.ptr242 = getelementptr inbounds i8, i8* %192, i64 %idx.ext241
  %194 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf243 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %194, i32 0, i32 22
  %aend244 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf243, i32 0, i32 3
  store i8* %add.ptr242, i8** %aend244, align 8
  br label %do.end245

do.end245:                                        ; preds = %do.body206
  %195 = load i8, i8* %flags, align 1
  %196 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf246 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %196, i32 0, i32 22
  %aptr247 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf246, i32 0, i32 2
  %197 = load i8*, i8** %aptr247, align 8
  %incdec.ptr248 = getelementptr inbounds i8, i8* %197, i32 1
  store i8* %incdec.ptr248, i8** %aptr247, align 8
  store i8 %195, i8* %197, align 1
  br label %if.end249

if.end249:                                        ; preds = %do.end245, %if.then201
  br label %do.end250

do.end250:                                        ; preds = %if.end249
  br label %if.end259

if.else251:                                       ; preds = %do.body190
  %198 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio252 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %198, i32 0, i32 24
  %199 = load %struct._PerlIO**, %struct._PerlIO*** %fio252, align 8
  %200 = load i8, i8* %flags, align 1
  %conv253 = zext i8 %200 to i32
  %call254 = call i32 @PerlIO_putc(%struct._PerlIO** %199, i32 %conv253)
  %cmp255 = icmp eq i32 %call254, -1
  br i1 %cmp255, label %if.then257, label %if.end258

if.then257:                                       ; preds = %if.else251
  store i32 -1, i32* %retval, align 4
  br label %return

if.end258:                                        ; preds = %if.else251
  br label %if.end259

if.end259:                                        ; preds = %if.end258, %do.end250
  br label %do.end260

do.end260:                                        ; preds = %if.end259
  %201 = load i32, i32* %obj_type, align 4
  %cmp261 = icmp eq i32 %201, 3
  br i1 %cmp261, label %if.then263, label %if.end335

if.then263:                                       ; preds = %do.end260
  br label %do.body264

do.body264:                                       ; preds = %if.then263
  %202 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio265 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %202, i32 0, i32 24
  %203 = load %struct._PerlIO**, %struct._PerlIO*** %fio265, align 8
  %tobool266 = icmp ne %struct._PerlIO** %203, null
  br i1 %tobool266, label %if.else325, label %if.then267

if.then267:                                       ; preds = %do.body264
  br label %do.body268

do.body268:                                       ; preds = %if.then267
  %204 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf269 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %204, i32 0, i32 22
  %aptr270 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf269, i32 0, i32 2
  %205 = load i8*, i8** %aptr270, align 8
  %206 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf271 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %206, i32 0, i32 22
  %aend272 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf271, i32 0, i32 3
  %207 = load i8*, i8** %aend272, align 8
  %cmp273 = icmp ult i8* %205, %207
  br i1 %cmp273, label %if.then275, label %if.else279

if.then275:                                       ; preds = %do.body268
  %208 = load i8, i8* %eflags, align 1
  %209 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf276 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %209, i32 0, i32 22
  %aptr277 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf276, i32 0, i32 2
  %210 = load i8*, i8** %aptr277, align 8
  %incdec.ptr278 = getelementptr inbounds i8, i8* %210, i32 1
  store i8* %incdec.ptr278, i8** %aptr277, align 8
  store i8 %208, i8* %210, align 1
  br label %if.end323

if.else279:                                       ; preds = %do.body268
  br label %do.body280

do.body280:                                       ; preds = %if.else279
  %211 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf282 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %211, i32 0, i32 22
  %asiz283 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf282, i32 0, i32 1
  %212 = load i64, i64* %asiz283, align 8
  %add284 = add i64 1, %212
  %add285 = add i64 %add284, 8191
  %and286 = and i64 %add285, -8192
  %conv287 = trunc i64 %and286 to i32
  store i32 %conv287, i32* %nsz281, align 4
  %213 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf289 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %213, i32 0, i32 22
  %aptr290 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf289, i32 0, i32 2
  %214 = load i8*, i8** %aptr290, align 8
  %215 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf291 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %215, i32 0, i32 22
  %arena292 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf291, i32 0, i32 0
  %216 = load i8*, i8** %arena292, align 8
  %sub.ptr.lhs.cast293 = ptrtoint i8* %214 to i64
  %sub.ptr.rhs.cast294 = ptrtoint i8* %216 to i64
  %sub.ptr.sub295 = sub i64 %sub.ptr.lhs.cast293, %sub.ptr.rhs.cast294
  %conv296 = trunc i64 %sub.ptr.sub295 to i32
  store i32 %conv296, i32* %offset288, align 4
  %217 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf297 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %217, i32 0, i32 22
  %arena298 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf297, i32 0, i32 0
  %218 = load i8*, i8** %arena298, align 8
  %219 = load i32, i32* %nsz281, align 4
  %conv299 = sext i32 %219 to i64
  %mul300 = mul i64 %conv299, 1
  %call301 = call i8* @Perl_safesysrealloc(i8* %218, i64 %mul300)
  %220 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf302 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %220, i32 0, i32 22
  %arena303 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf302, i32 0, i32 0
  store i8* %call301, i8** %arena303, align 8
  %221 = load i32, i32* %nsz281, align 4
  %conv304 = sext i32 %221 to i64
  %222 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf305 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %222, i32 0, i32 22
  %asiz306 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf305, i32 0, i32 1
  store i64 %conv304, i64* %asiz306, align 8
  %223 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf307 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %223, i32 0, i32 22
  %arena308 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf307, i32 0, i32 0
  %224 = load i8*, i8** %arena308, align 8
  %225 = load i32, i32* %offset288, align 4
  %idx.ext309 = sext i32 %225 to i64
  %add.ptr310 = getelementptr inbounds i8, i8* %224, i64 %idx.ext309
  %226 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf311 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %226, i32 0, i32 22
  %aptr312 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf311, i32 0, i32 2
  store i8* %add.ptr310, i8** %aptr312, align 8
  %227 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf313 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %227, i32 0, i32 22
  %arena314 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf313, i32 0, i32 0
  %228 = load i8*, i8** %arena314, align 8
  %229 = load i32, i32* %nsz281, align 4
  %idx.ext315 = sext i32 %229 to i64
  %add.ptr316 = getelementptr inbounds i8, i8* %228, i64 %idx.ext315
  %230 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf317 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %230, i32 0, i32 22
  %aend318 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf317, i32 0, i32 3
  store i8* %add.ptr316, i8** %aend318, align 8
  br label %do.end319

do.end319:                                        ; preds = %do.body280
  %231 = load i8, i8* %eflags, align 1
  %232 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf320 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %232, i32 0, i32 22
  %aptr321 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf320, i32 0, i32 2
  %233 = load i8*, i8** %aptr321, align 8
  %incdec.ptr322 = getelementptr inbounds i8, i8* %233, i32 1
  store i8* %incdec.ptr322, i8** %aptr321, align 8
  store i8 %231, i8* %233, align 1
  br label %if.end323

if.end323:                                        ; preds = %do.end319, %if.then275
  br label %do.end324

do.end324:                                        ; preds = %if.end323
  br label %if.end333

if.else325:                                       ; preds = %do.body264
  %234 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio326 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %234, i32 0, i32 24
  %235 = load %struct._PerlIO**, %struct._PerlIO*** %fio326, align 8
  %236 = load i8, i8* %eflags, align 1
  %conv327 = zext i8 %236 to i32
  %call328 = call i32 @PerlIO_putc(%struct._PerlIO** %235, i32 %conv327)
  %cmp329 = icmp eq i32 %call328, -1
  br i1 %cmp329, label %if.then331, label %if.end332

if.then331:                                       ; preds = %if.else325
  store i32 -1, i32* %retval, align 4
  br label %return

if.end332:                                        ; preds = %if.else325
  br label %if.end333

if.end333:                                        ; preds = %if.end332, %do.end324
  br label %do.end334

do.end334:                                        ; preds = %if.end333
  br label %if.end335

if.end335:                                        ; preds = %do.end334, %do.end260
  br label %if.end408

if.else336:                                       ; preds = %if.end133
  br label %do.body337

do.body337:                                       ; preds = %if.else336
  %237 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio338 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %237, i32 0, i32 24
  %238 = load %struct._PerlIO**, %struct._PerlIO*** %fio338, align 8
  %tobool339 = icmp ne %struct._PerlIO** %238, null
  br i1 %tobool339, label %if.else398, label %if.then340

if.then340:                                       ; preds = %do.body337
  br label %do.body341

do.body341:                                       ; preds = %if.then340
  %239 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf342 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %239, i32 0, i32 22
  %aptr343 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf342, i32 0, i32 2
  %240 = load i8*, i8** %aptr343, align 8
  %241 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf344 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %241, i32 0, i32 22
  %aend345 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf344, i32 0, i32 3
  %242 = load i8*, i8** %aend345, align 8
  %cmp346 = icmp ult i8* %240, %242
  br i1 %cmp346, label %if.then348, label %if.else352

if.then348:                                       ; preds = %do.body341
  %243 = load i8, i8* %flags, align 1
  %244 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf349 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %244, i32 0, i32 22
  %aptr350 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf349, i32 0, i32 2
  %245 = load i8*, i8** %aptr350, align 8
  %incdec.ptr351 = getelementptr inbounds i8, i8* %245, i32 1
  store i8* %incdec.ptr351, i8** %aptr350, align 8
  store i8 %243, i8* %245, align 1
  br label %if.end396

if.else352:                                       ; preds = %do.body341
  br label %do.body353

do.body353:                                       ; preds = %if.else352
  %246 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf355 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %246, i32 0, i32 22
  %asiz356 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf355, i32 0, i32 1
  %247 = load i64, i64* %asiz356, align 8
  %add357 = add i64 1, %247
  %add358 = add i64 %add357, 8191
  %and359 = and i64 %add358, -8192
  %conv360 = trunc i64 %and359 to i32
  store i32 %conv360, i32* %nsz354, align 4
  %248 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf362 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %248, i32 0, i32 22
  %aptr363 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf362, i32 0, i32 2
  %249 = load i8*, i8** %aptr363, align 8
  %250 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf364 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %250, i32 0, i32 22
  %arena365 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf364, i32 0, i32 0
  %251 = load i8*, i8** %arena365, align 8
  %sub.ptr.lhs.cast366 = ptrtoint i8* %249 to i64
  %sub.ptr.rhs.cast367 = ptrtoint i8* %251 to i64
  %sub.ptr.sub368 = sub i64 %sub.ptr.lhs.cast366, %sub.ptr.rhs.cast367
  %conv369 = trunc i64 %sub.ptr.sub368 to i32
  store i32 %conv369, i32* %offset361, align 4
  %252 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf370 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %252, i32 0, i32 22
  %arena371 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf370, i32 0, i32 0
  %253 = load i8*, i8** %arena371, align 8
  %254 = load i32, i32* %nsz354, align 4
  %conv372 = sext i32 %254 to i64
  %mul373 = mul i64 %conv372, 1
  %call374 = call i8* @Perl_safesysrealloc(i8* %253, i64 %mul373)
  %255 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf375 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %255, i32 0, i32 22
  %arena376 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf375, i32 0, i32 0
  store i8* %call374, i8** %arena376, align 8
  %256 = load i32, i32* %nsz354, align 4
  %conv377 = sext i32 %256 to i64
  %257 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf378 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %257, i32 0, i32 22
  %asiz379 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf378, i32 0, i32 1
  store i64 %conv377, i64* %asiz379, align 8
  %258 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf380 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %258, i32 0, i32 22
  %arena381 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf380, i32 0, i32 0
  %259 = load i8*, i8** %arena381, align 8
  %260 = load i32, i32* %offset361, align 4
  %idx.ext382 = sext i32 %260 to i64
  %add.ptr383 = getelementptr inbounds i8, i8* %259, i64 %idx.ext382
  %261 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf384 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %261, i32 0, i32 22
  %aptr385 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf384, i32 0, i32 2
  store i8* %add.ptr383, i8** %aptr385, align 8
  %262 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf386 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %262, i32 0, i32 22
  %arena387 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf386, i32 0, i32 0
  %263 = load i8*, i8** %arena387, align 8
  %264 = load i32, i32* %nsz354, align 4
  %idx.ext388 = sext i32 %264 to i64
  %add.ptr389 = getelementptr inbounds i8, i8* %263, i64 %idx.ext388
  %265 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf390 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %265, i32 0, i32 22
  %aend391 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf390, i32 0, i32 3
  store i8* %add.ptr389, i8** %aend391, align 8
  br label %do.end392

do.end392:                                        ; preds = %do.body353
  %266 = load i8, i8* %flags, align 1
  %267 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf393 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %267, i32 0, i32 22
  %aptr394 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf393, i32 0, i32 2
  %268 = load i8*, i8** %aptr394, align 8
  %incdec.ptr395 = getelementptr inbounds i8, i8* %268, i32 1
  store i8* %incdec.ptr395, i8** %aptr394, align 8
  store i8 %266, i8* %268, align 1
  br label %if.end396

if.end396:                                        ; preds = %do.end392, %if.then348
  br label %do.end397

do.end397:                                        ; preds = %if.end396
  br label %if.end406

if.else398:                                       ; preds = %do.body337
  %269 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio399 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %269, i32 0, i32 24
  %270 = load %struct._PerlIO**, %struct._PerlIO*** %fio399, align 8
  %271 = load i8, i8* %flags, align 1
  %conv400 = zext i8 %271 to i32
  %call401 = call i32 @PerlIO_putc(%struct._PerlIO** %270, i32 %conv400)
  %cmp402 = icmp eq i32 %call401, -1
  br i1 %cmp402, label %if.then404, label %if.end405

if.then404:                                       ; preds = %if.else398
  store i32 -1, i32* %retval, align 4
  br label %return

if.end405:                                        ; preds = %if.else398
  br label %if.end406

if.end406:                                        ; preds = %if.end405, %do.end397
  br label %do.end407

do.end407:                                        ; preds = %if.end406
  br label %if.end408

if.end408:                                        ; preds = %do.end407, %if.end335
  %272 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %273 = load %struct.sv*, %struct.sv** %xsv, align 8
  %call409 = call i32 @store(%struct.stcxt* %272, %struct.sv* %273)
  store i32 %call409, i32* %ret, align 4
  %tobool410 = icmp ne i32 %call409, 0
  br i1 %tobool410, label %if.then411, label %if.end412

if.then411:                                       ; preds = %if.end408
  %274 = load i32, i32* %ret, align 4
  store i32 %274, i32* %retval, align 4
  br label %return

if.end412:                                        ; preds = %if.end408
  %275 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %pseen413 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %275, i32 0, i32 2
  %276 = load %struct.ptr_tbl*, %struct.ptr_tbl** %pseen413, align 8
  %277 = load %struct.sv*, %struct.sv** %xsv, align 8
  %278 = bitcast %struct.sv* %277 to i8*
  %call414 = call i8* @Perl_ptr_table_fetch(%struct.ptr_tbl* %276, i8* %278)
  store i8* %call414, i8** %fake_tag, align 8
  %279 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %tobool415 = icmp ne %struct.sv* %279, null
  br i1 %tobool415, label %if.end420, label %if.then416

if.then416:                                       ; preds = %if.end412
  br label %do.body417

do.body417:                                       ; preds = %if.then416
  %280 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty418 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %280, i32 0, i32 19
  store i32 1, i32* %s_dirty418, align 8
  %281 = load i32, i32* %i, align 4
  %282 = load i8*, i8** %classname, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.31, i64 0, i64 0), i32 %281, i8* %282)
  br label %do.end419

do.end419:                                        ; preds = %do.body417
  br label %if.end420

if.end420:                                        ; preds = %do.end419, %if.end412
  %283 = load %struct.av*, %struct.av** %av_hook, align 8
  %284 = load %struct.av*, %struct.av** %av_hook, align 8
  %sv_any421 = getelementptr inbounds %struct.av, %struct.av* %284, i32 0, i32 0
  %285 = load %struct.xpvav*, %struct.xpvav** %sv_any421, align 8
  %xav_fill422 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %285, i32 0, i32 2
  %286 = load i64, i64* %xav_fill422, align 8
  %add423 = add nsw i64 %286, 1
  %287 = load %struct.sv*, %struct.sv** %xsv, align 8
  %288 = bitcast %struct.sv* %287 to i8*
  %289 = bitcast i8* %288 to %struct.sv*
  %call424 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %289)
  %call425 = call %struct.sv** @Perl_av_store(%struct.av* %283, i64 %add423, %struct.sv* %call424)
  br label %sv_seen

sv_seen:                                          ; preds = %if.end420, %if.then132
  %290 = load %struct.sv*, %struct.sv** %rsv, align 8
  %291 = bitcast %struct.sv* %290 to i8*
  %292 = bitcast i8* %291 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %292)
  %293 = load i8*, i8** %fake_tag, align 8
  %incdec.ptr426 = getelementptr inbounds i8, i8* %293, i32 -1
  store i8* %incdec.ptr426, i8** %fake_tag, align 8
  %294 = bitcast i8* %incdec.ptr426 to %struct.sv*
  store %struct.sv* %294, %struct.sv** %tag, align 8
  %295 = load %struct.sv*, %struct.sv** %tag, align 8
  %296 = load %struct.sv**, %struct.sv*** %ary, align 8
  %297 = load i32, i32* %i, align 4
  %idxprom427 = sext i32 %297 to i64
  %arrayidx428 = getelementptr inbounds %struct.sv*, %struct.sv** %296, i64 %idxprom427
  store %struct.sv* %295, %struct.sv** %arrayidx428, align 8
  br label %for.inc

for.inc:                                          ; preds = %sv_seen
  %298 = load i32, i32* %i, align 4
  %inc429 = add nsw i32 %298, 1
  store i32 %inc429, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %check_done

check_done:                                       ; preds = %for.end, %if.end116
  %299 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %300 = load i8*, i8** %classname, align 8
  %301 = load i32, i32* %len, align 4
  %call430 = call i32 @known_class(%struct.stcxt* %299, i8* %300, i32 %301, i32* %classnum)
  %tobool431 = icmp ne i32 %call430, 0
  br i1 %tobool431, label %if.else433, label %if.then432

if.then432:                                       ; preds = %check_done
  store i32 -1, i32* %classnum, align 4
  br label %if.end434

if.else433:                                       ; preds = %check_done
  br label %if.end434

if.end434:                                        ; preds = %if.else433, %if.then432
  %302 = load i32, i32* %obj_type, align 4
  %conv435 = trunc i32 %302 to i8
  store i8 %conv435, i8* %flags, align 1
  %303 = load i32, i32* %classnum, align 4
  %cmp436 = icmp eq i32 %303, -1
  br i1 %cmp436, label %cond.true438, label %cond.false439

cond.true438:                                     ; preds = %if.end434
  %304 = load i32, i32* %len, align 4
  br label %cond.end440

cond.false439:                                    ; preds = %if.end434
  %305 = load i32, i32* %classnum, align 4
  br label %cond.end440

cond.end440:                                      ; preds = %cond.false439, %cond.true438
  %cond441 = phi i32 [ %304, %cond.true438 ], [ %305, %cond.false439 ]
  %cmp442 = icmp sgt i32 %cond441, 255
  br i1 %cmp442, label %if.then444, label %if.end448

if.then444:                                       ; preds = %cond.end440
  %306 = load i8, i8* %flags, align 1
  %conv445 = zext i8 %306 to i32
  %or446 = or i32 %conv445, 4
  %conv447 = trunc i32 %or446 to i8
  store i8 %conv447, i8* %flags, align 1
  br label %if.end448

if.end448:                                        ; preds = %if.then444, %cond.end440
  %307 = load i32, i32* %classnum, align 4
  %cmp449 = icmp ne i32 %307, -1
  br i1 %cmp449, label %if.then451, label %if.end455

if.then451:                                       ; preds = %if.end448
  %308 = load i8, i8* %flags, align 1
  %conv452 = zext i8 %308 to i32
  %or453 = or i32 %conv452, 32
  %conv454 = trunc i32 %or453 to i8
  store i8 %conv454, i8* %flags, align 1
  br label %if.end455

if.end455:                                        ; preds = %if.then451, %if.end448
  %309 = load i64, i64* %len2, align 8
  %cmp456 = icmp ugt i64 %309, 255
  br i1 %cmp456, label %if.then458, label %if.end462

if.then458:                                       ; preds = %if.end455
  %310 = load i8, i8* %flags, align 1
  %conv459 = zext i8 %310 to i32
  %or460 = or i32 %conv459, 8
  %conv461 = trunc i32 %or460 to i8
  store i8 %conv461, i8* %flags, align 1
  br label %if.end462

if.end462:                                        ; preds = %if.then458, %if.end455
  %311 = load i32, i32* %count, align 4
  %cmp463 = icmp sgt i32 %311, 1
  br i1 %cmp463, label %if.then465, label %if.end469

if.then465:                                       ; preds = %if.end462
  %312 = load i8, i8* %flags, align 1
  %conv466 = zext i8 %312 to i32
  %or467 = or i32 %conv466, 128
  %conv468 = trunc i32 %or467 to i8
  store i8 %conv468, i8* %flags, align 1
  br label %if.end469

if.end469:                                        ; preds = %if.then465, %if.end462
  %313 = load i32, i32* %count, align 4
  %cmp470 = icmp sgt i32 %313, 256
  br i1 %cmp470, label %if.then472, label %if.end476

if.then472:                                       ; preds = %if.end469
  %314 = load i8, i8* %flags, align 1
  %conv473 = zext i8 %314 to i32
  %or474 = or i32 %conv473, 16
  %conv475 = trunc i32 %or474 to i8
  store i8 %conv475, i8* %flags, align 1
  br label %if.end476

if.end476:                                        ; preds = %if.then472, %if.end469
  %315 = load i32, i32* %recursed, align 4
  %tobool477 = icmp ne i32 %315, 0
  br i1 %tobool477, label %if.else695, label %if.then478

if.then478:                                       ; preds = %if.end476
  br label %do.body479

do.body479:                                       ; preds = %if.then478
  %316 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio480 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %316, i32 0, i32 24
  %317 = load %struct._PerlIO**, %struct._PerlIO*** %fio480, align 8
  %tobool481 = icmp ne %struct._PerlIO** %317, null
  br i1 %tobool481, label %if.else540, label %if.then482

if.then482:                                       ; preds = %do.body479
  br label %do.body483

do.body483:                                       ; preds = %if.then482
  %318 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf484 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %318, i32 0, i32 22
  %aptr485 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf484, i32 0, i32 2
  %319 = load i8*, i8** %aptr485, align 8
  %320 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf486 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %320, i32 0, i32 22
  %aend487 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf486, i32 0, i32 3
  %321 = load i8*, i8** %aend487, align 8
  %cmp488 = icmp ult i8* %319, %321
  br i1 %cmp488, label %if.then490, label %if.else494

if.then490:                                       ; preds = %do.body483
  %322 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf491 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %322, i32 0, i32 22
  %aptr492 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf491, i32 0, i32 2
  %323 = load i8*, i8** %aptr492, align 8
  %incdec.ptr493 = getelementptr inbounds i8, i8* %323, i32 1
  store i8* %incdec.ptr493, i8** %aptr492, align 8
  store i8 19, i8* %323, align 1
  br label %if.end538

if.else494:                                       ; preds = %do.body483
  br label %do.body495

do.body495:                                       ; preds = %if.else494
  %324 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf497 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %324, i32 0, i32 22
  %asiz498 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf497, i32 0, i32 1
  %325 = load i64, i64* %asiz498, align 8
  %add499 = add i64 1, %325
  %add500 = add i64 %add499, 8191
  %and501 = and i64 %add500, -8192
  %conv502 = trunc i64 %and501 to i32
  store i32 %conv502, i32* %nsz496, align 4
  %326 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf504 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %326, i32 0, i32 22
  %aptr505 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf504, i32 0, i32 2
  %327 = load i8*, i8** %aptr505, align 8
  %328 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf506 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %328, i32 0, i32 22
  %arena507 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf506, i32 0, i32 0
  %329 = load i8*, i8** %arena507, align 8
  %sub.ptr.lhs.cast508 = ptrtoint i8* %327 to i64
  %sub.ptr.rhs.cast509 = ptrtoint i8* %329 to i64
  %sub.ptr.sub510 = sub i64 %sub.ptr.lhs.cast508, %sub.ptr.rhs.cast509
  %conv511 = trunc i64 %sub.ptr.sub510 to i32
  store i32 %conv511, i32* %offset503, align 4
  %330 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf512 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %330, i32 0, i32 22
  %arena513 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf512, i32 0, i32 0
  %331 = load i8*, i8** %arena513, align 8
  %332 = load i32, i32* %nsz496, align 4
  %conv514 = sext i32 %332 to i64
  %mul515 = mul i64 %conv514, 1
  %call516 = call i8* @Perl_safesysrealloc(i8* %331, i64 %mul515)
  %333 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf517 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %333, i32 0, i32 22
  %arena518 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf517, i32 0, i32 0
  store i8* %call516, i8** %arena518, align 8
  %334 = load i32, i32* %nsz496, align 4
  %conv519 = sext i32 %334 to i64
  %335 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf520 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %335, i32 0, i32 22
  %asiz521 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf520, i32 0, i32 1
  store i64 %conv519, i64* %asiz521, align 8
  %336 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf522 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %336, i32 0, i32 22
  %arena523 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf522, i32 0, i32 0
  %337 = load i8*, i8** %arena523, align 8
  %338 = load i32, i32* %offset503, align 4
  %idx.ext524 = sext i32 %338 to i64
  %add.ptr525 = getelementptr inbounds i8, i8* %337, i64 %idx.ext524
  %339 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf526 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %339, i32 0, i32 22
  %aptr527 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf526, i32 0, i32 2
  store i8* %add.ptr525, i8** %aptr527, align 8
  %340 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf528 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %340, i32 0, i32 22
  %arena529 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf528, i32 0, i32 0
  %341 = load i8*, i8** %arena529, align 8
  %342 = load i32, i32* %nsz496, align 4
  %idx.ext530 = sext i32 %342 to i64
  %add.ptr531 = getelementptr inbounds i8, i8* %341, i64 %idx.ext530
  %343 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf532 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %343, i32 0, i32 22
  %aend533 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf532, i32 0, i32 3
  store i8* %add.ptr531, i8** %aend533, align 8
  br label %do.end534

do.end534:                                        ; preds = %do.body495
  %344 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf535 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %344, i32 0, i32 22
  %aptr536 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf535, i32 0, i32 2
  %345 = load i8*, i8** %aptr536, align 8
  %incdec.ptr537 = getelementptr inbounds i8, i8* %345, i32 1
  store i8* %incdec.ptr537, i8** %aptr536, align 8
  store i8 19, i8* %345, align 1
  br label %if.end538

if.end538:                                        ; preds = %do.end534, %if.then490
  br label %do.end539

do.end539:                                        ; preds = %if.end538
  br label %if.end547

if.else540:                                       ; preds = %do.body479
  %346 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio541 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %346, i32 0, i32 24
  %347 = load %struct._PerlIO**, %struct._PerlIO*** %fio541, align 8
  %call542 = call i32 @PerlIO_putc(%struct._PerlIO** %347, i32 19)
  %cmp543 = icmp eq i32 %call542, -1
  br i1 %cmp543, label %if.then545, label %if.end546

if.then545:                                       ; preds = %if.else540
  store i32 -1, i32* %retval, align 4
  br label %return

if.end546:                                        ; preds = %if.else540
  br label %if.end547

if.end547:                                        ; preds = %if.end546, %do.end539
  br label %do.end548

do.end548:                                        ; preds = %if.end547
  br label %do.body549

do.body549:                                       ; preds = %do.end548
  %348 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio550 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %348, i32 0, i32 24
  %349 = load %struct._PerlIO**, %struct._PerlIO*** %fio550, align 8
  %tobool551 = icmp ne %struct._PerlIO** %349, null
  br i1 %tobool551, label %if.else610, label %if.then552

if.then552:                                       ; preds = %do.body549
  br label %do.body553

do.body553:                                       ; preds = %if.then552
  %350 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf554 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %350, i32 0, i32 22
  %aptr555 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf554, i32 0, i32 2
  %351 = load i8*, i8** %aptr555, align 8
  %352 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf556 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %352, i32 0, i32 22
  %aend557 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf556, i32 0, i32 3
  %353 = load i8*, i8** %aend557, align 8
  %cmp558 = icmp ult i8* %351, %353
  br i1 %cmp558, label %if.then560, label %if.else564

if.then560:                                       ; preds = %do.body553
  %354 = load i8, i8* %flags, align 1
  %355 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf561 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %355, i32 0, i32 22
  %aptr562 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf561, i32 0, i32 2
  %356 = load i8*, i8** %aptr562, align 8
  %incdec.ptr563 = getelementptr inbounds i8, i8* %356, i32 1
  store i8* %incdec.ptr563, i8** %aptr562, align 8
  store i8 %354, i8* %356, align 1
  br label %if.end608

if.else564:                                       ; preds = %do.body553
  br label %do.body565

do.body565:                                       ; preds = %if.else564
  %357 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf567 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %357, i32 0, i32 22
  %asiz568 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf567, i32 0, i32 1
  %358 = load i64, i64* %asiz568, align 8
  %add569 = add i64 1, %358
  %add570 = add i64 %add569, 8191
  %and571 = and i64 %add570, -8192
  %conv572 = trunc i64 %and571 to i32
  store i32 %conv572, i32* %nsz566, align 4
  %359 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf574 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %359, i32 0, i32 22
  %aptr575 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf574, i32 0, i32 2
  %360 = load i8*, i8** %aptr575, align 8
  %361 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf576 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %361, i32 0, i32 22
  %arena577 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf576, i32 0, i32 0
  %362 = load i8*, i8** %arena577, align 8
  %sub.ptr.lhs.cast578 = ptrtoint i8* %360 to i64
  %sub.ptr.rhs.cast579 = ptrtoint i8* %362 to i64
  %sub.ptr.sub580 = sub i64 %sub.ptr.lhs.cast578, %sub.ptr.rhs.cast579
  %conv581 = trunc i64 %sub.ptr.sub580 to i32
  store i32 %conv581, i32* %offset573, align 4
  %363 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf582 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %363, i32 0, i32 22
  %arena583 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf582, i32 0, i32 0
  %364 = load i8*, i8** %arena583, align 8
  %365 = load i32, i32* %nsz566, align 4
  %conv584 = sext i32 %365 to i64
  %mul585 = mul i64 %conv584, 1
  %call586 = call i8* @Perl_safesysrealloc(i8* %364, i64 %mul585)
  %366 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf587 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %366, i32 0, i32 22
  %arena588 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf587, i32 0, i32 0
  store i8* %call586, i8** %arena588, align 8
  %367 = load i32, i32* %nsz566, align 4
  %conv589 = sext i32 %367 to i64
  %368 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf590 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %368, i32 0, i32 22
  %asiz591 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf590, i32 0, i32 1
  store i64 %conv589, i64* %asiz591, align 8
  %369 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf592 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %369, i32 0, i32 22
  %arena593 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf592, i32 0, i32 0
  %370 = load i8*, i8** %arena593, align 8
  %371 = load i32, i32* %offset573, align 4
  %idx.ext594 = sext i32 %371 to i64
  %add.ptr595 = getelementptr inbounds i8, i8* %370, i64 %idx.ext594
  %372 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf596 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %372, i32 0, i32 22
  %aptr597 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf596, i32 0, i32 2
  store i8* %add.ptr595, i8** %aptr597, align 8
  %373 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf598 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %373, i32 0, i32 22
  %arena599 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf598, i32 0, i32 0
  %374 = load i8*, i8** %arena599, align 8
  %375 = load i32, i32* %nsz566, align 4
  %idx.ext600 = sext i32 %375 to i64
  %add.ptr601 = getelementptr inbounds i8, i8* %374, i64 %idx.ext600
  %376 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf602 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %376, i32 0, i32 22
  %aend603 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf602, i32 0, i32 3
  store i8* %add.ptr601, i8** %aend603, align 8
  br label %do.end604

do.end604:                                        ; preds = %do.body565
  %377 = load i8, i8* %flags, align 1
  %378 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf605 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %378, i32 0, i32 22
  %aptr606 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf605, i32 0, i32 2
  %379 = load i8*, i8** %aptr606, align 8
  %incdec.ptr607 = getelementptr inbounds i8, i8* %379, i32 1
  store i8* %incdec.ptr607, i8** %aptr606, align 8
  store i8 %377, i8* %379, align 1
  br label %if.end608

if.end608:                                        ; preds = %do.end604, %if.then560
  br label %do.end609

do.end609:                                        ; preds = %if.end608
  br label %if.end618

if.else610:                                       ; preds = %do.body549
  %380 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio611 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %380, i32 0, i32 24
  %381 = load %struct._PerlIO**, %struct._PerlIO*** %fio611, align 8
  %382 = load i8, i8* %flags, align 1
  %conv612 = zext i8 %382 to i32
  %call613 = call i32 @PerlIO_putc(%struct._PerlIO** %381, i32 %conv612)
  %cmp614 = icmp eq i32 %call613, -1
  br i1 %cmp614, label %if.then616, label %if.end617

if.then616:                                       ; preds = %if.else610
  store i32 -1, i32* %retval, align 4
  br label %return

if.end617:                                        ; preds = %if.else610
  br label %if.end618

if.end618:                                        ; preds = %if.end617, %do.end609
  br label %do.end619

do.end619:                                        ; preds = %if.end618
  %383 = load i32, i32* %obj_type, align 4
  %cmp620 = icmp eq i32 %383, 3
  br i1 %cmp620, label %if.then622, label %if.end694

if.then622:                                       ; preds = %do.end619
  br label %do.body623

do.body623:                                       ; preds = %if.then622
  %384 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio624 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %384, i32 0, i32 24
  %385 = load %struct._PerlIO**, %struct._PerlIO*** %fio624, align 8
  %tobool625 = icmp ne %struct._PerlIO** %385, null
  br i1 %tobool625, label %if.else684, label %if.then626

if.then626:                                       ; preds = %do.body623
  br label %do.body627

do.body627:                                       ; preds = %if.then626
  %386 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf628 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %386, i32 0, i32 22
  %aptr629 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf628, i32 0, i32 2
  %387 = load i8*, i8** %aptr629, align 8
  %388 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf630 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %388, i32 0, i32 22
  %aend631 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf630, i32 0, i32 3
  %389 = load i8*, i8** %aend631, align 8
  %cmp632 = icmp ult i8* %387, %389
  br i1 %cmp632, label %if.then634, label %if.else638

if.then634:                                       ; preds = %do.body627
  %390 = load i8, i8* %eflags, align 1
  %391 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf635 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %391, i32 0, i32 22
  %aptr636 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf635, i32 0, i32 2
  %392 = load i8*, i8** %aptr636, align 8
  %incdec.ptr637 = getelementptr inbounds i8, i8* %392, i32 1
  store i8* %incdec.ptr637, i8** %aptr636, align 8
  store i8 %390, i8* %392, align 1
  br label %if.end682

if.else638:                                       ; preds = %do.body627
  br label %do.body639

do.body639:                                       ; preds = %if.else638
  %393 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf641 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %393, i32 0, i32 22
  %asiz642 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf641, i32 0, i32 1
  %394 = load i64, i64* %asiz642, align 8
  %add643 = add i64 1, %394
  %add644 = add i64 %add643, 8191
  %and645 = and i64 %add644, -8192
  %conv646 = trunc i64 %and645 to i32
  store i32 %conv646, i32* %nsz640, align 4
  %395 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf648 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %395, i32 0, i32 22
  %aptr649 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf648, i32 0, i32 2
  %396 = load i8*, i8** %aptr649, align 8
  %397 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf650 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %397, i32 0, i32 22
  %arena651 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf650, i32 0, i32 0
  %398 = load i8*, i8** %arena651, align 8
  %sub.ptr.lhs.cast652 = ptrtoint i8* %396 to i64
  %sub.ptr.rhs.cast653 = ptrtoint i8* %398 to i64
  %sub.ptr.sub654 = sub i64 %sub.ptr.lhs.cast652, %sub.ptr.rhs.cast653
  %conv655 = trunc i64 %sub.ptr.sub654 to i32
  store i32 %conv655, i32* %offset647, align 4
  %399 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf656 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %399, i32 0, i32 22
  %arena657 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf656, i32 0, i32 0
  %400 = load i8*, i8** %arena657, align 8
  %401 = load i32, i32* %nsz640, align 4
  %conv658 = sext i32 %401 to i64
  %mul659 = mul i64 %conv658, 1
  %call660 = call i8* @Perl_safesysrealloc(i8* %400, i64 %mul659)
  %402 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf661 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %402, i32 0, i32 22
  %arena662 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf661, i32 0, i32 0
  store i8* %call660, i8** %arena662, align 8
  %403 = load i32, i32* %nsz640, align 4
  %conv663 = sext i32 %403 to i64
  %404 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf664 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %404, i32 0, i32 22
  %asiz665 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf664, i32 0, i32 1
  store i64 %conv663, i64* %asiz665, align 8
  %405 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf666 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %405, i32 0, i32 22
  %arena667 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf666, i32 0, i32 0
  %406 = load i8*, i8** %arena667, align 8
  %407 = load i32, i32* %offset647, align 4
  %idx.ext668 = sext i32 %407 to i64
  %add.ptr669 = getelementptr inbounds i8, i8* %406, i64 %idx.ext668
  %408 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf670 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %408, i32 0, i32 22
  %aptr671 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf670, i32 0, i32 2
  store i8* %add.ptr669, i8** %aptr671, align 8
  %409 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf672 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %409, i32 0, i32 22
  %arena673 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf672, i32 0, i32 0
  %410 = load i8*, i8** %arena673, align 8
  %411 = load i32, i32* %nsz640, align 4
  %idx.ext674 = sext i32 %411 to i64
  %add.ptr675 = getelementptr inbounds i8, i8* %410, i64 %idx.ext674
  %412 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf676 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %412, i32 0, i32 22
  %aend677 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf676, i32 0, i32 3
  store i8* %add.ptr675, i8** %aend677, align 8
  br label %do.end678

do.end678:                                        ; preds = %do.body639
  %413 = load i8, i8* %eflags, align 1
  %414 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf679 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %414, i32 0, i32 22
  %aptr680 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf679, i32 0, i32 2
  %415 = load i8*, i8** %aptr680, align 8
  %incdec.ptr681 = getelementptr inbounds i8, i8* %415, i32 1
  store i8* %incdec.ptr681, i8** %aptr680, align 8
  store i8 %413, i8* %415, align 1
  br label %if.end682

if.end682:                                        ; preds = %do.end678, %if.then634
  br label %do.end683

do.end683:                                        ; preds = %if.end682
  br label %if.end692

if.else684:                                       ; preds = %do.body623
  %416 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio685 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %416, i32 0, i32 24
  %417 = load %struct._PerlIO**, %struct._PerlIO*** %fio685, align 8
  %418 = load i8, i8* %eflags, align 1
  %conv686 = zext i8 %418 to i32
  %call687 = call i32 @PerlIO_putc(%struct._PerlIO** %417, i32 %conv686)
  %cmp688 = icmp eq i32 %call687, -1
  br i1 %cmp688, label %if.then690, label %if.end691

if.then690:                                       ; preds = %if.else684
  store i32 -1, i32* %retval, align 4
  br label %return

if.end691:                                        ; preds = %if.else684
  br label %if.end692

if.end692:                                        ; preds = %if.end691, %do.end683
  br label %do.end693

do.end693:                                        ; preds = %if.end692
  br label %if.end694

if.end694:                                        ; preds = %do.end693, %do.end619
  br label %if.end767

if.else695:                                       ; preds = %if.end476
  br label %do.body696

do.body696:                                       ; preds = %if.else695
  %419 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio697 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %419, i32 0, i32 24
  %420 = load %struct._PerlIO**, %struct._PerlIO*** %fio697, align 8
  %tobool698 = icmp ne %struct._PerlIO** %420, null
  br i1 %tobool698, label %if.else757, label %if.then699

if.then699:                                       ; preds = %do.body696
  br label %do.body700

do.body700:                                       ; preds = %if.then699
  %421 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf701 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %421, i32 0, i32 22
  %aptr702 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf701, i32 0, i32 2
  %422 = load i8*, i8** %aptr702, align 8
  %423 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf703 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %423, i32 0, i32 22
  %aend704 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf703, i32 0, i32 3
  %424 = load i8*, i8** %aend704, align 8
  %cmp705 = icmp ult i8* %422, %424
  br i1 %cmp705, label %if.then707, label %if.else711

if.then707:                                       ; preds = %do.body700
  %425 = load i8, i8* %flags, align 1
  %426 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf708 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %426, i32 0, i32 22
  %aptr709 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf708, i32 0, i32 2
  %427 = load i8*, i8** %aptr709, align 8
  %incdec.ptr710 = getelementptr inbounds i8, i8* %427, i32 1
  store i8* %incdec.ptr710, i8** %aptr709, align 8
  store i8 %425, i8* %427, align 1
  br label %if.end755

if.else711:                                       ; preds = %do.body700
  br label %do.body712

do.body712:                                       ; preds = %if.else711
  %428 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf714 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %428, i32 0, i32 22
  %asiz715 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf714, i32 0, i32 1
  %429 = load i64, i64* %asiz715, align 8
  %add716 = add i64 1, %429
  %add717 = add i64 %add716, 8191
  %and718 = and i64 %add717, -8192
  %conv719 = trunc i64 %and718 to i32
  store i32 %conv719, i32* %nsz713, align 4
  %430 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf721 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %430, i32 0, i32 22
  %aptr722 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf721, i32 0, i32 2
  %431 = load i8*, i8** %aptr722, align 8
  %432 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf723 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %432, i32 0, i32 22
  %arena724 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf723, i32 0, i32 0
  %433 = load i8*, i8** %arena724, align 8
  %sub.ptr.lhs.cast725 = ptrtoint i8* %431 to i64
  %sub.ptr.rhs.cast726 = ptrtoint i8* %433 to i64
  %sub.ptr.sub727 = sub i64 %sub.ptr.lhs.cast725, %sub.ptr.rhs.cast726
  %conv728 = trunc i64 %sub.ptr.sub727 to i32
  store i32 %conv728, i32* %offset720, align 4
  %434 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf729 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %434, i32 0, i32 22
  %arena730 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf729, i32 0, i32 0
  %435 = load i8*, i8** %arena730, align 8
  %436 = load i32, i32* %nsz713, align 4
  %conv731 = sext i32 %436 to i64
  %mul732 = mul i64 %conv731, 1
  %call733 = call i8* @Perl_safesysrealloc(i8* %435, i64 %mul732)
  %437 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf734 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %437, i32 0, i32 22
  %arena735 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf734, i32 0, i32 0
  store i8* %call733, i8** %arena735, align 8
  %438 = load i32, i32* %nsz713, align 4
  %conv736 = sext i32 %438 to i64
  %439 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf737 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %439, i32 0, i32 22
  %asiz738 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf737, i32 0, i32 1
  store i64 %conv736, i64* %asiz738, align 8
  %440 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf739 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %440, i32 0, i32 22
  %arena740 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf739, i32 0, i32 0
  %441 = load i8*, i8** %arena740, align 8
  %442 = load i32, i32* %offset720, align 4
  %idx.ext741 = sext i32 %442 to i64
  %add.ptr742 = getelementptr inbounds i8, i8* %441, i64 %idx.ext741
  %443 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf743 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %443, i32 0, i32 22
  %aptr744 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf743, i32 0, i32 2
  store i8* %add.ptr742, i8** %aptr744, align 8
  %444 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf745 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %444, i32 0, i32 22
  %arena746 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf745, i32 0, i32 0
  %445 = load i8*, i8** %arena746, align 8
  %446 = load i32, i32* %nsz713, align 4
  %idx.ext747 = sext i32 %446 to i64
  %add.ptr748 = getelementptr inbounds i8, i8* %445, i64 %idx.ext747
  %447 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf749 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %447, i32 0, i32 22
  %aend750 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf749, i32 0, i32 3
  store i8* %add.ptr748, i8** %aend750, align 8
  br label %do.end751

do.end751:                                        ; preds = %do.body712
  %448 = load i8, i8* %flags, align 1
  %449 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf752 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %449, i32 0, i32 22
  %aptr753 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf752, i32 0, i32 2
  %450 = load i8*, i8** %aptr753, align 8
  %incdec.ptr754 = getelementptr inbounds i8, i8* %450, i32 1
  store i8* %incdec.ptr754, i8** %aptr753, align 8
  store i8 %448, i8* %450, align 1
  br label %if.end755

if.end755:                                        ; preds = %do.end751, %if.then707
  br label %do.end756

do.end756:                                        ; preds = %if.end755
  br label %if.end765

if.else757:                                       ; preds = %do.body696
  %451 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio758 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %451, i32 0, i32 24
  %452 = load %struct._PerlIO**, %struct._PerlIO*** %fio758, align 8
  %453 = load i8, i8* %flags, align 1
  %conv759 = zext i8 %453 to i32
  %call760 = call i32 @PerlIO_putc(%struct._PerlIO** %452, i32 %conv759)
  %cmp761 = icmp eq i32 %call760, -1
  br i1 %cmp761, label %if.then763, label %if.end764

if.then763:                                       ; preds = %if.else757
  store i32 -1, i32* %retval, align 4
  br label %return

if.end764:                                        ; preds = %if.else757
  br label %if.end765

if.end765:                                        ; preds = %if.end764, %do.end756
  br label %do.end766

do.end766:                                        ; preds = %if.end765
  br label %if.end767

if.end767:                                        ; preds = %do.end766, %if.end694
  %454 = load i8, i8* %flags, align 1
  %conv768 = zext i8 %454 to i32
  %and769 = and i32 %conv768, 32
  %tobool770 = icmp ne i32 %and769, 0
  br i1 %tobool770, label %if.then771, label %if.else1019

if.then771:                                       ; preds = %if.end767
  %455 = load i8, i8* %flags, align 1
  %conv772 = zext i8 %455 to i32
  %and773 = and i32 %conv772, 4
  %tobool774 = icmp ne i32 %and773, 0
  br i1 %tobool774, label %if.then775, label %if.else945

if.then775:                                       ; preds = %if.then771
  br label %do.body776

do.body776:                                       ; preds = %if.then775
  %456 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %456, i32 0, i32 12
  %457 = load i32, i32* %netorder, align 8
  %tobool777 = icmp ne i32 %457, 0
  br i1 %tobool777, label %if.then778, label %if.else861

if.then778:                                       ; preds = %do.body776
  %458 = load i32, i32* %classnum, align 4
  %call779 = call i32 @my_swap32(i32 %458)
  store i32 %call779, i32* %y, align 4
  %459 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio780 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %459, i32 0, i32 24
  %460 = load %struct._PerlIO**, %struct._PerlIO*** %fio780, align 8
  %tobool781 = icmp ne %struct._PerlIO** %460, null
  br i1 %tobool781, label %if.else853, label %if.then782

if.then782:                                       ; preds = %if.then778
  br label %do.body783

do.body783:                                       ; preds = %if.then782
  br label %do.body784

do.body784:                                       ; preds = %do.body783
  %461 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf785 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %461, i32 0, i32 22
  %aptr786 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf785, i32 0, i32 2
  %462 = load i8*, i8** %aptr786, align 8
  %add.ptr787 = getelementptr inbounds i8, i8* %462, i64 4
  %463 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf788 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %463, i32 0, i32 22
  %aend789 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf788, i32 0, i32 3
  %464 = load i8*, i8** %aend789, align 8
  %cmp790 = icmp ugt i8* %add.ptr787, %464
  br i1 %cmp790, label %if.then792, label %if.end833

if.then792:                                       ; preds = %do.body784
  br label %do.body793

do.body793:                                       ; preds = %if.then792
  %465 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf795 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %465, i32 0, i32 22
  %asiz796 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf795, i32 0, i32 1
  %466 = load i64, i64* %asiz796, align 8
  %add797 = add i64 4, %466
  %add798 = add i64 %add797, 8191
  %and799 = and i64 %add798, -8192
  %conv800 = trunc i64 %and799 to i32
  store i32 %conv800, i32* %nsz794, align 4
  %467 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf802 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %467, i32 0, i32 22
  %aptr803 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf802, i32 0, i32 2
  %468 = load i8*, i8** %aptr803, align 8
  %469 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf804 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %469, i32 0, i32 22
  %arena805 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf804, i32 0, i32 0
  %470 = load i8*, i8** %arena805, align 8
  %sub.ptr.lhs.cast806 = ptrtoint i8* %468 to i64
  %sub.ptr.rhs.cast807 = ptrtoint i8* %470 to i64
  %sub.ptr.sub808 = sub i64 %sub.ptr.lhs.cast806, %sub.ptr.rhs.cast807
  %conv809 = trunc i64 %sub.ptr.sub808 to i32
  store i32 %conv809, i32* %offset801, align 4
  %471 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf810 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %471, i32 0, i32 22
  %arena811 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf810, i32 0, i32 0
  %472 = load i8*, i8** %arena811, align 8
  %473 = load i32, i32* %nsz794, align 4
  %conv812 = sext i32 %473 to i64
  %mul813 = mul i64 %conv812, 1
  %call814 = call i8* @Perl_safesysrealloc(i8* %472, i64 %mul813)
  %474 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf815 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %474, i32 0, i32 22
  %arena816 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf815, i32 0, i32 0
  store i8* %call814, i8** %arena816, align 8
  %475 = load i32, i32* %nsz794, align 4
  %conv817 = sext i32 %475 to i64
  %476 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf818 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %476, i32 0, i32 22
  %asiz819 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf818, i32 0, i32 1
  store i64 %conv817, i64* %asiz819, align 8
  %477 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf820 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %477, i32 0, i32 22
  %arena821 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf820, i32 0, i32 0
  %478 = load i8*, i8** %arena821, align 8
  %479 = load i32, i32* %offset801, align 4
  %idx.ext822 = sext i32 %479 to i64
  %add.ptr823 = getelementptr inbounds i8, i8* %478, i64 %idx.ext822
  %480 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf824 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %480, i32 0, i32 22
  %aptr825 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf824, i32 0, i32 2
  store i8* %add.ptr823, i8** %aptr825, align 8
  %481 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf826 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %481, i32 0, i32 22
  %arena827 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf826, i32 0, i32 0
  %482 = load i8*, i8** %arena827, align 8
  %483 = load i32, i32* %nsz794, align 4
  %idx.ext828 = sext i32 %483 to i64
  %add.ptr829 = getelementptr inbounds i8, i8* %482, i64 %idx.ext828
  %484 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf830 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %484, i32 0, i32 22
  %aend831 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf830, i32 0, i32 3
  store i8* %add.ptr829, i8** %aend831, align 8
  br label %do.end832

do.end832:                                        ; preds = %do.body793
  br label %if.end833

if.end833:                                        ; preds = %do.end832, %do.body784
  br label %do.end834

do.end834:                                        ; preds = %if.end833
  %485 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf835 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %485, i32 0, i32 22
  %aptr836 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf835, i32 0, i32 2
  %486 = load i8*, i8** %aptr836, align 8
  %487 = ptrtoint i8* %486 to i64
  %488 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf837 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %488, i32 0, i32 22
  %aptr838 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf837, i32 0, i32 2
  %489 = load i8*, i8** %aptr838, align 8
  %490 = ptrtoint i8* %489 to i64
  %and839 = and i64 %490, -4
  %cmp840 = icmp eq i64 %487, %and839
  br i1 %cmp840, label %if.then842, label %if.else845

if.then842:                                       ; preds = %do.end834
  %491 = load i32, i32* %y, align 4
  %492 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf843 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %492, i32 0, i32 22
  %aptr844 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf843, i32 0, i32 2
  %493 = load i8*, i8** %aptr844, align 8
  %494 = bitcast i8* %493 to i32*
  store i32 %491, i32* %494, align 4
  br label %if.end848

if.else845:                                       ; preds = %do.end834
  %495 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf846 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %495, i32 0, i32 22
  %aptr847 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf846, i32 0, i32 2
  %496 = load i8*, i8** %aptr847, align 8
  %497 = bitcast i32* %y to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %496, i8* align 4 %497, i64 4, i1 false)
  br label %if.end848

if.end848:                                        ; preds = %if.else845, %if.then842
  %498 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf849 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %498, i32 0, i32 22
  %aptr850 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf849, i32 0, i32 2
  %499 = load i8*, i8** %aptr850, align 8
  %add.ptr851 = getelementptr inbounds i8, i8* %499, i64 4
  store i8* %add.ptr851, i8** %aptr850, align 8
  br label %do.end852

do.end852:                                        ; preds = %if.end848
  br label %if.end860

if.else853:                                       ; preds = %if.then778
  %500 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio854 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %500, i32 0, i32 24
  %501 = load %struct._PerlIO**, %struct._PerlIO*** %fio854, align 8
  %502 = bitcast i32* %y to i8*
  %call855 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %501, i8* %502, i64 4)
  %cmp856 = icmp ne i64 %call855, 4
  br i1 %cmp856, label %if.then858, label %if.end859

if.then858:                                       ; preds = %if.else853
  store i32 -1, i32* %retval, align 4
  br label %return

if.end859:                                        ; preds = %if.else853
  br label %if.end860

if.end860:                                        ; preds = %if.end859, %do.end852
  br label %if.end943

if.else861:                                       ; preds = %do.body776
  %503 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio862 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %503, i32 0, i32 24
  %504 = load %struct._PerlIO**, %struct._PerlIO*** %fio862, align 8
  %tobool863 = icmp ne %struct._PerlIO** %504, null
  br i1 %tobool863, label %if.else935, label %if.then864

if.then864:                                       ; preds = %if.else861
  br label %do.body865

do.body865:                                       ; preds = %if.then864
  br label %do.body866

do.body866:                                       ; preds = %do.body865
  %505 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf867 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %505, i32 0, i32 22
  %aptr868 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf867, i32 0, i32 2
  %506 = load i8*, i8** %aptr868, align 8
  %add.ptr869 = getelementptr inbounds i8, i8* %506, i64 4
  %507 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf870 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %507, i32 0, i32 22
  %aend871 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf870, i32 0, i32 3
  %508 = load i8*, i8** %aend871, align 8
  %cmp872 = icmp ugt i8* %add.ptr869, %508
  br i1 %cmp872, label %if.then874, label %if.end915

if.then874:                                       ; preds = %do.body866
  br label %do.body875

do.body875:                                       ; preds = %if.then874
  %509 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf877 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %509, i32 0, i32 22
  %asiz878 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf877, i32 0, i32 1
  %510 = load i64, i64* %asiz878, align 8
  %add879 = add i64 4, %510
  %add880 = add i64 %add879, 8191
  %and881 = and i64 %add880, -8192
  %conv882 = trunc i64 %and881 to i32
  store i32 %conv882, i32* %nsz876, align 4
  %511 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf884 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %511, i32 0, i32 22
  %aptr885 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf884, i32 0, i32 2
  %512 = load i8*, i8** %aptr885, align 8
  %513 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf886 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %513, i32 0, i32 22
  %arena887 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf886, i32 0, i32 0
  %514 = load i8*, i8** %arena887, align 8
  %sub.ptr.lhs.cast888 = ptrtoint i8* %512 to i64
  %sub.ptr.rhs.cast889 = ptrtoint i8* %514 to i64
  %sub.ptr.sub890 = sub i64 %sub.ptr.lhs.cast888, %sub.ptr.rhs.cast889
  %conv891 = trunc i64 %sub.ptr.sub890 to i32
  store i32 %conv891, i32* %offset883, align 4
  %515 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf892 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %515, i32 0, i32 22
  %arena893 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf892, i32 0, i32 0
  %516 = load i8*, i8** %arena893, align 8
  %517 = load i32, i32* %nsz876, align 4
  %conv894 = sext i32 %517 to i64
  %mul895 = mul i64 %conv894, 1
  %call896 = call i8* @Perl_safesysrealloc(i8* %516, i64 %mul895)
  %518 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf897 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %518, i32 0, i32 22
  %arena898 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf897, i32 0, i32 0
  store i8* %call896, i8** %arena898, align 8
  %519 = load i32, i32* %nsz876, align 4
  %conv899 = sext i32 %519 to i64
  %520 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf900 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %520, i32 0, i32 22
  %asiz901 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf900, i32 0, i32 1
  store i64 %conv899, i64* %asiz901, align 8
  %521 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf902 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %521, i32 0, i32 22
  %arena903 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf902, i32 0, i32 0
  %522 = load i8*, i8** %arena903, align 8
  %523 = load i32, i32* %offset883, align 4
  %idx.ext904 = sext i32 %523 to i64
  %add.ptr905 = getelementptr inbounds i8, i8* %522, i64 %idx.ext904
  %524 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf906 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %524, i32 0, i32 22
  %aptr907 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf906, i32 0, i32 2
  store i8* %add.ptr905, i8** %aptr907, align 8
  %525 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf908 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %525, i32 0, i32 22
  %arena909 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf908, i32 0, i32 0
  %526 = load i8*, i8** %arena909, align 8
  %527 = load i32, i32* %nsz876, align 4
  %idx.ext910 = sext i32 %527 to i64
  %add.ptr911 = getelementptr inbounds i8, i8* %526, i64 %idx.ext910
  %528 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf912 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %528, i32 0, i32 22
  %aend913 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf912, i32 0, i32 3
  store i8* %add.ptr911, i8** %aend913, align 8
  br label %do.end914

do.end914:                                        ; preds = %do.body875
  br label %if.end915

if.end915:                                        ; preds = %do.end914, %do.body866
  br label %do.end916

do.end916:                                        ; preds = %if.end915
  %529 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf917 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %529, i32 0, i32 22
  %aptr918 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf917, i32 0, i32 2
  %530 = load i8*, i8** %aptr918, align 8
  %531 = ptrtoint i8* %530 to i64
  %532 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf919 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %532, i32 0, i32 22
  %aptr920 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf919, i32 0, i32 2
  %533 = load i8*, i8** %aptr920, align 8
  %534 = ptrtoint i8* %533 to i64
  %and921 = and i64 %534, -4
  %cmp922 = icmp eq i64 %531, %and921
  br i1 %cmp922, label %if.then924, label %if.else927

if.then924:                                       ; preds = %do.end916
  %535 = load i32, i32* %classnum, align 4
  %536 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf925 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %536, i32 0, i32 22
  %aptr926 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf925, i32 0, i32 2
  %537 = load i8*, i8** %aptr926, align 8
  %538 = bitcast i8* %537 to i32*
  store i32 %535, i32* %538, align 4
  br label %if.end930

if.else927:                                       ; preds = %do.end916
  %539 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf928 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %539, i32 0, i32 22
  %aptr929 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf928, i32 0, i32 2
  %540 = load i8*, i8** %aptr929, align 8
  %541 = bitcast i32* %classnum to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %540, i8* align 4 %541, i64 4, i1 false)
  br label %if.end930

if.end930:                                        ; preds = %if.else927, %if.then924
  %542 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf931 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %542, i32 0, i32 22
  %aptr932 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf931, i32 0, i32 2
  %543 = load i8*, i8** %aptr932, align 8
  %add.ptr933 = getelementptr inbounds i8, i8* %543, i64 4
  store i8* %add.ptr933, i8** %aptr932, align 8
  br label %do.end934

do.end934:                                        ; preds = %if.end930
  br label %if.end942

if.else935:                                       ; preds = %if.else861
  %544 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio936 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %544, i32 0, i32 24
  %545 = load %struct._PerlIO**, %struct._PerlIO*** %fio936, align 8
  %546 = bitcast i32* %classnum to i8*
  %call937 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %545, i8* %546, i64 4)
  %cmp938 = icmp ne i64 %call937, 4
  br i1 %cmp938, label %if.then940, label %if.end941

if.then940:                                       ; preds = %if.else935
  store i32 -1, i32* %retval, align 4
  br label %return

if.end941:                                        ; preds = %if.else935
  br label %if.end942

if.end942:                                        ; preds = %if.end941, %do.end934
  br label %if.end943

if.end943:                                        ; preds = %if.end942, %if.end860
  br label %do.end944

do.end944:                                        ; preds = %if.end943
  br label %if.end1018

if.else945:                                       ; preds = %if.then771
  %547 = load i32, i32* %classnum, align 4
  %conv946 = trunc i32 %547 to i8
  store i8 %conv946, i8* %cnum, align 1
  br label %do.body947

do.body947:                                       ; preds = %if.else945
  %548 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio948 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %548, i32 0, i32 24
  %549 = load %struct._PerlIO**, %struct._PerlIO*** %fio948, align 8
  %tobool949 = icmp ne %struct._PerlIO** %549, null
  br i1 %tobool949, label %if.else1008, label %if.then950

if.then950:                                       ; preds = %do.body947
  br label %do.body951

do.body951:                                       ; preds = %if.then950
  %550 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf952 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %550, i32 0, i32 22
  %aptr953 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf952, i32 0, i32 2
  %551 = load i8*, i8** %aptr953, align 8
  %552 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf954 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %552, i32 0, i32 22
  %aend955 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf954, i32 0, i32 3
  %553 = load i8*, i8** %aend955, align 8
  %cmp956 = icmp ult i8* %551, %553
  br i1 %cmp956, label %if.then958, label %if.else962

if.then958:                                       ; preds = %do.body951
  %554 = load i8, i8* %cnum, align 1
  %555 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf959 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %555, i32 0, i32 22
  %aptr960 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf959, i32 0, i32 2
  %556 = load i8*, i8** %aptr960, align 8
  %incdec.ptr961 = getelementptr inbounds i8, i8* %556, i32 1
  store i8* %incdec.ptr961, i8** %aptr960, align 8
  store i8 %554, i8* %556, align 1
  br label %if.end1006

if.else962:                                       ; preds = %do.body951
  br label %do.body963

do.body963:                                       ; preds = %if.else962
  %557 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf965 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %557, i32 0, i32 22
  %asiz966 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf965, i32 0, i32 1
  %558 = load i64, i64* %asiz966, align 8
  %add967 = add i64 1, %558
  %add968 = add i64 %add967, 8191
  %and969 = and i64 %add968, -8192
  %conv970 = trunc i64 %and969 to i32
  store i32 %conv970, i32* %nsz964, align 4
  %559 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf972 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %559, i32 0, i32 22
  %aptr973 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf972, i32 0, i32 2
  %560 = load i8*, i8** %aptr973, align 8
  %561 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf974 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %561, i32 0, i32 22
  %arena975 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf974, i32 0, i32 0
  %562 = load i8*, i8** %arena975, align 8
  %sub.ptr.lhs.cast976 = ptrtoint i8* %560 to i64
  %sub.ptr.rhs.cast977 = ptrtoint i8* %562 to i64
  %sub.ptr.sub978 = sub i64 %sub.ptr.lhs.cast976, %sub.ptr.rhs.cast977
  %conv979 = trunc i64 %sub.ptr.sub978 to i32
  store i32 %conv979, i32* %offset971, align 4
  %563 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf980 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %563, i32 0, i32 22
  %arena981 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf980, i32 0, i32 0
  %564 = load i8*, i8** %arena981, align 8
  %565 = load i32, i32* %nsz964, align 4
  %conv982 = sext i32 %565 to i64
  %mul983 = mul i64 %conv982, 1
  %call984 = call i8* @Perl_safesysrealloc(i8* %564, i64 %mul983)
  %566 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf985 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %566, i32 0, i32 22
  %arena986 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf985, i32 0, i32 0
  store i8* %call984, i8** %arena986, align 8
  %567 = load i32, i32* %nsz964, align 4
  %conv987 = sext i32 %567 to i64
  %568 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf988 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %568, i32 0, i32 22
  %asiz989 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf988, i32 0, i32 1
  store i64 %conv987, i64* %asiz989, align 8
  %569 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf990 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %569, i32 0, i32 22
  %arena991 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf990, i32 0, i32 0
  %570 = load i8*, i8** %arena991, align 8
  %571 = load i32, i32* %offset971, align 4
  %idx.ext992 = sext i32 %571 to i64
  %add.ptr993 = getelementptr inbounds i8, i8* %570, i64 %idx.ext992
  %572 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf994 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %572, i32 0, i32 22
  %aptr995 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf994, i32 0, i32 2
  store i8* %add.ptr993, i8** %aptr995, align 8
  %573 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf996 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %573, i32 0, i32 22
  %arena997 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf996, i32 0, i32 0
  %574 = load i8*, i8** %arena997, align 8
  %575 = load i32, i32* %nsz964, align 4
  %idx.ext998 = sext i32 %575 to i64
  %add.ptr999 = getelementptr inbounds i8, i8* %574, i64 %idx.ext998
  %576 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1000 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %576, i32 0, i32 22
  %aend1001 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1000, i32 0, i32 3
  store i8* %add.ptr999, i8** %aend1001, align 8
  br label %do.end1002

do.end1002:                                       ; preds = %do.body963
  %577 = load i8, i8* %cnum, align 1
  %578 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1003 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %578, i32 0, i32 22
  %aptr1004 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1003, i32 0, i32 2
  %579 = load i8*, i8** %aptr1004, align 8
  %incdec.ptr1005 = getelementptr inbounds i8, i8* %579, i32 1
  store i8* %incdec.ptr1005, i8** %aptr1004, align 8
  store i8 %577, i8* %579, align 1
  br label %if.end1006

if.end1006:                                       ; preds = %do.end1002, %if.then958
  br label %do.end1007

do.end1007:                                       ; preds = %if.end1006
  br label %if.end1016

if.else1008:                                      ; preds = %do.body947
  %580 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1009 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %580, i32 0, i32 24
  %581 = load %struct._PerlIO**, %struct._PerlIO*** %fio1009, align 8
  %582 = load i8, i8* %cnum, align 1
  %conv1010 = zext i8 %582 to i32
  %call1011 = call i32 @PerlIO_putc(%struct._PerlIO** %581, i32 %conv1010)
  %cmp1012 = icmp eq i32 %call1011, -1
  br i1 %cmp1012, label %if.then1014, label %if.end1015

if.then1014:                                      ; preds = %if.else1008
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1015:                                       ; preds = %if.else1008
  br label %if.end1016

if.end1016:                                       ; preds = %if.end1015, %do.end1007
  br label %do.end1017

do.end1017:                                       ; preds = %if.end1016
  br label %if.end1018

if.end1018:                                       ; preds = %do.end1017, %do.end944
  br label %if.end1346

if.else1019:                                      ; preds = %if.end767
  %583 = load i8, i8* %flags, align 1
  %conv1020 = zext i8 %583 to i32
  %and1021 = and i32 %conv1020, 4
  %tobool1022 = icmp ne i32 %and1021, 0
  br i1 %tobool1022, label %if.then1023, label %if.else1195

if.then1023:                                      ; preds = %if.else1019
  br label %do.body1024

do.body1024:                                      ; preds = %if.then1023
  %584 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder1025 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %584, i32 0, i32 12
  %585 = load i32, i32* %netorder1025, align 8
  %tobool1026 = icmp ne i32 %585, 0
  br i1 %tobool1026, label %if.then1027, label %if.else1111

if.then1027:                                      ; preds = %do.body1024
  %586 = load i32, i32* %len, align 4
  %call1029 = call i32 @my_swap32(i32 %586)
  store i32 %call1029, i32* %y1028, align 4
  %587 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1030 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %587, i32 0, i32 24
  %588 = load %struct._PerlIO**, %struct._PerlIO*** %fio1030, align 8
  %tobool1031 = icmp ne %struct._PerlIO** %588, null
  br i1 %tobool1031, label %if.else1103, label %if.then1032

if.then1032:                                      ; preds = %if.then1027
  br label %do.body1033

do.body1033:                                      ; preds = %if.then1032
  br label %do.body1034

do.body1034:                                      ; preds = %do.body1033
  %589 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1035 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %589, i32 0, i32 22
  %aptr1036 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1035, i32 0, i32 2
  %590 = load i8*, i8** %aptr1036, align 8
  %add.ptr1037 = getelementptr inbounds i8, i8* %590, i64 4
  %591 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1038 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %591, i32 0, i32 22
  %aend1039 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1038, i32 0, i32 3
  %592 = load i8*, i8** %aend1039, align 8
  %cmp1040 = icmp ugt i8* %add.ptr1037, %592
  br i1 %cmp1040, label %if.then1042, label %if.end1083

if.then1042:                                      ; preds = %do.body1034
  br label %do.body1043

do.body1043:                                      ; preds = %if.then1042
  %593 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1045 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %593, i32 0, i32 22
  %asiz1046 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1045, i32 0, i32 1
  %594 = load i64, i64* %asiz1046, align 8
  %add1047 = add i64 4, %594
  %add1048 = add i64 %add1047, 8191
  %and1049 = and i64 %add1048, -8192
  %conv1050 = trunc i64 %and1049 to i32
  store i32 %conv1050, i32* %nsz1044, align 4
  %595 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1052 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %595, i32 0, i32 22
  %aptr1053 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1052, i32 0, i32 2
  %596 = load i8*, i8** %aptr1053, align 8
  %597 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1054 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %597, i32 0, i32 22
  %arena1055 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1054, i32 0, i32 0
  %598 = load i8*, i8** %arena1055, align 8
  %sub.ptr.lhs.cast1056 = ptrtoint i8* %596 to i64
  %sub.ptr.rhs.cast1057 = ptrtoint i8* %598 to i64
  %sub.ptr.sub1058 = sub i64 %sub.ptr.lhs.cast1056, %sub.ptr.rhs.cast1057
  %conv1059 = trunc i64 %sub.ptr.sub1058 to i32
  store i32 %conv1059, i32* %offset1051, align 4
  %599 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1060 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %599, i32 0, i32 22
  %arena1061 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1060, i32 0, i32 0
  %600 = load i8*, i8** %arena1061, align 8
  %601 = load i32, i32* %nsz1044, align 4
  %conv1062 = sext i32 %601 to i64
  %mul1063 = mul i64 %conv1062, 1
  %call1064 = call i8* @Perl_safesysrealloc(i8* %600, i64 %mul1063)
  %602 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1065 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %602, i32 0, i32 22
  %arena1066 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1065, i32 0, i32 0
  store i8* %call1064, i8** %arena1066, align 8
  %603 = load i32, i32* %nsz1044, align 4
  %conv1067 = sext i32 %603 to i64
  %604 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1068 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %604, i32 0, i32 22
  %asiz1069 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1068, i32 0, i32 1
  store i64 %conv1067, i64* %asiz1069, align 8
  %605 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1070 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %605, i32 0, i32 22
  %arena1071 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1070, i32 0, i32 0
  %606 = load i8*, i8** %arena1071, align 8
  %607 = load i32, i32* %offset1051, align 4
  %idx.ext1072 = sext i32 %607 to i64
  %add.ptr1073 = getelementptr inbounds i8, i8* %606, i64 %idx.ext1072
  %608 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1074 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %608, i32 0, i32 22
  %aptr1075 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1074, i32 0, i32 2
  store i8* %add.ptr1073, i8** %aptr1075, align 8
  %609 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1076 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %609, i32 0, i32 22
  %arena1077 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1076, i32 0, i32 0
  %610 = load i8*, i8** %arena1077, align 8
  %611 = load i32, i32* %nsz1044, align 4
  %idx.ext1078 = sext i32 %611 to i64
  %add.ptr1079 = getelementptr inbounds i8, i8* %610, i64 %idx.ext1078
  %612 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1080 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %612, i32 0, i32 22
  %aend1081 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1080, i32 0, i32 3
  store i8* %add.ptr1079, i8** %aend1081, align 8
  br label %do.end1082

do.end1082:                                       ; preds = %do.body1043
  br label %if.end1083

if.end1083:                                       ; preds = %do.end1082, %do.body1034
  br label %do.end1084

do.end1084:                                       ; preds = %if.end1083
  %613 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1085 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %613, i32 0, i32 22
  %aptr1086 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1085, i32 0, i32 2
  %614 = load i8*, i8** %aptr1086, align 8
  %615 = ptrtoint i8* %614 to i64
  %616 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1087 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %616, i32 0, i32 22
  %aptr1088 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1087, i32 0, i32 2
  %617 = load i8*, i8** %aptr1088, align 8
  %618 = ptrtoint i8* %617 to i64
  %and1089 = and i64 %618, -4
  %cmp1090 = icmp eq i64 %615, %and1089
  br i1 %cmp1090, label %if.then1092, label %if.else1095

if.then1092:                                      ; preds = %do.end1084
  %619 = load i32, i32* %y1028, align 4
  %620 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1093 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %620, i32 0, i32 22
  %aptr1094 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1093, i32 0, i32 2
  %621 = load i8*, i8** %aptr1094, align 8
  %622 = bitcast i8* %621 to i32*
  store i32 %619, i32* %622, align 4
  br label %if.end1098

if.else1095:                                      ; preds = %do.end1084
  %623 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1096 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %623, i32 0, i32 22
  %aptr1097 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1096, i32 0, i32 2
  %624 = load i8*, i8** %aptr1097, align 8
  %625 = bitcast i32* %y1028 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %624, i8* align 4 %625, i64 4, i1 false)
  br label %if.end1098

if.end1098:                                       ; preds = %if.else1095, %if.then1092
  %626 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1099 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %626, i32 0, i32 22
  %aptr1100 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1099, i32 0, i32 2
  %627 = load i8*, i8** %aptr1100, align 8
  %add.ptr1101 = getelementptr inbounds i8, i8* %627, i64 4
  store i8* %add.ptr1101, i8** %aptr1100, align 8
  br label %do.end1102

do.end1102:                                       ; preds = %if.end1098
  br label %if.end1110

if.else1103:                                      ; preds = %if.then1027
  %628 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1104 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %628, i32 0, i32 24
  %629 = load %struct._PerlIO**, %struct._PerlIO*** %fio1104, align 8
  %630 = bitcast i32* %y1028 to i8*
  %call1105 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %629, i8* %630, i64 4)
  %cmp1106 = icmp ne i64 %call1105, 4
  br i1 %cmp1106, label %if.then1108, label %if.end1109

if.then1108:                                      ; preds = %if.else1103
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1109:                                       ; preds = %if.else1103
  br label %if.end1110

if.end1110:                                       ; preds = %if.end1109, %do.end1102
  br label %if.end1193

if.else1111:                                      ; preds = %do.body1024
  %631 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1112 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %631, i32 0, i32 24
  %632 = load %struct._PerlIO**, %struct._PerlIO*** %fio1112, align 8
  %tobool1113 = icmp ne %struct._PerlIO** %632, null
  br i1 %tobool1113, label %if.else1185, label %if.then1114

if.then1114:                                      ; preds = %if.else1111
  br label %do.body1115

do.body1115:                                      ; preds = %if.then1114
  br label %do.body1116

do.body1116:                                      ; preds = %do.body1115
  %633 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1117 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %633, i32 0, i32 22
  %aptr1118 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1117, i32 0, i32 2
  %634 = load i8*, i8** %aptr1118, align 8
  %add.ptr1119 = getelementptr inbounds i8, i8* %634, i64 4
  %635 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1120 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %635, i32 0, i32 22
  %aend1121 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1120, i32 0, i32 3
  %636 = load i8*, i8** %aend1121, align 8
  %cmp1122 = icmp ugt i8* %add.ptr1119, %636
  br i1 %cmp1122, label %if.then1124, label %if.end1165

if.then1124:                                      ; preds = %do.body1116
  br label %do.body1125

do.body1125:                                      ; preds = %if.then1124
  %637 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1127 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %637, i32 0, i32 22
  %asiz1128 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1127, i32 0, i32 1
  %638 = load i64, i64* %asiz1128, align 8
  %add1129 = add i64 4, %638
  %add1130 = add i64 %add1129, 8191
  %and1131 = and i64 %add1130, -8192
  %conv1132 = trunc i64 %and1131 to i32
  store i32 %conv1132, i32* %nsz1126, align 4
  %639 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1134 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %639, i32 0, i32 22
  %aptr1135 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1134, i32 0, i32 2
  %640 = load i8*, i8** %aptr1135, align 8
  %641 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1136 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %641, i32 0, i32 22
  %arena1137 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1136, i32 0, i32 0
  %642 = load i8*, i8** %arena1137, align 8
  %sub.ptr.lhs.cast1138 = ptrtoint i8* %640 to i64
  %sub.ptr.rhs.cast1139 = ptrtoint i8* %642 to i64
  %sub.ptr.sub1140 = sub i64 %sub.ptr.lhs.cast1138, %sub.ptr.rhs.cast1139
  %conv1141 = trunc i64 %sub.ptr.sub1140 to i32
  store i32 %conv1141, i32* %offset1133, align 4
  %643 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1142 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %643, i32 0, i32 22
  %arena1143 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1142, i32 0, i32 0
  %644 = load i8*, i8** %arena1143, align 8
  %645 = load i32, i32* %nsz1126, align 4
  %conv1144 = sext i32 %645 to i64
  %mul1145 = mul i64 %conv1144, 1
  %call1146 = call i8* @Perl_safesysrealloc(i8* %644, i64 %mul1145)
  %646 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1147 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %646, i32 0, i32 22
  %arena1148 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1147, i32 0, i32 0
  store i8* %call1146, i8** %arena1148, align 8
  %647 = load i32, i32* %nsz1126, align 4
  %conv1149 = sext i32 %647 to i64
  %648 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1150 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %648, i32 0, i32 22
  %asiz1151 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1150, i32 0, i32 1
  store i64 %conv1149, i64* %asiz1151, align 8
  %649 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1152 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %649, i32 0, i32 22
  %arena1153 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1152, i32 0, i32 0
  %650 = load i8*, i8** %arena1153, align 8
  %651 = load i32, i32* %offset1133, align 4
  %idx.ext1154 = sext i32 %651 to i64
  %add.ptr1155 = getelementptr inbounds i8, i8* %650, i64 %idx.ext1154
  %652 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1156 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %652, i32 0, i32 22
  %aptr1157 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1156, i32 0, i32 2
  store i8* %add.ptr1155, i8** %aptr1157, align 8
  %653 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1158 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %653, i32 0, i32 22
  %arena1159 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1158, i32 0, i32 0
  %654 = load i8*, i8** %arena1159, align 8
  %655 = load i32, i32* %nsz1126, align 4
  %idx.ext1160 = sext i32 %655 to i64
  %add.ptr1161 = getelementptr inbounds i8, i8* %654, i64 %idx.ext1160
  %656 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1162 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %656, i32 0, i32 22
  %aend1163 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1162, i32 0, i32 3
  store i8* %add.ptr1161, i8** %aend1163, align 8
  br label %do.end1164

do.end1164:                                       ; preds = %do.body1125
  br label %if.end1165

if.end1165:                                       ; preds = %do.end1164, %do.body1116
  br label %do.end1166

do.end1166:                                       ; preds = %if.end1165
  %657 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1167 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %657, i32 0, i32 22
  %aptr1168 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1167, i32 0, i32 2
  %658 = load i8*, i8** %aptr1168, align 8
  %659 = ptrtoint i8* %658 to i64
  %660 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1169 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %660, i32 0, i32 22
  %aptr1170 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1169, i32 0, i32 2
  %661 = load i8*, i8** %aptr1170, align 8
  %662 = ptrtoint i8* %661 to i64
  %and1171 = and i64 %662, -4
  %cmp1172 = icmp eq i64 %659, %and1171
  br i1 %cmp1172, label %if.then1174, label %if.else1177

if.then1174:                                      ; preds = %do.end1166
  %663 = load i32, i32* %len, align 4
  %664 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1175 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %664, i32 0, i32 22
  %aptr1176 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1175, i32 0, i32 2
  %665 = load i8*, i8** %aptr1176, align 8
  %666 = bitcast i8* %665 to i32*
  store i32 %663, i32* %666, align 4
  br label %if.end1180

if.else1177:                                      ; preds = %do.end1166
  %667 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1178 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %667, i32 0, i32 22
  %aptr1179 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1178, i32 0, i32 2
  %668 = load i8*, i8** %aptr1179, align 8
  %669 = bitcast i32* %len to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %668, i8* align 4 %669, i64 4, i1 false)
  br label %if.end1180

if.end1180:                                       ; preds = %if.else1177, %if.then1174
  %670 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1181 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %670, i32 0, i32 22
  %aptr1182 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1181, i32 0, i32 2
  %671 = load i8*, i8** %aptr1182, align 8
  %add.ptr1183 = getelementptr inbounds i8, i8* %671, i64 4
  store i8* %add.ptr1183, i8** %aptr1182, align 8
  br label %do.end1184

do.end1184:                                       ; preds = %if.end1180
  br label %if.end1192

if.else1185:                                      ; preds = %if.else1111
  %672 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1186 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %672, i32 0, i32 24
  %673 = load %struct._PerlIO**, %struct._PerlIO*** %fio1186, align 8
  %674 = bitcast i32* %len to i8*
  %call1187 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %673, i8* %674, i64 4)
  %cmp1188 = icmp ne i64 %call1187, 4
  br i1 %cmp1188, label %if.then1190, label %if.end1191

if.then1190:                                      ; preds = %if.else1185
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1191:                                       ; preds = %if.else1185
  br label %if.end1192

if.end1192:                                       ; preds = %if.end1191, %do.end1184
  br label %if.end1193

if.end1193:                                       ; preds = %if.end1192, %if.end1110
  br label %do.end1194

do.end1194:                                       ; preds = %if.end1193
  br label %if.end1268

if.else1195:                                      ; preds = %if.else1019
  %675 = load i32, i32* %len, align 4
  %conv1196 = trunc i32 %675 to i8
  store i8 %conv1196, i8* %clen, align 1
  br label %do.body1197

do.body1197:                                      ; preds = %if.else1195
  %676 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1198 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %676, i32 0, i32 24
  %677 = load %struct._PerlIO**, %struct._PerlIO*** %fio1198, align 8
  %tobool1199 = icmp ne %struct._PerlIO** %677, null
  br i1 %tobool1199, label %if.else1258, label %if.then1200

if.then1200:                                      ; preds = %do.body1197
  br label %do.body1201

do.body1201:                                      ; preds = %if.then1200
  %678 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1202 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %678, i32 0, i32 22
  %aptr1203 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1202, i32 0, i32 2
  %679 = load i8*, i8** %aptr1203, align 8
  %680 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1204 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %680, i32 0, i32 22
  %aend1205 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1204, i32 0, i32 3
  %681 = load i8*, i8** %aend1205, align 8
  %cmp1206 = icmp ult i8* %679, %681
  br i1 %cmp1206, label %if.then1208, label %if.else1212

if.then1208:                                      ; preds = %do.body1201
  %682 = load i8, i8* %clen, align 1
  %683 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1209 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %683, i32 0, i32 22
  %aptr1210 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1209, i32 0, i32 2
  %684 = load i8*, i8** %aptr1210, align 8
  %incdec.ptr1211 = getelementptr inbounds i8, i8* %684, i32 1
  store i8* %incdec.ptr1211, i8** %aptr1210, align 8
  store i8 %682, i8* %684, align 1
  br label %if.end1256

if.else1212:                                      ; preds = %do.body1201
  br label %do.body1213

do.body1213:                                      ; preds = %if.else1212
  %685 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1215 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %685, i32 0, i32 22
  %asiz1216 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1215, i32 0, i32 1
  %686 = load i64, i64* %asiz1216, align 8
  %add1217 = add i64 1, %686
  %add1218 = add i64 %add1217, 8191
  %and1219 = and i64 %add1218, -8192
  %conv1220 = trunc i64 %and1219 to i32
  store i32 %conv1220, i32* %nsz1214, align 4
  %687 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1222 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %687, i32 0, i32 22
  %aptr1223 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1222, i32 0, i32 2
  %688 = load i8*, i8** %aptr1223, align 8
  %689 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1224 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %689, i32 0, i32 22
  %arena1225 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1224, i32 0, i32 0
  %690 = load i8*, i8** %arena1225, align 8
  %sub.ptr.lhs.cast1226 = ptrtoint i8* %688 to i64
  %sub.ptr.rhs.cast1227 = ptrtoint i8* %690 to i64
  %sub.ptr.sub1228 = sub i64 %sub.ptr.lhs.cast1226, %sub.ptr.rhs.cast1227
  %conv1229 = trunc i64 %sub.ptr.sub1228 to i32
  store i32 %conv1229, i32* %offset1221, align 4
  %691 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1230 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %691, i32 0, i32 22
  %arena1231 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1230, i32 0, i32 0
  %692 = load i8*, i8** %arena1231, align 8
  %693 = load i32, i32* %nsz1214, align 4
  %conv1232 = sext i32 %693 to i64
  %mul1233 = mul i64 %conv1232, 1
  %call1234 = call i8* @Perl_safesysrealloc(i8* %692, i64 %mul1233)
  %694 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1235 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %694, i32 0, i32 22
  %arena1236 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1235, i32 0, i32 0
  store i8* %call1234, i8** %arena1236, align 8
  %695 = load i32, i32* %nsz1214, align 4
  %conv1237 = sext i32 %695 to i64
  %696 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1238 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %696, i32 0, i32 22
  %asiz1239 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1238, i32 0, i32 1
  store i64 %conv1237, i64* %asiz1239, align 8
  %697 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1240 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %697, i32 0, i32 22
  %arena1241 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1240, i32 0, i32 0
  %698 = load i8*, i8** %arena1241, align 8
  %699 = load i32, i32* %offset1221, align 4
  %idx.ext1242 = sext i32 %699 to i64
  %add.ptr1243 = getelementptr inbounds i8, i8* %698, i64 %idx.ext1242
  %700 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1244 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %700, i32 0, i32 22
  %aptr1245 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1244, i32 0, i32 2
  store i8* %add.ptr1243, i8** %aptr1245, align 8
  %701 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1246 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %701, i32 0, i32 22
  %arena1247 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1246, i32 0, i32 0
  %702 = load i8*, i8** %arena1247, align 8
  %703 = load i32, i32* %nsz1214, align 4
  %idx.ext1248 = sext i32 %703 to i64
  %add.ptr1249 = getelementptr inbounds i8, i8* %702, i64 %idx.ext1248
  %704 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1250 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %704, i32 0, i32 22
  %aend1251 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1250, i32 0, i32 3
  store i8* %add.ptr1249, i8** %aend1251, align 8
  br label %do.end1252

do.end1252:                                       ; preds = %do.body1213
  %705 = load i8, i8* %clen, align 1
  %706 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1253 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %706, i32 0, i32 22
  %aptr1254 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1253, i32 0, i32 2
  %707 = load i8*, i8** %aptr1254, align 8
  %incdec.ptr1255 = getelementptr inbounds i8, i8* %707, i32 1
  store i8* %incdec.ptr1255, i8** %aptr1254, align 8
  store i8 %705, i8* %707, align 1
  br label %if.end1256

if.end1256:                                       ; preds = %do.end1252, %if.then1208
  br label %do.end1257

do.end1257:                                       ; preds = %if.end1256
  br label %if.end1266

if.else1258:                                      ; preds = %do.body1197
  %708 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1259 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %708, i32 0, i32 24
  %709 = load %struct._PerlIO**, %struct._PerlIO*** %fio1259, align 8
  %710 = load i8, i8* %clen, align 1
  %conv1260 = zext i8 %710 to i32
  %call1261 = call i32 @PerlIO_putc(%struct._PerlIO** %709, i32 %conv1260)
  %cmp1262 = icmp eq i32 %call1261, -1
  br i1 %cmp1262, label %if.then1264, label %if.end1265

if.then1264:                                      ; preds = %if.else1258
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1265:                                       ; preds = %if.else1258
  br label %if.end1266

if.end1266:                                       ; preds = %if.end1265, %do.end1257
  br label %do.end1267

do.end1267:                                       ; preds = %if.end1266
  br label %if.end1268

if.end1268:                                       ; preds = %do.end1267, %do.end1194
  br label %do.body1269

do.body1269:                                      ; preds = %if.end1268
  %711 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1270 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %711, i32 0, i32 24
  %712 = load %struct._PerlIO**, %struct._PerlIO*** %fio1270, align 8
  %tobool1271 = icmp ne %struct._PerlIO** %712, null
  br i1 %tobool1271, label %if.else1335, label %if.then1272

if.then1272:                                      ; preds = %do.body1269
  br label %do.body1273

do.body1273:                                      ; preds = %if.then1272
  br label %do.body1274

do.body1274:                                      ; preds = %do.body1273
  %713 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1275 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %713, i32 0, i32 22
  %aptr1276 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1275, i32 0, i32 2
  %714 = load i8*, i8** %aptr1276, align 8
  %715 = load i32, i32* %len, align 4
  %idx.ext1277 = sext i32 %715 to i64
  %add.ptr1278 = getelementptr inbounds i8, i8* %714, i64 %idx.ext1277
  %716 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1279 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %716, i32 0, i32 22
  %aend1280 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1279, i32 0, i32 3
  %717 = load i8*, i8** %aend1280, align 8
  %cmp1281 = icmp ugt i8* %add.ptr1278, %717
  br i1 %cmp1281, label %if.then1283, label %if.end1325

if.then1283:                                      ; preds = %do.body1274
  br label %do.body1284

do.body1284:                                      ; preds = %if.then1283
  %718 = load i32, i32* %len, align 4
  %conv1286 = sext i32 %718 to i64
  %719 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1287 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %719, i32 0, i32 22
  %asiz1288 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1287, i32 0, i32 1
  %720 = load i64, i64* %asiz1288, align 8
  %add1289 = add i64 %conv1286, %720
  %add1290 = add i64 %add1289, 8191
  %and1291 = and i64 %add1290, -8192
  %conv1292 = trunc i64 %and1291 to i32
  store i32 %conv1292, i32* %nsz1285, align 4
  %721 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1294 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %721, i32 0, i32 22
  %aptr1295 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1294, i32 0, i32 2
  %722 = load i8*, i8** %aptr1295, align 8
  %723 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1296 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %723, i32 0, i32 22
  %arena1297 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1296, i32 0, i32 0
  %724 = load i8*, i8** %arena1297, align 8
  %sub.ptr.lhs.cast1298 = ptrtoint i8* %722 to i64
  %sub.ptr.rhs.cast1299 = ptrtoint i8* %724 to i64
  %sub.ptr.sub1300 = sub i64 %sub.ptr.lhs.cast1298, %sub.ptr.rhs.cast1299
  %conv1301 = trunc i64 %sub.ptr.sub1300 to i32
  store i32 %conv1301, i32* %offset1293, align 4
  %725 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1302 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %725, i32 0, i32 22
  %arena1303 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1302, i32 0, i32 0
  %726 = load i8*, i8** %arena1303, align 8
  %727 = load i32, i32* %nsz1285, align 4
  %conv1304 = sext i32 %727 to i64
  %mul1305 = mul i64 %conv1304, 1
  %call1306 = call i8* @Perl_safesysrealloc(i8* %726, i64 %mul1305)
  %728 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1307 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %728, i32 0, i32 22
  %arena1308 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1307, i32 0, i32 0
  store i8* %call1306, i8** %arena1308, align 8
  %729 = load i32, i32* %nsz1285, align 4
  %conv1309 = sext i32 %729 to i64
  %730 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1310 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %730, i32 0, i32 22
  %asiz1311 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1310, i32 0, i32 1
  store i64 %conv1309, i64* %asiz1311, align 8
  %731 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1312 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %731, i32 0, i32 22
  %arena1313 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1312, i32 0, i32 0
  %732 = load i8*, i8** %arena1313, align 8
  %733 = load i32, i32* %offset1293, align 4
  %idx.ext1314 = sext i32 %733 to i64
  %add.ptr1315 = getelementptr inbounds i8, i8* %732, i64 %idx.ext1314
  %734 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1316 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %734, i32 0, i32 22
  %aptr1317 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1316, i32 0, i32 2
  store i8* %add.ptr1315, i8** %aptr1317, align 8
  %735 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1318 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %735, i32 0, i32 22
  %arena1319 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1318, i32 0, i32 0
  %736 = load i8*, i8** %arena1319, align 8
  %737 = load i32, i32* %nsz1285, align 4
  %idx.ext1320 = sext i32 %737 to i64
  %add.ptr1321 = getelementptr inbounds i8, i8* %736, i64 %idx.ext1320
  %738 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1322 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %738, i32 0, i32 22
  %aend1323 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1322, i32 0, i32 3
  store i8* %add.ptr1321, i8** %aend1323, align 8
  br label %do.end1324

do.end1324:                                       ; preds = %do.body1284
  br label %if.end1325

if.end1325:                                       ; preds = %do.end1324, %do.body1274
  br label %do.end1326

do.end1326:                                       ; preds = %if.end1325
  %739 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1327 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %739, i32 0, i32 22
  %aptr1328 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1327, i32 0, i32 2
  %740 = load i8*, i8** %aptr1328, align 8
  %741 = load i8*, i8** %classname, align 8
  %742 = load i32, i32* %len, align 4
  %conv1329 = sext i32 %742 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %740, i8* align 1 %741, i64 %conv1329, i1 false)
  %743 = load i32, i32* %len, align 4
  %744 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1330 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %744, i32 0, i32 22
  %aptr1331 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1330, i32 0, i32 2
  %745 = load i8*, i8** %aptr1331, align 8
  %idx.ext1332 = sext i32 %743 to i64
  %add.ptr1333 = getelementptr inbounds i8, i8* %745, i64 %idx.ext1332
  store i8* %add.ptr1333, i8** %aptr1331, align 8
  br label %do.end1334

do.end1334:                                       ; preds = %do.end1326
  br label %if.end1344

if.else1335:                                      ; preds = %do.body1269
  %746 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1336 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %746, i32 0, i32 24
  %747 = load %struct._PerlIO**, %struct._PerlIO*** %fio1336, align 8
  %748 = load i8*, i8** %classname, align 8
  %749 = load i32, i32* %len, align 4
  %conv1337 = sext i32 %749 to i64
  %call1338 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %747, i8* %748, i64 %conv1337)
  %750 = load i32, i32* %len, align 4
  %conv1339 = sext i32 %750 to i64
  %cmp1340 = icmp ne i64 %call1338, %conv1339
  br i1 %cmp1340, label %if.then1342, label %if.end1343

if.then1342:                                      ; preds = %if.else1335
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1343:                                       ; preds = %if.else1335
  br label %if.end1344

if.end1344:                                       ; preds = %if.end1343, %do.end1334
  br label %do.end1345

do.end1345:                                       ; preds = %if.end1344
  br label %if.end1346

if.end1346:                                       ; preds = %do.end1345, %if.end1018
  %751 = load i8, i8* %flags, align 1
  %conv1347 = zext i8 %751 to i32
  %and1348 = and i32 %conv1347, 8
  %tobool1349 = icmp ne i32 %and1348, 0
  br i1 %tobool1349, label %if.then1350, label %if.else1523

if.then1350:                                      ; preds = %if.end1346
  %752 = load i64, i64* %len2, align 8
  %conv1351 = trunc i64 %752 to i32
  store i32 %conv1351, i32* %wlen2, align 4
  br label %do.body1352

do.body1352:                                      ; preds = %if.then1350
  %753 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder1353 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %753, i32 0, i32 12
  %754 = load i32, i32* %netorder1353, align 8
  %tobool1354 = icmp ne i32 %754, 0
  br i1 %tobool1354, label %if.then1355, label %if.else1439

if.then1355:                                      ; preds = %do.body1352
  %755 = load i32, i32* %wlen2, align 4
  %call1357 = call i32 @my_swap32(i32 %755)
  store i32 %call1357, i32* %y1356, align 4
  %756 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1358 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %756, i32 0, i32 24
  %757 = load %struct._PerlIO**, %struct._PerlIO*** %fio1358, align 8
  %tobool1359 = icmp ne %struct._PerlIO** %757, null
  br i1 %tobool1359, label %if.else1431, label %if.then1360

if.then1360:                                      ; preds = %if.then1355
  br label %do.body1361

do.body1361:                                      ; preds = %if.then1360
  br label %do.body1362

do.body1362:                                      ; preds = %do.body1361
  %758 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1363 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %758, i32 0, i32 22
  %aptr1364 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1363, i32 0, i32 2
  %759 = load i8*, i8** %aptr1364, align 8
  %add.ptr1365 = getelementptr inbounds i8, i8* %759, i64 4
  %760 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1366 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %760, i32 0, i32 22
  %aend1367 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1366, i32 0, i32 3
  %761 = load i8*, i8** %aend1367, align 8
  %cmp1368 = icmp ugt i8* %add.ptr1365, %761
  br i1 %cmp1368, label %if.then1370, label %if.end1411

if.then1370:                                      ; preds = %do.body1362
  br label %do.body1371

do.body1371:                                      ; preds = %if.then1370
  %762 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1373 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %762, i32 0, i32 22
  %asiz1374 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1373, i32 0, i32 1
  %763 = load i64, i64* %asiz1374, align 8
  %add1375 = add i64 4, %763
  %add1376 = add i64 %add1375, 8191
  %and1377 = and i64 %add1376, -8192
  %conv1378 = trunc i64 %and1377 to i32
  store i32 %conv1378, i32* %nsz1372, align 4
  %764 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1380 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %764, i32 0, i32 22
  %aptr1381 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1380, i32 0, i32 2
  %765 = load i8*, i8** %aptr1381, align 8
  %766 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1382 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %766, i32 0, i32 22
  %arena1383 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1382, i32 0, i32 0
  %767 = load i8*, i8** %arena1383, align 8
  %sub.ptr.lhs.cast1384 = ptrtoint i8* %765 to i64
  %sub.ptr.rhs.cast1385 = ptrtoint i8* %767 to i64
  %sub.ptr.sub1386 = sub i64 %sub.ptr.lhs.cast1384, %sub.ptr.rhs.cast1385
  %conv1387 = trunc i64 %sub.ptr.sub1386 to i32
  store i32 %conv1387, i32* %offset1379, align 4
  %768 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1388 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %768, i32 0, i32 22
  %arena1389 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1388, i32 0, i32 0
  %769 = load i8*, i8** %arena1389, align 8
  %770 = load i32, i32* %nsz1372, align 4
  %conv1390 = sext i32 %770 to i64
  %mul1391 = mul i64 %conv1390, 1
  %call1392 = call i8* @Perl_safesysrealloc(i8* %769, i64 %mul1391)
  %771 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1393 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %771, i32 0, i32 22
  %arena1394 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1393, i32 0, i32 0
  store i8* %call1392, i8** %arena1394, align 8
  %772 = load i32, i32* %nsz1372, align 4
  %conv1395 = sext i32 %772 to i64
  %773 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1396 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %773, i32 0, i32 22
  %asiz1397 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1396, i32 0, i32 1
  store i64 %conv1395, i64* %asiz1397, align 8
  %774 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1398 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %774, i32 0, i32 22
  %arena1399 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1398, i32 0, i32 0
  %775 = load i8*, i8** %arena1399, align 8
  %776 = load i32, i32* %offset1379, align 4
  %idx.ext1400 = sext i32 %776 to i64
  %add.ptr1401 = getelementptr inbounds i8, i8* %775, i64 %idx.ext1400
  %777 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1402 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %777, i32 0, i32 22
  %aptr1403 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1402, i32 0, i32 2
  store i8* %add.ptr1401, i8** %aptr1403, align 8
  %778 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1404 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %778, i32 0, i32 22
  %arena1405 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1404, i32 0, i32 0
  %779 = load i8*, i8** %arena1405, align 8
  %780 = load i32, i32* %nsz1372, align 4
  %idx.ext1406 = sext i32 %780 to i64
  %add.ptr1407 = getelementptr inbounds i8, i8* %779, i64 %idx.ext1406
  %781 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1408 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %781, i32 0, i32 22
  %aend1409 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1408, i32 0, i32 3
  store i8* %add.ptr1407, i8** %aend1409, align 8
  br label %do.end1410

do.end1410:                                       ; preds = %do.body1371
  br label %if.end1411

if.end1411:                                       ; preds = %do.end1410, %do.body1362
  br label %do.end1412

do.end1412:                                       ; preds = %if.end1411
  %782 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1413 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %782, i32 0, i32 22
  %aptr1414 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1413, i32 0, i32 2
  %783 = load i8*, i8** %aptr1414, align 8
  %784 = ptrtoint i8* %783 to i64
  %785 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1415 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %785, i32 0, i32 22
  %aptr1416 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1415, i32 0, i32 2
  %786 = load i8*, i8** %aptr1416, align 8
  %787 = ptrtoint i8* %786 to i64
  %and1417 = and i64 %787, -4
  %cmp1418 = icmp eq i64 %784, %and1417
  br i1 %cmp1418, label %if.then1420, label %if.else1423

if.then1420:                                      ; preds = %do.end1412
  %788 = load i32, i32* %y1356, align 4
  %789 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1421 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %789, i32 0, i32 22
  %aptr1422 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1421, i32 0, i32 2
  %790 = load i8*, i8** %aptr1422, align 8
  %791 = bitcast i8* %790 to i32*
  store i32 %788, i32* %791, align 4
  br label %if.end1426

if.else1423:                                      ; preds = %do.end1412
  %792 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1424 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %792, i32 0, i32 22
  %aptr1425 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1424, i32 0, i32 2
  %793 = load i8*, i8** %aptr1425, align 8
  %794 = bitcast i32* %y1356 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %793, i8* align 4 %794, i64 4, i1 false)
  br label %if.end1426

if.end1426:                                       ; preds = %if.else1423, %if.then1420
  %795 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1427 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %795, i32 0, i32 22
  %aptr1428 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1427, i32 0, i32 2
  %796 = load i8*, i8** %aptr1428, align 8
  %add.ptr1429 = getelementptr inbounds i8, i8* %796, i64 4
  store i8* %add.ptr1429, i8** %aptr1428, align 8
  br label %do.end1430

do.end1430:                                       ; preds = %if.end1426
  br label %if.end1438

if.else1431:                                      ; preds = %if.then1355
  %797 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1432 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %797, i32 0, i32 24
  %798 = load %struct._PerlIO**, %struct._PerlIO*** %fio1432, align 8
  %799 = bitcast i32* %y1356 to i8*
  %call1433 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %798, i8* %799, i64 4)
  %cmp1434 = icmp ne i64 %call1433, 4
  br i1 %cmp1434, label %if.then1436, label %if.end1437

if.then1436:                                      ; preds = %if.else1431
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1437:                                       ; preds = %if.else1431
  br label %if.end1438

if.end1438:                                       ; preds = %if.end1437, %do.end1430
  br label %if.end1521

if.else1439:                                      ; preds = %do.body1352
  %800 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1440 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %800, i32 0, i32 24
  %801 = load %struct._PerlIO**, %struct._PerlIO*** %fio1440, align 8
  %tobool1441 = icmp ne %struct._PerlIO** %801, null
  br i1 %tobool1441, label %if.else1513, label %if.then1442

if.then1442:                                      ; preds = %if.else1439
  br label %do.body1443

do.body1443:                                      ; preds = %if.then1442
  br label %do.body1444

do.body1444:                                      ; preds = %do.body1443
  %802 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1445 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %802, i32 0, i32 22
  %aptr1446 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1445, i32 0, i32 2
  %803 = load i8*, i8** %aptr1446, align 8
  %add.ptr1447 = getelementptr inbounds i8, i8* %803, i64 4
  %804 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1448 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %804, i32 0, i32 22
  %aend1449 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1448, i32 0, i32 3
  %805 = load i8*, i8** %aend1449, align 8
  %cmp1450 = icmp ugt i8* %add.ptr1447, %805
  br i1 %cmp1450, label %if.then1452, label %if.end1493

if.then1452:                                      ; preds = %do.body1444
  br label %do.body1453

do.body1453:                                      ; preds = %if.then1452
  %806 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1455 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %806, i32 0, i32 22
  %asiz1456 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1455, i32 0, i32 1
  %807 = load i64, i64* %asiz1456, align 8
  %add1457 = add i64 4, %807
  %add1458 = add i64 %add1457, 8191
  %and1459 = and i64 %add1458, -8192
  %conv1460 = trunc i64 %and1459 to i32
  store i32 %conv1460, i32* %nsz1454, align 4
  %808 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1462 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %808, i32 0, i32 22
  %aptr1463 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1462, i32 0, i32 2
  %809 = load i8*, i8** %aptr1463, align 8
  %810 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1464 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %810, i32 0, i32 22
  %arena1465 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1464, i32 0, i32 0
  %811 = load i8*, i8** %arena1465, align 8
  %sub.ptr.lhs.cast1466 = ptrtoint i8* %809 to i64
  %sub.ptr.rhs.cast1467 = ptrtoint i8* %811 to i64
  %sub.ptr.sub1468 = sub i64 %sub.ptr.lhs.cast1466, %sub.ptr.rhs.cast1467
  %conv1469 = trunc i64 %sub.ptr.sub1468 to i32
  store i32 %conv1469, i32* %offset1461, align 4
  %812 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1470 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %812, i32 0, i32 22
  %arena1471 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1470, i32 0, i32 0
  %813 = load i8*, i8** %arena1471, align 8
  %814 = load i32, i32* %nsz1454, align 4
  %conv1472 = sext i32 %814 to i64
  %mul1473 = mul i64 %conv1472, 1
  %call1474 = call i8* @Perl_safesysrealloc(i8* %813, i64 %mul1473)
  %815 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1475 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %815, i32 0, i32 22
  %arena1476 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1475, i32 0, i32 0
  store i8* %call1474, i8** %arena1476, align 8
  %816 = load i32, i32* %nsz1454, align 4
  %conv1477 = sext i32 %816 to i64
  %817 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1478 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %817, i32 0, i32 22
  %asiz1479 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1478, i32 0, i32 1
  store i64 %conv1477, i64* %asiz1479, align 8
  %818 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1480 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %818, i32 0, i32 22
  %arena1481 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1480, i32 0, i32 0
  %819 = load i8*, i8** %arena1481, align 8
  %820 = load i32, i32* %offset1461, align 4
  %idx.ext1482 = sext i32 %820 to i64
  %add.ptr1483 = getelementptr inbounds i8, i8* %819, i64 %idx.ext1482
  %821 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1484 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %821, i32 0, i32 22
  %aptr1485 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1484, i32 0, i32 2
  store i8* %add.ptr1483, i8** %aptr1485, align 8
  %822 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1486 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %822, i32 0, i32 22
  %arena1487 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1486, i32 0, i32 0
  %823 = load i8*, i8** %arena1487, align 8
  %824 = load i32, i32* %nsz1454, align 4
  %idx.ext1488 = sext i32 %824 to i64
  %add.ptr1489 = getelementptr inbounds i8, i8* %823, i64 %idx.ext1488
  %825 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1490 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %825, i32 0, i32 22
  %aend1491 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1490, i32 0, i32 3
  store i8* %add.ptr1489, i8** %aend1491, align 8
  br label %do.end1492

do.end1492:                                       ; preds = %do.body1453
  br label %if.end1493

if.end1493:                                       ; preds = %do.end1492, %do.body1444
  br label %do.end1494

do.end1494:                                       ; preds = %if.end1493
  %826 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1495 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %826, i32 0, i32 22
  %aptr1496 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1495, i32 0, i32 2
  %827 = load i8*, i8** %aptr1496, align 8
  %828 = ptrtoint i8* %827 to i64
  %829 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1497 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %829, i32 0, i32 22
  %aptr1498 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1497, i32 0, i32 2
  %830 = load i8*, i8** %aptr1498, align 8
  %831 = ptrtoint i8* %830 to i64
  %and1499 = and i64 %831, -4
  %cmp1500 = icmp eq i64 %828, %and1499
  br i1 %cmp1500, label %if.then1502, label %if.else1505

if.then1502:                                      ; preds = %do.end1494
  %832 = load i32, i32* %wlen2, align 4
  %833 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1503 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %833, i32 0, i32 22
  %aptr1504 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1503, i32 0, i32 2
  %834 = load i8*, i8** %aptr1504, align 8
  %835 = bitcast i8* %834 to i32*
  store i32 %832, i32* %835, align 4
  br label %if.end1508

if.else1505:                                      ; preds = %do.end1494
  %836 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1506 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %836, i32 0, i32 22
  %aptr1507 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1506, i32 0, i32 2
  %837 = load i8*, i8** %aptr1507, align 8
  %838 = bitcast i32* %wlen2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %837, i8* align 4 %838, i64 4, i1 false)
  br label %if.end1508

if.end1508:                                       ; preds = %if.else1505, %if.then1502
  %839 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1509 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %839, i32 0, i32 22
  %aptr1510 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1509, i32 0, i32 2
  %840 = load i8*, i8** %aptr1510, align 8
  %add.ptr1511 = getelementptr inbounds i8, i8* %840, i64 4
  store i8* %add.ptr1511, i8** %aptr1510, align 8
  br label %do.end1512

do.end1512:                                       ; preds = %if.end1508
  br label %if.end1520

if.else1513:                                      ; preds = %if.else1439
  %841 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1514 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %841, i32 0, i32 24
  %842 = load %struct._PerlIO**, %struct._PerlIO*** %fio1514, align 8
  %843 = bitcast i32* %wlen2 to i8*
  %call1515 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %842, i8* %843, i64 4)
  %cmp1516 = icmp ne i64 %call1515, 4
  br i1 %cmp1516, label %if.then1518, label %if.end1519

if.then1518:                                      ; preds = %if.else1513
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1519:                                       ; preds = %if.else1513
  br label %if.end1520

if.end1520:                                       ; preds = %if.end1519, %do.end1512
  br label %if.end1521

if.end1521:                                       ; preds = %if.end1520, %if.end1438
  br label %do.end1522

do.end1522:                                       ; preds = %if.end1521
  br label %if.end1597

if.else1523:                                      ; preds = %if.end1346
  %844 = load i64, i64* %len2, align 8
  %conv1525 = trunc i64 %844 to i8
  store i8 %conv1525, i8* %clen1524, align 1
  br label %do.body1526

do.body1526:                                      ; preds = %if.else1523
  %845 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1527 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %845, i32 0, i32 24
  %846 = load %struct._PerlIO**, %struct._PerlIO*** %fio1527, align 8
  %tobool1528 = icmp ne %struct._PerlIO** %846, null
  br i1 %tobool1528, label %if.else1587, label %if.then1529

if.then1529:                                      ; preds = %do.body1526
  br label %do.body1530

do.body1530:                                      ; preds = %if.then1529
  %847 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1531 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %847, i32 0, i32 22
  %aptr1532 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1531, i32 0, i32 2
  %848 = load i8*, i8** %aptr1532, align 8
  %849 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1533 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %849, i32 0, i32 22
  %aend1534 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1533, i32 0, i32 3
  %850 = load i8*, i8** %aend1534, align 8
  %cmp1535 = icmp ult i8* %848, %850
  br i1 %cmp1535, label %if.then1537, label %if.else1541

if.then1537:                                      ; preds = %do.body1530
  %851 = load i8, i8* %clen1524, align 1
  %852 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1538 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %852, i32 0, i32 22
  %aptr1539 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1538, i32 0, i32 2
  %853 = load i8*, i8** %aptr1539, align 8
  %incdec.ptr1540 = getelementptr inbounds i8, i8* %853, i32 1
  store i8* %incdec.ptr1540, i8** %aptr1539, align 8
  store i8 %851, i8* %853, align 1
  br label %if.end1585

if.else1541:                                      ; preds = %do.body1530
  br label %do.body1542

do.body1542:                                      ; preds = %if.else1541
  %854 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1544 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %854, i32 0, i32 22
  %asiz1545 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1544, i32 0, i32 1
  %855 = load i64, i64* %asiz1545, align 8
  %add1546 = add i64 1, %855
  %add1547 = add i64 %add1546, 8191
  %and1548 = and i64 %add1547, -8192
  %conv1549 = trunc i64 %and1548 to i32
  store i32 %conv1549, i32* %nsz1543, align 4
  %856 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1551 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %856, i32 0, i32 22
  %aptr1552 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1551, i32 0, i32 2
  %857 = load i8*, i8** %aptr1552, align 8
  %858 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1553 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %858, i32 0, i32 22
  %arena1554 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1553, i32 0, i32 0
  %859 = load i8*, i8** %arena1554, align 8
  %sub.ptr.lhs.cast1555 = ptrtoint i8* %857 to i64
  %sub.ptr.rhs.cast1556 = ptrtoint i8* %859 to i64
  %sub.ptr.sub1557 = sub i64 %sub.ptr.lhs.cast1555, %sub.ptr.rhs.cast1556
  %conv1558 = trunc i64 %sub.ptr.sub1557 to i32
  store i32 %conv1558, i32* %offset1550, align 4
  %860 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1559 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %860, i32 0, i32 22
  %arena1560 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1559, i32 0, i32 0
  %861 = load i8*, i8** %arena1560, align 8
  %862 = load i32, i32* %nsz1543, align 4
  %conv1561 = sext i32 %862 to i64
  %mul1562 = mul i64 %conv1561, 1
  %call1563 = call i8* @Perl_safesysrealloc(i8* %861, i64 %mul1562)
  %863 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1564 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %863, i32 0, i32 22
  %arena1565 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1564, i32 0, i32 0
  store i8* %call1563, i8** %arena1565, align 8
  %864 = load i32, i32* %nsz1543, align 4
  %conv1566 = sext i32 %864 to i64
  %865 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1567 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %865, i32 0, i32 22
  %asiz1568 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1567, i32 0, i32 1
  store i64 %conv1566, i64* %asiz1568, align 8
  %866 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1569 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %866, i32 0, i32 22
  %arena1570 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1569, i32 0, i32 0
  %867 = load i8*, i8** %arena1570, align 8
  %868 = load i32, i32* %offset1550, align 4
  %idx.ext1571 = sext i32 %868 to i64
  %add.ptr1572 = getelementptr inbounds i8, i8* %867, i64 %idx.ext1571
  %869 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1573 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %869, i32 0, i32 22
  %aptr1574 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1573, i32 0, i32 2
  store i8* %add.ptr1572, i8** %aptr1574, align 8
  %870 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1575 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %870, i32 0, i32 22
  %arena1576 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1575, i32 0, i32 0
  %871 = load i8*, i8** %arena1576, align 8
  %872 = load i32, i32* %nsz1543, align 4
  %idx.ext1577 = sext i32 %872 to i64
  %add.ptr1578 = getelementptr inbounds i8, i8* %871, i64 %idx.ext1577
  %873 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1579 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %873, i32 0, i32 22
  %aend1580 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1579, i32 0, i32 3
  store i8* %add.ptr1578, i8** %aend1580, align 8
  br label %do.end1581

do.end1581:                                       ; preds = %do.body1542
  %874 = load i8, i8* %clen1524, align 1
  %875 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1582 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %875, i32 0, i32 22
  %aptr1583 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1582, i32 0, i32 2
  %876 = load i8*, i8** %aptr1583, align 8
  %incdec.ptr1584 = getelementptr inbounds i8, i8* %876, i32 1
  store i8* %incdec.ptr1584, i8** %aptr1583, align 8
  store i8 %874, i8* %876, align 1
  br label %if.end1585

if.end1585:                                       ; preds = %do.end1581, %if.then1537
  br label %do.end1586

do.end1586:                                       ; preds = %if.end1585
  br label %if.end1595

if.else1587:                                      ; preds = %do.body1526
  %877 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1588 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %877, i32 0, i32 24
  %878 = load %struct._PerlIO**, %struct._PerlIO*** %fio1588, align 8
  %879 = load i8, i8* %clen1524, align 1
  %conv1589 = zext i8 %879 to i32
  %call1590 = call i32 @PerlIO_putc(%struct._PerlIO** %878, i32 %conv1589)
  %cmp1591 = icmp eq i32 %call1590, -1
  br i1 %cmp1591, label %if.then1593, label %if.end1594

if.then1593:                                      ; preds = %if.else1587
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1594:                                       ; preds = %if.else1587
  br label %if.end1595

if.end1595:                                       ; preds = %if.end1594, %do.end1586
  br label %do.end1596

do.end1596:                                       ; preds = %if.end1595
  br label %if.end1597

if.end1597:                                       ; preds = %do.end1596, %do.end1522
  %880 = load i64, i64* %len2, align 8
  %tobool1598 = icmp ne i64 %880, 0
  br i1 %tobool1598, label %if.then1599, label %if.end1671

if.then1599:                                      ; preds = %if.end1597
  br label %do.body1600

do.body1600:                                      ; preds = %if.then1599
  %881 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1601 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %881, i32 0, i32 24
  %882 = load %struct._PerlIO**, %struct._PerlIO*** %fio1601, align 8
  %tobool1602 = icmp ne %struct._PerlIO** %882, null
  br i1 %tobool1602, label %if.else1662, label %if.then1603

if.then1603:                                      ; preds = %do.body1600
  br label %do.body1604

do.body1604:                                      ; preds = %if.then1603
  br label %do.body1605

do.body1605:                                      ; preds = %do.body1604
  %883 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1606 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %883, i32 0, i32 22
  %aptr1607 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1606, i32 0, i32 2
  %884 = load i8*, i8** %aptr1607, align 8
  %885 = load i64, i64* %len2, align 8
  %add.ptr1608 = getelementptr inbounds i8, i8* %884, i64 %885
  %886 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1609 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %886, i32 0, i32 22
  %aend1610 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1609, i32 0, i32 3
  %887 = load i8*, i8** %aend1610, align 8
  %cmp1611 = icmp ugt i8* %add.ptr1608, %887
  br i1 %cmp1611, label %if.then1613, label %if.end1654

if.then1613:                                      ; preds = %do.body1605
  br label %do.body1614

do.body1614:                                      ; preds = %if.then1613
  %888 = load i64, i64* %len2, align 8
  %889 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1616 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %889, i32 0, i32 22
  %asiz1617 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1616, i32 0, i32 1
  %890 = load i64, i64* %asiz1617, align 8
  %add1618 = add i64 %888, %890
  %add1619 = add i64 %add1618, 8191
  %and1620 = and i64 %add1619, -8192
  %conv1621 = trunc i64 %and1620 to i32
  store i32 %conv1621, i32* %nsz1615, align 4
  %891 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1623 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %891, i32 0, i32 22
  %aptr1624 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1623, i32 0, i32 2
  %892 = load i8*, i8** %aptr1624, align 8
  %893 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1625 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %893, i32 0, i32 22
  %arena1626 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1625, i32 0, i32 0
  %894 = load i8*, i8** %arena1626, align 8
  %sub.ptr.lhs.cast1627 = ptrtoint i8* %892 to i64
  %sub.ptr.rhs.cast1628 = ptrtoint i8* %894 to i64
  %sub.ptr.sub1629 = sub i64 %sub.ptr.lhs.cast1627, %sub.ptr.rhs.cast1628
  %conv1630 = trunc i64 %sub.ptr.sub1629 to i32
  store i32 %conv1630, i32* %offset1622, align 4
  %895 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1631 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %895, i32 0, i32 22
  %arena1632 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1631, i32 0, i32 0
  %896 = load i8*, i8** %arena1632, align 8
  %897 = load i32, i32* %nsz1615, align 4
  %conv1633 = sext i32 %897 to i64
  %mul1634 = mul i64 %conv1633, 1
  %call1635 = call i8* @Perl_safesysrealloc(i8* %896, i64 %mul1634)
  %898 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1636 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %898, i32 0, i32 22
  %arena1637 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1636, i32 0, i32 0
  store i8* %call1635, i8** %arena1637, align 8
  %899 = load i32, i32* %nsz1615, align 4
  %conv1638 = sext i32 %899 to i64
  %900 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1639 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %900, i32 0, i32 22
  %asiz1640 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1639, i32 0, i32 1
  store i64 %conv1638, i64* %asiz1640, align 8
  %901 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1641 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %901, i32 0, i32 22
  %arena1642 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1641, i32 0, i32 0
  %902 = load i8*, i8** %arena1642, align 8
  %903 = load i32, i32* %offset1622, align 4
  %idx.ext1643 = sext i32 %903 to i64
  %add.ptr1644 = getelementptr inbounds i8, i8* %902, i64 %idx.ext1643
  %904 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1645 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %904, i32 0, i32 22
  %aptr1646 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1645, i32 0, i32 2
  store i8* %add.ptr1644, i8** %aptr1646, align 8
  %905 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1647 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %905, i32 0, i32 22
  %arena1648 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1647, i32 0, i32 0
  %906 = load i8*, i8** %arena1648, align 8
  %907 = load i32, i32* %nsz1615, align 4
  %idx.ext1649 = sext i32 %907 to i64
  %add.ptr1650 = getelementptr inbounds i8, i8* %906, i64 %idx.ext1649
  %908 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1651 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %908, i32 0, i32 22
  %aend1652 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1651, i32 0, i32 3
  store i8* %add.ptr1650, i8** %aend1652, align 8
  br label %do.end1653

do.end1653:                                       ; preds = %do.body1614
  br label %if.end1654

if.end1654:                                       ; preds = %do.end1653, %do.body1605
  br label %do.end1655

do.end1655:                                       ; preds = %if.end1654
  %909 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1656 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %909, i32 0, i32 22
  %aptr1657 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1656, i32 0, i32 2
  %910 = load i8*, i8** %aptr1657, align 8
  %911 = load i8*, i8** %pv, align 8
  %912 = load i64, i64* %len2, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %910, i8* align 1 %911, i64 %912, i1 false)
  %913 = load i64, i64* %len2, align 8
  %914 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1658 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %914, i32 0, i32 22
  %aptr1659 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1658, i32 0, i32 2
  %915 = load i8*, i8** %aptr1659, align 8
  %add.ptr1660 = getelementptr inbounds i8, i8* %915, i64 %913
  store i8* %add.ptr1660, i8** %aptr1659, align 8
  br label %do.end1661

do.end1661:                                       ; preds = %do.end1655
  br label %if.end1669

if.else1662:                                      ; preds = %do.body1600
  %916 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1663 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %916, i32 0, i32 24
  %917 = load %struct._PerlIO**, %struct._PerlIO*** %fio1663, align 8
  %918 = load i8*, i8** %pv, align 8
  %919 = load i64, i64* %len2, align 8
  %call1664 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %917, i8* %918, i64 %919)
  %920 = load i64, i64* %len2, align 8
  %cmp1665 = icmp ne i64 %call1664, %920
  br i1 %cmp1665, label %if.then1667, label %if.end1668

if.then1667:                                      ; preds = %if.else1662
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1668:                                       ; preds = %if.else1662
  br label %if.end1669

if.end1669:                                       ; preds = %if.end1668, %do.end1661
  br label %do.end1670

do.end1670:                                       ; preds = %if.end1669
  br label %if.end1671

if.end1671:                                       ; preds = %do.end1670, %if.end1597
  %921 = load i8, i8* %flags, align 1
  %conv1672 = zext i8 %921 to i32
  %and1673 = and i32 %conv1672, 128
  %tobool1674 = icmp ne i32 %and1673, 0
  br i1 %tobool1674, label %if.then1675, label %if.end2021

if.then1675:                                      ; preds = %if.end1671
  %922 = load i32, i32* %count, align 4
  %sub = sub nsw i32 %922, 1
  store i32 %sub, i32* %len3, align 4
  %923 = load i8, i8* %flags, align 1
  %conv1676 = zext i8 %923 to i32
  %and1677 = and i32 %conv1676, 16
  %tobool1678 = icmp ne i32 %and1677, 0
  br i1 %tobool1678, label %if.then1679, label %if.else1851

if.then1679:                                      ; preds = %if.then1675
  br label %do.body1680

do.body1680:                                      ; preds = %if.then1679
  %924 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder1681 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %924, i32 0, i32 12
  %925 = load i32, i32* %netorder1681, align 8
  %tobool1682 = icmp ne i32 %925, 0
  br i1 %tobool1682, label %if.then1683, label %if.else1767

if.then1683:                                      ; preds = %do.body1680
  %926 = load i32, i32* %len3, align 4
  %call1685 = call i32 @my_swap32(i32 %926)
  store i32 %call1685, i32* %y1684, align 4
  %927 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1686 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %927, i32 0, i32 24
  %928 = load %struct._PerlIO**, %struct._PerlIO*** %fio1686, align 8
  %tobool1687 = icmp ne %struct._PerlIO** %928, null
  br i1 %tobool1687, label %if.else1759, label %if.then1688

if.then1688:                                      ; preds = %if.then1683
  br label %do.body1689

do.body1689:                                      ; preds = %if.then1688
  br label %do.body1690

do.body1690:                                      ; preds = %do.body1689
  %929 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1691 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %929, i32 0, i32 22
  %aptr1692 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1691, i32 0, i32 2
  %930 = load i8*, i8** %aptr1692, align 8
  %add.ptr1693 = getelementptr inbounds i8, i8* %930, i64 4
  %931 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1694 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %931, i32 0, i32 22
  %aend1695 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1694, i32 0, i32 3
  %932 = load i8*, i8** %aend1695, align 8
  %cmp1696 = icmp ugt i8* %add.ptr1693, %932
  br i1 %cmp1696, label %if.then1698, label %if.end1739

if.then1698:                                      ; preds = %do.body1690
  br label %do.body1699

do.body1699:                                      ; preds = %if.then1698
  %933 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1701 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %933, i32 0, i32 22
  %asiz1702 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1701, i32 0, i32 1
  %934 = load i64, i64* %asiz1702, align 8
  %add1703 = add i64 4, %934
  %add1704 = add i64 %add1703, 8191
  %and1705 = and i64 %add1704, -8192
  %conv1706 = trunc i64 %and1705 to i32
  store i32 %conv1706, i32* %nsz1700, align 4
  %935 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1708 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %935, i32 0, i32 22
  %aptr1709 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1708, i32 0, i32 2
  %936 = load i8*, i8** %aptr1709, align 8
  %937 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1710 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %937, i32 0, i32 22
  %arena1711 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1710, i32 0, i32 0
  %938 = load i8*, i8** %arena1711, align 8
  %sub.ptr.lhs.cast1712 = ptrtoint i8* %936 to i64
  %sub.ptr.rhs.cast1713 = ptrtoint i8* %938 to i64
  %sub.ptr.sub1714 = sub i64 %sub.ptr.lhs.cast1712, %sub.ptr.rhs.cast1713
  %conv1715 = trunc i64 %sub.ptr.sub1714 to i32
  store i32 %conv1715, i32* %offset1707, align 4
  %939 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1716 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %939, i32 0, i32 22
  %arena1717 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1716, i32 0, i32 0
  %940 = load i8*, i8** %arena1717, align 8
  %941 = load i32, i32* %nsz1700, align 4
  %conv1718 = sext i32 %941 to i64
  %mul1719 = mul i64 %conv1718, 1
  %call1720 = call i8* @Perl_safesysrealloc(i8* %940, i64 %mul1719)
  %942 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1721 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %942, i32 0, i32 22
  %arena1722 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1721, i32 0, i32 0
  store i8* %call1720, i8** %arena1722, align 8
  %943 = load i32, i32* %nsz1700, align 4
  %conv1723 = sext i32 %943 to i64
  %944 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1724 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %944, i32 0, i32 22
  %asiz1725 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1724, i32 0, i32 1
  store i64 %conv1723, i64* %asiz1725, align 8
  %945 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1726 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %945, i32 0, i32 22
  %arena1727 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1726, i32 0, i32 0
  %946 = load i8*, i8** %arena1727, align 8
  %947 = load i32, i32* %offset1707, align 4
  %idx.ext1728 = sext i32 %947 to i64
  %add.ptr1729 = getelementptr inbounds i8, i8* %946, i64 %idx.ext1728
  %948 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1730 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %948, i32 0, i32 22
  %aptr1731 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1730, i32 0, i32 2
  store i8* %add.ptr1729, i8** %aptr1731, align 8
  %949 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1732 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %949, i32 0, i32 22
  %arena1733 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1732, i32 0, i32 0
  %950 = load i8*, i8** %arena1733, align 8
  %951 = load i32, i32* %nsz1700, align 4
  %idx.ext1734 = sext i32 %951 to i64
  %add.ptr1735 = getelementptr inbounds i8, i8* %950, i64 %idx.ext1734
  %952 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1736 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %952, i32 0, i32 22
  %aend1737 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1736, i32 0, i32 3
  store i8* %add.ptr1735, i8** %aend1737, align 8
  br label %do.end1738

do.end1738:                                       ; preds = %do.body1699
  br label %if.end1739

if.end1739:                                       ; preds = %do.end1738, %do.body1690
  br label %do.end1740

do.end1740:                                       ; preds = %if.end1739
  %953 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1741 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %953, i32 0, i32 22
  %aptr1742 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1741, i32 0, i32 2
  %954 = load i8*, i8** %aptr1742, align 8
  %955 = ptrtoint i8* %954 to i64
  %956 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1743 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %956, i32 0, i32 22
  %aptr1744 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1743, i32 0, i32 2
  %957 = load i8*, i8** %aptr1744, align 8
  %958 = ptrtoint i8* %957 to i64
  %and1745 = and i64 %958, -4
  %cmp1746 = icmp eq i64 %955, %and1745
  br i1 %cmp1746, label %if.then1748, label %if.else1751

if.then1748:                                      ; preds = %do.end1740
  %959 = load i32, i32* %y1684, align 4
  %960 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1749 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %960, i32 0, i32 22
  %aptr1750 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1749, i32 0, i32 2
  %961 = load i8*, i8** %aptr1750, align 8
  %962 = bitcast i8* %961 to i32*
  store i32 %959, i32* %962, align 4
  br label %if.end1754

if.else1751:                                      ; preds = %do.end1740
  %963 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1752 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %963, i32 0, i32 22
  %aptr1753 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1752, i32 0, i32 2
  %964 = load i8*, i8** %aptr1753, align 8
  %965 = bitcast i32* %y1684 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %964, i8* align 4 %965, i64 4, i1 false)
  br label %if.end1754

if.end1754:                                       ; preds = %if.else1751, %if.then1748
  %966 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1755 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %966, i32 0, i32 22
  %aptr1756 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1755, i32 0, i32 2
  %967 = load i8*, i8** %aptr1756, align 8
  %add.ptr1757 = getelementptr inbounds i8, i8* %967, i64 4
  store i8* %add.ptr1757, i8** %aptr1756, align 8
  br label %do.end1758

do.end1758:                                       ; preds = %if.end1754
  br label %if.end1766

if.else1759:                                      ; preds = %if.then1683
  %968 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1760 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %968, i32 0, i32 24
  %969 = load %struct._PerlIO**, %struct._PerlIO*** %fio1760, align 8
  %970 = bitcast i32* %y1684 to i8*
  %call1761 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %969, i8* %970, i64 4)
  %cmp1762 = icmp ne i64 %call1761, 4
  br i1 %cmp1762, label %if.then1764, label %if.end1765

if.then1764:                                      ; preds = %if.else1759
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1765:                                       ; preds = %if.else1759
  br label %if.end1766

if.end1766:                                       ; preds = %if.end1765, %do.end1758
  br label %if.end1849

if.else1767:                                      ; preds = %do.body1680
  %971 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1768 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %971, i32 0, i32 24
  %972 = load %struct._PerlIO**, %struct._PerlIO*** %fio1768, align 8
  %tobool1769 = icmp ne %struct._PerlIO** %972, null
  br i1 %tobool1769, label %if.else1841, label %if.then1770

if.then1770:                                      ; preds = %if.else1767
  br label %do.body1771

do.body1771:                                      ; preds = %if.then1770
  br label %do.body1772

do.body1772:                                      ; preds = %do.body1771
  %973 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1773 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %973, i32 0, i32 22
  %aptr1774 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1773, i32 0, i32 2
  %974 = load i8*, i8** %aptr1774, align 8
  %add.ptr1775 = getelementptr inbounds i8, i8* %974, i64 4
  %975 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1776 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %975, i32 0, i32 22
  %aend1777 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1776, i32 0, i32 3
  %976 = load i8*, i8** %aend1777, align 8
  %cmp1778 = icmp ugt i8* %add.ptr1775, %976
  br i1 %cmp1778, label %if.then1780, label %if.end1821

if.then1780:                                      ; preds = %do.body1772
  br label %do.body1781

do.body1781:                                      ; preds = %if.then1780
  %977 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1783 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %977, i32 0, i32 22
  %asiz1784 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1783, i32 0, i32 1
  %978 = load i64, i64* %asiz1784, align 8
  %add1785 = add i64 4, %978
  %add1786 = add i64 %add1785, 8191
  %and1787 = and i64 %add1786, -8192
  %conv1788 = trunc i64 %and1787 to i32
  store i32 %conv1788, i32* %nsz1782, align 4
  %979 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1790 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %979, i32 0, i32 22
  %aptr1791 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1790, i32 0, i32 2
  %980 = load i8*, i8** %aptr1791, align 8
  %981 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1792 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %981, i32 0, i32 22
  %arena1793 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1792, i32 0, i32 0
  %982 = load i8*, i8** %arena1793, align 8
  %sub.ptr.lhs.cast1794 = ptrtoint i8* %980 to i64
  %sub.ptr.rhs.cast1795 = ptrtoint i8* %982 to i64
  %sub.ptr.sub1796 = sub i64 %sub.ptr.lhs.cast1794, %sub.ptr.rhs.cast1795
  %conv1797 = trunc i64 %sub.ptr.sub1796 to i32
  store i32 %conv1797, i32* %offset1789, align 4
  %983 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1798 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %983, i32 0, i32 22
  %arena1799 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1798, i32 0, i32 0
  %984 = load i8*, i8** %arena1799, align 8
  %985 = load i32, i32* %nsz1782, align 4
  %conv1800 = sext i32 %985 to i64
  %mul1801 = mul i64 %conv1800, 1
  %call1802 = call i8* @Perl_safesysrealloc(i8* %984, i64 %mul1801)
  %986 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1803 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %986, i32 0, i32 22
  %arena1804 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1803, i32 0, i32 0
  store i8* %call1802, i8** %arena1804, align 8
  %987 = load i32, i32* %nsz1782, align 4
  %conv1805 = sext i32 %987 to i64
  %988 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1806 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %988, i32 0, i32 22
  %asiz1807 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1806, i32 0, i32 1
  store i64 %conv1805, i64* %asiz1807, align 8
  %989 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1808 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %989, i32 0, i32 22
  %arena1809 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1808, i32 0, i32 0
  %990 = load i8*, i8** %arena1809, align 8
  %991 = load i32, i32* %offset1789, align 4
  %idx.ext1810 = sext i32 %991 to i64
  %add.ptr1811 = getelementptr inbounds i8, i8* %990, i64 %idx.ext1810
  %992 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1812 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %992, i32 0, i32 22
  %aptr1813 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1812, i32 0, i32 2
  store i8* %add.ptr1811, i8** %aptr1813, align 8
  %993 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1814 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %993, i32 0, i32 22
  %arena1815 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1814, i32 0, i32 0
  %994 = load i8*, i8** %arena1815, align 8
  %995 = load i32, i32* %nsz1782, align 4
  %idx.ext1816 = sext i32 %995 to i64
  %add.ptr1817 = getelementptr inbounds i8, i8* %994, i64 %idx.ext1816
  %996 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1818 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %996, i32 0, i32 22
  %aend1819 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1818, i32 0, i32 3
  store i8* %add.ptr1817, i8** %aend1819, align 8
  br label %do.end1820

do.end1820:                                       ; preds = %do.body1781
  br label %if.end1821

if.end1821:                                       ; preds = %do.end1820, %do.body1772
  br label %do.end1822

do.end1822:                                       ; preds = %if.end1821
  %997 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1823 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %997, i32 0, i32 22
  %aptr1824 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1823, i32 0, i32 2
  %998 = load i8*, i8** %aptr1824, align 8
  %999 = ptrtoint i8* %998 to i64
  %1000 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1825 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1000, i32 0, i32 22
  %aptr1826 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1825, i32 0, i32 2
  %1001 = load i8*, i8** %aptr1826, align 8
  %1002 = ptrtoint i8* %1001 to i64
  %and1827 = and i64 %1002, -4
  %cmp1828 = icmp eq i64 %999, %and1827
  br i1 %cmp1828, label %if.then1830, label %if.else1833

if.then1830:                                      ; preds = %do.end1822
  %1003 = load i32, i32* %len3, align 4
  %1004 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1831 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1004, i32 0, i32 22
  %aptr1832 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1831, i32 0, i32 2
  %1005 = load i8*, i8** %aptr1832, align 8
  %1006 = bitcast i8* %1005 to i32*
  store i32 %1003, i32* %1006, align 4
  br label %if.end1836

if.else1833:                                      ; preds = %do.end1822
  %1007 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1834 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1007, i32 0, i32 22
  %aptr1835 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1834, i32 0, i32 2
  %1008 = load i8*, i8** %aptr1835, align 8
  %1009 = bitcast i32* %len3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1008, i8* align 4 %1009, i64 4, i1 false)
  br label %if.end1836

if.end1836:                                       ; preds = %if.else1833, %if.then1830
  %1010 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1837 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1010, i32 0, i32 22
  %aptr1838 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1837, i32 0, i32 2
  %1011 = load i8*, i8** %aptr1838, align 8
  %add.ptr1839 = getelementptr inbounds i8, i8* %1011, i64 4
  store i8* %add.ptr1839, i8** %aptr1838, align 8
  br label %do.end1840

do.end1840:                                       ; preds = %if.end1836
  br label %if.end1848

if.else1841:                                      ; preds = %if.else1767
  %1012 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1842 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1012, i32 0, i32 24
  %1013 = load %struct._PerlIO**, %struct._PerlIO*** %fio1842, align 8
  %1014 = bitcast i32* %len3 to i8*
  %call1843 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %1013, i8* %1014, i64 4)
  %cmp1844 = icmp ne i64 %call1843, 4
  br i1 %cmp1844, label %if.then1846, label %if.end1847

if.then1846:                                      ; preds = %if.else1841
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1847:                                       ; preds = %if.else1841
  br label %if.end1848

if.end1848:                                       ; preds = %if.end1847, %do.end1840
  br label %if.end1849

if.end1849:                                       ; preds = %if.end1848, %if.end1766
  br label %do.end1850

do.end1850:                                       ; preds = %if.end1849
  br label %if.end1925

if.else1851:                                      ; preds = %if.then1675
  %1015 = load i32, i32* %len3, align 4
  %conv1853 = trunc i32 %1015 to i8
  store i8 %conv1853, i8* %clen1852, align 1
  br label %do.body1854

do.body1854:                                      ; preds = %if.else1851
  %1016 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1855 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1016, i32 0, i32 24
  %1017 = load %struct._PerlIO**, %struct._PerlIO*** %fio1855, align 8
  %tobool1856 = icmp ne %struct._PerlIO** %1017, null
  br i1 %tobool1856, label %if.else1915, label %if.then1857

if.then1857:                                      ; preds = %do.body1854
  br label %do.body1858

do.body1858:                                      ; preds = %if.then1857
  %1018 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1859 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1018, i32 0, i32 22
  %aptr1860 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1859, i32 0, i32 2
  %1019 = load i8*, i8** %aptr1860, align 8
  %1020 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1861 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1020, i32 0, i32 22
  %aend1862 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1861, i32 0, i32 3
  %1021 = load i8*, i8** %aend1862, align 8
  %cmp1863 = icmp ult i8* %1019, %1021
  br i1 %cmp1863, label %if.then1865, label %if.else1869

if.then1865:                                      ; preds = %do.body1858
  %1022 = load i8, i8* %clen1852, align 1
  %1023 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1866 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1023, i32 0, i32 22
  %aptr1867 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1866, i32 0, i32 2
  %1024 = load i8*, i8** %aptr1867, align 8
  %incdec.ptr1868 = getelementptr inbounds i8, i8* %1024, i32 1
  store i8* %incdec.ptr1868, i8** %aptr1867, align 8
  store i8 %1022, i8* %1024, align 1
  br label %if.end1913

if.else1869:                                      ; preds = %do.body1858
  br label %do.body1870

do.body1870:                                      ; preds = %if.else1869
  %1025 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1872 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1025, i32 0, i32 22
  %asiz1873 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1872, i32 0, i32 1
  %1026 = load i64, i64* %asiz1873, align 8
  %add1874 = add i64 1, %1026
  %add1875 = add i64 %add1874, 8191
  %and1876 = and i64 %add1875, -8192
  %conv1877 = trunc i64 %and1876 to i32
  store i32 %conv1877, i32* %nsz1871, align 4
  %1027 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1879 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1027, i32 0, i32 22
  %aptr1880 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1879, i32 0, i32 2
  %1028 = load i8*, i8** %aptr1880, align 8
  %1029 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1881 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1029, i32 0, i32 22
  %arena1882 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1881, i32 0, i32 0
  %1030 = load i8*, i8** %arena1882, align 8
  %sub.ptr.lhs.cast1883 = ptrtoint i8* %1028 to i64
  %sub.ptr.rhs.cast1884 = ptrtoint i8* %1030 to i64
  %sub.ptr.sub1885 = sub i64 %sub.ptr.lhs.cast1883, %sub.ptr.rhs.cast1884
  %conv1886 = trunc i64 %sub.ptr.sub1885 to i32
  store i32 %conv1886, i32* %offset1878, align 4
  %1031 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1887 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1031, i32 0, i32 22
  %arena1888 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1887, i32 0, i32 0
  %1032 = load i8*, i8** %arena1888, align 8
  %1033 = load i32, i32* %nsz1871, align 4
  %conv1889 = sext i32 %1033 to i64
  %mul1890 = mul i64 %conv1889, 1
  %call1891 = call i8* @Perl_safesysrealloc(i8* %1032, i64 %mul1890)
  %1034 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1892 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1034, i32 0, i32 22
  %arena1893 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1892, i32 0, i32 0
  store i8* %call1891, i8** %arena1893, align 8
  %1035 = load i32, i32* %nsz1871, align 4
  %conv1894 = sext i32 %1035 to i64
  %1036 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1895 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1036, i32 0, i32 22
  %asiz1896 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1895, i32 0, i32 1
  store i64 %conv1894, i64* %asiz1896, align 8
  %1037 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1897 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1037, i32 0, i32 22
  %arena1898 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1897, i32 0, i32 0
  %1038 = load i8*, i8** %arena1898, align 8
  %1039 = load i32, i32* %offset1878, align 4
  %idx.ext1899 = sext i32 %1039 to i64
  %add.ptr1900 = getelementptr inbounds i8, i8* %1038, i64 %idx.ext1899
  %1040 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1901 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1040, i32 0, i32 22
  %aptr1902 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1901, i32 0, i32 2
  store i8* %add.ptr1900, i8** %aptr1902, align 8
  %1041 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1903 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1041, i32 0, i32 22
  %arena1904 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1903, i32 0, i32 0
  %1042 = load i8*, i8** %arena1904, align 8
  %1043 = load i32, i32* %nsz1871, align 4
  %idx.ext1905 = sext i32 %1043 to i64
  %add.ptr1906 = getelementptr inbounds i8, i8* %1042, i64 %idx.ext1905
  %1044 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1907 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1044, i32 0, i32 22
  %aend1908 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1907, i32 0, i32 3
  store i8* %add.ptr1906, i8** %aend1908, align 8
  br label %do.end1909

do.end1909:                                       ; preds = %do.body1870
  %1045 = load i8, i8* %clen1852, align 1
  %1046 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1910 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1046, i32 0, i32 22
  %aptr1911 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1910, i32 0, i32 2
  %1047 = load i8*, i8** %aptr1911, align 8
  %incdec.ptr1912 = getelementptr inbounds i8, i8* %1047, i32 1
  store i8* %incdec.ptr1912, i8** %aptr1911, align 8
  store i8 %1045, i8* %1047, align 1
  br label %if.end1913

if.end1913:                                       ; preds = %do.end1909, %if.then1865
  br label %do.end1914

do.end1914:                                       ; preds = %if.end1913
  br label %if.end1923

if.else1915:                                      ; preds = %do.body1854
  %1048 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1916 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1048, i32 0, i32 24
  %1049 = load %struct._PerlIO**, %struct._PerlIO*** %fio1916, align 8
  %1050 = load i8, i8* %clen1852, align 1
  %conv1917 = zext i8 %1050 to i32
  %call1918 = call i32 @PerlIO_putc(%struct._PerlIO** %1049, i32 %conv1917)
  %cmp1919 = icmp eq i32 %call1918, -1
  br i1 %cmp1919, label %if.then1921, label %if.end1922

if.then1921:                                      ; preds = %if.else1915
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1922:                                       ; preds = %if.else1915
  br label %if.end1923

if.end1923:                                       ; preds = %if.end1922, %do.end1914
  br label %do.end1924

do.end1924:                                       ; preds = %if.end1923
  br label %if.end1925

if.end1925:                                       ; preds = %do.end1924, %do.end1850
  store i32 1, i32* %i, align 4
  br label %for.cond1926

for.cond1926:                                     ; preds = %for.inc2018, %if.end1925
  %1051 = load i32, i32* %i, align 4
  %1052 = load i32, i32* %count, align 4
  %cmp1927 = icmp slt i32 %1051, %1052
  br i1 %cmp1927, label %for.body1929, label %for.end2020

for.body1929:                                     ; preds = %for.cond1926
  %1053 = load %struct.sv**, %struct.sv*** %ary, align 8
  %1054 = load i32, i32* %i, align 4
  %idxprom1930 = sext i32 %1054 to i64
  %arrayidx1931 = getelementptr inbounds %struct.sv*, %struct.sv** %1053, i64 %idxprom1930
  %1055 = load %struct.sv*, %struct.sv** %arrayidx1931, align 8
  %1056 = ptrtoint %struct.sv* %1055 to i64
  %and1932 = and i64 %1056, 4294967295
  %conv1933 = trunc i64 %and1932 to i32
  %call1934 = call i32 @my_swap32(i32 %conv1933)
  store i32 %call1934, i32* %tagval, align 4
  br label %do.body1935

do.body1935:                                      ; preds = %for.body1929
  %1057 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1936 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1057, i32 0, i32 24
  %1058 = load %struct._PerlIO**, %struct._PerlIO*** %fio1936, align 8
  %tobool1937 = icmp ne %struct._PerlIO** %1058, null
  br i1 %tobool1937, label %if.else2009, label %if.then1938

if.then1938:                                      ; preds = %do.body1935
  br label %do.body1939

do.body1939:                                      ; preds = %if.then1938
  br label %do.body1940

do.body1940:                                      ; preds = %do.body1939
  %1059 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1941 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1059, i32 0, i32 22
  %aptr1942 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1941, i32 0, i32 2
  %1060 = load i8*, i8** %aptr1942, align 8
  %add.ptr1943 = getelementptr inbounds i8, i8* %1060, i64 4
  %1061 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1944 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1061, i32 0, i32 22
  %aend1945 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1944, i32 0, i32 3
  %1062 = load i8*, i8** %aend1945, align 8
  %cmp1946 = icmp ugt i8* %add.ptr1943, %1062
  br i1 %cmp1946, label %if.then1948, label %if.end1989

if.then1948:                                      ; preds = %do.body1940
  br label %do.body1949

do.body1949:                                      ; preds = %if.then1948
  %1063 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1951 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1063, i32 0, i32 22
  %asiz1952 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1951, i32 0, i32 1
  %1064 = load i64, i64* %asiz1952, align 8
  %add1953 = add i64 4, %1064
  %add1954 = add i64 %add1953, 8191
  %and1955 = and i64 %add1954, -8192
  %conv1956 = trunc i64 %and1955 to i32
  store i32 %conv1956, i32* %nsz1950, align 4
  %1065 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1958 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1065, i32 0, i32 22
  %aptr1959 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1958, i32 0, i32 2
  %1066 = load i8*, i8** %aptr1959, align 8
  %1067 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1960 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1067, i32 0, i32 22
  %arena1961 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1960, i32 0, i32 0
  %1068 = load i8*, i8** %arena1961, align 8
  %sub.ptr.lhs.cast1962 = ptrtoint i8* %1066 to i64
  %sub.ptr.rhs.cast1963 = ptrtoint i8* %1068 to i64
  %sub.ptr.sub1964 = sub i64 %sub.ptr.lhs.cast1962, %sub.ptr.rhs.cast1963
  %conv1965 = trunc i64 %sub.ptr.sub1964 to i32
  store i32 %conv1965, i32* %offset1957, align 4
  %1069 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1966 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1069, i32 0, i32 22
  %arena1967 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1966, i32 0, i32 0
  %1070 = load i8*, i8** %arena1967, align 8
  %1071 = load i32, i32* %nsz1950, align 4
  %conv1968 = sext i32 %1071 to i64
  %mul1969 = mul i64 %conv1968, 1
  %call1970 = call i8* @Perl_safesysrealloc(i8* %1070, i64 %mul1969)
  %1072 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1971 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1072, i32 0, i32 22
  %arena1972 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1971, i32 0, i32 0
  store i8* %call1970, i8** %arena1972, align 8
  %1073 = load i32, i32* %nsz1950, align 4
  %conv1973 = sext i32 %1073 to i64
  %1074 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1974 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1074, i32 0, i32 22
  %asiz1975 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1974, i32 0, i32 1
  store i64 %conv1973, i64* %asiz1975, align 8
  %1075 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1976 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1075, i32 0, i32 22
  %arena1977 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1976, i32 0, i32 0
  %1076 = load i8*, i8** %arena1977, align 8
  %1077 = load i32, i32* %offset1957, align 4
  %idx.ext1978 = sext i32 %1077 to i64
  %add.ptr1979 = getelementptr inbounds i8, i8* %1076, i64 %idx.ext1978
  %1078 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1980 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1078, i32 0, i32 22
  %aptr1981 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1980, i32 0, i32 2
  store i8* %add.ptr1979, i8** %aptr1981, align 8
  %1079 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1982 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1079, i32 0, i32 22
  %arena1983 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1982, i32 0, i32 0
  %1080 = load i8*, i8** %arena1983, align 8
  %1081 = load i32, i32* %nsz1950, align 4
  %idx.ext1984 = sext i32 %1081 to i64
  %add.ptr1985 = getelementptr inbounds i8, i8* %1080, i64 %idx.ext1984
  %1082 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1986 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1082, i32 0, i32 22
  %aend1987 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1986, i32 0, i32 3
  store i8* %add.ptr1985, i8** %aend1987, align 8
  br label %do.end1988

do.end1988:                                       ; preds = %do.body1949
  br label %if.end1989

if.end1989:                                       ; preds = %do.end1988, %do.body1940
  br label %do.end1990

do.end1990:                                       ; preds = %if.end1989
  %1083 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1991 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1083, i32 0, i32 22
  %aptr1992 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1991, i32 0, i32 2
  %1084 = load i8*, i8** %aptr1992, align 8
  %1085 = ptrtoint i8* %1084 to i64
  %1086 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1993 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1086, i32 0, i32 22
  %aptr1994 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1993, i32 0, i32 2
  %1087 = load i8*, i8** %aptr1994, align 8
  %1088 = ptrtoint i8* %1087 to i64
  %and1995 = and i64 %1088, -4
  %cmp1996 = icmp eq i64 %1085, %and1995
  br i1 %cmp1996, label %if.then1998, label %if.else2001

if.then1998:                                      ; preds = %do.end1990
  %1089 = load i32, i32* %tagval, align 4
  %1090 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1999 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1090, i32 0, i32 22
  %aptr2000 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1999, i32 0, i32 2
  %1091 = load i8*, i8** %aptr2000, align 8
  %1092 = bitcast i8* %1091 to i32*
  store i32 %1089, i32* %1092, align 4
  br label %if.end2004

if.else2001:                                      ; preds = %do.end1990
  %1093 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2002 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1093, i32 0, i32 22
  %aptr2003 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2002, i32 0, i32 2
  %1094 = load i8*, i8** %aptr2003, align 8
  %1095 = bitcast i32* %tagval to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1094, i8* align 4 %1095, i64 4, i1 false)
  br label %if.end2004

if.end2004:                                       ; preds = %if.else2001, %if.then1998
  %1096 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2005 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1096, i32 0, i32 22
  %aptr2006 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2005, i32 0, i32 2
  %1097 = load i8*, i8** %aptr2006, align 8
  %add.ptr2007 = getelementptr inbounds i8, i8* %1097, i64 4
  store i8* %add.ptr2007, i8** %aptr2006, align 8
  br label %do.end2008

do.end2008:                                       ; preds = %if.end2004
  br label %if.end2016

if.else2009:                                      ; preds = %do.body1935
  %1098 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio2010 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1098, i32 0, i32 24
  %1099 = load %struct._PerlIO**, %struct._PerlIO*** %fio2010, align 8
  %1100 = bitcast i32* %tagval to i8*
  %call2011 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %1099, i8* %1100, i64 4)
  %cmp2012 = icmp ne i64 %call2011, 4
  br i1 %cmp2012, label %if.then2014, label %if.end2015

if.then2014:                                      ; preds = %if.else2009
  store i32 -1, i32* %retval, align 4
  br label %return

if.end2015:                                       ; preds = %if.else2009
  br label %if.end2016

if.end2016:                                       ; preds = %if.end2015, %do.end2008
  br label %do.end2017

do.end2017:                                       ; preds = %if.end2016
  br label %for.inc2018

for.inc2018:                                      ; preds = %do.end2017
  %1101 = load i32, i32* %i, align 4
  %inc2019 = add nsw i32 %1101, 1
  store i32 %inc2019, i32* %i, align 4
  br label %for.cond1926

for.end2020:                                      ; preds = %for.cond1926
  br label %if.end2021

if.end2021:                                       ; preds = %for.end2020, %if.end1671
  %1102 = load i32, i32* %count, align 4
  %cmp2022 = icmp sgt i32 %1102, 1
  br i1 %cmp2022, label %if.then2024, label %if.end2027

if.then2024:                                      ; preds = %if.end2021
  %1103 = load %struct.av*, %struct.av** %av, align 8
  %sv_any2025 = getelementptr inbounds %struct.av, %struct.av* %1103, i32 0, i32 0
  %1104 = load %struct.xpvav*, %struct.xpvav** %sv_any2025, align 8
  %xav_fill2026 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %1104, i32 0, i32 2
  store i64 0, i64* %xav_fill2026, align 8
  br label %if.end2027

if.end2027:                                       ; preds = %if.then2024, %if.end2021
  %1105 = load %struct.av*, %struct.av** %av, align 8
  call void @Perl_av_undef(%struct.av* %1105)
  %1106 = load %struct.av*, %struct.av** %av, align 8
  %1107 = bitcast %struct.av* %1106 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %1107)
  %1108 = load i32, i32* %obj_type, align 4
  %cmp2028 = icmp eq i32 %1108, 3
  br i1 %cmp2028, label %if.then2030, label %if.end2055

if.then2030:                                      ; preds = %if.end2027
  %1109 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %1110 = load i8, i8* %mtype, align 1
  %conv2031 = sext i8 %1110 to i32
  %call2032 = call %struct.magic* @Perl_mg_find(%struct.sv* %1109, i32 %conv2031)
  store %struct.magic* %call2032, %struct.magic** %mg, align 8
  %tobool2033 = icmp ne %struct.magic* %call2032, null
  br i1 %tobool2033, label %if.end2050, label %if.then2034

if.then2034:                                      ; preds = %if.then2030
  %1111 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags2035 = getelementptr inbounds %struct.sv, %struct.sv* %1111, i32 0, i32 2
  %1112 = load i32, i32* %sv_flags2035, align 4
  %and2036 = and i32 %1112, 255
  store i32 %and2036, i32* %svt, align 4
  br label %do.body2037

do.body2037:                                      ; preds = %if.then2034
  %1113 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty2038 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1113, i32 0, i32 19
  store i32 1, i32* %s_dirty2038, align 8
  %1114 = load i8, i8* %mtype, align 1
  %conv2039 = sext i8 %1114 to i32
  %1115 = load i32, i32* %svt, align 4
  %cmp2040 = icmp eq i32 %1115, 12
  br i1 %cmp2040, label %cond.true2042, label %cond.false2043

cond.true2042:                                    ; preds = %do.body2037
  br label %cond.end2047

cond.false2043:                                   ; preds = %do.body2037
  %1116 = load i32, i32* %svt, align 4
  %cmp2044 = icmp eq i32 %1116, 11
  %1117 = zext i1 %cmp2044 to i64
  %cond2046 = select i1 %cmp2044, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0)
  br label %cond.end2047

cond.end2047:                                     ; preds = %cond.false2043, %cond.true2042
  %cond2048 = phi i8* [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), %cond.true2042 ], [ %cond2046, %cond.false2043 ]
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.32, i64 0, i64 0), i32 %conv2039, i8* %cond2048)
  br label %do.end2049

do.end2049:                                       ; preds = %cond.end2047
  br label %if.end2050

if.end2050:                                       ; preds = %do.end2049, %if.then2030
  %1118 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %1119 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_obj = getelementptr inbounds %struct.magic, %struct.magic* %1119, i32 0, i32 6
  %1120 = load %struct.sv*, %struct.sv** %mg_obj, align 8
  %call2051 = call i32 @store(%struct.stcxt* %1118, %struct.sv* %1120)
  store i32 %call2051, i32* %ret, align 4
  %tobool2052 = icmp ne i32 %call2051, 0
  br i1 %tobool2052, label %if.then2053, label %if.end2054

if.then2053:                                      ; preds = %if.end2050
  %1121 = load i32, i32* %ret, align 4
  store i32 %1121, i32* %retval, align 4
  br label %return

if.end2054:                                       ; preds = %if.end2050
  br label %if.end2055

if.end2055:                                       ; preds = %if.end2054, %if.end2027
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end2055, %if.then2053, %if.then2014, %if.then1921, %if.then1846, %if.then1764, %if.then1667, %if.then1593, %if.then1518, %if.then1436, %if.then1342, %if.then1264, %if.then1190, %if.then1108, %if.then1014, %if.then940, %if.then858, %if.then763, %if.then690, %if.then616, %if.then545, %if.then411, %if.then404, %if.then331, %if.then257, %if.then186, %if.end
  %1122 = load i32, i32* %retval, align 4
  ret i32 %1122
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @known_class(%struct.stcxt* %cxt, i8* %name, i32 %len, i32* %classnum) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %name.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %classnum.addr = alloca i32*, align 8
  %svh = alloca %struct.sv**, align 8
  %hclass = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i32* %classnum, i32** %classnum.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hclass1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 7
  %1 = load %struct.hv*, %struct.hv** %hclass1, align 8
  store %struct.hv* %1, %struct.hv** %hclass, align 8
  %2 = load %struct.hv*, %struct.hv** %hclass, align 8
  %3 = load i8*, i8** %name.addr, align 8
  %4 = load i32, i32* %len.addr, align 4
  %call = call i8* @Perl_hv_common_key_len(%struct.hv* %2, i8* %3, i32 %4, i32 32, %struct.sv* null, i32 0)
  %5 = bitcast i8* %call to %struct.sv**
  store %struct.sv** %5, %struct.sv*** %svh, align 8
  %6 = load %struct.sv**, %struct.sv*** %svh, align 8
  %tobool = icmp ne %struct.sv** %6, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load %struct.sv**, %struct.sv*** %svh, align 8
  %8 = load %struct.sv*, %struct.sv** %7, align 8
  %9 = ptrtoint %struct.sv* %8 to i64
  %and = and i64 %9, 4294967295
  %conv = trunc i64 %and to i32
  %10 = load i32*, i32** %classnum.addr, align 8
  store i32 %conv, i32* %10, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %classnum2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 11
  %12 = load i64, i64* %classnum2, align 8
  %inc = add nsw i64 %12, 1
  store i64 %inc, i64* %classnum2, align 8
  %13 = load %struct.hv*, %struct.hv** %hclass, align 8
  %14 = load i8*, i8** %name.addr, align 8
  %15 = load i32, i32* %len.addr, align 4
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %classnum3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 11
  %17 = load i64, i64* %classnum3, align 8
  %18 = inttoptr i64 %17 to %struct.sv*
  %call4 = call i8* @Perl_hv_common_key_len(%struct.hv* %13, i8* %14, i32 %15, i32 36, %struct.sv* %18, i32 0)
  %19 = bitcast i8* %call4 to %struct.sv**
  %tobool5 = icmp ne %struct.sv** %19, null
  br i1 %tobool5, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.then6
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %20, i32 0, i32 19
  store i32 1, i32* %s_dirty, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.36, i64 0, i64 0))
  br label %do.end

do.end:                                           ; preds = %do.body
  br label %if.end7

if.end7:                                          ; preds = %do.end, %if.end
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %classnum8 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 11
  %22 = load i64, i64* %classnum8, align 8
  %conv9 = trunc i64 %22 to i32
  %23 = load i32*, i32** %classnum.addr, align 8
  store i32 %conv9, i32* %23, align 4
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end7, %if.then
  %24 = load i32, i32* %retval, align 4
  ret i32 %24
}

declare dso_local i8* @Perl_hv_common_key_len(%struct.hv*, i8*, i32, i32, %struct.sv*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @pkg_fetchmeth(%struct.hv* %cache, %struct.hv* %pkg, i8* %method) #0 {
entry:
  %cache.addr = alloca %struct.hv*, align 8
  %pkg.addr = alloca %struct.hv*, align 8
  %method.addr = alloca i8*, align 8
  %gv = alloca %struct.gv*, align 8
  %sv = alloca %struct.sv*, align 8
  %hvname = alloca i8*, align 8
  store %struct.hv* %cache, %struct.hv** %cache.addr, align 8
  store %struct.hv* %pkg, %struct.hv** %pkg.addr, align 8
  store i8* %method, i8** %method.addr, align 8
  %0 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 33554432
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %cond.false54

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %2, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %3 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %4 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %4, i32 0, i32 0
  %5 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %5, i32 0, i32 3
  %6 = load i64, i64* %xhv_max, align 8
  %add = add i64 %6, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %3, i64 %add
  %7 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %7, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %8 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool1 = icmp ne %struct.hek* %8, null
  br i1 %tobool1, label %land.lhs.true2, label %cond.false54

land.lhs.true2:                                   ; preds = %land.lhs.true
  %9 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u3 = getelementptr inbounds %struct.hv, %struct.hv* %9, i32 0, i32 3
  %svu_hash4 = bitcast %union.anon.4* %sv_u3 to %struct.he***
  %10 = load %struct.he**, %struct.he*** %svu_hash4, align 8
  %11 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any5 = getelementptr inbounds %struct.hv, %struct.hv* %11, i32 0, i32 0
  %12 = load %struct.xpvhv*, %struct.xpvhv** %sv_any5, align 8
  %xhv_max6 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %12, i32 0, i32 3
  %13 = load i64, i64* %xhv_max6, align 8
  %add7 = add i64 %13, 1
  %arrayidx8 = getelementptr inbounds %struct.he*, %struct.he** %10, i64 %add7
  %14 = bitcast %struct.he** %arrayidx8 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %14, i32 0, i32 4
  %15 = load i32, i32* %xhv_name_count, align 4
  %tobool9 = icmp ne i32 %15, 0
  br i1 %tobool9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  %16 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u10 = getelementptr inbounds %struct.hv, %struct.hv* %16, i32 0, i32 3
  %svu_hash11 = bitcast %union.anon.4* %sv_u10 to %struct.he***
  %17 = load %struct.he**, %struct.he*** %svu_hash11, align 8
  %18 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any12 = getelementptr inbounds %struct.hv, %struct.hv* %18, i32 0, i32 0
  %19 = load %struct.xpvhv*, %struct.xpvhv** %sv_any12, align 8
  %xhv_max13 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %19, i32 0, i32 3
  %20 = load i64, i64* %xhv_max13, align 8
  %add14 = add i64 %20, 1
  %arrayidx15 = getelementptr inbounds %struct.he*, %struct.he** %17, i64 %add14
  %21 = bitcast %struct.he** %arrayidx15 to %struct.xpvhv_aux*
  %xhv_name_u16 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %21, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u16 to %struct.hek***
  %22 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %23 = load %struct.hek*, %struct.hek** %22, align 8
  %tobool17 = icmp ne %struct.hek* %23, null
  br i1 %tobool17, label %cond.true27, label %cond.false54

cond.false:                                       ; preds = %land.lhs.true2
  %24 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u18 = getelementptr inbounds %struct.hv, %struct.hv* %24, i32 0, i32 3
  %svu_hash19 = bitcast %union.anon.4* %sv_u18 to %struct.he***
  %25 = load %struct.he**, %struct.he*** %svu_hash19, align 8
  %26 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any20 = getelementptr inbounds %struct.hv, %struct.hv* %26, i32 0, i32 0
  %27 = load %struct.xpvhv*, %struct.xpvhv** %sv_any20, align 8
  %xhv_max21 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %27, i32 0, i32 3
  %28 = load i64, i64* %xhv_max21, align 8
  %add22 = add i64 %28, 1
  %arrayidx23 = getelementptr inbounds %struct.he*, %struct.he** %25, i64 %add22
  %29 = bitcast %struct.he** %arrayidx23 to %struct.xpvhv_aux*
  %xhv_name_u24 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %29, i32 0, i32 0
  %xhvnameu_name25 = bitcast %union._xhvnameu* %xhv_name_u24 to %struct.hek**
  %30 = load %struct.hek*, %struct.hek** %xhvnameu_name25, align 8
  %tobool26 = icmp ne %struct.hek* %30, null
  br i1 %tobool26, label %cond.true27, label %cond.false54

cond.true27:                                      ; preds = %cond.false, %cond.true
  %31 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u28 = getelementptr inbounds %struct.hv, %struct.hv* %31, i32 0, i32 3
  %svu_hash29 = bitcast %union.anon.4* %sv_u28 to %struct.he***
  %32 = load %struct.he**, %struct.he*** %svu_hash29, align 8
  %33 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any30 = getelementptr inbounds %struct.hv, %struct.hv* %33, i32 0, i32 0
  %34 = load %struct.xpvhv*, %struct.xpvhv** %sv_any30, align 8
  %xhv_max31 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %34, i32 0, i32 3
  %35 = load i64, i64* %xhv_max31, align 8
  %add32 = add i64 %35, 1
  %arrayidx33 = getelementptr inbounds %struct.he*, %struct.he** %32, i64 %add32
  %36 = bitcast %struct.he** %arrayidx33 to %struct.xpvhv_aux*
  %xhv_name_count34 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %36, i32 0, i32 4
  %37 = load i32, i32* %xhv_name_count34, align 4
  %tobool35 = icmp ne i32 %37, 0
  br i1 %tobool35, label %cond.true36, label %cond.false45

cond.true36:                                      ; preds = %cond.true27
  %38 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u37 = getelementptr inbounds %struct.hv, %struct.hv* %38, i32 0, i32 3
  %svu_hash38 = bitcast %union.anon.4* %sv_u37 to %struct.he***
  %39 = load %struct.he**, %struct.he*** %svu_hash38, align 8
  %40 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any39 = getelementptr inbounds %struct.hv, %struct.hv* %40, i32 0, i32 0
  %41 = load %struct.xpvhv*, %struct.xpvhv** %sv_any39, align 8
  %xhv_max40 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %41, i32 0, i32 3
  %42 = load i64, i64* %xhv_max40, align 8
  %add41 = add i64 %42, 1
  %arrayidx42 = getelementptr inbounds %struct.he*, %struct.he** %39, i64 %add41
  %43 = bitcast %struct.he** %arrayidx42 to %struct.xpvhv_aux*
  %xhv_name_u43 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %43, i32 0, i32 0
  %xhvnameu_names44 = bitcast %union._xhvnameu* %xhv_name_u43 to %struct.hek***
  %44 = load %struct.hek**, %struct.hek*** %xhvnameu_names44, align 8
  %45 = load %struct.hek*, %struct.hek** %44, align 8
  br label %cond.end

cond.false45:                                     ; preds = %cond.true27
  %46 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u46 = getelementptr inbounds %struct.hv, %struct.hv* %46, i32 0, i32 3
  %svu_hash47 = bitcast %union.anon.4* %sv_u46 to %struct.he***
  %47 = load %struct.he**, %struct.he*** %svu_hash47, align 8
  %48 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any48 = getelementptr inbounds %struct.hv, %struct.hv* %48, i32 0, i32 0
  %49 = load %struct.xpvhv*, %struct.xpvhv** %sv_any48, align 8
  %xhv_max49 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %49, i32 0, i32 3
  %50 = load i64, i64* %xhv_max49, align 8
  %add50 = add i64 %50, 1
  %arrayidx51 = getelementptr inbounds %struct.he*, %struct.he** %47, i64 %add50
  %51 = bitcast %struct.he** %arrayidx51 to %struct.xpvhv_aux*
  %xhv_name_u52 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %51, i32 0, i32 0
  %xhvnameu_name53 = bitcast %union._xhvnameu* %xhv_name_u52 to %struct.hek**
  %52 = load %struct.hek*, %struct.hek** %xhvnameu_name53, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false45, %cond.true36
  %cond = phi %struct.hek* [ %45, %cond.true36 ], [ %52, %cond.false45 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  br label %cond.end55

cond.false54:                                     ; preds = %cond.false, %cond.true, %land.lhs.true, %entry
  br label %cond.end55

cond.end55:                                       ; preds = %cond.false54, %cond.end
  %cond56 = phi i8* [ %arraydecay, %cond.end ], [ null, %cond.false54 ]
  store i8* %cond56, i8** %hvname, align 8
  %53 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %54 = load i8*, i8** %method.addr, align 8
  %call = call %struct.gv* @Perl_gv_fetchmethod_autoload(%struct.hv* %53, i8* %54, i32 0)
  store %struct.gv* %call, %struct.gv** %gv, align 8
  %55 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool57 = icmp ne %struct.gv* %55, null
  br i1 %tobool57, label %land.lhs.true58, label %if.else

land.lhs.true58:                                  ; preds = %cond.end55
  %56 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_flags59 = getelementptr inbounds %struct.gv, %struct.gv* %56, i32 0, i32 2
  %57 = load i32, i32* %sv_flags59, align 4
  %and60 = and i32 %57, 255
  %cmp = icmp eq i32 %and60, 9
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true58
  %58 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_u61 = getelementptr inbounds %struct.gv, %struct.gv* %58, i32 0, i32 3
  %svu_gp = bitcast %union.anon.3* %sv_u61 to %struct.gp**
  %59 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %59, i64 0
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 2
  %60 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  %add.ptr62 = getelementptr inbounds %struct.cv, %struct.cv* %60, i64 0
  %61 = bitcast %struct.cv* %add.ptr62 to %struct.sv*
  %call63 = call %struct.sv* @Perl_newRV(%struct.sv* %61)
  store %struct.sv* %call63, %struct.sv** %sv, align 8
  br label %if.end

if.else:                                          ; preds = %land.lhs.true58, %cond.end55
  %call64 = call %struct.sv* @Perl_newSVsv(%struct.sv* @PL_sv_undef)
  store %struct.sv* %call64, %struct.sv** %sv, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %62 = load %struct.hv*, %struct.hv** %cache.addr, align 8
  %63 = load i8*, i8** %hvname, align 8
  %64 = load i8*, i8** %hvname, align 8
  %call65 = call i64 @strlen(i8* %64) #5
  %conv = trunc i64 %call65 to i32
  %65 = load %struct.sv*, %struct.sv** %sv, align 8
  %call66 = call i8* @Perl_hv_common_key_len(%struct.hv* %62, i8* %63, i32 %conv, i32 36, %struct.sv* %65, i32 0)
  %66 = bitcast i8* %call66 to %struct.sv**
  %67 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags67 = getelementptr inbounds %struct.sv, %struct.sv* %67, i32 0, i32 2
  %68 = load i32, i32* %sv_flags67, align 4
  %and68 = and i32 %68, 65280
  %tobool69 = icmp ne i32 %and68, 0
  br i1 %tobool69, label %cond.true79, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %69 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags70 = getelementptr inbounds %struct.sv, %struct.sv* %69, i32 0, i32 2
  %70 = load i32, i32* %sv_flags70, align 4
  %and71 = and i32 %70, 255
  %cmp72 = icmp eq i32 %and71, 8
  br i1 %cmp72, label %cond.true79, label %lor.lhs.false74

lor.lhs.false74:                                  ; preds = %lor.lhs.false
  %71 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags75 = getelementptr inbounds %struct.sv, %struct.sv* %71, i32 0, i32 2
  %72 = load i32, i32* %sv_flags75, align 4
  %and76 = and i32 %72, 16826623
  %cmp77 = icmp eq i32 %and76, 16777226
  br i1 %cmp77, label %cond.true79, label %cond.false80

cond.true79:                                      ; preds = %lor.lhs.false74, %lor.lhs.false, %if.end
  %73 = load %struct.sv*, %struct.sv** %sv, align 8
  br label %cond.end81

cond.false80:                                     ; preds = %lor.lhs.false74
  br label %cond.end81

cond.end81:                                       ; preds = %cond.false80, %cond.true79
  %cond82 = phi %struct.sv* [ %73, %cond.true79 ], [ null, %cond.false80 ]
  ret %struct.sv* %cond82
}

declare dso_local %struct.gv* @Perl_gv_fetchmethod_autoload(%struct.hv*, i8*, i32) #1

declare dso_local %struct.sv* @Perl_newRV(%struct.sv*) #1

declare dso_local %struct.sv* @Perl_newSVsv(%struct.sv*) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.av* @array_call(%struct.sv* %obj, %struct.sv* %hook, i32 %cloning) #0 {
entry:
  %obj.addr = alloca %struct.sv*, align 8
  %hook.addr = alloca %struct.sv*, align 8
  %cloning.addr = alloca i32, align 4
  %sp = alloca %struct.sv**, align 8
  %count = alloca i32, align 4
  %av = alloca %struct.av*, align 8
  %i = alloca i32, align 4
  %mark_stack_entry = alloca i32*, align 8
  %sv = alloca %struct.sv*, align 8
  store %struct.sv* %obj, %struct.sv** %obj.addr, align 8
  store %struct.sv* %hook, %struct.sv** %hook.addr, align 8
  store i32 %cloning, i32* %cloning.addr, align 4
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  call void @Perl_push_scope()
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %1 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %1, i64* @PL_tmps_floor, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  store i32* %incdec.ptr, i32** %mark_stack_entry, align 8
  %3 = load i32*, i32** @PL_markstack_max, align 8
  %cmp = icmp eq i32* %incdec.ptr, %3
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.body
  br i1 true, label %if.then, label %if.end

cond.false:                                       ; preds = %do.body
  br i1 false, label %if.then, label %if.end

if.then:                                          ; preds = %cond.false, %cond.true
  %call = call i32* @Perl_markstack_grow()
  store i32* %call, i32** %mark_stack_entry, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false, %cond.true
  %4 = load %struct.sv**, %struct.sv*** %sp, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv = trunc i64 %sub.ptr.div to i32
  %6 = load i32*, i32** %mark_stack_entry, align 8
  store i32 %conv, i32* %6, align 4
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %do.body1

do.body1:                                         ; preds = %do.end
  br label %do.body2

do.body2:                                         ; preds = %do.body1
  %7 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %8 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast3 = ptrtoint %struct.sv** %7 to i64
  %sub.ptr.rhs.cast4 = ptrtoint %struct.sv** %8 to i64
  %sub.ptr.sub5 = sub i64 %sub.ptr.lhs.cast3, %sub.ptr.rhs.cast4
  %sub.ptr.div6 = sdiv exact i64 %sub.ptr.sub5, 8
  %cmp7 = icmp slt i64 %sub.ptr.div6, 1
  br i1 %cmp7, label %cond.true9, label %cond.false10

cond.true9:                                       ; preds = %do.body2
  br i1 true, label %if.then11, label %if.end13

cond.false10:                                     ; preds = %do.body2
  br i1 false, label %if.then11, label %if.end13

if.then11:                                        ; preds = %cond.false10, %cond.true9
  %9 = load %struct.sv**, %struct.sv*** %sp, align 8
  %10 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call12 = call %struct.sv** @Perl_stack_grow(%struct.sv** %9, %struct.sv** %10, i64 1)
  store %struct.sv** %call12, %struct.sv*** %sp, align 8
  %11 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %cond.false10, %cond.true9
  br label %do.end14

do.end14:                                         ; preds = %if.end13
  %12 = load %struct.sv*, %struct.sv** %obj.addr, align 8
  %13 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr15 = getelementptr inbounds %struct.sv*, %struct.sv** %13, i32 1
  store %struct.sv** %incdec.ptr15, %struct.sv*** %sp, align 8
  store %struct.sv* %12, %struct.sv** %incdec.ptr15, align 8
  br label %do.end16

do.end16:                                         ; preds = %do.end14
  br label %do.body17

do.body17:                                        ; preds = %do.end16
  br label %do.body18

do.body18:                                        ; preds = %do.body17
  %14 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %15 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast19 = ptrtoint %struct.sv** %14 to i64
  %sub.ptr.rhs.cast20 = ptrtoint %struct.sv** %15 to i64
  %sub.ptr.sub21 = sub i64 %sub.ptr.lhs.cast19, %sub.ptr.rhs.cast20
  %sub.ptr.div22 = sdiv exact i64 %sub.ptr.sub21, 8
  %cmp23 = icmp slt i64 %sub.ptr.div22, 1
  br i1 %cmp23, label %cond.true25, label %cond.false26

cond.true25:                                      ; preds = %do.body18
  br i1 true, label %if.then27, label %if.end29

cond.false26:                                     ; preds = %do.body18
  br i1 false, label %if.then27, label %if.end29

if.then27:                                        ; preds = %cond.false26, %cond.true25
  %16 = load %struct.sv**, %struct.sv*** %sp, align 8
  %17 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call28 = call %struct.sv** @Perl_stack_grow(%struct.sv** %16, %struct.sv** %17, i64 1)
  store %struct.sv** %call28, %struct.sv*** %sp, align 8
  %18 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %cond.false26, %cond.true25
  br label %do.end30

do.end30:                                         ; preds = %if.end29
  %19 = load i32, i32* %cloning.addr, align 4
  %conv31 = sext i32 %19 to i64
  %call32 = call %struct.sv* @Perl_newSViv(i64 %conv31)
  %call33 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call32)
  %20 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr34 = getelementptr inbounds %struct.sv*, %struct.sv** %20, i32 1
  store %struct.sv** %incdec.ptr34, %struct.sv*** %sp, align 8
  store %struct.sv* %call33, %struct.sv** %incdec.ptr34, align 8
  br label %do.end35

do.end35:                                         ; preds = %do.end30
  %21 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %21, %struct.sv*** @PL_stack_sp, align 8
  %22 = load %struct.sv*, %struct.sv** %hook.addr, align 8
  %call36 = call i32 @Perl_call_sv(%struct.sv* %22, i32 3)
  store i32 %call36, i32* %count, align 4
  %23 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %23, %struct.sv*** %sp, align 8
  %call37 = call %struct.sv* @Perl_newSV_type(i32 11)
  %24 = bitcast %struct.sv* %call37 to i8*
  %25 = bitcast i8* %24 to %struct.av*
  store %struct.av* %25, %struct.av** %av, align 8
  %26 = load i32, i32* %count, align 4
  %sub = sub nsw i32 %26, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end35
  %27 = load i32, i32* %i, align 4
  %cmp38 = icmp sge i32 %27, 0
  br i1 %cmp38, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %28 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr40 = getelementptr inbounds %struct.sv*, %struct.sv** %28, i32 -1
  store %struct.sv** %incdec.ptr40, %struct.sv*** %sp, align 8
  %29 = load %struct.sv*, %struct.sv** %28, align 8
  store %struct.sv* %29, %struct.sv** %sv, align 8
  %30 = load %struct.av*, %struct.av** %av, align 8
  %31 = load i32, i32* %i, align 4
  %conv41 = sext i32 %31 to i64
  %32 = load %struct.sv*, %struct.sv** %sv, align 8
  %33 = bitcast %struct.sv* %32 to i8*
  %34 = bitcast i8* %33 to %struct.sv*
  %call42 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %34)
  %call43 = call %struct.sv** @Perl_av_store(%struct.av* %30, i64 %conv41, %struct.sv* %call42)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %35 = load i32, i32* %i, align 4
  %dec = add nsw i32 %35, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %36 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %36, %struct.sv*** @PL_stack_sp, align 8
  %37 = load i64, i64* @PL_tmps_ix, align 8
  %38 = load i64, i64* @PL_tmps_floor, align 8
  %cmp44 = icmp sgt i64 %37, %38
  br i1 %cmp44, label %if.then46, label %if.end47

if.then46:                                        ; preds = %for.end
  call void @Perl_free_tmps()
  br label %if.end47

if.end47:                                         ; preds = %if.then46, %for.end
  call void @Perl_pop_scope()
  %39 = load %struct.av*, %struct.av** %av, align 8
  ret %struct.av* %39
}

; Function Attrs: noinline nounwind uwtable
define internal void @S_SvREFCNT_dec(%struct.sv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  %rc = alloca i32, align 4
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp = icmp ne %struct.sv* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br i1 true, label %if.then, label %if.end6

cond.false:                                       ; preds = %entry
  br i1 false, label %if.then, label %if.end6

if.then:                                          ; preds = %cond.false, %cond.true
  %1 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 1
  %2 = load i32, i32* %sv_refcnt, align 8
  store i32 %2, i32* %rc, align 4
  %3 = load i32, i32* %rc, align 4
  %cmp1 = icmp ugt i32 %3, 1
  br i1 %cmp1, label %cond.true2, label %cond.false3

cond.true2:                                       ; preds = %if.then
  br i1 true, label %if.then4, label %if.else

cond.false3:                                      ; preds = %if.then
  br i1 false, label %if.then4, label %if.else

if.then4:                                         ; preds = %cond.false3, %cond.true2
  %4 = load i32, i32* %rc, align 4
  %sub = sub i32 %4, 1
  %5 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt5 = getelementptr inbounds %struct.sv, %struct.sv* %5, i32 0, i32 1
  store i32 %sub, i32* %sv_refcnt5, align 8
  br label %if.end

if.else:                                          ; preds = %cond.false3, %cond.true2
  %6 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %7 = load i32, i32* %rc, align 4
  call void @Perl_sv_free2(%struct.sv* %6, i32 %7)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end6

if.end6:                                          ; preds = %if.end, %cond.false, %cond.true
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @pkg_hide(%struct.hv* %cache, %struct.hv* %pkg, i8* %method) #0 {
entry:
  %cache.addr = alloca %struct.hv*, align 8
  %pkg.addr = alloca %struct.hv*, align 8
  %method.addr = alloca i8*, align 8
  %hvname = alloca i8*, align 8
  store %struct.hv* %cache, %struct.hv** %cache.addr, align 8
  store %struct.hv* %pkg, %struct.hv** %pkg.addr, align 8
  store i8* %method, i8** %method.addr, align 8
  %0 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 33554432
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %cond.false54

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %2, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %3 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %4 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %4, i32 0, i32 0
  %5 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %5, i32 0, i32 3
  %6 = load i64, i64* %xhv_max, align 8
  %add = add i64 %6, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %3, i64 %add
  %7 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %7, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %8 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool1 = icmp ne %struct.hek* %8, null
  br i1 %tobool1, label %land.lhs.true2, label %cond.false54

land.lhs.true2:                                   ; preds = %land.lhs.true
  %9 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u3 = getelementptr inbounds %struct.hv, %struct.hv* %9, i32 0, i32 3
  %svu_hash4 = bitcast %union.anon.4* %sv_u3 to %struct.he***
  %10 = load %struct.he**, %struct.he*** %svu_hash4, align 8
  %11 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any5 = getelementptr inbounds %struct.hv, %struct.hv* %11, i32 0, i32 0
  %12 = load %struct.xpvhv*, %struct.xpvhv** %sv_any5, align 8
  %xhv_max6 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %12, i32 0, i32 3
  %13 = load i64, i64* %xhv_max6, align 8
  %add7 = add i64 %13, 1
  %arrayidx8 = getelementptr inbounds %struct.he*, %struct.he** %10, i64 %add7
  %14 = bitcast %struct.he** %arrayidx8 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %14, i32 0, i32 4
  %15 = load i32, i32* %xhv_name_count, align 4
  %tobool9 = icmp ne i32 %15, 0
  br i1 %tobool9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  %16 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u10 = getelementptr inbounds %struct.hv, %struct.hv* %16, i32 0, i32 3
  %svu_hash11 = bitcast %union.anon.4* %sv_u10 to %struct.he***
  %17 = load %struct.he**, %struct.he*** %svu_hash11, align 8
  %18 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any12 = getelementptr inbounds %struct.hv, %struct.hv* %18, i32 0, i32 0
  %19 = load %struct.xpvhv*, %struct.xpvhv** %sv_any12, align 8
  %xhv_max13 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %19, i32 0, i32 3
  %20 = load i64, i64* %xhv_max13, align 8
  %add14 = add i64 %20, 1
  %arrayidx15 = getelementptr inbounds %struct.he*, %struct.he** %17, i64 %add14
  %21 = bitcast %struct.he** %arrayidx15 to %struct.xpvhv_aux*
  %xhv_name_u16 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %21, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u16 to %struct.hek***
  %22 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %23 = load %struct.hek*, %struct.hek** %22, align 8
  %tobool17 = icmp ne %struct.hek* %23, null
  br i1 %tobool17, label %cond.true27, label %cond.false54

cond.false:                                       ; preds = %land.lhs.true2
  %24 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u18 = getelementptr inbounds %struct.hv, %struct.hv* %24, i32 0, i32 3
  %svu_hash19 = bitcast %union.anon.4* %sv_u18 to %struct.he***
  %25 = load %struct.he**, %struct.he*** %svu_hash19, align 8
  %26 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any20 = getelementptr inbounds %struct.hv, %struct.hv* %26, i32 0, i32 0
  %27 = load %struct.xpvhv*, %struct.xpvhv** %sv_any20, align 8
  %xhv_max21 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %27, i32 0, i32 3
  %28 = load i64, i64* %xhv_max21, align 8
  %add22 = add i64 %28, 1
  %arrayidx23 = getelementptr inbounds %struct.he*, %struct.he** %25, i64 %add22
  %29 = bitcast %struct.he** %arrayidx23 to %struct.xpvhv_aux*
  %xhv_name_u24 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %29, i32 0, i32 0
  %xhvnameu_name25 = bitcast %union._xhvnameu* %xhv_name_u24 to %struct.hek**
  %30 = load %struct.hek*, %struct.hek** %xhvnameu_name25, align 8
  %tobool26 = icmp ne %struct.hek* %30, null
  br i1 %tobool26, label %cond.true27, label %cond.false54

cond.true27:                                      ; preds = %cond.false, %cond.true
  %31 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u28 = getelementptr inbounds %struct.hv, %struct.hv* %31, i32 0, i32 3
  %svu_hash29 = bitcast %union.anon.4* %sv_u28 to %struct.he***
  %32 = load %struct.he**, %struct.he*** %svu_hash29, align 8
  %33 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any30 = getelementptr inbounds %struct.hv, %struct.hv* %33, i32 0, i32 0
  %34 = load %struct.xpvhv*, %struct.xpvhv** %sv_any30, align 8
  %xhv_max31 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %34, i32 0, i32 3
  %35 = load i64, i64* %xhv_max31, align 8
  %add32 = add i64 %35, 1
  %arrayidx33 = getelementptr inbounds %struct.he*, %struct.he** %32, i64 %add32
  %36 = bitcast %struct.he** %arrayidx33 to %struct.xpvhv_aux*
  %xhv_name_count34 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %36, i32 0, i32 4
  %37 = load i32, i32* %xhv_name_count34, align 4
  %tobool35 = icmp ne i32 %37, 0
  br i1 %tobool35, label %cond.true36, label %cond.false45

cond.true36:                                      ; preds = %cond.true27
  %38 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u37 = getelementptr inbounds %struct.hv, %struct.hv* %38, i32 0, i32 3
  %svu_hash38 = bitcast %union.anon.4* %sv_u37 to %struct.he***
  %39 = load %struct.he**, %struct.he*** %svu_hash38, align 8
  %40 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any39 = getelementptr inbounds %struct.hv, %struct.hv* %40, i32 0, i32 0
  %41 = load %struct.xpvhv*, %struct.xpvhv** %sv_any39, align 8
  %xhv_max40 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %41, i32 0, i32 3
  %42 = load i64, i64* %xhv_max40, align 8
  %add41 = add i64 %42, 1
  %arrayidx42 = getelementptr inbounds %struct.he*, %struct.he** %39, i64 %add41
  %43 = bitcast %struct.he** %arrayidx42 to %struct.xpvhv_aux*
  %xhv_name_u43 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %43, i32 0, i32 0
  %xhvnameu_names44 = bitcast %union._xhvnameu* %xhv_name_u43 to %struct.hek***
  %44 = load %struct.hek**, %struct.hek*** %xhvnameu_names44, align 8
  %45 = load %struct.hek*, %struct.hek** %44, align 8
  br label %cond.end

cond.false45:                                     ; preds = %cond.true27
  %46 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u46 = getelementptr inbounds %struct.hv, %struct.hv* %46, i32 0, i32 3
  %svu_hash47 = bitcast %union.anon.4* %sv_u46 to %struct.he***
  %47 = load %struct.he**, %struct.he*** %svu_hash47, align 8
  %48 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any48 = getelementptr inbounds %struct.hv, %struct.hv* %48, i32 0, i32 0
  %49 = load %struct.xpvhv*, %struct.xpvhv** %sv_any48, align 8
  %xhv_max49 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %49, i32 0, i32 3
  %50 = load i64, i64* %xhv_max49, align 8
  %add50 = add i64 %50, 1
  %arrayidx51 = getelementptr inbounds %struct.he*, %struct.he** %47, i64 %add50
  %51 = bitcast %struct.he** %arrayidx51 to %struct.xpvhv_aux*
  %xhv_name_u52 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %51, i32 0, i32 0
  %xhvnameu_name53 = bitcast %union._xhvnameu* %xhv_name_u52 to %struct.hek**
  %52 = load %struct.hek*, %struct.hek** %xhvnameu_name53, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false45, %cond.true36
  %cond = phi %struct.hek* [ %45, %cond.true36 ], [ %52, %cond.false45 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  br label %cond.end55

cond.false54:                                     ; preds = %cond.false, %cond.true, %land.lhs.true, %entry
  br label %cond.end55

cond.end55:                                       ; preds = %cond.false54, %cond.end
  %cond56 = phi i8* [ %arraydecay, %cond.end ], [ null, %cond.false54 ]
  store i8* %cond56, i8** %hvname, align 8
  %53 = load i8*, i8** %method.addr, align 8
  %54 = load %struct.hv*, %struct.hv** %cache.addr, align 8
  %55 = load i8*, i8** %hvname, align 8
  %56 = load i8*, i8** %hvname, align 8
  %call = call i64 @strlen(i8* %56) #5
  %conv = trunc i64 %call to i32
  %call57 = call %struct.sv* @Perl_newSVsv(%struct.sv* @PL_sv_undef)
  %call58 = call i8* @Perl_hv_common_key_len(%struct.hv* %54, i8* %55, i32 %conv, i32 36, %struct.sv* %call57, i32 0)
  %57 = bitcast i8* %call58 to %struct.sv**
  ret void
}

declare dso_local i8* @Perl_sv_2pv_flags(%struct.sv*, i64*, i32) #1

declare dso_local %struct.sv** @Perl_av_store(%struct.av*, i64, %struct.sv*) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @S_SvREFCNT_inc(%struct.sv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp = icmp ne %struct.sv* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br i1 true, label %if.then, label %if.end

cond.false:                                       ; preds = %entry
  br i1 false, label %if.then, label %if.end

if.then:                                          ; preds = %cond.false, %cond.true
  %1 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 1
  %2 = load i32, i32* %sv_refcnt, align 8
  %inc = add i32 %2, 1
  store i32 %inc, i32* %sv_refcnt, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false, %cond.true
  %3 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  ret %struct.sv* %3
}

declare dso_local void @Perl_push_scope() #1

declare dso_local void @Perl_save_strlen(i64*) #1

declare dso_local i32* @Perl_markstack_grow() #1

declare dso_local %struct.sv** @Perl_stack_grow(%struct.sv**, %struct.sv**, i64) #1

declare dso_local %struct.sv* @Perl_sv_2mortal(%struct.sv*) #1

declare dso_local i32 @Perl_call_sv(%struct.sv*, i32) #1

declare dso_local void @Perl_free_tmps() #1

declare dso_local void @Perl_pop_scope() #1

declare dso_local void @Perl_sv_free2(%struct.sv*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @store_ref(%struct.stcxt* %cxt, %struct.sv* %sv) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %is_weak = alloca i32, align 4
  %stash = alloca %struct.hv*, align 8
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %nsz158 = alloca i32, align 4
  %offset165 = alloca i32, align 4
  %nsz242 = alloca i32, align 4
  %offset249 = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i32 0, i32* %is_weak, align 4
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, -2147481600
  %cmp = icmp eq i32 %and, -2147481600
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %is_weak, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u to %struct.sv**
  %3 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  store %struct.sv* %3, %struct.sv** %sv.addr, align 8
  %4 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags1 = getelementptr inbounds %struct.sv, %struct.sv* %4, i32 0, i32 2
  %5 = load i32, i32* %sv_flags1, align 4
  %and2 = and i32 %5, 1048576
  %tobool = icmp ne i32 %and2, 0
  br i1 %tobool, label %if.then3, label %if.else219

if.then3:                                         ; preds = %if.end
  %6 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 0
  %7 = load i8*, i8** %sv_any, align 8
  %8 = bitcast i8* %7 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %8, i32 0, i32 0
  %9 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  store %struct.hv* %9, %struct.hv** %stash, align 8
  %10 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool4 = icmp ne %struct.hv* %10, null
  br i1 %tobool4, label %land.lhs.true, label %if.else135

land.lhs.true:                                    ; preds = %if.then3
  %11 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags5 = getelementptr inbounds %struct.hv, %struct.hv* %11, i32 0, i32 2
  %12 = load i32, i32* %sv_flags5, align 4
  %and6 = and i32 %12, 33554432
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %land.lhs.true8, label %cond.false65

land.lhs.true8:                                   ; preds = %land.lhs.true
  %13 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u9 = getelementptr inbounds %struct.hv, %struct.hv* %13, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u9 to %struct.he***
  %14 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %15 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any10 = getelementptr inbounds %struct.hv, %struct.hv* %15, i32 0, i32 0
  %16 = load %struct.xpvhv*, %struct.xpvhv** %sv_any10, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %16, i32 0, i32 3
  %17 = load i64, i64* %xhv_max, align 8
  %add = add i64 %17, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %14, i64 %add
  %18 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %18, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %19 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool11 = icmp ne %struct.hek* %19, null
  br i1 %tobool11, label %land.lhs.true12, label %cond.false65

land.lhs.true12:                                  ; preds = %land.lhs.true8
  %20 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u13 = getelementptr inbounds %struct.hv, %struct.hv* %20, i32 0, i32 3
  %svu_hash14 = bitcast %union.anon.4* %sv_u13 to %struct.he***
  %21 = load %struct.he**, %struct.he*** %svu_hash14, align 8
  %22 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any15 = getelementptr inbounds %struct.hv, %struct.hv* %22, i32 0, i32 0
  %23 = load %struct.xpvhv*, %struct.xpvhv** %sv_any15, align 8
  %xhv_max16 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %23, i32 0, i32 3
  %24 = load i64, i64* %xhv_max16, align 8
  %add17 = add i64 %24, 1
  %arrayidx18 = getelementptr inbounds %struct.he*, %struct.he** %21, i64 %add17
  %25 = bitcast %struct.he** %arrayidx18 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %25, i32 0, i32 4
  %26 = load i32, i32* %xhv_name_count, align 4
  %tobool19 = icmp ne i32 %26, 0
  br i1 %tobool19, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true12
  %27 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u20 = getelementptr inbounds %struct.hv, %struct.hv* %27, i32 0, i32 3
  %svu_hash21 = bitcast %union.anon.4* %sv_u20 to %struct.he***
  %28 = load %struct.he**, %struct.he*** %svu_hash21, align 8
  %29 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any22 = getelementptr inbounds %struct.hv, %struct.hv* %29, i32 0, i32 0
  %30 = load %struct.xpvhv*, %struct.xpvhv** %sv_any22, align 8
  %xhv_max23 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %30, i32 0, i32 3
  %31 = load i64, i64* %xhv_max23, align 8
  %add24 = add i64 %31, 1
  %arrayidx25 = getelementptr inbounds %struct.he*, %struct.he** %28, i64 %add24
  %32 = bitcast %struct.he** %arrayidx25 to %struct.xpvhv_aux*
  %xhv_name_u26 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %32, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u26 to %struct.hek***
  %33 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %34 = load %struct.hek*, %struct.hek** %33, align 8
  %tobool27 = icmp ne %struct.hek* %34, null
  br i1 %tobool27, label %cond.true37, label %cond.false65

cond.false:                                       ; preds = %land.lhs.true12
  %35 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u28 = getelementptr inbounds %struct.hv, %struct.hv* %35, i32 0, i32 3
  %svu_hash29 = bitcast %union.anon.4* %sv_u28 to %struct.he***
  %36 = load %struct.he**, %struct.he*** %svu_hash29, align 8
  %37 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any30 = getelementptr inbounds %struct.hv, %struct.hv* %37, i32 0, i32 0
  %38 = load %struct.xpvhv*, %struct.xpvhv** %sv_any30, align 8
  %xhv_max31 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %38, i32 0, i32 3
  %39 = load i64, i64* %xhv_max31, align 8
  %add32 = add i64 %39, 1
  %arrayidx33 = getelementptr inbounds %struct.he*, %struct.he** %36, i64 %add32
  %40 = bitcast %struct.he** %arrayidx33 to %struct.xpvhv_aux*
  %xhv_name_u34 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %40, i32 0, i32 0
  %xhvnameu_name35 = bitcast %union._xhvnameu* %xhv_name_u34 to %struct.hek**
  %41 = load %struct.hek*, %struct.hek** %xhvnameu_name35, align 8
  %tobool36 = icmp ne %struct.hek* %41, null
  br i1 %tobool36, label %cond.true37, label %cond.false65

cond.true37:                                      ; preds = %cond.false, %cond.true
  %42 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u38 = getelementptr inbounds %struct.hv, %struct.hv* %42, i32 0, i32 3
  %svu_hash39 = bitcast %union.anon.4* %sv_u38 to %struct.he***
  %43 = load %struct.he**, %struct.he*** %svu_hash39, align 8
  %44 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any40 = getelementptr inbounds %struct.hv, %struct.hv* %44, i32 0, i32 0
  %45 = load %struct.xpvhv*, %struct.xpvhv** %sv_any40, align 8
  %xhv_max41 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %45, i32 0, i32 3
  %46 = load i64, i64* %xhv_max41, align 8
  %add42 = add i64 %46, 1
  %arrayidx43 = getelementptr inbounds %struct.he*, %struct.he** %43, i64 %add42
  %47 = bitcast %struct.he** %arrayidx43 to %struct.xpvhv_aux*
  %xhv_name_count44 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %47, i32 0, i32 4
  %48 = load i32, i32* %xhv_name_count44, align 4
  %tobool45 = icmp ne i32 %48, 0
  br i1 %tobool45, label %cond.true46, label %cond.false55

cond.true46:                                      ; preds = %cond.true37
  %49 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u47 = getelementptr inbounds %struct.hv, %struct.hv* %49, i32 0, i32 3
  %svu_hash48 = bitcast %union.anon.4* %sv_u47 to %struct.he***
  %50 = load %struct.he**, %struct.he*** %svu_hash48, align 8
  %51 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any49 = getelementptr inbounds %struct.hv, %struct.hv* %51, i32 0, i32 0
  %52 = load %struct.xpvhv*, %struct.xpvhv** %sv_any49, align 8
  %xhv_max50 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %52, i32 0, i32 3
  %53 = load i64, i64* %xhv_max50, align 8
  %add51 = add i64 %53, 1
  %arrayidx52 = getelementptr inbounds %struct.he*, %struct.he** %50, i64 %add51
  %54 = bitcast %struct.he** %arrayidx52 to %struct.xpvhv_aux*
  %xhv_name_u53 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %54, i32 0, i32 0
  %xhvnameu_names54 = bitcast %union._xhvnameu* %xhv_name_u53 to %struct.hek***
  %55 = load %struct.hek**, %struct.hek*** %xhvnameu_names54, align 8
  %56 = load %struct.hek*, %struct.hek** %55, align 8
  br label %cond.end

cond.false55:                                     ; preds = %cond.true37
  %57 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u56 = getelementptr inbounds %struct.hv, %struct.hv* %57, i32 0, i32 3
  %svu_hash57 = bitcast %union.anon.4* %sv_u56 to %struct.he***
  %58 = load %struct.he**, %struct.he*** %svu_hash57, align 8
  %59 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any58 = getelementptr inbounds %struct.hv, %struct.hv* %59, i32 0, i32 0
  %60 = load %struct.xpvhv*, %struct.xpvhv** %sv_any58, align 8
  %xhv_max59 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %60, i32 0, i32 3
  %61 = load i64, i64* %xhv_max59, align 8
  %add60 = add i64 %61, 1
  %arrayidx61 = getelementptr inbounds %struct.he*, %struct.he** %58, i64 %add60
  %62 = bitcast %struct.he** %arrayidx61 to %struct.xpvhv_aux*
  %xhv_name_u62 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %62, i32 0, i32 0
  %xhvnameu_name63 = bitcast %union._xhvnameu* %xhv_name_u62 to %struct.hek**
  %63 = load %struct.hek*, %struct.hek** %xhvnameu_name63, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false55, %cond.true46
  %cond = phi %struct.hek* [ %56, %cond.true46 ], [ %63, %cond.false55 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool64 = icmp ne i8* %arraydecay, null
  br i1 %tobool64, label %land.lhs.true66, label %cond.false69

cond.false65:                                     ; preds = %cond.false, %cond.true, %land.lhs.true8, %land.lhs.true
  br i1 false, label %land.lhs.true66, label %cond.false69

land.lhs.true66:                                  ; preds = %cond.false65, %cond.end
  %64 = load %struct.hv*, %struct.hv** %stash, align 8
  %call = call i32 @Perl_Gv_AMupdate(%struct.hv* %64, i1 zeroext false)
  %tobool67 = icmp ne i32 %call, 0
  br i1 %tobool67, label %cond.true68, label %cond.false69

cond.true68:                                      ; preds = %land.lhs.true66
  br i1 true, label %if.then72, label %if.else135

cond.false69:                                     ; preds = %land.lhs.true66, %cond.false65, %cond.end
  %65 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags70 = getelementptr inbounds %struct.hv, %struct.hv* %65, i32 0, i32 2
  %66 = load i32, i32* %sv_flags70, align 4
  %and71 = and i32 %66, -268435457
  store i32 %and71, i32* %sv_flags70, align 4
  br i1 false, label %if.then72, label %if.else135

if.then72:                                        ; preds = %cond.false69, %cond.true68
  br label %do.body

do.body:                                          ; preds = %if.then72
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %67, i32 0, i32 24
  %68 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool73 = icmp ne %struct._PerlIO** %68, null
  br i1 %tobool73, label %if.else124, label %if.then74

if.then74:                                        ; preds = %do.body
  br label %do.body75

do.body75:                                        ; preds = %if.then74
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %70 = load i8*, i8** %aptr, align 8
  %71 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf76 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %71, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf76, i32 0, i32 3
  %72 = load i8*, i8** %aend, align 8
  %cmp77 = icmp ult i8* %70, %72
  br i1 %cmp77, label %if.then78, label %if.else

if.then78:                                        ; preds = %do.body75
  %73 = load i32, i32* %is_weak, align 4
  %conv = trunc i32 %73 to i8
  %conv79 = sext i8 %conv to i32
  %tobool80 = icmp ne i32 %conv79, 0
  %74 = zext i1 %tobool80 to i64
  %cond81 = select i1 %tobool80, i32 28, i32 20
  %conv82 = trunc i32 %cond81 to i8
  %75 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf83 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %75, i32 0, i32 22
  %aptr84 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf83, i32 0, i32 2
  %76 = load i8*, i8** %aptr84, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %76, i32 1
  store i8* %incdec.ptr, i8** %aptr84, align 8
  store i8 %conv82, i8* %76, align 1
  br label %if.end122

if.else:                                          ; preds = %do.body75
  br label %do.body85

do.body85:                                        ; preds = %if.else
  %77 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf86 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %77, i32 0, i32 22
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf86, i32 0, i32 1
  %78 = load i64, i64* %asiz, align 8
  %add87 = add i64 1, %78
  %add88 = add i64 %add87, 8191
  %and89 = and i64 %add88, -8192
  %conv90 = trunc i64 %and89 to i32
  store i32 %conv90, i32* %nsz, align 4
  %79 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf91 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %79, i32 0, i32 22
  %aptr92 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf91, i32 0, i32 2
  %80 = load i8*, i8** %aptr92, align 8
  %81 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf93 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %81, i32 0, i32 22
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf93, i32 0, i32 0
  %82 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %80 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %82 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv94 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv94, i32* %offset, align 4
  %83 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf95 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %83, i32 0, i32 22
  %arena96 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf95, i32 0, i32 0
  %84 = load i8*, i8** %arena96, align 8
  %85 = load i32, i32* %nsz, align 4
  %conv97 = sext i32 %85 to i64
  %mul = mul i64 %conv97, 1
  %call98 = call i8* @Perl_safesysrealloc(i8* %84, i64 %mul)
  %86 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf99 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %86, i32 0, i32 22
  %arena100 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf99, i32 0, i32 0
  store i8* %call98, i8** %arena100, align 8
  %87 = load i32, i32* %nsz, align 4
  %conv101 = sext i32 %87 to i64
  %88 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf102 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %88, i32 0, i32 22
  %asiz103 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf102, i32 0, i32 1
  store i64 %conv101, i64* %asiz103, align 8
  %89 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf104 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %89, i32 0, i32 22
  %arena105 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf104, i32 0, i32 0
  %90 = load i8*, i8** %arena105, align 8
  %91 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %91 to i64
  %add.ptr = getelementptr inbounds i8, i8* %90, i64 %idx.ext
  %92 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf106 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %92, i32 0, i32 22
  %aptr107 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf106, i32 0, i32 2
  store i8* %add.ptr, i8** %aptr107, align 8
  %93 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf108 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %93, i32 0, i32 22
  %arena109 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf108, i32 0, i32 0
  %94 = load i8*, i8** %arena109, align 8
  %95 = load i32, i32* %nsz, align 4
  %idx.ext110 = sext i32 %95 to i64
  %add.ptr111 = getelementptr inbounds i8, i8* %94, i64 %idx.ext110
  %96 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf112 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %96, i32 0, i32 22
  %aend113 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf112, i32 0, i32 3
  store i8* %add.ptr111, i8** %aend113, align 8
  br label %do.end

do.end:                                           ; preds = %do.body85
  %97 = load i32, i32* %is_weak, align 4
  %conv114 = trunc i32 %97 to i8
  %conv115 = sext i8 %conv114 to i32
  %tobool116 = icmp ne i32 %conv115, 0
  %98 = zext i1 %tobool116 to i64
  %cond117 = select i1 %tobool116, i32 28, i32 20
  %conv118 = trunc i32 %cond117 to i8
  %99 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf119 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %99, i32 0, i32 22
  %aptr120 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf119, i32 0, i32 2
  %100 = load i8*, i8** %aptr120, align 8
  %incdec.ptr121 = getelementptr inbounds i8, i8* %100, i32 1
  store i8* %incdec.ptr121, i8** %aptr120, align 8
  store i8 %conv118, i8* %100, align 1
  br label %if.end122

if.end122:                                        ; preds = %do.end, %if.then78
  br label %do.end123

do.end123:                                        ; preds = %if.end122
  br label %if.end133

if.else124:                                       ; preds = %do.body
  %101 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio125 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %101, i32 0, i32 24
  %102 = load %struct._PerlIO**, %struct._PerlIO*** %fio125, align 8
  %103 = load i32, i32* %is_weak, align 4
  %tobool126 = icmp ne i32 %103, 0
  %104 = zext i1 %tobool126 to i64
  %cond127 = select i1 %tobool126, i32 28, i32 20
  %call128 = call i32 @PerlIO_putc(%struct._PerlIO** %102, i32 %cond127)
  %cmp129 = icmp eq i32 %call128, -1
  br i1 %cmp129, label %if.then131, label %if.end132

if.then131:                                       ; preds = %if.else124
  store i32 -1, i32* %retval, align 4
  br label %return

if.end132:                                        ; preds = %if.else124
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %do.end123
  br label %do.end134

do.end134:                                        ; preds = %if.end133
  br label %if.end218

if.else135:                                       ; preds = %cond.false69, %cond.true68, %if.then3
  br label %do.body136

do.body136:                                       ; preds = %if.else135
  %105 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio137 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %105, i32 0, i32 24
  %106 = load %struct._PerlIO**, %struct._PerlIO*** %fio137, align 8
  %tobool138 = icmp ne %struct._PerlIO** %106, null
  br i1 %tobool138, label %if.else207, label %if.then139

if.then139:                                       ; preds = %do.body136
  br label %do.body140

do.body140:                                       ; preds = %if.then139
  %107 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf141 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %107, i32 0, i32 22
  %aptr142 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf141, i32 0, i32 2
  %108 = load i8*, i8** %aptr142, align 8
  %109 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf143 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %109, i32 0, i32 22
  %aend144 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf143, i32 0, i32 3
  %110 = load i8*, i8** %aend144, align 8
  %cmp145 = icmp ult i8* %108, %110
  br i1 %cmp145, label %if.then147, label %if.else156

if.then147:                                       ; preds = %do.body140
  %111 = load i32, i32* %is_weak, align 4
  %conv148 = trunc i32 %111 to i8
  %conv149 = sext i8 %conv148 to i32
  %tobool150 = icmp ne i32 %conv149, 0
  %112 = zext i1 %tobool150 to i64
  %cond151 = select i1 %tobool150, i32 27, i32 4
  %conv152 = trunc i32 %cond151 to i8
  %113 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf153 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %113, i32 0, i32 22
  %aptr154 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf153, i32 0, i32 2
  %114 = load i8*, i8** %aptr154, align 8
  %incdec.ptr155 = getelementptr inbounds i8, i8* %114, i32 1
  store i8* %incdec.ptr155, i8** %aptr154, align 8
  store i8 %conv152, i8* %114, align 1
  br label %if.end205

if.else156:                                       ; preds = %do.body140
  br label %do.body157

do.body157:                                       ; preds = %if.else156
  %115 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf159 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %115, i32 0, i32 22
  %asiz160 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf159, i32 0, i32 1
  %116 = load i64, i64* %asiz160, align 8
  %add161 = add i64 1, %116
  %add162 = add i64 %add161, 8191
  %and163 = and i64 %add162, -8192
  %conv164 = trunc i64 %and163 to i32
  store i32 %conv164, i32* %nsz158, align 4
  %117 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf166 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %117, i32 0, i32 22
  %aptr167 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf166, i32 0, i32 2
  %118 = load i8*, i8** %aptr167, align 8
  %119 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf168 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %119, i32 0, i32 22
  %arena169 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf168, i32 0, i32 0
  %120 = load i8*, i8** %arena169, align 8
  %sub.ptr.lhs.cast170 = ptrtoint i8* %118 to i64
  %sub.ptr.rhs.cast171 = ptrtoint i8* %120 to i64
  %sub.ptr.sub172 = sub i64 %sub.ptr.lhs.cast170, %sub.ptr.rhs.cast171
  %conv173 = trunc i64 %sub.ptr.sub172 to i32
  store i32 %conv173, i32* %offset165, align 4
  %121 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf174 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %121, i32 0, i32 22
  %arena175 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf174, i32 0, i32 0
  %122 = load i8*, i8** %arena175, align 8
  %123 = load i32, i32* %nsz158, align 4
  %conv176 = sext i32 %123 to i64
  %mul177 = mul i64 %conv176, 1
  %call178 = call i8* @Perl_safesysrealloc(i8* %122, i64 %mul177)
  %124 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf179 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %124, i32 0, i32 22
  %arena180 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf179, i32 0, i32 0
  store i8* %call178, i8** %arena180, align 8
  %125 = load i32, i32* %nsz158, align 4
  %conv181 = sext i32 %125 to i64
  %126 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf182 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %126, i32 0, i32 22
  %asiz183 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf182, i32 0, i32 1
  store i64 %conv181, i64* %asiz183, align 8
  %127 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf184 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %127, i32 0, i32 22
  %arena185 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf184, i32 0, i32 0
  %128 = load i8*, i8** %arena185, align 8
  %129 = load i32, i32* %offset165, align 4
  %idx.ext186 = sext i32 %129 to i64
  %add.ptr187 = getelementptr inbounds i8, i8* %128, i64 %idx.ext186
  %130 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf188 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %130, i32 0, i32 22
  %aptr189 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf188, i32 0, i32 2
  store i8* %add.ptr187, i8** %aptr189, align 8
  %131 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf190 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %131, i32 0, i32 22
  %arena191 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf190, i32 0, i32 0
  %132 = load i8*, i8** %arena191, align 8
  %133 = load i32, i32* %nsz158, align 4
  %idx.ext192 = sext i32 %133 to i64
  %add.ptr193 = getelementptr inbounds i8, i8* %132, i64 %idx.ext192
  %134 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf194 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %134, i32 0, i32 22
  %aend195 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf194, i32 0, i32 3
  store i8* %add.ptr193, i8** %aend195, align 8
  br label %do.end196

do.end196:                                        ; preds = %do.body157
  %135 = load i32, i32* %is_weak, align 4
  %conv197 = trunc i32 %135 to i8
  %conv198 = sext i8 %conv197 to i32
  %tobool199 = icmp ne i32 %conv198, 0
  %136 = zext i1 %tobool199 to i64
  %cond200 = select i1 %tobool199, i32 27, i32 4
  %conv201 = trunc i32 %cond200 to i8
  %137 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf202 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %137, i32 0, i32 22
  %aptr203 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf202, i32 0, i32 2
  %138 = load i8*, i8** %aptr203, align 8
  %incdec.ptr204 = getelementptr inbounds i8, i8* %138, i32 1
  store i8* %incdec.ptr204, i8** %aptr203, align 8
  store i8 %conv201, i8* %138, align 1
  br label %if.end205

if.end205:                                        ; preds = %do.end196, %if.then147
  br label %do.end206

do.end206:                                        ; preds = %if.end205
  br label %if.end216

if.else207:                                       ; preds = %do.body136
  %139 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio208 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %139, i32 0, i32 24
  %140 = load %struct._PerlIO**, %struct._PerlIO*** %fio208, align 8
  %141 = load i32, i32* %is_weak, align 4
  %tobool209 = icmp ne i32 %141, 0
  %142 = zext i1 %tobool209 to i64
  %cond210 = select i1 %tobool209, i32 27, i32 4
  %call211 = call i32 @PerlIO_putc(%struct._PerlIO** %140, i32 %cond210)
  %cmp212 = icmp eq i32 %call211, -1
  br i1 %cmp212, label %if.then214, label %if.end215

if.then214:                                       ; preds = %if.else207
  store i32 -1, i32* %retval, align 4
  br label %return

if.end215:                                        ; preds = %if.else207
  br label %if.end216

if.end216:                                        ; preds = %if.end215, %do.end206
  br label %do.end217

do.end217:                                        ; preds = %if.end216
  br label %if.end218

if.end218:                                        ; preds = %do.end217, %do.end134
  br label %if.end302

if.else219:                                       ; preds = %if.end
  br label %do.body220

do.body220:                                       ; preds = %if.else219
  %143 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio221 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %143, i32 0, i32 24
  %144 = load %struct._PerlIO**, %struct._PerlIO*** %fio221, align 8
  %tobool222 = icmp ne %struct._PerlIO** %144, null
  br i1 %tobool222, label %if.else291, label %if.then223

if.then223:                                       ; preds = %do.body220
  br label %do.body224

do.body224:                                       ; preds = %if.then223
  %145 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf225 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %145, i32 0, i32 22
  %aptr226 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf225, i32 0, i32 2
  %146 = load i8*, i8** %aptr226, align 8
  %147 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf227 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %147, i32 0, i32 22
  %aend228 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf227, i32 0, i32 3
  %148 = load i8*, i8** %aend228, align 8
  %cmp229 = icmp ult i8* %146, %148
  br i1 %cmp229, label %if.then231, label %if.else240

if.then231:                                       ; preds = %do.body224
  %149 = load i32, i32* %is_weak, align 4
  %conv232 = trunc i32 %149 to i8
  %conv233 = sext i8 %conv232 to i32
  %tobool234 = icmp ne i32 %conv233, 0
  %150 = zext i1 %tobool234 to i64
  %cond235 = select i1 %tobool234, i32 27, i32 4
  %conv236 = trunc i32 %cond235 to i8
  %151 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf237 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %151, i32 0, i32 22
  %aptr238 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf237, i32 0, i32 2
  %152 = load i8*, i8** %aptr238, align 8
  %incdec.ptr239 = getelementptr inbounds i8, i8* %152, i32 1
  store i8* %incdec.ptr239, i8** %aptr238, align 8
  store i8 %conv236, i8* %152, align 1
  br label %if.end289

if.else240:                                       ; preds = %do.body224
  br label %do.body241

do.body241:                                       ; preds = %if.else240
  %153 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf243 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %153, i32 0, i32 22
  %asiz244 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf243, i32 0, i32 1
  %154 = load i64, i64* %asiz244, align 8
  %add245 = add i64 1, %154
  %add246 = add i64 %add245, 8191
  %and247 = and i64 %add246, -8192
  %conv248 = trunc i64 %and247 to i32
  store i32 %conv248, i32* %nsz242, align 4
  %155 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf250 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %155, i32 0, i32 22
  %aptr251 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf250, i32 0, i32 2
  %156 = load i8*, i8** %aptr251, align 8
  %157 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf252 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %157, i32 0, i32 22
  %arena253 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf252, i32 0, i32 0
  %158 = load i8*, i8** %arena253, align 8
  %sub.ptr.lhs.cast254 = ptrtoint i8* %156 to i64
  %sub.ptr.rhs.cast255 = ptrtoint i8* %158 to i64
  %sub.ptr.sub256 = sub i64 %sub.ptr.lhs.cast254, %sub.ptr.rhs.cast255
  %conv257 = trunc i64 %sub.ptr.sub256 to i32
  store i32 %conv257, i32* %offset249, align 4
  %159 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf258 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %159, i32 0, i32 22
  %arena259 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf258, i32 0, i32 0
  %160 = load i8*, i8** %arena259, align 8
  %161 = load i32, i32* %nsz242, align 4
  %conv260 = sext i32 %161 to i64
  %mul261 = mul i64 %conv260, 1
  %call262 = call i8* @Perl_safesysrealloc(i8* %160, i64 %mul261)
  %162 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf263 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %162, i32 0, i32 22
  %arena264 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf263, i32 0, i32 0
  store i8* %call262, i8** %arena264, align 8
  %163 = load i32, i32* %nsz242, align 4
  %conv265 = sext i32 %163 to i64
  %164 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf266 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %164, i32 0, i32 22
  %asiz267 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf266, i32 0, i32 1
  store i64 %conv265, i64* %asiz267, align 8
  %165 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf268 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %165, i32 0, i32 22
  %arena269 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf268, i32 0, i32 0
  %166 = load i8*, i8** %arena269, align 8
  %167 = load i32, i32* %offset249, align 4
  %idx.ext270 = sext i32 %167 to i64
  %add.ptr271 = getelementptr inbounds i8, i8* %166, i64 %idx.ext270
  %168 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf272 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %168, i32 0, i32 22
  %aptr273 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf272, i32 0, i32 2
  store i8* %add.ptr271, i8** %aptr273, align 8
  %169 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf274 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %169, i32 0, i32 22
  %arena275 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf274, i32 0, i32 0
  %170 = load i8*, i8** %arena275, align 8
  %171 = load i32, i32* %nsz242, align 4
  %idx.ext276 = sext i32 %171 to i64
  %add.ptr277 = getelementptr inbounds i8, i8* %170, i64 %idx.ext276
  %172 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf278 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %172, i32 0, i32 22
  %aend279 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf278, i32 0, i32 3
  store i8* %add.ptr277, i8** %aend279, align 8
  br label %do.end280

do.end280:                                        ; preds = %do.body241
  %173 = load i32, i32* %is_weak, align 4
  %conv281 = trunc i32 %173 to i8
  %conv282 = sext i8 %conv281 to i32
  %tobool283 = icmp ne i32 %conv282, 0
  %174 = zext i1 %tobool283 to i64
  %cond284 = select i1 %tobool283, i32 27, i32 4
  %conv285 = trunc i32 %cond284 to i8
  %175 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf286 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %175, i32 0, i32 22
  %aptr287 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf286, i32 0, i32 2
  %176 = load i8*, i8** %aptr287, align 8
  %incdec.ptr288 = getelementptr inbounds i8, i8* %176, i32 1
  store i8* %incdec.ptr288, i8** %aptr287, align 8
  store i8 %conv285, i8* %176, align 1
  br label %if.end289

if.end289:                                        ; preds = %do.end280, %if.then231
  br label %do.end290

do.end290:                                        ; preds = %if.end289
  br label %if.end300

if.else291:                                       ; preds = %do.body220
  %177 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio292 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %177, i32 0, i32 24
  %178 = load %struct._PerlIO**, %struct._PerlIO*** %fio292, align 8
  %179 = load i32, i32* %is_weak, align 4
  %tobool293 = icmp ne i32 %179, 0
  %180 = zext i1 %tobool293 to i64
  %cond294 = select i1 %tobool293, i32 27, i32 4
  %call295 = call i32 @PerlIO_putc(%struct._PerlIO** %178, i32 %cond294)
  %cmp296 = icmp eq i32 %call295, -1
  br i1 %cmp296, label %if.then298, label %if.end299

if.then298:                                       ; preds = %if.else291
  store i32 -1, i32* %retval, align 4
  br label %return

if.end299:                                        ; preds = %if.else291
  br label %if.end300

if.end300:                                        ; preds = %if.end299, %do.end290
  br label %do.end301

do.end301:                                        ; preds = %if.end300
  br label %if.end302

if.end302:                                        ; preds = %do.end301, %if.end218
  %181 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %182 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call303 = call i32 @store(%struct.stcxt* %181, %struct.sv* %182)
  store i32 %call303, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end302, %if.then298, %if.then214, %if.then131
  %183 = load i32, i32* %retval, align 4
  ret i32 %183
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @store_scalar(%struct.stcxt* %cxt, %struct.sv* %sv) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %iv = alloca i64, align 8
  %pv = alloca i8*, align 8
  %len = alloca i64, align 8
  %flags = alloca i32, align 4
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %nsz67 = alloca i32, align 4
  %offset74 = alloca i32, align 4
  %nsz146 = alloca i32, align 4
  %offset153 = alloca i32, align 4
  %nsz220 = alloca i32, align 4
  %offset227 = alloca i32, align 4
  %siv = alloca i8, align 1
  %nsz340 = alloca i32, align 4
  %offset347 = alloca i32, align 4
  %nsz410 = alloca i32, align 4
  %offset417 = alloca i32, align 4
  %niv = alloca i32, align 4
  %nsz510 = alloca i32, align 4
  %offset517 = alloca i32, align 4
  %nsz578 = alloca i32, align 4
  %offset585 = alloca i32, align 4
  %nsz664 = alloca i32, align 4
  %offset671 = alloca i32, align 4
  %nsz732 = alloca i32, align 4
  %offset739 = alloca i32, align 4
  %nv = alloca double, align 8
  %nsz866 = alloca i32, align 4
  %offset873 = alloca i32, align 4
  %nsz934 = alloca i32, align 4
  %offset941 = alloca i32, align 4
  %mg = alloca %struct.magic*, align 8
  %wlen = alloca i32, align 4
  %len1014 = alloca i32, align 4
  %clen = alloca i8, align 1
  %nsz1038 = alloca i32, align 4
  %offset1045 = alloca i32, align 4
  %nsz1108 = alloca i32, align 4
  %offset1115 = alloca i32, align 4
  %nsz1180 = alloca i32, align 4
  %offset1188 = alloca i32, align 4
  %nsz1261 = alloca i32, align 4
  %offset1268 = alloca i32, align 4
  %y = alloca i32, align 4
  %nsz1333 = alloca i32, align 4
  %offset1340 = alloca i32, align 4
  %nsz1415 = alloca i32, align 4
  %offset1422 = alloca i32, align 4
  %nsz1500 = alloca i32, align 4
  %offset1508 = alloca i32, align 4
  %clen1575 = alloca i8, align 1
  %nsz1594 = alloca i32, align 4
  %offset1601 = alloca i32, align 4
  %nsz1664 = alloca i32, align 4
  %offset1671 = alloca i32, align 4
  %nsz1736 = alloca i32, align 4
  %offset1744 = alloca i32, align 4
  %nsz1816 = alloca i32, align 4
  %offset1823 = alloca i32, align 4
  %y1873 = alloca i32, align 4
  %nsz1889 = alloca i32, align 4
  %offset1896 = alloca i32, align 4
  %nsz1971 = alloca i32, align 4
  %offset1978 = alloca i32, align 4
  %nsz2056 = alloca i32, align 4
  %offset2064 = alloca i32, align 4
  %clen2124 = alloca i8, align 1
  %nsz2143 = alloca i32, align 4
  %offset2150 = alloca i32, align 4
  %nsz2213 = alloca i32, align 4
  %offset2220 = alloca i32, align 4
  %nsz2285 = alloca i32, align 4
  %offset2293 = alloca i32, align 4
  %nsz2365 = alloca i32, align 4
  %offset2372 = alloca i32, align 4
  %y2422 = alloca i32, align 4
  %nsz2438 = alloca i32, align 4
  %offset2445 = alloca i32, align 4
  %nsz2520 = alloca i32, align 4
  %offset2527 = alloca i32, align 4
  %nsz2605 = alloca i32, align 4
  %offset2613 = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  store i32 %1, i32* %flags, align 4
  %2 = load i32, i32* %flags, align 4
  %and = and i32 %2, 65280
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end121, label %if.then

if.then:                                          ; preds = %entry
  %3 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp = icmp eq %struct.sv* %3, @PL_sv_undef
  br i1 %cmp, label %if.then1, label %if.else49

if.then1:                                         ; preds = %if.then
  br label %do.body

do.body:                                          ; preds = %if.then1
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 24
  %5 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool2 = icmp ne %struct._PerlIO** %5, null
  br i1 %tobool2, label %if.else40, label %if.then3

if.then3:                                         ; preds = %do.body
  br label %do.body4

do.body4:                                         ; preds = %if.then3
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %7 = load i8*, i8** %aptr, align 8
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf5, i32 0, i32 3
  %9 = load i8*, i8** %aend, align 8
  %cmp6 = icmp ult i8* %7, %9
  br i1 %cmp6, label %if.then7, label %if.else

if.then7:                                         ; preds = %do.body4
  %10 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf8 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %10, i32 0, i32 22
  %aptr9 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf8, i32 0, i32 2
  %11 = load i8*, i8** %aptr9, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr, i8** %aptr9, align 8
  store i8 14, i8* %11, align 1
  br label %if.end

if.else:                                          ; preds = %do.body4
  br label %do.body10

do.body10:                                        ; preds = %if.else
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf11 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 22
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf11, i32 0, i32 1
  %13 = load i64, i64* %asiz, align 8
  %add = add i64 1, %13
  %add12 = add i64 %add, 8191
  %and13 = and i64 %add12, -8192
  %conv = trunc i64 %and13 to i32
  store i32 %conv, i32* %nsz, align 4
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 22
  %aptr15 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf14, i32 0, i32 2
  %15 = load i8*, i8** %aptr15, align 8
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf16 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 22
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf16, i32 0, i32 0
  %17 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %15 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %17 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv17 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv17, i32* %offset, align 4
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf18 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 22
  %arena19 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf18, i32 0, i32 0
  %19 = load i8*, i8** %arena19, align 8
  %20 = load i32, i32* %nsz, align 4
  %conv20 = sext i32 %20 to i64
  %mul = mul i64 %conv20, 1
  %call = call i8* @Perl_safesysrealloc(i8* %19, i64 %mul)
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf21 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 22
  %arena22 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf21, i32 0, i32 0
  store i8* %call, i8** %arena22, align 8
  %22 = load i32, i32* %nsz, align 4
  %conv23 = sext i32 %22 to i64
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf24 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 22
  %asiz25 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf24, i32 0, i32 1
  store i64 %conv23, i64* %asiz25, align 8
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 22
  %arena27 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 0
  %25 = load i8*, i8** %arena27, align 8
  %26 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %26 to i64
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %idx.ext
  %27 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf28 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %27, i32 0, i32 22
  %aptr29 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf28, i32 0, i32 2
  store i8* %add.ptr, i8** %aptr29, align 8
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf30 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 22
  %arena31 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf30, i32 0, i32 0
  %29 = load i8*, i8** %arena31, align 8
  %30 = load i32, i32* %nsz, align 4
  %idx.ext32 = sext i32 %30 to i64
  %add.ptr33 = getelementptr inbounds i8, i8* %29, i64 %idx.ext32
  %31 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf34 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %31, i32 0, i32 22
  %aend35 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf34, i32 0, i32 3
  store i8* %add.ptr33, i8** %aend35, align 8
  br label %do.end

do.end:                                           ; preds = %do.body10
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf36 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %32, i32 0, i32 22
  %aptr37 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf36, i32 0, i32 2
  %33 = load i8*, i8** %aptr37, align 8
  %incdec.ptr38 = getelementptr inbounds i8, i8* %33, i32 1
  store i8* %incdec.ptr38, i8** %aptr37, align 8
  store i8 14, i8* %33, align 1
  br label %if.end

if.end:                                           ; preds = %do.end, %if.then7
  br label %do.end39

do.end39:                                         ; preds = %if.end
  br label %if.end47

if.else40:                                        ; preds = %do.body
  %34 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio41 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %34, i32 0, i32 24
  %35 = load %struct._PerlIO**, %struct._PerlIO*** %fio41, align 8
  %call42 = call i32 @PerlIO_putc(%struct._PerlIO** %35, i32 14)
  %cmp43 = icmp eq i32 %call42, -1
  br i1 %cmp43, label %if.then45, label %if.end46

if.then45:                                        ; preds = %if.else40
  store i32 -1, i32* %retval, align 4
  br label %return

if.end46:                                         ; preds = %if.else40
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %do.end39
  br label %do.end48

do.end48:                                         ; preds = %if.end47
  br label %if.end120

if.else49:                                        ; preds = %if.then
  br label %do.body50

do.body50:                                        ; preds = %if.else49
  %36 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio51 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %36, i32 0, i32 24
  %37 = load %struct._PerlIO**, %struct._PerlIO*** %fio51, align 8
  %tobool52 = icmp ne %struct._PerlIO** %37, null
  br i1 %tobool52, label %if.else111, label %if.then53

if.then53:                                        ; preds = %do.body50
  br label %do.body54

do.body54:                                        ; preds = %if.then53
  %38 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf55 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %38, i32 0, i32 22
  %aptr56 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf55, i32 0, i32 2
  %39 = load i8*, i8** %aptr56, align 8
  %40 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf57 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %40, i32 0, i32 22
  %aend58 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf57, i32 0, i32 3
  %41 = load i8*, i8** %aend58, align 8
  %cmp59 = icmp ult i8* %39, %41
  br i1 %cmp59, label %if.then61, label %if.else65

if.then61:                                        ; preds = %do.body54
  %42 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf62 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %42, i32 0, i32 22
  %aptr63 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf62, i32 0, i32 2
  %43 = load i8*, i8** %aptr63, align 8
  %incdec.ptr64 = getelementptr inbounds i8, i8* %43, i32 1
  store i8* %incdec.ptr64, i8** %aptr63, align 8
  store i8 5, i8* %43, align 1
  br label %if.end109

if.else65:                                        ; preds = %do.body54
  br label %do.body66

do.body66:                                        ; preds = %if.else65
  %44 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf68 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %44, i32 0, i32 22
  %asiz69 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf68, i32 0, i32 1
  %45 = load i64, i64* %asiz69, align 8
  %add70 = add i64 1, %45
  %add71 = add i64 %add70, 8191
  %and72 = and i64 %add71, -8192
  %conv73 = trunc i64 %and72 to i32
  store i32 %conv73, i32* %nsz67, align 4
  %46 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf75 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %46, i32 0, i32 22
  %aptr76 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf75, i32 0, i32 2
  %47 = load i8*, i8** %aptr76, align 8
  %48 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf77 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %48, i32 0, i32 22
  %arena78 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf77, i32 0, i32 0
  %49 = load i8*, i8** %arena78, align 8
  %sub.ptr.lhs.cast79 = ptrtoint i8* %47 to i64
  %sub.ptr.rhs.cast80 = ptrtoint i8* %49 to i64
  %sub.ptr.sub81 = sub i64 %sub.ptr.lhs.cast79, %sub.ptr.rhs.cast80
  %conv82 = trunc i64 %sub.ptr.sub81 to i32
  store i32 %conv82, i32* %offset74, align 4
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf83 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %50, i32 0, i32 22
  %arena84 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf83, i32 0, i32 0
  %51 = load i8*, i8** %arena84, align 8
  %52 = load i32, i32* %nsz67, align 4
  %conv85 = sext i32 %52 to i64
  %mul86 = mul i64 %conv85, 1
  %call87 = call i8* @Perl_safesysrealloc(i8* %51, i64 %mul86)
  %53 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf88 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %53, i32 0, i32 22
  %arena89 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf88, i32 0, i32 0
  store i8* %call87, i8** %arena89, align 8
  %54 = load i32, i32* %nsz67, align 4
  %conv90 = sext i32 %54 to i64
  %55 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf91 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %55, i32 0, i32 22
  %asiz92 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf91, i32 0, i32 1
  store i64 %conv90, i64* %asiz92, align 8
  %56 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf93 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %56, i32 0, i32 22
  %arena94 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf93, i32 0, i32 0
  %57 = load i8*, i8** %arena94, align 8
  %58 = load i32, i32* %offset74, align 4
  %idx.ext95 = sext i32 %58 to i64
  %add.ptr96 = getelementptr inbounds i8, i8* %57, i64 %idx.ext95
  %59 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf97 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %59, i32 0, i32 22
  %aptr98 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf97, i32 0, i32 2
  store i8* %add.ptr96, i8** %aptr98, align 8
  %60 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf99 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %60, i32 0, i32 22
  %arena100 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf99, i32 0, i32 0
  %61 = load i8*, i8** %arena100, align 8
  %62 = load i32, i32* %nsz67, align 4
  %idx.ext101 = sext i32 %62 to i64
  %add.ptr102 = getelementptr inbounds i8, i8* %61, i64 %idx.ext101
  %63 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf103 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %63, i32 0, i32 22
  %aend104 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf103, i32 0, i32 3
  store i8* %add.ptr102, i8** %aend104, align 8
  br label %do.end105

do.end105:                                        ; preds = %do.body66
  %64 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf106 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %64, i32 0, i32 22
  %aptr107 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf106, i32 0, i32 2
  %65 = load i8*, i8** %aptr107, align 8
  %incdec.ptr108 = getelementptr inbounds i8, i8* %65, i32 1
  store i8* %incdec.ptr108, i8** %aptr107, align 8
  store i8 5, i8* %65, align 1
  br label %if.end109

if.end109:                                        ; preds = %do.end105, %if.then61
  br label %do.end110

do.end110:                                        ; preds = %if.end109
  br label %if.end118

if.else111:                                       ; preds = %do.body50
  %66 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio112 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %66, i32 0, i32 24
  %67 = load %struct._PerlIO**, %struct._PerlIO*** %fio112, align 8
  %call113 = call i32 @PerlIO_putc(%struct._PerlIO** %67, i32 5)
  %cmp114 = icmp eq i32 %call113, -1
  br i1 %cmp114, label %if.then116, label %if.end117

if.then116:                                       ; preds = %if.else111
  store i32 -1, i32* %retval, align 4
  br label %return

if.end117:                                        ; preds = %if.else111
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %do.end110
  br label %do.end119

do.end119:                                        ; preds = %if.end118
  br label %if.end120

if.end120:                                        ; preds = %do.end119, %do.end48
  store i32 0, i32* %retval, align 4
  br label %return

if.end121:                                        ; preds = %entry
  %68 = load i32, i32* %flags, align 4
  %and122 = and i32 %68, 134219264
  %cmp123 = icmp eq i32 %and122, 134219264
  br i1 %cmp123, label %if.then125, label %if.else281

if.then125:                                       ; preds = %if.end121
  %69 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp126 = icmp eq %struct.sv* %69, @PL_sv_yes
  br i1 %cmp126, label %if.then128, label %if.else199

if.then128:                                       ; preds = %if.then125
  br label %do.body129

do.body129:                                       ; preds = %if.then128
  %70 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio130 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %70, i32 0, i32 24
  %71 = load %struct._PerlIO**, %struct._PerlIO*** %fio130, align 8
  %tobool131 = icmp ne %struct._PerlIO** %71, null
  br i1 %tobool131, label %if.else190, label %if.then132

if.then132:                                       ; preds = %do.body129
  br label %do.body133

do.body133:                                       ; preds = %if.then132
  %72 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf134 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %72, i32 0, i32 22
  %aptr135 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf134, i32 0, i32 2
  %73 = load i8*, i8** %aptr135, align 8
  %74 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf136 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %74, i32 0, i32 22
  %aend137 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf136, i32 0, i32 3
  %75 = load i8*, i8** %aend137, align 8
  %cmp138 = icmp ult i8* %73, %75
  br i1 %cmp138, label %if.then140, label %if.else144

if.then140:                                       ; preds = %do.body133
  %76 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf141 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %76, i32 0, i32 22
  %aptr142 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf141, i32 0, i32 2
  %77 = load i8*, i8** %aptr142, align 8
  %incdec.ptr143 = getelementptr inbounds i8, i8* %77, i32 1
  store i8* %incdec.ptr143, i8** %aptr142, align 8
  store i8 15, i8* %77, align 1
  br label %if.end188

if.else144:                                       ; preds = %do.body133
  br label %do.body145

do.body145:                                       ; preds = %if.else144
  %78 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf147 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %78, i32 0, i32 22
  %asiz148 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf147, i32 0, i32 1
  %79 = load i64, i64* %asiz148, align 8
  %add149 = add i64 1, %79
  %add150 = add i64 %add149, 8191
  %and151 = and i64 %add150, -8192
  %conv152 = trunc i64 %and151 to i32
  store i32 %conv152, i32* %nsz146, align 4
  %80 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf154 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %80, i32 0, i32 22
  %aptr155 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf154, i32 0, i32 2
  %81 = load i8*, i8** %aptr155, align 8
  %82 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf156 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %82, i32 0, i32 22
  %arena157 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf156, i32 0, i32 0
  %83 = load i8*, i8** %arena157, align 8
  %sub.ptr.lhs.cast158 = ptrtoint i8* %81 to i64
  %sub.ptr.rhs.cast159 = ptrtoint i8* %83 to i64
  %sub.ptr.sub160 = sub i64 %sub.ptr.lhs.cast158, %sub.ptr.rhs.cast159
  %conv161 = trunc i64 %sub.ptr.sub160 to i32
  store i32 %conv161, i32* %offset153, align 4
  %84 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf162 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %84, i32 0, i32 22
  %arena163 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf162, i32 0, i32 0
  %85 = load i8*, i8** %arena163, align 8
  %86 = load i32, i32* %nsz146, align 4
  %conv164 = sext i32 %86 to i64
  %mul165 = mul i64 %conv164, 1
  %call166 = call i8* @Perl_safesysrealloc(i8* %85, i64 %mul165)
  %87 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf167 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %87, i32 0, i32 22
  %arena168 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf167, i32 0, i32 0
  store i8* %call166, i8** %arena168, align 8
  %88 = load i32, i32* %nsz146, align 4
  %conv169 = sext i32 %88 to i64
  %89 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf170 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %89, i32 0, i32 22
  %asiz171 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf170, i32 0, i32 1
  store i64 %conv169, i64* %asiz171, align 8
  %90 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf172 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %90, i32 0, i32 22
  %arena173 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf172, i32 0, i32 0
  %91 = load i8*, i8** %arena173, align 8
  %92 = load i32, i32* %offset153, align 4
  %idx.ext174 = sext i32 %92 to i64
  %add.ptr175 = getelementptr inbounds i8, i8* %91, i64 %idx.ext174
  %93 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf176 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %93, i32 0, i32 22
  %aptr177 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf176, i32 0, i32 2
  store i8* %add.ptr175, i8** %aptr177, align 8
  %94 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf178 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %94, i32 0, i32 22
  %arena179 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf178, i32 0, i32 0
  %95 = load i8*, i8** %arena179, align 8
  %96 = load i32, i32* %nsz146, align 4
  %idx.ext180 = sext i32 %96 to i64
  %add.ptr181 = getelementptr inbounds i8, i8* %95, i64 %idx.ext180
  %97 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf182 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %97, i32 0, i32 22
  %aend183 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf182, i32 0, i32 3
  store i8* %add.ptr181, i8** %aend183, align 8
  br label %do.end184

do.end184:                                        ; preds = %do.body145
  %98 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf185 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %98, i32 0, i32 22
  %aptr186 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf185, i32 0, i32 2
  %99 = load i8*, i8** %aptr186, align 8
  %incdec.ptr187 = getelementptr inbounds i8, i8* %99, i32 1
  store i8* %incdec.ptr187, i8** %aptr186, align 8
  store i8 15, i8* %99, align 1
  br label %if.end188

if.end188:                                        ; preds = %do.end184, %if.then140
  br label %do.end189

do.end189:                                        ; preds = %if.end188
  br label %if.end197

if.else190:                                       ; preds = %do.body129
  %100 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio191 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %100, i32 0, i32 24
  %101 = load %struct._PerlIO**, %struct._PerlIO*** %fio191, align 8
  %call192 = call i32 @PerlIO_putc(%struct._PerlIO** %101, i32 15)
  %cmp193 = icmp eq i32 %call192, -1
  br i1 %cmp193, label %if.then195, label %if.end196

if.then195:                                       ; preds = %if.else190
  store i32 -1, i32* %retval, align 4
  br label %return

if.end196:                                        ; preds = %if.else190
  br label %if.end197

if.end197:                                        ; preds = %if.end196, %do.end189
  br label %do.end198

do.end198:                                        ; preds = %if.end197
  br label %if.end280

if.else199:                                       ; preds = %if.then125
  %102 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp200 = icmp eq %struct.sv* %102, @PL_sv_no
  br i1 %cmp200, label %if.then202, label %if.else273

if.then202:                                       ; preds = %if.else199
  br label %do.body203

do.body203:                                       ; preds = %if.then202
  %103 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio204 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %103, i32 0, i32 24
  %104 = load %struct._PerlIO**, %struct._PerlIO*** %fio204, align 8
  %tobool205 = icmp ne %struct._PerlIO** %104, null
  br i1 %tobool205, label %if.else264, label %if.then206

if.then206:                                       ; preds = %do.body203
  br label %do.body207

do.body207:                                       ; preds = %if.then206
  %105 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf208 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %105, i32 0, i32 22
  %aptr209 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf208, i32 0, i32 2
  %106 = load i8*, i8** %aptr209, align 8
  %107 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf210 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %107, i32 0, i32 22
  %aend211 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf210, i32 0, i32 3
  %108 = load i8*, i8** %aend211, align 8
  %cmp212 = icmp ult i8* %106, %108
  br i1 %cmp212, label %if.then214, label %if.else218

if.then214:                                       ; preds = %do.body207
  %109 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf215 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %109, i32 0, i32 22
  %aptr216 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf215, i32 0, i32 2
  %110 = load i8*, i8** %aptr216, align 8
  %incdec.ptr217 = getelementptr inbounds i8, i8* %110, i32 1
  store i8* %incdec.ptr217, i8** %aptr216, align 8
  store i8 16, i8* %110, align 1
  br label %if.end262

if.else218:                                       ; preds = %do.body207
  br label %do.body219

do.body219:                                       ; preds = %if.else218
  %111 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf221 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %111, i32 0, i32 22
  %asiz222 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf221, i32 0, i32 1
  %112 = load i64, i64* %asiz222, align 8
  %add223 = add i64 1, %112
  %add224 = add i64 %add223, 8191
  %and225 = and i64 %add224, -8192
  %conv226 = trunc i64 %and225 to i32
  store i32 %conv226, i32* %nsz220, align 4
  %113 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf228 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %113, i32 0, i32 22
  %aptr229 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf228, i32 0, i32 2
  %114 = load i8*, i8** %aptr229, align 8
  %115 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf230 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %115, i32 0, i32 22
  %arena231 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf230, i32 0, i32 0
  %116 = load i8*, i8** %arena231, align 8
  %sub.ptr.lhs.cast232 = ptrtoint i8* %114 to i64
  %sub.ptr.rhs.cast233 = ptrtoint i8* %116 to i64
  %sub.ptr.sub234 = sub i64 %sub.ptr.lhs.cast232, %sub.ptr.rhs.cast233
  %conv235 = trunc i64 %sub.ptr.sub234 to i32
  store i32 %conv235, i32* %offset227, align 4
  %117 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf236 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %117, i32 0, i32 22
  %arena237 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf236, i32 0, i32 0
  %118 = load i8*, i8** %arena237, align 8
  %119 = load i32, i32* %nsz220, align 4
  %conv238 = sext i32 %119 to i64
  %mul239 = mul i64 %conv238, 1
  %call240 = call i8* @Perl_safesysrealloc(i8* %118, i64 %mul239)
  %120 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf241 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %120, i32 0, i32 22
  %arena242 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf241, i32 0, i32 0
  store i8* %call240, i8** %arena242, align 8
  %121 = load i32, i32* %nsz220, align 4
  %conv243 = sext i32 %121 to i64
  %122 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf244 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %122, i32 0, i32 22
  %asiz245 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf244, i32 0, i32 1
  store i64 %conv243, i64* %asiz245, align 8
  %123 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf246 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %123, i32 0, i32 22
  %arena247 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf246, i32 0, i32 0
  %124 = load i8*, i8** %arena247, align 8
  %125 = load i32, i32* %offset227, align 4
  %idx.ext248 = sext i32 %125 to i64
  %add.ptr249 = getelementptr inbounds i8, i8* %124, i64 %idx.ext248
  %126 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf250 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %126, i32 0, i32 22
  %aptr251 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf250, i32 0, i32 2
  store i8* %add.ptr249, i8** %aptr251, align 8
  %127 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf252 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %127, i32 0, i32 22
  %arena253 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf252, i32 0, i32 0
  %128 = load i8*, i8** %arena253, align 8
  %129 = load i32, i32* %nsz220, align 4
  %idx.ext254 = sext i32 %129 to i64
  %add.ptr255 = getelementptr inbounds i8, i8* %128, i64 %idx.ext254
  %130 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf256 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %130, i32 0, i32 22
  %aend257 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf256, i32 0, i32 3
  store i8* %add.ptr255, i8** %aend257, align 8
  br label %do.end258

do.end258:                                        ; preds = %do.body219
  %131 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf259 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %131, i32 0, i32 22
  %aptr260 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf259, i32 0, i32 2
  %132 = load i8*, i8** %aptr260, align 8
  %incdec.ptr261 = getelementptr inbounds i8, i8* %132, i32 1
  store i8* %incdec.ptr261, i8** %aptr260, align 8
  store i8 16, i8* %132, align 1
  br label %if.end262

if.end262:                                        ; preds = %do.end258, %if.then214
  br label %do.end263

do.end263:                                        ; preds = %if.end262
  br label %if.end271

if.else264:                                       ; preds = %do.body203
  %133 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio265 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %133, i32 0, i32 24
  %134 = load %struct._PerlIO**, %struct._PerlIO*** %fio265, align 8
  %call266 = call i32 @PerlIO_putc(%struct._PerlIO** %134, i32 16)
  %cmp267 = icmp eq i32 %call266, -1
  br i1 %cmp267, label %if.then269, label %if.end270

if.then269:                                       ; preds = %if.else264
  store i32 -1, i32* %retval, align 4
  br label %return

if.end270:                                        ; preds = %if.else264
  br label %if.end271

if.end271:                                        ; preds = %if.end270, %do.end263
  br label %do.end272

do.end272:                                        ; preds = %if.end271
  br label %if.end279

if.else273:                                       ; preds = %if.else199
  %135 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags274 = getelementptr inbounds %struct.sv, %struct.sv* %135, i32 0, i32 2
  %136 = load i32, i32* %sv_flags274, align 4
  %and275 = and i32 %136, 2098176
  %cmp276 = icmp eq i32 %and275, 1024
  br i1 %cmp276, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else273
  %137 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %137, i32 0, i32 0
  %138 = load i8*, i8** %sv_any, align 8
  %139 = bitcast i8* %138 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %139, i32 0, i32 2
  %140 = load i64, i64* %xpv_cur, align 8
  store i64 %140, i64* %len, align 8
  %141 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %141, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %142 = load i8*, i8** %svu_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.else273
  %143 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call278 = call i8* @Perl_sv_2pv_flags(%struct.sv* %143, i64* %len, i32 2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %142, %cond.true ], [ %call278, %cond.false ]
  store i8* %cond, i8** %pv, align 8
  br label %string

if.end279:                                        ; preds = %do.end272
  br label %if.end280

if.end280:                                        ; preds = %if.end279, %do.end198
  br label %if.end2677

if.else281:                                       ; preds = %if.end121
  %144 = load i32, i32* %flags, align 4
  %and282 = and i32 %144, 1024
  %tobool283 = icmp ne i32 %and282, 0
  br i1 %tobool283, label %if.then284, label %if.else285

if.then284:                                       ; preds = %if.else281
  br label %string_readlen

if.else285:                                       ; preds = %if.else281
  %145 = load i32, i32* %flags, align 4
  %and286 = and i32 %145, 256
  %tobool287 = icmp ne i32 %and286, 0
  br i1 %tobool287, label %if.then288, label %if.else790

if.then288:                                       ; preds = %if.else285
  %146 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags289 = getelementptr inbounds %struct.sv, %struct.sv* %146, i32 0, i32 2
  %147 = load i32, i32* %sv_flags289, align 4
  %and290 = and i32 %147, 2097408
  %cmp291 = icmp eq i32 %and290, 256
  br i1 %cmp291, label %cond.true293, label %cond.false295

cond.true293:                                     ; preds = %if.then288
  %148 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any294 = getelementptr inbounds %struct.sv, %struct.sv* %148, i32 0, i32 0
  %149 = load i8*, i8** %sv_any294, align 8
  %150 = bitcast i8* %149 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %150, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %151 = load i64, i64* %xivu_iv, align 8
  br label %cond.end297

cond.false295:                                    ; preds = %if.then288
  %152 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call296 = call i64 @Perl_sv_2iv_flags(%struct.sv* %152, i32 2)
  br label %cond.end297

cond.end297:                                      ; preds = %cond.false295, %cond.true293
  %cond298 = phi i64 [ %151, %cond.true293 ], [ %call296, %cond.false295 ]
  store i64 %cond298, i64* %iv, align 8
  br label %integer

integer:                                          ; preds = %cond.end832, %cond.end297
  %153 = load i32, i32* %flags, align 4
  %and299 = and i32 %153, -2147483648
  %tobool300 = icmp ne i32 %and299, 0
  br i1 %tobool300, label %land.lhs.true, label %if.end314

land.lhs.true:                                    ; preds = %integer
  %154 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags301 = getelementptr inbounds %struct.sv, %struct.sv* %154, i32 0, i32 2
  %155 = load i32, i32* %sv_flags301, align 4
  %and302 = and i32 %155, -2145386240
  %cmp303 = icmp eq i32 %and302, -2147483392
  br i1 %cmp303, label %cond.true305, label %cond.false307

cond.true305:                                     ; preds = %land.lhs.true
  %156 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any306 = getelementptr inbounds %struct.sv, %struct.sv* %156, i32 0, i32 0
  %157 = load i8*, i8** %sv_any306, align 8
  %158 = bitcast i8* %157 to %struct.xpvuv*
  %xuv_u = getelementptr inbounds %struct.xpvuv, %struct.xpvuv* %158, i32 0, i32 4
  %xivu_uv = bitcast %union._xivu* %xuv_u to i64*
  %159 = load i64, i64* %xivu_uv, align 8
  br label %cond.end309

cond.false307:                                    ; preds = %land.lhs.true
  %160 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call308 = call i64 @Perl_sv_2uv_flags(%struct.sv* %160, i32 2)
  br label %cond.end309

cond.end309:                                      ; preds = %cond.false307, %cond.true305
  %cond310 = phi i64 [ %159, %cond.true305 ], [ %call308, %cond.false307 ]
  %cmp311 = icmp ugt i64 %cond310, 9223372036854775807
  br i1 %cmp311, label %if.then313, label %if.end314

if.then313:                                       ; preds = %cond.end309
  br label %string_readlen

if.end314:                                        ; preds = %cond.end309, %integer
  %161 = load i64, i64* %iv, align 8
  %cmp315 = icmp sge i64 %161, -128
  br i1 %cmp315, label %land.lhs.true317, label %if.else464

land.lhs.true317:                                 ; preds = %if.end314
  %162 = load i64, i64* %iv, align 8
  %cmp318 = icmp sle i64 %162, 127
  br i1 %cmp318, label %if.then320, label %if.else464

if.then320:                                       ; preds = %land.lhs.true317
  %163 = load i64, i64* %iv, align 8
  %add321 = add nsw i64 %163, 128
  %conv322 = trunc i64 %add321 to i8
  store i8 %conv322, i8* %siv, align 1
  br label %do.body323

do.body323:                                       ; preds = %if.then320
  %164 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio324 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %164, i32 0, i32 24
  %165 = load %struct._PerlIO**, %struct._PerlIO*** %fio324, align 8
  %tobool325 = icmp ne %struct._PerlIO** %165, null
  br i1 %tobool325, label %if.else384, label %if.then326

if.then326:                                       ; preds = %do.body323
  br label %do.body327

do.body327:                                       ; preds = %if.then326
  %166 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf328 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %166, i32 0, i32 22
  %aptr329 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf328, i32 0, i32 2
  %167 = load i8*, i8** %aptr329, align 8
  %168 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf330 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %168, i32 0, i32 22
  %aend331 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf330, i32 0, i32 3
  %169 = load i8*, i8** %aend331, align 8
  %cmp332 = icmp ult i8* %167, %169
  br i1 %cmp332, label %if.then334, label %if.else338

if.then334:                                       ; preds = %do.body327
  %170 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf335 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %170, i32 0, i32 22
  %aptr336 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf335, i32 0, i32 2
  %171 = load i8*, i8** %aptr336, align 8
  %incdec.ptr337 = getelementptr inbounds i8, i8* %171, i32 1
  store i8* %incdec.ptr337, i8** %aptr336, align 8
  store i8 8, i8* %171, align 1
  br label %if.end382

if.else338:                                       ; preds = %do.body327
  br label %do.body339

do.body339:                                       ; preds = %if.else338
  %172 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf341 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %172, i32 0, i32 22
  %asiz342 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf341, i32 0, i32 1
  %173 = load i64, i64* %asiz342, align 8
  %add343 = add i64 1, %173
  %add344 = add i64 %add343, 8191
  %and345 = and i64 %add344, -8192
  %conv346 = trunc i64 %and345 to i32
  store i32 %conv346, i32* %nsz340, align 4
  %174 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf348 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %174, i32 0, i32 22
  %aptr349 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf348, i32 0, i32 2
  %175 = load i8*, i8** %aptr349, align 8
  %176 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf350 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %176, i32 0, i32 22
  %arena351 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf350, i32 0, i32 0
  %177 = load i8*, i8** %arena351, align 8
  %sub.ptr.lhs.cast352 = ptrtoint i8* %175 to i64
  %sub.ptr.rhs.cast353 = ptrtoint i8* %177 to i64
  %sub.ptr.sub354 = sub i64 %sub.ptr.lhs.cast352, %sub.ptr.rhs.cast353
  %conv355 = trunc i64 %sub.ptr.sub354 to i32
  store i32 %conv355, i32* %offset347, align 4
  %178 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf356 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %178, i32 0, i32 22
  %arena357 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf356, i32 0, i32 0
  %179 = load i8*, i8** %arena357, align 8
  %180 = load i32, i32* %nsz340, align 4
  %conv358 = sext i32 %180 to i64
  %mul359 = mul i64 %conv358, 1
  %call360 = call i8* @Perl_safesysrealloc(i8* %179, i64 %mul359)
  %181 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf361 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %181, i32 0, i32 22
  %arena362 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf361, i32 0, i32 0
  store i8* %call360, i8** %arena362, align 8
  %182 = load i32, i32* %nsz340, align 4
  %conv363 = sext i32 %182 to i64
  %183 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf364 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %183, i32 0, i32 22
  %asiz365 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf364, i32 0, i32 1
  store i64 %conv363, i64* %asiz365, align 8
  %184 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf366 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %184, i32 0, i32 22
  %arena367 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf366, i32 0, i32 0
  %185 = load i8*, i8** %arena367, align 8
  %186 = load i32, i32* %offset347, align 4
  %idx.ext368 = sext i32 %186 to i64
  %add.ptr369 = getelementptr inbounds i8, i8* %185, i64 %idx.ext368
  %187 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf370 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %187, i32 0, i32 22
  %aptr371 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf370, i32 0, i32 2
  store i8* %add.ptr369, i8** %aptr371, align 8
  %188 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf372 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %188, i32 0, i32 22
  %arena373 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf372, i32 0, i32 0
  %189 = load i8*, i8** %arena373, align 8
  %190 = load i32, i32* %nsz340, align 4
  %idx.ext374 = sext i32 %190 to i64
  %add.ptr375 = getelementptr inbounds i8, i8* %189, i64 %idx.ext374
  %191 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf376 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %191, i32 0, i32 22
  %aend377 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf376, i32 0, i32 3
  store i8* %add.ptr375, i8** %aend377, align 8
  br label %do.end378

do.end378:                                        ; preds = %do.body339
  %192 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf379 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %192, i32 0, i32 22
  %aptr380 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf379, i32 0, i32 2
  %193 = load i8*, i8** %aptr380, align 8
  %incdec.ptr381 = getelementptr inbounds i8, i8* %193, i32 1
  store i8* %incdec.ptr381, i8** %aptr380, align 8
  store i8 8, i8* %193, align 1
  br label %if.end382

if.end382:                                        ; preds = %do.end378, %if.then334
  br label %do.end383

do.end383:                                        ; preds = %if.end382
  br label %if.end391

if.else384:                                       ; preds = %do.body323
  %194 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio385 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %194, i32 0, i32 24
  %195 = load %struct._PerlIO**, %struct._PerlIO*** %fio385, align 8
  %call386 = call i32 @PerlIO_putc(%struct._PerlIO** %195, i32 8)
  %cmp387 = icmp eq i32 %call386, -1
  br i1 %cmp387, label %if.then389, label %if.end390

if.then389:                                       ; preds = %if.else384
  store i32 -1, i32* %retval, align 4
  br label %return

if.end390:                                        ; preds = %if.else384
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %do.end383
  br label %do.end392

do.end392:                                        ; preds = %if.end391
  br label %do.body393

do.body393:                                       ; preds = %do.end392
  %196 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio394 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %196, i32 0, i32 24
  %197 = load %struct._PerlIO**, %struct._PerlIO*** %fio394, align 8
  %tobool395 = icmp ne %struct._PerlIO** %197, null
  br i1 %tobool395, label %if.else454, label %if.then396

if.then396:                                       ; preds = %do.body393
  br label %do.body397

do.body397:                                       ; preds = %if.then396
  %198 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf398 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %198, i32 0, i32 22
  %aptr399 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf398, i32 0, i32 2
  %199 = load i8*, i8** %aptr399, align 8
  %200 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf400 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %200, i32 0, i32 22
  %aend401 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf400, i32 0, i32 3
  %201 = load i8*, i8** %aend401, align 8
  %cmp402 = icmp ult i8* %199, %201
  br i1 %cmp402, label %if.then404, label %if.else408

if.then404:                                       ; preds = %do.body397
  %202 = load i8, i8* %siv, align 1
  %203 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf405 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %203, i32 0, i32 22
  %aptr406 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf405, i32 0, i32 2
  %204 = load i8*, i8** %aptr406, align 8
  %incdec.ptr407 = getelementptr inbounds i8, i8* %204, i32 1
  store i8* %incdec.ptr407, i8** %aptr406, align 8
  store i8 %202, i8* %204, align 1
  br label %if.end452

if.else408:                                       ; preds = %do.body397
  br label %do.body409

do.body409:                                       ; preds = %if.else408
  %205 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf411 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %205, i32 0, i32 22
  %asiz412 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf411, i32 0, i32 1
  %206 = load i64, i64* %asiz412, align 8
  %add413 = add i64 1, %206
  %add414 = add i64 %add413, 8191
  %and415 = and i64 %add414, -8192
  %conv416 = trunc i64 %and415 to i32
  store i32 %conv416, i32* %nsz410, align 4
  %207 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf418 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %207, i32 0, i32 22
  %aptr419 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf418, i32 0, i32 2
  %208 = load i8*, i8** %aptr419, align 8
  %209 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf420 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %209, i32 0, i32 22
  %arena421 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf420, i32 0, i32 0
  %210 = load i8*, i8** %arena421, align 8
  %sub.ptr.lhs.cast422 = ptrtoint i8* %208 to i64
  %sub.ptr.rhs.cast423 = ptrtoint i8* %210 to i64
  %sub.ptr.sub424 = sub i64 %sub.ptr.lhs.cast422, %sub.ptr.rhs.cast423
  %conv425 = trunc i64 %sub.ptr.sub424 to i32
  store i32 %conv425, i32* %offset417, align 4
  %211 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf426 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %211, i32 0, i32 22
  %arena427 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf426, i32 0, i32 0
  %212 = load i8*, i8** %arena427, align 8
  %213 = load i32, i32* %nsz410, align 4
  %conv428 = sext i32 %213 to i64
  %mul429 = mul i64 %conv428, 1
  %call430 = call i8* @Perl_safesysrealloc(i8* %212, i64 %mul429)
  %214 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf431 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %214, i32 0, i32 22
  %arena432 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf431, i32 0, i32 0
  store i8* %call430, i8** %arena432, align 8
  %215 = load i32, i32* %nsz410, align 4
  %conv433 = sext i32 %215 to i64
  %216 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf434 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %216, i32 0, i32 22
  %asiz435 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf434, i32 0, i32 1
  store i64 %conv433, i64* %asiz435, align 8
  %217 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf436 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %217, i32 0, i32 22
  %arena437 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf436, i32 0, i32 0
  %218 = load i8*, i8** %arena437, align 8
  %219 = load i32, i32* %offset417, align 4
  %idx.ext438 = sext i32 %219 to i64
  %add.ptr439 = getelementptr inbounds i8, i8* %218, i64 %idx.ext438
  %220 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf440 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %220, i32 0, i32 22
  %aptr441 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf440, i32 0, i32 2
  store i8* %add.ptr439, i8** %aptr441, align 8
  %221 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf442 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %221, i32 0, i32 22
  %arena443 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf442, i32 0, i32 0
  %222 = load i8*, i8** %arena443, align 8
  %223 = load i32, i32* %nsz410, align 4
  %idx.ext444 = sext i32 %223 to i64
  %add.ptr445 = getelementptr inbounds i8, i8* %222, i64 %idx.ext444
  %224 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf446 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %224, i32 0, i32 22
  %aend447 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf446, i32 0, i32 3
  store i8* %add.ptr445, i8** %aend447, align 8
  br label %do.end448

do.end448:                                        ; preds = %do.body409
  %225 = load i8, i8* %siv, align 1
  %226 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf449 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %226, i32 0, i32 22
  %aptr450 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf449, i32 0, i32 2
  %227 = load i8*, i8** %aptr450, align 8
  %incdec.ptr451 = getelementptr inbounds i8, i8* %227, i32 1
  store i8* %incdec.ptr451, i8** %aptr450, align 8
  store i8 %225, i8* %227, align 1
  br label %if.end452

if.end452:                                        ; preds = %do.end448, %if.then404
  br label %do.end453

do.end453:                                        ; preds = %if.end452
  br label %if.end462

if.else454:                                       ; preds = %do.body393
  %228 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio455 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %228, i32 0, i32 24
  %229 = load %struct._PerlIO**, %struct._PerlIO*** %fio455, align 8
  %230 = load i8, i8* %siv, align 1
  %conv456 = zext i8 %230 to i32
  %call457 = call i32 @PerlIO_putc(%struct._PerlIO** %229, i32 %conv456)
  %cmp458 = icmp eq i32 %call457, -1
  br i1 %cmp458, label %if.then460, label %if.end461

if.then460:                                       ; preds = %if.else454
  store i32 -1, i32* %retval, align 4
  br label %return

if.end461:                                        ; preds = %if.else454
  br label %if.end462

if.end462:                                        ; preds = %if.end461, %do.end453
  br label %do.end463

do.end463:                                        ; preds = %if.end462
  br label %if.end789

if.else464:                                       ; preds = %land.lhs.true317, %if.end314
  %231 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %231, i32 0, i32 12
  %232 = load i32, i32* %netorder, align 8
  %tobool465 = icmp ne i32 %232, 0
  br i1 %tobool465, label %if.then466, label %if.else646

if.then466:                                       ; preds = %if.else464
  %233 = load i32, i32* %flags, align 4
  %and467 = and i32 %233, -2147483648
  %tobool468 = icmp ne i32 %and467, 0
  br i1 %tobool468, label %land.lhs.true469, label %lor.lhs.false

land.lhs.true469:                                 ; preds = %if.then466
  %234 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags470 = getelementptr inbounds %struct.sv, %struct.sv* %234, i32 0, i32 2
  %235 = load i32, i32* %sv_flags470, align 4
  %and471 = and i32 %235, -2145386240
  %cmp472 = icmp eq i32 %and471, -2147483392
  br i1 %cmp472, label %cond.true474, label %cond.false478

cond.true474:                                     ; preds = %land.lhs.true469
  %236 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any475 = getelementptr inbounds %struct.sv, %struct.sv* %236, i32 0, i32 0
  %237 = load i8*, i8** %sv_any475, align 8
  %238 = bitcast i8* %237 to %struct.xpvuv*
  %xuv_u476 = getelementptr inbounds %struct.xpvuv, %struct.xpvuv* %238, i32 0, i32 4
  %xivu_uv477 = bitcast %union._xivu* %xuv_u476 to i64*
  %239 = load i64, i64* %xivu_uv477, align 8
  br label %cond.end480

cond.false478:                                    ; preds = %land.lhs.true469
  %240 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call479 = call i64 @Perl_sv_2uv_flags(%struct.sv* %240, i32 2)
  br label %cond.end480

cond.end480:                                      ; preds = %cond.false478, %cond.true474
  %cond481 = phi i64 [ %239, %cond.true474 ], [ %call479, %cond.false478 ]
  %cmp482 = icmp ugt i64 %cond481, 2147483647
  br i1 %cmp482, label %if.then489, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.end480, %if.then466
  %241 = load i64, i64* %iv, align 8
  %cmp484 = icmp sgt i64 %241, 2147483647
  br i1 %cmp484, label %if.then489, label %lor.lhs.false486

lor.lhs.false486:                                 ; preds = %lor.lhs.false
  %242 = load i64, i64* %iv, align 8
  %cmp487 = icmp slt i64 %242, -2147483648
  br i1 %cmp487, label %if.then489, label %if.end490

if.then489:                                       ; preds = %lor.lhs.false486, %lor.lhs.false, %cond.end480
  br label %string_readlen

if.end490:                                        ; preds = %lor.lhs.false486
  %243 = load i64, i64* %iv, align 8
  %conv491 = trunc i64 %243 to i32
  %call492 = call i32 @my_swap32(i32 %conv491)
  store i32 %call492, i32* %niv, align 4
  br label %do.body493

do.body493:                                       ; preds = %if.end490
  %244 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio494 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %244, i32 0, i32 24
  %245 = load %struct._PerlIO**, %struct._PerlIO*** %fio494, align 8
  %tobool495 = icmp ne %struct._PerlIO** %245, null
  br i1 %tobool495, label %if.else554, label %if.then496

if.then496:                                       ; preds = %do.body493
  br label %do.body497

do.body497:                                       ; preds = %if.then496
  %246 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf498 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %246, i32 0, i32 22
  %aptr499 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf498, i32 0, i32 2
  %247 = load i8*, i8** %aptr499, align 8
  %248 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf500 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %248, i32 0, i32 22
  %aend501 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf500, i32 0, i32 3
  %249 = load i8*, i8** %aend501, align 8
  %cmp502 = icmp ult i8* %247, %249
  br i1 %cmp502, label %if.then504, label %if.else508

if.then504:                                       ; preds = %do.body497
  %250 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf505 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %250, i32 0, i32 22
  %aptr506 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf505, i32 0, i32 2
  %251 = load i8*, i8** %aptr506, align 8
  %incdec.ptr507 = getelementptr inbounds i8, i8* %251, i32 1
  store i8* %incdec.ptr507, i8** %aptr506, align 8
  store i8 9, i8* %251, align 1
  br label %if.end552

if.else508:                                       ; preds = %do.body497
  br label %do.body509

do.body509:                                       ; preds = %if.else508
  %252 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf511 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %252, i32 0, i32 22
  %asiz512 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf511, i32 0, i32 1
  %253 = load i64, i64* %asiz512, align 8
  %add513 = add i64 1, %253
  %add514 = add i64 %add513, 8191
  %and515 = and i64 %add514, -8192
  %conv516 = trunc i64 %and515 to i32
  store i32 %conv516, i32* %nsz510, align 4
  %254 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf518 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %254, i32 0, i32 22
  %aptr519 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf518, i32 0, i32 2
  %255 = load i8*, i8** %aptr519, align 8
  %256 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf520 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %256, i32 0, i32 22
  %arena521 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf520, i32 0, i32 0
  %257 = load i8*, i8** %arena521, align 8
  %sub.ptr.lhs.cast522 = ptrtoint i8* %255 to i64
  %sub.ptr.rhs.cast523 = ptrtoint i8* %257 to i64
  %sub.ptr.sub524 = sub i64 %sub.ptr.lhs.cast522, %sub.ptr.rhs.cast523
  %conv525 = trunc i64 %sub.ptr.sub524 to i32
  store i32 %conv525, i32* %offset517, align 4
  %258 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf526 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %258, i32 0, i32 22
  %arena527 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf526, i32 0, i32 0
  %259 = load i8*, i8** %arena527, align 8
  %260 = load i32, i32* %nsz510, align 4
  %conv528 = sext i32 %260 to i64
  %mul529 = mul i64 %conv528, 1
  %call530 = call i8* @Perl_safesysrealloc(i8* %259, i64 %mul529)
  %261 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf531 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %261, i32 0, i32 22
  %arena532 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf531, i32 0, i32 0
  store i8* %call530, i8** %arena532, align 8
  %262 = load i32, i32* %nsz510, align 4
  %conv533 = sext i32 %262 to i64
  %263 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf534 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %263, i32 0, i32 22
  %asiz535 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf534, i32 0, i32 1
  store i64 %conv533, i64* %asiz535, align 8
  %264 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf536 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %264, i32 0, i32 22
  %arena537 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf536, i32 0, i32 0
  %265 = load i8*, i8** %arena537, align 8
  %266 = load i32, i32* %offset517, align 4
  %idx.ext538 = sext i32 %266 to i64
  %add.ptr539 = getelementptr inbounds i8, i8* %265, i64 %idx.ext538
  %267 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf540 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %267, i32 0, i32 22
  %aptr541 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf540, i32 0, i32 2
  store i8* %add.ptr539, i8** %aptr541, align 8
  %268 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf542 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %268, i32 0, i32 22
  %arena543 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf542, i32 0, i32 0
  %269 = load i8*, i8** %arena543, align 8
  %270 = load i32, i32* %nsz510, align 4
  %idx.ext544 = sext i32 %270 to i64
  %add.ptr545 = getelementptr inbounds i8, i8* %269, i64 %idx.ext544
  %271 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf546 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %271, i32 0, i32 22
  %aend547 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf546, i32 0, i32 3
  store i8* %add.ptr545, i8** %aend547, align 8
  br label %do.end548

do.end548:                                        ; preds = %do.body509
  %272 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf549 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %272, i32 0, i32 22
  %aptr550 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf549, i32 0, i32 2
  %273 = load i8*, i8** %aptr550, align 8
  %incdec.ptr551 = getelementptr inbounds i8, i8* %273, i32 1
  store i8* %incdec.ptr551, i8** %aptr550, align 8
  store i8 9, i8* %273, align 1
  br label %if.end552

if.end552:                                        ; preds = %do.end548, %if.then504
  br label %do.end553

do.end553:                                        ; preds = %if.end552
  br label %if.end561

if.else554:                                       ; preds = %do.body493
  %274 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio555 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %274, i32 0, i32 24
  %275 = load %struct._PerlIO**, %struct._PerlIO*** %fio555, align 8
  %call556 = call i32 @PerlIO_putc(%struct._PerlIO** %275, i32 9)
  %cmp557 = icmp eq i32 %call556, -1
  br i1 %cmp557, label %if.then559, label %if.end560

if.then559:                                       ; preds = %if.else554
  store i32 -1, i32* %retval, align 4
  br label %return

if.end560:                                        ; preds = %if.else554
  br label %if.end561

if.end561:                                        ; preds = %if.end560, %do.end553
  br label %do.end562

do.end562:                                        ; preds = %if.end561
  br label %do.body563

do.body563:                                       ; preds = %do.end562
  %276 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio564 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %276, i32 0, i32 24
  %277 = load %struct._PerlIO**, %struct._PerlIO*** %fio564, align 8
  %tobool565 = icmp ne %struct._PerlIO** %277, null
  br i1 %tobool565, label %if.else637, label %if.then566

if.then566:                                       ; preds = %do.body563
  br label %do.body567

do.body567:                                       ; preds = %if.then566
  br label %do.body568

do.body568:                                       ; preds = %do.body567
  %278 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf569 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %278, i32 0, i32 22
  %aptr570 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf569, i32 0, i32 2
  %279 = load i8*, i8** %aptr570, align 8
  %add.ptr571 = getelementptr inbounds i8, i8* %279, i64 4
  %280 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf572 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %280, i32 0, i32 22
  %aend573 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf572, i32 0, i32 3
  %281 = load i8*, i8** %aend573, align 8
  %cmp574 = icmp ugt i8* %add.ptr571, %281
  br i1 %cmp574, label %if.then576, label %if.end617

if.then576:                                       ; preds = %do.body568
  br label %do.body577

do.body577:                                       ; preds = %if.then576
  %282 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf579 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %282, i32 0, i32 22
  %asiz580 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf579, i32 0, i32 1
  %283 = load i64, i64* %asiz580, align 8
  %add581 = add i64 4, %283
  %add582 = add i64 %add581, 8191
  %and583 = and i64 %add582, -8192
  %conv584 = trunc i64 %and583 to i32
  store i32 %conv584, i32* %nsz578, align 4
  %284 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf586 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %284, i32 0, i32 22
  %aptr587 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf586, i32 0, i32 2
  %285 = load i8*, i8** %aptr587, align 8
  %286 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf588 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %286, i32 0, i32 22
  %arena589 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf588, i32 0, i32 0
  %287 = load i8*, i8** %arena589, align 8
  %sub.ptr.lhs.cast590 = ptrtoint i8* %285 to i64
  %sub.ptr.rhs.cast591 = ptrtoint i8* %287 to i64
  %sub.ptr.sub592 = sub i64 %sub.ptr.lhs.cast590, %sub.ptr.rhs.cast591
  %conv593 = trunc i64 %sub.ptr.sub592 to i32
  store i32 %conv593, i32* %offset585, align 4
  %288 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf594 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %288, i32 0, i32 22
  %arena595 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf594, i32 0, i32 0
  %289 = load i8*, i8** %arena595, align 8
  %290 = load i32, i32* %nsz578, align 4
  %conv596 = sext i32 %290 to i64
  %mul597 = mul i64 %conv596, 1
  %call598 = call i8* @Perl_safesysrealloc(i8* %289, i64 %mul597)
  %291 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf599 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %291, i32 0, i32 22
  %arena600 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf599, i32 0, i32 0
  store i8* %call598, i8** %arena600, align 8
  %292 = load i32, i32* %nsz578, align 4
  %conv601 = sext i32 %292 to i64
  %293 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf602 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %293, i32 0, i32 22
  %asiz603 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf602, i32 0, i32 1
  store i64 %conv601, i64* %asiz603, align 8
  %294 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf604 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %294, i32 0, i32 22
  %arena605 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf604, i32 0, i32 0
  %295 = load i8*, i8** %arena605, align 8
  %296 = load i32, i32* %offset585, align 4
  %idx.ext606 = sext i32 %296 to i64
  %add.ptr607 = getelementptr inbounds i8, i8* %295, i64 %idx.ext606
  %297 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf608 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %297, i32 0, i32 22
  %aptr609 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf608, i32 0, i32 2
  store i8* %add.ptr607, i8** %aptr609, align 8
  %298 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf610 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %298, i32 0, i32 22
  %arena611 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf610, i32 0, i32 0
  %299 = load i8*, i8** %arena611, align 8
  %300 = load i32, i32* %nsz578, align 4
  %idx.ext612 = sext i32 %300 to i64
  %add.ptr613 = getelementptr inbounds i8, i8* %299, i64 %idx.ext612
  %301 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf614 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %301, i32 0, i32 22
  %aend615 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf614, i32 0, i32 3
  store i8* %add.ptr613, i8** %aend615, align 8
  br label %do.end616

do.end616:                                        ; preds = %do.body577
  br label %if.end617

if.end617:                                        ; preds = %do.end616, %do.body568
  br label %do.end618

do.end618:                                        ; preds = %if.end617
  %302 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf619 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %302, i32 0, i32 22
  %aptr620 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf619, i32 0, i32 2
  %303 = load i8*, i8** %aptr620, align 8
  %304 = ptrtoint i8* %303 to i64
  %305 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf621 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %305, i32 0, i32 22
  %aptr622 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf621, i32 0, i32 2
  %306 = load i8*, i8** %aptr622, align 8
  %307 = ptrtoint i8* %306 to i64
  %and623 = and i64 %307, -4
  %cmp624 = icmp eq i64 %304, %and623
  br i1 %cmp624, label %if.then626, label %if.else629

if.then626:                                       ; preds = %do.end618
  %308 = load i32, i32* %niv, align 4
  %309 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf627 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %309, i32 0, i32 22
  %aptr628 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf627, i32 0, i32 2
  %310 = load i8*, i8** %aptr628, align 8
  %311 = bitcast i8* %310 to i32*
  store i32 %308, i32* %311, align 4
  br label %if.end632

if.else629:                                       ; preds = %do.end618
  %312 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf630 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %312, i32 0, i32 22
  %aptr631 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf630, i32 0, i32 2
  %313 = load i8*, i8** %aptr631, align 8
  %314 = bitcast i32* %niv to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %313, i8* align 4 %314, i64 4, i1 false)
  br label %if.end632

if.end632:                                        ; preds = %if.else629, %if.then626
  %315 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf633 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %315, i32 0, i32 22
  %aptr634 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf633, i32 0, i32 2
  %316 = load i8*, i8** %aptr634, align 8
  %add.ptr635 = getelementptr inbounds i8, i8* %316, i64 4
  store i8* %add.ptr635, i8** %aptr634, align 8
  br label %do.end636

do.end636:                                        ; preds = %if.end632
  br label %if.end644

if.else637:                                       ; preds = %do.body563
  %317 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio638 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %317, i32 0, i32 24
  %318 = load %struct._PerlIO**, %struct._PerlIO*** %fio638, align 8
  %319 = bitcast i32* %niv to i8*
  %call639 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %318, i8* %319, i64 4)
  %cmp640 = icmp ne i64 %call639, 4
  br i1 %cmp640, label %if.then642, label %if.end643

if.then642:                                       ; preds = %if.else637
  store i32 -1, i32* %retval, align 4
  br label %return

if.end643:                                        ; preds = %if.else637
  br label %if.end644

if.end644:                                        ; preds = %if.end643, %do.end636
  br label %do.end645

do.end645:                                        ; preds = %if.end644
  br label %if.end788

if.else646:                                       ; preds = %if.else464
  br label %do.body647

do.body647:                                       ; preds = %if.else646
  %320 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio648 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %320, i32 0, i32 24
  %321 = load %struct._PerlIO**, %struct._PerlIO*** %fio648, align 8
  %tobool649 = icmp ne %struct._PerlIO** %321, null
  br i1 %tobool649, label %if.else708, label %if.then650

if.then650:                                       ; preds = %do.body647
  br label %do.body651

do.body651:                                       ; preds = %if.then650
  %322 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf652 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %322, i32 0, i32 22
  %aptr653 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf652, i32 0, i32 2
  %323 = load i8*, i8** %aptr653, align 8
  %324 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf654 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %324, i32 0, i32 22
  %aend655 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf654, i32 0, i32 3
  %325 = load i8*, i8** %aend655, align 8
  %cmp656 = icmp ult i8* %323, %325
  br i1 %cmp656, label %if.then658, label %if.else662

if.then658:                                       ; preds = %do.body651
  %326 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf659 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %326, i32 0, i32 22
  %aptr660 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf659, i32 0, i32 2
  %327 = load i8*, i8** %aptr660, align 8
  %incdec.ptr661 = getelementptr inbounds i8, i8* %327, i32 1
  store i8* %incdec.ptr661, i8** %aptr660, align 8
  store i8 6, i8* %327, align 1
  br label %if.end706

if.else662:                                       ; preds = %do.body651
  br label %do.body663

do.body663:                                       ; preds = %if.else662
  %328 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf665 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %328, i32 0, i32 22
  %asiz666 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf665, i32 0, i32 1
  %329 = load i64, i64* %asiz666, align 8
  %add667 = add i64 1, %329
  %add668 = add i64 %add667, 8191
  %and669 = and i64 %add668, -8192
  %conv670 = trunc i64 %and669 to i32
  store i32 %conv670, i32* %nsz664, align 4
  %330 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf672 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %330, i32 0, i32 22
  %aptr673 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf672, i32 0, i32 2
  %331 = load i8*, i8** %aptr673, align 8
  %332 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf674 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %332, i32 0, i32 22
  %arena675 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf674, i32 0, i32 0
  %333 = load i8*, i8** %arena675, align 8
  %sub.ptr.lhs.cast676 = ptrtoint i8* %331 to i64
  %sub.ptr.rhs.cast677 = ptrtoint i8* %333 to i64
  %sub.ptr.sub678 = sub i64 %sub.ptr.lhs.cast676, %sub.ptr.rhs.cast677
  %conv679 = trunc i64 %sub.ptr.sub678 to i32
  store i32 %conv679, i32* %offset671, align 4
  %334 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf680 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %334, i32 0, i32 22
  %arena681 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf680, i32 0, i32 0
  %335 = load i8*, i8** %arena681, align 8
  %336 = load i32, i32* %nsz664, align 4
  %conv682 = sext i32 %336 to i64
  %mul683 = mul i64 %conv682, 1
  %call684 = call i8* @Perl_safesysrealloc(i8* %335, i64 %mul683)
  %337 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf685 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %337, i32 0, i32 22
  %arena686 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf685, i32 0, i32 0
  store i8* %call684, i8** %arena686, align 8
  %338 = load i32, i32* %nsz664, align 4
  %conv687 = sext i32 %338 to i64
  %339 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf688 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %339, i32 0, i32 22
  %asiz689 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf688, i32 0, i32 1
  store i64 %conv687, i64* %asiz689, align 8
  %340 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf690 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %340, i32 0, i32 22
  %arena691 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf690, i32 0, i32 0
  %341 = load i8*, i8** %arena691, align 8
  %342 = load i32, i32* %offset671, align 4
  %idx.ext692 = sext i32 %342 to i64
  %add.ptr693 = getelementptr inbounds i8, i8* %341, i64 %idx.ext692
  %343 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf694 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %343, i32 0, i32 22
  %aptr695 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf694, i32 0, i32 2
  store i8* %add.ptr693, i8** %aptr695, align 8
  %344 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf696 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %344, i32 0, i32 22
  %arena697 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf696, i32 0, i32 0
  %345 = load i8*, i8** %arena697, align 8
  %346 = load i32, i32* %nsz664, align 4
  %idx.ext698 = sext i32 %346 to i64
  %add.ptr699 = getelementptr inbounds i8, i8* %345, i64 %idx.ext698
  %347 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf700 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %347, i32 0, i32 22
  %aend701 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf700, i32 0, i32 3
  store i8* %add.ptr699, i8** %aend701, align 8
  br label %do.end702

do.end702:                                        ; preds = %do.body663
  %348 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf703 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %348, i32 0, i32 22
  %aptr704 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf703, i32 0, i32 2
  %349 = load i8*, i8** %aptr704, align 8
  %incdec.ptr705 = getelementptr inbounds i8, i8* %349, i32 1
  store i8* %incdec.ptr705, i8** %aptr704, align 8
  store i8 6, i8* %349, align 1
  br label %if.end706

if.end706:                                        ; preds = %do.end702, %if.then658
  br label %do.end707

do.end707:                                        ; preds = %if.end706
  br label %if.end715

if.else708:                                       ; preds = %do.body647
  %350 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio709 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %350, i32 0, i32 24
  %351 = load %struct._PerlIO**, %struct._PerlIO*** %fio709, align 8
  %call710 = call i32 @PerlIO_putc(%struct._PerlIO** %351, i32 6)
  %cmp711 = icmp eq i32 %call710, -1
  br i1 %cmp711, label %if.then713, label %if.end714

if.then713:                                       ; preds = %if.else708
  store i32 -1, i32* %retval, align 4
  br label %return

if.end714:                                        ; preds = %if.else708
  br label %if.end715

if.end715:                                        ; preds = %if.end714, %do.end707
  br label %do.end716

do.end716:                                        ; preds = %if.end715
  br label %do.body717

do.body717:                                       ; preds = %do.end716
  %352 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio718 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %352, i32 0, i32 24
  %353 = load %struct._PerlIO**, %struct._PerlIO*** %fio718, align 8
  %tobool719 = icmp ne %struct._PerlIO** %353, null
  br i1 %tobool719, label %if.else779, label %if.then720

if.then720:                                       ; preds = %do.body717
  br label %do.body721

do.body721:                                       ; preds = %if.then720
  br label %do.body722

do.body722:                                       ; preds = %do.body721
  %354 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf723 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %354, i32 0, i32 22
  %aptr724 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf723, i32 0, i32 2
  %355 = load i8*, i8** %aptr724, align 8
  %add.ptr725 = getelementptr inbounds i8, i8* %355, i64 8
  %356 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf726 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %356, i32 0, i32 22
  %aend727 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf726, i32 0, i32 3
  %357 = load i8*, i8** %aend727, align 8
  %cmp728 = icmp ugt i8* %add.ptr725, %357
  br i1 %cmp728, label %if.then730, label %if.end771

if.then730:                                       ; preds = %do.body722
  br label %do.body731

do.body731:                                       ; preds = %if.then730
  %358 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf733 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %358, i32 0, i32 22
  %asiz734 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf733, i32 0, i32 1
  %359 = load i64, i64* %asiz734, align 8
  %add735 = add i64 8, %359
  %add736 = add i64 %add735, 8191
  %and737 = and i64 %add736, -8192
  %conv738 = trunc i64 %and737 to i32
  store i32 %conv738, i32* %nsz732, align 4
  %360 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf740 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %360, i32 0, i32 22
  %aptr741 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf740, i32 0, i32 2
  %361 = load i8*, i8** %aptr741, align 8
  %362 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf742 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %362, i32 0, i32 22
  %arena743 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf742, i32 0, i32 0
  %363 = load i8*, i8** %arena743, align 8
  %sub.ptr.lhs.cast744 = ptrtoint i8* %361 to i64
  %sub.ptr.rhs.cast745 = ptrtoint i8* %363 to i64
  %sub.ptr.sub746 = sub i64 %sub.ptr.lhs.cast744, %sub.ptr.rhs.cast745
  %conv747 = trunc i64 %sub.ptr.sub746 to i32
  store i32 %conv747, i32* %offset739, align 4
  %364 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf748 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %364, i32 0, i32 22
  %arena749 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf748, i32 0, i32 0
  %365 = load i8*, i8** %arena749, align 8
  %366 = load i32, i32* %nsz732, align 4
  %conv750 = sext i32 %366 to i64
  %mul751 = mul i64 %conv750, 1
  %call752 = call i8* @Perl_safesysrealloc(i8* %365, i64 %mul751)
  %367 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf753 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %367, i32 0, i32 22
  %arena754 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf753, i32 0, i32 0
  store i8* %call752, i8** %arena754, align 8
  %368 = load i32, i32* %nsz732, align 4
  %conv755 = sext i32 %368 to i64
  %369 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf756 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %369, i32 0, i32 22
  %asiz757 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf756, i32 0, i32 1
  store i64 %conv755, i64* %asiz757, align 8
  %370 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf758 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %370, i32 0, i32 22
  %arena759 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf758, i32 0, i32 0
  %371 = load i8*, i8** %arena759, align 8
  %372 = load i32, i32* %offset739, align 4
  %idx.ext760 = sext i32 %372 to i64
  %add.ptr761 = getelementptr inbounds i8, i8* %371, i64 %idx.ext760
  %373 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf762 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %373, i32 0, i32 22
  %aptr763 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf762, i32 0, i32 2
  store i8* %add.ptr761, i8** %aptr763, align 8
  %374 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf764 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %374, i32 0, i32 22
  %arena765 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf764, i32 0, i32 0
  %375 = load i8*, i8** %arena765, align 8
  %376 = load i32, i32* %nsz732, align 4
  %idx.ext766 = sext i32 %376 to i64
  %add.ptr767 = getelementptr inbounds i8, i8* %375, i64 %idx.ext766
  %377 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf768 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %377, i32 0, i32 22
  %aend769 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf768, i32 0, i32 3
  store i8* %add.ptr767, i8** %aend769, align 8
  br label %do.end770

do.end770:                                        ; preds = %do.body731
  br label %if.end771

if.end771:                                        ; preds = %do.end770, %do.body722
  br label %do.end772

do.end772:                                        ; preds = %if.end771
  %378 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf773 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %378, i32 0, i32 22
  %aptr774 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf773, i32 0, i32 2
  %379 = load i8*, i8** %aptr774, align 8
  %380 = bitcast i64* %iv to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %379, i8* align 8 %380, i64 8, i1 false)
  %381 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf775 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %381, i32 0, i32 22
  %aptr776 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf775, i32 0, i32 2
  %382 = load i8*, i8** %aptr776, align 8
  %add.ptr777 = getelementptr inbounds i8, i8* %382, i64 8
  store i8* %add.ptr777, i8** %aptr776, align 8
  br label %do.end778

do.end778:                                        ; preds = %do.end772
  br label %if.end786

if.else779:                                       ; preds = %do.body717
  %383 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio780 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %383, i32 0, i32 24
  %384 = load %struct._PerlIO**, %struct._PerlIO*** %fio780, align 8
  %385 = bitcast i64* %iv to i8*
  %call781 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %384, i8* %385, i64 8)
  %cmp782 = icmp ne i64 %call781, 8
  br i1 %cmp782, label %if.then784, label %if.end785

if.then784:                                       ; preds = %if.else779
  store i32 -1, i32* %retval, align 4
  br label %return

if.end785:                                        ; preds = %if.else779
  br label %if.end786

if.end786:                                        ; preds = %if.end785, %do.end778
  br label %do.end787

do.end787:                                        ; preds = %if.end786
  br label %if.end788

if.end788:                                        ; preds = %do.end787, %do.end645
  br label %if.end789

if.end789:                                        ; preds = %if.end788, %do.end463
  br label %if.end2675

if.else790:                                       ; preds = %if.else285
  %386 = load i32, i32* %flags, align 4
  %and791 = and i32 %386, 512
  %tobool792 = icmp ne i32 %and791, 0
  br i1 %tobool792, label %if.then793, label %if.else990

if.then793:                                       ; preds = %if.else790
  br label %do.body794

do.body794:                                       ; preds = %if.then793
  %387 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags795 = getelementptr inbounds %struct.sv, %struct.sv* %387, i32 0, i32 2
  %388 = load i32, i32* %sv_flags795, align 4
  %and796 = and i32 %388, 4096
  %tobool797 = icmp ne i32 %and796, 0
  br i1 %tobool797, label %if.end815, label %land.lhs.true798

land.lhs.true798:                                 ; preds = %do.body794
  %389 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags799 = getelementptr inbounds %struct.sv, %struct.sv* %389, i32 0, i32 2
  %390 = load i32, i32* %sv_flags799, align 4
  %and800 = and i32 %390, 1536
  %tobool801 = icmp ne i32 %and800, 0
  br i1 %tobool801, label %if.then802, label %if.end815

if.then802:                                       ; preds = %land.lhs.true798
  %391 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags803 = getelementptr inbounds %struct.sv, %struct.sv* %391, i32 0, i32 2
  %392 = load i32, i32* %sv_flags803, align 4
  %and804 = and i32 %392, 2097408
  %cmp805 = icmp eq i32 %and804, 256
  br i1 %cmp805, label %cond.true807, label %cond.false811

cond.true807:                                     ; preds = %if.then802
  %393 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any808 = getelementptr inbounds %struct.sv, %struct.sv* %393, i32 0, i32 0
  %394 = load i8*, i8** %sv_any808, align 8
  %395 = bitcast i8* %394 to %struct.xpviv*
  %xiv_u809 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %395, i32 0, i32 4
  %xivu_iv810 = bitcast %union._xivu* %xiv_u809 to i64*
  %396 = load i64, i64* %xivu_iv810, align 8
  br label %cond.end813

cond.false811:                                    ; preds = %if.then802
  %397 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call812 = call i64 @Perl_sv_2iv_flags(%struct.sv* %397, i32 2)
  br label %cond.end813

cond.end813:                                      ; preds = %cond.false811, %cond.true807
  %cond814 = phi i64 [ %396, %cond.true807 ], [ %call812, %cond.false811 ]
  br label %if.end815

if.end815:                                        ; preds = %cond.end813, %land.lhs.true798, %do.body794
  br label %do.end816

do.end816:                                        ; preds = %if.end815
  %398 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags817 = getelementptr inbounds %struct.sv, %struct.sv* %398, i32 0, i32 2
  %399 = load i32, i32* %sv_flags817, align 4
  %and818 = and i32 %399, -2147483392
  %cmp819 = icmp eq i32 %and818, 256
  br i1 %cmp819, label %if.then821, label %if.end834

if.then821:                                       ; preds = %do.end816
  %400 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags822 = getelementptr inbounds %struct.sv, %struct.sv* %400, i32 0, i32 2
  %401 = load i32, i32* %sv_flags822, align 4
  %and823 = and i32 %401, 2097408
  %cmp824 = icmp eq i32 %and823, 256
  br i1 %cmp824, label %cond.true826, label %cond.false830

cond.true826:                                     ; preds = %if.then821
  %402 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any827 = getelementptr inbounds %struct.sv, %struct.sv* %402, i32 0, i32 0
  %403 = load i8*, i8** %sv_any827, align 8
  %404 = bitcast i8* %403 to %struct.xpviv*
  %xiv_u828 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %404, i32 0, i32 4
  %xivu_iv829 = bitcast %union._xivu* %xiv_u828 to i64*
  %405 = load i64, i64* %xivu_iv829, align 8
  br label %cond.end832

cond.false830:                                    ; preds = %if.then821
  %406 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call831 = call i64 @Perl_sv_2iv_flags(%struct.sv* %406, i32 2)
  br label %cond.end832

cond.end832:                                      ; preds = %cond.false830, %cond.true826
  %cond833 = phi i64 [ %405, %cond.true826 ], [ %call831, %cond.false830 ]
  store i64 %cond833, i64* %iv, align 8
  br label %integer

if.end834:                                        ; preds = %do.end816
  %407 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags835 = getelementptr inbounds %struct.sv, %struct.sv* %407, i32 0, i32 2
  %408 = load i32, i32* %sv_flags835, align 4
  %and836 = and i32 %408, 2097664
  %cmp837 = icmp eq i32 %and836, 512
  br i1 %cmp837, label %cond.true839, label %cond.false841

cond.true839:                                     ; preds = %if.end834
  %409 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any840 = getelementptr inbounds %struct.sv, %struct.sv* %409, i32 0, i32 0
  %410 = load i8*, i8** %sv_any840, align 8
  %411 = bitcast i8* %410 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %411, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %412 = load double, double* %xnv_nv, align 8
  br label %cond.end843

cond.false841:                                    ; preds = %if.end834
  %413 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call842 = call double @Perl_sv_2nv_flags(%struct.sv* %413, i32 2)
  br label %cond.end843

cond.end843:                                      ; preds = %cond.false841, %cond.true839
  %cond844 = phi double [ %412, %cond.true839 ], [ %call842, %cond.false841 ]
  store double %cond844, double* %nv, align 8
  %414 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder845 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %414, i32 0, i32 12
  %415 = load i32, i32* %netorder845, align 8
  %tobool846 = icmp ne i32 %415, 0
  br i1 %tobool846, label %if.then847, label %if.end848

if.then847:                                       ; preds = %cond.end843
  br label %string_readlen

if.end848:                                        ; preds = %cond.end843
  br label %do.body849

do.body849:                                       ; preds = %if.end848
  %416 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio850 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %416, i32 0, i32 24
  %417 = load %struct._PerlIO**, %struct._PerlIO*** %fio850, align 8
  %tobool851 = icmp ne %struct._PerlIO** %417, null
  br i1 %tobool851, label %if.else910, label %if.then852

if.then852:                                       ; preds = %do.body849
  br label %do.body853

do.body853:                                       ; preds = %if.then852
  %418 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf854 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %418, i32 0, i32 22
  %aptr855 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf854, i32 0, i32 2
  %419 = load i8*, i8** %aptr855, align 8
  %420 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf856 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %420, i32 0, i32 22
  %aend857 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf856, i32 0, i32 3
  %421 = load i8*, i8** %aend857, align 8
  %cmp858 = icmp ult i8* %419, %421
  br i1 %cmp858, label %if.then860, label %if.else864

if.then860:                                       ; preds = %do.body853
  %422 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf861 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %422, i32 0, i32 22
  %aptr862 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf861, i32 0, i32 2
  %423 = load i8*, i8** %aptr862, align 8
  %incdec.ptr863 = getelementptr inbounds i8, i8* %423, i32 1
  store i8* %incdec.ptr863, i8** %aptr862, align 8
  store i8 7, i8* %423, align 1
  br label %if.end908

if.else864:                                       ; preds = %do.body853
  br label %do.body865

do.body865:                                       ; preds = %if.else864
  %424 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf867 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %424, i32 0, i32 22
  %asiz868 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf867, i32 0, i32 1
  %425 = load i64, i64* %asiz868, align 8
  %add869 = add i64 1, %425
  %add870 = add i64 %add869, 8191
  %and871 = and i64 %add870, -8192
  %conv872 = trunc i64 %and871 to i32
  store i32 %conv872, i32* %nsz866, align 4
  %426 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf874 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %426, i32 0, i32 22
  %aptr875 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf874, i32 0, i32 2
  %427 = load i8*, i8** %aptr875, align 8
  %428 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf876 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %428, i32 0, i32 22
  %arena877 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf876, i32 0, i32 0
  %429 = load i8*, i8** %arena877, align 8
  %sub.ptr.lhs.cast878 = ptrtoint i8* %427 to i64
  %sub.ptr.rhs.cast879 = ptrtoint i8* %429 to i64
  %sub.ptr.sub880 = sub i64 %sub.ptr.lhs.cast878, %sub.ptr.rhs.cast879
  %conv881 = trunc i64 %sub.ptr.sub880 to i32
  store i32 %conv881, i32* %offset873, align 4
  %430 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf882 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %430, i32 0, i32 22
  %arena883 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf882, i32 0, i32 0
  %431 = load i8*, i8** %arena883, align 8
  %432 = load i32, i32* %nsz866, align 4
  %conv884 = sext i32 %432 to i64
  %mul885 = mul i64 %conv884, 1
  %call886 = call i8* @Perl_safesysrealloc(i8* %431, i64 %mul885)
  %433 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf887 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %433, i32 0, i32 22
  %arena888 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf887, i32 0, i32 0
  store i8* %call886, i8** %arena888, align 8
  %434 = load i32, i32* %nsz866, align 4
  %conv889 = sext i32 %434 to i64
  %435 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf890 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %435, i32 0, i32 22
  %asiz891 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf890, i32 0, i32 1
  store i64 %conv889, i64* %asiz891, align 8
  %436 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf892 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %436, i32 0, i32 22
  %arena893 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf892, i32 0, i32 0
  %437 = load i8*, i8** %arena893, align 8
  %438 = load i32, i32* %offset873, align 4
  %idx.ext894 = sext i32 %438 to i64
  %add.ptr895 = getelementptr inbounds i8, i8* %437, i64 %idx.ext894
  %439 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf896 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %439, i32 0, i32 22
  %aptr897 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf896, i32 0, i32 2
  store i8* %add.ptr895, i8** %aptr897, align 8
  %440 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf898 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %440, i32 0, i32 22
  %arena899 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf898, i32 0, i32 0
  %441 = load i8*, i8** %arena899, align 8
  %442 = load i32, i32* %nsz866, align 4
  %idx.ext900 = sext i32 %442 to i64
  %add.ptr901 = getelementptr inbounds i8, i8* %441, i64 %idx.ext900
  %443 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf902 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %443, i32 0, i32 22
  %aend903 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf902, i32 0, i32 3
  store i8* %add.ptr901, i8** %aend903, align 8
  br label %do.end904

do.end904:                                        ; preds = %do.body865
  %444 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf905 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %444, i32 0, i32 22
  %aptr906 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf905, i32 0, i32 2
  %445 = load i8*, i8** %aptr906, align 8
  %incdec.ptr907 = getelementptr inbounds i8, i8* %445, i32 1
  store i8* %incdec.ptr907, i8** %aptr906, align 8
  store i8 7, i8* %445, align 1
  br label %if.end908

if.end908:                                        ; preds = %do.end904, %if.then860
  br label %do.end909

do.end909:                                        ; preds = %if.end908
  br label %if.end917

if.else910:                                       ; preds = %do.body849
  %446 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio911 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %446, i32 0, i32 24
  %447 = load %struct._PerlIO**, %struct._PerlIO*** %fio911, align 8
  %call912 = call i32 @PerlIO_putc(%struct._PerlIO** %447, i32 7)
  %cmp913 = icmp eq i32 %call912, -1
  br i1 %cmp913, label %if.then915, label %if.end916

if.then915:                                       ; preds = %if.else910
  store i32 -1, i32* %retval, align 4
  br label %return

if.end916:                                        ; preds = %if.else910
  br label %if.end917

if.end917:                                        ; preds = %if.end916, %do.end909
  br label %do.end918

do.end918:                                        ; preds = %if.end917
  br label %do.body919

do.body919:                                       ; preds = %do.end918
  %448 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio920 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %448, i32 0, i32 24
  %449 = load %struct._PerlIO**, %struct._PerlIO*** %fio920, align 8
  %tobool921 = icmp ne %struct._PerlIO** %449, null
  br i1 %tobool921, label %if.else981, label %if.then922

if.then922:                                       ; preds = %do.body919
  br label %do.body923

do.body923:                                       ; preds = %if.then922
  br label %do.body924

do.body924:                                       ; preds = %do.body923
  %450 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf925 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %450, i32 0, i32 22
  %aptr926 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf925, i32 0, i32 2
  %451 = load i8*, i8** %aptr926, align 8
  %add.ptr927 = getelementptr inbounds i8, i8* %451, i64 8
  %452 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf928 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %452, i32 0, i32 22
  %aend929 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf928, i32 0, i32 3
  %453 = load i8*, i8** %aend929, align 8
  %cmp930 = icmp ugt i8* %add.ptr927, %453
  br i1 %cmp930, label %if.then932, label %if.end973

if.then932:                                       ; preds = %do.body924
  br label %do.body933

do.body933:                                       ; preds = %if.then932
  %454 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf935 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %454, i32 0, i32 22
  %asiz936 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf935, i32 0, i32 1
  %455 = load i64, i64* %asiz936, align 8
  %add937 = add i64 8, %455
  %add938 = add i64 %add937, 8191
  %and939 = and i64 %add938, -8192
  %conv940 = trunc i64 %and939 to i32
  store i32 %conv940, i32* %nsz934, align 4
  %456 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf942 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %456, i32 0, i32 22
  %aptr943 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf942, i32 0, i32 2
  %457 = load i8*, i8** %aptr943, align 8
  %458 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf944 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %458, i32 0, i32 22
  %arena945 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf944, i32 0, i32 0
  %459 = load i8*, i8** %arena945, align 8
  %sub.ptr.lhs.cast946 = ptrtoint i8* %457 to i64
  %sub.ptr.rhs.cast947 = ptrtoint i8* %459 to i64
  %sub.ptr.sub948 = sub i64 %sub.ptr.lhs.cast946, %sub.ptr.rhs.cast947
  %conv949 = trunc i64 %sub.ptr.sub948 to i32
  store i32 %conv949, i32* %offset941, align 4
  %460 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf950 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %460, i32 0, i32 22
  %arena951 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf950, i32 0, i32 0
  %461 = load i8*, i8** %arena951, align 8
  %462 = load i32, i32* %nsz934, align 4
  %conv952 = sext i32 %462 to i64
  %mul953 = mul i64 %conv952, 1
  %call954 = call i8* @Perl_safesysrealloc(i8* %461, i64 %mul953)
  %463 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf955 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %463, i32 0, i32 22
  %arena956 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf955, i32 0, i32 0
  store i8* %call954, i8** %arena956, align 8
  %464 = load i32, i32* %nsz934, align 4
  %conv957 = sext i32 %464 to i64
  %465 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf958 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %465, i32 0, i32 22
  %asiz959 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf958, i32 0, i32 1
  store i64 %conv957, i64* %asiz959, align 8
  %466 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf960 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %466, i32 0, i32 22
  %arena961 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf960, i32 0, i32 0
  %467 = load i8*, i8** %arena961, align 8
  %468 = load i32, i32* %offset941, align 4
  %idx.ext962 = sext i32 %468 to i64
  %add.ptr963 = getelementptr inbounds i8, i8* %467, i64 %idx.ext962
  %469 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf964 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %469, i32 0, i32 22
  %aptr965 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf964, i32 0, i32 2
  store i8* %add.ptr963, i8** %aptr965, align 8
  %470 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf966 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %470, i32 0, i32 22
  %arena967 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf966, i32 0, i32 0
  %471 = load i8*, i8** %arena967, align 8
  %472 = load i32, i32* %nsz934, align 4
  %idx.ext968 = sext i32 %472 to i64
  %add.ptr969 = getelementptr inbounds i8, i8* %471, i64 %idx.ext968
  %473 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf970 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %473, i32 0, i32 22
  %aend971 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf970, i32 0, i32 3
  store i8* %add.ptr969, i8** %aend971, align 8
  br label %do.end972

do.end972:                                        ; preds = %do.body933
  br label %if.end973

if.end973:                                        ; preds = %do.end972, %do.body924
  br label %do.end974

do.end974:                                        ; preds = %if.end973
  %474 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf975 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %474, i32 0, i32 22
  %aptr976 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf975, i32 0, i32 2
  %475 = load i8*, i8** %aptr976, align 8
  %476 = bitcast double* %nv to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %475, i8* align 8 %476, i64 8, i1 false)
  %477 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf977 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %477, i32 0, i32 22
  %aptr978 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf977, i32 0, i32 2
  %478 = load i8*, i8** %aptr978, align 8
  %add.ptr979 = getelementptr inbounds i8, i8* %478, i64 8
  store i8* %add.ptr979, i8** %aptr978, align 8
  br label %do.end980

do.end980:                                        ; preds = %do.end974
  br label %if.end988

if.else981:                                       ; preds = %do.body919
  %479 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio982 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %479, i32 0, i32 24
  %480 = load %struct._PerlIO**, %struct._PerlIO*** %fio982, align 8
  %481 = bitcast double* %nv to i8*
  %call983 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %480, i8* %481, i64 8)
  %cmp984 = icmp ne i64 %call983, 8
  br i1 %cmp984, label %if.then986, label %if.end987

if.then986:                                       ; preds = %if.else981
  store i32 -1, i32* %retval, align 4
  br label %return

if.end987:                                        ; preds = %if.else981
  br label %if.end988

if.end988:                                        ; preds = %if.end987, %do.end980
  br label %do.end989

do.end989:                                        ; preds = %if.end988
  br label %if.end2674

if.else990:                                       ; preds = %if.else790
  %482 = load i32, i32* %flags, align 4
  %and991 = and i32 %482, 28672
  %tobool992 = icmp ne i32 %and991, 0
  br i1 %tobool992, label %if.then993, label %if.else2669

if.then993:                                       ; preds = %if.else990
  br label %string_readlen

string_readlen:                                   ; preds = %if.then993, %if.then847, %if.then489, %if.then313, %if.then284
  %483 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags994 = getelementptr inbounds %struct.sv, %struct.sv* %483, i32 0, i32 2
  %484 = load i32, i32* %sv_flags994, align 4
  %and995 = and i32 %484, 2098176
  %cmp996 = icmp eq i32 %and995, 1024
  br i1 %cmp996, label %cond.true998, label %cond.false1003

cond.true998:                                     ; preds = %string_readlen
  %485 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any999 = getelementptr inbounds %struct.sv, %struct.sv* %485, i32 0, i32 0
  %486 = load i8*, i8** %sv_any999, align 8
  %487 = bitcast i8* %486 to %struct.xpv*
  %xpv_cur1000 = getelementptr inbounds %struct.xpv, %struct.xpv* %487, i32 0, i32 2
  %488 = load i64, i64* %xpv_cur1000, align 8
  store i64 %488, i64* %len, align 8
  %489 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u1001 = getelementptr inbounds %struct.sv, %struct.sv* %489, i32 0, i32 3
  %svu_pv1002 = bitcast %union.anon* %sv_u1001 to i8**
  %490 = load i8*, i8** %svu_pv1002, align 8
  br label %cond.end1005

cond.false1003:                                   ; preds = %string_readlen
  %491 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call1004 = call i8* @Perl_sv_2pv_flags(%struct.sv* %491, i64* %len, i32 2)
  br label %cond.end1005

cond.end1005:                                     ; preds = %cond.false1003, %cond.true998
  %cond1006 = phi i8* [ %490, %cond.true998 ], [ %call1004, %cond.false1003 ]
  store i8* %cond1006, i8** %pv, align 8
  br label %string

string:                                           ; preds = %cond.end1005, %cond.end
  %492 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags1007 = getelementptr inbounds %struct.sv, %struct.sv* %492, i32 0, i32 2
  %493 = load i32, i32* %sv_flags1007, align 4
  %and1008 = and i32 %493, 14680064
  %tobool1009 = icmp ne i32 %and1008, 0
  br i1 %tobool1009, label %land.lhs.true1010, label %if.end1565

land.lhs.true1010:                                ; preds = %string
  %494 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call1011 = call %struct.magic* @Perl_mg_find(%struct.sv* %494, i32 86)
  store %struct.magic* %call1011, %struct.magic** %mg, align 8
  %tobool1012 = icmp ne %struct.magic* %call1011, null
  br i1 %tobool1012, label %if.then1013, label %if.end1565

if.then1013:                                      ; preds = %land.lhs.true1010
  %495 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_len = getelementptr inbounds %struct.magic, %struct.magic* %495, i32 0, i32 5
  %496 = load i64, i64* %mg_len, align 8
  %conv1015 = trunc i64 %496 to i32
  store i32 %conv1015, i32* %len1014, align 4
  br label %do.body1016

do.body1016:                                      ; preds = %if.then1013
  %497 = load i32, i32* %len1014, align 4
  %cmp1017 = icmp sle i32 %497, 255
  br i1 %cmp1017, label %if.then1019, label %if.else1243

if.then1019:                                      ; preds = %do.body1016
  %498 = load i32, i32* %len1014, align 4
  %conv1020 = trunc i32 %498 to i8
  store i8 %conv1020, i8* %clen, align 1
  br label %do.body1021

do.body1021:                                      ; preds = %if.then1019
  %499 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1022 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %499, i32 0, i32 24
  %500 = load %struct._PerlIO**, %struct._PerlIO*** %fio1022, align 8
  %tobool1023 = icmp ne %struct._PerlIO** %500, null
  br i1 %tobool1023, label %if.else1082, label %if.then1024

if.then1024:                                      ; preds = %do.body1021
  br label %do.body1025

do.body1025:                                      ; preds = %if.then1024
  %501 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1026 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %501, i32 0, i32 22
  %aptr1027 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1026, i32 0, i32 2
  %502 = load i8*, i8** %aptr1027, align 8
  %503 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1028 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %503, i32 0, i32 22
  %aend1029 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1028, i32 0, i32 3
  %504 = load i8*, i8** %aend1029, align 8
  %cmp1030 = icmp ult i8* %502, %504
  br i1 %cmp1030, label %if.then1032, label %if.else1036

if.then1032:                                      ; preds = %do.body1025
  %505 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1033 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %505, i32 0, i32 22
  %aptr1034 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1033, i32 0, i32 2
  %506 = load i8*, i8** %aptr1034, align 8
  %incdec.ptr1035 = getelementptr inbounds i8, i8* %506, i32 1
  store i8* %incdec.ptr1035, i8** %aptr1034, align 8
  store i8 29, i8* %506, align 1
  br label %if.end1080

if.else1036:                                      ; preds = %do.body1025
  br label %do.body1037

do.body1037:                                      ; preds = %if.else1036
  %507 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1039 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %507, i32 0, i32 22
  %asiz1040 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1039, i32 0, i32 1
  %508 = load i64, i64* %asiz1040, align 8
  %add1041 = add i64 1, %508
  %add1042 = add i64 %add1041, 8191
  %and1043 = and i64 %add1042, -8192
  %conv1044 = trunc i64 %and1043 to i32
  store i32 %conv1044, i32* %nsz1038, align 4
  %509 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1046 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %509, i32 0, i32 22
  %aptr1047 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1046, i32 0, i32 2
  %510 = load i8*, i8** %aptr1047, align 8
  %511 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1048 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %511, i32 0, i32 22
  %arena1049 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1048, i32 0, i32 0
  %512 = load i8*, i8** %arena1049, align 8
  %sub.ptr.lhs.cast1050 = ptrtoint i8* %510 to i64
  %sub.ptr.rhs.cast1051 = ptrtoint i8* %512 to i64
  %sub.ptr.sub1052 = sub i64 %sub.ptr.lhs.cast1050, %sub.ptr.rhs.cast1051
  %conv1053 = trunc i64 %sub.ptr.sub1052 to i32
  store i32 %conv1053, i32* %offset1045, align 4
  %513 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1054 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %513, i32 0, i32 22
  %arena1055 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1054, i32 0, i32 0
  %514 = load i8*, i8** %arena1055, align 8
  %515 = load i32, i32* %nsz1038, align 4
  %conv1056 = sext i32 %515 to i64
  %mul1057 = mul i64 %conv1056, 1
  %call1058 = call i8* @Perl_safesysrealloc(i8* %514, i64 %mul1057)
  %516 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1059 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %516, i32 0, i32 22
  %arena1060 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1059, i32 0, i32 0
  store i8* %call1058, i8** %arena1060, align 8
  %517 = load i32, i32* %nsz1038, align 4
  %conv1061 = sext i32 %517 to i64
  %518 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1062 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %518, i32 0, i32 22
  %asiz1063 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1062, i32 0, i32 1
  store i64 %conv1061, i64* %asiz1063, align 8
  %519 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1064 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %519, i32 0, i32 22
  %arena1065 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1064, i32 0, i32 0
  %520 = load i8*, i8** %arena1065, align 8
  %521 = load i32, i32* %offset1045, align 4
  %idx.ext1066 = sext i32 %521 to i64
  %add.ptr1067 = getelementptr inbounds i8, i8* %520, i64 %idx.ext1066
  %522 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1068 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %522, i32 0, i32 22
  %aptr1069 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1068, i32 0, i32 2
  store i8* %add.ptr1067, i8** %aptr1069, align 8
  %523 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1070 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %523, i32 0, i32 22
  %arena1071 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1070, i32 0, i32 0
  %524 = load i8*, i8** %arena1071, align 8
  %525 = load i32, i32* %nsz1038, align 4
  %idx.ext1072 = sext i32 %525 to i64
  %add.ptr1073 = getelementptr inbounds i8, i8* %524, i64 %idx.ext1072
  %526 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1074 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %526, i32 0, i32 22
  %aend1075 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1074, i32 0, i32 3
  store i8* %add.ptr1073, i8** %aend1075, align 8
  br label %do.end1076

do.end1076:                                       ; preds = %do.body1037
  %527 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1077 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %527, i32 0, i32 22
  %aptr1078 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1077, i32 0, i32 2
  %528 = load i8*, i8** %aptr1078, align 8
  %incdec.ptr1079 = getelementptr inbounds i8, i8* %528, i32 1
  store i8* %incdec.ptr1079, i8** %aptr1078, align 8
  store i8 29, i8* %528, align 1
  br label %if.end1080

if.end1080:                                       ; preds = %do.end1076, %if.then1032
  br label %do.end1081

do.end1081:                                       ; preds = %if.end1080
  br label %if.end1089

if.else1082:                                      ; preds = %do.body1021
  %529 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1083 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %529, i32 0, i32 24
  %530 = load %struct._PerlIO**, %struct._PerlIO*** %fio1083, align 8
  %call1084 = call i32 @PerlIO_putc(%struct._PerlIO** %530, i32 29)
  %cmp1085 = icmp eq i32 %call1084, -1
  br i1 %cmp1085, label %if.then1087, label %if.end1088

if.then1087:                                      ; preds = %if.else1082
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1088:                                       ; preds = %if.else1082
  br label %if.end1089

if.end1089:                                       ; preds = %if.end1088, %do.end1081
  br label %do.end1090

do.end1090:                                       ; preds = %if.end1089
  br label %do.body1091

do.body1091:                                      ; preds = %do.end1090
  %531 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1092 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %531, i32 0, i32 24
  %532 = load %struct._PerlIO**, %struct._PerlIO*** %fio1092, align 8
  %tobool1093 = icmp ne %struct._PerlIO** %532, null
  br i1 %tobool1093, label %if.else1152, label %if.then1094

if.then1094:                                      ; preds = %do.body1091
  br label %do.body1095

do.body1095:                                      ; preds = %if.then1094
  %533 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1096 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %533, i32 0, i32 22
  %aptr1097 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1096, i32 0, i32 2
  %534 = load i8*, i8** %aptr1097, align 8
  %535 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1098 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %535, i32 0, i32 22
  %aend1099 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1098, i32 0, i32 3
  %536 = load i8*, i8** %aend1099, align 8
  %cmp1100 = icmp ult i8* %534, %536
  br i1 %cmp1100, label %if.then1102, label %if.else1106

if.then1102:                                      ; preds = %do.body1095
  %537 = load i8, i8* %clen, align 1
  %538 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1103 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %538, i32 0, i32 22
  %aptr1104 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1103, i32 0, i32 2
  %539 = load i8*, i8** %aptr1104, align 8
  %incdec.ptr1105 = getelementptr inbounds i8, i8* %539, i32 1
  store i8* %incdec.ptr1105, i8** %aptr1104, align 8
  store i8 %537, i8* %539, align 1
  br label %if.end1150

if.else1106:                                      ; preds = %do.body1095
  br label %do.body1107

do.body1107:                                      ; preds = %if.else1106
  %540 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1109 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %540, i32 0, i32 22
  %asiz1110 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1109, i32 0, i32 1
  %541 = load i64, i64* %asiz1110, align 8
  %add1111 = add i64 1, %541
  %add1112 = add i64 %add1111, 8191
  %and1113 = and i64 %add1112, -8192
  %conv1114 = trunc i64 %and1113 to i32
  store i32 %conv1114, i32* %nsz1108, align 4
  %542 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1116 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %542, i32 0, i32 22
  %aptr1117 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1116, i32 0, i32 2
  %543 = load i8*, i8** %aptr1117, align 8
  %544 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1118 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %544, i32 0, i32 22
  %arena1119 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1118, i32 0, i32 0
  %545 = load i8*, i8** %arena1119, align 8
  %sub.ptr.lhs.cast1120 = ptrtoint i8* %543 to i64
  %sub.ptr.rhs.cast1121 = ptrtoint i8* %545 to i64
  %sub.ptr.sub1122 = sub i64 %sub.ptr.lhs.cast1120, %sub.ptr.rhs.cast1121
  %conv1123 = trunc i64 %sub.ptr.sub1122 to i32
  store i32 %conv1123, i32* %offset1115, align 4
  %546 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1124 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %546, i32 0, i32 22
  %arena1125 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1124, i32 0, i32 0
  %547 = load i8*, i8** %arena1125, align 8
  %548 = load i32, i32* %nsz1108, align 4
  %conv1126 = sext i32 %548 to i64
  %mul1127 = mul i64 %conv1126, 1
  %call1128 = call i8* @Perl_safesysrealloc(i8* %547, i64 %mul1127)
  %549 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1129 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %549, i32 0, i32 22
  %arena1130 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1129, i32 0, i32 0
  store i8* %call1128, i8** %arena1130, align 8
  %550 = load i32, i32* %nsz1108, align 4
  %conv1131 = sext i32 %550 to i64
  %551 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1132 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %551, i32 0, i32 22
  %asiz1133 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1132, i32 0, i32 1
  store i64 %conv1131, i64* %asiz1133, align 8
  %552 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1134 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %552, i32 0, i32 22
  %arena1135 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1134, i32 0, i32 0
  %553 = load i8*, i8** %arena1135, align 8
  %554 = load i32, i32* %offset1115, align 4
  %idx.ext1136 = sext i32 %554 to i64
  %add.ptr1137 = getelementptr inbounds i8, i8* %553, i64 %idx.ext1136
  %555 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1138 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %555, i32 0, i32 22
  %aptr1139 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1138, i32 0, i32 2
  store i8* %add.ptr1137, i8** %aptr1139, align 8
  %556 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1140 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %556, i32 0, i32 22
  %arena1141 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1140, i32 0, i32 0
  %557 = load i8*, i8** %arena1141, align 8
  %558 = load i32, i32* %nsz1108, align 4
  %idx.ext1142 = sext i32 %558 to i64
  %add.ptr1143 = getelementptr inbounds i8, i8* %557, i64 %idx.ext1142
  %559 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1144 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %559, i32 0, i32 22
  %aend1145 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1144, i32 0, i32 3
  store i8* %add.ptr1143, i8** %aend1145, align 8
  br label %do.end1146

do.end1146:                                       ; preds = %do.body1107
  %560 = load i8, i8* %clen, align 1
  %561 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1147 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %561, i32 0, i32 22
  %aptr1148 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1147, i32 0, i32 2
  %562 = load i8*, i8** %aptr1148, align 8
  %incdec.ptr1149 = getelementptr inbounds i8, i8* %562, i32 1
  store i8* %incdec.ptr1149, i8** %aptr1148, align 8
  store i8 %560, i8* %562, align 1
  br label %if.end1150

if.end1150:                                       ; preds = %do.end1146, %if.then1102
  br label %do.end1151

do.end1151:                                       ; preds = %if.end1150
  br label %if.end1160

if.else1152:                                      ; preds = %do.body1091
  %563 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1153 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %563, i32 0, i32 24
  %564 = load %struct._PerlIO**, %struct._PerlIO*** %fio1153, align 8
  %565 = load i8, i8* %clen, align 1
  %conv1154 = zext i8 %565 to i32
  %call1155 = call i32 @PerlIO_putc(%struct._PerlIO** %564, i32 %conv1154)
  %cmp1156 = icmp eq i32 %call1155, -1
  br i1 %cmp1156, label %if.then1158, label %if.end1159

if.then1158:                                      ; preds = %if.else1152
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1159:                                       ; preds = %if.else1152
  br label %if.end1160

if.end1160:                                       ; preds = %if.end1159, %do.end1151
  br label %do.end1161

do.end1161:                                       ; preds = %if.end1160
  %566 = load i32, i32* %len1014, align 4
  %tobool1162 = icmp ne i32 %566, 0
  br i1 %tobool1162, label %if.then1163, label %if.end1242

if.then1163:                                      ; preds = %do.end1161
  br label %do.body1164

do.body1164:                                      ; preds = %if.then1163
  %567 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1165 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %567, i32 0, i32 24
  %568 = load %struct._PerlIO**, %struct._PerlIO*** %fio1165, align 8
  %tobool1166 = icmp ne %struct._PerlIO** %568, null
  br i1 %tobool1166, label %if.else1230, label %if.then1167

if.then1167:                                      ; preds = %do.body1164
  br label %do.body1168

do.body1168:                                      ; preds = %if.then1167
  br label %do.body1169

do.body1169:                                      ; preds = %do.body1168
  %569 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1170 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %569, i32 0, i32 22
  %aptr1171 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1170, i32 0, i32 2
  %570 = load i8*, i8** %aptr1171, align 8
  %571 = load i32, i32* %len1014, align 4
  %idx.ext1172 = sext i32 %571 to i64
  %add.ptr1173 = getelementptr inbounds i8, i8* %570, i64 %idx.ext1172
  %572 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1174 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %572, i32 0, i32 22
  %aend1175 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1174, i32 0, i32 3
  %573 = load i8*, i8** %aend1175, align 8
  %cmp1176 = icmp ugt i8* %add.ptr1173, %573
  br i1 %cmp1176, label %if.then1178, label %if.end1220

if.then1178:                                      ; preds = %do.body1169
  br label %do.body1179

do.body1179:                                      ; preds = %if.then1178
  %574 = load i32, i32* %len1014, align 4
  %conv1181 = sext i32 %574 to i64
  %575 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1182 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %575, i32 0, i32 22
  %asiz1183 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1182, i32 0, i32 1
  %576 = load i64, i64* %asiz1183, align 8
  %add1184 = add i64 %conv1181, %576
  %add1185 = add i64 %add1184, 8191
  %and1186 = and i64 %add1185, -8192
  %conv1187 = trunc i64 %and1186 to i32
  store i32 %conv1187, i32* %nsz1180, align 4
  %577 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1189 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %577, i32 0, i32 22
  %aptr1190 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1189, i32 0, i32 2
  %578 = load i8*, i8** %aptr1190, align 8
  %579 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1191 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %579, i32 0, i32 22
  %arena1192 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1191, i32 0, i32 0
  %580 = load i8*, i8** %arena1192, align 8
  %sub.ptr.lhs.cast1193 = ptrtoint i8* %578 to i64
  %sub.ptr.rhs.cast1194 = ptrtoint i8* %580 to i64
  %sub.ptr.sub1195 = sub i64 %sub.ptr.lhs.cast1193, %sub.ptr.rhs.cast1194
  %conv1196 = trunc i64 %sub.ptr.sub1195 to i32
  store i32 %conv1196, i32* %offset1188, align 4
  %581 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1197 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %581, i32 0, i32 22
  %arena1198 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1197, i32 0, i32 0
  %582 = load i8*, i8** %arena1198, align 8
  %583 = load i32, i32* %nsz1180, align 4
  %conv1199 = sext i32 %583 to i64
  %mul1200 = mul i64 %conv1199, 1
  %call1201 = call i8* @Perl_safesysrealloc(i8* %582, i64 %mul1200)
  %584 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1202 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %584, i32 0, i32 22
  %arena1203 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1202, i32 0, i32 0
  store i8* %call1201, i8** %arena1203, align 8
  %585 = load i32, i32* %nsz1180, align 4
  %conv1204 = sext i32 %585 to i64
  %586 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1205 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %586, i32 0, i32 22
  %asiz1206 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1205, i32 0, i32 1
  store i64 %conv1204, i64* %asiz1206, align 8
  %587 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1207 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %587, i32 0, i32 22
  %arena1208 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1207, i32 0, i32 0
  %588 = load i8*, i8** %arena1208, align 8
  %589 = load i32, i32* %offset1188, align 4
  %idx.ext1209 = sext i32 %589 to i64
  %add.ptr1210 = getelementptr inbounds i8, i8* %588, i64 %idx.ext1209
  %590 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1211 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %590, i32 0, i32 22
  %aptr1212 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1211, i32 0, i32 2
  store i8* %add.ptr1210, i8** %aptr1212, align 8
  %591 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1213 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %591, i32 0, i32 22
  %arena1214 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1213, i32 0, i32 0
  %592 = load i8*, i8** %arena1214, align 8
  %593 = load i32, i32* %nsz1180, align 4
  %idx.ext1215 = sext i32 %593 to i64
  %add.ptr1216 = getelementptr inbounds i8, i8* %592, i64 %idx.ext1215
  %594 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1217 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %594, i32 0, i32 22
  %aend1218 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1217, i32 0, i32 3
  store i8* %add.ptr1216, i8** %aend1218, align 8
  br label %do.end1219

do.end1219:                                       ; preds = %do.body1179
  br label %if.end1220

if.end1220:                                       ; preds = %do.end1219, %do.body1169
  br label %do.end1221

do.end1221:                                       ; preds = %if.end1220
  %595 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1222 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %595, i32 0, i32 22
  %aptr1223 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1222, i32 0, i32 2
  %596 = load i8*, i8** %aptr1223, align 8
  %597 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_ptr = getelementptr inbounds %struct.magic, %struct.magic* %597, i32 0, i32 7
  %598 = load i8*, i8** %mg_ptr, align 8
  %599 = load i32, i32* %len1014, align 4
  %conv1224 = sext i32 %599 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %596, i8* align 1 %598, i64 %conv1224, i1 false)
  %600 = load i32, i32* %len1014, align 4
  %601 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1225 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %601, i32 0, i32 22
  %aptr1226 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1225, i32 0, i32 2
  %602 = load i8*, i8** %aptr1226, align 8
  %idx.ext1227 = sext i32 %600 to i64
  %add.ptr1228 = getelementptr inbounds i8, i8* %602, i64 %idx.ext1227
  store i8* %add.ptr1228, i8** %aptr1226, align 8
  br label %do.end1229

do.end1229:                                       ; preds = %do.end1221
  br label %if.end1240

if.else1230:                                      ; preds = %do.body1164
  %603 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1231 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %603, i32 0, i32 24
  %604 = load %struct._PerlIO**, %struct._PerlIO*** %fio1231, align 8
  %605 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_ptr1232 = getelementptr inbounds %struct.magic, %struct.magic* %605, i32 0, i32 7
  %606 = load i8*, i8** %mg_ptr1232, align 8
  %607 = load i32, i32* %len1014, align 4
  %conv1233 = sext i32 %607 to i64
  %call1234 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %604, i8* %606, i64 %conv1233)
  %608 = load i32, i32* %len1014, align 4
  %conv1235 = sext i32 %608 to i64
  %cmp1236 = icmp ne i64 %call1234, %conv1235
  br i1 %cmp1236, label %if.then1238, label %if.end1239

if.then1238:                                      ; preds = %if.else1230
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1239:                                       ; preds = %if.else1230
  br label %if.end1240

if.end1240:                                       ; preds = %if.end1239, %do.end1229
  br label %do.end1241

do.end1241:                                       ; preds = %if.end1240
  br label %if.end1242

if.end1242:                                       ; preds = %do.end1241, %do.end1161
  br label %if.end1563

if.else1243:                                      ; preds = %do.body1016
  br label %do.body1244

do.body1244:                                      ; preds = %if.else1243
  %609 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1245 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %609, i32 0, i32 24
  %610 = load %struct._PerlIO**, %struct._PerlIO*** %fio1245, align 8
  %tobool1246 = icmp ne %struct._PerlIO** %610, null
  br i1 %tobool1246, label %if.else1305, label %if.then1247

if.then1247:                                      ; preds = %do.body1244
  br label %do.body1248

do.body1248:                                      ; preds = %if.then1247
  %611 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1249 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %611, i32 0, i32 22
  %aptr1250 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1249, i32 0, i32 2
  %612 = load i8*, i8** %aptr1250, align 8
  %613 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1251 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %613, i32 0, i32 22
  %aend1252 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1251, i32 0, i32 3
  %614 = load i8*, i8** %aend1252, align 8
  %cmp1253 = icmp ult i8* %612, %614
  br i1 %cmp1253, label %if.then1255, label %if.else1259

if.then1255:                                      ; preds = %do.body1248
  %615 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1256 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %615, i32 0, i32 22
  %aptr1257 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1256, i32 0, i32 2
  %616 = load i8*, i8** %aptr1257, align 8
  %incdec.ptr1258 = getelementptr inbounds i8, i8* %616, i32 1
  store i8* %incdec.ptr1258, i8** %aptr1257, align 8
  store i8 30, i8* %616, align 1
  br label %if.end1303

if.else1259:                                      ; preds = %do.body1248
  br label %do.body1260

do.body1260:                                      ; preds = %if.else1259
  %617 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1262 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %617, i32 0, i32 22
  %asiz1263 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1262, i32 0, i32 1
  %618 = load i64, i64* %asiz1263, align 8
  %add1264 = add i64 1, %618
  %add1265 = add i64 %add1264, 8191
  %and1266 = and i64 %add1265, -8192
  %conv1267 = trunc i64 %and1266 to i32
  store i32 %conv1267, i32* %nsz1261, align 4
  %619 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1269 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %619, i32 0, i32 22
  %aptr1270 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1269, i32 0, i32 2
  %620 = load i8*, i8** %aptr1270, align 8
  %621 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1271 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %621, i32 0, i32 22
  %arena1272 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1271, i32 0, i32 0
  %622 = load i8*, i8** %arena1272, align 8
  %sub.ptr.lhs.cast1273 = ptrtoint i8* %620 to i64
  %sub.ptr.rhs.cast1274 = ptrtoint i8* %622 to i64
  %sub.ptr.sub1275 = sub i64 %sub.ptr.lhs.cast1273, %sub.ptr.rhs.cast1274
  %conv1276 = trunc i64 %sub.ptr.sub1275 to i32
  store i32 %conv1276, i32* %offset1268, align 4
  %623 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1277 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %623, i32 0, i32 22
  %arena1278 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1277, i32 0, i32 0
  %624 = load i8*, i8** %arena1278, align 8
  %625 = load i32, i32* %nsz1261, align 4
  %conv1279 = sext i32 %625 to i64
  %mul1280 = mul i64 %conv1279, 1
  %call1281 = call i8* @Perl_safesysrealloc(i8* %624, i64 %mul1280)
  %626 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1282 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %626, i32 0, i32 22
  %arena1283 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1282, i32 0, i32 0
  store i8* %call1281, i8** %arena1283, align 8
  %627 = load i32, i32* %nsz1261, align 4
  %conv1284 = sext i32 %627 to i64
  %628 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1285 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %628, i32 0, i32 22
  %asiz1286 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1285, i32 0, i32 1
  store i64 %conv1284, i64* %asiz1286, align 8
  %629 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1287 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %629, i32 0, i32 22
  %arena1288 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1287, i32 0, i32 0
  %630 = load i8*, i8** %arena1288, align 8
  %631 = load i32, i32* %offset1268, align 4
  %idx.ext1289 = sext i32 %631 to i64
  %add.ptr1290 = getelementptr inbounds i8, i8* %630, i64 %idx.ext1289
  %632 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1291 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %632, i32 0, i32 22
  %aptr1292 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1291, i32 0, i32 2
  store i8* %add.ptr1290, i8** %aptr1292, align 8
  %633 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1293 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %633, i32 0, i32 22
  %arena1294 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1293, i32 0, i32 0
  %634 = load i8*, i8** %arena1294, align 8
  %635 = load i32, i32* %nsz1261, align 4
  %idx.ext1295 = sext i32 %635 to i64
  %add.ptr1296 = getelementptr inbounds i8, i8* %634, i64 %idx.ext1295
  %636 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1297 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %636, i32 0, i32 22
  %aend1298 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1297, i32 0, i32 3
  store i8* %add.ptr1296, i8** %aend1298, align 8
  br label %do.end1299

do.end1299:                                       ; preds = %do.body1260
  %637 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1300 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %637, i32 0, i32 22
  %aptr1301 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1300, i32 0, i32 2
  %638 = load i8*, i8** %aptr1301, align 8
  %incdec.ptr1302 = getelementptr inbounds i8, i8* %638, i32 1
  store i8* %incdec.ptr1302, i8** %aptr1301, align 8
  store i8 30, i8* %638, align 1
  br label %if.end1303

if.end1303:                                       ; preds = %do.end1299, %if.then1255
  br label %do.end1304

do.end1304:                                       ; preds = %if.end1303
  br label %if.end1312

if.else1305:                                      ; preds = %do.body1244
  %639 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1306 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %639, i32 0, i32 24
  %640 = load %struct._PerlIO**, %struct._PerlIO*** %fio1306, align 8
  %call1307 = call i32 @PerlIO_putc(%struct._PerlIO** %640, i32 30)
  %cmp1308 = icmp eq i32 %call1307, -1
  br i1 %cmp1308, label %if.then1310, label %if.end1311

if.then1310:                                      ; preds = %if.else1305
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1311:                                       ; preds = %if.else1305
  br label %if.end1312

if.end1312:                                       ; preds = %if.end1311, %do.end1304
  br label %do.end1313

do.end1313:                                       ; preds = %if.end1312
  br label %do.body1314

do.body1314:                                      ; preds = %do.end1313
  %641 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder1315 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %641, i32 0, i32 12
  %642 = load i32, i32* %netorder1315, align 8
  %tobool1316 = icmp ne i32 %642, 0
  br i1 %tobool1316, label %if.then1317, label %if.else1400

if.then1317:                                      ; preds = %do.body1314
  %643 = load i32, i32* %len1014, align 4
  %call1318 = call i32 @my_swap32(i32 %643)
  store i32 %call1318, i32* %y, align 4
  %644 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1319 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %644, i32 0, i32 24
  %645 = load %struct._PerlIO**, %struct._PerlIO*** %fio1319, align 8
  %tobool1320 = icmp ne %struct._PerlIO** %645, null
  br i1 %tobool1320, label %if.else1392, label %if.then1321

if.then1321:                                      ; preds = %if.then1317
  br label %do.body1322

do.body1322:                                      ; preds = %if.then1321
  br label %do.body1323

do.body1323:                                      ; preds = %do.body1322
  %646 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1324 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %646, i32 0, i32 22
  %aptr1325 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1324, i32 0, i32 2
  %647 = load i8*, i8** %aptr1325, align 8
  %add.ptr1326 = getelementptr inbounds i8, i8* %647, i64 4
  %648 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1327 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %648, i32 0, i32 22
  %aend1328 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1327, i32 0, i32 3
  %649 = load i8*, i8** %aend1328, align 8
  %cmp1329 = icmp ugt i8* %add.ptr1326, %649
  br i1 %cmp1329, label %if.then1331, label %if.end1372

if.then1331:                                      ; preds = %do.body1323
  br label %do.body1332

do.body1332:                                      ; preds = %if.then1331
  %650 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1334 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %650, i32 0, i32 22
  %asiz1335 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1334, i32 0, i32 1
  %651 = load i64, i64* %asiz1335, align 8
  %add1336 = add i64 4, %651
  %add1337 = add i64 %add1336, 8191
  %and1338 = and i64 %add1337, -8192
  %conv1339 = trunc i64 %and1338 to i32
  store i32 %conv1339, i32* %nsz1333, align 4
  %652 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1341 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %652, i32 0, i32 22
  %aptr1342 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1341, i32 0, i32 2
  %653 = load i8*, i8** %aptr1342, align 8
  %654 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1343 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %654, i32 0, i32 22
  %arena1344 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1343, i32 0, i32 0
  %655 = load i8*, i8** %arena1344, align 8
  %sub.ptr.lhs.cast1345 = ptrtoint i8* %653 to i64
  %sub.ptr.rhs.cast1346 = ptrtoint i8* %655 to i64
  %sub.ptr.sub1347 = sub i64 %sub.ptr.lhs.cast1345, %sub.ptr.rhs.cast1346
  %conv1348 = trunc i64 %sub.ptr.sub1347 to i32
  store i32 %conv1348, i32* %offset1340, align 4
  %656 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1349 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %656, i32 0, i32 22
  %arena1350 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1349, i32 0, i32 0
  %657 = load i8*, i8** %arena1350, align 8
  %658 = load i32, i32* %nsz1333, align 4
  %conv1351 = sext i32 %658 to i64
  %mul1352 = mul i64 %conv1351, 1
  %call1353 = call i8* @Perl_safesysrealloc(i8* %657, i64 %mul1352)
  %659 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1354 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %659, i32 0, i32 22
  %arena1355 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1354, i32 0, i32 0
  store i8* %call1353, i8** %arena1355, align 8
  %660 = load i32, i32* %nsz1333, align 4
  %conv1356 = sext i32 %660 to i64
  %661 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1357 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %661, i32 0, i32 22
  %asiz1358 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1357, i32 0, i32 1
  store i64 %conv1356, i64* %asiz1358, align 8
  %662 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1359 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %662, i32 0, i32 22
  %arena1360 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1359, i32 0, i32 0
  %663 = load i8*, i8** %arena1360, align 8
  %664 = load i32, i32* %offset1340, align 4
  %idx.ext1361 = sext i32 %664 to i64
  %add.ptr1362 = getelementptr inbounds i8, i8* %663, i64 %idx.ext1361
  %665 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1363 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %665, i32 0, i32 22
  %aptr1364 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1363, i32 0, i32 2
  store i8* %add.ptr1362, i8** %aptr1364, align 8
  %666 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1365 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %666, i32 0, i32 22
  %arena1366 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1365, i32 0, i32 0
  %667 = load i8*, i8** %arena1366, align 8
  %668 = load i32, i32* %nsz1333, align 4
  %idx.ext1367 = sext i32 %668 to i64
  %add.ptr1368 = getelementptr inbounds i8, i8* %667, i64 %idx.ext1367
  %669 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1369 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %669, i32 0, i32 22
  %aend1370 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1369, i32 0, i32 3
  store i8* %add.ptr1368, i8** %aend1370, align 8
  br label %do.end1371

do.end1371:                                       ; preds = %do.body1332
  br label %if.end1372

if.end1372:                                       ; preds = %do.end1371, %do.body1323
  br label %do.end1373

do.end1373:                                       ; preds = %if.end1372
  %670 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1374 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %670, i32 0, i32 22
  %aptr1375 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1374, i32 0, i32 2
  %671 = load i8*, i8** %aptr1375, align 8
  %672 = ptrtoint i8* %671 to i64
  %673 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1376 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %673, i32 0, i32 22
  %aptr1377 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1376, i32 0, i32 2
  %674 = load i8*, i8** %aptr1377, align 8
  %675 = ptrtoint i8* %674 to i64
  %and1378 = and i64 %675, -4
  %cmp1379 = icmp eq i64 %672, %and1378
  br i1 %cmp1379, label %if.then1381, label %if.else1384

if.then1381:                                      ; preds = %do.end1373
  %676 = load i32, i32* %y, align 4
  %677 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1382 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %677, i32 0, i32 22
  %aptr1383 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1382, i32 0, i32 2
  %678 = load i8*, i8** %aptr1383, align 8
  %679 = bitcast i8* %678 to i32*
  store i32 %676, i32* %679, align 4
  br label %if.end1387

if.else1384:                                      ; preds = %do.end1373
  %680 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1385 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %680, i32 0, i32 22
  %aptr1386 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1385, i32 0, i32 2
  %681 = load i8*, i8** %aptr1386, align 8
  %682 = bitcast i32* %y to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %681, i8* align 4 %682, i64 4, i1 false)
  br label %if.end1387

if.end1387:                                       ; preds = %if.else1384, %if.then1381
  %683 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1388 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %683, i32 0, i32 22
  %aptr1389 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1388, i32 0, i32 2
  %684 = load i8*, i8** %aptr1389, align 8
  %add.ptr1390 = getelementptr inbounds i8, i8* %684, i64 4
  store i8* %add.ptr1390, i8** %aptr1389, align 8
  br label %do.end1391

do.end1391:                                       ; preds = %if.end1387
  br label %if.end1399

if.else1392:                                      ; preds = %if.then1317
  %685 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1393 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %685, i32 0, i32 24
  %686 = load %struct._PerlIO**, %struct._PerlIO*** %fio1393, align 8
  %687 = bitcast i32* %y to i8*
  %call1394 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %686, i8* %687, i64 4)
  %cmp1395 = icmp ne i64 %call1394, 4
  br i1 %cmp1395, label %if.then1397, label %if.end1398

if.then1397:                                      ; preds = %if.else1392
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1398:                                       ; preds = %if.else1392
  br label %if.end1399

if.end1399:                                       ; preds = %if.end1398, %do.end1391
  br label %if.end1482

if.else1400:                                      ; preds = %do.body1314
  %688 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1401 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %688, i32 0, i32 24
  %689 = load %struct._PerlIO**, %struct._PerlIO*** %fio1401, align 8
  %tobool1402 = icmp ne %struct._PerlIO** %689, null
  br i1 %tobool1402, label %if.else1474, label %if.then1403

if.then1403:                                      ; preds = %if.else1400
  br label %do.body1404

do.body1404:                                      ; preds = %if.then1403
  br label %do.body1405

do.body1405:                                      ; preds = %do.body1404
  %690 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1406 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %690, i32 0, i32 22
  %aptr1407 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1406, i32 0, i32 2
  %691 = load i8*, i8** %aptr1407, align 8
  %add.ptr1408 = getelementptr inbounds i8, i8* %691, i64 4
  %692 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1409 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %692, i32 0, i32 22
  %aend1410 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1409, i32 0, i32 3
  %693 = load i8*, i8** %aend1410, align 8
  %cmp1411 = icmp ugt i8* %add.ptr1408, %693
  br i1 %cmp1411, label %if.then1413, label %if.end1454

if.then1413:                                      ; preds = %do.body1405
  br label %do.body1414

do.body1414:                                      ; preds = %if.then1413
  %694 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1416 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %694, i32 0, i32 22
  %asiz1417 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1416, i32 0, i32 1
  %695 = load i64, i64* %asiz1417, align 8
  %add1418 = add i64 4, %695
  %add1419 = add i64 %add1418, 8191
  %and1420 = and i64 %add1419, -8192
  %conv1421 = trunc i64 %and1420 to i32
  store i32 %conv1421, i32* %nsz1415, align 4
  %696 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1423 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %696, i32 0, i32 22
  %aptr1424 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1423, i32 0, i32 2
  %697 = load i8*, i8** %aptr1424, align 8
  %698 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1425 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %698, i32 0, i32 22
  %arena1426 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1425, i32 0, i32 0
  %699 = load i8*, i8** %arena1426, align 8
  %sub.ptr.lhs.cast1427 = ptrtoint i8* %697 to i64
  %sub.ptr.rhs.cast1428 = ptrtoint i8* %699 to i64
  %sub.ptr.sub1429 = sub i64 %sub.ptr.lhs.cast1427, %sub.ptr.rhs.cast1428
  %conv1430 = trunc i64 %sub.ptr.sub1429 to i32
  store i32 %conv1430, i32* %offset1422, align 4
  %700 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1431 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %700, i32 0, i32 22
  %arena1432 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1431, i32 0, i32 0
  %701 = load i8*, i8** %arena1432, align 8
  %702 = load i32, i32* %nsz1415, align 4
  %conv1433 = sext i32 %702 to i64
  %mul1434 = mul i64 %conv1433, 1
  %call1435 = call i8* @Perl_safesysrealloc(i8* %701, i64 %mul1434)
  %703 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1436 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %703, i32 0, i32 22
  %arena1437 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1436, i32 0, i32 0
  store i8* %call1435, i8** %arena1437, align 8
  %704 = load i32, i32* %nsz1415, align 4
  %conv1438 = sext i32 %704 to i64
  %705 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1439 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %705, i32 0, i32 22
  %asiz1440 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1439, i32 0, i32 1
  store i64 %conv1438, i64* %asiz1440, align 8
  %706 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1441 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %706, i32 0, i32 22
  %arena1442 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1441, i32 0, i32 0
  %707 = load i8*, i8** %arena1442, align 8
  %708 = load i32, i32* %offset1422, align 4
  %idx.ext1443 = sext i32 %708 to i64
  %add.ptr1444 = getelementptr inbounds i8, i8* %707, i64 %idx.ext1443
  %709 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1445 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %709, i32 0, i32 22
  %aptr1446 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1445, i32 0, i32 2
  store i8* %add.ptr1444, i8** %aptr1446, align 8
  %710 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1447 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %710, i32 0, i32 22
  %arena1448 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1447, i32 0, i32 0
  %711 = load i8*, i8** %arena1448, align 8
  %712 = load i32, i32* %nsz1415, align 4
  %idx.ext1449 = sext i32 %712 to i64
  %add.ptr1450 = getelementptr inbounds i8, i8* %711, i64 %idx.ext1449
  %713 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1451 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %713, i32 0, i32 22
  %aend1452 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1451, i32 0, i32 3
  store i8* %add.ptr1450, i8** %aend1452, align 8
  br label %do.end1453

do.end1453:                                       ; preds = %do.body1414
  br label %if.end1454

if.end1454:                                       ; preds = %do.end1453, %do.body1405
  br label %do.end1455

do.end1455:                                       ; preds = %if.end1454
  %714 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1456 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %714, i32 0, i32 22
  %aptr1457 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1456, i32 0, i32 2
  %715 = load i8*, i8** %aptr1457, align 8
  %716 = ptrtoint i8* %715 to i64
  %717 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1458 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %717, i32 0, i32 22
  %aptr1459 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1458, i32 0, i32 2
  %718 = load i8*, i8** %aptr1459, align 8
  %719 = ptrtoint i8* %718 to i64
  %and1460 = and i64 %719, -4
  %cmp1461 = icmp eq i64 %716, %and1460
  br i1 %cmp1461, label %if.then1463, label %if.else1466

if.then1463:                                      ; preds = %do.end1455
  %720 = load i32, i32* %len1014, align 4
  %721 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1464 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %721, i32 0, i32 22
  %aptr1465 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1464, i32 0, i32 2
  %722 = load i8*, i8** %aptr1465, align 8
  %723 = bitcast i8* %722 to i32*
  store i32 %720, i32* %723, align 4
  br label %if.end1469

if.else1466:                                      ; preds = %do.end1455
  %724 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1467 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %724, i32 0, i32 22
  %aptr1468 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1467, i32 0, i32 2
  %725 = load i8*, i8** %aptr1468, align 8
  %726 = bitcast i32* %len1014 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %725, i8* align 4 %726, i64 4, i1 false)
  br label %if.end1469

if.end1469:                                       ; preds = %if.else1466, %if.then1463
  %727 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1470 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %727, i32 0, i32 22
  %aptr1471 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1470, i32 0, i32 2
  %728 = load i8*, i8** %aptr1471, align 8
  %add.ptr1472 = getelementptr inbounds i8, i8* %728, i64 4
  store i8* %add.ptr1472, i8** %aptr1471, align 8
  br label %do.end1473

do.end1473:                                       ; preds = %if.end1469
  br label %if.end1481

if.else1474:                                      ; preds = %if.else1400
  %729 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1475 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %729, i32 0, i32 24
  %730 = load %struct._PerlIO**, %struct._PerlIO*** %fio1475, align 8
  %731 = bitcast i32* %len1014 to i8*
  %call1476 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %730, i8* %731, i64 4)
  %cmp1477 = icmp ne i64 %call1476, 4
  br i1 %cmp1477, label %if.then1479, label %if.end1480

if.then1479:                                      ; preds = %if.else1474
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1480:                                       ; preds = %if.else1474
  br label %if.end1481

if.end1481:                                       ; preds = %if.end1480, %do.end1473
  br label %if.end1482

if.end1482:                                       ; preds = %if.end1481, %if.end1399
  br label %do.end1483

do.end1483:                                       ; preds = %if.end1482
  br label %do.body1484

do.body1484:                                      ; preds = %do.end1483
  %732 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1485 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %732, i32 0, i32 24
  %733 = load %struct._PerlIO**, %struct._PerlIO*** %fio1485, align 8
  %tobool1486 = icmp ne %struct._PerlIO** %733, null
  br i1 %tobool1486, label %if.else1551, label %if.then1487

if.then1487:                                      ; preds = %do.body1484
  br label %do.body1488

do.body1488:                                      ; preds = %if.then1487
  br label %do.body1489

do.body1489:                                      ; preds = %do.body1488
  %734 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1490 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %734, i32 0, i32 22
  %aptr1491 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1490, i32 0, i32 2
  %735 = load i8*, i8** %aptr1491, align 8
  %736 = load i32, i32* %len1014, align 4
  %idx.ext1492 = sext i32 %736 to i64
  %add.ptr1493 = getelementptr inbounds i8, i8* %735, i64 %idx.ext1492
  %737 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1494 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %737, i32 0, i32 22
  %aend1495 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1494, i32 0, i32 3
  %738 = load i8*, i8** %aend1495, align 8
  %cmp1496 = icmp ugt i8* %add.ptr1493, %738
  br i1 %cmp1496, label %if.then1498, label %if.end1540

if.then1498:                                      ; preds = %do.body1489
  br label %do.body1499

do.body1499:                                      ; preds = %if.then1498
  %739 = load i32, i32* %len1014, align 4
  %conv1501 = sext i32 %739 to i64
  %740 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1502 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %740, i32 0, i32 22
  %asiz1503 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1502, i32 0, i32 1
  %741 = load i64, i64* %asiz1503, align 8
  %add1504 = add i64 %conv1501, %741
  %add1505 = add i64 %add1504, 8191
  %and1506 = and i64 %add1505, -8192
  %conv1507 = trunc i64 %and1506 to i32
  store i32 %conv1507, i32* %nsz1500, align 4
  %742 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1509 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %742, i32 0, i32 22
  %aptr1510 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1509, i32 0, i32 2
  %743 = load i8*, i8** %aptr1510, align 8
  %744 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1511 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %744, i32 0, i32 22
  %arena1512 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1511, i32 0, i32 0
  %745 = load i8*, i8** %arena1512, align 8
  %sub.ptr.lhs.cast1513 = ptrtoint i8* %743 to i64
  %sub.ptr.rhs.cast1514 = ptrtoint i8* %745 to i64
  %sub.ptr.sub1515 = sub i64 %sub.ptr.lhs.cast1513, %sub.ptr.rhs.cast1514
  %conv1516 = trunc i64 %sub.ptr.sub1515 to i32
  store i32 %conv1516, i32* %offset1508, align 4
  %746 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1517 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %746, i32 0, i32 22
  %arena1518 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1517, i32 0, i32 0
  %747 = load i8*, i8** %arena1518, align 8
  %748 = load i32, i32* %nsz1500, align 4
  %conv1519 = sext i32 %748 to i64
  %mul1520 = mul i64 %conv1519, 1
  %call1521 = call i8* @Perl_safesysrealloc(i8* %747, i64 %mul1520)
  %749 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1522 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %749, i32 0, i32 22
  %arena1523 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1522, i32 0, i32 0
  store i8* %call1521, i8** %arena1523, align 8
  %750 = load i32, i32* %nsz1500, align 4
  %conv1524 = sext i32 %750 to i64
  %751 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1525 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %751, i32 0, i32 22
  %asiz1526 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1525, i32 0, i32 1
  store i64 %conv1524, i64* %asiz1526, align 8
  %752 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1527 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %752, i32 0, i32 22
  %arena1528 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1527, i32 0, i32 0
  %753 = load i8*, i8** %arena1528, align 8
  %754 = load i32, i32* %offset1508, align 4
  %idx.ext1529 = sext i32 %754 to i64
  %add.ptr1530 = getelementptr inbounds i8, i8* %753, i64 %idx.ext1529
  %755 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1531 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %755, i32 0, i32 22
  %aptr1532 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1531, i32 0, i32 2
  store i8* %add.ptr1530, i8** %aptr1532, align 8
  %756 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1533 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %756, i32 0, i32 22
  %arena1534 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1533, i32 0, i32 0
  %757 = load i8*, i8** %arena1534, align 8
  %758 = load i32, i32* %nsz1500, align 4
  %idx.ext1535 = sext i32 %758 to i64
  %add.ptr1536 = getelementptr inbounds i8, i8* %757, i64 %idx.ext1535
  %759 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1537 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %759, i32 0, i32 22
  %aend1538 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1537, i32 0, i32 3
  store i8* %add.ptr1536, i8** %aend1538, align 8
  br label %do.end1539

do.end1539:                                       ; preds = %do.body1499
  br label %if.end1540

if.end1540:                                       ; preds = %do.end1539, %do.body1489
  br label %do.end1541

do.end1541:                                       ; preds = %if.end1540
  %760 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1542 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %760, i32 0, i32 22
  %aptr1543 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1542, i32 0, i32 2
  %761 = load i8*, i8** %aptr1543, align 8
  %762 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_ptr1544 = getelementptr inbounds %struct.magic, %struct.magic* %762, i32 0, i32 7
  %763 = load i8*, i8** %mg_ptr1544, align 8
  %764 = load i32, i32* %len1014, align 4
  %conv1545 = sext i32 %764 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %761, i8* align 1 %763, i64 %conv1545, i1 false)
  %765 = load i32, i32* %len1014, align 4
  %766 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1546 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %766, i32 0, i32 22
  %aptr1547 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1546, i32 0, i32 2
  %767 = load i8*, i8** %aptr1547, align 8
  %idx.ext1548 = sext i32 %765 to i64
  %add.ptr1549 = getelementptr inbounds i8, i8* %767, i64 %idx.ext1548
  store i8* %add.ptr1549, i8** %aptr1547, align 8
  br label %do.end1550

do.end1550:                                       ; preds = %do.end1541
  br label %if.end1561

if.else1551:                                      ; preds = %do.body1484
  %768 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1552 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %768, i32 0, i32 24
  %769 = load %struct._PerlIO**, %struct._PerlIO*** %fio1552, align 8
  %770 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_ptr1553 = getelementptr inbounds %struct.magic, %struct.magic* %770, i32 0, i32 7
  %771 = load i8*, i8** %mg_ptr1553, align 8
  %772 = load i32, i32* %len1014, align 4
  %conv1554 = sext i32 %772 to i64
  %call1555 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %769, i8* %771, i64 %conv1554)
  %773 = load i32, i32* %len1014, align 4
  %conv1556 = sext i32 %773 to i64
  %cmp1557 = icmp ne i64 %call1555, %conv1556
  br i1 %cmp1557, label %if.then1559, label %if.end1560

if.then1559:                                      ; preds = %if.else1551
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1560:                                       ; preds = %if.else1551
  br label %if.end1561

if.end1561:                                       ; preds = %if.end1560, %do.end1550
  br label %do.end1562

do.end1562:                                       ; preds = %if.end1561
  br label %if.end1563

if.end1563:                                       ; preds = %do.end1562, %if.end1242
  br label %do.end1564

do.end1564:                                       ; preds = %if.end1563
  br label %if.end1565

if.end1565:                                       ; preds = %do.end1564, %land.lhs.true1010, %string
  %774 = load i64, i64* %len, align 8
  %conv1566 = trunc i64 %774 to i32
  store i32 %conv1566, i32* %wlen, align 4
  %775 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags1567 = getelementptr inbounds %struct.sv, %struct.sv* %775, i32 0, i32 2
  %776 = load i32, i32* %sv_flags1567, align 4
  %and1568 = and i32 %776, 536870912
  %tobool1569 = icmp ne i32 %and1568, 0
  br i1 %tobool1569, label %if.then1570, label %if.else2119

if.then1570:                                      ; preds = %if.end1565
  br label %do.body1571

do.body1571:                                      ; preds = %if.then1570
  %777 = load i32, i32* %wlen, align 4
  %cmp1572 = icmp sle i32 %777, 255
  br i1 %cmp1572, label %if.then1574, label %if.else1798

if.then1574:                                      ; preds = %do.body1571
  %778 = load i32, i32* %wlen, align 4
  %conv1576 = trunc i32 %778 to i8
  store i8 %conv1576, i8* %clen1575, align 1
  br label %do.body1577

do.body1577:                                      ; preds = %if.then1574
  %779 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1578 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %779, i32 0, i32 24
  %780 = load %struct._PerlIO**, %struct._PerlIO*** %fio1578, align 8
  %tobool1579 = icmp ne %struct._PerlIO** %780, null
  br i1 %tobool1579, label %if.else1638, label %if.then1580

if.then1580:                                      ; preds = %do.body1577
  br label %do.body1581

do.body1581:                                      ; preds = %if.then1580
  %781 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1582 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %781, i32 0, i32 22
  %aptr1583 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1582, i32 0, i32 2
  %782 = load i8*, i8** %aptr1583, align 8
  %783 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1584 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %783, i32 0, i32 22
  %aend1585 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1584, i32 0, i32 3
  %784 = load i8*, i8** %aend1585, align 8
  %cmp1586 = icmp ult i8* %782, %784
  br i1 %cmp1586, label %if.then1588, label %if.else1592

if.then1588:                                      ; preds = %do.body1581
  %785 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1589 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %785, i32 0, i32 22
  %aptr1590 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1589, i32 0, i32 2
  %786 = load i8*, i8** %aptr1590, align 8
  %incdec.ptr1591 = getelementptr inbounds i8, i8* %786, i32 1
  store i8* %incdec.ptr1591, i8** %aptr1590, align 8
  store i8 23, i8* %786, align 1
  br label %if.end1636

if.else1592:                                      ; preds = %do.body1581
  br label %do.body1593

do.body1593:                                      ; preds = %if.else1592
  %787 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1595 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %787, i32 0, i32 22
  %asiz1596 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1595, i32 0, i32 1
  %788 = load i64, i64* %asiz1596, align 8
  %add1597 = add i64 1, %788
  %add1598 = add i64 %add1597, 8191
  %and1599 = and i64 %add1598, -8192
  %conv1600 = trunc i64 %and1599 to i32
  store i32 %conv1600, i32* %nsz1594, align 4
  %789 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1602 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %789, i32 0, i32 22
  %aptr1603 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1602, i32 0, i32 2
  %790 = load i8*, i8** %aptr1603, align 8
  %791 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1604 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %791, i32 0, i32 22
  %arena1605 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1604, i32 0, i32 0
  %792 = load i8*, i8** %arena1605, align 8
  %sub.ptr.lhs.cast1606 = ptrtoint i8* %790 to i64
  %sub.ptr.rhs.cast1607 = ptrtoint i8* %792 to i64
  %sub.ptr.sub1608 = sub i64 %sub.ptr.lhs.cast1606, %sub.ptr.rhs.cast1607
  %conv1609 = trunc i64 %sub.ptr.sub1608 to i32
  store i32 %conv1609, i32* %offset1601, align 4
  %793 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1610 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %793, i32 0, i32 22
  %arena1611 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1610, i32 0, i32 0
  %794 = load i8*, i8** %arena1611, align 8
  %795 = load i32, i32* %nsz1594, align 4
  %conv1612 = sext i32 %795 to i64
  %mul1613 = mul i64 %conv1612, 1
  %call1614 = call i8* @Perl_safesysrealloc(i8* %794, i64 %mul1613)
  %796 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1615 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %796, i32 0, i32 22
  %arena1616 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1615, i32 0, i32 0
  store i8* %call1614, i8** %arena1616, align 8
  %797 = load i32, i32* %nsz1594, align 4
  %conv1617 = sext i32 %797 to i64
  %798 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1618 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %798, i32 0, i32 22
  %asiz1619 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1618, i32 0, i32 1
  store i64 %conv1617, i64* %asiz1619, align 8
  %799 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1620 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %799, i32 0, i32 22
  %arena1621 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1620, i32 0, i32 0
  %800 = load i8*, i8** %arena1621, align 8
  %801 = load i32, i32* %offset1601, align 4
  %idx.ext1622 = sext i32 %801 to i64
  %add.ptr1623 = getelementptr inbounds i8, i8* %800, i64 %idx.ext1622
  %802 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1624 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %802, i32 0, i32 22
  %aptr1625 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1624, i32 0, i32 2
  store i8* %add.ptr1623, i8** %aptr1625, align 8
  %803 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1626 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %803, i32 0, i32 22
  %arena1627 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1626, i32 0, i32 0
  %804 = load i8*, i8** %arena1627, align 8
  %805 = load i32, i32* %nsz1594, align 4
  %idx.ext1628 = sext i32 %805 to i64
  %add.ptr1629 = getelementptr inbounds i8, i8* %804, i64 %idx.ext1628
  %806 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1630 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %806, i32 0, i32 22
  %aend1631 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1630, i32 0, i32 3
  store i8* %add.ptr1629, i8** %aend1631, align 8
  br label %do.end1632

do.end1632:                                       ; preds = %do.body1593
  %807 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1633 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %807, i32 0, i32 22
  %aptr1634 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1633, i32 0, i32 2
  %808 = load i8*, i8** %aptr1634, align 8
  %incdec.ptr1635 = getelementptr inbounds i8, i8* %808, i32 1
  store i8* %incdec.ptr1635, i8** %aptr1634, align 8
  store i8 23, i8* %808, align 1
  br label %if.end1636

if.end1636:                                       ; preds = %do.end1632, %if.then1588
  br label %do.end1637

do.end1637:                                       ; preds = %if.end1636
  br label %if.end1645

if.else1638:                                      ; preds = %do.body1577
  %809 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1639 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %809, i32 0, i32 24
  %810 = load %struct._PerlIO**, %struct._PerlIO*** %fio1639, align 8
  %call1640 = call i32 @PerlIO_putc(%struct._PerlIO** %810, i32 23)
  %cmp1641 = icmp eq i32 %call1640, -1
  br i1 %cmp1641, label %if.then1643, label %if.end1644

if.then1643:                                      ; preds = %if.else1638
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1644:                                       ; preds = %if.else1638
  br label %if.end1645

if.end1645:                                       ; preds = %if.end1644, %do.end1637
  br label %do.end1646

do.end1646:                                       ; preds = %if.end1645
  br label %do.body1647

do.body1647:                                      ; preds = %do.end1646
  %811 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1648 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %811, i32 0, i32 24
  %812 = load %struct._PerlIO**, %struct._PerlIO*** %fio1648, align 8
  %tobool1649 = icmp ne %struct._PerlIO** %812, null
  br i1 %tobool1649, label %if.else1708, label %if.then1650

if.then1650:                                      ; preds = %do.body1647
  br label %do.body1651

do.body1651:                                      ; preds = %if.then1650
  %813 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1652 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %813, i32 0, i32 22
  %aptr1653 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1652, i32 0, i32 2
  %814 = load i8*, i8** %aptr1653, align 8
  %815 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1654 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %815, i32 0, i32 22
  %aend1655 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1654, i32 0, i32 3
  %816 = load i8*, i8** %aend1655, align 8
  %cmp1656 = icmp ult i8* %814, %816
  br i1 %cmp1656, label %if.then1658, label %if.else1662

if.then1658:                                      ; preds = %do.body1651
  %817 = load i8, i8* %clen1575, align 1
  %818 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1659 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %818, i32 0, i32 22
  %aptr1660 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1659, i32 0, i32 2
  %819 = load i8*, i8** %aptr1660, align 8
  %incdec.ptr1661 = getelementptr inbounds i8, i8* %819, i32 1
  store i8* %incdec.ptr1661, i8** %aptr1660, align 8
  store i8 %817, i8* %819, align 1
  br label %if.end1706

if.else1662:                                      ; preds = %do.body1651
  br label %do.body1663

do.body1663:                                      ; preds = %if.else1662
  %820 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1665 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %820, i32 0, i32 22
  %asiz1666 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1665, i32 0, i32 1
  %821 = load i64, i64* %asiz1666, align 8
  %add1667 = add i64 1, %821
  %add1668 = add i64 %add1667, 8191
  %and1669 = and i64 %add1668, -8192
  %conv1670 = trunc i64 %and1669 to i32
  store i32 %conv1670, i32* %nsz1664, align 4
  %822 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1672 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %822, i32 0, i32 22
  %aptr1673 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1672, i32 0, i32 2
  %823 = load i8*, i8** %aptr1673, align 8
  %824 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1674 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %824, i32 0, i32 22
  %arena1675 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1674, i32 0, i32 0
  %825 = load i8*, i8** %arena1675, align 8
  %sub.ptr.lhs.cast1676 = ptrtoint i8* %823 to i64
  %sub.ptr.rhs.cast1677 = ptrtoint i8* %825 to i64
  %sub.ptr.sub1678 = sub i64 %sub.ptr.lhs.cast1676, %sub.ptr.rhs.cast1677
  %conv1679 = trunc i64 %sub.ptr.sub1678 to i32
  store i32 %conv1679, i32* %offset1671, align 4
  %826 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1680 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %826, i32 0, i32 22
  %arena1681 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1680, i32 0, i32 0
  %827 = load i8*, i8** %arena1681, align 8
  %828 = load i32, i32* %nsz1664, align 4
  %conv1682 = sext i32 %828 to i64
  %mul1683 = mul i64 %conv1682, 1
  %call1684 = call i8* @Perl_safesysrealloc(i8* %827, i64 %mul1683)
  %829 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1685 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %829, i32 0, i32 22
  %arena1686 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1685, i32 0, i32 0
  store i8* %call1684, i8** %arena1686, align 8
  %830 = load i32, i32* %nsz1664, align 4
  %conv1687 = sext i32 %830 to i64
  %831 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1688 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %831, i32 0, i32 22
  %asiz1689 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1688, i32 0, i32 1
  store i64 %conv1687, i64* %asiz1689, align 8
  %832 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1690 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %832, i32 0, i32 22
  %arena1691 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1690, i32 0, i32 0
  %833 = load i8*, i8** %arena1691, align 8
  %834 = load i32, i32* %offset1671, align 4
  %idx.ext1692 = sext i32 %834 to i64
  %add.ptr1693 = getelementptr inbounds i8, i8* %833, i64 %idx.ext1692
  %835 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1694 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %835, i32 0, i32 22
  %aptr1695 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1694, i32 0, i32 2
  store i8* %add.ptr1693, i8** %aptr1695, align 8
  %836 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1696 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %836, i32 0, i32 22
  %arena1697 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1696, i32 0, i32 0
  %837 = load i8*, i8** %arena1697, align 8
  %838 = load i32, i32* %nsz1664, align 4
  %idx.ext1698 = sext i32 %838 to i64
  %add.ptr1699 = getelementptr inbounds i8, i8* %837, i64 %idx.ext1698
  %839 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1700 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %839, i32 0, i32 22
  %aend1701 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1700, i32 0, i32 3
  store i8* %add.ptr1699, i8** %aend1701, align 8
  br label %do.end1702

do.end1702:                                       ; preds = %do.body1663
  %840 = load i8, i8* %clen1575, align 1
  %841 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1703 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %841, i32 0, i32 22
  %aptr1704 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1703, i32 0, i32 2
  %842 = load i8*, i8** %aptr1704, align 8
  %incdec.ptr1705 = getelementptr inbounds i8, i8* %842, i32 1
  store i8* %incdec.ptr1705, i8** %aptr1704, align 8
  store i8 %840, i8* %842, align 1
  br label %if.end1706

if.end1706:                                       ; preds = %do.end1702, %if.then1658
  br label %do.end1707

do.end1707:                                       ; preds = %if.end1706
  br label %if.end1716

if.else1708:                                      ; preds = %do.body1647
  %843 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1709 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %843, i32 0, i32 24
  %844 = load %struct._PerlIO**, %struct._PerlIO*** %fio1709, align 8
  %845 = load i8, i8* %clen1575, align 1
  %conv1710 = zext i8 %845 to i32
  %call1711 = call i32 @PerlIO_putc(%struct._PerlIO** %844, i32 %conv1710)
  %cmp1712 = icmp eq i32 %call1711, -1
  br i1 %cmp1712, label %if.then1714, label %if.end1715

if.then1714:                                      ; preds = %if.else1708
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1715:                                       ; preds = %if.else1708
  br label %if.end1716

if.end1716:                                       ; preds = %if.end1715, %do.end1707
  br label %do.end1717

do.end1717:                                       ; preds = %if.end1716
  %846 = load i32, i32* %wlen, align 4
  %tobool1718 = icmp ne i32 %846, 0
  br i1 %tobool1718, label %if.then1719, label %if.end1797

if.then1719:                                      ; preds = %do.end1717
  br label %do.body1720

do.body1720:                                      ; preds = %if.then1719
  %847 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1721 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %847, i32 0, i32 24
  %848 = load %struct._PerlIO**, %struct._PerlIO*** %fio1721, align 8
  %tobool1722 = icmp ne %struct._PerlIO** %848, null
  br i1 %tobool1722, label %if.else1786, label %if.then1723

if.then1723:                                      ; preds = %do.body1720
  br label %do.body1724

do.body1724:                                      ; preds = %if.then1723
  br label %do.body1725

do.body1725:                                      ; preds = %do.body1724
  %849 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1726 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %849, i32 0, i32 22
  %aptr1727 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1726, i32 0, i32 2
  %850 = load i8*, i8** %aptr1727, align 8
  %851 = load i32, i32* %wlen, align 4
  %idx.ext1728 = sext i32 %851 to i64
  %add.ptr1729 = getelementptr inbounds i8, i8* %850, i64 %idx.ext1728
  %852 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1730 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %852, i32 0, i32 22
  %aend1731 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1730, i32 0, i32 3
  %853 = load i8*, i8** %aend1731, align 8
  %cmp1732 = icmp ugt i8* %add.ptr1729, %853
  br i1 %cmp1732, label %if.then1734, label %if.end1776

if.then1734:                                      ; preds = %do.body1725
  br label %do.body1735

do.body1735:                                      ; preds = %if.then1734
  %854 = load i32, i32* %wlen, align 4
  %conv1737 = sext i32 %854 to i64
  %855 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1738 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %855, i32 0, i32 22
  %asiz1739 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1738, i32 0, i32 1
  %856 = load i64, i64* %asiz1739, align 8
  %add1740 = add i64 %conv1737, %856
  %add1741 = add i64 %add1740, 8191
  %and1742 = and i64 %add1741, -8192
  %conv1743 = trunc i64 %and1742 to i32
  store i32 %conv1743, i32* %nsz1736, align 4
  %857 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1745 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %857, i32 0, i32 22
  %aptr1746 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1745, i32 0, i32 2
  %858 = load i8*, i8** %aptr1746, align 8
  %859 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1747 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %859, i32 0, i32 22
  %arena1748 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1747, i32 0, i32 0
  %860 = load i8*, i8** %arena1748, align 8
  %sub.ptr.lhs.cast1749 = ptrtoint i8* %858 to i64
  %sub.ptr.rhs.cast1750 = ptrtoint i8* %860 to i64
  %sub.ptr.sub1751 = sub i64 %sub.ptr.lhs.cast1749, %sub.ptr.rhs.cast1750
  %conv1752 = trunc i64 %sub.ptr.sub1751 to i32
  store i32 %conv1752, i32* %offset1744, align 4
  %861 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1753 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %861, i32 0, i32 22
  %arena1754 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1753, i32 0, i32 0
  %862 = load i8*, i8** %arena1754, align 8
  %863 = load i32, i32* %nsz1736, align 4
  %conv1755 = sext i32 %863 to i64
  %mul1756 = mul i64 %conv1755, 1
  %call1757 = call i8* @Perl_safesysrealloc(i8* %862, i64 %mul1756)
  %864 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1758 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %864, i32 0, i32 22
  %arena1759 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1758, i32 0, i32 0
  store i8* %call1757, i8** %arena1759, align 8
  %865 = load i32, i32* %nsz1736, align 4
  %conv1760 = sext i32 %865 to i64
  %866 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1761 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %866, i32 0, i32 22
  %asiz1762 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1761, i32 0, i32 1
  store i64 %conv1760, i64* %asiz1762, align 8
  %867 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1763 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %867, i32 0, i32 22
  %arena1764 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1763, i32 0, i32 0
  %868 = load i8*, i8** %arena1764, align 8
  %869 = load i32, i32* %offset1744, align 4
  %idx.ext1765 = sext i32 %869 to i64
  %add.ptr1766 = getelementptr inbounds i8, i8* %868, i64 %idx.ext1765
  %870 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1767 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %870, i32 0, i32 22
  %aptr1768 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1767, i32 0, i32 2
  store i8* %add.ptr1766, i8** %aptr1768, align 8
  %871 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1769 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %871, i32 0, i32 22
  %arena1770 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1769, i32 0, i32 0
  %872 = load i8*, i8** %arena1770, align 8
  %873 = load i32, i32* %nsz1736, align 4
  %idx.ext1771 = sext i32 %873 to i64
  %add.ptr1772 = getelementptr inbounds i8, i8* %872, i64 %idx.ext1771
  %874 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1773 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %874, i32 0, i32 22
  %aend1774 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1773, i32 0, i32 3
  store i8* %add.ptr1772, i8** %aend1774, align 8
  br label %do.end1775

do.end1775:                                       ; preds = %do.body1735
  br label %if.end1776

if.end1776:                                       ; preds = %do.end1775, %do.body1725
  br label %do.end1777

do.end1777:                                       ; preds = %if.end1776
  %875 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1778 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %875, i32 0, i32 22
  %aptr1779 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1778, i32 0, i32 2
  %876 = load i8*, i8** %aptr1779, align 8
  %877 = load i8*, i8** %pv, align 8
  %878 = load i32, i32* %wlen, align 4
  %conv1780 = sext i32 %878 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %876, i8* align 1 %877, i64 %conv1780, i1 false)
  %879 = load i32, i32* %wlen, align 4
  %880 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1781 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %880, i32 0, i32 22
  %aptr1782 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1781, i32 0, i32 2
  %881 = load i8*, i8** %aptr1782, align 8
  %idx.ext1783 = sext i32 %879 to i64
  %add.ptr1784 = getelementptr inbounds i8, i8* %881, i64 %idx.ext1783
  store i8* %add.ptr1784, i8** %aptr1782, align 8
  br label %do.end1785

do.end1785:                                       ; preds = %do.end1777
  br label %if.end1795

if.else1786:                                      ; preds = %do.body1720
  %882 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1787 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %882, i32 0, i32 24
  %883 = load %struct._PerlIO**, %struct._PerlIO*** %fio1787, align 8
  %884 = load i8*, i8** %pv, align 8
  %885 = load i32, i32* %wlen, align 4
  %conv1788 = sext i32 %885 to i64
  %call1789 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %883, i8* %884, i64 %conv1788)
  %886 = load i32, i32* %wlen, align 4
  %conv1790 = sext i32 %886 to i64
  %cmp1791 = icmp ne i64 %call1789, %conv1790
  br i1 %cmp1791, label %if.then1793, label %if.end1794

if.then1793:                                      ; preds = %if.else1786
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1794:                                       ; preds = %if.else1786
  br label %if.end1795

if.end1795:                                       ; preds = %if.end1794, %do.end1785
  br label %do.end1796

do.end1796:                                       ; preds = %if.end1795
  br label %if.end1797

if.end1797:                                       ; preds = %do.end1796, %do.end1717
  br label %if.end2117

if.else1798:                                      ; preds = %do.body1571
  br label %do.body1799

do.body1799:                                      ; preds = %if.else1798
  %887 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1800 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %887, i32 0, i32 24
  %888 = load %struct._PerlIO**, %struct._PerlIO*** %fio1800, align 8
  %tobool1801 = icmp ne %struct._PerlIO** %888, null
  br i1 %tobool1801, label %if.else1860, label %if.then1802

if.then1802:                                      ; preds = %do.body1799
  br label %do.body1803

do.body1803:                                      ; preds = %if.then1802
  %889 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1804 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %889, i32 0, i32 22
  %aptr1805 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1804, i32 0, i32 2
  %890 = load i8*, i8** %aptr1805, align 8
  %891 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1806 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %891, i32 0, i32 22
  %aend1807 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1806, i32 0, i32 3
  %892 = load i8*, i8** %aend1807, align 8
  %cmp1808 = icmp ult i8* %890, %892
  br i1 %cmp1808, label %if.then1810, label %if.else1814

if.then1810:                                      ; preds = %do.body1803
  %893 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1811 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %893, i32 0, i32 22
  %aptr1812 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1811, i32 0, i32 2
  %894 = load i8*, i8** %aptr1812, align 8
  %incdec.ptr1813 = getelementptr inbounds i8, i8* %894, i32 1
  store i8* %incdec.ptr1813, i8** %aptr1812, align 8
  store i8 24, i8* %894, align 1
  br label %if.end1858

if.else1814:                                      ; preds = %do.body1803
  br label %do.body1815

do.body1815:                                      ; preds = %if.else1814
  %895 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1817 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %895, i32 0, i32 22
  %asiz1818 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1817, i32 0, i32 1
  %896 = load i64, i64* %asiz1818, align 8
  %add1819 = add i64 1, %896
  %add1820 = add i64 %add1819, 8191
  %and1821 = and i64 %add1820, -8192
  %conv1822 = trunc i64 %and1821 to i32
  store i32 %conv1822, i32* %nsz1816, align 4
  %897 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1824 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %897, i32 0, i32 22
  %aptr1825 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1824, i32 0, i32 2
  %898 = load i8*, i8** %aptr1825, align 8
  %899 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1826 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %899, i32 0, i32 22
  %arena1827 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1826, i32 0, i32 0
  %900 = load i8*, i8** %arena1827, align 8
  %sub.ptr.lhs.cast1828 = ptrtoint i8* %898 to i64
  %sub.ptr.rhs.cast1829 = ptrtoint i8* %900 to i64
  %sub.ptr.sub1830 = sub i64 %sub.ptr.lhs.cast1828, %sub.ptr.rhs.cast1829
  %conv1831 = trunc i64 %sub.ptr.sub1830 to i32
  store i32 %conv1831, i32* %offset1823, align 4
  %901 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1832 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %901, i32 0, i32 22
  %arena1833 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1832, i32 0, i32 0
  %902 = load i8*, i8** %arena1833, align 8
  %903 = load i32, i32* %nsz1816, align 4
  %conv1834 = sext i32 %903 to i64
  %mul1835 = mul i64 %conv1834, 1
  %call1836 = call i8* @Perl_safesysrealloc(i8* %902, i64 %mul1835)
  %904 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1837 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %904, i32 0, i32 22
  %arena1838 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1837, i32 0, i32 0
  store i8* %call1836, i8** %arena1838, align 8
  %905 = load i32, i32* %nsz1816, align 4
  %conv1839 = sext i32 %905 to i64
  %906 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1840 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %906, i32 0, i32 22
  %asiz1841 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1840, i32 0, i32 1
  store i64 %conv1839, i64* %asiz1841, align 8
  %907 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1842 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %907, i32 0, i32 22
  %arena1843 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1842, i32 0, i32 0
  %908 = load i8*, i8** %arena1843, align 8
  %909 = load i32, i32* %offset1823, align 4
  %idx.ext1844 = sext i32 %909 to i64
  %add.ptr1845 = getelementptr inbounds i8, i8* %908, i64 %idx.ext1844
  %910 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1846 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %910, i32 0, i32 22
  %aptr1847 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1846, i32 0, i32 2
  store i8* %add.ptr1845, i8** %aptr1847, align 8
  %911 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1848 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %911, i32 0, i32 22
  %arena1849 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1848, i32 0, i32 0
  %912 = load i8*, i8** %arena1849, align 8
  %913 = load i32, i32* %nsz1816, align 4
  %idx.ext1850 = sext i32 %913 to i64
  %add.ptr1851 = getelementptr inbounds i8, i8* %912, i64 %idx.ext1850
  %914 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1852 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %914, i32 0, i32 22
  %aend1853 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1852, i32 0, i32 3
  store i8* %add.ptr1851, i8** %aend1853, align 8
  br label %do.end1854

do.end1854:                                       ; preds = %do.body1815
  %915 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1855 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %915, i32 0, i32 22
  %aptr1856 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1855, i32 0, i32 2
  %916 = load i8*, i8** %aptr1856, align 8
  %incdec.ptr1857 = getelementptr inbounds i8, i8* %916, i32 1
  store i8* %incdec.ptr1857, i8** %aptr1856, align 8
  store i8 24, i8* %916, align 1
  br label %if.end1858

if.end1858:                                       ; preds = %do.end1854, %if.then1810
  br label %do.end1859

do.end1859:                                       ; preds = %if.end1858
  br label %if.end1867

if.else1860:                                      ; preds = %do.body1799
  %917 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1861 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %917, i32 0, i32 24
  %918 = load %struct._PerlIO**, %struct._PerlIO*** %fio1861, align 8
  %call1862 = call i32 @PerlIO_putc(%struct._PerlIO** %918, i32 24)
  %cmp1863 = icmp eq i32 %call1862, -1
  br i1 %cmp1863, label %if.then1865, label %if.end1866

if.then1865:                                      ; preds = %if.else1860
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1866:                                       ; preds = %if.else1860
  br label %if.end1867

if.end1867:                                       ; preds = %if.end1866, %do.end1859
  br label %do.end1868

do.end1868:                                       ; preds = %if.end1867
  br label %do.body1869

do.body1869:                                      ; preds = %do.end1868
  %919 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder1870 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %919, i32 0, i32 12
  %920 = load i32, i32* %netorder1870, align 8
  %tobool1871 = icmp ne i32 %920, 0
  br i1 %tobool1871, label %if.then1872, label %if.else1956

if.then1872:                                      ; preds = %do.body1869
  %921 = load i32, i32* %wlen, align 4
  %call1874 = call i32 @my_swap32(i32 %921)
  store i32 %call1874, i32* %y1873, align 4
  %922 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1875 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %922, i32 0, i32 24
  %923 = load %struct._PerlIO**, %struct._PerlIO*** %fio1875, align 8
  %tobool1876 = icmp ne %struct._PerlIO** %923, null
  br i1 %tobool1876, label %if.else1948, label %if.then1877

if.then1877:                                      ; preds = %if.then1872
  br label %do.body1878

do.body1878:                                      ; preds = %if.then1877
  br label %do.body1879

do.body1879:                                      ; preds = %do.body1878
  %924 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1880 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %924, i32 0, i32 22
  %aptr1881 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1880, i32 0, i32 2
  %925 = load i8*, i8** %aptr1881, align 8
  %add.ptr1882 = getelementptr inbounds i8, i8* %925, i64 4
  %926 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1883 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %926, i32 0, i32 22
  %aend1884 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1883, i32 0, i32 3
  %927 = load i8*, i8** %aend1884, align 8
  %cmp1885 = icmp ugt i8* %add.ptr1882, %927
  br i1 %cmp1885, label %if.then1887, label %if.end1928

if.then1887:                                      ; preds = %do.body1879
  br label %do.body1888

do.body1888:                                      ; preds = %if.then1887
  %928 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1890 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %928, i32 0, i32 22
  %asiz1891 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1890, i32 0, i32 1
  %929 = load i64, i64* %asiz1891, align 8
  %add1892 = add i64 4, %929
  %add1893 = add i64 %add1892, 8191
  %and1894 = and i64 %add1893, -8192
  %conv1895 = trunc i64 %and1894 to i32
  store i32 %conv1895, i32* %nsz1889, align 4
  %930 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1897 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %930, i32 0, i32 22
  %aptr1898 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1897, i32 0, i32 2
  %931 = load i8*, i8** %aptr1898, align 8
  %932 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1899 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %932, i32 0, i32 22
  %arena1900 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1899, i32 0, i32 0
  %933 = load i8*, i8** %arena1900, align 8
  %sub.ptr.lhs.cast1901 = ptrtoint i8* %931 to i64
  %sub.ptr.rhs.cast1902 = ptrtoint i8* %933 to i64
  %sub.ptr.sub1903 = sub i64 %sub.ptr.lhs.cast1901, %sub.ptr.rhs.cast1902
  %conv1904 = trunc i64 %sub.ptr.sub1903 to i32
  store i32 %conv1904, i32* %offset1896, align 4
  %934 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1905 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %934, i32 0, i32 22
  %arena1906 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1905, i32 0, i32 0
  %935 = load i8*, i8** %arena1906, align 8
  %936 = load i32, i32* %nsz1889, align 4
  %conv1907 = sext i32 %936 to i64
  %mul1908 = mul i64 %conv1907, 1
  %call1909 = call i8* @Perl_safesysrealloc(i8* %935, i64 %mul1908)
  %937 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1910 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %937, i32 0, i32 22
  %arena1911 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1910, i32 0, i32 0
  store i8* %call1909, i8** %arena1911, align 8
  %938 = load i32, i32* %nsz1889, align 4
  %conv1912 = sext i32 %938 to i64
  %939 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1913 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %939, i32 0, i32 22
  %asiz1914 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1913, i32 0, i32 1
  store i64 %conv1912, i64* %asiz1914, align 8
  %940 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1915 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %940, i32 0, i32 22
  %arena1916 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1915, i32 0, i32 0
  %941 = load i8*, i8** %arena1916, align 8
  %942 = load i32, i32* %offset1896, align 4
  %idx.ext1917 = sext i32 %942 to i64
  %add.ptr1918 = getelementptr inbounds i8, i8* %941, i64 %idx.ext1917
  %943 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1919 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %943, i32 0, i32 22
  %aptr1920 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1919, i32 0, i32 2
  store i8* %add.ptr1918, i8** %aptr1920, align 8
  %944 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1921 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %944, i32 0, i32 22
  %arena1922 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1921, i32 0, i32 0
  %945 = load i8*, i8** %arena1922, align 8
  %946 = load i32, i32* %nsz1889, align 4
  %idx.ext1923 = sext i32 %946 to i64
  %add.ptr1924 = getelementptr inbounds i8, i8* %945, i64 %idx.ext1923
  %947 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1925 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %947, i32 0, i32 22
  %aend1926 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1925, i32 0, i32 3
  store i8* %add.ptr1924, i8** %aend1926, align 8
  br label %do.end1927

do.end1927:                                       ; preds = %do.body1888
  br label %if.end1928

if.end1928:                                       ; preds = %do.end1927, %do.body1879
  br label %do.end1929

do.end1929:                                       ; preds = %if.end1928
  %948 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1930 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %948, i32 0, i32 22
  %aptr1931 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1930, i32 0, i32 2
  %949 = load i8*, i8** %aptr1931, align 8
  %950 = ptrtoint i8* %949 to i64
  %951 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1932 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %951, i32 0, i32 22
  %aptr1933 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1932, i32 0, i32 2
  %952 = load i8*, i8** %aptr1933, align 8
  %953 = ptrtoint i8* %952 to i64
  %and1934 = and i64 %953, -4
  %cmp1935 = icmp eq i64 %950, %and1934
  br i1 %cmp1935, label %if.then1937, label %if.else1940

if.then1937:                                      ; preds = %do.end1929
  %954 = load i32, i32* %y1873, align 4
  %955 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1938 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %955, i32 0, i32 22
  %aptr1939 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1938, i32 0, i32 2
  %956 = load i8*, i8** %aptr1939, align 8
  %957 = bitcast i8* %956 to i32*
  store i32 %954, i32* %957, align 4
  br label %if.end1943

if.else1940:                                      ; preds = %do.end1929
  %958 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1941 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %958, i32 0, i32 22
  %aptr1942 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1941, i32 0, i32 2
  %959 = load i8*, i8** %aptr1942, align 8
  %960 = bitcast i32* %y1873 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %959, i8* align 4 %960, i64 4, i1 false)
  br label %if.end1943

if.end1943:                                       ; preds = %if.else1940, %if.then1937
  %961 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1944 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %961, i32 0, i32 22
  %aptr1945 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1944, i32 0, i32 2
  %962 = load i8*, i8** %aptr1945, align 8
  %add.ptr1946 = getelementptr inbounds i8, i8* %962, i64 4
  store i8* %add.ptr1946, i8** %aptr1945, align 8
  br label %do.end1947

do.end1947:                                       ; preds = %if.end1943
  br label %if.end1955

if.else1948:                                      ; preds = %if.then1872
  %963 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1949 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %963, i32 0, i32 24
  %964 = load %struct._PerlIO**, %struct._PerlIO*** %fio1949, align 8
  %965 = bitcast i32* %y1873 to i8*
  %call1950 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %964, i8* %965, i64 4)
  %cmp1951 = icmp ne i64 %call1950, 4
  br i1 %cmp1951, label %if.then1953, label %if.end1954

if.then1953:                                      ; preds = %if.else1948
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1954:                                       ; preds = %if.else1948
  br label %if.end1955

if.end1955:                                       ; preds = %if.end1954, %do.end1947
  br label %if.end2038

if.else1956:                                      ; preds = %do.body1869
  %966 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1957 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %966, i32 0, i32 24
  %967 = load %struct._PerlIO**, %struct._PerlIO*** %fio1957, align 8
  %tobool1958 = icmp ne %struct._PerlIO** %967, null
  br i1 %tobool1958, label %if.else2030, label %if.then1959

if.then1959:                                      ; preds = %if.else1956
  br label %do.body1960

do.body1960:                                      ; preds = %if.then1959
  br label %do.body1961

do.body1961:                                      ; preds = %do.body1960
  %968 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1962 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %968, i32 0, i32 22
  %aptr1963 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1962, i32 0, i32 2
  %969 = load i8*, i8** %aptr1963, align 8
  %add.ptr1964 = getelementptr inbounds i8, i8* %969, i64 4
  %970 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1965 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %970, i32 0, i32 22
  %aend1966 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1965, i32 0, i32 3
  %971 = load i8*, i8** %aend1966, align 8
  %cmp1967 = icmp ugt i8* %add.ptr1964, %971
  br i1 %cmp1967, label %if.then1969, label %if.end2010

if.then1969:                                      ; preds = %do.body1961
  br label %do.body1970

do.body1970:                                      ; preds = %if.then1969
  %972 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1972 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %972, i32 0, i32 22
  %asiz1973 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1972, i32 0, i32 1
  %973 = load i64, i64* %asiz1973, align 8
  %add1974 = add i64 4, %973
  %add1975 = add i64 %add1974, 8191
  %and1976 = and i64 %add1975, -8192
  %conv1977 = trunc i64 %and1976 to i32
  store i32 %conv1977, i32* %nsz1971, align 4
  %974 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1979 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %974, i32 0, i32 22
  %aptr1980 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1979, i32 0, i32 2
  %975 = load i8*, i8** %aptr1980, align 8
  %976 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1981 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %976, i32 0, i32 22
  %arena1982 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1981, i32 0, i32 0
  %977 = load i8*, i8** %arena1982, align 8
  %sub.ptr.lhs.cast1983 = ptrtoint i8* %975 to i64
  %sub.ptr.rhs.cast1984 = ptrtoint i8* %977 to i64
  %sub.ptr.sub1985 = sub i64 %sub.ptr.lhs.cast1983, %sub.ptr.rhs.cast1984
  %conv1986 = trunc i64 %sub.ptr.sub1985 to i32
  store i32 %conv1986, i32* %offset1978, align 4
  %978 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1987 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %978, i32 0, i32 22
  %arena1988 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1987, i32 0, i32 0
  %979 = load i8*, i8** %arena1988, align 8
  %980 = load i32, i32* %nsz1971, align 4
  %conv1989 = sext i32 %980 to i64
  %mul1990 = mul i64 %conv1989, 1
  %call1991 = call i8* @Perl_safesysrealloc(i8* %979, i64 %mul1990)
  %981 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1992 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %981, i32 0, i32 22
  %arena1993 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1992, i32 0, i32 0
  store i8* %call1991, i8** %arena1993, align 8
  %982 = load i32, i32* %nsz1971, align 4
  %conv1994 = sext i32 %982 to i64
  %983 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1995 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %983, i32 0, i32 22
  %asiz1996 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1995, i32 0, i32 1
  store i64 %conv1994, i64* %asiz1996, align 8
  %984 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1997 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %984, i32 0, i32 22
  %arena1998 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1997, i32 0, i32 0
  %985 = load i8*, i8** %arena1998, align 8
  %986 = load i32, i32* %offset1978, align 4
  %idx.ext1999 = sext i32 %986 to i64
  %add.ptr2000 = getelementptr inbounds i8, i8* %985, i64 %idx.ext1999
  %987 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2001 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %987, i32 0, i32 22
  %aptr2002 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2001, i32 0, i32 2
  store i8* %add.ptr2000, i8** %aptr2002, align 8
  %988 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2003 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %988, i32 0, i32 22
  %arena2004 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2003, i32 0, i32 0
  %989 = load i8*, i8** %arena2004, align 8
  %990 = load i32, i32* %nsz1971, align 4
  %idx.ext2005 = sext i32 %990 to i64
  %add.ptr2006 = getelementptr inbounds i8, i8* %989, i64 %idx.ext2005
  %991 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2007 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %991, i32 0, i32 22
  %aend2008 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2007, i32 0, i32 3
  store i8* %add.ptr2006, i8** %aend2008, align 8
  br label %do.end2009

do.end2009:                                       ; preds = %do.body1970
  br label %if.end2010

if.end2010:                                       ; preds = %do.end2009, %do.body1961
  br label %do.end2011

do.end2011:                                       ; preds = %if.end2010
  %992 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2012 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %992, i32 0, i32 22
  %aptr2013 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2012, i32 0, i32 2
  %993 = load i8*, i8** %aptr2013, align 8
  %994 = ptrtoint i8* %993 to i64
  %995 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2014 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %995, i32 0, i32 22
  %aptr2015 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2014, i32 0, i32 2
  %996 = load i8*, i8** %aptr2015, align 8
  %997 = ptrtoint i8* %996 to i64
  %and2016 = and i64 %997, -4
  %cmp2017 = icmp eq i64 %994, %and2016
  br i1 %cmp2017, label %if.then2019, label %if.else2022

if.then2019:                                      ; preds = %do.end2011
  %998 = load i32, i32* %wlen, align 4
  %999 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2020 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %999, i32 0, i32 22
  %aptr2021 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2020, i32 0, i32 2
  %1000 = load i8*, i8** %aptr2021, align 8
  %1001 = bitcast i8* %1000 to i32*
  store i32 %998, i32* %1001, align 4
  br label %if.end2025

if.else2022:                                      ; preds = %do.end2011
  %1002 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2023 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1002, i32 0, i32 22
  %aptr2024 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2023, i32 0, i32 2
  %1003 = load i8*, i8** %aptr2024, align 8
  %1004 = bitcast i32* %wlen to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1003, i8* align 4 %1004, i64 4, i1 false)
  br label %if.end2025

if.end2025:                                       ; preds = %if.else2022, %if.then2019
  %1005 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2026 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1005, i32 0, i32 22
  %aptr2027 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2026, i32 0, i32 2
  %1006 = load i8*, i8** %aptr2027, align 8
  %add.ptr2028 = getelementptr inbounds i8, i8* %1006, i64 4
  store i8* %add.ptr2028, i8** %aptr2027, align 8
  br label %do.end2029

do.end2029:                                       ; preds = %if.end2025
  br label %if.end2037

if.else2030:                                      ; preds = %if.else1956
  %1007 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio2031 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1007, i32 0, i32 24
  %1008 = load %struct._PerlIO**, %struct._PerlIO*** %fio2031, align 8
  %1009 = bitcast i32* %wlen to i8*
  %call2032 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %1008, i8* %1009, i64 4)
  %cmp2033 = icmp ne i64 %call2032, 4
  br i1 %cmp2033, label %if.then2035, label %if.end2036

if.then2035:                                      ; preds = %if.else2030
  store i32 -1, i32* %retval, align 4
  br label %return

if.end2036:                                       ; preds = %if.else2030
  br label %if.end2037

if.end2037:                                       ; preds = %if.end2036, %do.end2029
  br label %if.end2038

if.end2038:                                       ; preds = %if.end2037, %if.end1955
  br label %do.end2039

do.end2039:                                       ; preds = %if.end2038
  br label %do.body2040

do.body2040:                                      ; preds = %do.end2039
  %1010 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio2041 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1010, i32 0, i32 24
  %1011 = load %struct._PerlIO**, %struct._PerlIO*** %fio2041, align 8
  %tobool2042 = icmp ne %struct._PerlIO** %1011, null
  br i1 %tobool2042, label %if.else2106, label %if.then2043

if.then2043:                                      ; preds = %do.body2040
  br label %do.body2044

do.body2044:                                      ; preds = %if.then2043
  br label %do.body2045

do.body2045:                                      ; preds = %do.body2044
  %1012 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2046 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1012, i32 0, i32 22
  %aptr2047 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2046, i32 0, i32 2
  %1013 = load i8*, i8** %aptr2047, align 8
  %1014 = load i32, i32* %wlen, align 4
  %idx.ext2048 = sext i32 %1014 to i64
  %add.ptr2049 = getelementptr inbounds i8, i8* %1013, i64 %idx.ext2048
  %1015 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2050 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1015, i32 0, i32 22
  %aend2051 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2050, i32 0, i32 3
  %1016 = load i8*, i8** %aend2051, align 8
  %cmp2052 = icmp ugt i8* %add.ptr2049, %1016
  br i1 %cmp2052, label %if.then2054, label %if.end2096

if.then2054:                                      ; preds = %do.body2045
  br label %do.body2055

do.body2055:                                      ; preds = %if.then2054
  %1017 = load i32, i32* %wlen, align 4
  %conv2057 = sext i32 %1017 to i64
  %1018 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2058 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1018, i32 0, i32 22
  %asiz2059 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2058, i32 0, i32 1
  %1019 = load i64, i64* %asiz2059, align 8
  %add2060 = add i64 %conv2057, %1019
  %add2061 = add i64 %add2060, 8191
  %and2062 = and i64 %add2061, -8192
  %conv2063 = trunc i64 %and2062 to i32
  store i32 %conv2063, i32* %nsz2056, align 4
  %1020 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2065 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1020, i32 0, i32 22
  %aptr2066 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2065, i32 0, i32 2
  %1021 = load i8*, i8** %aptr2066, align 8
  %1022 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2067 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1022, i32 0, i32 22
  %arena2068 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2067, i32 0, i32 0
  %1023 = load i8*, i8** %arena2068, align 8
  %sub.ptr.lhs.cast2069 = ptrtoint i8* %1021 to i64
  %sub.ptr.rhs.cast2070 = ptrtoint i8* %1023 to i64
  %sub.ptr.sub2071 = sub i64 %sub.ptr.lhs.cast2069, %sub.ptr.rhs.cast2070
  %conv2072 = trunc i64 %sub.ptr.sub2071 to i32
  store i32 %conv2072, i32* %offset2064, align 4
  %1024 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2073 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1024, i32 0, i32 22
  %arena2074 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2073, i32 0, i32 0
  %1025 = load i8*, i8** %arena2074, align 8
  %1026 = load i32, i32* %nsz2056, align 4
  %conv2075 = sext i32 %1026 to i64
  %mul2076 = mul i64 %conv2075, 1
  %call2077 = call i8* @Perl_safesysrealloc(i8* %1025, i64 %mul2076)
  %1027 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2078 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1027, i32 0, i32 22
  %arena2079 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2078, i32 0, i32 0
  store i8* %call2077, i8** %arena2079, align 8
  %1028 = load i32, i32* %nsz2056, align 4
  %conv2080 = sext i32 %1028 to i64
  %1029 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2081 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1029, i32 0, i32 22
  %asiz2082 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2081, i32 0, i32 1
  store i64 %conv2080, i64* %asiz2082, align 8
  %1030 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2083 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1030, i32 0, i32 22
  %arena2084 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2083, i32 0, i32 0
  %1031 = load i8*, i8** %arena2084, align 8
  %1032 = load i32, i32* %offset2064, align 4
  %idx.ext2085 = sext i32 %1032 to i64
  %add.ptr2086 = getelementptr inbounds i8, i8* %1031, i64 %idx.ext2085
  %1033 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2087 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1033, i32 0, i32 22
  %aptr2088 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2087, i32 0, i32 2
  store i8* %add.ptr2086, i8** %aptr2088, align 8
  %1034 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2089 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1034, i32 0, i32 22
  %arena2090 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2089, i32 0, i32 0
  %1035 = load i8*, i8** %arena2090, align 8
  %1036 = load i32, i32* %nsz2056, align 4
  %idx.ext2091 = sext i32 %1036 to i64
  %add.ptr2092 = getelementptr inbounds i8, i8* %1035, i64 %idx.ext2091
  %1037 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2093 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1037, i32 0, i32 22
  %aend2094 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2093, i32 0, i32 3
  store i8* %add.ptr2092, i8** %aend2094, align 8
  br label %do.end2095

do.end2095:                                       ; preds = %do.body2055
  br label %if.end2096

if.end2096:                                       ; preds = %do.end2095, %do.body2045
  br label %do.end2097

do.end2097:                                       ; preds = %if.end2096
  %1038 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2098 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1038, i32 0, i32 22
  %aptr2099 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2098, i32 0, i32 2
  %1039 = load i8*, i8** %aptr2099, align 8
  %1040 = load i8*, i8** %pv, align 8
  %1041 = load i32, i32* %wlen, align 4
  %conv2100 = sext i32 %1041 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1039, i8* align 1 %1040, i64 %conv2100, i1 false)
  %1042 = load i32, i32* %wlen, align 4
  %1043 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2101 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1043, i32 0, i32 22
  %aptr2102 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2101, i32 0, i32 2
  %1044 = load i8*, i8** %aptr2102, align 8
  %idx.ext2103 = sext i32 %1042 to i64
  %add.ptr2104 = getelementptr inbounds i8, i8* %1044, i64 %idx.ext2103
  store i8* %add.ptr2104, i8** %aptr2102, align 8
  br label %do.end2105

do.end2105:                                       ; preds = %do.end2097
  br label %if.end2115

if.else2106:                                      ; preds = %do.body2040
  %1045 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio2107 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1045, i32 0, i32 24
  %1046 = load %struct._PerlIO**, %struct._PerlIO*** %fio2107, align 8
  %1047 = load i8*, i8** %pv, align 8
  %1048 = load i32, i32* %wlen, align 4
  %conv2108 = sext i32 %1048 to i64
  %call2109 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %1046, i8* %1047, i64 %conv2108)
  %1049 = load i32, i32* %wlen, align 4
  %conv2110 = sext i32 %1049 to i64
  %cmp2111 = icmp ne i64 %call2109, %conv2110
  br i1 %cmp2111, label %if.then2113, label %if.end2114

if.then2113:                                      ; preds = %if.else2106
  store i32 -1, i32* %retval, align 4
  br label %return

if.end2114:                                       ; preds = %if.else2106
  br label %if.end2115

if.end2115:                                       ; preds = %if.end2114, %do.end2105
  br label %do.end2116

do.end2116:                                       ; preds = %if.end2115
  br label %if.end2117

if.end2117:                                       ; preds = %do.end2116, %if.end1797
  br label %do.end2118

do.end2118:                                       ; preds = %if.end2117
  br label %if.end2668

if.else2119:                                      ; preds = %if.end1565
  br label %do.body2120

do.body2120:                                      ; preds = %if.else2119
  %1050 = load i32, i32* %wlen, align 4
  %cmp2121 = icmp sle i32 %1050, 255
  br i1 %cmp2121, label %if.then2123, label %if.else2347

if.then2123:                                      ; preds = %do.body2120
  %1051 = load i32, i32* %wlen, align 4
  %conv2125 = trunc i32 %1051 to i8
  store i8 %conv2125, i8* %clen2124, align 1
  br label %do.body2126

do.body2126:                                      ; preds = %if.then2123
  %1052 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio2127 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1052, i32 0, i32 24
  %1053 = load %struct._PerlIO**, %struct._PerlIO*** %fio2127, align 8
  %tobool2128 = icmp ne %struct._PerlIO** %1053, null
  br i1 %tobool2128, label %if.else2187, label %if.then2129

if.then2129:                                      ; preds = %do.body2126
  br label %do.body2130

do.body2130:                                      ; preds = %if.then2129
  %1054 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2131 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1054, i32 0, i32 22
  %aptr2132 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2131, i32 0, i32 2
  %1055 = load i8*, i8** %aptr2132, align 8
  %1056 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2133 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1056, i32 0, i32 22
  %aend2134 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2133, i32 0, i32 3
  %1057 = load i8*, i8** %aend2134, align 8
  %cmp2135 = icmp ult i8* %1055, %1057
  br i1 %cmp2135, label %if.then2137, label %if.else2141

if.then2137:                                      ; preds = %do.body2130
  %1058 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2138 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1058, i32 0, i32 22
  %aptr2139 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2138, i32 0, i32 2
  %1059 = load i8*, i8** %aptr2139, align 8
  %incdec.ptr2140 = getelementptr inbounds i8, i8* %1059, i32 1
  store i8* %incdec.ptr2140, i8** %aptr2139, align 8
  store i8 10, i8* %1059, align 1
  br label %if.end2185

if.else2141:                                      ; preds = %do.body2130
  br label %do.body2142

do.body2142:                                      ; preds = %if.else2141
  %1060 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2144 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1060, i32 0, i32 22
  %asiz2145 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2144, i32 0, i32 1
  %1061 = load i64, i64* %asiz2145, align 8
  %add2146 = add i64 1, %1061
  %add2147 = add i64 %add2146, 8191
  %and2148 = and i64 %add2147, -8192
  %conv2149 = trunc i64 %and2148 to i32
  store i32 %conv2149, i32* %nsz2143, align 4
  %1062 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2151 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1062, i32 0, i32 22
  %aptr2152 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2151, i32 0, i32 2
  %1063 = load i8*, i8** %aptr2152, align 8
  %1064 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2153 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1064, i32 0, i32 22
  %arena2154 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2153, i32 0, i32 0
  %1065 = load i8*, i8** %arena2154, align 8
  %sub.ptr.lhs.cast2155 = ptrtoint i8* %1063 to i64
  %sub.ptr.rhs.cast2156 = ptrtoint i8* %1065 to i64
  %sub.ptr.sub2157 = sub i64 %sub.ptr.lhs.cast2155, %sub.ptr.rhs.cast2156
  %conv2158 = trunc i64 %sub.ptr.sub2157 to i32
  store i32 %conv2158, i32* %offset2150, align 4
  %1066 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2159 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1066, i32 0, i32 22
  %arena2160 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2159, i32 0, i32 0
  %1067 = load i8*, i8** %arena2160, align 8
  %1068 = load i32, i32* %nsz2143, align 4
  %conv2161 = sext i32 %1068 to i64
  %mul2162 = mul i64 %conv2161, 1
  %call2163 = call i8* @Perl_safesysrealloc(i8* %1067, i64 %mul2162)
  %1069 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2164 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1069, i32 0, i32 22
  %arena2165 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2164, i32 0, i32 0
  store i8* %call2163, i8** %arena2165, align 8
  %1070 = load i32, i32* %nsz2143, align 4
  %conv2166 = sext i32 %1070 to i64
  %1071 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2167 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1071, i32 0, i32 22
  %asiz2168 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2167, i32 0, i32 1
  store i64 %conv2166, i64* %asiz2168, align 8
  %1072 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2169 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1072, i32 0, i32 22
  %arena2170 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2169, i32 0, i32 0
  %1073 = load i8*, i8** %arena2170, align 8
  %1074 = load i32, i32* %offset2150, align 4
  %idx.ext2171 = sext i32 %1074 to i64
  %add.ptr2172 = getelementptr inbounds i8, i8* %1073, i64 %idx.ext2171
  %1075 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2173 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1075, i32 0, i32 22
  %aptr2174 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2173, i32 0, i32 2
  store i8* %add.ptr2172, i8** %aptr2174, align 8
  %1076 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2175 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1076, i32 0, i32 22
  %arena2176 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2175, i32 0, i32 0
  %1077 = load i8*, i8** %arena2176, align 8
  %1078 = load i32, i32* %nsz2143, align 4
  %idx.ext2177 = sext i32 %1078 to i64
  %add.ptr2178 = getelementptr inbounds i8, i8* %1077, i64 %idx.ext2177
  %1079 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2179 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1079, i32 0, i32 22
  %aend2180 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2179, i32 0, i32 3
  store i8* %add.ptr2178, i8** %aend2180, align 8
  br label %do.end2181

do.end2181:                                       ; preds = %do.body2142
  %1080 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2182 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1080, i32 0, i32 22
  %aptr2183 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2182, i32 0, i32 2
  %1081 = load i8*, i8** %aptr2183, align 8
  %incdec.ptr2184 = getelementptr inbounds i8, i8* %1081, i32 1
  store i8* %incdec.ptr2184, i8** %aptr2183, align 8
  store i8 10, i8* %1081, align 1
  br label %if.end2185

if.end2185:                                       ; preds = %do.end2181, %if.then2137
  br label %do.end2186

do.end2186:                                       ; preds = %if.end2185
  br label %if.end2194

if.else2187:                                      ; preds = %do.body2126
  %1082 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio2188 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1082, i32 0, i32 24
  %1083 = load %struct._PerlIO**, %struct._PerlIO*** %fio2188, align 8
  %call2189 = call i32 @PerlIO_putc(%struct._PerlIO** %1083, i32 10)
  %cmp2190 = icmp eq i32 %call2189, -1
  br i1 %cmp2190, label %if.then2192, label %if.end2193

if.then2192:                                      ; preds = %if.else2187
  store i32 -1, i32* %retval, align 4
  br label %return

if.end2193:                                       ; preds = %if.else2187
  br label %if.end2194

if.end2194:                                       ; preds = %if.end2193, %do.end2186
  br label %do.end2195

do.end2195:                                       ; preds = %if.end2194
  br label %do.body2196

do.body2196:                                      ; preds = %do.end2195
  %1084 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio2197 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1084, i32 0, i32 24
  %1085 = load %struct._PerlIO**, %struct._PerlIO*** %fio2197, align 8
  %tobool2198 = icmp ne %struct._PerlIO** %1085, null
  br i1 %tobool2198, label %if.else2257, label %if.then2199

if.then2199:                                      ; preds = %do.body2196
  br label %do.body2200

do.body2200:                                      ; preds = %if.then2199
  %1086 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2201 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1086, i32 0, i32 22
  %aptr2202 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2201, i32 0, i32 2
  %1087 = load i8*, i8** %aptr2202, align 8
  %1088 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2203 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1088, i32 0, i32 22
  %aend2204 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2203, i32 0, i32 3
  %1089 = load i8*, i8** %aend2204, align 8
  %cmp2205 = icmp ult i8* %1087, %1089
  br i1 %cmp2205, label %if.then2207, label %if.else2211

if.then2207:                                      ; preds = %do.body2200
  %1090 = load i8, i8* %clen2124, align 1
  %1091 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2208 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1091, i32 0, i32 22
  %aptr2209 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2208, i32 0, i32 2
  %1092 = load i8*, i8** %aptr2209, align 8
  %incdec.ptr2210 = getelementptr inbounds i8, i8* %1092, i32 1
  store i8* %incdec.ptr2210, i8** %aptr2209, align 8
  store i8 %1090, i8* %1092, align 1
  br label %if.end2255

if.else2211:                                      ; preds = %do.body2200
  br label %do.body2212

do.body2212:                                      ; preds = %if.else2211
  %1093 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2214 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1093, i32 0, i32 22
  %asiz2215 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2214, i32 0, i32 1
  %1094 = load i64, i64* %asiz2215, align 8
  %add2216 = add i64 1, %1094
  %add2217 = add i64 %add2216, 8191
  %and2218 = and i64 %add2217, -8192
  %conv2219 = trunc i64 %and2218 to i32
  store i32 %conv2219, i32* %nsz2213, align 4
  %1095 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2221 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1095, i32 0, i32 22
  %aptr2222 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2221, i32 0, i32 2
  %1096 = load i8*, i8** %aptr2222, align 8
  %1097 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2223 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1097, i32 0, i32 22
  %arena2224 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2223, i32 0, i32 0
  %1098 = load i8*, i8** %arena2224, align 8
  %sub.ptr.lhs.cast2225 = ptrtoint i8* %1096 to i64
  %sub.ptr.rhs.cast2226 = ptrtoint i8* %1098 to i64
  %sub.ptr.sub2227 = sub i64 %sub.ptr.lhs.cast2225, %sub.ptr.rhs.cast2226
  %conv2228 = trunc i64 %sub.ptr.sub2227 to i32
  store i32 %conv2228, i32* %offset2220, align 4
  %1099 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2229 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1099, i32 0, i32 22
  %arena2230 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2229, i32 0, i32 0
  %1100 = load i8*, i8** %arena2230, align 8
  %1101 = load i32, i32* %nsz2213, align 4
  %conv2231 = sext i32 %1101 to i64
  %mul2232 = mul i64 %conv2231, 1
  %call2233 = call i8* @Perl_safesysrealloc(i8* %1100, i64 %mul2232)
  %1102 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2234 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1102, i32 0, i32 22
  %arena2235 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2234, i32 0, i32 0
  store i8* %call2233, i8** %arena2235, align 8
  %1103 = load i32, i32* %nsz2213, align 4
  %conv2236 = sext i32 %1103 to i64
  %1104 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2237 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1104, i32 0, i32 22
  %asiz2238 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2237, i32 0, i32 1
  store i64 %conv2236, i64* %asiz2238, align 8
  %1105 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2239 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1105, i32 0, i32 22
  %arena2240 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2239, i32 0, i32 0
  %1106 = load i8*, i8** %arena2240, align 8
  %1107 = load i32, i32* %offset2220, align 4
  %idx.ext2241 = sext i32 %1107 to i64
  %add.ptr2242 = getelementptr inbounds i8, i8* %1106, i64 %idx.ext2241
  %1108 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2243 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1108, i32 0, i32 22
  %aptr2244 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2243, i32 0, i32 2
  store i8* %add.ptr2242, i8** %aptr2244, align 8
  %1109 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2245 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1109, i32 0, i32 22
  %arena2246 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2245, i32 0, i32 0
  %1110 = load i8*, i8** %arena2246, align 8
  %1111 = load i32, i32* %nsz2213, align 4
  %idx.ext2247 = sext i32 %1111 to i64
  %add.ptr2248 = getelementptr inbounds i8, i8* %1110, i64 %idx.ext2247
  %1112 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2249 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1112, i32 0, i32 22
  %aend2250 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2249, i32 0, i32 3
  store i8* %add.ptr2248, i8** %aend2250, align 8
  br label %do.end2251

do.end2251:                                       ; preds = %do.body2212
  %1113 = load i8, i8* %clen2124, align 1
  %1114 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2252 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1114, i32 0, i32 22
  %aptr2253 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2252, i32 0, i32 2
  %1115 = load i8*, i8** %aptr2253, align 8
  %incdec.ptr2254 = getelementptr inbounds i8, i8* %1115, i32 1
  store i8* %incdec.ptr2254, i8** %aptr2253, align 8
  store i8 %1113, i8* %1115, align 1
  br label %if.end2255

if.end2255:                                       ; preds = %do.end2251, %if.then2207
  br label %do.end2256

do.end2256:                                       ; preds = %if.end2255
  br label %if.end2265

if.else2257:                                      ; preds = %do.body2196
  %1116 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio2258 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1116, i32 0, i32 24
  %1117 = load %struct._PerlIO**, %struct._PerlIO*** %fio2258, align 8
  %1118 = load i8, i8* %clen2124, align 1
  %conv2259 = zext i8 %1118 to i32
  %call2260 = call i32 @PerlIO_putc(%struct._PerlIO** %1117, i32 %conv2259)
  %cmp2261 = icmp eq i32 %call2260, -1
  br i1 %cmp2261, label %if.then2263, label %if.end2264

if.then2263:                                      ; preds = %if.else2257
  store i32 -1, i32* %retval, align 4
  br label %return

if.end2264:                                       ; preds = %if.else2257
  br label %if.end2265

if.end2265:                                       ; preds = %if.end2264, %do.end2256
  br label %do.end2266

do.end2266:                                       ; preds = %if.end2265
  %1119 = load i32, i32* %wlen, align 4
  %tobool2267 = icmp ne i32 %1119, 0
  br i1 %tobool2267, label %if.then2268, label %if.end2346

if.then2268:                                      ; preds = %do.end2266
  br label %do.body2269

do.body2269:                                      ; preds = %if.then2268
  %1120 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio2270 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1120, i32 0, i32 24
  %1121 = load %struct._PerlIO**, %struct._PerlIO*** %fio2270, align 8
  %tobool2271 = icmp ne %struct._PerlIO** %1121, null
  br i1 %tobool2271, label %if.else2335, label %if.then2272

if.then2272:                                      ; preds = %do.body2269
  br label %do.body2273

do.body2273:                                      ; preds = %if.then2272
  br label %do.body2274

do.body2274:                                      ; preds = %do.body2273
  %1122 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2275 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1122, i32 0, i32 22
  %aptr2276 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2275, i32 0, i32 2
  %1123 = load i8*, i8** %aptr2276, align 8
  %1124 = load i32, i32* %wlen, align 4
  %idx.ext2277 = sext i32 %1124 to i64
  %add.ptr2278 = getelementptr inbounds i8, i8* %1123, i64 %idx.ext2277
  %1125 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2279 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1125, i32 0, i32 22
  %aend2280 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2279, i32 0, i32 3
  %1126 = load i8*, i8** %aend2280, align 8
  %cmp2281 = icmp ugt i8* %add.ptr2278, %1126
  br i1 %cmp2281, label %if.then2283, label %if.end2325

if.then2283:                                      ; preds = %do.body2274
  br label %do.body2284

do.body2284:                                      ; preds = %if.then2283
  %1127 = load i32, i32* %wlen, align 4
  %conv2286 = sext i32 %1127 to i64
  %1128 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2287 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1128, i32 0, i32 22
  %asiz2288 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2287, i32 0, i32 1
  %1129 = load i64, i64* %asiz2288, align 8
  %add2289 = add i64 %conv2286, %1129
  %add2290 = add i64 %add2289, 8191
  %and2291 = and i64 %add2290, -8192
  %conv2292 = trunc i64 %and2291 to i32
  store i32 %conv2292, i32* %nsz2285, align 4
  %1130 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2294 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1130, i32 0, i32 22
  %aptr2295 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2294, i32 0, i32 2
  %1131 = load i8*, i8** %aptr2295, align 8
  %1132 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2296 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1132, i32 0, i32 22
  %arena2297 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2296, i32 0, i32 0
  %1133 = load i8*, i8** %arena2297, align 8
  %sub.ptr.lhs.cast2298 = ptrtoint i8* %1131 to i64
  %sub.ptr.rhs.cast2299 = ptrtoint i8* %1133 to i64
  %sub.ptr.sub2300 = sub i64 %sub.ptr.lhs.cast2298, %sub.ptr.rhs.cast2299
  %conv2301 = trunc i64 %sub.ptr.sub2300 to i32
  store i32 %conv2301, i32* %offset2293, align 4
  %1134 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2302 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1134, i32 0, i32 22
  %arena2303 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2302, i32 0, i32 0
  %1135 = load i8*, i8** %arena2303, align 8
  %1136 = load i32, i32* %nsz2285, align 4
  %conv2304 = sext i32 %1136 to i64
  %mul2305 = mul i64 %conv2304, 1
  %call2306 = call i8* @Perl_safesysrealloc(i8* %1135, i64 %mul2305)
  %1137 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2307 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1137, i32 0, i32 22
  %arena2308 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2307, i32 0, i32 0
  store i8* %call2306, i8** %arena2308, align 8
  %1138 = load i32, i32* %nsz2285, align 4
  %conv2309 = sext i32 %1138 to i64
  %1139 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2310 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1139, i32 0, i32 22
  %asiz2311 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2310, i32 0, i32 1
  store i64 %conv2309, i64* %asiz2311, align 8
  %1140 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2312 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1140, i32 0, i32 22
  %arena2313 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2312, i32 0, i32 0
  %1141 = load i8*, i8** %arena2313, align 8
  %1142 = load i32, i32* %offset2293, align 4
  %idx.ext2314 = sext i32 %1142 to i64
  %add.ptr2315 = getelementptr inbounds i8, i8* %1141, i64 %idx.ext2314
  %1143 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2316 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1143, i32 0, i32 22
  %aptr2317 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2316, i32 0, i32 2
  store i8* %add.ptr2315, i8** %aptr2317, align 8
  %1144 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2318 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1144, i32 0, i32 22
  %arena2319 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2318, i32 0, i32 0
  %1145 = load i8*, i8** %arena2319, align 8
  %1146 = load i32, i32* %nsz2285, align 4
  %idx.ext2320 = sext i32 %1146 to i64
  %add.ptr2321 = getelementptr inbounds i8, i8* %1145, i64 %idx.ext2320
  %1147 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2322 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1147, i32 0, i32 22
  %aend2323 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2322, i32 0, i32 3
  store i8* %add.ptr2321, i8** %aend2323, align 8
  br label %do.end2324

do.end2324:                                       ; preds = %do.body2284
  br label %if.end2325

if.end2325:                                       ; preds = %do.end2324, %do.body2274
  br label %do.end2326

do.end2326:                                       ; preds = %if.end2325
  %1148 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2327 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1148, i32 0, i32 22
  %aptr2328 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2327, i32 0, i32 2
  %1149 = load i8*, i8** %aptr2328, align 8
  %1150 = load i8*, i8** %pv, align 8
  %1151 = load i32, i32* %wlen, align 4
  %conv2329 = sext i32 %1151 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1149, i8* align 1 %1150, i64 %conv2329, i1 false)
  %1152 = load i32, i32* %wlen, align 4
  %1153 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2330 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1153, i32 0, i32 22
  %aptr2331 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2330, i32 0, i32 2
  %1154 = load i8*, i8** %aptr2331, align 8
  %idx.ext2332 = sext i32 %1152 to i64
  %add.ptr2333 = getelementptr inbounds i8, i8* %1154, i64 %idx.ext2332
  store i8* %add.ptr2333, i8** %aptr2331, align 8
  br label %do.end2334

do.end2334:                                       ; preds = %do.end2326
  br label %if.end2344

if.else2335:                                      ; preds = %do.body2269
  %1155 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio2336 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1155, i32 0, i32 24
  %1156 = load %struct._PerlIO**, %struct._PerlIO*** %fio2336, align 8
  %1157 = load i8*, i8** %pv, align 8
  %1158 = load i32, i32* %wlen, align 4
  %conv2337 = sext i32 %1158 to i64
  %call2338 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %1156, i8* %1157, i64 %conv2337)
  %1159 = load i32, i32* %wlen, align 4
  %conv2339 = sext i32 %1159 to i64
  %cmp2340 = icmp ne i64 %call2338, %conv2339
  br i1 %cmp2340, label %if.then2342, label %if.end2343

if.then2342:                                      ; preds = %if.else2335
  store i32 -1, i32* %retval, align 4
  br label %return

if.end2343:                                       ; preds = %if.else2335
  br label %if.end2344

if.end2344:                                       ; preds = %if.end2343, %do.end2334
  br label %do.end2345

do.end2345:                                       ; preds = %if.end2344
  br label %if.end2346

if.end2346:                                       ; preds = %do.end2345, %do.end2266
  br label %if.end2666

if.else2347:                                      ; preds = %do.body2120
  br label %do.body2348

do.body2348:                                      ; preds = %if.else2347
  %1160 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio2349 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1160, i32 0, i32 24
  %1161 = load %struct._PerlIO**, %struct._PerlIO*** %fio2349, align 8
  %tobool2350 = icmp ne %struct._PerlIO** %1161, null
  br i1 %tobool2350, label %if.else2409, label %if.then2351

if.then2351:                                      ; preds = %do.body2348
  br label %do.body2352

do.body2352:                                      ; preds = %if.then2351
  %1162 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2353 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1162, i32 0, i32 22
  %aptr2354 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2353, i32 0, i32 2
  %1163 = load i8*, i8** %aptr2354, align 8
  %1164 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2355 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1164, i32 0, i32 22
  %aend2356 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2355, i32 0, i32 3
  %1165 = load i8*, i8** %aend2356, align 8
  %cmp2357 = icmp ult i8* %1163, %1165
  br i1 %cmp2357, label %if.then2359, label %if.else2363

if.then2359:                                      ; preds = %do.body2352
  %1166 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2360 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1166, i32 0, i32 22
  %aptr2361 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2360, i32 0, i32 2
  %1167 = load i8*, i8** %aptr2361, align 8
  %incdec.ptr2362 = getelementptr inbounds i8, i8* %1167, i32 1
  store i8* %incdec.ptr2362, i8** %aptr2361, align 8
  store i8 1, i8* %1167, align 1
  br label %if.end2407

if.else2363:                                      ; preds = %do.body2352
  br label %do.body2364

do.body2364:                                      ; preds = %if.else2363
  %1168 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2366 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1168, i32 0, i32 22
  %asiz2367 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2366, i32 0, i32 1
  %1169 = load i64, i64* %asiz2367, align 8
  %add2368 = add i64 1, %1169
  %add2369 = add i64 %add2368, 8191
  %and2370 = and i64 %add2369, -8192
  %conv2371 = trunc i64 %and2370 to i32
  store i32 %conv2371, i32* %nsz2365, align 4
  %1170 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2373 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1170, i32 0, i32 22
  %aptr2374 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2373, i32 0, i32 2
  %1171 = load i8*, i8** %aptr2374, align 8
  %1172 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2375 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1172, i32 0, i32 22
  %arena2376 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2375, i32 0, i32 0
  %1173 = load i8*, i8** %arena2376, align 8
  %sub.ptr.lhs.cast2377 = ptrtoint i8* %1171 to i64
  %sub.ptr.rhs.cast2378 = ptrtoint i8* %1173 to i64
  %sub.ptr.sub2379 = sub i64 %sub.ptr.lhs.cast2377, %sub.ptr.rhs.cast2378
  %conv2380 = trunc i64 %sub.ptr.sub2379 to i32
  store i32 %conv2380, i32* %offset2372, align 4
  %1174 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2381 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1174, i32 0, i32 22
  %arena2382 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2381, i32 0, i32 0
  %1175 = load i8*, i8** %arena2382, align 8
  %1176 = load i32, i32* %nsz2365, align 4
  %conv2383 = sext i32 %1176 to i64
  %mul2384 = mul i64 %conv2383, 1
  %call2385 = call i8* @Perl_safesysrealloc(i8* %1175, i64 %mul2384)
  %1177 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2386 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1177, i32 0, i32 22
  %arena2387 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2386, i32 0, i32 0
  store i8* %call2385, i8** %arena2387, align 8
  %1178 = load i32, i32* %nsz2365, align 4
  %conv2388 = sext i32 %1178 to i64
  %1179 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2389 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1179, i32 0, i32 22
  %asiz2390 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2389, i32 0, i32 1
  store i64 %conv2388, i64* %asiz2390, align 8
  %1180 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2391 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1180, i32 0, i32 22
  %arena2392 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2391, i32 0, i32 0
  %1181 = load i8*, i8** %arena2392, align 8
  %1182 = load i32, i32* %offset2372, align 4
  %idx.ext2393 = sext i32 %1182 to i64
  %add.ptr2394 = getelementptr inbounds i8, i8* %1181, i64 %idx.ext2393
  %1183 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2395 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1183, i32 0, i32 22
  %aptr2396 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2395, i32 0, i32 2
  store i8* %add.ptr2394, i8** %aptr2396, align 8
  %1184 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2397 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1184, i32 0, i32 22
  %arena2398 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2397, i32 0, i32 0
  %1185 = load i8*, i8** %arena2398, align 8
  %1186 = load i32, i32* %nsz2365, align 4
  %idx.ext2399 = sext i32 %1186 to i64
  %add.ptr2400 = getelementptr inbounds i8, i8* %1185, i64 %idx.ext2399
  %1187 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2401 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1187, i32 0, i32 22
  %aend2402 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2401, i32 0, i32 3
  store i8* %add.ptr2400, i8** %aend2402, align 8
  br label %do.end2403

do.end2403:                                       ; preds = %do.body2364
  %1188 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2404 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1188, i32 0, i32 22
  %aptr2405 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2404, i32 0, i32 2
  %1189 = load i8*, i8** %aptr2405, align 8
  %incdec.ptr2406 = getelementptr inbounds i8, i8* %1189, i32 1
  store i8* %incdec.ptr2406, i8** %aptr2405, align 8
  store i8 1, i8* %1189, align 1
  br label %if.end2407

if.end2407:                                       ; preds = %do.end2403, %if.then2359
  br label %do.end2408

do.end2408:                                       ; preds = %if.end2407
  br label %if.end2416

if.else2409:                                      ; preds = %do.body2348
  %1190 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio2410 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1190, i32 0, i32 24
  %1191 = load %struct._PerlIO**, %struct._PerlIO*** %fio2410, align 8
  %call2411 = call i32 @PerlIO_putc(%struct._PerlIO** %1191, i32 1)
  %cmp2412 = icmp eq i32 %call2411, -1
  br i1 %cmp2412, label %if.then2414, label %if.end2415

if.then2414:                                      ; preds = %if.else2409
  store i32 -1, i32* %retval, align 4
  br label %return

if.end2415:                                       ; preds = %if.else2409
  br label %if.end2416

if.end2416:                                       ; preds = %if.end2415, %do.end2408
  br label %do.end2417

do.end2417:                                       ; preds = %if.end2416
  br label %do.body2418

do.body2418:                                      ; preds = %do.end2417
  %1192 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder2419 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1192, i32 0, i32 12
  %1193 = load i32, i32* %netorder2419, align 8
  %tobool2420 = icmp ne i32 %1193, 0
  br i1 %tobool2420, label %if.then2421, label %if.else2505

if.then2421:                                      ; preds = %do.body2418
  %1194 = load i32, i32* %wlen, align 4
  %call2423 = call i32 @my_swap32(i32 %1194)
  store i32 %call2423, i32* %y2422, align 4
  %1195 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio2424 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1195, i32 0, i32 24
  %1196 = load %struct._PerlIO**, %struct._PerlIO*** %fio2424, align 8
  %tobool2425 = icmp ne %struct._PerlIO** %1196, null
  br i1 %tobool2425, label %if.else2497, label %if.then2426

if.then2426:                                      ; preds = %if.then2421
  br label %do.body2427

do.body2427:                                      ; preds = %if.then2426
  br label %do.body2428

do.body2428:                                      ; preds = %do.body2427
  %1197 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2429 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1197, i32 0, i32 22
  %aptr2430 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2429, i32 0, i32 2
  %1198 = load i8*, i8** %aptr2430, align 8
  %add.ptr2431 = getelementptr inbounds i8, i8* %1198, i64 4
  %1199 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2432 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1199, i32 0, i32 22
  %aend2433 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2432, i32 0, i32 3
  %1200 = load i8*, i8** %aend2433, align 8
  %cmp2434 = icmp ugt i8* %add.ptr2431, %1200
  br i1 %cmp2434, label %if.then2436, label %if.end2477

if.then2436:                                      ; preds = %do.body2428
  br label %do.body2437

do.body2437:                                      ; preds = %if.then2436
  %1201 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2439 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1201, i32 0, i32 22
  %asiz2440 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2439, i32 0, i32 1
  %1202 = load i64, i64* %asiz2440, align 8
  %add2441 = add i64 4, %1202
  %add2442 = add i64 %add2441, 8191
  %and2443 = and i64 %add2442, -8192
  %conv2444 = trunc i64 %and2443 to i32
  store i32 %conv2444, i32* %nsz2438, align 4
  %1203 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2446 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1203, i32 0, i32 22
  %aptr2447 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2446, i32 0, i32 2
  %1204 = load i8*, i8** %aptr2447, align 8
  %1205 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2448 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1205, i32 0, i32 22
  %arena2449 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2448, i32 0, i32 0
  %1206 = load i8*, i8** %arena2449, align 8
  %sub.ptr.lhs.cast2450 = ptrtoint i8* %1204 to i64
  %sub.ptr.rhs.cast2451 = ptrtoint i8* %1206 to i64
  %sub.ptr.sub2452 = sub i64 %sub.ptr.lhs.cast2450, %sub.ptr.rhs.cast2451
  %conv2453 = trunc i64 %sub.ptr.sub2452 to i32
  store i32 %conv2453, i32* %offset2445, align 4
  %1207 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2454 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1207, i32 0, i32 22
  %arena2455 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2454, i32 0, i32 0
  %1208 = load i8*, i8** %arena2455, align 8
  %1209 = load i32, i32* %nsz2438, align 4
  %conv2456 = sext i32 %1209 to i64
  %mul2457 = mul i64 %conv2456, 1
  %call2458 = call i8* @Perl_safesysrealloc(i8* %1208, i64 %mul2457)
  %1210 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2459 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1210, i32 0, i32 22
  %arena2460 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2459, i32 0, i32 0
  store i8* %call2458, i8** %arena2460, align 8
  %1211 = load i32, i32* %nsz2438, align 4
  %conv2461 = sext i32 %1211 to i64
  %1212 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2462 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1212, i32 0, i32 22
  %asiz2463 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2462, i32 0, i32 1
  store i64 %conv2461, i64* %asiz2463, align 8
  %1213 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2464 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1213, i32 0, i32 22
  %arena2465 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2464, i32 0, i32 0
  %1214 = load i8*, i8** %arena2465, align 8
  %1215 = load i32, i32* %offset2445, align 4
  %idx.ext2466 = sext i32 %1215 to i64
  %add.ptr2467 = getelementptr inbounds i8, i8* %1214, i64 %idx.ext2466
  %1216 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2468 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1216, i32 0, i32 22
  %aptr2469 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2468, i32 0, i32 2
  store i8* %add.ptr2467, i8** %aptr2469, align 8
  %1217 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2470 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1217, i32 0, i32 22
  %arena2471 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2470, i32 0, i32 0
  %1218 = load i8*, i8** %arena2471, align 8
  %1219 = load i32, i32* %nsz2438, align 4
  %idx.ext2472 = sext i32 %1219 to i64
  %add.ptr2473 = getelementptr inbounds i8, i8* %1218, i64 %idx.ext2472
  %1220 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2474 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1220, i32 0, i32 22
  %aend2475 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2474, i32 0, i32 3
  store i8* %add.ptr2473, i8** %aend2475, align 8
  br label %do.end2476

do.end2476:                                       ; preds = %do.body2437
  br label %if.end2477

if.end2477:                                       ; preds = %do.end2476, %do.body2428
  br label %do.end2478

do.end2478:                                       ; preds = %if.end2477
  %1221 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2479 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1221, i32 0, i32 22
  %aptr2480 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2479, i32 0, i32 2
  %1222 = load i8*, i8** %aptr2480, align 8
  %1223 = ptrtoint i8* %1222 to i64
  %1224 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2481 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1224, i32 0, i32 22
  %aptr2482 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2481, i32 0, i32 2
  %1225 = load i8*, i8** %aptr2482, align 8
  %1226 = ptrtoint i8* %1225 to i64
  %and2483 = and i64 %1226, -4
  %cmp2484 = icmp eq i64 %1223, %and2483
  br i1 %cmp2484, label %if.then2486, label %if.else2489

if.then2486:                                      ; preds = %do.end2478
  %1227 = load i32, i32* %y2422, align 4
  %1228 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2487 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1228, i32 0, i32 22
  %aptr2488 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2487, i32 0, i32 2
  %1229 = load i8*, i8** %aptr2488, align 8
  %1230 = bitcast i8* %1229 to i32*
  store i32 %1227, i32* %1230, align 4
  br label %if.end2492

if.else2489:                                      ; preds = %do.end2478
  %1231 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2490 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1231, i32 0, i32 22
  %aptr2491 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2490, i32 0, i32 2
  %1232 = load i8*, i8** %aptr2491, align 8
  %1233 = bitcast i32* %y2422 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1232, i8* align 4 %1233, i64 4, i1 false)
  br label %if.end2492

if.end2492:                                       ; preds = %if.else2489, %if.then2486
  %1234 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2493 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1234, i32 0, i32 22
  %aptr2494 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2493, i32 0, i32 2
  %1235 = load i8*, i8** %aptr2494, align 8
  %add.ptr2495 = getelementptr inbounds i8, i8* %1235, i64 4
  store i8* %add.ptr2495, i8** %aptr2494, align 8
  br label %do.end2496

do.end2496:                                       ; preds = %if.end2492
  br label %if.end2504

if.else2497:                                      ; preds = %if.then2421
  %1236 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio2498 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1236, i32 0, i32 24
  %1237 = load %struct._PerlIO**, %struct._PerlIO*** %fio2498, align 8
  %1238 = bitcast i32* %y2422 to i8*
  %call2499 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %1237, i8* %1238, i64 4)
  %cmp2500 = icmp ne i64 %call2499, 4
  br i1 %cmp2500, label %if.then2502, label %if.end2503

if.then2502:                                      ; preds = %if.else2497
  store i32 -1, i32* %retval, align 4
  br label %return

if.end2503:                                       ; preds = %if.else2497
  br label %if.end2504

if.end2504:                                       ; preds = %if.end2503, %do.end2496
  br label %if.end2587

if.else2505:                                      ; preds = %do.body2418
  %1239 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio2506 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1239, i32 0, i32 24
  %1240 = load %struct._PerlIO**, %struct._PerlIO*** %fio2506, align 8
  %tobool2507 = icmp ne %struct._PerlIO** %1240, null
  br i1 %tobool2507, label %if.else2579, label %if.then2508

if.then2508:                                      ; preds = %if.else2505
  br label %do.body2509

do.body2509:                                      ; preds = %if.then2508
  br label %do.body2510

do.body2510:                                      ; preds = %do.body2509
  %1241 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2511 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1241, i32 0, i32 22
  %aptr2512 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2511, i32 0, i32 2
  %1242 = load i8*, i8** %aptr2512, align 8
  %add.ptr2513 = getelementptr inbounds i8, i8* %1242, i64 4
  %1243 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2514 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1243, i32 0, i32 22
  %aend2515 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2514, i32 0, i32 3
  %1244 = load i8*, i8** %aend2515, align 8
  %cmp2516 = icmp ugt i8* %add.ptr2513, %1244
  br i1 %cmp2516, label %if.then2518, label %if.end2559

if.then2518:                                      ; preds = %do.body2510
  br label %do.body2519

do.body2519:                                      ; preds = %if.then2518
  %1245 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2521 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1245, i32 0, i32 22
  %asiz2522 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2521, i32 0, i32 1
  %1246 = load i64, i64* %asiz2522, align 8
  %add2523 = add i64 4, %1246
  %add2524 = add i64 %add2523, 8191
  %and2525 = and i64 %add2524, -8192
  %conv2526 = trunc i64 %and2525 to i32
  store i32 %conv2526, i32* %nsz2520, align 4
  %1247 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2528 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1247, i32 0, i32 22
  %aptr2529 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2528, i32 0, i32 2
  %1248 = load i8*, i8** %aptr2529, align 8
  %1249 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2530 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1249, i32 0, i32 22
  %arena2531 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2530, i32 0, i32 0
  %1250 = load i8*, i8** %arena2531, align 8
  %sub.ptr.lhs.cast2532 = ptrtoint i8* %1248 to i64
  %sub.ptr.rhs.cast2533 = ptrtoint i8* %1250 to i64
  %sub.ptr.sub2534 = sub i64 %sub.ptr.lhs.cast2532, %sub.ptr.rhs.cast2533
  %conv2535 = trunc i64 %sub.ptr.sub2534 to i32
  store i32 %conv2535, i32* %offset2527, align 4
  %1251 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2536 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1251, i32 0, i32 22
  %arena2537 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2536, i32 0, i32 0
  %1252 = load i8*, i8** %arena2537, align 8
  %1253 = load i32, i32* %nsz2520, align 4
  %conv2538 = sext i32 %1253 to i64
  %mul2539 = mul i64 %conv2538, 1
  %call2540 = call i8* @Perl_safesysrealloc(i8* %1252, i64 %mul2539)
  %1254 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2541 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1254, i32 0, i32 22
  %arena2542 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2541, i32 0, i32 0
  store i8* %call2540, i8** %arena2542, align 8
  %1255 = load i32, i32* %nsz2520, align 4
  %conv2543 = sext i32 %1255 to i64
  %1256 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2544 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1256, i32 0, i32 22
  %asiz2545 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2544, i32 0, i32 1
  store i64 %conv2543, i64* %asiz2545, align 8
  %1257 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2546 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1257, i32 0, i32 22
  %arena2547 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2546, i32 0, i32 0
  %1258 = load i8*, i8** %arena2547, align 8
  %1259 = load i32, i32* %offset2527, align 4
  %idx.ext2548 = sext i32 %1259 to i64
  %add.ptr2549 = getelementptr inbounds i8, i8* %1258, i64 %idx.ext2548
  %1260 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2550 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1260, i32 0, i32 22
  %aptr2551 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2550, i32 0, i32 2
  store i8* %add.ptr2549, i8** %aptr2551, align 8
  %1261 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2552 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1261, i32 0, i32 22
  %arena2553 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2552, i32 0, i32 0
  %1262 = load i8*, i8** %arena2553, align 8
  %1263 = load i32, i32* %nsz2520, align 4
  %idx.ext2554 = sext i32 %1263 to i64
  %add.ptr2555 = getelementptr inbounds i8, i8* %1262, i64 %idx.ext2554
  %1264 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2556 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1264, i32 0, i32 22
  %aend2557 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2556, i32 0, i32 3
  store i8* %add.ptr2555, i8** %aend2557, align 8
  br label %do.end2558

do.end2558:                                       ; preds = %do.body2519
  br label %if.end2559

if.end2559:                                       ; preds = %do.end2558, %do.body2510
  br label %do.end2560

do.end2560:                                       ; preds = %if.end2559
  %1265 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2561 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1265, i32 0, i32 22
  %aptr2562 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2561, i32 0, i32 2
  %1266 = load i8*, i8** %aptr2562, align 8
  %1267 = ptrtoint i8* %1266 to i64
  %1268 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2563 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1268, i32 0, i32 22
  %aptr2564 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2563, i32 0, i32 2
  %1269 = load i8*, i8** %aptr2564, align 8
  %1270 = ptrtoint i8* %1269 to i64
  %and2565 = and i64 %1270, -4
  %cmp2566 = icmp eq i64 %1267, %and2565
  br i1 %cmp2566, label %if.then2568, label %if.else2571

if.then2568:                                      ; preds = %do.end2560
  %1271 = load i32, i32* %wlen, align 4
  %1272 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2569 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1272, i32 0, i32 22
  %aptr2570 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2569, i32 0, i32 2
  %1273 = load i8*, i8** %aptr2570, align 8
  %1274 = bitcast i8* %1273 to i32*
  store i32 %1271, i32* %1274, align 4
  br label %if.end2574

if.else2571:                                      ; preds = %do.end2560
  %1275 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2572 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1275, i32 0, i32 22
  %aptr2573 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2572, i32 0, i32 2
  %1276 = load i8*, i8** %aptr2573, align 8
  %1277 = bitcast i32* %wlen to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1276, i8* align 4 %1277, i64 4, i1 false)
  br label %if.end2574

if.end2574:                                       ; preds = %if.else2571, %if.then2568
  %1278 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2575 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1278, i32 0, i32 22
  %aptr2576 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2575, i32 0, i32 2
  %1279 = load i8*, i8** %aptr2576, align 8
  %add.ptr2577 = getelementptr inbounds i8, i8* %1279, i64 4
  store i8* %add.ptr2577, i8** %aptr2576, align 8
  br label %do.end2578

do.end2578:                                       ; preds = %if.end2574
  br label %if.end2586

if.else2579:                                      ; preds = %if.else2505
  %1280 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio2580 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1280, i32 0, i32 24
  %1281 = load %struct._PerlIO**, %struct._PerlIO*** %fio2580, align 8
  %1282 = bitcast i32* %wlen to i8*
  %call2581 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %1281, i8* %1282, i64 4)
  %cmp2582 = icmp ne i64 %call2581, 4
  br i1 %cmp2582, label %if.then2584, label %if.end2585

if.then2584:                                      ; preds = %if.else2579
  store i32 -1, i32* %retval, align 4
  br label %return

if.end2585:                                       ; preds = %if.else2579
  br label %if.end2586

if.end2586:                                       ; preds = %if.end2585, %do.end2578
  br label %if.end2587

if.end2587:                                       ; preds = %if.end2586, %if.end2504
  br label %do.end2588

do.end2588:                                       ; preds = %if.end2587
  br label %do.body2589

do.body2589:                                      ; preds = %do.end2588
  %1283 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio2590 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1283, i32 0, i32 24
  %1284 = load %struct._PerlIO**, %struct._PerlIO*** %fio2590, align 8
  %tobool2591 = icmp ne %struct._PerlIO** %1284, null
  br i1 %tobool2591, label %if.else2655, label %if.then2592

if.then2592:                                      ; preds = %do.body2589
  br label %do.body2593

do.body2593:                                      ; preds = %if.then2592
  br label %do.body2594

do.body2594:                                      ; preds = %do.body2593
  %1285 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2595 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1285, i32 0, i32 22
  %aptr2596 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2595, i32 0, i32 2
  %1286 = load i8*, i8** %aptr2596, align 8
  %1287 = load i32, i32* %wlen, align 4
  %idx.ext2597 = sext i32 %1287 to i64
  %add.ptr2598 = getelementptr inbounds i8, i8* %1286, i64 %idx.ext2597
  %1288 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2599 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1288, i32 0, i32 22
  %aend2600 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2599, i32 0, i32 3
  %1289 = load i8*, i8** %aend2600, align 8
  %cmp2601 = icmp ugt i8* %add.ptr2598, %1289
  br i1 %cmp2601, label %if.then2603, label %if.end2645

if.then2603:                                      ; preds = %do.body2594
  br label %do.body2604

do.body2604:                                      ; preds = %if.then2603
  %1290 = load i32, i32* %wlen, align 4
  %conv2606 = sext i32 %1290 to i64
  %1291 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2607 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1291, i32 0, i32 22
  %asiz2608 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2607, i32 0, i32 1
  %1292 = load i64, i64* %asiz2608, align 8
  %add2609 = add i64 %conv2606, %1292
  %add2610 = add i64 %add2609, 8191
  %and2611 = and i64 %add2610, -8192
  %conv2612 = trunc i64 %and2611 to i32
  store i32 %conv2612, i32* %nsz2605, align 4
  %1293 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2614 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1293, i32 0, i32 22
  %aptr2615 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2614, i32 0, i32 2
  %1294 = load i8*, i8** %aptr2615, align 8
  %1295 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2616 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1295, i32 0, i32 22
  %arena2617 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2616, i32 0, i32 0
  %1296 = load i8*, i8** %arena2617, align 8
  %sub.ptr.lhs.cast2618 = ptrtoint i8* %1294 to i64
  %sub.ptr.rhs.cast2619 = ptrtoint i8* %1296 to i64
  %sub.ptr.sub2620 = sub i64 %sub.ptr.lhs.cast2618, %sub.ptr.rhs.cast2619
  %conv2621 = trunc i64 %sub.ptr.sub2620 to i32
  store i32 %conv2621, i32* %offset2613, align 4
  %1297 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2622 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1297, i32 0, i32 22
  %arena2623 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2622, i32 0, i32 0
  %1298 = load i8*, i8** %arena2623, align 8
  %1299 = load i32, i32* %nsz2605, align 4
  %conv2624 = sext i32 %1299 to i64
  %mul2625 = mul i64 %conv2624, 1
  %call2626 = call i8* @Perl_safesysrealloc(i8* %1298, i64 %mul2625)
  %1300 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2627 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1300, i32 0, i32 22
  %arena2628 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2627, i32 0, i32 0
  store i8* %call2626, i8** %arena2628, align 8
  %1301 = load i32, i32* %nsz2605, align 4
  %conv2629 = sext i32 %1301 to i64
  %1302 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2630 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1302, i32 0, i32 22
  %asiz2631 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2630, i32 0, i32 1
  store i64 %conv2629, i64* %asiz2631, align 8
  %1303 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2632 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1303, i32 0, i32 22
  %arena2633 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2632, i32 0, i32 0
  %1304 = load i8*, i8** %arena2633, align 8
  %1305 = load i32, i32* %offset2613, align 4
  %idx.ext2634 = sext i32 %1305 to i64
  %add.ptr2635 = getelementptr inbounds i8, i8* %1304, i64 %idx.ext2634
  %1306 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2636 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1306, i32 0, i32 22
  %aptr2637 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2636, i32 0, i32 2
  store i8* %add.ptr2635, i8** %aptr2637, align 8
  %1307 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2638 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1307, i32 0, i32 22
  %arena2639 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2638, i32 0, i32 0
  %1308 = load i8*, i8** %arena2639, align 8
  %1309 = load i32, i32* %nsz2605, align 4
  %idx.ext2640 = sext i32 %1309 to i64
  %add.ptr2641 = getelementptr inbounds i8, i8* %1308, i64 %idx.ext2640
  %1310 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2642 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1310, i32 0, i32 22
  %aend2643 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2642, i32 0, i32 3
  store i8* %add.ptr2641, i8** %aend2643, align 8
  br label %do.end2644

do.end2644:                                       ; preds = %do.body2604
  br label %if.end2645

if.end2645:                                       ; preds = %do.end2644, %do.body2594
  br label %do.end2646

do.end2646:                                       ; preds = %if.end2645
  %1311 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2647 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1311, i32 0, i32 22
  %aptr2648 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2647, i32 0, i32 2
  %1312 = load i8*, i8** %aptr2648, align 8
  %1313 = load i8*, i8** %pv, align 8
  %1314 = load i32, i32* %wlen, align 4
  %conv2649 = sext i32 %1314 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1312, i8* align 1 %1313, i64 %conv2649, i1 false)
  %1315 = load i32, i32* %wlen, align 4
  %1316 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2650 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1316, i32 0, i32 22
  %aptr2651 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2650, i32 0, i32 2
  %1317 = load i8*, i8** %aptr2651, align 8
  %idx.ext2652 = sext i32 %1315 to i64
  %add.ptr2653 = getelementptr inbounds i8, i8* %1317, i64 %idx.ext2652
  store i8* %add.ptr2653, i8** %aptr2651, align 8
  br label %do.end2654

do.end2654:                                       ; preds = %do.end2646
  br label %if.end2664

if.else2655:                                      ; preds = %do.body2589
  %1318 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio2656 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1318, i32 0, i32 24
  %1319 = load %struct._PerlIO**, %struct._PerlIO*** %fio2656, align 8
  %1320 = load i8*, i8** %pv, align 8
  %1321 = load i32, i32* %wlen, align 4
  %conv2657 = sext i32 %1321 to i64
  %call2658 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %1319, i8* %1320, i64 %conv2657)
  %1322 = load i32, i32* %wlen, align 4
  %conv2659 = sext i32 %1322 to i64
  %cmp2660 = icmp ne i64 %call2658, %conv2659
  br i1 %cmp2660, label %if.then2662, label %if.end2663

if.then2662:                                      ; preds = %if.else2655
  store i32 -1, i32* %retval, align 4
  br label %return

if.end2663:                                       ; preds = %if.else2655
  br label %if.end2664

if.end2664:                                       ; preds = %if.end2663, %do.end2654
  br label %do.end2665

do.end2665:                                       ; preds = %if.end2664
  br label %if.end2666

if.end2666:                                       ; preds = %do.end2665, %if.end2346
  br label %do.end2667

do.end2667:                                       ; preds = %if.end2666
  br label %if.end2668

if.end2668:                                       ; preds = %do.end2667, %do.end2118
  br label %if.end2673

if.else2669:                                      ; preds = %if.else990
  br label %do.body2670

do.body2670:                                      ; preds = %if.else2669
  %1323 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1323, i32 0, i32 19
  store i32 1, i32* %s_dirty, align 8
  %1324 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call2671 = call i8* @Perl_sv_reftype(%struct.sv* %1324, i32 0)
  %1325 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %1326 = ptrtoint %struct.sv* %1325 to i64
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.37, i64 0, i64 0), i8* %call2671, i64 %1326)
  br label %do.end2672

do.end2672:                                       ; preds = %do.body2670
  br label %if.end2673

if.end2673:                                       ; preds = %do.end2672, %if.end2668
  br label %if.end2674

if.end2674:                                       ; preds = %if.end2673, %do.end989
  br label %if.end2675

if.end2675:                                       ; preds = %if.end2674, %if.end789
  br label %if.end2676

if.end2676:                                       ; preds = %if.end2675
  br label %if.end2677

if.end2677:                                       ; preds = %if.end2676, %if.end280
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end2677, %if.then2662, %if.then2584, %if.then2502, %if.then2414, %if.then2342, %if.then2263, %if.then2192, %if.then2113, %if.then2035, %if.then1953, %if.then1865, %if.then1793, %if.then1714, %if.then1643, %if.then1559, %if.then1479, %if.then1397, %if.then1310, %if.then1238, %if.then1158, %if.then1087, %if.then986, %if.then915, %if.then784, %if.then713, %if.then642, %if.then559, %if.then460, %if.then389, %if.then269, %if.then195, %if.end120, %if.then116, %if.then45
  %1327 = load i32, i32* %retval, align 4
  ret i32 %1327
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @store_array(%struct.stcxt* %cxt, %struct.av* %av) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %av.addr = alloca %struct.av*, align 8
  %sav = alloca %struct.sv**, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %y = alloca i32, align 4
  %nsz66 = alloca i32, align 4
  %offset73 = alloca i32, align 4
  %nsz148 = alloca i32, align 4
  %offset155 = alloca i32, align 4
  %nsz241 = alloca i32, align 4
  %offset248 = alloca i32, align 4
  %nsz318 = alloca i32, align 4
  %offset325 = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.av* %av, %struct.av** %av.addr, align 8
  %0 = load %struct.av*, %struct.av** %av.addr, align 8
  %call = call i64 @Perl_av_len(%struct.av* %0)
  %add = add nsw i64 %call, 1
  %conv = trunc i64 %add to i32
  store i32 %conv, i32* %len, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 24
  %2 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %2, null
  br i1 %tobool, label %if.else39, label %if.then

if.then:                                          ; preds = %do.body
  br label %do.body1

do.body1:                                         ; preds = %if.then
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %4 = load i8*, i8** %aptr, align 8
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2, i32 0, i32 3
  %6 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %4, %6
  br i1 %cmp, label %if.then4, label %if.else

if.then4:                                         ; preds = %do.body1
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 22
  %aptr6 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf5, i32 0, i32 2
  %8 = load i8*, i8** %aptr6, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr, i8** %aptr6, align 8
  store i8 2, i8* %8, align 1
  br label %if.end

if.else:                                          ; preds = %do.body1
  br label %do.body7

do.body7:                                         ; preds = %if.else
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf8 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 22
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf8, i32 0, i32 1
  %10 = load i64, i64* %asiz, align 8
  %add9 = add i64 1, %10
  %add10 = add i64 %add9, 8191
  %and = and i64 %add10, -8192
  %conv11 = trunc i64 %and to i32
  store i32 %conv11, i32* %nsz, align 4
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf12 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 22
  %aptr13 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf12, i32 0, i32 2
  %12 = load i8*, i8** %aptr13, align 8
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 22
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf14, i32 0, i32 0
  %14 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %12 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %14 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv15 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv15, i32* %offset, align 4
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf16 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 22
  %arena17 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf16, i32 0, i32 0
  %16 = load i8*, i8** %arena17, align 8
  %17 = load i32, i32* %nsz, align 4
  %conv18 = sext i32 %17 to i64
  %mul = mul i64 %conv18, 1
  %call19 = call i8* @Perl_safesysrealloc(i8* %16, i64 %mul)
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf20 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 22
  %arena21 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf20, i32 0, i32 0
  store i8* %call19, i8** %arena21, align 8
  %19 = load i32, i32* %nsz, align 4
  %conv22 = sext i32 %19 to i64
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf23 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %20, i32 0, i32 22
  %asiz24 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf23, i32 0, i32 1
  store i64 %conv22, i64* %asiz24, align 8
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf25 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 22
  %arena26 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf25, i32 0, i32 0
  %22 = load i8*, i8** %arena26, align 8
  %23 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %23 to i64
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 %idx.ext
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf27 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 22
  %aptr28 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf27, i32 0, i32 2
  store i8* %add.ptr, i8** %aptr28, align 8
  %25 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf29 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %25, i32 0, i32 22
  %arena30 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf29, i32 0, i32 0
  %26 = load i8*, i8** %arena30, align 8
  %27 = load i32, i32* %nsz, align 4
  %idx.ext31 = sext i32 %27 to i64
  %add.ptr32 = getelementptr inbounds i8, i8* %26, i64 %idx.ext31
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf33 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 22
  %aend34 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf33, i32 0, i32 3
  store i8* %add.ptr32, i8** %aend34, align 8
  br label %do.end

do.end:                                           ; preds = %do.body7
  %29 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf35 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %29, i32 0, i32 22
  %aptr36 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf35, i32 0, i32 2
  %30 = load i8*, i8** %aptr36, align 8
  %incdec.ptr37 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr37, i8** %aptr36, align 8
  store i8 2, i8* %30, align 1
  br label %if.end

if.end:                                           ; preds = %do.end, %if.then4
  br label %do.end38

do.end38:                                         ; preds = %if.end
  br label %if.end46

if.else39:                                        ; preds = %do.body
  %31 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio40 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %31, i32 0, i32 24
  %32 = load %struct._PerlIO**, %struct._PerlIO*** %fio40, align 8
  %call41 = call i32 @PerlIO_putc(%struct._PerlIO** %32, i32 2)
  %cmp42 = icmp eq i32 %call41, -1
  br i1 %cmp42, label %if.then44, label %if.end45

if.then44:                                        ; preds = %if.else39
  store i32 -1, i32* %retval, align 4
  br label %return

if.end45:                                         ; preds = %if.else39
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %do.end38
  br label %do.end47

do.end47:                                         ; preds = %if.end46
  br label %do.body48

do.body48:                                        ; preds = %do.end47
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 12
  %34 = load i32, i32* %netorder, align 8
  %tobool49 = icmp ne i32 %34, 0
  br i1 %tobool49, label %if.then50, label %if.else133

if.then50:                                        ; preds = %do.body48
  %35 = load i32, i32* %len, align 4
  %call51 = call i32 @my_swap32(i32 %35)
  store i32 %call51, i32* %y, align 4
  %36 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio52 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %36, i32 0, i32 24
  %37 = load %struct._PerlIO**, %struct._PerlIO*** %fio52, align 8
  %tobool53 = icmp ne %struct._PerlIO** %37, null
  br i1 %tobool53, label %if.else125, label %if.then54

if.then54:                                        ; preds = %if.then50
  br label %do.body55

do.body55:                                        ; preds = %if.then54
  br label %do.body56

do.body56:                                        ; preds = %do.body55
  %38 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf57 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %38, i32 0, i32 22
  %aptr58 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf57, i32 0, i32 2
  %39 = load i8*, i8** %aptr58, align 8
  %add.ptr59 = getelementptr inbounds i8, i8* %39, i64 4
  %40 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf60 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %40, i32 0, i32 22
  %aend61 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf60, i32 0, i32 3
  %41 = load i8*, i8** %aend61, align 8
  %cmp62 = icmp ugt i8* %add.ptr59, %41
  br i1 %cmp62, label %if.then64, label %if.end105

if.then64:                                        ; preds = %do.body56
  br label %do.body65

do.body65:                                        ; preds = %if.then64
  %42 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf67 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %42, i32 0, i32 22
  %asiz68 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf67, i32 0, i32 1
  %43 = load i64, i64* %asiz68, align 8
  %add69 = add i64 4, %43
  %add70 = add i64 %add69, 8191
  %and71 = and i64 %add70, -8192
  %conv72 = trunc i64 %and71 to i32
  store i32 %conv72, i32* %nsz66, align 4
  %44 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf74 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %44, i32 0, i32 22
  %aptr75 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf74, i32 0, i32 2
  %45 = load i8*, i8** %aptr75, align 8
  %46 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf76 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %46, i32 0, i32 22
  %arena77 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf76, i32 0, i32 0
  %47 = load i8*, i8** %arena77, align 8
  %sub.ptr.lhs.cast78 = ptrtoint i8* %45 to i64
  %sub.ptr.rhs.cast79 = ptrtoint i8* %47 to i64
  %sub.ptr.sub80 = sub i64 %sub.ptr.lhs.cast78, %sub.ptr.rhs.cast79
  %conv81 = trunc i64 %sub.ptr.sub80 to i32
  store i32 %conv81, i32* %offset73, align 4
  %48 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf82 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %48, i32 0, i32 22
  %arena83 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf82, i32 0, i32 0
  %49 = load i8*, i8** %arena83, align 8
  %50 = load i32, i32* %nsz66, align 4
  %conv84 = sext i32 %50 to i64
  %mul85 = mul i64 %conv84, 1
  %call86 = call i8* @Perl_safesysrealloc(i8* %49, i64 %mul85)
  %51 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf87 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %51, i32 0, i32 22
  %arena88 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf87, i32 0, i32 0
  store i8* %call86, i8** %arena88, align 8
  %52 = load i32, i32* %nsz66, align 4
  %conv89 = sext i32 %52 to i64
  %53 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf90 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %53, i32 0, i32 22
  %asiz91 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf90, i32 0, i32 1
  store i64 %conv89, i64* %asiz91, align 8
  %54 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf92 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %54, i32 0, i32 22
  %arena93 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf92, i32 0, i32 0
  %55 = load i8*, i8** %arena93, align 8
  %56 = load i32, i32* %offset73, align 4
  %idx.ext94 = sext i32 %56 to i64
  %add.ptr95 = getelementptr inbounds i8, i8* %55, i64 %idx.ext94
  %57 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf96 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %57, i32 0, i32 22
  %aptr97 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf96, i32 0, i32 2
  store i8* %add.ptr95, i8** %aptr97, align 8
  %58 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf98 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %58, i32 0, i32 22
  %arena99 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf98, i32 0, i32 0
  %59 = load i8*, i8** %arena99, align 8
  %60 = load i32, i32* %nsz66, align 4
  %idx.ext100 = sext i32 %60 to i64
  %add.ptr101 = getelementptr inbounds i8, i8* %59, i64 %idx.ext100
  %61 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf102 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %61, i32 0, i32 22
  %aend103 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf102, i32 0, i32 3
  store i8* %add.ptr101, i8** %aend103, align 8
  br label %do.end104

do.end104:                                        ; preds = %do.body65
  br label %if.end105

if.end105:                                        ; preds = %do.end104, %do.body56
  br label %do.end106

do.end106:                                        ; preds = %if.end105
  %62 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf107 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %62, i32 0, i32 22
  %aptr108 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf107, i32 0, i32 2
  %63 = load i8*, i8** %aptr108, align 8
  %64 = ptrtoint i8* %63 to i64
  %65 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf109 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %65, i32 0, i32 22
  %aptr110 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf109, i32 0, i32 2
  %66 = load i8*, i8** %aptr110, align 8
  %67 = ptrtoint i8* %66 to i64
  %and111 = and i64 %67, -4
  %cmp112 = icmp eq i64 %64, %and111
  br i1 %cmp112, label %if.then114, label %if.else117

if.then114:                                       ; preds = %do.end106
  %68 = load i32, i32* %y, align 4
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf115 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 22
  %aptr116 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf115, i32 0, i32 2
  %70 = load i8*, i8** %aptr116, align 8
  %71 = bitcast i8* %70 to i32*
  store i32 %68, i32* %71, align 4
  br label %if.end120

if.else117:                                       ; preds = %do.end106
  %72 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf118 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %72, i32 0, i32 22
  %aptr119 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf118, i32 0, i32 2
  %73 = load i8*, i8** %aptr119, align 8
  %74 = bitcast i32* %y to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %73, i8* align 4 %74, i64 4, i1 false)
  br label %if.end120

if.end120:                                        ; preds = %if.else117, %if.then114
  %75 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf121 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %75, i32 0, i32 22
  %aptr122 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf121, i32 0, i32 2
  %76 = load i8*, i8** %aptr122, align 8
  %add.ptr123 = getelementptr inbounds i8, i8* %76, i64 4
  store i8* %add.ptr123, i8** %aptr122, align 8
  br label %do.end124

do.end124:                                        ; preds = %if.end120
  br label %if.end132

if.else125:                                       ; preds = %if.then50
  %77 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio126 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %77, i32 0, i32 24
  %78 = load %struct._PerlIO**, %struct._PerlIO*** %fio126, align 8
  %79 = bitcast i32* %y to i8*
  %call127 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %78, i8* %79, i64 4)
  %cmp128 = icmp ne i64 %call127, 4
  br i1 %cmp128, label %if.then130, label %if.end131

if.then130:                                       ; preds = %if.else125
  store i32 -1, i32* %retval, align 4
  br label %return

if.end131:                                        ; preds = %if.else125
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %do.end124
  br label %if.end215

if.else133:                                       ; preds = %do.body48
  %80 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio134 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %80, i32 0, i32 24
  %81 = load %struct._PerlIO**, %struct._PerlIO*** %fio134, align 8
  %tobool135 = icmp ne %struct._PerlIO** %81, null
  br i1 %tobool135, label %if.else207, label %if.then136

if.then136:                                       ; preds = %if.else133
  br label %do.body137

do.body137:                                       ; preds = %if.then136
  br label %do.body138

do.body138:                                       ; preds = %do.body137
  %82 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf139 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %82, i32 0, i32 22
  %aptr140 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf139, i32 0, i32 2
  %83 = load i8*, i8** %aptr140, align 8
  %add.ptr141 = getelementptr inbounds i8, i8* %83, i64 4
  %84 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf142 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %84, i32 0, i32 22
  %aend143 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf142, i32 0, i32 3
  %85 = load i8*, i8** %aend143, align 8
  %cmp144 = icmp ugt i8* %add.ptr141, %85
  br i1 %cmp144, label %if.then146, label %if.end187

if.then146:                                       ; preds = %do.body138
  br label %do.body147

do.body147:                                       ; preds = %if.then146
  %86 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf149 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %86, i32 0, i32 22
  %asiz150 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf149, i32 0, i32 1
  %87 = load i64, i64* %asiz150, align 8
  %add151 = add i64 4, %87
  %add152 = add i64 %add151, 8191
  %and153 = and i64 %add152, -8192
  %conv154 = trunc i64 %and153 to i32
  store i32 %conv154, i32* %nsz148, align 4
  %88 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf156 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %88, i32 0, i32 22
  %aptr157 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf156, i32 0, i32 2
  %89 = load i8*, i8** %aptr157, align 8
  %90 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf158 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %90, i32 0, i32 22
  %arena159 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf158, i32 0, i32 0
  %91 = load i8*, i8** %arena159, align 8
  %sub.ptr.lhs.cast160 = ptrtoint i8* %89 to i64
  %sub.ptr.rhs.cast161 = ptrtoint i8* %91 to i64
  %sub.ptr.sub162 = sub i64 %sub.ptr.lhs.cast160, %sub.ptr.rhs.cast161
  %conv163 = trunc i64 %sub.ptr.sub162 to i32
  store i32 %conv163, i32* %offset155, align 4
  %92 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf164 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %92, i32 0, i32 22
  %arena165 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf164, i32 0, i32 0
  %93 = load i8*, i8** %arena165, align 8
  %94 = load i32, i32* %nsz148, align 4
  %conv166 = sext i32 %94 to i64
  %mul167 = mul i64 %conv166, 1
  %call168 = call i8* @Perl_safesysrealloc(i8* %93, i64 %mul167)
  %95 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf169 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %95, i32 0, i32 22
  %arena170 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf169, i32 0, i32 0
  store i8* %call168, i8** %arena170, align 8
  %96 = load i32, i32* %nsz148, align 4
  %conv171 = sext i32 %96 to i64
  %97 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf172 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %97, i32 0, i32 22
  %asiz173 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf172, i32 0, i32 1
  store i64 %conv171, i64* %asiz173, align 8
  %98 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf174 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %98, i32 0, i32 22
  %arena175 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf174, i32 0, i32 0
  %99 = load i8*, i8** %arena175, align 8
  %100 = load i32, i32* %offset155, align 4
  %idx.ext176 = sext i32 %100 to i64
  %add.ptr177 = getelementptr inbounds i8, i8* %99, i64 %idx.ext176
  %101 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf178 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %101, i32 0, i32 22
  %aptr179 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf178, i32 0, i32 2
  store i8* %add.ptr177, i8** %aptr179, align 8
  %102 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf180 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %102, i32 0, i32 22
  %arena181 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf180, i32 0, i32 0
  %103 = load i8*, i8** %arena181, align 8
  %104 = load i32, i32* %nsz148, align 4
  %idx.ext182 = sext i32 %104 to i64
  %add.ptr183 = getelementptr inbounds i8, i8* %103, i64 %idx.ext182
  %105 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf184 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %105, i32 0, i32 22
  %aend185 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf184, i32 0, i32 3
  store i8* %add.ptr183, i8** %aend185, align 8
  br label %do.end186

do.end186:                                        ; preds = %do.body147
  br label %if.end187

if.end187:                                        ; preds = %do.end186, %do.body138
  br label %do.end188

do.end188:                                        ; preds = %if.end187
  %106 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf189 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %106, i32 0, i32 22
  %aptr190 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf189, i32 0, i32 2
  %107 = load i8*, i8** %aptr190, align 8
  %108 = ptrtoint i8* %107 to i64
  %109 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf191 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %109, i32 0, i32 22
  %aptr192 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf191, i32 0, i32 2
  %110 = load i8*, i8** %aptr192, align 8
  %111 = ptrtoint i8* %110 to i64
  %and193 = and i64 %111, -4
  %cmp194 = icmp eq i64 %108, %and193
  br i1 %cmp194, label %if.then196, label %if.else199

if.then196:                                       ; preds = %do.end188
  %112 = load i32, i32* %len, align 4
  %113 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf197 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %113, i32 0, i32 22
  %aptr198 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf197, i32 0, i32 2
  %114 = load i8*, i8** %aptr198, align 8
  %115 = bitcast i8* %114 to i32*
  store i32 %112, i32* %115, align 4
  br label %if.end202

if.else199:                                       ; preds = %do.end188
  %116 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf200 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %116, i32 0, i32 22
  %aptr201 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf200, i32 0, i32 2
  %117 = load i8*, i8** %aptr201, align 8
  %118 = bitcast i32* %len to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %117, i8* align 4 %118, i64 4, i1 false)
  br label %if.end202

if.end202:                                        ; preds = %if.else199, %if.then196
  %119 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf203 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %119, i32 0, i32 22
  %aptr204 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf203, i32 0, i32 2
  %120 = load i8*, i8** %aptr204, align 8
  %add.ptr205 = getelementptr inbounds i8, i8* %120, i64 4
  store i8* %add.ptr205, i8** %aptr204, align 8
  br label %do.end206

do.end206:                                        ; preds = %if.end202
  br label %if.end214

if.else207:                                       ; preds = %if.else133
  %121 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio208 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %121, i32 0, i32 24
  %122 = load %struct._PerlIO**, %struct._PerlIO*** %fio208, align 8
  %123 = bitcast i32* %len to i8*
  %call209 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %122, i8* %123, i64 4)
  %cmp210 = icmp ne i64 %call209, 4
  br i1 %cmp210, label %if.then212, label %if.end213

if.then212:                                       ; preds = %if.else207
  store i32 -1, i32* %retval, align 4
  br label %return

if.end213:                                        ; preds = %if.else207
  br label %if.end214

if.end214:                                        ; preds = %if.end213, %do.end206
  br label %if.end215

if.end215:                                        ; preds = %if.end214, %if.end132
  br label %do.end216

do.end216:                                        ; preds = %if.end215
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end216
  %124 = load i32, i32* %i, align 4
  %125 = load i32, i32* %len, align 4
  %cmp217 = icmp slt i32 %124, %125
  br i1 %cmp217, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %126 = load %struct.av*, %struct.av** %av.addr, align 8
  %127 = load i32, i32* %i, align 4
  %conv219 = sext i32 %127 to i64
  %call220 = call %struct.sv** @Perl_av_fetch(%struct.av* %126, i64 %conv219, i32 0)
  store %struct.sv** %call220, %struct.sv*** %sav, align 8
  %128 = load %struct.sv**, %struct.sv*** %sav, align 8
  %tobool221 = icmp ne %struct.sv** %128, null
  br i1 %tobool221, label %if.end295, label %if.then222

if.then222:                                       ; preds = %for.body
  br label %do.body223

do.body223:                                       ; preds = %if.then222
  %129 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %129, i32 0, i32 10
  %130 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %130, 1
  store i64 %inc, i64* %tagnum, align 8
  br label %do.body224

do.body224:                                       ; preds = %do.body223
  %131 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio225 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %131, i32 0, i32 24
  %132 = load %struct._PerlIO**, %struct._PerlIO*** %fio225, align 8
  %tobool226 = icmp ne %struct._PerlIO** %132, null
  br i1 %tobool226, label %if.else285, label %if.then227

if.then227:                                       ; preds = %do.body224
  br label %do.body228

do.body228:                                       ; preds = %if.then227
  %133 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf229 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %133, i32 0, i32 22
  %aptr230 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf229, i32 0, i32 2
  %134 = load i8*, i8** %aptr230, align 8
  %135 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf231 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %135, i32 0, i32 22
  %aend232 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf231, i32 0, i32 3
  %136 = load i8*, i8** %aend232, align 8
  %cmp233 = icmp ult i8* %134, %136
  br i1 %cmp233, label %if.then235, label %if.else239

if.then235:                                       ; preds = %do.body228
  %137 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf236 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %137, i32 0, i32 22
  %aptr237 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf236, i32 0, i32 2
  %138 = load i8*, i8** %aptr237, align 8
  %incdec.ptr238 = getelementptr inbounds i8, i8* %138, i32 1
  store i8* %incdec.ptr238, i8** %aptr237, align 8
  store i8 14, i8* %138, align 1
  br label %if.end283

if.else239:                                       ; preds = %do.body228
  br label %do.body240

do.body240:                                       ; preds = %if.else239
  %139 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf242 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %139, i32 0, i32 22
  %asiz243 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf242, i32 0, i32 1
  %140 = load i64, i64* %asiz243, align 8
  %add244 = add i64 1, %140
  %add245 = add i64 %add244, 8191
  %and246 = and i64 %add245, -8192
  %conv247 = trunc i64 %and246 to i32
  store i32 %conv247, i32* %nsz241, align 4
  %141 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf249 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %141, i32 0, i32 22
  %aptr250 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf249, i32 0, i32 2
  %142 = load i8*, i8** %aptr250, align 8
  %143 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf251 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %143, i32 0, i32 22
  %arena252 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf251, i32 0, i32 0
  %144 = load i8*, i8** %arena252, align 8
  %sub.ptr.lhs.cast253 = ptrtoint i8* %142 to i64
  %sub.ptr.rhs.cast254 = ptrtoint i8* %144 to i64
  %sub.ptr.sub255 = sub i64 %sub.ptr.lhs.cast253, %sub.ptr.rhs.cast254
  %conv256 = trunc i64 %sub.ptr.sub255 to i32
  store i32 %conv256, i32* %offset248, align 4
  %145 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf257 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %145, i32 0, i32 22
  %arena258 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf257, i32 0, i32 0
  %146 = load i8*, i8** %arena258, align 8
  %147 = load i32, i32* %nsz241, align 4
  %conv259 = sext i32 %147 to i64
  %mul260 = mul i64 %conv259, 1
  %call261 = call i8* @Perl_safesysrealloc(i8* %146, i64 %mul260)
  %148 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf262 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %148, i32 0, i32 22
  %arena263 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf262, i32 0, i32 0
  store i8* %call261, i8** %arena263, align 8
  %149 = load i32, i32* %nsz241, align 4
  %conv264 = sext i32 %149 to i64
  %150 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf265 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %150, i32 0, i32 22
  %asiz266 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf265, i32 0, i32 1
  store i64 %conv264, i64* %asiz266, align 8
  %151 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf267 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %151, i32 0, i32 22
  %arena268 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf267, i32 0, i32 0
  %152 = load i8*, i8** %arena268, align 8
  %153 = load i32, i32* %offset248, align 4
  %idx.ext269 = sext i32 %153 to i64
  %add.ptr270 = getelementptr inbounds i8, i8* %152, i64 %idx.ext269
  %154 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf271 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %154, i32 0, i32 22
  %aptr272 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf271, i32 0, i32 2
  store i8* %add.ptr270, i8** %aptr272, align 8
  %155 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf273 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %155, i32 0, i32 22
  %arena274 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf273, i32 0, i32 0
  %156 = load i8*, i8** %arena274, align 8
  %157 = load i32, i32* %nsz241, align 4
  %idx.ext275 = sext i32 %157 to i64
  %add.ptr276 = getelementptr inbounds i8, i8* %156, i64 %idx.ext275
  %158 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf277 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %158, i32 0, i32 22
  %aend278 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf277, i32 0, i32 3
  store i8* %add.ptr276, i8** %aend278, align 8
  br label %do.end279

do.end279:                                        ; preds = %do.body240
  %159 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf280 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %159, i32 0, i32 22
  %aptr281 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf280, i32 0, i32 2
  %160 = load i8*, i8** %aptr281, align 8
  %incdec.ptr282 = getelementptr inbounds i8, i8* %160, i32 1
  store i8* %incdec.ptr282, i8** %aptr281, align 8
  store i8 14, i8* %160, align 1
  br label %if.end283

if.end283:                                        ; preds = %do.end279, %if.then235
  br label %do.end284

do.end284:                                        ; preds = %if.end283
  br label %if.end292

if.else285:                                       ; preds = %do.body224
  %161 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio286 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %161, i32 0, i32 24
  %162 = load %struct._PerlIO**, %struct._PerlIO*** %fio286, align 8
  %call287 = call i32 @PerlIO_putc(%struct._PerlIO** %162, i32 14)
  %cmp288 = icmp eq i32 %call287, -1
  br i1 %cmp288, label %if.then290, label %if.end291

if.then290:                                       ; preds = %if.else285
  store i32 -1, i32* %retval, align 4
  br label %return

if.end291:                                        ; preds = %if.else285
  br label %if.end292

if.end292:                                        ; preds = %if.end291, %do.end284
  br label %do.end293

do.end293:                                        ; preds = %if.end292
  br label %do.end294

do.end294:                                        ; preds = %do.end293
  br label %for.inc

if.end295:                                        ; preds = %for.body
  %163 = load %struct.sv**, %struct.sv*** %sav, align 8
  %164 = load %struct.sv*, %struct.sv** %163, align 8
  %cmp296 = icmp eq %struct.sv* %164, @PL_sv_undef
  br i1 %cmp296, label %if.then298, label %if.end371

if.then298:                                       ; preds = %if.end295
  %165 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum299 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %165, i32 0, i32 10
  %166 = load i64, i64* %tagnum299, align 8
  %inc300 = add nsw i64 %166, 1
  store i64 %inc300, i64* %tagnum299, align 8
  br label %do.body301

do.body301:                                       ; preds = %if.then298
  %167 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio302 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %167, i32 0, i32 24
  %168 = load %struct._PerlIO**, %struct._PerlIO*** %fio302, align 8
  %tobool303 = icmp ne %struct._PerlIO** %168, null
  br i1 %tobool303, label %if.else362, label %if.then304

if.then304:                                       ; preds = %do.body301
  br label %do.body305

do.body305:                                       ; preds = %if.then304
  %169 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf306 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %169, i32 0, i32 22
  %aptr307 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf306, i32 0, i32 2
  %170 = load i8*, i8** %aptr307, align 8
  %171 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf308 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %171, i32 0, i32 22
  %aend309 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf308, i32 0, i32 3
  %172 = load i8*, i8** %aend309, align 8
  %cmp310 = icmp ult i8* %170, %172
  br i1 %cmp310, label %if.then312, label %if.else316

if.then312:                                       ; preds = %do.body305
  %173 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf313 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %173, i32 0, i32 22
  %aptr314 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf313, i32 0, i32 2
  %174 = load i8*, i8** %aptr314, align 8
  %incdec.ptr315 = getelementptr inbounds i8, i8* %174, i32 1
  store i8* %incdec.ptr315, i8** %aptr314, align 8
  store i8 31, i8* %174, align 1
  br label %if.end360

if.else316:                                       ; preds = %do.body305
  br label %do.body317

do.body317:                                       ; preds = %if.else316
  %175 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf319 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %175, i32 0, i32 22
  %asiz320 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf319, i32 0, i32 1
  %176 = load i64, i64* %asiz320, align 8
  %add321 = add i64 1, %176
  %add322 = add i64 %add321, 8191
  %and323 = and i64 %add322, -8192
  %conv324 = trunc i64 %and323 to i32
  store i32 %conv324, i32* %nsz318, align 4
  %177 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf326 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %177, i32 0, i32 22
  %aptr327 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf326, i32 0, i32 2
  %178 = load i8*, i8** %aptr327, align 8
  %179 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf328 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %179, i32 0, i32 22
  %arena329 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf328, i32 0, i32 0
  %180 = load i8*, i8** %arena329, align 8
  %sub.ptr.lhs.cast330 = ptrtoint i8* %178 to i64
  %sub.ptr.rhs.cast331 = ptrtoint i8* %180 to i64
  %sub.ptr.sub332 = sub i64 %sub.ptr.lhs.cast330, %sub.ptr.rhs.cast331
  %conv333 = trunc i64 %sub.ptr.sub332 to i32
  store i32 %conv333, i32* %offset325, align 4
  %181 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf334 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %181, i32 0, i32 22
  %arena335 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf334, i32 0, i32 0
  %182 = load i8*, i8** %arena335, align 8
  %183 = load i32, i32* %nsz318, align 4
  %conv336 = sext i32 %183 to i64
  %mul337 = mul i64 %conv336, 1
  %call338 = call i8* @Perl_safesysrealloc(i8* %182, i64 %mul337)
  %184 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf339 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %184, i32 0, i32 22
  %arena340 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf339, i32 0, i32 0
  store i8* %call338, i8** %arena340, align 8
  %185 = load i32, i32* %nsz318, align 4
  %conv341 = sext i32 %185 to i64
  %186 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf342 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %186, i32 0, i32 22
  %asiz343 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf342, i32 0, i32 1
  store i64 %conv341, i64* %asiz343, align 8
  %187 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf344 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %187, i32 0, i32 22
  %arena345 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf344, i32 0, i32 0
  %188 = load i8*, i8** %arena345, align 8
  %189 = load i32, i32* %offset325, align 4
  %idx.ext346 = sext i32 %189 to i64
  %add.ptr347 = getelementptr inbounds i8, i8* %188, i64 %idx.ext346
  %190 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf348 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %190, i32 0, i32 22
  %aptr349 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf348, i32 0, i32 2
  store i8* %add.ptr347, i8** %aptr349, align 8
  %191 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf350 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %191, i32 0, i32 22
  %arena351 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf350, i32 0, i32 0
  %192 = load i8*, i8** %arena351, align 8
  %193 = load i32, i32* %nsz318, align 4
  %idx.ext352 = sext i32 %193 to i64
  %add.ptr353 = getelementptr inbounds i8, i8* %192, i64 %idx.ext352
  %194 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf354 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %194, i32 0, i32 22
  %aend355 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf354, i32 0, i32 3
  store i8* %add.ptr353, i8** %aend355, align 8
  br label %do.end356

do.end356:                                        ; preds = %do.body317
  %195 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf357 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %195, i32 0, i32 22
  %aptr358 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf357, i32 0, i32 2
  %196 = load i8*, i8** %aptr358, align 8
  %incdec.ptr359 = getelementptr inbounds i8, i8* %196, i32 1
  store i8* %incdec.ptr359, i8** %aptr358, align 8
  store i8 31, i8* %196, align 1
  br label %if.end360

if.end360:                                        ; preds = %do.end356, %if.then312
  br label %do.end361

do.end361:                                        ; preds = %if.end360
  br label %if.end369

if.else362:                                       ; preds = %do.body301
  %197 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio363 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %197, i32 0, i32 24
  %198 = load %struct._PerlIO**, %struct._PerlIO*** %fio363, align 8
  %call364 = call i32 @PerlIO_putc(%struct._PerlIO** %198, i32 31)
  %cmp365 = icmp eq i32 %call364, -1
  br i1 %cmp365, label %if.then367, label %if.end368

if.then367:                                       ; preds = %if.else362
  store i32 -1, i32* %retval, align 4
  br label %return

if.end368:                                        ; preds = %if.else362
  br label %if.end369

if.end369:                                        ; preds = %if.end368, %do.end361
  br label %do.end370

do.end370:                                        ; preds = %if.end369
  br label %for.inc

if.end371:                                        ; preds = %if.end295
  %199 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %200 = load %struct.sv**, %struct.sv*** %sav, align 8
  %201 = load %struct.sv*, %struct.sv** %200, align 8
  %call372 = call i32 @store(%struct.stcxt* %199, %struct.sv* %201)
  store i32 %call372, i32* %ret, align 4
  %tobool373 = icmp ne i32 %call372, 0
  br i1 %tobool373, label %if.then374, label %if.end375

if.then374:                                       ; preds = %if.end371
  %202 = load i32, i32* %ret, align 4
  store i32 %202, i32* %retval, align 4
  br label %return

if.end375:                                        ; preds = %if.end371
  br label %for.inc

for.inc:                                          ; preds = %if.end375, %do.end370, %do.end294
  %203 = load i32, i32* %i, align 4
  %inc376 = add nsw i32 %203, 1
  store i32 %inc376, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then374, %if.then367, %if.then290, %if.then212, %if.then130, %if.then44
  %204 = load i32, i32* %retval, align 4
  ret i32 %204
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @store_hash(%struct.stcxt* %cxt, %struct.hv* %hv) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %hv.addr = alloca %struct.hv*, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %riter = alloca i32, align 4
  %eiter = alloca %struct.he*, align 8
  %flagged_hash = alloca i32, align 4
  %hash_flags = alloca i8, align 1
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %nsz79 = alloca i32, align 4
  %offset86 = alloca i32, align 4
  %nsz151 = alloca i32, align 4
  %offset158 = alloca i32, align 4
  %y = alloca i32, align 4
  %nsz223 = alloca i32, align 4
  %offset230 = alloca i32, align 4
  %nsz305 = alloca i32, align 4
  %offset312 = alloca i32, align 4
  %av = alloca %struct.av*, align 8
  %he = alloca %struct.he*, align 8
  %key = alloca %struct.sv*, align 8
  %placeholders = alloca i32, align 4
  %flags = alloca i8, align 1
  %keyval = alloca i8*, align 8
  %keylen_tmp = alloca i64, align 8
  %keylen = alloca i32, align 4
  %key541 = alloca %struct.sv*, align 8
  %he543 = alloca %struct.he*, align 8
  %val = alloca %struct.sv*, align 8
  %keysave = alloca i8*, align 8
  %is_utf8 = alloca i8, align 1
  %nsz622 = alloca i32, align 4
  %offset629 = alloca i32, align 4
  %y682 = alloca i32, align 4
  %nsz698 = alloca i32, align 4
  %offset705 = alloca i32, align 4
  %nsz780 = alloca i32, align 4
  %offset787 = alloca i32, align 4
  %nsz867 = alloca i32, align 4
  %offset875 = alloca i32, align 4
  %key942 = alloca i8*, align 8
  %len943 = alloca i32, align 4
  %flags944 = alloca i8, align 1
  %he945 = alloca %struct.he*, align 8
  %val947 = alloca %struct.sv*, align 8
  %key_sv = alloca %struct.sv*, align 8
  %hek = alloca %struct.hek*, align 8
  %nsz1038 = alloca i32, align 4
  %offset1045 = alloca i32, align 4
  %y1104 = alloca i32, align 4
  %nsz1120 = alloca i32, align 4
  %offset1127 = alloca i32, align 4
  %nsz1202 = alloca i32, align 4
  %offset1209 = alloca i32, align 4
  %nsz1289 = alloca i32, align 4
  %offset1297 = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.hv* %hv, %struct.hv** %hv.addr, align 8
  %0 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %0, i32 0, i32 0
  %1 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_keys = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %1, i32 0, i32 2
  %2 = load i64, i64* %xhv_keys, align 8
  %conv = trunc i64 %2 to i32
  store i32 %conv, i32* %len, align 4
  store i32 0, i32* %ret, align 4
  %3 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %3, i32 0, i32 2
  %4 = load i32, i32* %sv_flags, align 4
  %and = and i32 %4, 134283264
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %5 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %sv_flags1 = getelementptr inbounds %struct.hv, %struct.hv* %5, i32 0, i32 2
  %6 = load i32, i32* %sv_flags1, align 4
  %and2 = and i32 %6, -2147483648
  %tobool3 = icmp ne i32 %and2, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %7 = phi i1 [ true, %entry ], [ %tobool3, %lor.rhs ]
  %8 = zext i1 %7 to i64
  %cond = select i1 %7, i32 1, i32 0
  store i32 %cond, i32* %flagged_hash, align 4
  %9 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %sv_flags4 = getelementptr inbounds %struct.hv, %struct.hv* %9, i32 0, i32 2
  %10 = load i32, i32* %sv_flags4, align 4
  %and5 = and i32 %10, 134283264
  %tobool6 = icmp ne i32 %and5, 0
  %11 = zext i1 %tobool6 to i64
  %cond7 = select i1 %tobool6, i32 1, i32 0
  %conv8 = trunc i32 %cond7 to i8
  store i8 %conv8, i8* %hash_flags, align 1
  %12 = load i32, i32* %flagged_hash, align 4
  %tobool9 = icmp ne i32 %12, 0
  br i1 %tobool9, label %if.then, label %if.else

if.then:                                          ; preds = %lor.end
  br label %if.end

if.else:                                          ; preds = %lor.end
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load i32, i32* %flagged_hash, align 4
  %tobool10 = icmp ne i32 %13, 0
  br i1 %tobool10, label %if.then11, label %if.else133

if.then11:                                        ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.then11
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 24
  %15 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool12 = icmp ne %struct._PerlIO** %15, null
  br i1 %tobool12, label %if.else53, label %if.then13

if.then13:                                        ; preds = %do.body
  br label %do.body14

do.body14:                                        ; preds = %if.then13
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %17 = load i8*, i8** %aptr, align 8
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf15 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf15, i32 0, i32 3
  %19 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %17, %19
  br i1 %cmp, label %if.then17, label %if.else20

if.then17:                                        ; preds = %do.body14
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf18 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %20, i32 0, i32 22
  %aptr19 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf18, i32 0, i32 2
  %21 = load i8*, i8** %aptr19, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %21, i32 1
  store i8* %incdec.ptr, i8** %aptr19, align 8
  store i8 25, i8* %21, align 1
  br label %if.end51

if.else20:                                        ; preds = %do.body14
  br label %do.body21

do.body21:                                        ; preds = %if.else20
  %22 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %22, i32 0, i32 22
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf22, i32 0, i32 1
  %23 = load i64, i64* %asiz, align 8
  %add = add i64 1, %23
  %add23 = add i64 %add, 8191
  %and24 = and i64 %add23, -8192
  %conv25 = trunc i64 %and24 to i32
  store i32 %conv25, i32* %nsz, align 4
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 22
  %aptr27 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 2
  %25 = load i8*, i8** %aptr27, align 8
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf28 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 22
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf28, i32 0, i32 0
  %27 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %25 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %27 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv29 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv29, i32* %offset, align 4
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf30 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 22
  %arena31 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf30, i32 0, i32 0
  %29 = load i8*, i8** %arena31, align 8
  %30 = load i32, i32* %nsz, align 4
  %conv32 = sext i32 %30 to i64
  %mul = mul i64 %conv32, 1
  %call = call i8* @Perl_safesysrealloc(i8* %29, i64 %mul)
  %31 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf33 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %31, i32 0, i32 22
  %arena34 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf33, i32 0, i32 0
  store i8* %call, i8** %arena34, align 8
  %32 = load i32, i32* %nsz, align 4
  %conv35 = sext i32 %32 to i64
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf36 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 22
  %asiz37 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf36, i32 0, i32 1
  store i64 %conv35, i64* %asiz37, align 8
  %34 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf38 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %34, i32 0, i32 22
  %arena39 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf38, i32 0, i32 0
  %35 = load i8*, i8** %arena39, align 8
  %36 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %36 to i64
  %add.ptr = getelementptr inbounds i8, i8* %35, i64 %idx.ext
  %37 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf40 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %37, i32 0, i32 22
  %aptr41 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf40, i32 0, i32 2
  store i8* %add.ptr, i8** %aptr41, align 8
  %38 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf42 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %38, i32 0, i32 22
  %arena43 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf42, i32 0, i32 0
  %39 = load i8*, i8** %arena43, align 8
  %40 = load i32, i32* %nsz, align 4
  %idx.ext44 = sext i32 %40 to i64
  %add.ptr45 = getelementptr inbounds i8, i8* %39, i64 %idx.ext44
  %41 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf46 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %41, i32 0, i32 22
  %aend47 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf46, i32 0, i32 3
  store i8* %add.ptr45, i8** %aend47, align 8
  br label %do.end

do.end:                                           ; preds = %do.body21
  %42 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf48 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %42, i32 0, i32 22
  %aptr49 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf48, i32 0, i32 2
  %43 = load i8*, i8** %aptr49, align 8
  %incdec.ptr50 = getelementptr inbounds i8, i8* %43, i32 1
  store i8* %incdec.ptr50, i8** %aptr49, align 8
  store i8 25, i8* %43, align 1
  br label %if.end51

if.end51:                                         ; preds = %do.end, %if.then17
  br label %do.end52

do.end52:                                         ; preds = %if.end51
  br label %if.end60

if.else53:                                        ; preds = %do.body
  %44 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio54 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %44, i32 0, i32 24
  %45 = load %struct._PerlIO**, %struct._PerlIO*** %fio54, align 8
  %call55 = call i32 @PerlIO_putc(%struct._PerlIO** %45, i32 25)
  %cmp56 = icmp eq i32 %call55, -1
  br i1 %cmp56, label %if.then58, label %if.end59

if.then58:                                        ; preds = %if.else53
  store i32 -1, i32* %retval, align 4
  br label %return

if.end59:                                         ; preds = %if.else53
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %do.end52
  br label %do.end61

do.end61:                                         ; preds = %if.end60
  br label %do.body62

do.body62:                                        ; preds = %do.end61
  %46 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio63 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %46, i32 0, i32 24
  %47 = load %struct._PerlIO**, %struct._PerlIO*** %fio63, align 8
  %tobool64 = icmp ne %struct._PerlIO** %47, null
  br i1 %tobool64, label %if.else123, label %if.then65

if.then65:                                        ; preds = %do.body62
  br label %do.body66

do.body66:                                        ; preds = %if.then65
  %48 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf67 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %48, i32 0, i32 22
  %aptr68 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf67, i32 0, i32 2
  %49 = load i8*, i8** %aptr68, align 8
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf69 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %50, i32 0, i32 22
  %aend70 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf69, i32 0, i32 3
  %51 = load i8*, i8** %aend70, align 8
  %cmp71 = icmp ult i8* %49, %51
  br i1 %cmp71, label %if.then73, label %if.else77

if.then73:                                        ; preds = %do.body66
  %52 = load i8, i8* %hash_flags, align 1
  %53 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf74 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %53, i32 0, i32 22
  %aptr75 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf74, i32 0, i32 2
  %54 = load i8*, i8** %aptr75, align 8
  %incdec.ptr76 = getelementptr inbounds i8, i8* %54, i32 1
  store i8* %incdec.ptr76, i8** %aptr75, align 8
  store i8 %52, i8* %54, align 1
  br label %if.end121

if.else77:                                        ; preds = %do.body66
  br label %do.body78

do.body78:                                        ; preds = %if.else77
  %55 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf80 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %55, i32 0, i32 22
  %asiz81 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf80, i32 0, i32 1
  %56 = load i64, i64* %asiz81, align 8
  %add82 = add i64 1, %56
  %add83 = add i64 %add82, 8191
  %and84 = and i64 %add83, -8192
  %conv85 = trunc i64 %and84 to i32
  store i32 %conv85, i32* %nsz79, align 4
  %57 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf87 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %57, i32 0, i32 22
  %aptr88 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf87, i32 0, i32 2
  %58 = load i8*, i8** %aptr88, align 8
  %59 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf89 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %59, i32 0, i32 22
  %arena90 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf89, i32 0, i32 0
  %60 = load i8*, i8** %arena90, align 8
  %sub.ptr.lhs.cast91 = ptrtoint i8* %58 to i64
  %sub.ptr.rhs.cast92 = ptrtoint i8* %60 to i64
  %sub.ptr.sub93 = sub i64 %sub.ptr.lhs.cast91, %sub.ptr.rhs.cast92
  %conv94 = trunc i64 %sub.ptr.sub93 to i32
  store i32 %conv94, i32* %offset86, align 4
  %61 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf95 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %61, i32 0, i32 22
  %arena96 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf95, i32 0, i32 0
  %62 = load i8*, i8** %arena96, align 8
  %63 = load i32, i32* %nsz79, align 4
  %conv97 = sext i32 %63 to i64
  %mul98 = mul i64 %conv97, 1
  %call99 = call i8* @Perl_safesysrealloc(i8* %62, i64 %mul98)
  %64 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf100 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %64, i32 0, i32 22
  %arena101 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf100, i32 0, i32 0
  store i8* %call99, i8** %arena101, align 8
  %65 = load i32, i32* %nsz79, align 4
  %conv102 = sext i32 %65 to i64
  %66 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf103 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %66, i32 0, i32 22
  %asiz104 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf103, i32 0, i32 1
  store i64 %conv102, i64* %asiz104, align 8
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf105 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %67, i32 0, i32 22
  %arena106 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf105, i32 0, i32 0
  %68 = load i8*, i8** %arena106, align 8
  %69 = load i32, i32* %offset86, align 4
  %idx.ext107 = sext i32 %69 to i64
  %add.ptr108 = getelementptr inbounds i8, i8* %68, i64 %idx.ext107
  %70 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf109 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %70, i32 0, i32 22
  %aptr110 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf109, i32 0, i32 2
  store i8* %add.ptr108, i8** %aptr110, align 8
  %71 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf111 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %71, i32 0, i32 22
  %arena112 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf111, i32 0, i32 0
  %72 = load i8*, i8** %arena112, align 8
  %73 = load i32, i32* %nsz79, align 4
  %idx.ext113 = sext i32 %73 to i64
  %add.ptr114 = getelementptr inbounds i8, i8* %72, i64 %idx.ext113
  %74 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf115 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %74, i32 0, i32 22
  %aend116 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf115, i32 0, i32 3
  store i8* %add.ptr114, i8** %aend116, align 8
  br label %do.end117

do.end117:                                        ; preds = %do.body78
  %75 = load i8, i8* %hash_flags, align 1
  %76 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf118 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %76, i32 0, i32 22
  %aptr119 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf118, i32 0, i32 2
  %77 = load i8*, i8** %aptr119, align 8
  %incdec.ptr120 = getelementptr inbounds i8, i8* %77, i32 1
  store i8* %incdec.ptr120, i8** %aptr119, align 8
  store i8 %75, i8* %77, align 1
  br label %if.end121

if.end121:                                        ; preds = %do.end117, %if.then73
  br label %do.end122

do.end122:                                        ; preds = %if.end121
  br label %if.end131

if.else123:                                       ; preds = %do.body62
  %78 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio124 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %78, i32 0, i32 24
  %79 = load %struct._PerlIO**, %struct._PerlIO*** %fio124, align 8
  %80 = load i8, i8* %hash_flags, align 1
  %conv125 = zext i8 %80 to i32
  %call126 = call i32 @PerlIO_putc(%struct._PerlIO** %79, i32 %conv125)
  %cmp127 = icmp eq i32 %call126, -1
  br i1 %cmp127, label %if.then129, label %if.end130

if.then129:                                       ; preds = %if.else123
  store i32 -1, i32* %retval, align 4
  br label %return

if.end130:                                        ; preds = %if.else123
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %do.end122
  br label %do.end132

do.end132:                                        ; preds = %if.end131
  br label %if.end204

if.else133:                                       ; preds = %if.end
  br label %do.body134

do.body134:                                       ; preds = %if.else133
  %81 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio135 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %81, i32 0, i32 24
  %82 = load %struct._PerlIO**, %struct._PerlIO*** %fio135, align 8
  %tobool136 = icmp ne %struct._PerlIO** %82, null
  br i1 %tobool136, label %if.else195, label %if.then137

if.then137:                                       ; preds = %do.body134
  br label %do.body138

do.body138:                                       ; preds = %if.then137
  %83 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf139 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %83, i32 0, i32 22
  %aptr140 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf139, i32 0, i32 2
  %84 = load i8*, i8** %aptr140, align 8
  %85 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf141 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %85, i32 0, i32 22
  %aend142 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf141, i32 0, i32 3
  %86 = load i8*, i8** %aend142, align 8
  %cmp143 = icmp ult i8* %84, %86
  br i1 %cmp143, label %if.then145, label %if.else149

if.then145:                                       ; preds = %do.body138
  %87 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf146 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %87, i32 0, i32 22
  %aptr147 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf146, i32 0, i32 2
  %88 = load i8*, i8** %aptr147, align 8
  %incdec.ptr148 = getelementptr inbounds i8, i8* %88, i32 1
  store i8* %incdec.ptr148, i8** %aptr147, align 8
  store i8 3, i8* %88, align 1
  br label %if.end193

if.else149:                                       ; preds = %do.body138
  br label %do.body150

do.body150:                                       ; preds = %if.else149
  %89 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf152 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %89, i32 0, i32 22
  %asiz153 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf152, i32 0, i32 1
  %90 = load i64, i64* %asiz153, align 8
  %add154 = add i64 1, %90
  %add155 = add i64 %add154, 8191
  %and156 = and i64 %add155, -8192
  %conv157 = trunc i64 %and156 to i32
  store i32 %conv157, i32* %nsz151, align 4
  %91 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf159 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %91, i32 0, i32 22
  %aptr160 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf159, i32 0, i32 2
  %92 = load i8*, i8** %aptr160, align 8
  %93 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf161 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %93, i32 0, i32 22
  %arena162 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf161, i32 0, i32 0
  %94 = load i8*, i8** %arena162, align 8
  %sub.ptr.lhs.cast163 = ptrtoint i8* %92 to i64
  %sub.ptr.rhs.cast164 = ptrtoint i8* %94 to i64
  %sub.ptr.sub165 = sub i64 %sub.ptr.lhs.cast163, %sub.ptr.rhs.cast164
  %conv166 = trunc i64 %sub.ptr.sub165 to i32
  store i32 %conv166, i32* %offset158, align 4
  %95 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf167 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %95, i32 0, i32 22
  %arena168 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf167, i32 0, i32 0
  %96 = load i8*, i8** %arena168, align 8
  %97 = load i32, i32* %nsz151, align 4
  %conv169 = sext i32 %97 to i64
  %mul170 = mul i64 %conv169, 1
  %call171 = call i8* @Perl_safesysrealloc(i8* %96, i64 %mul170)
  %98 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf172 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %98, i32 0, i32 22
  %arena173 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf172, i32 0, i32 0
  store i8* %call171, i8** %arena173, align 8
  %99 = load i32, i32* %nsz151, align 4
  %conv174 = sext i32 %99 to i64
  %100 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf175 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %100, i32 0, i32 22
  %asiz176 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf175, i32 0, i32 1
  store i64 %conv174, i64* %asiz176, align 8
  %101 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf177 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %101, i32 0, i32 22
  %arena178 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf177, i32 0, i32 0
  %102 = load i8*, i8** %arena178, align 8
  %103 = load i32, i32* %offset158, align 4
  %idx.ext179 = sext i32 %103 to i64
  %add.ptr180 = getelementptr inbounds i8, i8* %102, i64 %idx.ext179
  %104 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf181 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %104, i32 0, i32 22
  %aptr182 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf181, i32 0, i32 2
  store i8* %add.ptr180, i8** %aptr182, align 8
  %105 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf183 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %105, i32 0, i32 22
  %arena184 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf183, i32 0, i32 0
  %106 = load i8*, i8** %arena184, align 8
  %107 = load i32, i32* %nsz151, align 4
  %idx.ext185 = sext i32 %107 to i64
  %add.ptr186 = getelementptr inbounds i8, i8* %106, i64 %idx.ext185
  %108 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf187 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %108, i32 0, i32 22
  %aend188 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf187, i32 0, i32 3
  store i8* %add.ptr186, i8** %aend188, align 8
  br label %do.end189

do.end189:                                        ; preds = %do.body150
  %109 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf190 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %109, i32 0, i32 22
  %aptr191 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf190, i32 0, i32 2
  %110 = load i8*, i8** %aptr191, align 8
  %incdec.ptr192 = getelementptr inbounds i8, i8* %110, i32 1
  store i8* %incdec.ptr192, i8** %aptr191, align 8
  store i8 3, i8* %110, align 1
  br label %if.end193

if.end193:                                        ; preds = %do.end189, %if.then145
  br label %do.end194

do.end194:                                        ; preds = %if.end193
  br label %if.end202

if.else195:                                       ; preds = %do.body134
  %111 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio196 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %111, i32 0, i32 24
  %112 = load %struct._PerlIO**, %struct._PerlIO*** %fio196, align 8
  %call197 = call i32 @PerlIO_putc(%struct._PerlIO** %112, i32 3)
  %cmp198 = icmp eq i32 %call197, -1
  br i1 %cmp198, label %if.then200, label %if.end201

if.then200:                                       ; preds = %if.else195
  store i32 -1, i32* %retval, align 4
  br label %return

if.end201:                                        ; preds = %if.else195
  br label %if.end202

if.end202:                                        ; preds = %if.end201, %do.end194
  br label %do.end203

do.end203:                                        ; preds = %if.end202
  br label %if.end204

if.end204:                                        ; preds = %do.end203, %do.end132
  br label %do.body205

do.body205:                                       ; preds = %if.end204
  %113 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %113, i32 0, i32 12
  %114 = load i32, i32* %netorder, align 8
  %tobool206 = icmp ne i32 %114, 0
  br i1 %tobool206, label %if.then207, label %if.else290

if.then207:                                       ; preds = %do.body205
  %115 = load i32, i32* %len, align 4
  %call208 = call i32 @my_swap32(i32 %115)
  store i32 %call208, i32* %y, align 4
  %116 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio209 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %116, i32 0, i32 24
  %117 = load %struct._PerlIO**, %struct._PerlIO*** %fio209, align 8
  %tobool210 = icmp ne %struct._PerlIO** %117, null
  br i1 %tobool210, label %if.else282, label %if.then211

if.then211:                                       ; preds = %if.then207
  br label %do.body212

do.body212:                                       ; preds = %if.then211
  br label %do.body213

do.body213:                                       ; preds = %do.body212
  %118 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf214 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %118, i32 0, i32 22
  %aptr215 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf214, i32 0, i32 2
  %119 = load i8*, i8** %aptr215, align 8
  %add.ptr216 = getelementptr inbounds i8, i8* %119, i64 4
  %120 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf217 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %120, i32 0, i32 22
  %aend218 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf217, i32 0, i32 3
  %121 = load i8*, i8** %aend218, align 8
  %cmp219 = icmp ugt i8* %add.ptr216, %121
  br i1 %cmp219, label %if.then221, label %if.end262

if.then221:                                       ; preds = %do.body213
  br label %do.body222

do.body222:                                       ; preds = %if.then221
  %122 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf224 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %122, i32 0, i32 22
  %asiz225 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf224, i32 0, i32 1
  %123 = load i64, i64* %asiz225, align 8
  %add226 = add i64 4, %123
  %add227 = add i64 %add226, 8191
  %and228 = and i64 %add227, -8192
  %conv229 = trunc i64 %and228 to i32
  store i32 %conv229, i32* %nsz223, align 4
  %124 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf231 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %124, i32 0, i32 22
  %aptr232 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf231, i32 0, i32 2
  %125 = load i8*, i8** %aptr232, align 8
  %126 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf233 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %126, i32 0, i32 22
  %arena234 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf233, i32 0, i32 0
  %127 = load i8*, i8** %arena234, align 8
  %sub.ptr.lhs.cast235 = ptrtoint i8* %125 to i64
  %sub.ptr.rhs.cast236 = ptrtoint i8* %127 to i64
  %sub.ptr.sub237 = sub i64 %sub.ptr.lhs.cast235, %sub.ptr.rhs.cast236
  %conv238 = trunc i64 %sub.ptr.sub237 to i32
  store i32 %conv238, i32* %offset230, align 4
  %128 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf239 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %128, i32 0, i32 22
  %arena240 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf239, i32 0, i32 0
  %129 = load i8*, i8** %arena240, align 8
  %130 = load i32, i32* %nsz223, align 4
  %conv241 = sext i32 %130 to i64
  %mul242 = mul i64 %conv241, 1
  %call243 = call i8* @Perl_safesysrealloc(i8* %129, i64 %mul242)
  %131 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf244 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %131, i32 0, i32 22
  %arena245 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf244, i32 0, i32 0
  store i8* %call243, i8** %arena245, align 8
  %132 = load i32, i32* %nsz223, align 4
  %conv246 = sext i32 %132 to i64
  %133 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf247 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %133, i32 0, i32 22
  %asiz248 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf247, i32 0, i32 1
  store i64 %conv246, i64* %asiz248, align 8
  %134 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf249 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %134, i32 0, i32 22
  %arena250 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf249, i32 0, i32 0
  %135 = load i8*, i8** %arena250, align 8
  %136 = load i32, i32* %offset230, align 4
  %idx.ext251 = sext i32 %136 to i64
  %add.ptr252 = getelementptr inbounds i8, i8* %135, i64 %idx.ext251
  %137 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf253 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %137, i32 0, i32 22
  %aptr254 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf253, i32 0, i32 2
  store i8* %add.ptr252, i8** %aptr254, align 8
  %138 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf255 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %138, i32 0, i32 22
  %arena256 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf255, i32 0, i32 0
  %139 = load i8*, i8** %arena256, align 8
  %140 = load i32, i32* %nsz223, align 4
  %idx.ext257 = sext i32 %140 to i64
  %add.ptr258 = getelementptr inbounds i8, i8* %139, i64 %idx.ext257
  %141 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf259 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %141, i32 0, i32 22
  %aend260 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf259, i32 0, i32 3
  store i8* %add.ptr258, i8** %aend260, align 8
  br label %do.end261

do.end261:                                        ; preds = %do.body222
  br label %if.end262

if.end262:                                        ; preds = %do.end261, %do.body213
  br label %do.end263

do.end263:                                        ; preds = %if.end262
  %142 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf264 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %142, i32 0, i32 22
  %aptr265 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf264, i32 0, i32 2
  %143 = load i8*, i8** %aptr265, align 8
  %144 = ptrtoint i8* %143 to i64
  %145 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf266 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %145, i32 0, i32 22
  %aptr267 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf266, i32 0, i32 2
  %146 = load i8*, i8** %aptr267, align 8
  %147 = ptrtoint i8* %146 to i64
  %and268 = and i64 %147, -4
  %cmp269 = icmp eq i64 %144, %and268
  br i1 %cmp269, label %if.then271, label %if.else274

if.then271:                                       ; preds = %do.end263
  %148 = load i32, i32* %y, align 4
  %149 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf272 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %149, i32 0, i32 22
  %aptr273 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf272, i32 0, i32 2
  %150 = load i8*, i8** %aptr273, align 8
  %151 = bitcast i8* %150 to i32*
  store i32 %148, i32* %151, align 4
  br label %if.end277

if.else274:                                       ; preds = %do.end263
  %152 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf275 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %152, i32 0, i32 22
  %aptr276 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf275, i32 0, i32 2
  %153 = load i8*, i8** %aptr276, align 8
  %154 = bitcast i32* %y to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %153, i8* align 4 %154, i64 4, i1 false)
  br label %if.end277

if.end277:                                        ; preds = %if.else274, %if.then271
  %155 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf278 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %155, i32 0, i32 22
  %aptr279 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf278, i32 0, i32 2
  %156 = load i8*, i8** %aptr279, align 8
  %add.ptr280 = getelementptr inbounds i8, i8* %156, i64 4
  store i8* %add.ptr280, i8** %aptr279, align 8
  br label %do.end281

do.end281:                                        ; preds = %if.end277
  br label %if.end289

if.else282:                                       ; preds = %if.then207
  %157 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio283 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %157, i32 0, i32 24
  %158 = load %struct._PerlIO**, %struct._PerlIO*** %fio283, align 8
  %159 = bitcast i32* %y to i8*
  %call284 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %158, i8* %159, i64 4)
  %cmp285 = icmp ne i64 %call284, 4
  br i1 %cmp285, label %if.then287, label %if.end288

if.then287:                                       ; preds = %if.else282
  store i32 -1, i32* %retval, align 4
  br label %return

if.end288:                                        ; preds = %if.else282
  br label %if.end289

if.end289:                                        ; preds = %if.end288, %do.end281
  br label %if.end372

if.else290:                                       ; preds = %do.body205
  %160 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio291 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %160, i32 0, i32 24
  %161 = load %struct._PerlIO**, %struct._PerlIO*** %fio291, align 8
  %tobool292 = icmp ne %struct._PerlIO** %161, null
  br i1 %tobool292, label %if.else364, label %if.then293

if.then293:                                       ; preds = %if.else290
  br label %do.body294

do.body294:                                       ; preds = %if.then293
  br label %do.body295

do.body295:                                       ; preds = %do.body294
  %162 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf296 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %162, i32 0, i32 22
  %aptr297 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf296, i32 0, i32 2
  %163 = load i8*, i8** %aptr297, align 8
  %add.ptr298 = getelementptr inbounds i8, i8* %163, i64 4
  %164 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf299 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %164, i32 0, i32 22
  %aend300 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf299, i32 0, i32 3
  %165 = load i8*, i8** %aend300, align 8
  %cmp301 = icmp ugt i8* %add.ptr298, %165
  br i1 %cmp301, label %if.then303, label %if.end344

if.then303:                                       ; preds = %do.body295
  br label %do.body304

do.body304:                                       ; preds = %if.then303
  %166 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf306 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %166, i32 0, i32 22
  %asiz307 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf306, i32 0, i32 1
  %167 = load i64, i64* %asiz307, align 8
  %add308 = add i64 4, %167
  %add309 = add i64 %add308, 8191
  %and310 = and i64 %add309, -8192
  %conv311 = trunc i64 %and310 to i32
  store i32 %conv311, i32* %nsz305, align 4
  %168 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf313 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %168, i32 0, i32 22
  %aptr314 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf313, i32 0, i32 2
  %169 = load i8*, i8** %aptr314, align 8
  %170 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf315 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %170, i32 0, i32 22
  %arena316 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf315, i32 0, i32 0
  %171 = load i8*, i8** %arena316, align 8
  %sub.ptr.lhs.cast317 = ptrtoint i8* %169 to i64
  %sub.ptr.rhs.cast318 = ptrtoint i8* %171 to i64
  %sub.ptr.sub319 = sub i64 %sub.ptr.lhs.cast317, %sub.ptr.rhs.cast318
  %conv320 = trunc i64 %sub.ptr.sub319 to i32
  store i32 %conv320, i32* %offset312, align 4
  %172 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf321 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %172, i32 0, i32 22
  %arena322 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf321, i32 0, i32 0
  %173 = load i8*, i8** %arena322, align 8
  %174 = load i32, i32* %nsz305, align 4
  %conv323 = sext i32 %174 to i64
  %mul324 = mul i64 %conv323, 1
  %call325 = call i8* @Perl_safesysrealloc(i8* %173, i64 %mul324)
  %175 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf326 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %175, i32 0, i32 22
  %arena327 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf326, i32 0, i32 0
  store i8* %call325, i8** %arena327, align 8
  %176 = load i32, i32* %nsz305, align 4
  %conv328 = sext i32 %176 to i64
  %177 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf329 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %177, i32 0, i32 22
  %asiz330 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf329, i32 0, i32 1
  store i64 %conv328, i64* %asiz330, align 8
  %178 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf331 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %178, i32 0, i32 22
  %arena332 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf331, i32 0, i32 0
  %179 = load i8*, i8** %arena332, align 8
  %180 = load i32, i32* %offset312, align 4
  %idx.ext333 = sext i32 %180 to i64
  %add.ptr334 = getelementptr inbounds i8, i8* %179, i64 %idx.ext333
  %181 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf335 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %181, i32 0, i32 22
  %aptr336 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf335, i32 0, i32 2
  store i8* %add.ptr334, i8** %aptr336, align 8
  %182 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf337 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %182, i32 0, i32 22
  %arena338 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf337, i32 0, i32 0
  %183 = load i8*, i8** %arena338, align 8
  %184 = load i32, i32* %nsz305, align 4
  %idx.ext339 = sext i32 %184 to i64
  %add.ptr340 = getelementptr inbounds i8, i8* %183, i64 %idx.ext339
  %185 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf341 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %185, i32 0, i32 22
  %aend342 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf341, i32 0, i32 3
  store i8* %add.ptr340, i8** %aend342, align 8
  br label %do.end343

do.end343:                                        ; preds = %do.body304
  br label %if.end344

if.end344:                                        ; preds = %do.end343, %do.body295
  br label %do.end345

do.end345:                                        ; preds = %if.end344
  %186 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf346 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %186, i32 0, i32 22
  %aptr347 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf346, i32 0, i32 2
  %187 = load i8*, i8** %aptr347, align 8
  %188 = ptrtoint i8* %187 to i64
  %189 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf348 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %189, i32 0, i32 22
  %aptr349 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf348, i32 0, i32 2
  %190 = load i8*, i8** %aptr349, align 8
  %191 = ptrtoint i8* %190 to i64
  %and350 = and i64 %191, -4
  %cmp351 = icmp eq i64 %188, %and350
  br i1 %cmp351, label %if.then353, label %if.else356

if.then353:                                       ; preds = %do.end345
  %192 = load i32, i32* %len, align 4
  %193 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf354 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %193, i32 0, i32 22
  %aptr355 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf354, i32 0, i32 2
  %194 = load i8*, i8** %aptr355, align 8
  %195 = bitcast i8* %194 to i32*
  store i32 %192, i32* %195, align 4
  br label %if.end359

if.else356:                                       ; preds = %do.end345
  %196 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf357 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %196, i32 0, i32 22
  %aptr358 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf357, i32 0, i32 2
  %197 = load i8*, i8** %aptr358, align 8
  %198 = bitcast i32* %len to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %197, i8* align 4 %198, i64 4, i1 false)
  br label %if.end359

if.end359:                                        ; preds = %if.else356, %if.then353
  %199 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf360 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %199, i32 0, i32 22
  %aptr361 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf360, i32 0, i32 2
  %200 = load i8*, i8** %aptr361, align 8
  %add.ptr362 = getelementptr inbounds i8, i8* %200, i64 4
  store i8* %add.ptr362, i8** %aptr361, align 8
  br label %do.end363

do.end363:                                        ; preds = %if.end359
  br label %if.end371

if.else364:                                       ; preds = %if.else290
  %201 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio365 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %201, i32 0, i32 24
  %202 = load %struct._PerlIO**, %struct._PerlIO*** %fio365, align 8
  %203 = bitcast i32* %len to i8*
  %call366 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %202, i8* %203, i64 4)
  %cmp367 = icmp ne i64 %call366, 4
  br i1 %cmp367, label %if.then369, label %if.end370

if.then369:                                       ; preds = %if.else364
  store i32 -1, i32* %retval, align 4
  br label %return

if.end370:                                        ; preds = %if.else364
  br label %if.end371

if.end371:                                        ; preds = %if.end370, %do.end363
  br label %if.end372

if.end372:                                        ; preds = %if.end371, %if.end289
  br label %do.end373

do.end373:                                        ; preds = %if.end372
  %204 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %sv_flags374 = getelementptr inbounds %struct.hv, %struct.hv* %204, i32 0, i32 2
  %205 = load i32, i32* %sv_flags374, align 4
  %and375 = and i32 %205, 33554432
  %tobool376 = icmp ne i32 %and375, 0
  br i1 %tobool376, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end373
  %206 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %206, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %207 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %208 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %sv_any377 = getelementptr inbounds %struct.hv, %struct.hv* %208, i32 0, i32 0
  %209 = load %struct.xpvhv*, %struct.xpvhv** %sv_any377, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %209, i32 0, i32 3
  %210 = load i64, i64* %xhv_max, align 8
  %add378 = add i64 %210, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %207, i64 %add378
  %211 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_riter = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %211, i32 0, i32 3
  %212 = load i32, i32* %xhv_riter, align 8
  br label %cond.end

cond.false:                                       ; preds = %do.end373
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond379 = phi i32 [ %212, %cond.true ], [ -1, %cond.false ]
  store i32 %cond379, i32* %riter, align 4
  %213 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %sv_flags380 = getelementptr inbounds %struct.hv, %struct.hv* %213, i32 0, i32 2
  %214 = load i32, i32* %sv_flags380, align 4
  %and381 = and i32 %214, 33554432
  %tobool382 = icmp ne i32 %and381, 0
  br i1 %tobool382, label %cond.true383, label %cond.false390

cond.true383:                                     ; preds = %cond.end
  %215 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %sv_u384 = getelementptr inbounds %struct.hv, %struct.hv* %215, i32 0, i32 3
  %svu_hash385 = bitcast %union.anon.4* %sv_u384 to %struct.he***
  %216 = load %struct.he**, %struct.he*** %svu_hash385, align 8
  %217 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %sv_any386 = getelementptr inbounds %struct.hv, %struct.hv* %217, i32 0, i32 0
  %218 = load %struct.xpvhv*, %struct.xpvhv** %sv_any386, align 8
  %xhv_max387 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %218, i32 0, i32 3
  %219 = load i64, i64* %xhv_max387, align 8
  %add388 = add i64 %219, 1
  %arrayidx389 = getelementptr inbounds %struct.he*, %struct.he** %216, i64 %add388
  %220 = bitcast %struct.he** %arrayidx389 to %struct.xpvhv_aux*
  %xhv_eiter = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %220, i32 0, i32 2
  %221 = load %struct.he*, %struct.he** %xhv_eiter, align 8
  br label %cond.end391

cond.false390:                                    ; preds = %cond.end
  br label %cond.end391

cond.end391:                                      ; preds = %cond.false390, %cond.true383
  %cond392 = phi %struct.he* [ %221, %cond.true383 ], [ null, %cond.false390 ]
  store %struct.he* %cond392, %struct.he** %eiter, align 8
  %222 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %call393 = call i32 @Perl_hv_iterinit(%struct.hv* %222)
  %223 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %optype = getelementptr inbounds %struct.stcxt, %struct.stcxt* %223, i32 0, i32 1
  %224 = load i32, i32* %optype, align 4
  %and394 = and i32 %224, 4
  %tobool395 = icmp ne i32 %and394, 0
  br i1 %tobool395, label %if.else937, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.end391
  %225 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %canonical = getelementptr inbounds %struct.stcxt, %struct.stcxt* %225, i32 0, i32 17
  %226 = load i32, i32* %canonical, align 8
  %cmp396 = icmp eq i32 %226, 1
  br i1 %cmp396, label %if.then514, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %227 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %canonical398 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %227, i32 0, i32 17
  %228 = load i32, i32* %canonical398, align 8
  %cmp399 = icmp slt i32 %228, 0
  br i1 %cmp399, label %land.lhs.true401, label %if.else937

land.lhs.true401:                                 ; preds = %lor.lhs.false
  %call402 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i32 1)
  %tobool403 = icmp ne %struct.sv* %call402, null
  br i1 %tobool403, label %cond.true404, label %cond.false405

cond.true404:                                     ; preds = %land.lhs.true401
  br i1 true, label %land.rhs, label %land.end509

cond.false405:                                    ; preds = %land.lhs.true401
  br i1 false, label %land.rhs, label %land.end509

land.rhs:                                         ; preds = %cond.false405, %cond.true404
  %call406 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i32 1)
  %sv_flags407 = getelementptr inbounds %struct.sv, %struct.sv* %call406, i32 0, i32 2
  %229 = load i32, i32* %sv_flags407, align 4
  %and408 = and i32 %229, 2097152
  %tobool409 = icmp ne i32 %and408, 0
  br i1 %tobool409, label %cond.true410, label %cond.false411

cond.true410:                                     ; preds = %land.rhs
  br i1 true, label %cond.true412, label %cond.false416

cond.false411:                                    ; preds = %land.rhs
  br i1 false, label %cond.true412, label %cond.false416

cond.true412:                                     ; preds = %cond.false411, %cond.true410
  %call413 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i32 1)
  %call414 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %call413, i32 2)
  %conv415 = zext i1 %call414 to i32
  br label %cond.end506

cond.false416:                                    ; preds = %cond.false411, %cond.true410
  %call417 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i32 1)
  %sv_flags418 = getelementptr inbounds %struct.sv, %struct.sv* %call417, i32 0, i32 2
  %230 = load i32, i32* %sv_flags418, align 4
  %and419 = and i32 %230, 65280
  %tobool420 = icmp ne i32 %and419, 0
  br i1 %tobool420, label %cond.false434, label %lor.lhs.false421

lor.lhs.false421:                                 ; preds = %cond.false416
  %call422 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i32 1)
  %sv_flags423 = getelementptr inbounds %struct.sv, %struct.sv* %call422, i32 0, i32 2
  %231 = load i32, i32* %sv_flags423, align 4
  %and424 = and i32 %231, 255
  %cmp425 = icmp eq i32 %and424, 8
  br i1 %cmp425, label %cond.false434, label %lor.lhs.false427

lor.lhs.false427:                                 ; preds = %lor.lhs.false421
  %call428 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i32 1)
  %sv_flags429 = getelementptr inbounds %struct.sv, %struct.sv* %call428, i32 0, i32 2
  %232 = load i32, i32* %sv_flags429, align 4
  %and430 = and i32 %232, 16826623
  %cmp431 = icmp eq i32 %and430, 16777226
  br i1 %cmp431, label %cond.false434, label %cond.true433

cond.true433:                                     ; preds = %lor.lhs.false427
  br label %cond.end504

cond.false434:                                    ; preds = %lor.lhs.false427, %lor.lhs.false421, %cond.false416
  %call435 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i32 1)
  %sv_flags436 = getelementptr inbounds %struct.sv, %struct.sv* %call435, i32 0, i32 2
  %233 = load i32, i32* %sv_flags436, align 4
  %and437 = and i32 %233, 1024
  %tobool438 = icmp ne i32 %and437, 0
  br i1 %tobool438, label %cond.true439, label %cond.false461

cond.true439:                                     ; preds = %cond.false434
  %call440 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i32 1)
  %sv_any441 = getelementptr inbounds %struct.sv, %struct.sv* %call440, i32 0, i32 0
  %234 = load i8*, i8** %sv_any441, align 8
  %235 = bitcast i8* %234 to %struct.xpv*
  %tobool442 = icmp ne %struct.xpv* %235, null
  br i1 %tobool442, label %land.rhs443, label %land.end460

land.rhs443:                                      ; preds = %cond.true439
  %call444 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i32 1)
  %sv_any445 = getelementptr inbounds %struct.sv, %struct.sv* %call444, i32 0, i32 0
  %236 = load i8*, i8** %sv_any445, align 8
  %237 = bitcast i8* %236 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %237, i32 0, i32 2
  %238 = load i64, i64* %xpv_cur, align 8
  %cmp446 = icmp ugt i64 %238, 1
  br i1 %cmp446, label %lor.end459, label %lor.rhs448

lor.rhs448:                                       ; preds = %land.rhs443
  %call449 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i32 1)
  %sv_any450 = getelementptr inbounds %struct.sv, %struct.sv* %call449, i32 0, i32 0
  %239 = load i8*, i8** %sv_any450, align 8
  %240 = bitcast i8* %239 to %struct.xpv*
  %xpv_cur451 = getelementptr inbounds %struct.xpv, %struct.xpv* %240, i32 0, i32 2
  %241 = load i64, i64* %xpv_cur451, align 8
  %tobool452 = icmp ne i64 %241, 0
  br i1 %tobool452, label %land.rhs453, label %land.end

land.rhs453:                                      ; preds = %lor.rhs448
  %call454 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i32 1)
  %sv_u455 = getelementptr inbounds %struct.sv, %struct.sv* %call454, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u455 to i8**
  %242 = load i8*, i8** %svu_pv, align 8
  %243 = load i8, i8* %242, align 1
  %conv456 = sext i8 %243 to i32
  %cmp457 = icmp ne i32 %conv456, 48
  br label %land.end

land.end:                                         ; preds = %land.rhs453, %lor.rhs448
  %244 = phi i1 [ false, %lor.rhs448 ], [ %cmp457, %land.rhs453 ]
  br label %lor.end459

lor.end459:                                       ; preds = %land.end, %land.rhs443
  %245 = phi i1 [ true, %land.rhs443 ], [ %244, %land.end ]
  br label %land.end460

land.end460:                                      ; preds = %lor.end459, %cond.true439
  %246 = phi i1 [ false, %cond.true439 ], [ %245, %lor.end459 ]
  %land.ext = zext i1 %246 to i32
  br label %cond.end502

cond.false461:                                    ; preds = %cond.false434
  %call462 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i32 1)
  %sv_flags463 = getelementptr inbounds %struct.sv, %struct.sv* %call462, i32 0, i32 2
  %247 = load i32, i32* %sv_flags463, align 4
  %and464 = and i32 %247, 768
  %tobool465 = icmp ne i32 %and464, 0
  br i1 %tobool465, label %cond.true466, label %cond.false496

cond.true466:                                     ; preds = %cond.false461
  %call467 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i32 1)
  %sv_flags468 = getelementptr inbounds %struct.sv, %struct.sv* %call467, i32 0, i32 2
  %248 = load i32, i32* %sv_flags468, align 4
  %and469 = and i32 %248, 256
  %tobool470 = icmp ne i32 %and469, 0
  br i1 %tobool470, label %land.lhs.true471, label %lor.rhs476

land.lhs.true471:                                 ; preds = %cond.true466
  %call472 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i32 1)
  %sv_any473 = getelementptr inbounds %struct.sv, %struct.sv* %call472, i32 0, i32 0
  %249 = load i8*, i8** %sv_any473, align 8
  %250 = bitcast i8* %249 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %250, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %251 = load i64, i64* %xivu_iv, align 8
  %cmp474 = icmp ne i64 %251, 0
  br i1 %cmp474, label %lor.end495, label %lor.rhs476

lor.rhs476:                                       ; preds = %land.lhs.true471, %cond.true466
  %call477 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i32 1)
  %sv_flags478 = getelementptr inbounds %struct.sv, %struct.sv* %call477, i32 0, i32 2
  %252 = load i32, i32* %sv_flags478, align 4
  %and479 = and i32 %252, 512
  %tobool480 = icmp ne i32 %and479, 0
  br i1 %tobool480, label %land.rhs481, label %land.end493

land.rhs481:                                      ; preds = %lor.rhs476
  %call482 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i32 1)
  %sv_any483 = getelementptr inbounds %struct.sv, %struct.sv* %call482, i32 0, i32 0
  %253 = load i8*, i8** %sv_any483, align 8
  %254 = bitcast i8* %253 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %254, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %255 = load double, double* %xnv_nv, align 8
  %cmp484 = fcmp uno double %255, %255
  br i1 %cmp484, label %lor.end492, label %lor.rhs485

lor.rhs485:                                       ; preds = %land.rhs481
  %call486 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i32 1)
  %sv_any487 = getelementptr inbounds %struct.sv, %struct.sv* %call486, i32 0, i32 0
  %256 = load i8*, i8** %sv_any487, align 8
  %257 = bitcast i8* %256 to %struct.xpvnv*
  %xnv_u488 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %257, i32 0, i32 5
  %xnv_nv489 = bitcast %union._xnvu* %xnv_u488 to double*
  %258 = load double, double* %xnv_nv489, align 8
  %cmp490 = fcmp une double %258, 0.000000e+00
  br label %lor.end492

lor.end492:                                       ; preds = %lor.rhs485, %land.rhs481
  %259 = phi i1 [ true, %land.rhs481 ], [ %cmp490, %lor.rhs485 ]
  br label %land.end493

land.end493:                                      ; preds = %lor.end492, %lor.rhs476
  %260 = phi i1 [ false, %lor.rhs476 ], [ %259, %lor.end492 ]
  br label %lor.end495

lor.end495:                                       ; preds = %land.end493, %land.lhs.true471
  %261 = phi i1 [ true, %land.lhs.true471 ], [ %260, %land.end493 ]
  %lor.ext = zext i1 %261 to i32
  br label %cond.end500

cond.false496:                                    ; preds = %cond.false461
  %call497 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i32 1)
  %call498 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %call497, i32 0)
  %conv499 = zext i1 %call498 to i32
  br label %cond.end500

cond.end500:                                      ; preds = %cond.false496, %lor.end495
  %cond501 = phi i32 [ %lor.ext, %lor.end495 ], [ %conv499, %cond.false496 ]
  br label %cond.end502

cond.end502:                                      ; preds = %cond.end500, %land.end460
  %cond503 = phi i32 [ %land.ext, %land.end460 ], [ %cond501, %cond.end500 ]
  br label %cond.end504

cond.end504:                                      ; preds = %cond.end502, %cond.true433
  %cond505 = phi i32 [ 0, %cond.true433 ], [ %cond503, %cond.end502 ]
  br label %cond.end506

cond.end506:                                      ; preds = %cond.end504, %cond.true412
  %cond507 = phi i32 [ %conv415, %cond.true412 ], [ %cond505, %cond.end504 ]
  %tobool508 = icmp ne i32 %cond507, 0
  br label %land.end509

land.end509:                                      ; preds = %cond.end506, %cond.false405, %cond.true404
  %262 = phi i1 [ false, %cond.false405 ], [ false, %cond.true404 ], [ %tobool508, %cond.end506 ]
  %263 = zext i1 %262 to i64
  %cond511 = select i1 %262, i32 1, i32 0
  %264 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %canonical512 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %264, i32 0, i32 17
  store i32 %cond511, i32* %canonical512, align 8
  %tobool513 = icmp ne i32 %cond511, 0
  br i1 %tobool513, label %if.then514, label %if.else937

if.then514:                                       ; preds = %land.end509, %land.lhs.true
  %call515 = call %struct.sv* @Perl_newSV_type(i32 11)
  %265 = bitcast %struct.sv* %call515 to i8*
  %266 = bitcast i8* %265 to %struct.av*
  store %struct.av* %266, %struct.av** %av, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then514
  %267 = load i32, i32* %i, align 4
  %268 = load i32, i32* %len, align 4
  %cmp516 = icmp slt i32 %267, %268
  br i1 %cmp516, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %269 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %call518 = call %struct.he* @Perl_hv_iternext_flags(%struct.hv* %269, i32 1)
  store %struct.he* %call518, %struct.he** %he, align 8
  %270 = load %struct.he*, %struct.he** %he, align 8
  %tobool519 = icmp ne %struct.he* %270, null
  br i1 %tobool519, label %if.end523, label %if.then520

if.then520:                                       ; preds = %for.body
  br label %do.body521

do.body521:                                       ; preds = %if.then520
  %271 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %271, i32 0, i32 19
  store i32 1, i32* %s_dirty, align 8
  %272 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %273 = load i32, i32* %len, align 4
  %274 = load i32, i32* %i, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.39, i64 0, i64 0), %struct.hv* %272, i32 %273, i32 %274)
  br label %do.end522

do.end522:                                        ; preds = %do.body521
  br label %if.end523

if.end523:                                        ; preds = %do.end522, %for.body
  %275 = load %struct.he*, %struct.he** %he, align 8
  %call524 = call %struct.sv* @Perl_hv_iterkeysv(%struct.he* %275)
  store %struct.sv* %call524, %struct.sv** %key, align 8
  %276 = load %struct.av*, %struct.av** %av, align 8
  %277 = load %struct.av*, %struct.av** %av, align 8
  %sv_any525 = getelementptr inbounds %struct.av, %struct.av* %277, i32 0, i32 0
  %278 = load %struct.xpvav*, %struct.xpvav** %sv_any525, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %278, i32 0, i32 2
  %279 = load i64, i64* %xav_fill, align 8
  %add526 = add nsw i64 %279, 1
  %280 = load %struct.sv*, %struct.sv** %key, align 8
  %call527 = call %struct.sv** @Perl_av_store(%struct.av* %276, i64 %add526, %struct.sv* %280)
  br label %for.inc

for.inc:                                          ; preds = %if.end523
  %281 = load i32, i32* %i, align 4
  %inc = add nsw i32 %281, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %282 = load %struct.av*, %struct.av** %av, align 8
  %sv_u528 = getelementptr inbounds %struct.av, %struct.av* %282, i32 0, i32 3
  %svu_array = bitcast %union.anon.2* %sv_u528 to %struct.sv***
  %283 = load %struct.sv**, %struct.sv*** %svu_array, align 8
  %284 = load i32, i32* %len, align 4
  %conv529 = sext i32 %284 to i64
  call void @Perl_sortsv(%struct.sv** %283, i64 %conv529, i32 (%struct.sv*, %struct.sv*)* @Perl_sv_cmp)
  store i32 0, i32* %i, align 4
  br label %for.cond530

for.cond530:                                      ; preds = %for.inc934, %for.end
  %285 = load i32, i32* %i, align 4
  %286 = load i32, i32* %len, align 4
  %cmp531 = icmp slt i32 %285, %286
  br i1 %cmp531, label %for.body533, label %for.end936

for.body533:                                      ; preds = %for.cond530
  %287 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %sv_any534 = getelementptr inbounds %struct.hv, %struct.hv* %287, i32 0, i32 0
  %288 = load %struct.xpvhv*, %struct.xpvhv** %sv_any534, align 8
  %289 = bitcast %struct.xpvhv* %288 to %struct.xpvmg*
  %xmg_u = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %289, i32 0, i32 1
  %xmg_magic = bitcast %union._xmgu* %xmg_u to %struct.magic**
  %290 = load %struct.magic*, %struct.magic** %xmg_magic, align 8
  %tobool535 = icmp ne %struct.magic* %290, null
  br i1 %tobool535, label %cond.true536, label %cond.false538

cond.true536:                                     ; preds = %for.body533
  %291 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %call537 = call i32 @Perl_hv_placeholders_get(%struct.hv* %291)
  br label %cond.end539

cond.false538:                                    ; preds = %for.body533
  br label %cond.end539

cond.end539:                                      ; preds = %cond.false538, %cond.true536
  %cond540 = phi i32 [ %call537, %cond.true536 ], [ 0, %cond.false538 ]
  store i32 %cond540, i32* %placeholders, align 4
  store i8 0, i8* %flags, align 1
  %292 = load %struct.av*, %struct.av** %av, align 8
  %call542 = call %struct.sv* @Perl_av_shift(%struct.av* %292)
  store %struct.sv* %call542, %struct.sv** %key541, align 8
  %293 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %294 = load %struct.sv*, %struct.sv** %key541, align 8
  %call544 = call i8* @Perl_hv_common(%struct.hv* %293, %struct.sv* %294, i8* null, i64 0, i32 0, i32 0, %struct.sv* null, i32 0)
  %295 = bitcast i8* %call544 to %struct.he*
  store %struct.he* %295, %struct.he** %he543, align 8
  %296 = load %struct.he*, %struct.he** %he543, align 8
  %tobool545 = icmp ne %struct.he* %296, null
  br i1 %tobool545, label %if.then546, label %if.else550

if.then546:                                       ; preds = %cond.end539
  %297 = load %struct.he*, %struct.he** %he543, align 8
  %he_valu = getelementptr inbounds %struct.he, %struct.he* %297, i32 0, i32 2
  %hent_val = bitcast %union.anon.0* %he_valu to %struct.sv**
  %298 = load %struct.sv*, %struct.sv** %hent_val, align 8
  store %struct.sv* %298, %struct.sv** %val, align 8
  %tobool547 = icmp ne %struct.sv* %298, null
  br i1 %tobool547, label %if.end549, label %if.then548

if.then548:                                       ; preds = %if.then546
  store i32 1, i32* %retval, align 4
  br label %return

if.end549:                                        ; preds = %if.then546
  br label %if.end555

if.else550:                                       ; preds = %cond.end539
  %299 = load i32, i32* %placeholders, align 4
  %dec = add nsw i32 %299, -1
  store i32 %dec, i32* %placeholders, align 4
  %cmp551 = icmp slt i32 %299, 0
  br i1 %cmp551, label %if.then553, label %if.end554

if.then553:                                       ; preds = %if.else550
  store i32 1, i32* %retval, align 4
  br label %return

if.end554:                                        ; preds = %if.else550
  store %struct.sv* @PL_sv_undef, %struct.sv** %val, align 8
  store i8 16, i8* %flags, align 1
  br label %if.end555

if.end555:                                        ; preds = %if.end554, %if.end549
  %300 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %301 = load %struct.sv*, %struct.sv** %val, align 8
  %call556 = call i32 @store(%struct.stcxt* %300, %struct.sv* %301)
  store i32 %call556, i32* %ret, align 4
  %tobool557 = icmp ne i32 %call556, 0
  br i1 %tobool557, label %if.then558, label %if.end559

if.then558:                                       ; preds = %if.end555
  br label %out

if.end559:                                        ; preds = %if.end555
  %302 = load i8, i8* %hash_flags, align 1
  %conv560 = zext i8 %302 to i32
  %and561 = and i32 %conv560, 1
  %tobool562 = icmp ne i32 %and561, 0
  br i1 %tobool562, label %land.lhs.true563, label %if.end570

land.lhs.true563:                                 ; preds = %if.end559
  %303 = load %struct.sv*, %struct.sv** %val, align 8
  %sv_flags564 = getelementptr inbounds %struct.sv, %struct.sv* %303, i32 0, i32 2
  %304 = load i32, i32* %sv_flags564, align 4
  %and565 = and i32 %304, 134283264
  %tobool566 = icmp ne i32 %and565, 0
  br i1 %tobool566, label %if.then567, label %if.end570

if.then567:                                       ; preds = %land.lhs.true563
  %305 = load i8, i8* %flags, align 1
  %conv568 = zext i8 %305 to i32
  %or = or i32 %conv568, 4
  %conv569 = trunc i32 %or to i8
  store i8 %conv569, i8* %flags, align 1
  br label %if.end570

if.end570:                                        ; preds = %if.then567, %land.lhs.true563, %if.end559
  %306 = load %struct.sv*, %struct.sv** %key541, align 8
  %sv_flags571 = getelementptr inbounds %struct.sv, %struct.sv* %306, i32 0, i32 2
  %307 = load i32, i32* %sv_flags571, align 4
  %and572 = and i32 %307, 2098176
  %cmp573 = icmp eq i32 %and572, 1024
  br i1 %cmp573, label %cond.true575, label %cond.false580

cond.true575:                                     ; preds = %if.end570
  %308 = load %struct.sv*, %struct.sv** %key541, align 8
  %sv_any576 = getelementptr inbounds %struct.sv, %struct.sv* %308, i32 0, i32 0
  %309 = load i8*, i8** %sv_any576, align 8
  %310 = bitcast i8* %309 to %struct.xpv*
  %xpv_cur577 = getelementptr inbounds %struct.xpv, %struct.xpv* %310, i32 0, i32 2
  %311 = load i64, i64* %xpv_cur577, align 8
  store i64 %311, i64* %keylen_tmp, align 8
  %312 = load %struct.sv*, %struct.sv** %key541, align 8
  %sv_u578 = getelementptr inbounds %struct.sv, %struct.sv* %312, i32 0, i32 3
  %svu_pv579 = bitcast %union.anon* %sv_u578 to i8**
  %313 = load i8*, i8** %svu_pv579, align 8
  br label %cond.end582

cond.false580:                                    ; preds = %if.end570
  %314 = load %struct.sv*, %struct.sv** %key541, align 8
  %call581 = call i8* @Perl_sv_2pv_flags(%struct.sv* %314, i64* %keylen_tmp, i32 2)
  br label %cond.end582

cond.end582:                                      ; preds = %cond.false580, %cond.true575
  %cond583 = phi i8* [ %313, %cond.true575 ], [ %call581, %cond.false580 ]
  store i8* %cond583, i8** %keyval, align 8
  %315 = load i64, i64* %keylen_tmp, align 8
  %conv584 = trunc i64 %315 to i32
  store i32 %conv584, i32* %keylen, align 4
  %316 = load %struct.sv*, %struct.sv** %key541, align 8
  %sv_flags585 = getelementptr inbounds %struct.sv, %struct.sv* %316, i32 0, i32 2
  %317 = load i32, i32* %sv_flags585, align 4
  %and586 = and i32 %317, 536870912
  %tobool587 = icmp ne i32 %and586, 0
  br i1 %tobool587, label %if.then588, label %if.end602

if.then588:                                       ; preds = %cond.end582
  %318 = load i8*, i8** %keyval, align 8
  store i8* %318, i8** %keysave, align 8
  store i8 1, i8* %is_utf8, align 1
  %319 = load i8*, i8** %keyval, align 8
  %call589 = call i8* @Perl_bytes_from_utf8(i8* %319, i64* %keylen_tmp, i8* %is_utf8)
  store i8* %call589, i8** %keyval, align 8
  %320 = load i8*, i8** %keyval, align 8
  %321 = load i8*, i8** %keysave, align 8
  %cmp590 = icmp ne i8* %320, %321
  br i1 %cmp590, label %if.then592, label %if.else597

if.then592:                                       ; preds = %if.then588
  %322 = load i64, i64* %keylen_tmp, align 8
  %conv593 = trunc i64 %322 to i32
  store i32 %conv593, i32* %keylen, align 4
  %323 = load i8, i8* %flags, align 1
  %conv594 = zext i8 %323 to i32
  %or595 = or i32 %conv594, 2
  %conv596 = trunc i32 %or595 to i8
  store i8 %conv596, i8* %flags, align 1
  br label %if.end601

if.else597:                                       ; preds = %if.then588
  %324 = load i8, i8* %flags, align 1
  %conv598 = zext i8 %324 to i32
  %or599 = or i32 %conv598, 1
  %conv600 = trunc i32 %or599 to i8
  store i8 %conv600, i8* %flags, align 1
  br label %if.end601

if.end601:                                        ; preds = %if.else597, %if.then592
  br label %if.end602

if.end602:                                        ; preds = %if.end601, %cond.end582
  %325 = load i32, i32* %flagged_hash, align 4
  %tobool603 = icmp ne i32 %325, 0
  br i1 %tobool603, label %if.then604, label %if.else676

if.then604:                                       ; preds = %if.end602
  br label %do.body605

do.body605:                                       ; preds = %if.then604
  %326 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio606 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %326, i32 0, i32 24
  %327 = load %struct._PerlIO**, %struct._PerlIO*** %fio606, align 8
  %tobool607 = icmp ne %struct._PerlIO** %327, null
  br i1 %tobool607, label %if.else666, label %if.then608

if.then608:                                       ; preds = %do.body605
  br label %do.body609

do.body609:                                       ; preds = %if.then608
  %328 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf610 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %328, i32 0, i32 22
  %aptr611 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf610, i32 0, i32 2
  %329 = load i8*, i8** %aptr611, align 8
  %330 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf612 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %330, i32 0, i32 22
  %aend613 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf612, i32 0, i32 3
  %331 = load i8*, i8** %aend613, align 8
  %cmp614 = icmp ult i8* %329, %331
  br i1 %cmp614, label %if.then616, label %if.else620

if.then616:                                       ; preds = %do.body609
  %332 = load i8, i8* %flags, align 1
  %333 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf617 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %333, i32 0, i32 22
  %aptr618 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf617, i32 0, i32 2
  %334 = load i8*, i8** %aptr618, align 8
  %incdec.ptr619 = getelementptr inbounds i8, i8* %334, i32 1
  store i8* %incdec.ptr619, i8** %aptr618, align 8
  store i8 %332, i8* %334, align 1
  br label %if.end664

if.else620:                                       ; preds = %do.body609
  br label %do.body621

do.body621:                                       ; preds = %if.else620
  %335 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf623 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %335, i32 0, i32 22
  %asiz624 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf623, i32 0, i32 1
  %336 = load i64, i64* %asiz624, align 8
  %add625 = add i64 1, %336
  %add626 = add i64 %add625, 8191
  %and627 = and i64 %add626, -8192
  %conv628 = trunc i64 %and627 to i32
  store i32 %conv628, i32* %nsz622, align 4
  %337 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf630 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %337, i32 0, i32 22
  %aptr631 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf630, i32 0, i32 2
  %338 = load i8*, i8** %aptr631, align 8
  %339 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf632 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %339, i32 0, i32 22
  %arena633 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf632, i32 0, i32 0
  %340 = load i8*, i8** %arena633, align 8
  %sub.ptr.lhs.cast634 = ptrtoint i8* %338 to i64
  %sub.ptr.rhs.cast635 = ptrtoint i8* %340 to i64
  %sub.ptr.sub636 = sub i64 %sub.ptr.lhs.cast634, %sub.ptr.rhs.cast635
  %conv637 = trunc i64 %sub.ptr.sub636 to i32
  store i32 %conv637, i32* %offset629, align 4
  %341 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf638 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %341, i32 0, i32 22
  %arena639 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf638, i32 0, i32 0
  %342 = load i8*, i8** %arena639, align 8
  %343 = load i32, i32* %nsz622, align 4
  %conv640 = sext i32 %343 to i64
  %mul641 = mul i64 %conv640, 1
  %call642 = call i8* @Perl_safesysrealloc(i8* %342, i64 %mul641)
  %344 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf643 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %344, i32 0, i32 22
  %arena644 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf643, i32 0, i32 0
  store i8* %call642, i8** %arena644, align 8
  %345 = load i32, i32* %nsz622, align 4
  %conv645 = sext i32 %345 to i64
  %346 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf646 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %346, i32 0, i32 22
  %asiz647 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf646, i32 0, i32 1
  store i64 %conv645, i64* %asiz647, align 8
  %347 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf648 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %347, i32 0, i32 22
  %arena649 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf648, i32 0, i32 0
  %348 = load i8*, i8** %arena649, align 8
  %349 = load i32, i32* %offset629, align 4
  %idx.ext650 = sext i32 %349 to i64
  %add.ptr651 = getelementptr inbounds i8, i8* %348, i64 %idx.ext650
  %350 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf652 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %350, i32 0, i32 22
  %aptr653 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf652, i32 0, i32 2
  store i8* %add.ptr651, i8** %aptr653, align 8
  %351 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf654 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %351, i32 0, i32 22
  %arena655 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf654, i32 0, i32 0
  %352 = load i8*, i8** %arena655, align 8
  %353 = load i32, i32* %nsz622, align 4
  %idx.ext656 = sext i32 %353 to i64
  %add.ptr657 = getelementptr inbounds i8, i8* %352, i64 %idx.ext656
  %354 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf658 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %354, i32 0, i32 22
  %aend659 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf658, i32 0, i32 3
  store i8* %add.ptr657, i8** %aend659, align 8
  br label %do.end660

do.end660:                                        ; preds = %do.body621
  %355 = load i8, i8* %flags, align 1
  %356 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf661 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %356, i32 0, i32 22
  %aptr662 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf661, i32 0, i32 2
  %357 = load i8*, i8** %aptr662, align 8
  %incdec.ptr663 = getelementptr inbounds i8, i8* %357, i32 1
  store i8* %incdec.ptr663, i8** %aptr662, align 8
  store i8 %355, i8* %357, align 1
  br label %if.end664

if.end664:                                        ; preds = %do.end660, %if.then616
  br label %do.end665

do.end665:                                        ; preds = %if.end664
  br label %if.end674

if.else666:                                       ; preds = %do.body605
  %358 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio667 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %358, i32 0, i32 24
  %359 = load %struct._PerlIO**, %struct._PerlIO*** %fio667, align 8
  %360 = load i8, i8* %flags, align 1
  %conv668 = zext i8 %360 to i32
  %call669 = call i32 @PerlIO_putc(%struct._PerlIO** %359, i32 %conv668)
  %cmp670 = icmp eq i32 %call669, -1
  br i1 %cmp670, label %if.then672, label %if.end673

if.then672:                                       ; preds = %if.else666
  store i32 -1, i32* %retval, align 4
  br label %return

if.end673:                                        ; preds = %if.else666
  br label %if.end674

if.end674:                                        ; preds = %if.end673, %do.end665
  br label %do.end675

do.end675:                                        ; preds = %if.end674
  br label %if.end677

if.else676:                                       ; preds = %if.end602
  br label %if.end677

if.end677:                                        ; preds = %if.else676, %do.end675
  br label %do.body678

do.body678:                                       ; preds = %if.end677
  %361 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder679 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %361, i32 0, i32 12
  %362 = load i32, i32* %netorder679, align 8
  %tobool680 = icmp ne i32 %362, 0
  br i1 %tobool680, label %if.then681, label %if.else765

if.then681:                                       ; preds = %do.body678
  %363 = load i32, i32* %keylen, align 4
  %call683 = call i32 @my_swap32(i32 %363)
  store i32 %call683, i32* %y682, align 4
  %364 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio684 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %364, i32 0, i32 24
  %365 = load %struct._PerlIO**, %struct._PerlIO*** %fio684, align 8
  %tobool685 = icmp ne %struct._PerlIO** %365, null
  br i1 %tobool685, label %if.else757, label %if.then686

if.then686:                                       ; preds = %if.then681
  br label %do.body687

do.body687:                                       ; preds = %if.then686
  br label %do.body688

do.body688:                                       ; preds = %do.body687
  %366 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf689 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %366, i32 0, i32 22
  %aptr690 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf689, i32 0, i32 2
  %367 = load i8*, i8** %aptr690, align 8
  %add.ptr691 = getelementptr inbounds i8, i8* %367, i64 4
  %368 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf692 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %368, i32 0, i32 22
  %aend693 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf692, i32 0, i32 3
  %369 = load i8*, i8** %aend693, align 8
  %cmp694 = icmp ugt i8* %add.ptr691, %369
  br i1 %cmp694, label %if.then696, label %if.end737

if.then696:                                       ; preds = %do.body688
  br label %do.body697

do.body697:                                       ; preds = %if.then696
  %370 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf699 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %370, i32 0, i32 22
  %asiz700 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf699, i32 0, i32 1
  %371 = load i64, i64* %asiz700, align 8
  %add701 = add i64 4, %371
  %add702 = add i64 %add701, 8191
  %and703 = and i64 %add702, -8192
  %conv704 = trunc i64 %and703 to i32
  store i32 %conv704, i32* %nsz698, align 4
  %372 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf706 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %372, i32 0, i32 22
  %aptr707 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf706, i32 0, i32 2
  %373 = load i8*, i8** %aptr707, align 8
  %374 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf708 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %374, i32 0, i32 22
  %arena709 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf708, i32 0, i32 0
  %375 = load i8*, i8** %arena709, align 8
  %sub.ptr.lhs.cast710 = ptrtoint i8* %373 to i64
  %sub.ptr.rhs.cast711 = ptrtoint i8* %375 to i64
  %sub.ptr.sub712 = sub i64 %sub.ptr.lhs.cast710, %sub.ptr.rhs.cast711
  %conv713 = trunc i64 %sub.ptr.sub712 to i32
  store i32 %conv713, i32* %offset705, align 4
  %376 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf714 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %376, i32 0, i32 22
  %arena715 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf714, i32 0, i32 0
  %377 = load i8*, i8** %arena715, align 8
  %378 = load i32, i32* %nsz698, align 4
  %conv716 = sext i32 %378 to i64
  %mul717 = mul i64 %conv716, 1
  %call718 = call i8* @Perl_safesysrealloc(i8* %377, i64 %mul717)
  %379 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf719 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %379, i32 0, i32 22
  %arena720 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf719, i32 0, i32 0
  store i8* %call718, i8** %arena720, align 8
  %380 = load i32, i32* %nsz698, align 4
  %conv721 = sext i32 %380 to i64
  %381 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf722 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %381, i32 0, i32 22
  %asiz723 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf722, i32 0, i32 1
  store i64 %conv721, i64* %asiz723, align 8
  %382 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf724 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %382, i32 0, i32 22
  %arena725 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf724, i32 0, i32 0
  %383 = load i8*, i8** %arena725, align 8
  %384 = load i32, i32* %offset705, align 4
  %idx.ext726 = sext i32 %384 to i64
  %add.ptr727 = getelementptr inbounds i8, i8* %383, i64 %idx.ext726
  %385 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf728 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %385, i32 0, i32 22
  %aptr729 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf728, i32 0, i32 2
  store i8* %add.ptr727, i8** %aptr729, align 8
  %386 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf730 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %386, i32 0, i32 22
  %arena731 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf730, i32 0, i32 0
  %387 = load i8*, i8** %arena731, align 8
  %388 = load i32, i32* %nsz698, align 4
  %idx.ext732 = sext i32 %388 to i64
  %add.ptr733 = getelementptr inbounds i8, i8* %387, i64 %idx.ext732
  %389 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf734 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %389, i32 0, i32 22
  %aend735 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf734, i32 0, i32 3
  store i8* %add.ptr733, i8** %aend735, align 8
  br label %do.end736

do.end736:                                        ; preds = %do.body697
  br label %if.end737

if.end737:                                        ; preds = %do.end736, %do.body688
  br label %do.end738

do.end738:                                        ; preds = %if.end737
  %390 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf739 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %390, i32 0, i32 22
  %aptr740 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf739, i32 0, i32 2
  %391 = load i8*, i8** %aptr740, align 8
  %392 = ptrtoint i8* %391 to i64
  %393 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf741 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %393, i32 0, i32 22
  %aptr742 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf741, i32 0, i32 2
  %394 = load i8*, i8** %aptr742, align 8
  %395 = ptrtoint i8* %394 to i64
  %and743 = and i64 %395, -4
  %cmp744 = icmp eq i64 %392, %and743
  br i1 %cmp744, label %if.then746, label %if.else749

if.then746:                                       ; preds = %do.end738
  %396 = load i32, i32* %y682, align 4
  %397 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf747 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %397, i32 0, i32 22
  %aptr748 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf747, i32 0, i32 2
  %398 = load i8*, i8** %aptr748, align 8
  %399 = bitcast i8* %398 to i32*
  store i32 %396, i32* %399, align 4
  br label %if.end752

if.else749:                                       ; preds = %do.end738
  %400 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf750 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %400, i32 0, i32 22
  %aptr751 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf750, i32 0, i32 2
  %401 = load i8*, i8** %aptr751, align 8
  %402 = bitcast i32* %y682 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %401, i8* align 4 %402, i64 4, i1 false)
  br label %if.end752

if.end752:                                        ; preds = %if.else749, %if.then746
  %403 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf753 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %403, i32 0, i32 22
  %aptr754 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf753, i32 0, i32 2
  %404 = load i8*, i8** %aptr754, align 8
  %add.ptr755 = getelementptr inbounds i8, i8* %404, i64 4
  store i8* %add.ptr755, i8** %aptr754, align 8
  br label %do.end756

do.end756:                                        ; preds = %if.end752
  br label %if.end764

if.else757:                                       ; preds = %if.then681
  %405 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio758 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %405, i32 0, i32 24
  %406 = load %struct._PerlIO**, %struct._PerlIO*** %fio758, align 8
  %407 = bitcast i32* %y682 to i8*
  %call759 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %406, i8* %407, i64 4)
  %cmp760 = icmp ne i64 %call759, 4
  br i1 %cmp760, label %if.then762, label %if.end763

if.then762:                                       ; preds = %if.else757
  store i32 -1, i32* %retval, align 4
  br label %return

if.end763:                                        ; preds = %if.else757
  br label %if.end764

if.end764:                                        ; preds = %if.end763, %do.end756
  br label %if.end847

if.else765:                                       ; preds = %do.body678
  %408 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio766 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %408, i32 0, i32 24
  %409 = load %struct._PerlIO**, %struct._PerlIO*** %fio766, align 8
  %tobool767 = icmp ne %struct._PerlIO** %409, null
  br i1 %tobool767, label %if.else839, label %if.then768

if.then768:                                       ; preds = %if.else765
  br label %do.body769

do.body769:                                       ; preds = %if.then768
  br label %do.body770

do.body770:                                       ; preds = %do.body769
  %410 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf771 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %410, i32 0, i32 22
  %aptr772 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf771, i32 0, i32 2
  %411 = load i8*, i8** %aptr772, align 8
  %add.ptr773 = getelementptr inbounds i8, i8* %411, i64 4
  %412 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf774 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %412, i32 0, i32 22
  %aend775 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf774, i32 0, i32 3
  %413 = load i8*, i8** %aend775, align 8
  %cmp776 = icmp ugt i8* %add.ptr773, %413
  br i1 %cmp776, label %if.then778, label %if.end819

if.then778:                                       ; preds = %do.body770
  br label %do.body779

do.body779:                                       ; preds = %if.then778
  %414 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf781 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %414, i32 0, i32 22
  %asiz782 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf781, i32 0, i32 1
  %415 = load i64, i64* %asiz782, align 8
  %add783 = add i64 4, %415
  %add784 = add i64 %add783, 8191
  %and785 = and i64 %add784, -8192
  %conv786 = trunc i64 %and785 to i32
  store i32 %conv786, i32* %nsz780, align 4
  %416 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf788 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %416, i32 0, i32 22
  %aptr789 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf788, i32 0, i32 2
  %417 = load i8*, i8** %aptr789, align 8
  %418 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf790 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %418, i32 0, i32 22
  %arena791 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf790, i32 0, i32 0
  %419 = load i8*, i8** %arena791, align 8
  %sub.ptr.lhs.cast792 = ptrtoint i8* %417 to i64
  %sub.ptr.rhs.cast793 = ptrtoint i8* %419 to i64
  %sub.ptr.sub794 = sub i64 %sub.ptr.lhs.cast792, %sub.ptr.rhs.cast793
  %conv795 = trunc i64 %sub.ptr.sub794 to i32
  store i32 %conv795, i32* %offset787, align 4
  %420 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf796 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %420, i32 0, i32 22
  %arena797 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf796, i32 0, i32 0
  %421 = load i8*, i8** %arena797, align 8
  %422 = load i32, i32* %nsz780, align 4
  %conv798 = sext i32 %422 to i64
  %mul799 = mul i64 %conv798, 1
  %call800 = call i8* @Perl_safesysrealloc(i8* %421, i64 %mul799)
  %423 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf801 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %423, i32 0, i32 22
  %arena802 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf801, i32 0, i32 0
  store i8* %call800, i8** %arena802, align 8
  %424 = load i32, i32* %nsz780, align 4
  %conv803 = sext i32 %424 to i64
  %425 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf804 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %425, i32 0, i32 22
  %asiz805 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf804, i32 0, i32 1
  store i64 %conv803, i64* %asiz805, align 8
  %426 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf806 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %426, i32 0, i32 22
  %arena807 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf806, i32 0, i32 0
  %427 = load i8*, i8** %arena807, align 8
  %428 = load i32, i32* %offset787, align 4
  %idx.ext808 = sext i32 %428 to i64
  %add.ptr809 = getelementptr inbounds i8, i8* %427, i64 %idx.ext808
  %429 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf810 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %429, i32 0, i32 22
  %aptr811 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf810, i32 0, i32 2
  store i8* %add.ptr809, i8** %aptr811, align 8
  %430 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf812 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %430, i32 0, i32 22
  %arena813 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf812, i32 0, i32 0
  %431 = load i8*, i8** %arena813, align 8
  %432 = load i32, i32* %nsz780, align 4
  %idx.ext814 = sext i32 %432 to i64
  %add.ptr815 = getelementptr inbounds i8, i8* %431, i64 %idx.ext814
  %433 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf816 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %433, i32 0, i32 22
  %aend817 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf816, i32 0, i32 3
  store i8* %add.ptr815, i8** %aend817, align 8
  br label %do.end818

do.end818:                                        ; preds = %do.body779
  br label %if.end819

if.end819:                                        ; preds = %do.end818, %do.body770
  br label %do.end820

do.end820:                                        ; preds = %if.end819
  %434 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf821 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %434, i32 0, i32 22
  %aptr822 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf821, i32 0, i32 2
  %435 = load i8*, i8** %aptr822, align 8
  %436 = ptrtoint i8* %435 to i64
  %437 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf823 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %437, i32 0, i32 22
  %aptr824 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf823, i32 0, i32 2
  %438 = load i8*, i8** %aptr824, align 8
  %439 = ptrtoint i8* %438 to i64
  %and825 = and i64 %439, -4
  %cmp826 = icmp eq i64 %436, %and825
  br i1 %cmp826, label %if.then828, label %if.else831

if.then828:                                       ; preds = %do.end820
  %440 = load i32, i32* %keylen, align 4
  %441 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf829 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %441, i32 0, i32 22
  %aptr830 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf829, i32 0, i32 2
  %442 = load i8*, i8** %aptr830, align 8
  %443 = bitcast i8* %442 to i32*
  store i32 %440, i32* %443, align 4
  br label %if.end834

if.else831:                                       ; preds = %do.end820
  %444 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf832 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %444, i32 0, i32 22
  %aptr833 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf832, i32 0, i32 2
  %445 = load i8*, i8** %aptr833, align 8
  %446 = bitcast i32* %keylen to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %445, i8* align 4 %446, i64 4, i1 false)
  br label %if.end834

if.end834:                                        ; preds = %if.else831, %if.then828
  %447 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf835 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %447, i32 0, i32 22
  %aptr836 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf835, i32 0, i32 2
  %448 = load i8*, i8** %aptr836, align 8
  %add.ptr837 = getelementptr inbounds i8, i8* %448, i64 4
  store i8* %add.ptr837, i8** %aptr836, align 8
  br label %do.end838

do.end838:                                        ; preds = %if.end834
  br label %if.end846

if.else839:                                       ; preds = %if.else765
  %449 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio840 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %449, i32 0, i32 24
  %450 = load %struct._PerlIO**, %struct._PerlIO*** %fio840, align 8
  %451 = bitcast i32* %keylen to i8*
  %call841 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %450, i8* %451, i64 4)
  %cmp842 = icmp ne i64 %call841, 4
  br i1 %cmp842, label %if.then844, label %if.end845

if.then844:                                       ; preds = %if.else839
  store i32 -1, i32* %retval, align 4
  br label %return

if.end845:                                        ; preds = %if.else839
  br label %if.end846

if.end846:                                        ; preds = %if.end845, %do.end838
  br label %if.end847

if.end847:                                        ; preds = %if.end846, %if.end764
  br label %do.end848

do.end848:                                        ; preds = %if.end847
  %452 = load i32, i32* %keylen, align 4
  %tobool849 = icmp ne i32 %452, 0
  br i1 %tobool849, label %if.then850, label %if.end928

if.then850:                                       ; preds = %do.end848
  br label %do.body851

do.body851:                                       ; preds = %if.then850
  %453 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio852 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %453, i32 0, i32 24
  %454 = load %struct._PerlIO**, %struct._PerlIO*** %fio852, align 8
  %tobool853 = icmp ne %struct._PerlIO** %454, null
  br i1 %tobool853, label %if.else917, label %if.then854

if.then854:                                       ; preds = %do.body851
  br label %do.body855

do.body855:                                       ; preds = %if.then854
  br label %do.body856

do.body856:                                       ; preds = %do.body855
  %455 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf857 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %455, i32 0, i32 22
  %aptr858 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf857, i32 0, i32 2
  %456 = load i8*, i8** %aptr858, align 8
  %457 = load i32, i32* %keylen, align 4
  %idx.ext859 = sext i32 %457 to i64
  %add.ptr860 = getelementptr inbounds i8, i8* %456, i64 %idx.ext859
  %458 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf861 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %458, i32 0, i32 22
  %aend862 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf861, i32 0, i32 3
  %459 = load i8*, i8** %aend862, align 8
  %cmp863 = icmp ugt i8* %add.ptr860, %459
  br i1 %cmp863, label %if.then865, label %if.end907

if.then865:                                       ; preds = %do.body856
  br label %do.body866

do.body866:                                       ; preds = %if.then865
  %460 = load i32, i32* %keylen, align 4
  %conv868 = sext i32 %460 to i64
  %461 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf869 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %461, i32 0, i32 22
  %asiz870 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf869, i32 0, i32 1
  %462 = load i64, i64* %asiz870, align 8
  %add871 = add i64 %conv868, %462
  %add872 = add i64 %add871, 8191
  %and873 = and i64 %add872, -8192
  %conv874 = trunc i64 %and873 to i32
  store i32 %conv874, i32* %nsz867, align 4
  %463 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf876 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %463, i32 0, i32 22
  %aptr877 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf876, i32 0, i32 2
  %464 = load i8*, i8** %aptr877, align 8
  %465 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf878 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %465, i32 0, i32 22
  %arena879 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf878, i32 0, i32 0
  %466 = load i8*, i8** %arena879, align 8
  %sub.ptr.lhs.cast880 = ptrtoint i8* %464 to i64
  %sub.ptr.rhs.cast881 = ptrtoint i8* %466 to i64
  %sub.ptr.sub882 = sub i64 %sub.ptr.lhs.cast880, %sub.ptr.rhs.cast881
  %conv883 = trunc i64 %sub.ptr.sub882 to i32
  store i32 %conv883, i32* %offset875, align 4
  %467 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf884 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %467, i32 0, i32 22
  %arena885 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf884, i32 0, i32 0
  %468 = load i8*, i8** %arena885, align 8
  %469 = load i32, i32* %nsz867, align 4
  %conv886 = sext i32 %469 to i64
  %mul887 = mul i64 %conv886, 1
  %call888 = call i8* @Perl_safesysrealloc(i8* %468, i64 %mul887)
  %470 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf889 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %470, i32 0, i32 22
  %arena890 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf889, i32 0, i32 0
  store i8* %call888, i8** %arena890, align 8
  %471 = load i32, i32* %nsz867, align 4
  %conv891 = sext i32 %471 to i64
  %472 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf892 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %472, i32 0, i32 22
  %asiz893 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf892, i32 0, i32 1
  store i64 %conv891, i64* %asiz893, align 8
  %473 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf894 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %473, i32 0, i32 22
  %arena895 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf894, i32 0, i32 0
  %474 = load i8*, i8** %arena895, align 8
  %475 = load i32, i32* %offset875, align 4
  %idx.ext896 = sext i32 %475 to i64
  %add.ptr897 = getelementptr inbounds i8, i8* %474, i64 %idx.ext896
  %476 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf898 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %476, i32 0, i32 22
  %aptr899 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf898, i32 0, i32 2
  store i8* %add.ptr897, i8** %aptr899, align 8
  %477 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf900 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %477, i32 0, i32 22
  %arena901 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf900, i32 0, i32 0
  %478 = load i8*, i8** %arena901, align 8
  %479 = load i32, i32* %nsz867, align 4
  %idx.ext902 = sext i32 %479 to i64
  %add.ptr903 = getelementptr inbounds i8, i8* %478, i64 %idx.ext902
  %480 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf904 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %480, i32 0, i32 22
  %aend905 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf904, i32 0, i32 3
  store i8* %add.ptr903, i8** %aend905, align 8
  br label %do.end906

do.end906:                                        ; preds = %do.body866
  br label %if.end907

if.end907:                                        ; preds = %do.end906, %do.body856
  br label %do.end908

do.end908:                                        ; preds = %if.end907
  %481 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf909 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %481, i32 0, i32 22
  %aptr910 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf909, i32 0, i32 2
  %482 = load i8*, i8** %aptr910, align 8
  %483 = load i8*, i8** %keyval, align 8
  %484 = load i32, i32* %keylen, align 4
  %conv911 = sext i32 %484 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %482, i8* align 1 %483, i64 %conv911, i1 false)
  %485 = load i32, i32* %keylen, align 4
  %486 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf912 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %486, i32 0, i32 22
  %aptr913 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf912, i32 0, i32 2
  %487 = load i8*, i8** %aptr913, align 8
  %idx.ext914 = sext i32 %485 to i64
  %add.ptr915 = getelementptr inbounds i8, i8* %487, i64 %idx.ext914
  store i8* %add.ptr915, i8** %aptr913, align 8
  br label %do.end916

do.end916:                                        ; preds = %do.end908
  br label %if.end926

if.else917:                                       ; preds = %do.body851
  %488 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio918 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %488, i32 0, i32 24
  %489 = load %struct._PerlIO**, %struct._PerlIO*** %fio918, align 8
  %490 = load i8*, i8** %keyval, align 8
  %491 = load i32, i32* %keylen, align 4
  %conv919 = sext i32 %491 to i64
  %call920 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %489, i8* %490, i64 %conv919)
  %492 = load i32, i32* %keylen, align 4
  %conv921 = sext i32 %492 to i64
  %cmp922 = icmp ne i64 %call920, %conv921
  br i1 %cmp922, label %if.then924, label %if.end925

if.then924:                                       ; preds = %if.else917
  store i32 -1, i32* %retval, align 4
  br label %return

if.end925:                                        ; preds = %if.else917
  br label %if.end926

if.end926:                                        ; preds = %if.end925, %do.end916
  br label %do.end927

do.end927:                                        ; preds = %if.end926
  br label %if.end928

if.end928:                                        ; preds = %do.end927, %do.end848
  %493 = load i8, i8* %flags, align 1
  %conv929 = zext i8 %493 to i32
  %and930 = and i32 %conv929, 2
  %tobool931 = icmp ne i32 %and930, 0
  br i1 %tobool931, label %if.then932, label %if.end933

if.then932:                                       ; preds = %if.end928
  %494 = load i8*, i8** %keyval, align 8
  call void @Perl_safesysfree(i8* %494)
  br label %if.end933

if.end933:                                        ; preds = %if.then932, %if.end928
  br label %for.inc934

for.inc934:                                       ; preds = %if.end933
  %495 = load i32, i32* %i, align 4
  %inc935 = add nsw i32 %495, 1
  store i32 %inc935, i32* %i, align 4
  br label %for.cond530

for.end936:                                       ; preds = %for.cond530
  %496 = load %struct.av*, %struct.av** %av, align 8
  call void @Perl_av_undef(%struct.av* %496)
  %497 = load %struct.av*, %struct.av** %av, align 8
  %498 = bitcast %struct.av* %497 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %498)
  br label %if.end1355

if.else937:                                       ; preds = %land.end509, %lor.lhs.false, %cond.end391
  store i32 0, i32* %i, align 4
  br label %for.cond938

for.cond938:                                      ; preds = %for.inc1352, %if.else937
  %499 = load i32, i32* %i, align 4
  %500 = load i32, i32* %len, align 4
  %cmp939 = icmp slt i32 %499, %500
  br i1 %cmp939, label %for.body941, label %for.end1354

for.body941:                                      ; preds = %for.cond938
  store i8* null, i8** %key942, align 8
  %501 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %call946 = call %struct.he* @Perl_hv_iternext_flags(%struct.hv* %501, i32 1)
  store %struct.he* %call946, %struct.he** %he945, align 8
  %502 = load %struct.he*, %struct.he** %he945, align 8
  %tobool948 = icmp ne %struct.he* %502, null
  br i1 %tobool948, label %cond.true949, label %cond.false951

cond.true949:                                     ; preds = %for.body941
  %503 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %504 = load %struct.he*, %struct.he** %he945, align 8
  %call950 = call %struct.sv* @Perl_hv_iterval(%struct.hv* %503, %struct.he* %504)
  br label %cond.end952

cond.false951:                                    ; preds = %for.body941
  br label %cond.end952

cond.end952:                                      ; preds = %cond.false951, %cond.true949
  %cond953 = phi %struct.sv* [ %call950, %cond.true949 ], [ null, %cond.false951 ]
  store %struct.sv* %cond953, %struct.sv** %val947, align 8
  store %struct.sv* null, %struct.sv** %key_sv, align 8
  %505 = load %struct.sv*, %struct.sv** %val947, align 8
  %cmp954 = icmp eq %struct.sv* %505, null
  br i1 %cmp954, label %if.then956, label %if.end957

if.then956:                                       ; preds = %cond.end952
  store i32 1, i32* %retval, align 4
  br label %return

if.end957:                                        ; preds = %cond.end952
  %506 = load i8, i8* %hash_flags, align 1
  %conv958 = zext i8 %506 to i32
  %and959 = and i32 %conv958, 1
  %tobool960 = icmp ne i32 %and959, 0
  br i1 %tobool960, label %land.rhs961, label %land.end965

land.rhs961:                                      ; preds = %if.end957
  %507 = load %struct.sv*, %struct.sv** %val947, align 8
  %sv_flags962 = getelementptr inbounds %struct.sv, %struct.sv* %507, i32 0, i32 2
  %508 = load i32, i32* %sv_flags962, align 4
  %and963 = and i32 %508, 134283264
  %tobool964 = icmp ne i32 %and963, 0
  br label %land.end965

land.end965:                                      ; preds = %land.rhs961, %if.end957
  %509 = phi i1 [ false, %if.end957 ], [ %tobool964, %land.rhs961 ]
  %510 = zext i1 %509 to i64
  %cond967 = select i1 %509, i32 4, i32 0
  %conv968 = trunc i32 %cond967 to i8
  store i8 %conv968, i8* %flags944, align 1
  %511 = load %struct.sv*, %struct.sv** %val947, align 8
  %cmp969 = icmp eq %struct.sv* %511, @PL_sv_placeholder
  br i1 %cmp969, label %if.then971, label %if.end975

if.then971:                                       ; preds = %land.end965
  %512 = load i8, i8* %flags944, align 1
  %conv972 = zext i8 %512 to i32
  %or973 = or i32 %conv972, 16
  %conv974 = trunc i32 %or973 to i8
  store i8 %conv974, i8* %flags944, align 1
  store %struct.sv* @PL_sv_undef, %struct.sv** %val947, align 8
  br label %if.end975

if.end975:                                        ; preds = %if.then971, %land.end965
  %513 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %514 = load %struct.sv*, %struct.sv** %val947, align 8
  %call976 = call i32 @store(%struct.stcxt* %513, %struct.sv* %514)
  store i32 %call976, i32* %ret, align 4
  %tobool977 = icmp ne i32 %call976, 0
  br i1 %tobool977, label %if.then978, label %if.end979

if.then978:                                       ; preds = %if.end975
  br label %out

if.end979:                                        ; preds = %if.end975
  %515 = load %struct.he*, %struct.he** %he945, align 8
  %hent_hek = getelementptr inbounds %struct.he, %struct.he* %515, i32 0, i32 1
  %516 = load %struct.hek*, %struct.hek** %hent_hek, align 8
  store %struct.hek* %516, %struct.hek** %hek, align 8
  %517 = load %struct.hek*, %struct.hek** %hek, align 8
  %hek_len = getelementptr inbounds %struct.hek, %struct.hek* %517, i32 0, i32 1
  %518 = load i32, i32* %hek_len, align 4
  store i32 %518, i32* %len943, align 4
  %519 = load i32, i32* %len943, align 4
  %cmp980 = icmp eq i32 %519, -2
  br i1 %cmp980, label %if.then982, label %if.else987

if.then982:                                       ; preds = %if.end979
  %520 = load %struct.he*, %struct.he** %he945, align 8
  %hent_hek983 = getelementptr inbounds %struct.he, %struct.he* %520, i32 0, i32 1
  %521 = load %struct.hek*, %struct.hek** %hent_hek983, align 8
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %521, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %522 = bitcast i8* %arraydecay to %struct.sv**
  %523 = load %struct.sv*, %struct.sv** %522, align 4
  store %struct.sv* %523, %struct.sv** %key_sv, align 8
  %524 = load i8, i8* %flags944, align 1
  %conv984 = zext i8 %524 to i32
  %or985 = or i32 %conv984, 8
  %conv986 = trunc i32 %or985 to i8
  store i8 %conv986, i8* %flags944, align 1
  br label %if.end1018

if.else987:                                       ; preds = %if.end979
  %525 = load %struct.hek*, %struct.hek** %hek, align 8
  %hek_key988 = getelementptr inbounds %struct.hek, %struct.hek* %525, i32 0, i32 2
  %arraydecay989 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key988, i64 0, i64 0
  %526 = load %struct.hek*, %struct.hek** %hek, align 8
  %hek_len990 = getelementptr inbounds %struct.hek, %struct.hek* %526, i32 0, i32 1
  %527 = load i32, i32* %hek_len990, align 4
  %idx.ext991 = sext i32 %527 to i64
  %add.ptr992 = getelementptr inbounds i8, i8* %arraydecay989, i64 %idx.ext991
  %add.ptr993 = getelementptr inbounds i8, i8* %add.ptr992, i64 1
  %528 = load i8, i8* %add.ptr993, align 1
  %conv994 = zext i8 %528 to i32
  %and995 = and i32 %conv994, 1
  %tobool996 = icmp ne i32 %and995, 0
  br i1 %tobool996, label %if.then997, label %if.end1001

if.then997:                                       ; preds = %if.else987
  %529 = load i8, i8* %flags944, align 1
  %conv998 = zext i8 %529 to i32
  %or999 = or i32 %conv998, 1
  %conv1000 = trunc i32 %or999 to i8
  store i8 %conv1000, i8* %flags944, align 1
  br label %if.end1001

if.end1001:                                       ; preds = %if.then997, %if.else987
  %530 = load %struct.hek*, %struct.hek** %hek, align 8
  %hek_key1002 = getelementptr inbounds %struct.hek, %struct.hek* %530, i32 0, i32 2
  %arraydecay1003 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key1002, i64 0, i64 0
  %531 = load %struct.hek*, %struct.hek** %hek, align 8
  %hek_len1004 = getelementptr inbounds %struct.hek, %struct.hek* %531, i32 0, i32 1
  %532 = load i32, i32* %hek_len1004, align 4
  %idx.ext1005 = sext i32 %532 to i64
  %add.ptr1006 = getelementptr inbounds i8, i8* %arraydecay1003, i64 %idx.ext1005
  %add.ptr1007 = getelementptr inbounds i8, i8* %add.ptr1006, i64 1
  %533 = load i8, i8* %add.ptr1007, align 1
  %conv1008 = zext i8 %533 to i32
  %and1009 = and i32 %conv1008, 2
  %tobool1010 = icmp ne i32 %and1009, 0
  br i1 %tobool1010, label %if.then1011, label %if.end1015

if.then1011:                                      ; preds = %if.end1001
  %534 = load i8, i8* %flags944, align 1
  %conv1012 = zext i8 %534 to i32
  %or1013 = or i32 %conv1012, 2
  %conv1014 = trunc i32 %or1013 to i8
  store i8 %conv1014, i8* %flags944, align 1
  br label %if.end1015

if.end1015:                                       ; preds = %if.then1011, %if.end1001
  %535 = load %struct.hek*, %struct.hek** %hek, align 8
  %hek_key1016 = getelementptr inbounds %struct.hek, %struct.hek* %535, i32 0, i32 2
  %arraydecay1017 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key1016, i64 0, i64 0
  store i8* %arraydecay1017, i8** %key942, align 8
  br label %if.end1018

if.end1018:                                       ; preds = %if.end1015, %if.then982
  %536 = load i32, i32* %flagged_hash, align 4
  %tobool1019 = icmp ne i32 %536, 0
  br i1 %tobool1019, label %if.then1020, label %if.else1092

if.then1020:                                      ; preds = %if.end1018
  br label %do.body1021

do.body1021:                                      ; preds = %if.then1020
  %537 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1022 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %537, i32 0, i32 24
  %538 = load %struct._PerlIO**, %struct._PerlIO*** %fio1022, align 8
  %tobool1023 = icmp ne %struct._PerlIO** %538, null
  br i1 %tobool1023, label %if.else1082, label %if.then1024

if.then1024:                                      ; preds = %do.body1021
  br label %do.body1025

do.body1025:                                      ; preds = %if.then1024
  %539 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1026 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %539, i32 0, i32 22
  %aptr1027 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1026, i32 0, i32 2
  %540 = load i8*, i8** %aptr1027, align 8
  %541 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1028 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %541, i32 0, i32 22
  %aend1029 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1028, i32 0, i32 3
  %542 = load i8*, i8** %aend1029, align 8
  %cmp1030 = icmp ult i8* %540, %542
  br i1 %cmp1030, label %if.then1032, label %if.else1036

if.then1032:                                      ; preds = %do.body1025
  %543 = load i8, i8* %flags944, align 1
  %544 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1033 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %544, i32 0, i32 22
  %aptr1034 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1033, i32 0, i32 2
  %545 = load i8*, i8** %aptr1034, align 8
  %incdec.ptr1035 = getelementptr inbounds i8, i8* %545, i32 1
  store i8* %incdec.ptr1035, i8** %aptr1034, align 8
  store i8 %543, i8* %545, align 1
  br label %if.end1080

if.else1036:                                      ; preds = %do.body1025
  br label %do.body1037

do.body1037:                                      ; preds = %if.else1036
  %546 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1039 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %546, i32 0, i32 22
  %asiz1040 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1039, i32 0, i32 1
  %547 = load i64, i64* %asiz1040, align 8
  %add1041 = add i64 1, %547
  %add1042 = add i64 %add1041, 8191
  %and1043 = and i64 %add1042, -8192
  %conv1044 = trunc i64 %and1043 to i32
  store i32 %conv1044, i32* %nsz1038, align 4
  %548 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1046 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %548, i32 0, i32 22
  %aptr1047 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1046, i32 0, i32 2
  %549 = load i8*, i8** %aptr1047, align 8
  %550 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1048 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %550, i32 0, i32 22
  %arena1049 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1048, i32 0, i32 0
  %551 = load i8*, i8** %arena1049, align 8
  %sub.ptr.lhs.cast1050 = ptrtoint i8* %549 to i64
  %sub.ptr.rhs.cast1051 = ptrtoint i8* %551 to i64
  %sub.ptr.sub1052 = sub i64 %sub.ptr.lhs.cast1050, %sub.ptr.rhs.cast1051
  %conv1053 = trunc i64 %sub.ptr.sub1052 to i32
  store i32 %conv1053, i32* %offset1045, align 4
  %552 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1054 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %552, i32 0, i32 22
  %arena1055 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1054, i32 0, i32 0
  %553 = load i8*, i8** %arena1055, align 8
  %554 = load i32, i32* %nsz1038, align 4
  %conv1056 = sext i32 %554 to i64
  %mul1057 = mul i64 %conv1056, 1
  %call1058 = call i8* @Perl_safesysrealloc(i8* %553, i64 %mul1057)
  %555 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1059 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %555, i32 0, i32 22
  %arena1060 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1059, i32 0, i32 0
  store i8* %call1058, i8** %arena1060, align 8
  %556 = load i32, i32* %nsz1038, align 4
  %conv1061 = sext i32 %556 to i64
  %557 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1062 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %557, i32 0, i32 22
  %asiz1063 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1062, i32 0, i32 1
  store i64 %conv1061, i64* %asiz1063, align 8
  %558 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1064 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %558, i32 0, i32 22
  %arena1065 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1064, i32 0, i32 0
  %559 = load i8*, i8** %arena1065, align 8
  %560 = load i32, i32* %offset1045, align 4
  %idx.ext1066 = sext i32 %560 to i64
  %add.ptr1067 = getelementptr inbounds i8, i8* %559, i64 %idx.ext1066
  %561 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1068 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %561, i32 0, i32 22
  %aptr1069 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1068, i32 0, i32 2
  store i8* %add.ptr1067, i8** %aptr1069, align 8
  %562 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1070 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %562, i32 0, i32 22
  %arena1071 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1070, i32 0, i32 0
  %563 = load i8*, i8** %arena1071, align 8
  %564 = load i32, i32* %nsz1038, align 4
  %idx.ext1072 = sext i32 %564 to i64
  %add.ptr1073 = getelementptr inbounds i8, i8* %563, i64 %idx.ext1072
  %565 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1074 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %565, i32 0, i32 22
  %aend1075 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1074, i32 0, i32 3
  store i8* %add.ptr1073, i8** %aend1075, align 8
  br label %do.end1076

do.end1076:                                       ; preds = %do.body1037
  %566 = load i8, i8* %flags944, align 1
  %567 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1077 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %567, i32 0, i32 22
  %aptr1078 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1077, i32 0, i32 2
  %568 = load i8*, i8** %aptr1078, align 8
  %incdec.ptr1079 = getelementptr inbounds i8, i8* %568, i32 1
  store i8* %incdec.ptr1079, i8** %aptr1078, align 8
  store i8 %566, i8* %568, align 1
  br label %if.end1080

if.end1080:                                       ; preds = %do.end1076, %if.then1032
  br label %do.end1081

do.end1081:                                       ; preds = %if.end1080
  br label %if.end1090

if.else1082:                                      ; preds = %do.body1021
  %569 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1083 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %569, i32 0, i32 24
  %570 = load %struct._PerlIO**, %struct._PerlIO*** %fio1083, align 8
  %571 = load i8, i8* %flags944, align 1
  %conv1084 = zext i8 %571 to i32
  %call1085 = call i32 @PerlIO_putc(%struct._PerlIO** %570, i32 %conv1084)
  %cmp1086 = icmp eq i32 %call1085, -1
  br i1 %cmp1086, label %if.then1088, label %if.end1089

if.then1088:                                      ; preds = %if.else1082
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1089:                                       ; preds = %if.else1082
  br label %if.end1090

if.end1090:                                       ; preds = %if.end1089, %do.end1081
  br label %do.end1091

do.end1091:                                       ; preds = %if.end1090
  br label %if.end1093

if.else1092:                                      ; preds = %if.end1018
  br label %if.end1093

if.end1093:                                       ; preds = %if.else1092, %do.end1091
  %572 = load i8, i8* %flags944, align 1
  %conv1094 = zext i8 %572 to i32
  %and1095 = and i32 %conv1094, 8
  %tobool1096 = icmp ne i32 %and1095, 0
  br i1 %tobool1096, label %if.then1097, label %if.else1099

if.then1097:                                      ; preds = %if.end1093
  %573 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %574 = load %struct.sv*, %struct.sv** %key_sv, align 8
  %call1098 = call i32 @store(%struct.stcxt* %573, %struct.sv* %574)
  br label %if.end1351

if.else1099:                                      ; preds = %if.end1093
  br label %do.body1100

do.body1100:                                      ; preds = %if.else1099
  %575 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder1101 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %575, i32 0, i32 12
  %576 = load i32, i32* %netorder1101, align 8
  %tobool1102 = icmp ne i32 %576, 0
  br i1 %tobool1102, label %if.then1103, label %if.else1187

if.then1103:                                      ; preds = %do.body1100
  %577 = load i32, i32* %len943, align 4
  %call1105 = call i32 @my_swap32(i32 %577)
  store i32 %call1105, i32* %y1104, align 4
  %578 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1106 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %578, i32 0, i32 24
  %579 = load %struct._PerlIO**, %struct._PerlIO*** %fio1106, align 8
  %tobool1107 = icmp ne %struct._PerlIO** %579, null
  br i1 %tobool1107, label %if.else1179, label %if.then1108

if.then1108:                                      ; preds = %if.then1103
  br label %do.body1109

do.body1109:                                      ; preds = %if.then1108
  br label %do.body1110

do.body1110:                                      ; preds = %do.body1109
  %580 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1111 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %580, i32 0, i32 22
  %aptr1112 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1111, i32 0, i32 2
  %581 = load i8*, i8** %aptr1112, align 8
  %add.ptr1113 = getelementptr inbounds i8, i8* %581, i64 4
  %582 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1114 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %582, i32 0, i32 22
  %aend1115 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1114, i32 0, i32 3
  %583 = load i8*, i8** %aend1115, align 8
  %cmp1116 = icmp ugt i8* %add.ptr1113, %583
  br i1 %cmp1116, label %if.then1118, label %if.end1159

if.then1118:                                      ; preds = %do.body1110
  br label %do.body1119

do.body1119:                                      ; preds = %if.then1118
  %584 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1121 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %584, i32 0, i32 22
  %asiz1122 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1121, i32 0, i32 1
  %585 = load i64, i64* %asiz1122, align 8
  %add1123 = add i64 4, %585
  %add1124 = add i64 %add1123, 8191
  %and1125 = and i64 %add1124, -8192
  %conv1126 = trunc i64 %and1125 to i32
  store i32 %conv1126, i32* %nsz1120, align 4
  %586 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1128 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %586, i32 0, i32 22
  %aptr1129 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1128, i32 0, i32 2
  %587 = load i8*, i8** %aptr1129, align 8
  %588 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1130 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %588, i32 0, i32 22
  %arena1131 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1130, i32 0, i32 0
  %589 = load i8*, i8** %arena1131, align 8
  %sub.ptr.lhs.cast1132 = ptrtoint i8* %587 to i64
  %sub.ptr.rhs.cast1133 = ptrtoint i8* %589 to i64
  %sub.ptr.sub1134 = sub i64 %sub.ptr.lhs.cast1132, %sub.ptr.rhs.cast1133
  %conv1135 = trunc i64 %sub.ptr.sub1134 to i32
  store i32 %conv1135, i32* %offset1127, align 4
  %590 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1136 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %590, i32 0, i32 22
  %arena1137 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1136, i32 0, i32 0
  %591 = load i8*, i8** %arena1137, align 8
  %592 = load i32, i32* %nsz1120, align 4
  %conv1138 = sext i32 %592 to i64
  %mul1139 = mul i64 %conv1138, 1
  %call1140 = call i8* @Perl_safesysrealloc(i8* %591, i64 %mul1139)
  %593 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1141 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %593, i32 0, i32 22
  %arena1142 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1141, i32 0, i32 0
  store i8* %call1140, i8** %arena1142, align 8
  %594 = load i32, i32* %nsz1120, align 4
  %conv1143 = sext i32 %594 to i64
  %595 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1144 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %595, i32 0, i32 22
  %asiz1145 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1144, i32 0, i32 1
  store i64 %conv1143, i64* %asiz1145, align 8
  %596 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1146 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %596, i32 0, i32 22
  %arena1147 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1146, i32 0, i32 0
  %597 = load i8*, i8** %arena1147, align 8
  %598 = load i32, i32* %offset1127, align 4
  %idx.ext1148 = sext i32 %598 to i64
  %add.ptr1149 = getelementptr inbounds i8, i8* %597, i64 %idx.ext1148
  %599 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1150 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %599, i32 0, i32 22
  %aptr1151 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1150, i32 0, i32 2
  store i8* %add.ptr1149, i8** %aptr1151, align 8
  %600 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1152 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %600, i32 0, i32 22
  %arena1153 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1152, i32 0, i32 0
  %601 = load i8*, i8** %arena1153, align 8
  %602 = load i32, i32* %nsz1120, align 4
  %idx.ext1154 = sext i32 %602 to i64
  %add.ptr1155 = getelementptr inbounds i8, i8* %601, i64 %idx.ext1154
  %603 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1156 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %603, i32 0, i32 22
  %aend1157 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1156, i32 0, i32 3
  store i8* %add.ptr1155, i8** %aend1157, align 8
  br label %do.end1158

do.end1158:                                       ; preds = %do.body1119
  br label %if.end1159

if.end1159:                                       ; preds = %do.end1158, %do.body1110
  br label %do.end1160

do.end1160:                                       ; preds = %if.end1159
  %604 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1161 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %604, i32 0, i32 22
  %aptr1162 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1161, i32 0, i32 2
  %605 = load i8*, i8** %aptr1162, align 8
  %606 = ptrtoint i8* %605 to i64
  %607 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1163 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %607, i32 0, i32 22
  %aptr1164 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1163, i32 0, i32 2
  %608 = load i8*, i8** %aptr1164, align 8
  %609 = ptrtoint i8* %608 to i64
  %and1165 = and i64 %609, -4
  %cmp1166 = icmp eq i64 %606, %and1165
  br i1 %cmp1166, label %if.then1168, label %if.else1171

if.then1168:                                      ; preds = %do.end1160
  %610 = load i32, i32* %y1104, align 4
  %611 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1169 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %611, i32 0, i32 22
  %aptr1170 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1169, i32 0, i32 2
  %612 = load i8*, i8** %aptr1170, align 8
  %613 = bitcast i8* %612 to i32*
  store i32 %610, i32* %613, align 4
  br label %if.end1174

if.else1171:                                      ; preds = %do.end1160
  %614 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1172 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %614, i32 0, i32 22
  %aptr1173 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1172, i32 0, i32 2
  %615 = load i8*, i8** %aptr1173, align 8
  %616 = bitcast i32* %y1104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %615, i8* align 4 %616, i64 4, i1 false)
  br label %if.end1174

if.end1174:                                       ; preds = %if.else1171, %if.then1168
  %617 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1175 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %617, i32 0, i32 22
  %aptr1176 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1175, i32 0, i32 2
  %618 = load i8*, i8** %aptr1176, align 8
  %add.ptr1177 = getelementptr inbounds i8, i8* %618, i64 4
  store i8* %add.ptr1177, i8** %aptr1176, align 8
  br label %do.end1178

do.end1178:                                       ; preds = %if.end1174
  br label %if.end1186

if.else1179:                                      ; preds = %if.then1103
  %619 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1180 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %619, i32 0, i32 24
  %620 = load %struct._PerlIO**, %struct._PerlIO*** %fio1180, align 8
  %621 = bitcast i32* %y1104 to i8*
  %call1181 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %620, i8* %621, i64 4)
  %cmp1182 = icmp ne i64 %call1181, 4
  br i1 %cmp1182, label %if.then1184, label %if.end1185

if.then1184:                                      ; preds = %if.else1179
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1185:                                       ; preds = %if.else1179
  br label %if.end1186

if.end1186:                                       ; preds = %if.end1185, %do.end1178
  br label %if.end1269

if.else1187:                                      ; preds = %do.body1100
  %622 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1188 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %622, i32 0, i32 24
  %623 = load %struct._PerlIO**, %struct._PerlIO*** %fio1188, align 8
  %tobool1189 = icmp ne %struct._PerlIO** %623, null
  br i1 %tobool1189, label %if.else1261, label %if.then1190

if.then1190:                                      ; preds = %if.else1187
  br label %do.body1191

do.body1191:                                      ; preds = %if.then1190
  br label %do.body1192

do.body1192:                                      ; preds = %do.body1191
  %624 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1193 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %624, i32 0, i32 22
  %aptr1194 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1193, i32 0, i32 2
  %625 = load i8*, i8** %aptr1194, align 8
  %add.ptr1195 = getelementptr inbounds i8, i8* %625, i64 4
  %626 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1196 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %626, i32 0, i32 22
  %aend1197 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1196, i32 0, i32 3
  %627 = load i8*, i8** %aend1197, align 8
  %cmp1198 = icmp ugt i8* %add.ptr1195, %627
  br i1 %cmp1198, label %if.then1200, label %if.end1241

if.then1200:                                      ; preds = %do.body1192
  br label %do.body1201

do.body1201:                                      ; preds = %if.then1200
  %628 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1203 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %628, i32 0, i32 22
  %asiz1204 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1203, i32 0, i32 1
  %629 = load i64, i64* %asiz1204, align 8
  %add1205 = add i64 4, %629
  %add1206 = add i64 %add1205, 8191
  %and1207 = and i64 %add1206, -8192
  %conv1208 = trunc i64 %and1207 to i32
  store i32 %conv1208, i32* %nsz1202, align 4
  %630 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1210 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %630, i32 0, i32 22
  %aptr1211 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1210, i32 0, i32 2
  %631 = load i8*, i8** %aptr1211, align 8
  %632 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1212 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %632, i32 0, i32 22
  %arena1213 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1212, i32 0, i32 0
  %633 = load i8*, i8** %arena1213, align 8
  %sub.ptr.lhs.cast1214 = ptrtoint i8* %631 to i64
  %sub.ptr.rhs.cast1215 = ptrtoint i8* %633 to i64
  %sub.ptr.sub1216 = sub i64 %sub.ptr.lhs.cast1214, %sub.ptr.rhs.cast1215
  %conv1217 = trunc i64 %sub.ptr.sub1216 to i32
  store i32 %conv1217, i32* %offset1209, align 4
  %634 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1218 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %634, i32 0, i32 22
  %arena1219 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1218, i32 0, i32 0
  %635 = load i8*, i8** %arena1219, align 8
  %636 = load i32, i32* %nsz1202, align 4
  %conv1220 = sext i32 %636 to i64
  %mul1221 = mul i64 %conv1220, 1
  %call1222 = call i8* @Perl_safesysrealloc(i8* %635, i64 %mul1221)
  %637 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1223 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %637, i32 0, i32 22
  %arena1224 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1223, i32 0, i32 0
  store i8* %call1222, i8** %arena1224, align 8
  %638 = load i32, i32* %nsz1202, align 4
  %conv1225 = sext i32 %638 to i64
  %639 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1226 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %639, i32 0, i32 22
  %asiz1227 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1226, i32 0, i32 1
  store i64 %conv1225, i64* %asiz1227, align 8
  %640 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1228 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %640, i32 0, i32 22
  %arena1229 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1228, i32 0, i32 0
  %641 = load i8*, i8** %arena1229, align 8
  %642 = load i32, i32* %offset1209, align 4
  %idx.ext1230 = sext i32 %642 to i64
  %add.ptr1231 = getelementptr inbounds i8, i8* %641, i64 %idx.ext1230
  %643 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1232 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %643, i32 0, i32 22
  %aptr1233 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1232, i32 0, i32 2
  store i8* %add.ptr1231, i8** %aptr1233, align 8
  %644 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1234 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %644, i32 0, i32 22
  %arena1235 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1234, i32 0, i32 0
  %645 = load i8*, i8** %arena1235, align 8
  %646 = load i32, i32* %nsz1202, align 4
  %idx.ext1236 = sext i32 %646 to i64
  %add.ptr1237 = getelementptr inbounds i8, i8* %645, i64 %idx.ext1236
  %647 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1238 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %647, i32 0, i32 22
  %aend1239 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1238, i32 0, i32 3
  store i8* %add.ptr1237, i8** %aend1239, align 8
  br label %do.end1240

do.end1240:                                       ; preds = %do.body1201
  br label %if.end1241

if.end1241:                                       ; preds = %do.end1240, %do.body1192
  br label %do.end1242

do.end1242:                                       ; preds = %if.end1241
  %648 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1243 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %648, i32 0, i32 22
  %aptr1244 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1243, i32 0, i32 2
  %649 = load i8*, i8** %aptr1244, align 8
  %650 = ptrtoint i8* %649 to i64
  %651 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1245 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %651, i32 0, i32 22
  %aptr1246 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1245, i32 0, i32 2
  %652 = load i8*, i8** %aptr1246, align 8
  %653 = ptrtoint i8* %652 to i64
  %and1247 = and i64 %653, -4
  %cmp1248 = icmp eq i64 %650, %and1247
  br i1 %cmp1248, label %if.then1250, label %if.else1253

if.then1250:                                      ; preds = %do.end1242
  %654 = load i32, i32* %len943, align 4
  %655 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1251 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %655, i32 0, i32 22
  %aptr1252 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1251, i32 0, i32 2
  %656 = load i8*, i8** %aptr1252, align 8
  %657 = bitcast i8* %656 to i32*
  store i32 %654, i32* %657, align 4
  br label %if.end1256

if.else1253:                                      ; preds = %do.end1242
  %658 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1254 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %658, i32 0, i32 22
  %aptr1255 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1254, i32 0, i32 2
  %659 = load i8*, i8** %aptr1255, align 8
  %660 = bitcast i32* %len943 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %659, i8* align 4 %660, i64 4, i1 false)
  br label %if.end1256

if.end1256:                                       ; preds = %if.else1253, %if.then1250
  %661 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1257 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %661, i32 0, i32 22
  %aptr1258 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1257, i32 0, i32 2
  %662 = load i8*, i8** %aptr1258, align 8
  %add.ptr1259 = getelementptr inbounds i8, i8* %662, i64 4
  store i8* %add.ptr1259, i8** %aptr1258, align 8
  br label %do.end1260

do.end1260:                                       ; preds = %if.end1256
  br label %if.end1268

if.else1261:                                      ; preds = %if.else1187
  %663 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1262 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %663, i32 0, i32 24
  %664 = load %struct._PerlIO**, %struct._PerlIO*** %fio1262, align 8
  %665 = bitcast i32* %len943 to i8*
  %call1263 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %664, i8* %665, i64 4)
  %cmp1264 = icmp ne i64 %call1263, 4
  br i1 %cmp1264, label %if.then1266, label %if.end1267

if.then1266:                                      ; preds = %if.else1261
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1267:                                       ; preds = %if.else1261
  br label %if.end1268

if.end1268:                                       ; preds = %if.end1267, %do.end1260
  br label %if.end1269

if.end1269:                                       ; preds = %if.end1268, %if.end1186
  br label %do.end1270

do.end1270:                                       ; preds = %if.end1269
  %666 = load i32, i32* %len943, align 4
  %tobool1271 = icmp ne i32 %666, 0
  br i1 %tobool1271, label %if.then1272, label %if.end1350

if.then1272:                                      ; preds = %do.end1270
  br label %do.body1273

do.body1273:                                      ; preds = %if.then1272
  %667 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1274 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %667, i32 0, i32 24
  %668 = load %struct._PerlIO**, %struct._PerlIO*** %fio1274, align 8
  %tobool1275 = icmp ne %struct._PerlIO** %668, null
  br i1 %tobool1275, label %if.else1339, label %if.then1276

if.then1276:                                      ; preds = %do.body1273
  br label %do.body1277

do.body1277:                                      ; preds = %if.then1276
  br label %do.body1278

do.body1278:                                      ; preds = %do.body1277
  %669 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1279 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %669, i32 0, i32 22
  %aptr1280 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1279, i32 0, i32 2
  %670 = load i8*, i8** %aptr1280, align 8
  %671 = load i32, i32* %len943, align 4
  %idx.ext1281 = sext i32 %671 to i64
  %add.ptr1282 = getelementptr inbounds i8, i8* %670, i64 %idx.ext1281
  %672 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1283 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %672, i32 0, i32 22
  %aend1284 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1283, i32 0, i32 3
  %673 = load i8*, i8** %aend1284, align 8
  %cmp1285 = icmp ugt i8* %add.ptr1282, %673
  br i1 %cmp1285, label %if.then1287, label %if.end1329

if.then1287:                                      ; preds = %do.body1278
  br label %do.body1288

do.body1288:                                      ; preds = %if.then1287
  %674 = load i32, i32* %len943, align 4
  %conv1290 = sext i32 %674 to i64
  %675 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1291 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %675, i32 0, i32 22
  %asiz1292 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1291, i32 0, i32 1
  %676 = load i64, i64* %asiz1292, align 8
  %add1293 = add i64 %conv1290, %676
  %add1294 = add i64 %add1293, 8191
  %and1295 = and i64 %add1294, -8192
  %conv1296 = trunc i64 %and1295 to i32
  store i32 %conv1296, i32* %nsz1289, align 4
  %677 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1298 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %677, i32 0, i32 22
  %aptr1299 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1298, i32 0, i32 2
  %678 = load i8*, i8** %aptr1299, align 8
  %679 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1300 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %679, i32 0, i32 22
  %arena1301 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1300, i32 0, i32 0
  %680 = load i8*, i8** %arena1301, align 8
  %sub.ptr.lhs.cast1302 = ptrtoint i8* %678 to i64
  %sub.ptr.rhs.cast1303 = ptrtoint i8* %680 to i64
  %sub.ptr.sub1304 = sub i64 %sub.ptr.lhs.cast1302, %sub.ptr.rhs.cast1303
  %conv1305 = trunc i64 %sub.ptr.sub1304 to i32
  store i32 %conv1305, i32* %offset1297, align 4
  %681 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1306 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %681, i32 0, i32 22
  %arena1307 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1306, i32 0, i32 0
  %682 = load i8*, i8** %arena1307, align 8
  %683 = load i32, i32* %nsz1289, align 4
  %conv1308 = sext i32 %683 to i64
  %mul1309 = mul i64 %conv1308, 1
  %call1310 = call i8* @Perl_safesysrealloc(i8* %682, i64 %mul1309)
  %684 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1311 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %684, i32 0, i32 22
  %arena1312 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1311, i32 0, i32 0
  store i8* %call1310, i8** %arena1312, align 8
  %685 = load i32, i32* %nsz1289, align 4
  %conv1313 = sext i32 %685 to i64
  %686 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1314 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %686, i32 0, i32 22
  %asiz1315 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1314, i32 0, i32 1
  store i64 %conv1313, i64* %asiz1315, align 8
  %687 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1316 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %687, i32 0, i32 22
  %arena1317 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1316, i32 0, i32 0
  %688 = load i8*, i8** %arena1317, align 8
  %689 = load i32, i32* %offset1297, align 4
  %idx.ext1318 = sext i32 %689 to i64
  %add.ptr1319 = getelementptr inbounds i8, i8* %688, i64 %idx.ext1318
  %690 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1320 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %690, i32 0, i32 22
  %aptr1321 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1320, i32 0, i32 2
  store i8* %add.ptr1319, i8** %aptr1321, align 8
  %691 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1322 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %691, i32 0, i32 22
  %arena1323 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1322, i32 0, i32 0
  %692 = load i8*, i8** %arena1323, align 8
  %693 = load i32, i32* %nsz1289, align 4
  %idx.ext1324 = sext i32 %693 to i64
  %add.ptr1325 = getelementptr inbounds i8, i8* %692, i64 %idx.ext1324
  %694 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1326 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %694, i32 0, i32 22
  %aend1327 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1326, i32 0, i32 3
  store i8* %add.ptr1325, i8** %aend1327, align 8
  br label %do.end1328

do.end1328:                                       ; preds = %do.body1288
  br label %if.end1329

if.end1329:                                       ; preds = %do.end1328, %do.body1278
  br label %do.end1330

do.end1330:                                       ; preds = %if.end1329
  %695 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1331 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %695, i32 0, i32 22
  %aptr1332 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1331, i32 0, i32 2
  %696 = load i8*, i8** %aptr1332, align 8
  %697 = load i8*, i8** %key942, align 8
  %698 = load i32, i32* %len943, align 4
  %conv1333 = sext i32 %698 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %696, i8* align 1 %697, i64 %conv1333, i1 false)
  %699 = load i32, i32* %len943, align 4
  %700 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1334 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %700, i32 0, i32 22
  %aptr1335 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1334, i32 0, i32 2
  %701 = load i8*, i8** %aptr1335, align 8
  %idx.ext1336 = sext i32 %699 to i64
  %add.ptr1337 = getelementptr inbounds i8, i8* %701, i64 %idx.ext1336
  store i8* %add.ptr1337, i8** %aptr1335, align 8
  br label %do.end1338

do.end1338:                                       ; preds = %do.end1330
  br label %if.end1348

if.else1339:                                      ; preds = %do.body1273
  %702 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1340 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %702, i32 0, i32 24
  %703 = load %struct._PerlIO**, %struct._PerlIO*** %fio1340, align 8
  %704 = load i8*, i8** %key942, align 8
  %705 = load i32, i32* %len943, align 4
  %conv1341 = sext i32 %705 to i64
  %call1342 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %703, i8* %704, i64 %conv1341)
  %706 = load i32, i32* %len943, align 4
  %conv1343 = sext i32 %706 to i64
  %cmp1344 = icmp ne i64 %call1342, %conv1343
  br i1 %cmp1344, label %if.then1346, label %if.end1347

if.then1346:                                      ; preds = %if.else1339
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1347:                                       ; preds = %if.else1339
  br label %if.end1348

if.end1348:                                       ; preds = %if.end1347, %do.end1338
  br label %do.end1349

do.end1349:                                       ; preds = %if.end1348
  br label %if.end1350

if.end1350:                                       ; preds = %do.end1349, %do.end1270
  br label %if.end1351

if.end1351:                                       ; preds = %if.end1350, %if.then1097
  br label %for.inc1352

for.inc1352:                                      ; preds = %if.end1351
  %707 = load i32, i32* %i, align 4
  %inc1353 = add nsw i32 %707, 1
  store i32 %inc1353, i32* %i, align 4
  br label %for.cond938

for.end1354:                                      ; preds = %for.cond938
  br label %if.end1355

if.end1355:                                       ; preds = %for.end1354, %for.end936
  br label %out

out:                                              ; preds = %if.end1355, %if.then978, %if.then558
  %708 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %709 = bitcast %struct.hv* %708 to i8*
  %710 = bitcast i8* %709 to %struct.hv*
  %711 = load i32, i32* %riter, align 4
  call void @Perl_hv_riter_set(%struct.hv* %710, i32 %711)
  %712 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %713 = bitcast %struct.hv* %712 to i8*
  %714 = bitcast i8* %713 to %struct.hv*
  %715 = load %struct.he*, %struct.he** %eiter, align 8
  call void @Perl_hv_eiter_set(%struct.hv* %714, %struct.he* %715)
  %716 = load i32, i32* %ret, align 4
  store i32 %716, i32* %retval, align 4
  br label %return

return:                                           ; preds = %out, %if.then1346, %if.then1266, %if.then1184, %if.then1088, %if.then956, %if.then924, %if.then844, %if.then762, %if.then672, %if.then553, %if.then548, %if.then369, %if.then287, %if.then200, %if.then129, %if.then58
  %717 = load i32, i32* %retval, align 4
  ret i32 %717
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @store_tied(%struct.stcxt* %cxt, %struct.sv* %sv) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %mg = alloca %struct.magic*, align 8
  %obj = alloca %struct.sv*, align 8
  %ret = alloca i32, align 4
  %svt = alloca i32, align 4
  %mtype = alloca i8, align 1
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %nsz68 = alloca i32, align 4
  %offset75 = alloca i32, align 4
  %nsz139 = alloca i32, align 4
  %offset146 = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store %struct.sv* null, %struct.sv** %obj, align 8
  store i32 0, i32* %ret, align 4
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 255
  store i32 %and, i32* %svt, align 4
  store i8 80, i8* %mtype, align 1
  %2 = load i32, i32* %svt, align 4
  %cmp = icmp eq i32 %2, 12
  br i1 %cmp, label %if.then, label %if.else47

if.then:                                          ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %if.then
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 24
  %4 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %4, null
  br i1 %tobool, label %if.else38, label %if.then1

if.then1:                                         ; preds = %do.body
  br label %do.body2

do.body2:                                         ; preds = %if.then1
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %6 = load i8*, i8** %aptr, align 8
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf3, i32 0, i32 3
  %8 = load i8*, i8** %aend, align 8
  %cmp4 = icmp ult i8* %6, %8
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %do.body2
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 22
  %aptr7 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf6, i32 0, i32 2
  %10 = load i8*, i8** %aptr7, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr, i8** %aptr7, align 8
  store i8 12, i8* %10, align 1
  br label %if.end

if.else:                                          ; preds = %do.body2
  br label %do.body8

do.body8:                                         ; preds = %if.else
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 22
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf9, i32 0, i32 1
  %12 = load i64, i64* %asiz, align 8
  %add = add i64 1, %12
  %add10 = add i64 %add, 8191
  %and11 = and i64 %add10, -8192
  %conv = trunc i64 %and11 to i32
  store i32 %conv, i32* %nsz, align 4
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf12 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 22
  %aptr13 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf12, i32 0, i32 2
  %14 = load i8*, i8** %aptr13, align 8
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 22
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf14, i32 0, i32 0
  %16 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %14 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %16 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv15 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv15, i32* %offset, align 4
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf16 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 22
  %arena17 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf16, i32 0, i32 0
  %18 = load i8*, i8** %arena17, align 8
  %19 = load i32, i32* %nsz, align 4
  %conv18 = sext i32 %19 to i64
  %mul = mul i64 %conv18, 1
  %call = call i8* @Perl_safesysrealloc(i8* %18, i64 %mul)
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %20, i32 0, i32 22
  %arena20 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf19, i32 0, i32 0
  store i8* %call, i8** %arena20, align 8
  %21 = load i32, i32* %nsz, align 4
  %conv21 = sext i32 %21 to i64
  %22 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %22, i32 0, i32 22
  %asiz23 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf22, i32 0, i32 1
  store i64 %conv21, i64* %asiz23, align 8
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf24 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 22
  %arena25 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf24, i32 0, i32 0
  %24 = load i8*, i8** %arena25, align 8
  %25 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %25 to i64
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 22
  %aptr27 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 2
  store i8* %add.ptr, i8** %aptr27, align 8
  %27 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf28 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %27, i32 0, i32 22
  %arena29 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf28, i32 0, i32 0
  %28 = load i8*, i8** %arena29, align 8
  %29 = load i32, i32* %nsz, align 4
  %idx.ext30 = sext i32 %29 to i64
  %add.ptr31 = getelementptr inbounds i8, i8* %28, i64 %idx.ext30
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf32 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 22
  %aend33 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf32, i32 0, i32 3
  store i8* %add.ptr31, i8** %aend33, align 8
  br label %do.end

do.end:                                           ; preds = %do.body8
  %31 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf34 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %31, i32 0, i32 22
  %aptr35 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf34, i32 0, i32 2
  %32 = load i8*, i8** %aptr35, align 8
  %incdec.ptr36 = getelementptr inbounds i8, i8* %32, i32 1
  store i8* %incdec.ptr36, i8** %aptr35, align 8
  store i8 12, i8* %32, align 1
  br label %if.end

if.end:                                           ; preds = %do.end, %if.then5
  br label %do.end37

do.end37:                                         ; preds = %if.end
  br label %if.end45

if.else38:                                        ; preds = %do.body
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio39 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 24
  %34 = load %struct._PerlIO**, %struct._PerlIO*** %fio39, align 8
  %call40 = call i32 @PerlIO_putc(%struct._PerlIO** %34, i32 12)
  %cmp41 = icmp eq i32 %call40, -1
  br i1 %cmp41, label %if.then43, label %if.end44

if.then43:                                        ; preds = %if.else38
  store i32 -1, i32* %retval, align 4
  br label %return

if.end44:                                         ; preds = %if.else38
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %do.end37
  br label %do.end46

do.end46:                                         ; preds = %if.end45
  br label %if.end193

if.else47:                                        ; preds = %entry
  %35 = load i32, i32* %svt, align 4
  %cmp48 = icmp eq i32 %35, 11
  br i1 %cmp48, label %if.then50, label %if.else121

if.then50:                                        ; preds = %if.else47
  br label %do.body51

do.body51:                                        ; preds = %if.then50
  %36 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio52 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %36, i32 0, i32 24
  %37 = load %struct._PerlIO**, %struct._PerlIO*** %fio52, align 8
  %tobool53 = icmp ne %struct._PerlIO** %37, null
  br i1 %tobool53, label %if.else112, label %if.then54

if.then54:                                        ; preds = %do.body51
  br label %do.body55

do.body55:                                        ; preds = %if.then54
  %38 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf56 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %38, i32 0, i32 22
  %aptr57 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf56, i32 0, i32 2
  %39 = load i8*, i8** %aptr57, align 8
  %40 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf58 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %40, i32 0, i32 22
  %aend59 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf58, i32 0, i32 3
  %41 = load i8*, i8** %aend59, align 8
  %cmp60 = icmp ult i8* %39, %41
  br i1 %cmp60, label %if.then62, label %if.else66

if.then62:                                        ; preds = %do.body55
  %42 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf63 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %42, i32 0, i32 22
  %aptr64 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf63, i32 0, i32 2
  %43 = load i8*, i8** %aptr64, align 8
  %incdec.ptr65 = getelementptr inbounds i8, i8* %43, i32 1
  store i8* %incdec.ptr65, i8** %aptr64, align 8
  store i8 11, i8* %43, align 1
  br label %if.end110

if.else66:                                        ; preds = %do.body55
  br label %do.body67

do.body67:                                        ; preds = %if.else66
  %44 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf69 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %44, i32 0, i32 22
  %asiz70 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf69, i32 0, i32 1
  %45 = load i64, i64* %asiz70, align 8
  %add71 = add i64 1, %45
  %add72 = add i64 %add71, 8191
  %and73 = and i64 %add72, -8192
  %conv74 = trunc i64 %and73 to i32
  store i32 %conv74, i32* %nsz68, align 4
  %46 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf76 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %46, i32 0, i32 22
  %aptr77 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf76, i32 0, i32 2
  %47 = load i8*, i8** %aptr77, align 8
  %48 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf78 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %48, i32 0, i32 22
  %arena79 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf78, i32 0, i32 0
  %49 = load i8*, i8** %arena79, align 8
  %sub.ptr.lhs.cast80 = ptrtoint i8* %47 to i64
  %sub.ptr.rhs.cast81 = ptrtoint i8* %49 to i64
  %sub.ptr.sub82 = sub i64 %sub.ptr.lhs.cast80, %sub.ptr.rhs.cast81
  %conv83 = trunc i64 %sub.ptr.sub82 to i32
  store i32 %conv83, i32* %offset75, align 4
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf84 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %50, i32 0, i32 22
  %arena85 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf84, i32 0, i32 0
  %51 = load i8*, i8** %arena85, align 8
  %52 = load i32, i32* %nsz68, align 4
  %conv86 = sext i32 %52 to i64
  %mul87 = mul i64 %conv86, 1
  %call88 = call i8* @Perl_safesysrealloc(i8* %51, i64 %mul87)
  %53 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf89 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %53, i32 0, i32 22
  %arena90 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf89, i32 0, i32 0
  store i8* %call88, i8** %arena90, align 8
  %54 = load i32, i32* %nsz68, align 4
  %conv91 = sext i32 %54 to i64
  %55 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf92 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %55, i32 0, i32 22
  %asiz93 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf92, i32 0, i32 1
  store i64 %conv91, i64* %asiz93, align 8
  %56 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf94 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %56, i32 0, i32 22
  %arena95 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf94, i32 0, i32 0
  %57 = load i8*, i8** %arena95, align 8
  %58 = load i32, i32* %offset75, align 4
  %idx.ext96 = sext i32 %58 to i64
  %add.ptr97 = getelementptr inbounds i8, i8* %57, i64 %idx.ext96
  %59 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf98 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %59, i32 0, i32 22
  %aptr99 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf98, i32 0, i32 2
  store i8* %add.ptr97, i8** %aptr99, align 8
  %60 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf100 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %60, i32 0, i32 22
  %arena101 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf100, i32 0, i32 0
  %61 = load i8*, i8** %arena101, align 8
  %62 = load i32, i32* %nsz68, align 4
  %idx.ext102 = sext i32 %62 to i64
  %add.ptr103 = getelementptr inbounds i8, i8* %61, i64 %idx.ext102
  %63 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf104 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %63, i32 0, i32 22
  %aend105 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf104, i32 0, i32 3
  store i8* %add.ptr103, i8** %aend105, align 8
  br label %do.end106

do.end106:                                        ; preds = %do.body67
  %64 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf107 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %64, i32 0, i32 22
  %aptr108 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf107, i32 0, i32 2
  %65 = load i8*, i8** %aptr108, align 8
  %incdec.ptr109 = getelementptr inbounds i8, i8* %65, i32 1
  store i8* %incdec.ptr109, i8** %aptr108, align 8
  store i8 11, i8* %65, align 1
  br label %if.end110

if.end110:                                        ; preds = %do.end106, %if.then62
  br label %do.end111

do.end111:                                        ; preds = %if.end110
  br label %if.end119

if.else112:                                       ; preds = %do.body51
  %66 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio113 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %66, i32 0, i32 24
  %67 = load %struct._PerlIO**, %struct._PerlIO*** %fio113, align 8
  %call114 = call i32 @PerlIO_putc(%struct._PerlIO** %67, i32 11)
  %cmp115 = icmp eq i32 %call114, -1
  br i1 %cmp115, label %if.then117, label %if.end118

if.then117:                                       ; preds = %if.else112
  store i32 -1, i32* %retval, align 4
  br label %return

if.end118:                                        ; preds = %if.else112
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %do.end111
  br label %do.end120

do.end120:                                        ; preds = %if.end119
  br label %if.end192

if.else121:                                       ; preds = %if.else47
  br label %do.body122

do.body122:                                       ; preds = %if.else121
  %68 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio123 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %68, i32 0, i32 24
  %69 = load %struct._PerlIO**, %struct._PerlIO*** %fio123, align 8
  %tobool124 = icmp ne %struct._PerlIO** %69, null
  br i1 %tobool124, label %if.else183, label %if.then125

if.then125:                                       ; preds = %do.body122
  br label %do.body126

do.body126:                                       ; preds = %if.then125
  %70 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf127 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %70, i32 0, i32 22
  %aptr128 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf127, i32 0, i32 2
  %71 = load i8*, i8** %aptr128, align 8
  %72 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf129 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %72, i32 0, i32 22
  %aend130 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf129, i32 0, i32 3
  %73 = load i8*, i8** %aend130, align 8
  %cmp131 = icmp ult i8* %71, %73
  br i1 %cmp131, label %if.then133, label %if.else137

if.then133:                                       ; preds = %do.body126
  %74 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf134 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %74, i32 0, i32 22
  %aptr135 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf134, i32 0, i32 2
  %75 = load i8*, i8** %aptr135, align 8
  %incdec.ptr136 = getelementptr inbounds i8, i8* %75, i32 1
  store i8* %incdec.ptr136, i8** %aptr135, align 8
  store i8 13, i8* %75, align 1
  br label %if.end181

if.else137:                                       ; preds = %do.body126
  br label %do.body138

do.body138:                                       ; preds = %if.else137
  %76 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf140 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %76, i32 0, i32 22
  %asiz141 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf140, i32 0, i32 1
  %77 = load i64, i64* %asiz141, align 8
  %add142 = add i64 1, %77
  %add143 = add i64 %add142, 8191
  %and144 = and i64 %add143, -8192
  %conv145 = trunc i64 %and144 to i32
  store i32 %conv145, i32* %nsz139, align 4
  %78 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf147 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %78, i32 0, i32 22
  %aptr148 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf147, i32 0, i32 2
  %79 = load i8*, i8** %aptr148, align 8
  %80 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf149 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %80, i32 0, i32 22
  %arena150 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf149, i32 0, i32 0
  %81 = load i8*, i8** %arena150, align 8
  %sub.ptr.lhs.cast151 = ptrtoint i8* %79 to i64
  %sub.ptr.rhs.cast152 = ptrtoint i8* %81 to i64
  %sub.ptr.sub153 = sub i64 %sub.ptr.lhs.cast151, %sub.ptr.rhs.cast152
  %conv154 = trunc i64 %sub.ptr.sub153 to i32
  store i32 %conv154, i32* %offset146, align 4
  %82 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf155 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %82, i32 0, i32 22
  %arena156 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf155, i32 0, i32 0
  %83 = load i8*, i8** %arena156, align 8
  %84 = load i32, i32* %nsz139, align 4
  %conv157 = sext i32 %84 to i64
  %mul158 = mul i64 %conv157, 1
  %call159 = call i8* @Perl_safesysrealloc(i8* %83, i64 %mul158)
  %85 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf160 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %85, i32 0, i32 22
  %arena161 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf160, i32 0, i32 0
  store i8* %call159, i8** %arena161, align 8
  %86 = load i32, i32* %nsz139, align 4
  %conv162 = sext i32 %86 to i64
  %87 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf163 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %87, i32 0, i32 22
  %asiz164 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf163, i32 0, i32 1
  store i64 %conv162, i64* %asiz164, align 8
  %88 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf165 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %88, i32 0, i32 22
  %arena166 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf165, i32 0, i32 0
  %89 = load i8*, i8** %arena166, align 8
  %90 = load i32, i32* %offset146, align 4
  %idx.ext167 = sext i32 %90 to i64
  %add.ptr168 = getelementptr inbounds i8, i8* %89, i64 %idx.ext167
  %91 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf169 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %91, i32 0, i32 22
  %aptr170 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf169, i32 0, i32 2
  store i8* %add.ptr168, i8** %aptr170, align 8
  %92 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf171 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %92, i32 0, i32 22
  %arena172 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf171, i32 0, i32 0
  %93 = load i8*, i8** %arena172, align 8
  %94 = load i32, i32* %nsz139, align 4
  %idx.ext173 = sext i32 %94 to i64
  %add.ptr174 = getelementptr inbounds i8, i8* %93, i64 %idx.ext173
  %95 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf175 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %95, i32 0, i32 22
  %aend176 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf175, i32 0, i32 3
  store i8* %add.ptr174, i8** %aend176, align 8
  br label %do.end177

do.end177:                                        ; preds = %do.body138
  %96 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf178 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %96, i32 0, i32 22
  %aptr179 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf178, i32 0, i32 2
  %97 = load i8*, i8** %aptr179, align 8
  %incdec.ptr180 = getelementptr inbounds i8, i8* %97, i32 1
  store i8* %incdec.ptr180, i8** %aptr179, align 8
  store i8 13, i8* %97, align 1
  br label %if.end181

if.end181:                                        ; preds = %do.end177, %if.then133
  br label %do.end182

do.end182:                                        ; preds = %if.end181
  br label %if.end190

if.else183:                                       ; preds = %do.body122
  %98 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio184 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %98, i32 0, i32 24
  %99 = load %struct._PerlIO**, %struct._PerlIO*** %fio184, align 8
  %call185 = call i32 @PerlIO_putc(%struct._PerlIO** %99, i32 13)
  %cmp186 = icmp eq i32 %call185, -1
  br i1 %cmp186, label %if.then188, label %if.end189

if.then188:                                       ; preds = %if.else183
  store i32 -1, i32* %retval, align 4
  br label %return

if.end189:                                        ; preds = %if.else183
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %do.end182
  br label %do.end191

do.end191:                                        ; preds = %if.end190
  store i8 113, i8* %mtype, align 1
  br label %if.end192

if.end192:                                        ; preds = %do.end191, %do.end120
  br label %if.end193

if.end193:                                        ; preds = %if.end192, %do.end46
  %100 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %101 = load i8, i8* %mtype, align 1
  %conv194 = sext i8 %101 to i32
  %call195 = call %struct.magic* @Perl_mg_find(%struct.sv* %100, i32 %conv194)
  store %struct.magic* %call195, %struct.magic** %mg, align 8
  %tobool196 = icmp ne %struct.magic* %call195, null
  br i1 %tobool196, label %if.end206, label %if.then197

if.then197:                                       ; preds = %if.end193
  br label %do.body198

do.body198:                                       ; preds = %if.then197
  %102 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %102, i32 0, i32 19
  store i32 1, i32* %s_dirty, align 8
  %103 = load i8, i8* %mtype, align 1
  %conv199 = sext i8 %103 to i32
  %104 = load i32, i32* %svt, align 4
  %cmp200 = icmp eq i32 %104, 12
  br i1 %cmp200, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.body198
  br label %cond.end

cond.false:                                       ; preds = %do.body198
  %105 = load i32, i32* %svt, align 4
  %cmp202 = icmp eq i32 %105, 11
  %106 = zext i1 %cmp202 to i64
  %cond = select i1 %cmp202, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond204 = phi i8* [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), %cond.true ], [ %cond, %cond.false ]
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.40, i64 0, i64 0), i32 %conv199, i8* %cond204)
  br label %do.end205

do.end205:                                        ; preds = %cond.end
  br label %if.end206

if.end206:                                        ; preds = %do.end205, %if.end193
  %107 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_obj = getelementptr inbounds %struct.magic, %struct.magic* %107, i32 0, i32 6
  %108 = load %struct.sv*, %struct.sv** %mg_obj, align 8
  %tobool207 = icmp ne %struct.sv* %108, null
  br i1 %tobool207, label %cond.true208, label %cond.false210

cond.true208:                                     ; preds = %if.end206
  %109 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_obj209 = getelementptr inbounds %struct.magic, %struct.magic* %109, i32 0, i32 6
  %110 = load %struct.sv*, %struct.sv** %mg_obj209, align 8
  br label %cond.end212

cond.false210:                                    ; preds = %if.end206
  %call211 = call %struct.sv* @Perl_newSV(i64 0)
  br label %cond.end212

cond.end212:                                      ; preds = %cond.false210, %cond.true208
  %cond213 = phi %struct.sv* [ %110, %cond.true208 ], [ %call211, %cond.false210 ]
  store %struct.sv* %cond213, %struct.sv** %obj, align 8
  %111 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %112 = load %struct.sv*, %struct.sv** %obj, align 8
  %call214 = call i32 @store(%struct.stcxt* %111, %struct.sv* %112)
  store i32 %call214, i32* %ret, align 4
  %tobool215 = icmp ne i32 %call214, 0
  br i1 %tobool215, label %if.then216, label %if.end217

if.then216:                                       ; preds = %cond.end212
  %113 = load i32, i32* %ret, align 4
  store i32 %113, i32* %retval, align 4
  br label %return

if.end217:                                        ; preds = %cond.end212
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end217, %if.then216, %if.then188, %if.then117, %if.then43
  %114 = load i32, i32* %retval, align 4
  ret i32 %114
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @store_tied_item(%struct.stcxt* %cxt, %struct.sv* %sv) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %mg = alloca %struct.magic*, align 8
  %ret = alloca i32, align 4
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %idx = alloca i32, align 4
  %nsz80 = alloca i32, align 4
  %offset87 = alloca i32, align 4
  %y = alloca i32, align 4
  %nsz156 = alloca i32, align 4
  %offset163 = alloca i32, align 4
  %nsz238 = alloca i32, align 4
  %offset245 = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call = call %struct.magic* @Perl_mg_find(%struct.sv* %0, i32 112)
  store %struct.magic* %call, %struct.magic** %mg, align 8
  %tobool = icmp ne %struct.magic* %call, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %if.then
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 19
  store i32 1, i32* %s_dirty, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.41, i64 0, i64 0))
  br label %do.end

do.end:                                           ; preds = %do.body
  br label %if.end

if.end:                                           ; preds = %do.end, %entry
  %2 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_ptr = getelementptr inbounds %struct.magic, %struct.magic* %2, i32 0, i32 7
  %3 = load i8*, i8** %mg_ptr, align 8
  %tobool1 = icmp ne i8* %3, null
  br i1 %tobool1, label %if.then2, label %if.else61

if.then2:                                         ; preds = %if.end
  br label %do.body3

do.body3:                                         ; preds = %if.then2
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 24
  %5 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool4 = icmp ne %struct._PerlIO** %5, null
  br i1 %tobool4, label %if.else43, label %if.then5

if.then5:                                         ; preds = %do.body3
  br label %do.body6

do.body6:                                         ; preds = %if.then5
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %7 = load i8*, i8** %aptr, align 8
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf7 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf7, i32 0, i32 3
  %9 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %7, %9
  br i1 %cmp, label %if.then8, label %if.else

if.then8:                                         ; preds = %do.body6
  %10 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %10, i32 0, i32 22
  %aptr10 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf9, i32 0, i32 2
  %11 = load i8*, i8** %aptr10, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr, i8** %aptr10, align 8
  store i8 21, i8* %11, align 1
  br label %if.end41

if.else:                                          ; preds = %do.body6
  br label %do.body11

do.body11:                                        ; preds = %if.else
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf12 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 22
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf12, i32 0, i32 1
  %13 = load i64, i64* %asiz, align 8
  %add = add i64 1, %13
  %add13 = add i64 %add, 8191
  %and = and i64 %add13, -8192
  %conv = trunc i64 %and to i32
  store i32 %conv, i32* %nsz, align 4
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 22
  %aptr15 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf14, i32 0, i32 2
  %15 = load i8*, i8** %aptr15, align 8
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf16 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 22
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf16, i32 0, i32 0
  %17 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %15 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %17 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv17 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv17, i32* %offset, align 4
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf18 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 22
  %arena19 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf18, i32 0, i32 0
  %19 = load i8*, i8** %arena19, align 8
  %20 = load i32, i32* %nsz, align 4
  %conv20 = sext i32 %20 to i64
  %mul = mul i64 %conv20, 1
  %call21 = call i8* @Perl_safesysrealloc(i8* %19, i64 %mul)
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 22
  %arena23 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf22, i32 0, i32 0
  store i8* %call21, i8** %arena23, align 8
  %22 = load i32, i32* %nsz, align 4
  %conv24 = sext i32 %22 to i64
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf25 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 22
  %asiz26 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf25, i32 0, i32 1
  store i64 %conv24, i64* %asiz26, align 8
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf27 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 22
  %arena28 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf27, i32 0, i32 0
  %25 = load i8*, i8** %arena28, align 8
  %26 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %26 to i64
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %idx.ext
  %27 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf29 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %27, i32 0, i32 22
  %aptr30 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf29, i32 0, i32 2
  store i8* %add.ptr, i8** %aptr30, align 8
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf31 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 22
  %arena32 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf31, i32 0, i32 0
  %29 = load i8*, i8** %arena32, align 8
  %30 = load i32, i32* %nsz, align 4
  %idx.ext33 = sext i32 %30 to i64
  %add.ptr34 = getelementptr inbounds i8, i8* %29, i64 %idx.ext33
  %31 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf35 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %31, i32 0, i32 22
  %aend36 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf35, i32 0, i32 3
  store i8* %add.ptr34, i8** %aend36, align 8
  br label %do.end37

do.end37:                                         ; preds = %do.body11
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf38 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %32, i32 0, i32 22
  %aptr39 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf38, i32 0, i32 2
  %33 = load i8*, i8** %aptr39, align 8
  %incdec.ptr40 = getelementptr inbounds i8, i8* %33, i32 1
  store i8* %incdec.ptr40, i8** %aptr39, align 8
  store i8 21, i8* %33, align 1
  br label %if.end41

if.end41:                                         ; preds = %do.end37, %if.then8
  br label %do.end42

do.end42:                                         ; preds = %if.end41
  br label %if.end50

if.else43:                                        ; preds = %do.body3
  %34 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio44 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %34, i32 0, i32 24
  %35 = load %struct._PerlIO**, %struct._PerlIO*** %fio44, align 8
  %call45 = call i32 @PerlIO_putc(%struct._PerlIO** %35, i32 21)
  %cmp46 = icmp eq i32 %call45, -1
  br i1 %cmp46, label %if.then48, label %if.end49

if.then48:                                        ; preds = %if.else43
  store i32 -1, i32* %retval, align 4
  br label %return

if.end49:                                         ; preds = %if.else43
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %do.end42
  br label %do.end51

do.end51:                                         ; preds = %if.end50
  %36 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %37 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_obj = getelementptr inbounds %struct.magic, %struct.magic* %37, i32 0, i32 6
  %38 = load %struct.sv*, %struct.sv** %mg_obj, align 8
  %call52 = call i32 @store(%struct.stcxt* %36, %struct.sv* %38)
  store i32 %call52, i32* %ret, align 4
  %tobool53 = icmp ne i32 %call52, 0
  br i1 %tobool53, label %if.then54, label %if.end55

if.then54:                                        ; preds = %do.end51
  %39 = load i32, i32* %ret, align 4
  store i32 %39, i32* %retval, align 4
  br label %return

if.end55:                                         ; preds = %do.end51
  %40 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %41 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_ptr56 = getelementptr inbounds %struct.magic, %struct.magic* %41, i32 0, i32 7
  %42 = load i8*, i8** %mg_ptr56, align 8
  %43 = bitcast i8* %42 to %struct.sv*
  %call57 = call i32 @store(%struct.stcxt* %40, %struct.sv* %43)
  store i32 %call57, i32* %ret, align 4
  %tobool58 = icmp ne i32 %call57, 0
  br i1 %tobool58, label %if.then59, label %if.end60

if.then59:                                        ; preds = %if.end55
  %44 = load i32, i32* %ret, align 4
  store i32 %44, i32* %retval, align 4
  br label %return

if.end60:                                         ; preds = %if.end55
  br label %if.end307

if.else61:                                        ; preds = %if.end
  %45 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_len = getelementptr inbounds %struct.magic, %struct.magic* %45, i32 0, i32 5
  %46 = load i64, i64* %mg_len, align 8
  %conv62 = trunc i64 %46 to i32
  store i32 %conv62, i32* %idx, align 4
  br label %do.body63

do.body63:                                        ; preds = %if.else61
  %47 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio64 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %47, i32 0, i32 24
  %48 = load %struct._PerlIO**, %struct._PerlIO*** %fio64, align 8
  %tobool65 = icmp ne %struct._PerlIO** %48, null
  br i1 %tobool65, label %if.else124, label %if.then66

if.then66:                                        ; preds = %do.body63
  br label %do.body67

do.body67:                                        ; preds = %if.then66
  %49 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf68 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %49, i32 0, i32 22
  %aptr69 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf68, i32 0, i32 2
  %50 = load i8*, i8** %aptr69, align 8
  %51 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf70 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %51, i32 0, i32 22
  %aend71 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf70, i32 0, i32 3
  %52 = load i8*, i8** %aend71, align 8
  %cmp72 = icmp ult i8* %50, %52
  br i1 %cmp72, label %if.then74, label %if.else78

if.then74:                                        ; preds = %do.body67
  %53 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf75 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %53, i32 0, i32 22
  %aptr76 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf75, i32 0, i32 2
  %54 = load i8*, i8** %aptr76, align 8
  %incdec.ptr77 = getelementptr inbounds i8, i8* %54, i32 1
  store i8* %incdec.ptr77, i8** %aptr76, align 8
  store i8 22, i8* %54, align 1
  br label %if.end122

if.else78:                                        ; preds = %do.body67
  br label %do.body79

do.body79:                                        ; preds = %if.else78
  %55 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf81 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %55, i32 0, i32 22
  %asiz82 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf81, i32 0, i32 1
  %56 = load i64, i64* %asiz82, align 8
  %add83 = add i64 1, %56
  %add84 = add i64 %add83, 8191
  %and85 = and i64 %add84, -8192
  %conv86 = trunc i64 %and85 to i32
  store i32 %conv86, i32* %nsz80, align 4
  %57 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf88 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %57, i32 0, i32 22
  %aptr89 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf88, i32 0, i32 2
  %58 = load i8*, i8** %aptr89, align 8
  %59 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf90 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %59, i32 0, i32 22
  %arena91 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf90, i32 0, i32 0
  %60 = load i8*, i8** %arena91, align 8
  %sub.ptr.lhs.cast92 = ptrtoint i8* %58 to i64
  %sub.ptr.rhs.cast93 = ptrtoint i8* %60 to i64
  %sub.ptr.sub94 = sub i64 %sub.ptr.lhs.cast92, %sub.ptr.rhs.cast93
  %conv95 = trunc i64 %sub.ptr.sub94 to i32
  store i32 %conv95, i32* %offset87, align 4
  %61 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf96 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %61, i32 0, i32 22
  %arena97 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf96, i32 0, i32 0
  %62 = load i8*, i8** %arena97, align 8
  %63 = load i32, i32* %nsz80, align 4
  %conv98 = sext i32 %63 to i64
  %mul99 = mul i64 %conv98, 1
  %call100 = call i8* @Perl_safesysrealloc(i8* %62, i64 %mul99)
  %64 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf101 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %64, i32 0, i32 22
  %arena102 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf101, i32 0, i32 0
  store i8* %call100, i8** %arena102, align 8
  %65 = load i32, i32* %nsz80, align 4
  %conv103 = sext i32 %65 to i64
  %66 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf104 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %66, i32 0, i32 22
  %asiz105 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf104, i32 0, i32 1
  store i64 %conv103, i64* %asiz105, align 8
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf106 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %67, i32 0, i32 22
  %arena107 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf106, i32 0, i32 0
  %68 = load i8*, i8** %arena107, align 8
  %69 = load i32, i32* %offset87, align 4
  %idx.ext108 = sext i32 %69 to i64
  %add.ptr109 = getelementptr inbounds i8, i8* %68, i64 %idx.ext108
  %70 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf110 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %70, i32 0, i32 22
  %aptr111 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf110, i32 0, i32 2
  store i8* %add.ptr109, i8** %aptr111, align 8
  %71 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf112 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %71, i32 0, i32 22
  %arena113 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf112, i32 0, i32 0
  %72 = load i8*, i8** %arena113, align 8
  %73 = load i32, i32* %nsz80, align 4
  %idx.ext114 = sext i32 %73 to i64
  %add.ptr115 = getelementptr inbounds i8, i8* %72, i64 %idx.ext114
  %74 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf116 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %74, i32 0, i32 22
  %aend117 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf116, i32 0, i32 3
  store i8* %add.ptr115, i8** %aend117, align 8
  br label %do.end118

do.end118:                                        ; preds = %do.body79
  %75 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf119 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %75, i32 0, i32 22
  %aptr120 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf119, i32 0, i32 2
  %76 = load i8*, i8** %aptr120, align 8
  %incdec.ptr121 = getelementptr inbounds i8, i8* %76, i32 1
  store i8* %incdec.ptr121, i8** %aptr120, align 8
  store i8 22, i8* %76, align 1
  br label %if.end122

if.end122:                                        ; preds = %do.end118, %if.then74
  br label %do.end123

do.end123:                                        ; preds = %if.end122
  br label %if.end131

if.else124:                                       ; preds = %do.body63
  %77 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio125 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %77, i32 0, i32 24
  %78 = load %struct._PerlIO**, %struct._PerlIO*** %fio125, align 8
  %call126 = call i32 @PerlIO_putc(%struct._PerlIO** %78, i32 22)
  %cmp127 = icmp eq i32 %call126, -1
  br i1 %cmp127, label %if.then129, label %if.end130

if.then129:                                       ; preds = %if.else124
  store i32 -1, i32* %retval, align 4
  br label %return

if.end130:                                        ; preds = %if.else124
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %do.end123
  br label %do.end132

do.end132:                                        ; preds = %if.end131
  %79 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %80 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_obj133 = getelementptr inbounds %struct.magic, %struct.magic* %80, i32 0, i32 6
  %81 = load %struct.sv*, %struct.sv** %mg_obj133, align 8
  %call134 = call i32 @store(%struct.stcxt* %79, %struct.sv* %81)
  store i32 %call134, i32* %ret, align 4
  %tobool135 = icmp ne i32 %call134, 0
  br i1 %tobool135, label %if.then136, label %if.end137

if.then136:                                       ; preds = %do.end132
  %82 = load i32, i32* %ret, align 4
  store i32 %82, i32* %retval, align 4
  br label %return

if.end137:                                        ; preds = %do.end132
  br label %do.body138

do.body138:                                       ; preds = %if.end137
  %83 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %83, i32 0, i32 12
  %84 = load i32, i32* %netorder, align 8
  %tobool139 = icmp ne i32 %84, 0
  br i1 %tobool139, label %if.then140, label %if.else223

if.then140:                                       ; preds = %do.body138
  %85 = load i32, i32* %idx, align 4
  %call141 = call i32 @my_swap32(i32 %85)
  store i32 %call141, i32* %y, align 4
  %86 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio142 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %86, i32 0, i32 24
  %87 = load %struct._PerlIO**, %struct._PerlIO*** %fio142, align 8
  %tobool143 = icmp ne %struct._PerlIO** %87, null
  br i1 %tobool143, label %if.else215, label %if.then144

if.then144:                                       ; preds = %if.then140
  br label %do.body145

do.body145:                                       ; preds = %if.then144
  br label %do.body146

do.body146:                                       ; preds = %do.body145
  %88 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf147 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %88, i32 0, i32 22
  %aptr148 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf147, i32 0, i32 2
  %89 = load i8*, i8** %aptr148, align 8
  %add.ptr149 = getelementptr inbounds i8, i8* %89, i64 4
  %90 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf150 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %90, i32 0, i32 22
  %aend151 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf150, i32 0, i32 3
  %91 = load i8*, i8** %aend151, align 8
  %cmp152 = icmp ugt i8* %add.ptr149, %91
  br i1 %cmp152, label %if.then154, label %if.end195

if.then154:                                       ; preds = %do.body146
  br label %do.body155

do.body155:                                       ; preds = %if.then154
  %92 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf157 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %92, i32 0, i32 22
  %asiz158 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf157, i32 0, i32 1
  %93 = load i64, i64* %asiz158, align 8
  %add159 = add i64 4, %93
  %add160 = add i64 %add159, 8191
  %and161 = and i64 %add160, -8192
  %conv162 = trunc i64 %and161 to i32
  store i32 %conv162, i32* %nsz156, align 4
  %94 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf164 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %94, i32 0, i32 22
  %aptr165 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf164, i32 0, i32 2
  %95 = load i8*, i8** %aptr165, align 8
  %96 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf166 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %96, i32 0, i32 22
  %arena167 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf166, i32 0, i32 0
  %97 = load i8*, i8** %arena167, align 8
  %sub.ptr.lhs.cast168 = ptrtoint i8* %95 to i64
  %sub.ptr.rhs.cast169 = ptrtoint i8* %97 to i64
  %sub.ptr.sub170 = sub i64 %sub.ptr.lhs.cast168, %sub.ptr.rhs.cast169
  %conv171 = trunc i64 %sub.ptr.sub170 to i32
  store i32 %conv171, i32* %offset163, align 4
  %98 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf172 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %98, i32 0, i32 22
  %arena173 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf172, i32 0, i32 0
  %99 = load i8*, i8** %arena173, align 8
  %100 = load i32, i32* %nsz156, align 4
  %conv174 = sext i32 %100 to i64
  %mul175 = mul i64 %conv174, 1
  %call176 = call i8* @Perl_safesysrealloc(i8* %99, i64 %mul175)
  %101 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf177 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %101, i32 0, i32 22
  %arena178 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf177, i32 0, i32 0
  store i8* %call176, i8** %arena178, align 8
  %102 = load i32, i32* %nsz156, align 4
  %conv179 = sext i32 %102 to i64
  %103 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf180 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %103, i32 0, i32 22
  %asiz181 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf180, i32 0, i32 1
  store i64 %conv179, i64* %asiz181, align 8
  %104 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf182 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %104, i32 0, i32 22
  %arena183 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf182, i32 0, i32 0
  %105 = load i8*, i8** %arena183, align 8
  %106 = load i32, i32* %offset163, align 4
  %idx.ext184 = sext i32 %106 to i64
  %add.ptr185 = getelementptr inbounds i8, i8* %105, i64 %idx.ext184
  %107 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf186 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %107, i32 0, i32 22
  %aptr187 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf186, i32 0, i32 2
  store i8* %add.ptr185, i8** %aptr187, align 8
  %108 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf188 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %108, i32 0, i32 22
  %arena189 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf188, i32 0, i32 0
  %109 = load i8*, i8** %arena189, align 8
  %110 = load i32, i32* %nsz156, align 4
  %idx.ext190 = sext i32 %110 to i64
  %add.ptr191 = getelementptr inbounds i8, i8* %109, i64 %idx.ext190
  %111 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf192 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %111, i32 0, i32 22
  %aend193 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf192, i32 0, i32 3
  store i8* %add.ptr191, i8** %aend193, align 8
  br label %do.end194

do.end194:                                        ; preds = %do.body155
  br label %if.end195

if.end195:                                        ; preds = %do.end194, %do.body146
  br label %do.end196

do.end196:                                        ; preds = %if.end195
  %112 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf197 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %112, i32 0, i32 22
  %aptr198 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf197, i32 0, i32 2
  %113 = load i8*, i8** %aptr198, align 8
  %114 = ptrtoint i8* %113 to i64
  %115 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf199 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %115, i32 0, i32 22
  %aptr200 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf199, i32 0, i32 2
  %116 = load i8*, i8** %aptr200, align 8
  %117 = ptrtoint i8* %116 to i64
  %and201 = and i64 %117, -4
  %cmp202 = icmp eq i64 %114, %and201
  br i1 %cmp202, label %if.then204, label %if.else207

if.then204:                                       ; preds = %do.end196
  %118 = load i32, i32* %y, align 4
  %119 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf205 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %119, i32 0, i32 22
  %aptr206 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf205, i32 0, i32 2
  %120 = load i8*, i8** %aptr206, align 8
  %121 = bitcast i8* %120 to i32*
  store i32 %118, i32* %121, align 4
  br label %if.end210

if.else207:                                       ; preds = %do.end196
  %122 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf208 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %122, i32 0, i32 22
  %aptr209 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf208, i32 0, i32 2
  %123 = load i8*, i8** %aptr209, align 8
  %124 = bitcast i32* %y to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %123, i8* align 4 %124, i64 4, i1 false)
  br label %if.end210

if.end210:                                        ; preds = %if.else207, %if.then204
  %125 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf211 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %125, i32 0, i32 22
  %aptr212 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf211, i32 0, i32 2
  %126 = load i8*, i8** %aptr212, align 8
  %add.ptr213 = getelementptr inbounds i8, i8* %126, i64 4
  store i8* %add.ptr213, i8** %aptr212, align 8
  br label %do.end214

do.end214:                                        ; preds = %if.end210
  br label %if.end222

if.else215:                                       ; preds = %if.then140
  %127 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio216 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %127, i32 0, i32 24
  %128 = load %struct._PerlIO**, %struct._PerlIO*** %fio216, align 8
  %129 = bitcast i32* %y to i8*
  %call217 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %128, i8* %129, i64 4)
  %cmp218 = icmp ne i64 %call217, 4
  br i1 %cmp218, label %if.then220, label %if.end221

if.then220:                                       ; preds = %if.else215
  store i32 -1, i32* %retval, align 4
  br label %return

if.end221:                                        ; preds = %if.else215
  br label %if.end222

if.end222:                                        ; preds = %if.end221, %do.end214
  br label %if.end305

if.else223:                                       ; preds = %do.body138
  %130 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio224 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %130, i32 0, i32 24
  %131 = load %struct._PerlIO**, %struct._PerlIO*** %fio224, align 8
  %tobool225 = icmp ne %struct._PerlIO** %131, null
  br i1 %tobool225, label %if.else297, label %if.then226

if.then226:                                       ; preds = %if.else223
  br label %do.body227

do.body227:                                       ; preds = %if.then226
  br label %do.body228

do.body228:                                       ; preds = %do.body227
  %132 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf229 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %132, i32 0, i32 22
  %aptr230 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf229, i32 0, i32 2
  %133 = load i8*, i8** %aptr230, align 8
  %add.ptr231 = getelementptr inbounds i8, i8* %133, i64 4
  %134 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf232 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %134, i32 0, i32 22
  %aend233 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf232, i32 0, i32 3
  %135 = load i8*, i8** %aend233, align 8
  %cmp234 = icmp ugt i8* %add.ptr231, %135
  br i1 %cmp234, label %if.then236, label %if.end277

if.then236:                                       ; preds = %do.body228
  br label %do.body237

do.body237:                                       ; preds = %if.then236
  %136 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf239 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %136, i32 0, i32 22
  %asiz240 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf239, i32 0, i32 1
  %137 = load i64, i64* %asiz240, align 8
  %add241 = add i64 4, %137
  %add242 = add i64 %add241, 8191
  %and243 = and i64 %add242, -8192
  %conv244 = trunc i64 %and243 to i32
  store i32 %conv244, i32* %nsz238, align 4
  %138 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf246 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %138, i32 0, i32 22
  %aptr247 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf246, i32 0, i32 2
  %139 = load i8*, i8** %aptr247, align 8
  %140 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf248 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %140, i32 0, i32 22
  %arena249 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf248, i32 0, i32 0
  %141 = load i8*, i8** %arena249, align 8
  %sub.ptr.lhs.cast250 = ptrtoint i8* %139 to i64
  %sub.ptr.rhs.cast251 = ptrtoint i8* %141 to i64
  %sub.ptr.sub252 = sub i64 %sub.ptr.lhs.cast250, %sub.ptr.rhs.cast251
  %conv253 = trunc i64 %sub.ptr.sub252 to i32
  store i32 %conv253, i32* %offset245, align 4
  %142 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf254 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %142, i32 0, i32 22
  %arena255 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf254, i32 0, i32 0
  %143 = load i8*, i8** %arena255, align 8
  %144 = load i32, i32* %nsz238, align 4
  %conv256 = sext i32 %144 to i64
  %mul257 = mul i64 %conv256, 1
  %call258 = call i8* @Perl_safesysrealloc(i8* %143, i64 %mul257)
  %145 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf259 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %145, i32 0, i32 22
  %arena260 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf259, i32 0, i32 0
  store i8* %call258, i8** %arena260, align 8
  %146 = load i32, i32* %nsz238, align 4
  %conv261 = sext i32 %146 to i64
  %147 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf262 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %147, i32 0, i32 22
  %asiz263 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf262, i32 0, i32 1
  store i64 %conv261, i64* %asiz263, align 8
  %148 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf264 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %148, i32 0, i32 22
  %arena265 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf264, i32 0, i32 0
  %149 = load i8*, i8** %arena265, align 8
  %150 = load i32, i32* %offset245, align 4
  %idx.ext266 = sext i32 %150 to i64
  %add.ptr267 = getelementptr inbounds i8, i8* %149, i64 %idx.ext266
  %151 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf268 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %151, i32 0, i32 22
  %aptr269 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf268, i32 0, i32 2
  store i8* %add.ptr267, i8** %aptr269, align 8
  %152 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf270 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %152, i32 0, i32 22
  %arena271 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf270, i32 0, i32 0
  %153 = load i8*, i8** %arena271, align 8
  %154 = load i32, i32* %nsz238, align 4
  %idx.ext272 = sext i32 %154 to i64
  %add.ptr273 = getelementptr inbounds i8, i8* %153, i64 %idx.ext272
  %155 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf274 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %155, i32 0, i32 22
  %aend275 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf274, i32 0, i32 3
  store i8* %add.ptr273, i8** %aend275, align 8
  br label %do.end276

do.end276:                                        ; preds = %do.body237
  br label %if.end277

if.end277:                                        ; preds = %do.end276, %do.body228
  br label %do.end278

do.end278:                                        ; preds = %if.end277
  %156 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf279 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %156, i32 0, i32 22
  %aptr280 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf279, i32 0, i32 2
  %157 = load i8*, i8** %aptr280, align 8
  %158 = ptrtoint i8* %157 to i64
  %159 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf281 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %159, i32 0, i32 22
  %aptr282 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf281, i32 0, i32 2
  %160 = load i8*, i8** %aptr282, align 8
  %161 = ptrtoint i8* %160 to i64
  %and283 = and i64 %161, -4
  %cmp284 = icmp eq i64 %158, %and283
  br i1 %cmp284, label %if.then286, label %if.else289

if.then286:                                       ; preds = %do.end278
  %162 = load i32, i32* %idx, align 4
  %163 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf287 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %163, i32 0, i32 22
  %aptr288 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf287, i32 0, i32 2
  %164 = load i8*, i8** %aptr288, align 8
  %165 = bitcast i8* %164 to i32*
  store i32 %162, i32* %165, align 4
  br label %if.end292

if.else289:                                       ; preds = %do.end278
  %166 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf290 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %166, i32 0, i32 22
  %aptr291 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf290, i32 0, i32 2
  %167 = load i8*, i8** %aptr291, align 8
  %168 = bitcast i32* %idx to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %167, i8* align 4 %168, i64 4, i1 false)
  br label %if.end292

if.end292:                                        ; preds = %if.else289, %if.then286
  %169 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf293 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %169, i32 0, i32 22
  %aptr294 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf293, i32 0, i32 2
  %170 = load i8*, i8** %aptr294, align 8
  %add.ptr295 = getelementptr inbounds i8, i8* %170, i64 4
  store i8* %add.ptr295, i8** %aptr294, align 8
  br label %do.end296

do.end296:                                        ; preds = %if.end292
  br label %if.end304

if.else297:                                       ; preds = %if.else223
  %171 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio298 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %171, i32 0, i32 24
  %172 = load %struct._PerlIO**, %struct._PerlIO*** %fio298, align 8
  %173 = bitcast i32* %idx to i8*
  %call299 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %172, i8* %173, i64 4)
  %cmp300 = icmp ne i64 %call299, 4
  br i1 %cmp300, label %if.then302, label %if.end303

if.then302:                                       ; preds = %if.else297
  store i32 -1, i32* %retval, align 4
  br label %return

if.end303:                                        ; preds = %if.else297
  br label %if.end304

if.end304:                                        ; preds = %if.end303, %do.end296
  br label %if.end305

if.end305:                                        ; preds = %if.end304, %if.end222
  br label %do.end306

do.end306:                                        ; preds = %if.end305
  br label %if.end307

if.end307:                                        ; preds = %do.end306, %if.end60
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end307, %if.then302, %if.then220, %if.then136, %if.then129, %if.then59, %if.then54, %if.then48
  %174 = load i32, i32* %retval, align 4
  ret i32 %174
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @store_code(%struct.stcxt* %cxt, %struct.cv* %cv) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %len = alloca i32, align 4
  %count = alloca i32, align 4
  %reallen = alloca i32, align 4
  %text = alloca %struct.sv*, align 8
  %bdeparse = alloca %struct.sv*, align 8
  %mark_stack_entry = alloca i32*, align 8
  %mark_stack_entry139 = alloca i32*, align 8
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %clen = alloca i8, align 1
  %nsz321 = alloca i32, align 4
  %offset328 = alloca i32, align 4
  %nsz391 = alloca i32, align 4
  %offset398 = alloca i32, align 4
  %nsz463 = alloca i32, align 4
  %offset471 = alloca i32, align 4
  %nsz565 = alloca i32, align 4
  %offset572 = alloca i32, align 4
  %y = alloca i32, align 4
  %nsz636 = alloca i32, align 4
  %offset643 = alloca i32, align 4
  %nsz718 = alloca i32, align 4
  %offset725 = alloca i32, align 4
  %nsz803 = alloca i32, align 4
  %offset811 = alloca i32, align 4
  %clen893 = alloca i8, align 1
  %nsz912 = alloca i32, align 4
  %offset919 = alloca i32, align 4
  %nsz982 = alloca i32, align 4
  %offset989 = alloca i32, align 4
  %nsz1054 = alloca i32, align 4
  %offset1062 = alloca i32, align 4
  %nsz1156 = alloca i32, align 4
  %offset1163 = alloca i32, align 4
  %y1213 = alloca i32, align 4
  %nsz1229 = alloca i32, align 4
  %offset1236 = alloca i32, align 4
  %nsz1311 = alloca i32, align 4
  %offset1318 = alloca i32, align 4
  %nsz1396 = alloca i32, align 4
  %offset1404 = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %deparse = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 15
  %2 = load i32, i32* %deparse, align 4
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %deparse1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 15
  %4 = load i32, i32* %deparse1, align 4
  %cmp2 = icmp slt i32 %4, 0
  br i1 %cmp2, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i32 1)
  %tobool = icmp ne %struct.sv* %call, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  br i1 true, label %land.rhs, label %land.end97

cond.false:                                       ; preds = %land.lhs.true
  br i1 false, label %land.rhs, label %land.end97

land.rhs:                                         ; preds = %cond.false, %cond.true
  %call3 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i32 1)
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %call3, i32 0, i32 2
  %5 = load i32, i32* %sv_flags, align 4
  %and = and i32 %5, 2097152
  %tobool4 = icmp ne i32 %and, 0
  br i1 %tobool4, label %cond.true5, label %cond.false6

cond.true5:                                       ; preds = %land.rhs
  br i1 true, label %cond.true7, label %cond.false10

cond.false6:                                      ; preds = %land.rhs
  br i1 false, label %cond.true7, label %cond.false10

cond.true7:                                       ; preds = %cond.false6, %cond.true5
  %call8 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i32 1)
  %call9 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %call8, i32 2)
  %conv = zext i1 %call9 to i32
  br label %cond.end94

cond.false10:                                     ; preds = %cond.false6, %cond.true5
  %call11 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i32 1)
  %sv_flags12 = getelementptr inbounds %struct.sv, %struct.sv* %call11, i32 0, i32 2
  %6 = load i32, i32* %sv_flags12, align 4
  %and13 = and i32 %6, 65280
  %tobool14 = icmp ne i32 %and13, 0
  br i1 %tobool14, label %cond.false28, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %cond.false10
  %call16 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i32 1)
  %sv_flags17 = getelementptr inbounds %struct.sv, %struct.sv* %call16, i32 0, i32 2
  %7 = load i32, i32* %sv_flags17, align 4
  %and18 = and i32 %7, 255
  %cmp19 = icmp eq i32 %and18, 8
  br i1 %cmp19, label %cond.false28, label %lor.lhs.false21

lor.lhs.false21:                                  ; preds = %lor.lhs.false15
  %call22 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i32 1)
  %sv_flags23 = getelementptr inbounds %struct.sv, %struct.sv* %call22, i32 0, i32 2
  %8 = load i32, i32* %sv_flags23, align 4
  %and24 = and i32 %8, 16826623
  %cmp25 = icmp eq i32 %and24, 16777226
  br i1 %cmp25, label %cond.false28, label %cond.true27

cond.true27:                                      ; preds = %lor.lhs.false21
  br label %cond.end92

cond.false28:                                     ; preds = %lor.lhs.false21, %lor.lhs.false15, %cond.false10
  %call29 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i32 1)
  %sv_flags30 = getelementptr inbounds %struct.sv, %struct.sv* %call29, i32 0, i32 2
  %9 = load i32, i32* %sv_flags30, align 4
  %and31 = and i32 %9, 1024
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %cond.true33, label %cond.false51

cond.true33:                                      ; preds = %cond.false28
  %call34 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i32 1)
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %call34, i32 0, i32 0
  %10 = load i8*, i8** %sv_any, align 8
  %11 = bitcast i8* %10 to %struct.xpv*
  %tobool35 = icmp ne %struct.xpv* %11, null
  br i1 %tobool35, label %land.rhs36, label %land.end50

land.rhs36:                                       ; preds = %cond.true33
  %call37 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i32 1)
  %sv_any38 = getelementptr inbounds %struct.sv, %struct.sv* %call37, i32 0, i32 0
  %12 = load i8*, i8** %sv_any38, align 8
  %13 = bitcast i8* %12 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %13, i32 0, i32 2
  %14 = load i64, i64* %xpv_cur, align 8
  %cmp39 = icmp ugt i64 %14, 1
  br i1 %cmp39, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs36
  %call41 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i32 1)
  %sv_any42 = getelementptr inbounds %struct.sv, %struct.sv* %call41, i32 0, i32 0
  %15 = load i8*, i8** %sv_any42, align 8
  %16 = bitcast i8* %15 to %struct.xpv*
  %xpv_cur43 = getelementptr inbounds %struct.xpv, %struct.xpv* %16, i32 0, i32 2
  %17 = load i64, i64* %xpv_cur43, align 8
  %tobool44 = icmp ne i64 %17, 0
  br i1 %tobool44, label %land.rhs45, label %land.end

land.rhs45:                                       ; preds = %lor.rhs
  %call46 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i32 1)
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %call46, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %18 = load i8*, i8** %svu_pv, align 8
  %19 = load i8, i8* %18, align 1
  %conv47 = sext i8 %19 to i32
  %cmp48 = icmp ne i32 %conv47, 48
  br label %land.end

land.end:                                         ; preds = %land.rhs45, %lor.rhs
  %20 = phi i1 [ false, %lor.rhs ], [ %cmp48, %land.rhs45 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.rhs36
  %21 = phi i1 [ true, %land.rhs36 ], [ %20, %land.end ]
  br label %land.end50

land.end50:                                       ; preds = %lor.end, %cond.true33
  %22 = phi i1 [ false, %cond.true33 ], [ %21, %lor.end ]
  %land.ext = zext i1 %22 to i32
  br label %cond.end90

cond.false51:                                     ; preds = %cond.false28
  %call52 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i32 1)
  %sv_flags53 = getelementptr inbounds %struct.sv, %struct.sv* %call52, i32 0, i32 2
  %23 = load i32, i32* %sv_flags53, align 4
  %and54 = and i32 %23, 768
  %tobool55 = icmp ne i32 %and54, 0
  br i1 %tobool55, label %cond.true56, label %cond.false86

cond.true56:                                      ; preds = %cond.false51
  %call57 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i32 1)
  %sv_flags58 = getelementptr inbounds %struct.sv, %struct.sv* %call57, i32 0, i32 2
  %24 = load i32, i32* %sv_flags58, align 4
  %and59 = and i32 %24, 256
  %tobool60 = icmp ne i32 %and59, 0
  br i1 %tobool60, label %land.lhs.true61, label %lor.rhs66

land.lhs.true61:                                  ; preds = %cond.true56
  %call62 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i32 1)
  %sv_any63 = getelementptr inbounds %struct.sv, %struct.sv* %call62, i32 0, i32 0
  %25 = load i8*, i8** %sv_any63, align 8
  %26 = bitcast i8* %25 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %26, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %27 = load i64, i64* %xivu_iv, align 8
  %cmp64 = icmp ne i64 %27, 0
  br i1 %cmp64, label %lor.end85, label %lor.rhs66

lor.rhs66:                                        ; preds = %land.lhs.true61, %cond.true56
  %call67 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i32 1)
  %sv_flags68 = getelementptr inbounds %struct.sv, %struct.sv* %call67, i32 0, i32 2
  %28 = load i32, i32* %sv_flags68, align 4
  %and69 = and i32 %28, 512
  %tobool70 = icmp ne i32 %and69, 0
  br i1 %tobool70, label %land.rhs71, label %land.end83

land.rhs71:                                       ; preds = %lor.rhs66
  %call72 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i32 1)
  %sv_any73 = getelementptr inbounds %struct.sv, %struct.sv* %call72, i32 0, i32 0
  %29 = load i8*, i8** %sv_any73, align 8
  %30 = bitcast i8* %29 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %30, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %31 = load double, double* %xnv_nv, align 8
  %cmp74 = fcmp uno double %31, %31
  br i1 %cmp74, label %lor.end82, label %lor.rhs75

lor.rhs75:                                        ; preds = %land.rhs71
  %call76 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i32 1)
  %sv_any77 = getelementptr inbounds %struct.sv, %struct.sv* %call76, i32 0, i32 0
  %32 = load i8*, i8** %sv_any77, align 8
  %33 = bitcast i8* %32 to %struct.xpvnv*
  %xnv_u78 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %33, i32 0, i32 5
  %xnv_nv79 = bitcast %union._xnvu* %xnv_u78 to double*
  %34 = load double, double* %xnv_nv79, align 8
  %cmp80 = fcmp une double %34, 0.000000e+00
  br label %lor.end82

lor.end82:                                        ; preds = %lor.rhs75, %land.rhs71
  %35 = phi i1 [ true, %land.rhs71 ], [ %cmp80, %lor.rhs75 ]
  br label %land.end83

land.end83:                                       ; preds = %lor.end82, %lor.rhs66
  %36 = phi i1 [ false, %lor.rhs66 ], [ %35, %lor.end82 ]
  br label %lor.end85

lor.end85:                                        ; preds = %land.end83, %land.lhs.true61
  %37 = phi i1 [ true, %land.lhs.true61 ], [ %36, %land.end83 ]
  %lor.ext = zext i1 %37 to i32
  br label %cond.end

cond.false86:                                     ; preds = %cond.false51
  %call87 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i32 1)
  %call88 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %call87, i32 0)
  %conv89 = zext i1 %call88 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false86, %lor.end85
  %cond = phi i32 [ %lor.ext, %lor.end85 ], [ %conv89, %cond.false86 ]
  br label %cond.end90

cond.end90:                                       ; preds = %cond.end, %land.end50
  %cond91 = phi i32 [ %land.ext, %land.end50 ], [ %cond, %cond.end ]
  br label %cond.end92

cond.end92:                                       ; preds = %cond.end90, %cond.true27
  %cond93 = phi i32 [ 0, %cond.true27 ], [ %cond91, %cond.end90 ]
  br label %cond.end94

cond.end94:                                       ; preds = %cond.end92, %cond.true7
  %cond95 = phi i32 [ %conv, %cond.true7 ], [ %cond93, %cond.end92 ]
  %tobool96 = icmp ne i32 %cond95, 0
  br label %land.end97

land.end97:                                       ; preds = %cond.end94, %cond.false, %cond.true
  %38 = phi i1 [ false, %cond.false ], [ false, %cond.true ], [ %tobool96, %cond.end94 ]
  %39 = zext i1 %38 to i64
  %cond99 = select i1 %38, i32 1, i32 0
  %40 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %deparse100 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %40, i32 0, i32 15
  store i32 %cond99, i32* %deparse100, align 4
  %tobool101 = icmp ne i32 %cond99, 0
  br i1 %tobool101, label %if.end, label %if.then

if.then:                                          ; preds = %land.end97, %entry
  %41 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %42 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %43 = bitcast %struct.cv* %42 to %struct.sv*
  %call102 = call i32 @store_other(%struct.stcxt* %41, %struct.sv* %43)
  store i32 %call102, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %land.end97, %lor.lhs.false
  %call103 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.43, i64 0, i64 0), i64 10)
  %call104 = call %struct.sv* @Perl_newSVnv(double 6.100000e-01)
  call void (i32, %struct.sv*, %struct.sv*, ...) @Perl_load_module(i32 2, %struct.sv* %call103, %struct.sv* %call104)
  %44 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %44, %struct.sv*** %sp, align 8
  call void @Perl_push_scope()
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %45 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %45, i64* @PL_tmps_floor, align 8
  br label %do.body

do.body:                                          ; preds = %if.end
  %46 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %46, i32 1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  store i32* %incdec.ptr, i32** %mark_stack_entry, align 8
  %47 = load i32*, i32** @PL_markstack_max, align 8
  %cmp105 = icmp eq i32* %incdec.ptr, %47
  br i1 %cmp105, label %cond.true107, label %cond.false108

cond.true107:                                     ; preds = %do.body
  br i1 true, label %if.then109, label %if.end111

cond.false108:                                    ; preds = %do.body
  br i1 false, label %if.then109, label %if.end111

if.then109:                                       ; preds = %cond.false108, %cond.true107
  %call110 = call i32* @Perl_markstack_grow()
  store i32* %call110, i32** %mark_stack_entry, align 8
  br label %if.end111

if.end111:                                        ; preds = %if.then109, %cond.false108, %cond.true107
  %48 = load %struct.sv**, %struct.sv*** %sp, align 8
  %49 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %48 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %49 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv112 = trunc i64 %sub.ptr.div to i32
  %50 = load i32*, i32** %mark_stack_entry, align 8
  store i32 %conv112, i32* %50, align 4
  br label %do.end

do.end:                                           ; preds = %if.end111
  br label %do.body113

do.body113:                                       ; preds = %do.end
  br label %do.body114

do.body114:                                       ; preds = %do.body113
  %51 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %52 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast115 = ptrtoint %struct.sv** %51 to i64
  %sub.ptr.rhs.cast116 = ptrtoint %struct.sv** %52 to i64
  %sub.ptr.sub117 = sub i64 %sub.ptr.lhs.cast115, %sub.ptr.rhs.cast116
  %sub.ptr.div118 = sdiv exact i64 %sub.ptr.sub117, 8
  %cmp119 = icmp slt i64 %sub.ptr.div118, 1
  br i1 %cmp119, label %cond.true121, label %cond.false122

cond.true121:                                     ; preds = %do.body114
  br i1 true, label %if.then123, label %if.end125

cond.false122:                                    ; preds = %do.body114
  br i1 false, label %if.then123, label %if.end125

if.then123:                                       ; preds = %cond.false122, %cond.true121
  %53 = load %struct.sv**, %struct.sv*** %sp, align 8
  %54 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call124 = call %struct.sv** @Perl_stack_grow(%struct.sv** %53, %struct.sv** %54, i64 1)
  store %struct.sv** %call124, %struct.sv*** %sp, align 8
  %55 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end125

if.end125:                                        ; preds = %if.then123, %cond.false122, %cond.true121
  br label %do.end126

do.end126:                                        ; preds = %if.end125
  %call127 = call %struct.sv* @Perl_newSVpvn_flags(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.43, i64 0, i64 0), i64 10, i32 524288)
  %56 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr128 = getelementptr inbounds %struct.sv*, %struct.sv** %56, i32 1
  store %struct.sv** %incdec.ptr128, %struct.sv*** %sp, align 8
  store %struct.sv* %call127, %struct.sv** %incdec.ptr128, align 8
  br label %do.end129

do.end129:                                        ; preds = %do.end126
  %57 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %57, %struct.sv*** @PL_stack_sp, align 8
  %call130 = call i32 @Perl_call_method(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i32 2)
  store i32 %call130, i32* %count, align 4
  %58 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %58, %struct.sv*** %sp, align 8
  %59 = load i32, i32* %count, align 4
  %cmp131 = icmp ne i32 %59, 1
  br i1 %cmp131, label %if.then133, label %if.end136

if.then133:                                       ; preds = %do.end129
  br label %do.body134

do.body134:                                       ; preds = %if.then133
  %60 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %60, i32 0, i32 19
  store i32 1, i32* %s_dirty, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.45, i64 0, i64 0))
  br label %do.end135

do.end135:                                        ; preds = %do.body134
  br label %if.end136

if.end136:                                        ; preds = %do.end135, %do.end129
  %61 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr137 = getelementptr inbounds %struct.sv*, %struct.sv** %61, i32 -1
  store %struct.sv** %incdec.ptr137, %struct.sv*** %sp, align 8
  %62 = load %struct.sv*, %struct.sv** %61, align 8
  store %struct.sv* %62, %struct.sv** %bdeparse, align 8
  br label %do.body138

do.body138:                                       ; preds = %if.end136
  %63 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr140 = getelementptr inbounds i32, i32* %63, i32 1
  store i32* %incdec.ptr140, i32** @PL_markstack_ptr, align 8
  store i32* %incdec.ptr140, i32** %mark_stack_entry139, align 8
  %64 = load i32*, i32** @PL_markstack_max, align 8
  %cmp141 = icmp eq i32* %incdec.ptr140, %64
  br i1 %cmp141, label %cond.true143, label %cond.false144

cond.true143:                                     ; preds = %do.body138
  br i1 true, label %if.then145, label %if.end147

cond.false144:                                    ; preds = %do.body138
  br i1 false, label %if.then145, label %if.end147

if.then145:                                       ; preds = %cond.false144, %cond.true143
  %call146 = call i32* @Perl_markstack_grow()
  store i32* %call146, i32** %mark_stack_entry139, align 8
  br label %if.end147

if.end147:                                        ; preds = %if.then145, %cond.false144, %cond.true143
  %65 = load %struct.sv**, %struct.sv*** %sp, align 8
  %66 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast148 = ptrtoint %struct.sv** %65 to i64
  %sub.ptr.rhs.cast149 = ptrtoint %struct.sv** %66 to i64
  %sub.ptr.sub150 = sub i64 %sub.ptr.lhs.cast148, %sub.ptr.rhs.cast149
  %sub.ptr.div151 = sdiv exact i64 %sub.ptr.sub150, 8
  %conv152 = trunc i64 %sub.ptr.div151 to i32
  %67 = load i32*, i32** %mark_stack_entry139, align 8
  store i32 %conv152, i32* %67, align 4
  br label %do.end153

do.end153:                                        ; preds = %if.end147
  br label %do.body154

do.body154:                                       ; preds = %do.end153
  br label %do.body155

do.body155:                                       ; preds = %do.body154
  %68 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %69 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast156 = ptrtoint %struct.sv** %68 to i64
  %sub.ptr.rhs.cast157 = ptrtoint %struct.sv** %69 to i64
  %sub.ptr.sub158 = sub i64 %sub.ptr.lhs.cast156, %sub.ptr.rhs.cast157
  %sub.ptr.div159 = sdiv exact i64 %sub.ptr.sub158, 8
  %cmp160 = icmp slt i64 %sub.ptr.div159, 1
  br i1 %cmp160, label %cond.true162, label %cond.false163

cond.true162:                                     ; preds = %do.body155
  br i1 true, label %if.then164, label %if.end166

cond.false163:                                    ; preds = %do.body155
  br i1 false, label %if.then164, label %if.end166

if.then164:                                       ; preds = %cond.false163, %cond.true162
  %70 = load %struct.sv**, %struct.sv*** %sp, align 8
  %71 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call165 = call %struct.sv** @Perl_stack_grow(%struct.sv** %70, %struct.sv** %71, i64 1)
  store %struct.sv** %call165, %struct.sv*** %sp, align 8
  %72 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end166

if.end166:                                        ; preds = %if.then164, %cond.false163, %cond.true162
  br label %do.end167

do.end167:                                        ; preds = %if.end166
  %73 = load %struct.sv*, %struct.sv** %bdeparse, align 8
  %74 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr168 = getelementptr inbounds %struct.sv*, %struct.sv** %74, i32 1
  store %struct.sv** %incdec.ptr168, %struct.sv*** %sp, align 8
  store %struct.sv* %73, %struct.sv** %incdec.ptr168, align 8
  br label %do.end169

do.end169:                                        ; preds = %do.end167
  br label %do.body170

do.body170:                                       ; preds = %do.end169
  br label %do.body171

do.body171:                                       ; preds = %do.body170
  %75 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %76 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast172 = ptrtoint %struct.sv** %75 to i64
  %sub.ptr.rhs.cast173 = ptrtoint %struct.sv** %76 to i64
  %sub.ptr.sub174 = sub i64 %sub.ptr.lhs.cast172, %sub.ptr.rhs.cast173
  %sub.ptr.div175 = sdiv exact i64 %sub.ptr.sub174, 8
  %cmp176 = icmp slt i64 %sub.ptr.div175, 1
  br i1 %cmp176, label %cond.true178, label %cond.false179

cond.true178:                                     ; preds = %do.body171
  br i1 true, label %if.then180, label %if.end182

cond.false179:                                    ; preds = %do.body171
  br i1 false, label %if.then180, label %if.end182

if.then180:                                       ; preds = %cond.false179, %cond.true178
  %77 = load %struct.sv**, %struct.sv*** %sp, align 8
  %78 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call181 = call %struct.sv** @Perl_stack_grow(%struct.sv** %77, %struct.sv** %78, i64 1)
  store %struct.sv** %call181, %struct.sv*** %sp, align 8
  %79 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end182

if.end182:                                        ; preds = %if.then180, %cond.false179, %cond.true178
  br label %do.end183

do.end183:                                        ; preds = %if.end182
  %80 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %81 = bitcast %struct.cv* %80 to %struct.sv*
  %call184 = call %struct.sv* @Perl_newRV(%struct.sv* %81)
  %call185 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call184)
  %82 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr186 = getelementptr inbounds %struct.sv*, %struct.sv** %82, i32 1
  store %struct.sv** %incdec.ptr186, %struct.sv*** %sp, align 8
  store %struct.sv* %call185, %struct.sv** %incdec.ptr186, align 8
  br label %do.end187

do.end187:                                        ; preds = %do.end183
  %83 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %83, %struct.sv*** @PL_stack_sp, align 8
  %call188 = call i32 @Perl_call_method(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i64 0, i64 0), i32 2)
  store i32 %call188, i32* %count, align 4
  %84 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %84, %struct.sv*** %sp, align 8
  %85 = load i32, i32* %count, align 4
  %cmp189 = icmp ne i32 %85, 1
  br i1 %cmp189, label %if.then191, label %if.end195

if.then191:                                       ; preds = %do.end187
  br label %do.body192

do.body192:                                       ; preds = %if.then191
  %86 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty193 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %86, i32 0, i32 19
  store i32 1, i32* %s_dirty193, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.47, i64 0, i64 0))
  br label %do.end194

do.end194:                                        ; preds = %do.body192
  br label %if.end195

if.end195:                                        ; preds = %do.end194, %do.end187
  %87 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr196 = getelementptr inbounds %struct.sv*, %struct.sv** %87, i32 -1
  store %struct.sv** %incdec.ptr196, %struct.sv*** %sp, align 8
  %88 = load %struct.sv*, %struct.sv** %87, align 8
  store %struct.sv* %88, %struct.sv** %text, align 8
  %89 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_any197 = getelementptr inbounds %struct.sv, %struct.sv* %89, i32 0, i32 0
  %90 = load i8*, i8** %sv_any197, align 8
  %91 = bitcast i8* %90 to %struct.xpv*
  %xpv_cur198 = getelementptr inbounds %struct.xpv, %struct.xpv* %91, i32 0, i32 2
  %92 = load i64, i64* %xpv_cur198, align 8
  %conv199 = trunc i64 %92 to i32
  store i32 %conv199, i32* %len, align 4
  %93 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_flags200 = getelementptr inbounds %struct.sv, %struct.sv* %93, i32 0, i32 2
  %94 = load i32, i32* %sv_flags200, align 4
  %and201 = and i32 %94, 2098176
  %cmp202 = icmp eq i32 %and201, 1024
  br i1 %cmp202, label %cond.true204, label %cond.false207

cond.true204:                                     ; preds = %if.end195
  %95 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_u205 = getelementptr inbounds %struct.sv, %struct.sv* %95, i32 0, i32 3
  %svu_pv206 = bitcast %union.anon* %sv_u205 to i8**
  %96 = load i8*, i8** %svu_pv206, align 8
  br label %cond.end209

cond.false207:                                    ; preds = %if.end195
  %97 = load %struct.sv*, %struct.sv** %text, align 8
  %call208 = call i8* @Perl_sv_2pv_flags(%struct.sv* %97, i64* null, i32 2)
  br label %cond.end209

cond.end209:                                      ; preds = %cond.false207, %cond.true204
  %cond210 = phi i8* [ %96, %cond.true204 ], [ %call208, %cond.false207 ]
  %call211 = call i64 @strlen(i8* %cond210) #5
  %conv212 = trunc i64 %call211 to i32
  store i32 %conv212, i32* %reallen, align 4
  %98 = load i32, i32* %len, align 4
  %cmp213 = icmp eq i32 %98, 0
  br i1 %cmp213, label %if.then231, label %lor.lhs.false215

lor.lhs.false215:                                 ; preds = %cond.end209
  %99 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_flags216 = getelementptr inbounds %struct.sv, %struct.sv* %99, i32 0, i32 2
  %100 = load i32, i32* %sv_flags216, align 4
  %and217 = and i32 %100, 2098176
  %cmp218 = icmp eq i32 %and217, 1024
  br i1 %cmp218, label %cond.true220, label %cond.false223

cond.true220:                                     ; preds = %lor.lhs.false215
  %101 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_u221 = getelementptr inbounds %struct.sv, %struct.sv* %101, i32 0, i32 3
  %svu_pv222 = bitcast %union.anon* %sv_u221 to i8**
  %102 = load i8*, i8** %svu_pv222, align 8
  br label %cond.end225

cond.false223:                                    ; preds = %lor.lhs.false215
  %103 = load %struct.sv*, %struct.sv** %text, align 8
  %call224 = call i8* @Perl_sv_2pv_flags(%struct.sv* %103, i64* null, i32 2)
  br label %cond.end225

cond.end225:                                      ; preds = %cond.false223, %cond.true220
  %cond226 = phi i8* [ %102, %cond.true220 ], [ %call224, %cond.false223 ]
  %104 = load i32, i32* %reallen, align 4
  %idx.ext = sext i32 %104 to i64
  %add.ptr = getelementptr inbounds i8, i8* %cond226, i64 %idx.ext
  %add.ptr227 = getelementptr inbounds i8, i8* %add.ptr, i64 -1
  %105 = load i8, i8* %add.ptr227, align 1
  %conv228 = sext i8 %105 to i32
  %cmp229 = icmp eq i32 %conv228, 59
  br i1 %cmp229, label %if.then231, label %if.end235

if.then231:                                       ; preds = %cond.end225, %cond.end209
  br label %do.body232

do.body232:                                       ; preds = %if.then231
  %106 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty233 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %106, i32 0, i32 19
  store i32 1, i32* %s_dirty233, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.48, i64 0, i64 0))
  br label %do.end234

do.end234:                                        ; preds = %do.body232
  br label %if.end235

if.end235:                                        ; preds = %do.end234, %cond.end225
  br label %do.body236

do.body236:                                       ; preds = %if.end235
  %107 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %107, i32 0, i32 24
  %108 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool237 = icmp ne %struct._PerlIO** %108, null
  br i1 %tobool237, label %if.else286, label %if.then238

if.then238:                                       ; preds = %do.body236
  br label %do.body239

do.body239:                                       ; preds = %if.then238
  %109 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %109, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %110 = load i8*, i8** %aptr, align 8
  %111 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf240 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %111, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf240, i32 0, i32 3
  %112 = load i8*, i8** %aend, align 8
  %cmp241 = icmp ult i8* %110, %112
  br i1 %cmp241, label %if.then243, label %if.else

if.then243:                                       ; preds = %do.body239
  %113 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf244 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %113, i32 0, i32 22
  %aptr245 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf244, i32 0, i32 2
  %114 = load i8*, i8** %aptr245, align 8
  %incdec.ptr246 = getelementptr inbounds i8, i8* %114, i32 1
  store i8* %incdec.ptr246, i8** %aptr245, align 8
  store i8 26, i8* %114, align 1
  br label %if.end284

if.else:                                          ; preds = %do.body239
  br label %do.body247

do.body247:                                       ; preds = %if.else
  %115 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf248 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %115, i32 0, i32 22
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf248, i32 0, i32 1
  %116 = load i64, i64* %asiz, align 8
  %add = add i64 1, %116
  %add249 = add i64 %add, 8191
  %and250 = and i64 %add249, -8192
  %conv251 = trunc i64 %and250 to i32
  store i32 %conv251, i32* %nsz, align 4
  %117 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf252 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %117, i32 0, i32 22
  %aptr253 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf252, i32 0, i32 2
  %118 = load i8*, i8** %aptr253, align 8
  %119 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf254 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %119, i32 0, i32 22
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf254, i32 0, i32 0
  %120 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast255 = ptrtoint i8* %118 to i64
  %sub.ptr.rhs.cast256 = ptrtoint i8* %120 to i64
  %sub.ptr.sub257 = sub i64 %sub.ptr.lhs.cast255, %sub.ptr.rhs.cast256
  %conv258 = trunc i64 %sub.ptr.sub257 to i32
  store i32 %conv258, i32* %offset, align 4
  %121 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf259 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %121, i32 0, i32 22
  %arena260 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf259, i32 0, i32 0
  %122 = load i8*, i8** %arena260, align 8
  %123 = load i32, i32* %nsz, align 4
  %conv261 = sext i32 %123 to i64
  %mul = mul i64 %conv261, 1
  %call262 = call i8* @Perl_safesysrealloc(i8* %122, i64 %mul)
  %124 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf263 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %124, i32 0, i32 22
  %arena264 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf263, i32 0, i32 0
  store i8* %call262, i8** %arena264, align 8
  %125 = load i32, i32* %nsz, align 4
  %conv265 = sext i32 %125 to i64
  %126 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf266 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %126, i32 0, i32 22
  %asiz267 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf266, i32 0, i32 1
  store i64 %conv265, i64* %asiz267, align 8
  %127 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf268 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %127, i32 0, i32 22
  %arena269 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf268, i32 0, i32 0
  %128 = load i8*, i8** %arena269, align 8
  %129 = load i32, i32* %offset, align 4
  %idx.ext270 = sext i32 %129 to i64
  %add.ptr271 = getelementptr inbounds i8, i8* %128, i64 %idx.ext270
  %130 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf272 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %130, i32 0, i32 22
  %aptr273 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf272, i32 0, i32 2
  store i8* %add.ptr271, i8** %aptr273, align 8
  %131 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf274 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %131, i32 0, i32 22
  %arena275 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf274, i32 0, i32 0
  %132 = load i8*, i8** %arena275, align 8
  %133 = load i32, i32* %nsz, align 4
  %idx.ext276 = sext i32 %133 to i64
  %add.ptr277 = getelementptr inbounds i8, i8* %132, i64 %idx.ext276
  %134 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf278 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %134, i32 0, i32 22
  %aend279 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf278, i32 0, i32 3
  store i8* %add.ptr277, i8** %aend279, align 8
  br label %do.end280

do.end280:                                        ; preds = %do.body247
  %135 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf281 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %135, i32 0, i32 22
  %aptr282 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf281, i32 0, i32 2
  %136 = load i8*, i8** %aptr282, align 8
  %incdec.ptr283 = getelementptr inbounds i8, i8* %136, i32 1
  store i8* %incdec.ptr283, i8** %aptr282, align 8
  store i8 26, i8* %136, align 1
  br label %if.end284

if.end284:                                        ; preds = %do.end280, %if.then243
  br label %do.end285

do.end285:                                        ; preds = %if.end284
  br label %if.end293

if.else286:                                       ; preds = %do.body236
  %137 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio287 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %137, i32 0, i32 24
  %138 = load %struct._PerlIO**, %struct._PerlIO*** %fio287, align 8
  %call288 = call i32 @PerlIO_putc(%struct._PerlIO** %138, i32 26)
  %cmp289 = icmp eq i32 %call288, -1
  br i1 %cmp289, label %if.then291, label %if.end292

if.then291:                                       ; preds = %if.else286
  store i32 -1, i32* %retval, align 4
  br label %return

if.end292:                                        ; preds = %if.else286
  br label %if.end293

if.end293:                                        ; preds = %if.end292, %do.end285
  br label %do.end294

do.end294:                                        ; preds = %if.end293
  %139 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %139, i32 0, i32 10
  %140 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %140, 1
  store i64 %inc, i64* %tagnum, align 8
  %141 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_flags295 = getelementptr inbounds %struct.sv, %struct.sv* %141, i32 0, i32 2
  %142 = load i32, i32* %sv_flags295, align 4
  %and296 = and i32 %142, 536870912
  %tobool297 = icmp ne i32 %and296, 0
  br i1 %tobool297, label %if.then298, label %if.else888

if.then298:                                       ; preds = %do.end294
  br label %do.body299

do.body299:                                       ; preds = %if.then298
  %143 = load i32, i32* %len, align 4
  %cmp300 = icmp sle i32 %143, 255
  br i1 %cmp300, label %if.then302, label %if.else547

if.then302:                                       ; preds = %do.body299
  %144 = load i32, i32* %len, align 4
  %conv303 = trunc i32 %144 to i8
  store i8 %conv303, i8* %clen, align 1
  br label %do.body304

do.body304:                                       ; preds = %if.then302
  %145 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio305 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %145, i32 0, i32 24
  %146 = load %struct._PerlIO**, %struct._PerlIO*** %fio305, align 8
  %tobool306 = icmp ne %struct._PerlIO** %146, null
  br i1 %tobool306, label %if.else365, label %if.then307

if.then307:                                       ; preds = %do.body304
  br label %do.body308

do.body308:                                       ; preds = %if.then307
  %147 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf309 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %147, i32 0, i32 22
  %aptr310 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf309, i32 0, i32 2
  %148 = load i8*, i8** %aptr310, align 8
  %149 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf311 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %149, i32 0, i32 22
  %aend312 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf311, i32 0, i32 3
  %150 = load i8*, i8** %aend312, align 8
  %cmp313 = icmp ult i8* %148, %150
  br i1 %cmp313, label %if.then315, label %if.else319

if.then315:                                       ; preds = %do.body308
  %151 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf316 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %151, i32 0, i32 22
  %aptr317 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf316, i32 0, i32 2
  %152 = load i8*, i8** %aptr317, align 8
  %incdec.ptr318 = getelementptr inbounds i8, i8* %152, i32 1
  store i8* %incdec.ptr318, i8** %aptr317, align 8
  store i8 23, i8* %152, align 1
  br label %if.end363

if.else319:                                       ; preds = %do.body308
  br label %do.body320

do.body320:                                       ; preds = %if.else319
  %153 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf322 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %153, i32 0, i32 22
  %asiz323 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf322, i32 0, i32 1
  %154 = load i64, i64* %asiz323, align 8
  %add324 = add i64 1, %154
  %add325 = add i64 %add324, 8191
  %and326 = and i64 %add325, -8192
  %conv327 = trunc i64 %and326 to i32
  store i32 %conv327, i32* %nsz321, align 4
  %155 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf329 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %155, i32 0, i32 22
  %aptr330 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf329, i32 0, i32 2
  %156 = load i8*, i8** %aptr330, align 8
  %157 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf331 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %157, i32 0, i32 22
  %arena332 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf331, i32 0, i32 0
  %158 = load i8*, i8** %arena332, align 8
  %sub.ptr.lhs.cast333 = ptrtoint i8* %156 to i64
  %sub.ptr.rhs.cast334 = ptrtoint i8* %158 to i64
  %sub.ptr.sub335 = sub i64 %sub.ptr.lhs.cast333, %sub.ptr.rhs.cast334
  %conv336 = trunc i64 %sub.ptr.sub335 to i32
  store i32 %conv336, i32* %offset328, align 4
  %159 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf337 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %159, i32 0, i32 22
  %arena338 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf337, i32 0, i32 0
  %160 = load i8*, i8** %arena338, align 8
  %161 = load i32, i32* %nsz321, align 4
  %conv339 = sext i32 %161 to i64
  %mul340 = mul i64 %conv339, 1
  %call341 = call i8* @Perl_safesysrealloc(i8* %160, i64 %mul340)
  %162 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf342 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %162, i32 0, i32 22
  %arena343 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf342, i32 0, i32 0
  store i8* %call341, i8** %arena343, align 8
  %163 = load i32, i32* %nsz321, align 4
  %conv344 = sext i32 %163 to i64
  %164 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf345 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %164, i32 0, i32 22
  %asiz346 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf345, i32 0, i32 1
  store i64 %conv344, i64* %asiz346, align 8
  %165 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf347 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %165, i32 0, i32 22
  %arena348 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf347, i32 0, i32 0
  %166 = load i8*, i8** %arena348, align 8
  %167 = load i32, i32* %offset328, align 4
  %idx.ext349 = sext i32 %167 to i64
  %add.ptr350 = getelementptr inbounds i8, i8* %166, i64 %idx.ext349
  %168 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf351 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %168, i32 0, i32 22
  %aptr352 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf351, i32 0, i32 2
  store i8* %add.ptr350, i8** %aptr352, align 8
  %169 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf353 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %169, i32 0, i32 22
  %arena354 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf353, i32 0, i32 0
  %170 = load i8*, i8** %arena354, align 8
  %171 = load i32, i32* %nsz321, align 4
  %idx.ext355 = sext i32 %171 to i64
  %add.ptr356 = getelementptr inbounds i8, i8* %170, i64 %idx.ext355
  %172 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf357 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %172, i32 0, i32 22
  %aend358 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf357, i32 0, i32 3
  store i8* %add.ptr356, i8** %aend358, align 8
  br label %do.end359

do.end359:                                        ; preds = %do.body320
  %173 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf360 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %173, i32 0, i32 22
  %aptr361 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf360, i32 0, i32 2
  %174 = load i8*, i8** %aptr361, align 8
  %incdec.ptr362 = getelementptr inbounds i8, i8* %174, i32 1
  store i8* %incdec.ptr362, i8** %aptr361, align 8
  store i8 23, i8* %174, align 1
  br label %if.end363

if.end363:                                        ; preds = %do.end359, %if.then315
  br label %do.end364

do.end364:                                        ; preds = %if.end363
  br label %if.end372

if.else365:                                       ; preds = %do.body304
  %175 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio366 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %175, i32 0, i32 24
  %176 = load %struct._PerlIO**, %struct._PerlIO*** %fio366, align 8
  %call367 = call i32 @PerlIO_putc(%struct._PerlIO** %176, i32 23)
  %cmp368 = icmp eq i32 %call367, -1
  br i1 %cmp368, label %if.then370, label %if.end371

if.then370:                                       ; preds = %if.else365
  store i32 -1, i32* %retval, align 4
  br label %return

if.end371:                                        ; preds = %if.else365
  br label %if.end372

if.end372:                                        ; preds = %if.end371, %do.end364
  br label %do.end373

do.end373:                                        ; preds = %if.end372
  br label %do.body374

do.body374:                                       ; preds = %do.end373
  %177 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio375 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %177, i32 0, i32 24
  %178 = load %struct._PerlIO**, %struct._PerlIO*** %fio375, align 8
  %tobool376 = icmp ne %struct._PerlIO** %178, null
  br i1 %tobool376, label %if.else435, label %if.then377

if.then377:                                       ; preds = %do.body374
  br label %do.body378

do.body378:                                       ; preds = %if.then377
  %179 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf379 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %179, i32 0, i32 22
  %aptr380 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf379, i32 0, i32 2
  %180 = load i8*, i8** %aptr380, align 8
  %181 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf381 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %181, i32 0, i32 22
  %aend382 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf381, i32 0, i32 3
  %182 = load i8*, i8** %aend382, align 8
  %cmp383 = icmp ult i8* %180, %182
  br i1 %cmp383, label %if.then385, label %if.else389

if.then385:                                       ; preds = %do.body378
  %183 = load i8, i8* %clen, align 1
  %184 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf386 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %184, i32 0, i32 22
  %aptr387 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf386, i32 0, i32 2
  %185 = load i8*, i8** %aptr387, align 8
  %incdec.ptr388 = getelementptr inbounds i8, i8* %185, i32 1
  store i8* %incdec.ptr388, i8** %aptr387, align 8
  store i8 %183, i8* %185, align 1
  br label %if.end433

if.else389:                                       ; preds = %do.body378
  br label %do.body390

do.body390:                                       ; preds = %if.else389
  %186 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf392 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %186, i32 0, i32 22
  %asiz393 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf392, i32 0, i32 1
  %187 = load i64, i64* %asiz393, align 8
  %add394 = add i64 1, %187
  %add395 = add i64 %add394, 8191
  %and396 = and i64 %add395, -8192
  %conv397 = trunc i64 %and396 to i32
  store i32 %conv397, i32* %nsz391, align 4
  %188 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf399 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %188, i32 0, i32 22
  %aptr400 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf399, i32 0, i32 2
  %189 = load i8*, i8** %aptr400, align 8
  %190 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf401 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %190, i32 0, i32 22
  %arena402 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf401, i32 0, i32 0
  %191 = load i8*, i8** %arena402, align 8
  %sub.ptr.lhs.cast403 = ptrtoint i8* %189 to i64
  %sub.ptr.rhs.cast404 = ptrtoint i8* %191 to i64
  %sub.ptr.sub405 = sub i64 %sub.ptr.lhs.cast403, %sub.ptr.rhs.cast404
  %conv406 = trunc i64 %sub.ptr.sub405 to i32
  store i32 %conv406, i32* %offset398, align 4
  %192 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf407 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %192, i32 0, i32 22
  %arena408 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf407, i32 0, i32 0
  %193 = load i8*, i8** %arena408, align 8
  %194 = load i32, i32* %nsz391, align 4
  %conv409 = sext i32 %194 to i64
  %mul410 = mul i64 %conv409, 1
  %call411 = call i8* @Perl_safesysrealloc(i8* %193, i64 %mul410)
  %195 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf412 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %195, i32 0, i32 22
  %arena413 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf412, i32 0, i32 0
  store i8* %call411, i8** %arena413, align 8
  %196 = load i32, i32* %nsz391, align 4
  %conv414 = sext i32 %196 to i64
  %197 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf415 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %197, i32 0, i32 22
  %asiz416 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf415, i32 0, i32 1
  store i64 %conv414, i64* %asiz416, align 8
  %198 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf417 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %198, i32 0, i32 22
  %arena418 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf417, i32 0, i32 0
  %199 = load i8*, i8** %arena418, align 8
  %200 = load i32, i32* %offset398, align 4
  %idx.ext419 = sext i32 %200 to i64
  %add.ptr420 = getelementptr inbounds i8, i8* %199, i64 %idx.ext419
  %201 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf421 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %201, i32 0, i32 22
  %aptr422 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf421, i32 0, i32 2
  store i8* %add.ptr420, i8** %aptr422, align 8
  %202 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf423 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %202, i32 0, i32 22
  %arena424 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf423, i32 0, i32 0
  %203 = load i8*, i8** %arena424, align 8
  %204 = load i32, i32* %nsz391, align 4
  %idx.ext425 = sext i32 %204 to i64
  %add.ptr426 = getelementptr inbounds i8, i8* %203, i64 %idx.ext425
  %205 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf427 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %205, i32 0, i32 22
  %aend428 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf427, i32 0, i32 3
  store i8* %add.ptr426, i8** %aend428, align 8
  br label %do.end429

do.end429:                                        ; preds = %do.body390
  %206 = load i8, i8* %clen, align 1
  %207 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf430 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %207, i32 0, i32 22
  %aptr431 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf430, i32 0, i32 2
  %208 = load i8*, i8** %aptr431, align 8
  %incdec.ptr432 = getelementptr inbounds i8, i8* %208, i32 1
  store i8* %incdec.ptr432, i8** %aptr431, align 8
  store i8 %206, i8* %208, align 1
  br label %if.end433

if.end433:                                        ; preds = %do.end429, %if.then385
  br label %do.end434

do.end434:                                        ; preds = %if.end433
  br label %if.end443

if.else435:                                       ; preds = %do.body374
  %209 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio436 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %209, i32 0, i32 24
  %210 = load %struct._PerlIO**, %struct._PerlIO*** %fio436, align 8
  %211 = load i8, i8* %clen, align 1
  %conv437 = zext i8 %211 to i32
  %call438 = call i32 @PerlIO_putc(%struct._PerlIO** %210, i32 %conv437)
  %cmp439 = icmp eq i32 %call438, -1
  br i1 %cmp439, label %if.then441, label %if.end442

if.then441:                                       ; preds = %if.else435
  store i32 -1, i32* %retval, align 4
  br label %return

if.end442:                                        ; preds = %if.else435
  br label %if.end443

if.end443:                                        ; preds = %if.end442, %do.end434
  br label %do.end444

do.end444:                                        ; preds = %if.end443
  %212 = load i32, i32* %len, align 4
  %tobool445 = icmp ne i32 %212, 0
  br i1 %tobool445, label %if.then446, label %if.end546

if.then446:                                       ; preds = %do.end444
  br label %do.body447

do.body447:                                       ; preds = %if.then446
  %213 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio448 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %213, i32 0, i32 24
  %214 = load %struct._PerlIO**, %struct._PerlIO*** %fio448, align 8
  %tobool449 = icmp ne %struct._PerlIO** %214, null
  br i1 %tobool449, label %if.else524, label %if.then450

if.then450:                                       ; preds = %do.body447
  br label %do.body451

do.body451:                                       ; preds = %if.then450
  br label %do.body452

do.body452:                                       ; preds = %do.body451
  %215 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf453 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %215, i32 0, i32 22
  %aptr454 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf453, i32 0, i32 2
  %216 = load i8*, i8** %aptr454, align 8
  %217 = load i32, i32* %len, align 4
  %idx.ext455 = sext i32 %217 to i64
  %add.ptr456 = getelementptr inbounds i8, i8* %216, i64 %idx.ext455
  %218 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf457 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %218, i32 0, i32 22
  %aend458 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf457, i32 0, i32 3
  %219 = load i8*, i8** %aend458, align 8
  %cmp459 = icmp ugt i8* %add.ptr456, %219
  br i1 %cmp459, label %if.then461, label %if.end503

if.then461:                                       ; preds = %do.body452
  br label %do.body462

do.body462:                                       ; preds = %if.then461
  %220 = load i32, i32* %len, align 4
  %conv464 = sext i32 %220 to i64
  %221 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf465 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %221, i32 0, i32 22
  %asiz466 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf465, i32 0, i32 1
  %222 = load i64, i64* %asiz466, align 8
  %add467 = add i64 %conv464, %222
  %add468 = add i64 %add467, 8191
  %and469 = and i64 %add468, -8192
  %conv470 = trunc i64 %and469 to i32
  store i32 %conv470, i32* %nsz463, align 4
  %223 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf472 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %223, i32 0, i32 22
  %aptr473 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf472, i32 0, i32 2
  %224 = load i8*, i8** %aptr473, align 8
  %225 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf474 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %225, i32 0, i32 22
  %arena475 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf474, i32 0, i32 0
  %226 = load i8*, i8** %arena475, align 8
  %sub.ptr.lhs.cast476 = ptrtoint i8* %224 to i64
  %sub.ptr.rhs.cast477 = ptrtoint i8* %226 to i64
  %sub.ptr.sub478 = sub i64 %sub.ptr.lhs.cast476, %sub.ptr.rhs.cast477
  %conv479 = trunc i64 %sub.ptr.sub478 to i32
  store i32 %conv479, i32* %offset471, align 4
  %227 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf480 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %227, i32 0, i32 22
  %arena481 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf480, i32 0, i32 0
  %228 = load i8*, i8** %arena481, align 8
  %229 = load i32, i32* %nsz463, align 4
  %conv482 = sext i32 %229 to i64
  %mul483 = mul i64 %conv482, 1
  %call484 = call i8* @Perl_safesysrealloc(i8* %228, i64 %mul483)
  %230 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf485 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %230, i32 0, i32 22
  %arena486 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf485, i32 0, i32 0
  store i8* %call484, i8** %arena486, align 8
  %231 = load i32, i32* %nsz463, align 4
  %conv487 = sext i32 %231 to i64
  %232 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf488 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %232, i32 0, i32 22
  %asiz489 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf488, i32 0, i32 1
  store i64 %conv487, i64* %asiz489, align 8
  %233 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf490 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %233, i32 0, i32 22
  %arena491 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf490, i32 0, i32 0
  %234 = load i8*, i8** %arena491, align 8
  %235 = load i32, i32* %offset471, align 4
  %idx.ext492 = sext i32 %235 to i64
  %add.ptr493 = getelementptr inbounds i8, i8* %234, i64 %idx.ext492
  %236 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf494 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %236, i32 0, i32 22
  %aptr495 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf494, i32 0, i32 2
  store i8* %add.ptr493, i8** %aptr495, align 8
  %237 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf496 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %237, i32 0, i32 22
  %arena497 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf496, i32 0, i32 0
  %238 = load i8*, i8** %arena497, align 8
  %239 = load i32, i32* %nsz463, align 4
  %idx.ext498 = sext i32 %239 to i64
  %add.ptr499 = getelementptr inbounds i8, i8* %238, i64 %idx.ext498
  %240 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf500 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %240, i32 0, i32 22
  %aend501 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf500, i32 0, i32 3
  store i8* %add.ptr499, i8** %aend501, align 8
  br label %do.end502

do.end502:                                        ; preds = %do.body462
  br label %if.end503

if.end503:                                        ; preds = %do.end502, %do.body452
  br label %do.end504

do.end504:                                        ; preds = %if.end503
  %241 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf505 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %241, i32 0, i32 22
  %aptr506 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf505, i32 0, i32 2
  %242 = load i8*, i8** %aptr506, align 8
  %243 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_flags507 = getelementptr inbounds %struct.sv, %struct.sv* %243, i32 0, i32 2
  %244 = load i32, i32* %sv_flags507, align 4
  %and508 = and i32 %244, 2098176
  %cmp509 = icmp eq i32 %and508, 1024
  br i1 %cmp509, label %cond.true511, label %cond.false514

cond.true511:                                     ; preds = %do.end504
  %245 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_u512 = getelementptr inbounds %struct.sv, %struct.sv* %245, i32 0, i32 3
  %svu_pv513 = bitcast %union.anon* %sv_u512 to i8**
  %246 = load i8*, i8** %svu_pv513, align 8
  br label %cond.end516

cond.false514:                                    ; preds = %do.end504
  %247 = load %struct.sv*, %struct.sv** %text, align 8
  %call515 = call i8* @Perl_sv_2pv_flags(%struct.sv* %247, i64* null, i32 2)
  br label %cond.end516

cond.end516:                                      ; preds = %cond.false514, %cond.true511
  %cond517 = phi i8* [ %246, %cond.true511 ], [ %call515, %cond.false514 ]
  %248 = load i32, i32* %len, align 4
  %conv518 = sext i32 %248 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %242, i8* align 1 %cond517, i64 %conv518, i1 false)
  %249 = load i32, i32* %len, align 4
  %250 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf519 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %250, i32 0, i32 22
  %aptr520 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf519, i32 0, i32 2
  %251 = load i8*, i8** %aptr520, align 8
  %idx.ext521 = sext i32 %249 to i64
  %add.ptr522 = getelementptr inbounds i8, i8* %251, i64 %idx.ext521
  store i8* %add.ptr522, i8** %aptr520, align 8
  br label %do.end523

do.end523:                                        ; preds = %cond.end516
  br label %if.end544

if.else524:                                       ; preds = %do.body447
  %252 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio525 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %252, i32 0, i32 24
  %253 = load %struct._PerlIO**, %struct._PerlIO*** %fio525, align 8
  %254 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_flags526 = getelementptr inbounds %struct.sv, %struct.sv* %254, i32 0, i32 2
  %255 = load i32, i32* %sv_flags526, align 4
  %and527 = and i32 %255, 2098176
  %cmp528 = icmp eq i32 %and527, 1024
  br i1 %cmp528, label %cond.true530, label %cond.false533

cond.true530:                                     ; preds = %if.else524
  %256 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_u531 = getelementptr inbounds %struct.sv, %struct.sv* %256, i32 0, i32 3
  %svu_pv532 = bitcast %union.anon* %sv_u531 to i8**
  %257 = load i8*, i8** %svu_pv532, align 8
  br label %cond.end535

cond.false533:                                    ; preds = %if.else524
  %258 = load %struct.sv*, %struct.sv** %text, align 8
  %call534 = call i8* @Perl_sv_2pv_flags(%struct.sv* %258, i64* null, i32 2)
  br label %cond.end535

cond.end535:                                      ; preds = %cond.false533, %cond.true530
  %cond536 = phi i8* [ %257, %cond.true530 ], [ %call534, %cond.false533 ]
  %259 = load i32, i32* %len, align 4
  %conv537 = sext i32 %259 to i64
  %call538 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %253, i8* %cond536, i64 %conv537)
  %260 = load i32, i32* %len, align 4
  %conv539 = sext i32 %260 to i64
  %cmp540 = icmp ne i64 %call538, %conv539
  br i1 %cmp540, label %if.then542, label %if.end543

if.then542:                                       ; preds = %cond.end535
  store i32 -1, i32* %retval, align 4
  br label %return

if.end543:                                        ; preds = %cond.end535
  br label %if.end544

if.end544:                                        ; preds = %if.end543, %do.end523
  br label %do.end545

do.end545:                                        ; preds = %if.end544
  br label %if.end546

if.end546:                                        ; preds = %do.end545, %do.end444
  br label %if.end886

if.else547:                                       ; preds = %do.body299
  br label %do.body548

do.body548:                                       ; preds = %if.else547
  %261 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio549 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %261, i32 0, i32 24
  %262 = load %struct._PerlIO**, %struct._PerlIO*** %fio549, align 8
  %tobool550 = icmp ne %struct._PerlIO** %262, null
  br i1 %tobool550, label %if.else609, label %if.then551

if.then551:                                       ; preds = %do.body548
  br label %do.body552

do.body552:                                       ; preds = %if.then551
  %263 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf553 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %263, i32 0, i32 22
  %aptr554 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf553, i32 0, i32 2
  %264 = load i8*, i8** %aptr554, align 8
  %265 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf555 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %265, i32 0, i32 22
  %aend556 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf555, i32 0, i32 3
  %266 = load i8*, i8** %aend556, align 8
  %cmp557 = icmp ult i8* %264, %266
  br i1 %cmp557, label %if.then559, label %if.else563

if.then559:                                       ; preds = %do.body552
  %267 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf560 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %267, i32 0, i32 22
  %aptr561 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf560, i32 0, i32 2
  %268 = load i8*, i8** %aptr561, align 8
  %incdec.ptr562 = getelementptr inbounds i8, i8* %268, i32 1
  store i8* %incdec.ptr562, i8** %aptr561, align 8
  store i8 24, i8* %268, align 1
  br label %if.end607

if.else563:                                       ; preds = %do.body552
  br label %do.body564

do.body564:                                       ; preds = %if.else563
  %269 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf566 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %269, i32 0, i32 22
  %asiz567 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf566, i32 0, i32 1
  %270 = load i64, i64* %asiz567, align 8
  %add568 = add i64 1, %270
  %add569 = add i64 %add568, 8191
  %and570 = and i64 %add569, -8192
  %conv571 = trunc i64 %and570 to i32
  store i32 %conv571, i32* %nsz565, align 4
  %271 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf573 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %271, i32 0, i32 22
  %aptr574 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf573, i32 0, i32 2
  %272 = load i8*, i8** %aptr574, align 8
  %273 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf575 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %273, i32 0, i32 22
  %arena576 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf575, i32 0, i32 0
  %274 = load i8*, i8** %arena576, align 8
  %sub.ptr.lhs.cast577 = ptrtoint i8* %272 to i64
  %sub.ptr.rhs.cast578 = ptrtoint i8* %274 to i64
  %sub.ptr.sub579 = sub i64 %sub.ptr.lhs.cast577, %sub.ptr.rhs.cast578
  %conv580 = trunc i64 %sub.ptr.sub579 to i32
  store i32 %conv580, i32* %offset572, align 4
  %275 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf581 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %275, i32 0, i32 22
  %arena582 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf581, i32 0, i32 0
  %276 = load i8*, i8** %arena582, align 8
  %277 = load i32, i32* %nsz565, align 4
  %conv583 = sext i32 %277 to i64
  %mul584 = mul i64 %conv583, 1
  %call585 = call i8* @Perl_safesysrealloc(i8* %276, i64 %mul584)
  %278 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf586 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %278, i32 0, i32 22
  %arena587 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf586, i32 0, i32 0
  store i8* %call585, i8** %arena587, align 8
  %279 = load i32, i32* %nsz565, align 4
  %conv588 = sext i32 %279 to i64
  %280 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf589 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %280, i32 0, i32 22
  %asiz590 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf589, i32 0, i32 1
  store i64 %conv588, i64* %asiz590, align 8
  %281 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf591 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %281, i32 0, i32 22
  %arena592 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf591, i32 0, i32 0
  %282 = load i8*, i8** %arena592, align 8
  %283 = load i32, i32* %offset572, align 4
  %idx.ext593 = sext i32 %283 to i64
  %add.ptr594 = getelementptr inbounds i8, i8* %282, i64 %idx.ext593
  %284 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf595 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %284, i32 0, i32 22
  %aptr596 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf595, i32 0, i32 2
  store i8* %add.ptr594, i8** %aptr596, align 8
  %285 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf597 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %285, i32 0, i32 22
  %arena598 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf597, i32 0, i32 0
  %286 = load i8*, i8** %arena598, align 8
  %287 = load i32, i32* %nsz565, align 4
  %idx.ext599 = sext i32 %287 to i64
  %add.ptr600 = getelementptr inbounds i8, i8* %286, i64 %idx.ext599
  %288 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf601 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %288, i32 0, i32 22
  %aend602 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf601, i32 0, i32 3
  store i8* %add.ptr600, i8** %aend602, align 8
  br label %do.end603

do.end603:                                        ; preds = %do.body564
  %289 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf604 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %289, i32 0, i32 22
  %aptr605 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf604, i32 0, i32 2
  %290 = load i8*, i8** %aptr605, align 8
  %incdec.ptr606 = getelementptr inbounds i8, i8* %290, i32 1
  store i8* %incdec.ptr606, i8** %aptr605, align 8
  store i8 24, i8* %290, align 1
  br label %if.end607

if.end607:                                        ; preds = %do.end603, %if.then559
  br label %do.end608

do.end608:                                        ; preds = %if.end607
  br label %if.end616

if.else609:                                       ; preds = %do.body548
  %291 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio610 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %291, i32 0, i32 24
  %292 = load %struct._PerlIO**, %struct._PerlIO*** %fio610, align 8
  %call611 = call i32 @PerlIO_putc(%struct._PerlIO** %292, i32 24)
  %cmp612 = icmp eq i32 %call611, -1
  br i1 %cmp612, label %if.then614, label %if.end615

if.then614:                                       ; preds = %if.else609
  store i32 -1, i32* %retval, align 4
  br label %return

if.end615:                                        ; preds = %if.else609
  br label %if.end616

if.end616:                                        ; preds = %if.end615, %do.end608
  br label %do.end617

do.end617:                                        ; preds = %if.end616
  br label %do.body618

do.body618:                                       ; preds = %do.end617
  %293 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %293, i32 0, i32 12
  %294 = load i32, i32* %netorder, align 8
  %tobool619 = icmp ne i32 %294, 0
  br i1 %tobool619, label %if.then620, label %if.else703

if.then620:                                       ; preds = %do.body618
  %295 = load i32, i32* %len, align 4
  %call621 = call i32 @my_swap32(i32 %295)
  store i32 %call621, i32* %y, align 4
  %296 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio622 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %296, i32 0, i32 24
  %297 = load %struct._PerlIO**, %struct._PerlIO*** %fio622, align 8
  %tobool623 = icmp ne %struct._PerlIO** %297, null
  br i1 %tobool623, label %if.else695, label %if.then624

if.then624:                                       ; preds = %if.then620
  br label %do.body625

do.body625:                                       ; preds = %if.then624
  br label %do.body626

do.body626:                                       ; preds = %do.body625
  %298 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf627 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %298, i32 0, i32 22
  %aptr628 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf627, i32 0, i32 2
  %299 = load i8*, i8** %aptr628, align 8
  %add.ptr629 = getelementptr inbounds i8, i8* %299, i64 4
  %300 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf630 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %300, i32 0, i32 22
  %aend631 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf630, i32 0, i32 3
  %301 = load i8*, i8** %aend631, align 8
  %cmp632 = icmp ugt i8* %add.ptr629, %301
  br i1 %cmp632, label %if.then634, label %if.end675

if.then634:                                       ; preds = %do.body626
  br label %do.body635

do.body635:                                       ; preds = %if.then634
  %302 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf637 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %302, i32 0, i32 22
  %asiz638 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf637, i32 0, i32 1
  %303 = load i64, i64* %asiz638, align 8
  %add639 = add i64 4, %303
  %add640 = add i64 %add639, 8191
  %and641 = and i64 %add640, -8192
  %conv642 = trunc i64 %and641 to i32
  store i32 %conv642, i32* %nsz636, align 4
  %304 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf644 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %304, i32 0, i32 22
  %aptr645 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf644, i32 0, i32 2
  %305 = load i8*, i8** %aptr645, align 8
  %306 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf646 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %306, i32 0, i32 22
  %arena647 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf646, i32 0, i32 0
  %307 = load i8*, i8** %arena647, align 8
  %sub.ptr.lhs.cast648 = ptrtoint i8* %305 to i64
  %sub.ptr.rhs.cast649 = ptrtoint i8* %307 to i64
  %sub.ptr.sub650 = sub i64 %sub.ptr.lhs.cast648, %sub.ptr.rhs.cast649
  %conv651 = trunc i64 %sub.ptr.sub650 to i32
  store i32 %conv651, i32* %offset643, align 4
  %308 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf652 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %308, i32 0, i32 22
  %arena653 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf652, i32 0, i32 0
  %309 = load i8*, i8** %arena653, align 8
  %310 = load i32, i32* %nsz636, align 4
  %conv654 = sext i32 %310 to i64
  %mul655 = mul i64 %conv654, 1
  %call656 = call i8* @Perl_safesysrealloc(i8* %309, i64 %mul655)
  %311 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf657 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %311, i32 0, i32 22
  %arena658 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf657, i32 0, i32 0
  store i8* %call656, i8** %arena658, align 8
  %312 = load i32, i32* %nsz636, align 4
  %conv659 = sext i32 %312 to i64
  %313 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf660 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %313, i32 0, i32 22
  %asiz661 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf660, i32 0, i32 1
  store i64 %conv659, i64* %asiz661, align 8
  %314 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf662 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %314, i32 0, i32 22
  %arena663 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf662, i32 0, i32 0
  %315 = load i8*, i8** %arena663, align 8
  %316 = load i32, i32* %offset643, align 4
  %idx.ext664 = sext i32 %316 to i64
  %add.ptr665 = getelementptr inbounds i8, i8* %315, i64 %idx.ext664
  %317 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf666 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %317, i32 0, i32 22
  %aptr667 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf666, i32 0, i32 2
  store i8* %add.ptr665, i8** %aptr667, align 8
  %318 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf668 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %318, i32 0, i32 22
  %arena669 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf668, i32 0, i32 0
  %319 = load i8*, i8** %arena669, align 8
  %320 = load i32, i32* %nsz636, align 4
  %idx.ext670 = sext i32 %320 to i64
  %add.ptr671 = getelementptr inbounds i8, i8* %319, i64 %idx.ext670
  %321 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf672 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %321, i32 0, i32 22
  %aend673 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf672, i32 0, i32 3
  store i8* %add.ptr671, i8** %aend673, align 8
  br label %do.end674

do.end674:                                        ; preds = %do.body635
  br label %if.end675

if.end675:                                        ; preds = %do.end674, %do.body626
  br label %do.end676

do.end676:                                        ; preds = %if.end675
  %322 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf677 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %322, i32 0, i32 22
  %aptr678 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf677, i32 0, i32 2
  %323 = load i8*, i8** %aptr678, align 8
  %324 = ptrtoint i8* %323 to i64
  %325 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf679 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %325, i32 0, i32 22
  %aptr680 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf679, i32 0, i32 2
  %326 = load i8*, i8** %aptr680, align 8
  %327 = ptrtoint i8* %326 to i64
  %and681 = and i64 %327, -4
  %cmp682 = icmp eq i64 %324, %and681
  br i1 %cmp682, label %if.then684, label %if.else687

if.then684:                                       ; preds = %do.end676
  %328 = load i32, i32* %y, align 4
  %329 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf685 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %329, i32 0, i32 22
  %aptr686 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf685, i32 0, i32 2
  %330 = load i8*, i8** %aptr686, align 8
  %331 = bitcast i8* %330 to i32*
  store i32 %328, i32* %331, align 4
  br label %if.end690

if.else687:                                       ; preds = %do.end676
  %332 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf688 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %332, i32 0, i32 22
  %aptr689 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf688, i32 0, i32 2
  %333 = load i8*, i8** %aptr689, align 8
  %334 = bitcast i32* %y to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %333, i8* align 4 %334, i64 4, i1 false)
  br label %if.end690

if.end690:                                        ; preds = %if.else687, %if.then684
  %335 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf691 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %335, i32 0, i32 22
  %aptr692 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf691, i32 0, i32 2
  %336 = load i8*, i8** %aptr692, align 8
  %add.ptr693 = getelementptr inbounds i8, i8* %336, i64 4
  store i8* %add.ptr693, i8** %aptr692, align 8
  br label %do.end694

do.end694:                                        ; preds = %if.end690
  br label %if.end702

if.else695:                                       ; preds = %if.then620
  %337 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio696 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %337, i32 0, i32 24
  %338 = load %struct._PerlIO**, %struct._PerlIO*** %fio696, align 8
  %339 = bitcast i32* %y to i8*
  %call697 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %338, i8* %339, i64 4)
  %cmp698 = icmp ne i64 %call697, 4
  br i1 %cmp698, label %if.then700, label %if.end701

if.then700:                                       ; preds = %if.else695
  store i32 -1, i32* %retval, align 4
  br label %return

if.end701:                                        ; preds = %if.else695
  br label %if.end702

if.end702:                                        ; preds = %if.end701, %do.end694
  br label %if.end785

if.else703:                                       ; preds = %do.body618
  %340 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio704 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %340, i32 0, i32 24
  %341 = load %struct._PerlIO**, %struct._PerlIO*** %fio704, align 8
  %tobool705 = icmp ne %struct._PerlIO** %341, null
  br i1 %tobool705, label %if.else777, label %if.then706

if.then706:                                       ; preds = %if.else703
  br label %do.body707

do.body707:                                       ; preds = %if.then706
  br label %do.body708

do.body708:                                       ; preds = %do.body707
  %342 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf709 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %342, i32 0, i32 22
  %aptr710 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf709, i32 0, i32 2
  %343 = load i8*, i8** %aptr710, align 8
  %add.ptr711 = getelementptr inbounds i8, i8* %343, i64 4
  %344 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf712 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %344, i32 0, i32 22
  %aend713 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf712, i32 0, i32 3
  %345 = load i8*, i8** %aend713, align 8
  %cmp714 = icmp ugt i8* %add.ptr711, %345
  br i1 %cmp714, label %if.then716, label %if.end757

if.then716:                                       ; preds = %do.body708
  br label %do.body717

do.body717:                                       ; preds = %if.then716
  %346 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf719 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %346, i32 0, i32 22
  %asiz720 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf719, i32 0, i32 1
  %347 = load i64, i64* %asiz720, align 8
  %add721 = add i64 4, %347
  %add722 = add i64 %add721, 8191
  %and723 = and i64 %add722, -8192
  %conv724 = trunc i64 %and723 to i32
  store i32 %conv724, i32* %nsz718, align 4
  %348 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf726 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %348, i32 0, i32 22
  %aptr727 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf726, i32 0, i32 2
  %349 = load i8*, i8** %aptr727, align 8
  %350 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf728 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %350, i32 0, i32 22
  %arena729 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf728, i32 0, i32 0
  %351 = load i8*, i8** %arena729, align 8
  %sub.ptr.lhs.cast730 = ptrtoint i8* %349 to i64
  %sub.ptr.rhs.cast731 = ptrtoint i8* %351 to i64
  %sub.ptr.sub732 = sub i64 %sub.ptr.lhs.cast730, %sub.ptr.rhs.cast731
  %conv733 = trunc i64 %sub.ptr.sub732 to i32
  store i32 %conv733, i32* %offset725, align 4
  %352 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf734 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %352, i32 0, i32 22
  %arena735 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf734, i32 0, i32 0
  %353 = load i8*, i8** %arena735, align 8
  %354 = load i32, i32* %nsz718, align 4
  %conv736 = sext i32 %354 to i64
  %mul737 = mul i64 %conv736, 1
  %call738 = call i8* @Perl_safesysrealloc(i8* %353, i64 %mul737)
  %355 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf739 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %355, i32 0, i32 22
  %arena740 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf739, i32 0, i32 0
  store i8* %call738, i8** %arena740, align 8
  %356 = load i32, i32* %nsz718, align 4
  %conv741 = sext i32 %356 to i64
  %357 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf742 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %357, i32 0, i32 22
  %asiz743 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf742, i32 0, i32 1
  store i64 %conv741, i64* %asiz743, align 8
  %358 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf744 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %358, i32 0, i32 22
  %arena745 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf744, i32 0, i32 0
  %359 = load i8*, i8** %arena745, align 8
  %360 = load i32, i32* %offset725, align 4
  %idx.ext746 = sext i32 %360 to i64
  %add.ptr747 = getelementptr inbounds i8, i8* %359, i64 %idx.ext746
  %361 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf748 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %361, i32 0, i32 22
  %aptr749 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf748, i32 0, i32 2
  store i8* %add.ptr747, i8** %aptr749, align 8
  %362 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf750 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %362, i32 0, i32 22
  %arena751 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf750, i32 0, i32 0
  %363 = load i8*, i8** %arena751, align 8
  %364 = load i32, i32* %nsz718, align 4
  %idx.ext752 = sext i32 %364 to i64
  %add.ptr753 = getelementptr inbounds i8, i8* %363, i64 %idx.ext752
  %365 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf754 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %365, i32 0, i32 22
  %aend755 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf754, i32 0, i32 3
  store i8* %add.ptr753, i8** %aend755, align 8
  br label %do.end756

do.end756:                                        ; preds = %do.body717
  br label %if.end757

if.end757:                                        ; preds = %do.end756, %do.body708
  br label %do.end758

do.end758:                                        ; preds = %if.end757
  %366 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf759 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %366, i32 0, i32 22
  %aptr760 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf759, i32 0, i32 2
  %367 = load i8*, i8** %aptr760, align 8
  %368 = ptrtoint i8* %367 to i64
  %369 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf761 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %369, i32 0, i32 22
  %aptr762 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf761, i32 0, i32 2
  %370 = load i8*, i8** %aptr762, align 8
  %371 = ptrtoint i8* %370 to i64
  %and763 = and i64 %371, -4
  %cmp764 = icmp eq i64 %368, %and763
  br i1 %cmp764, label %if.then766, label %if.else769

if.then766:                                       ; preds = %do.end758
  %372 = load i32, i32* %len, align 4
  %373 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf767 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %373, i32 0, i32 22
  %aptr768 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf767, i32 0, i32 2
  %374 = load i8*, i8** %aptr768, align 8
  %375 = bitcast i8* %374 to i32*
  store i32 %372, i32* %375, align 4
  br label %if.end772

if.else769:                                       ; preds = %do.end758
  %376 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf770 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %376, i32 0, i32 22
  %aptr771 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf770, i32 0, i32 2
  %377 = load i8*, i8** %aptr771, align 8
  %378 = bitcast i32* %len to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %377, i8* align 4 %378, i64 4, i1 false)
  br label %if.end772

if.end772:                                        ; preds = %if.else769, %if.then766
  %379 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf773 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %379, i32 0, i32 22
  %aptr774 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf773, i32 0, i32 2
  %380 = load i8*, i8** %aptr774, align 8
  %add.ptr775 = getelementptr inbounds i8, i8* %380, i64 4
  store i8* %add.ptr775, i8** %aptr774, align 8
  br label %do.end776

do.end776:                                        ; preds = %if.end772
  br label %if.end784

if.else777:                                       ; preds = %if.else703
  %381 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio778 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %381, i32 0, i32 24
  %382 = load %struct._PerlIO**, %struct._PerlIO*** %fio778, align 8
  %383 = bitcast i32* %len to i8*
  %call779 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %382, i8* %383, i64 4)
  %cmp780 = icmp ne i64 %call779, 4
  br i1 %cmp780, label %if.then782, label %if.end783

if.then782:                                       ; preds = %if.else777
  store i32 -1, i32* %retval, align 4
  br label %return

if.end783:                                        ; preds = %if.else777
  br label %if.end784

if.end784:                                        ; preds = %if.end783, %do.end776
  br label %if.end785

if.end785:                                        ; preds = %if.end784, %if.end702
  br label %do.end786

do.end786:                                        ; preds = %if.end785
  br label %do.body787

do.body787:                                       ; preds = %do.end786
  %384 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio788 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %384, i32 0, i32 24
  %385 = load %struct._PerlIO**, %struct._PerlIO*** %fio788, align 8
  %tobool789 = icmp ne %struct._PerlIO** %385, null
  br i1 %tobool789, label %if.else864, label %if.then790

if.then790:                                       ; preds = %do.body787
  br label %do.body791

do.body791:                                       ; preds = %if.then790
  br label %do.body792

do.body792:                                       ; preds = %do.body791
  %386 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf793 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %386, i32 0, i32 22
  %aptr794 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf793, i32 0, i32 2
  %387 = load i8*, i8** %aptr794, align 8
  %388 = load i32, i32* %len, align 4
  %idx.ext795 = sext i32 %388 to i64
  %add.ptr796 = getelementptr inbounds i8, i8* %387, i64 %idx.ext795
  %389 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf797 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %389, i32 0, i32 22
  %aend798 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf797, i32 0, i32 3
  %390 = load i8*, i8** %aend798, align 8
  %cmp799 = icmp ugt i8* %add.ptr796, %390
  br i1 %cmp799, label %if.then801, label %if.end843

if.then801:                                       ; preds = %do.body792
  br label %do.body802

do.body802:                                       ; preds = %if.then801
  %391 = load i32, i32* %len, align 4
  %conv804 = sext i32 %391 to i64
  %392 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf805 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %392, i32 0, i32 22
  %asiz806 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf805, i32 0, i32 1
  %393 = load i64, i64* %asiz806, align 8
  %add807 = add i64 %conv804, %393
  %add808 = add i64 %add807, 8191
  %and809 = and i64 %add808, -8192
  %conv810 = trunc i64 %and809 to i32
  store i32 %conv810, i32* %nsz803, align 4
  %394 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf812 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %394, i32 0, i32 22
  %aptr813 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf812, i32 0, i32 2
  %395 = load i8*, i8** %aptr813, align 8
  %396 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf814 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %396, i32 0, i32 22
  %arena815 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf814, i32 0, i32 0
  %397 = load i8*, i8** %arena815, align 8
  %sub.ptr.lhs.cast816 = ptrtoint i8* %395 to i64
  %sub.ptr.rhs.cast817 = ptrtoint i8* %397 to i64
  %sub.ptr.sub818 = sub i64 %sub.ptr.lhs.cast816, %sub.ptr.rhs.cast817
  %conv819 = trunc i64 %sub.ptr.sub818 to i32
  store i32 %conv819, i32* %offset811, align 4
  %398 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf820 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %398, i32 0, i32 22
  %arena821 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf820, i32 0, i32 0
  %399 = load i8*, i8** %arena821, align 8
  %400 = load i32, i32* %nsz803, align 4
  %conv822 = sext i32 %400 to i64
  %mul823 = mul i64 %conv822, 1
  %call824 = call i8* @Perl_safesysrealloc(i8* %399, i64 %mul823)
  %401 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf825 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %401, i32 0, i32 22
  %arena826 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf825, i32 0, i32 0
  store i8* %call824, i8** %arena826, align 8
  %402 = load i32, i32* %nsz803, align 4
  %conv827 = sext i32 %402 to i64
  %403 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf828 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %403, i32 0, i32 22
  %asiz829 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf828, i32 0, i32 1
  store i64 %conv827, i64* %asiz829, align 8
  %404 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf830 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %404, i32 0, i32 22
  %arena831 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf830, i32 0, i32 0
  %405 = load i8*, i8** %arena831, align 8
  %406 = load i32, i32* %offset811, align 4
  %idx.ext832 = sext i32 %406 to i64
  %add.ptr833 = getelementptr inbounds i8, i8* %405, i64 %idx.ext832
  %407 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf834 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %407, i32 0, i32 22
  %aptr835 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf834, i32 0, i32 2
  store i8* %add.ptr833, i8** %aptr835, align 8
  %408 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf836 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %408, i32 0, i32 22
  %arena837 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf836, i32 0, i32 0
  %409 = load i8*, i8** %arena837, align 8
  %410 = load i32, i32* %nsz803, align 4
  %idx.ext838 = sext i32 %410 to i64
  %add.ptr839 = getelementptr inbounds i8, i8* %409, i64 %idx.ext838
  %411 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf840 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %411, i32 0, i32 22
  %aend841 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf840, i32 0, i32 3
  store i8* %add.ptr839, i8** %aend841, align 8
  br label %do.end842

do.end842:                                        ; preds = %do.body802
  br label %if.end843

if.end843:                                        ; preds = %do.end842, %do.body792
  br label %do.end844

do.end844:                                        ; preds = %if.end843
  %412 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf845 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %412, i32 0, i32 22
  %aptr846 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf845, i32 0, i32 2
  %413 = load i8*, i8** %aptr846, align 8
  %414 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_flags847 = getelementptr inbounds %struct.sv, %struct.sv* %414, i32 0, i32 2
  %415 = load i32, i32* %sv_flags847, align 4
  %and848 = and i32 %415, 2098176
  %cmp849 = icmp eq i32 %and848, 1024
  br i1 %cmp849, label %cond.true851, label %cond.false854

cond.true851:                                     ; preds = %do.end844
  %416 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_u852 = getelementptr inbounds %struct.sv, %struct.sv* %416, i32 0, i32 3
  %svu_pv853 = bitcast %union.anon* %sv_u852 to i8**
  %417 = load i8*, i8** %svu_pv853, align 8
  br label %cond.end856

cond.false854:                                    ; preds = %do.end844
  %418 = load %struct.sv*, %struct.sv** %text, align 8
  %call855 = call i8* @Perl_sv_2pv_flags(%struct.sv* %418, i64* null, i32 2)
  br label %cond.end856

cond.end856:                                      ; preds = %cond.false854, %cond.true851
  %cond857 = phi i8* [ %417, %cond.true851 ], [ %call855, %cond.false854 ]
  %419 = load i32, i32* %len, align 4
  %conv858 = sext i32 %419 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %413, i8* align 1 %cond857, i64 %conv858, i1 false)
  %420 = load i32, i32* %len, align 4
  %421 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf859 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %421, i32 0, i32 22
  %aptr860 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf859, i32 0, i32 2
  %422 = load i8*, i8** %aptr860, align 8
  %idx.ext861 = sext i32 %420 to i64
  %add.ptr862 = getelementptr inbounds i8, i8* %422, i64 %idx.ext861
  store i8* %add.ptr862, i8** %aptr860, align 8
  br label %do.end863

do.end863:                                        ; preds = %cond.end856
  br label %if.end884

if.else864:                                       ; preds = %do.body787
  %423 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio865 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %423, i32 0, i32 24
  %424 = load %struct._PerlIO**, %struct._PerlIO*** %fio865, align 8
  %425 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_flags866 = getelementptr inbounds %struct.sv, %struct.sv* %425, i32 0, i32 2
  %426 = load i32, i32* %sv_flags866, align 4
  %and867 = and i32 %426, 2098176
  %cmp868 = icmp eq i32 %and867, 1024
  br i1 %cmp868, label %cond.true870, label %cond.false873

cond.true870:                                     ; preds = %if.else864
  %427 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_u871 = getelementptr inbounds %struct.sv, %struct.sv* %427, i32 0, i32 3
  %svu_pv872 = bitcast %union.anon* %sv_u871 to i8**
  %428 = load i8*, i8** %svu_pv872, align 8
  br label %cond.end875

cond.false873:                                    ; preds = %if.else864
  %429 = load %struct.sv*, %struct.sv** %text, align 8
  %call874 = call i8* @Perl_sv_2pv_flags(%struct.sv* %429, i64* null, i32 2)
  br label %cond.end875

cond.end875:                                      ; preds = %cond.false873, %cond.true870
  %cond876 = phi i8* [ %428, %cond.true870 ], [ %call874, %cond.false873 ]
  %430 = load i32, i32* %len, align 4
  %conv877 = sext i32 %430 to i64
  %call878 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %424, i8* %cond876, i64 %conv877)
  %431 = load i32, i32* %len, align 4
  %conv879 = sext i32 %431 to i64
  %cmp880 = icmp ne i64 %call878, %conv879
  br i1 %cmp880, label %if.then882, label %if.end883

if.then882:                                       ; preds = %cond.end875
  store i32 -1, i32* %retval, align 4
  br label %return

if.end883:                                        ; preds = %cond.end875
  br label %if.end884

if.end884:                                        ; preds = %if.end883, %do.end863
  br label %do.end885

do.end885:                                        ; preds = %if.end884
  br label %if.end886

if.end886:                                        ; preds = %do.end885, %if.end546
  br label %do.end887

do.end887:                                        ; preds = %if.end886
  br label %if.end1481

if.else888:                                       ; preds = %do.end294
  br label %do.body889

do.body889:                                       ; preds = %if.else888
  %432 = load i32, i32* %len, align 4
  %cmp890 = icmp sle i32 %432, 255
  br i1 %cmp890, label %if.then892, label %if.else1138

if.then892:                                       ; preds = %do.body889
  %433 = load i32, i32* %len, align 4
  %conv894 = trunc i32 %433 to i8
  store i8 %conv894, i8* %clen893, align 1
  br label %do.body895

do.body895:                                       ; preds = %if.then892
  %434 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio896 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %434, i32 0, i32 24
  %435 = load %struct._PerlIO**, %struct._PerlIO*** %fio896, align 8
  %tobool897 = icmp ne %struct._PerlIO** %435, null
  br i1 %tobool897, label %if.else956, label %if.then898

if.then898:                                       ; preds = %do.body895
  br label %do.body899

do.body899:                                       ; preds = %if.then898
  %436 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf900 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %436, i32 0, i32 22
  %aptr901 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf900, i32 0, i32 2
  %437 = load i8*, i8** %aptr901, align 8
  %438 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf902 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %438, i32 0, i32 22
  %aend903 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf902, i32 0, i32 3
  %439 = load i8*, i8** %aend903, align 8
  %cmp904 = icmp ult i8* %437, %439
  br i1 %cmp904, label %if.then906, label %if.else910

if.then906:                                       ; preds = %do.body899
  %440 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf907 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %440, i32 0, i32 22
  %aptr908 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf907, i32 0, i32 2
  %441 = load i8*, i8** %aptr908, align 8
  %incdec.ptr909 = getelementptr inbounds i8, i8* %441, i32 1
  store i8* %incdec.ptr909, i8** %aptr908, align 8
  store i8 10, i8* %441, align 1
  br label %if.end954

if.else910:                                       ; preds = %do.body899
  br label %do.body911

do.body911:                                       ; preds = %if.else910
  %442 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf913 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %442, i32 0, i32 22
  %asiz914 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf913, i32 0, i32 1
  %443 = load i64, i64* %asiz914, align 8
  %add915 = add i64 1, %443
  %add916 = add i64 %add915, 8191
  %and917 = and i64 %add916, -8192
  %conv918 = trunc i64 %and917 to i32
  store i32 %conv918, i32* %nsz912, align 4
  %444 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf920 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %444, i32 0, i32 22
  %aptr921 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf920, i32 0, i32 2
  %445 = load i8*, i8** %aptr921, align 8
  %446 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf922 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %446, i32 0, i32 22
  %arena923 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf922, i32 0, i32 0
  %447 = load i8*, i8** %arena923, align 8
  %sub.ptr.lhs.cast924 = ptrtoint i8* %445 to i64
  %sub.ptr.rhs.cast925 = ptrtoint i8* %447 to i64
  %sub.ptr.sub926 = sub i64 %sub.ptr.lhs.cast924, %sub.ptr.rhs.cast925
  %conv927 = trunc i64 %sub.ptr.sub926 to i32
  store i32 %conv927, i32* %offset919, align 4
  %448 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf928 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %448, i32 0, i32 22
  %arena929 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf928, i32 0, i32 0
  %449 = load i8*, i8** %arena929, align 8
  %450 = load i32, i32* %nsz912, align 4
  %conv930 = sext i32 %450 to i64
  %mul931 = mul i64 %conv930, 1
  %call932 = call i8* @Perl_safesysrealloc(i8* %449, i64 %mul931)
  %451 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf933 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %451, i32 0, i32 22
  %arena934 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf933, i32 0, i32 0
  store i8* %call932, i8** %arena934, align 8
  %452 = load i32, i32* %nsz912, align 4
  %conv935 = sext i32 %452 to i64
  %453 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf936 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %453, i32 0, i32 22
  %asiz937 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf936, i32 0, i32 1
  store i64 %conv935, i64* %asiz937, align 8
  %454 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf938 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %454, i32 0, i32 22
  %arena939 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf938, i32 0, i32 0
  %455 = load i8*, i8** %arena939, align 8
  %456 = load i32, i32* %offset919, align 4
  %idx.ext940 = sext i32 %456 to i64
  %add.ptr941 = getelementptr inbounds i8, i8* %455, i64 %idx.ext940
  %457 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf942 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %457, i32 0, i32 22
  %aptr943 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf942, i32 0, i32 2
  store i8* %add.ptr941, i8** %aptr943, align 8
  %458 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf944 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %458, i32 0, i32 22
  %arena945 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf944, i32 0, i32 0
  %459 = load i8*, i8** %arena945, align 8
  %460 = load i32, i32* %nsz912, align 4
  %idx.ext946 = sext i32 %460 to i64
  %add.ptr947 = getelementptr inbounds i8, i8* %459, i64 %idx.ext946
  %461 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf948 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %461, i32 0, i32 22
  %aend949 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf948, i32 0, i32 3
  store i8* %add.ptr947, i8** %aend949, align 8
  br label %do.end950

do.end950:                                        ; preds = %do.body911
  %462 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf951 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %462, i32 0, i32 22
  %aptr952 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf951, i32 0, i32 2
  %463 = load i8*, i8** %aptr952, align 8
  %incdec.ptr953 = getelementptr inbounds i8, i8* %463, i32 1
  store i8* %incdec.ptr953, i8** %aptr952, align 8
  store i8 10, i8* %463, align 1
  br label %if.end954

if.end954:                                        ; preds = %do.end950, %if.then906
  br label %do.end955

do.end955:                                        ; preds = %if.end954
  br label %if.end963

if.else956:                                       ; preds = %do.body895
  %464 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio957 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %464, i32 0, i32 24
  %465 = load %struct._PerlIO**, %struct._PerlIO*** %fio957, align 8
  %call958 = call i32 @PerlIO_putc(%struct._PerlIO** %465, i32 10)
  %cmp959 = icmp eq i32 %call958, -1
  br i1 %cmp959, label %if.then961, label %if.end962

if.then961:                                       ; preds = %if.else956
  store i32 -1, i32* %retval, align 4
  br label %return

if.end962:                                        ; preds = %if.else956
  br label %if.end963

if.end963:                                        ; preds = %if.end962, %do.end955
  br label %do.end964

do.end964:                                        ; preds = %if.end963
  br label %do.body965

do.body965:                                       ; preds = %do.end964
  %466 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio966 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %466, i32 0, i32 24
  %467 = load %struct._PerlIO**, %struct._PerlIO*** %fio966, align 8
  %tobool967 = icmp ne %struct._PerlIO** %467, null
  br i1 %tobool967, label %if.else1026, label %if.then968

if.then968:                                       ; preds = %do.body965
  br label %do.body969

do.body969:                                       ; preds = %if.then968
  %468 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf970 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %468, i32 0, i32 22
  %aptr971 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf970, i32 0, i32 2
  %469 = load i8*, i8** %aptr971, align 8
  %470 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf972 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %470, i32 0, i32 22
  %aend973 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf972, i32 0, i32 3
  %471 = load i8*, i8** %aend973, align 8
  %cmp974 = icmp ult i8* %469, %471
  br i1 %cmp974, label %if.then976, label %if.else980

if.then976:                                       ; preds = %do.body969
  %472 = load i8, i8* %clen893, align 1
  %473 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf977 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %473, i32 0, i32 22
  %aptr978 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf977, i32 0, i32 2
  %474 = load i8*, i8** %aptr978, align 8
  %incdec.ptr979 = getelementptr inbounds i8, i8* %474, i32 1
  store i8* %incdec.ptr979, i8** %aptr978, align 8
  store i8 %472, i8* %474, align 1
  br label %if.end1024

if.else980:                                       ; preds = %do.body969
  br label %do.body981

do.body981:                                       ; preds = %if.else980
  %475 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf983 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %475, i32 0, i32 22
  %asiz984 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf983, i32 0, i32 1
  %476 = load i64, i64* %asiz984, align 8
  %add985 = add i64 1, %476
  %add986 = add i64 %add985, 8191
  %and987 = and i64 %add986, -8192
  %conv988 = trunc i64 %and987 to i32
  store i32 %conv988, i32* %nsz982, align 4
  %477 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf990 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %477, i32 0, i32 22
  %aptr991 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf990, i32 0, i32 2
  %478 = load i8*, i8** %aptr991, align 8
  %479 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf992 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %479, i32 0, i32 22
  %arena993 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf992, i32 0, i32 0
  %480 = load i8*, i8** %arena993, align 8
  %sub.ptr.lhs.cast994 = ptrtoint i8* %478 to i64
  %sub.ptr.rhs.cast995 = ptrtoint i8* %480 to i64
  %sub.ptr.sub996 = sub i64 %sub.ptr.lhs.cast994, %sub.ptr.rhs.cast995
  %conv997 = trunc i64 %sub.ptr.sub996 to i32
  store i32 %conv997, i32* %offset989, align 4
  %481 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf998 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %481, i32 0, i32 22
  %arena999 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf998, i32 0, i32 0
  %482 = load i8*, i8** %arena999, align 8
  %483 = load i32, i32* %nsz982, align 4
  %conv1000 = sext i32 %483 to i64
  %mul1001 = mul i64 %conv1000, 1
  %call1002 = call i8* @Perl_safesysrealloc(i8* %482, i64 %mul1001)
  %484 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1003 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %484, i32 0, i32 22
  %arena1004 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1003, i32 0, i32 0
  store i8* %call1002, i8** %arena1004, align 8
  %485 = load i32, i32* %nsz982, align 4
  %conv1005 = sext i32 %485 to i64
  %486 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1006 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %486, i32 0, i32 22
  %asiz1007 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1006, i32 0, i32 1
  store i64 %conv1005, i64* %asiz1007, align 8
  %487 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1008 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %487, i32 0, i32 22
  %arena1009 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1008, i32 0, i32 0
  %488 = load i8*, i8** %arena1009, align 8
  %489 = load i32, i32* %offset989, align 4
  %idx.ext1010 = sext i32 %489 to i64
  %add.ptr1011 = getelementptr inbounds i8, i8* %488, i64 %idx.ext1010
  %490 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1012 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %490, i32 0, i32 22
  %aptr1013 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1012, i32 0, i32 2
  store i8* %add.ptr1011, i8** %aptr1013, align 8
  %491 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1014 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %491, i32 0, i32 22
  %arena1015 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1014, i32 0, i32 0
  %492 = load i8*, i8** %arena1015, align 8
  %493 = load i32, i32* %nsz982, align 4
  %idx.ext1016 = sext i32 %493 to i64
  %add.ptr1017 = getelementptr inbounds i8, i8* %492, i64 %idx.ext1016
  %494 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1018 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %494, i32 0, i32 22
  %aend1019 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1018, i32 0, i32 3
  store i8* %add.ptr1017, i8** %aend1019, align 8
  br label %do.end1020

do.end1020:                                       ; preds = %do.body981
  %495 = load i8, i8* %clen893, align 1
  %496 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1021 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %496, i32 0, i32 22
  %aptr1022 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1021, i32 0, i32 2
  %497 = load i8*, i8** %aptr1022, align 8
  %incdec.ptr1023 = getelementptr inbounds i8, i8* %497, i32 1
  store i8* %incdec.ptr1023, i8** %aptr1022, align 8
  store i8 %495, i8* %497, align 1
  br label %if.end1024

if.end1024:                                       ; preds = %do.end1020, %if.then976
  br label %do.end1025

do.end1025:                                       ; preds = %if.end1024
  br label %if.end1034

if.else1026:                                      ; preds = %do.body965
  %498 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1027 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %498, i32 0, i32 24
  %499 = load %struct._PerlIO**, %struct._PerlIO*** %fio1027, align 8
  %500 = load i8, i8* %clen893, align 1
  %conv1028 = zext i8 %500 to i32
  %call1029 = call i32 @PerlIO_putc(%struct._PerlIO** %499, i32 %conv1028)
  %cmp1030 = icmp eq i32 %call1029, -1
  br i1 %cmp1030, label %if.then1032, label %if.end1033

if.then1032:                                      ; preds = %if.else1026
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1033:                                       ; preds = %if.else1026
  br label %if.end1034

if.end1034:                                       ; preds = %if.end1033, %do.end1025
  br label %do.end1035

do.end1035:                                       ; preds = %if.end1034
  %501 = load i32, i32* %len, align 4
  %tobool1036 = icmp ne i32 %501, 0
  br i1 %tobool1036, label %if.then1037, label %if.end1137

if.then1037:                                      ; preds = %do.end1035
  br label %do.body1038

do.body1038:                                      ; preds = %if.then1037
  %502 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1039 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %502, i32 0, i32 24
  %503 = load %struct._PerlIO**, %struct._PerlIO*** %fio1039, align 8
  %tobool1040 = icmp ne %struct._PerlIO** %503, null
  br i1 %tobool1040, label %if.else1115, label %if.then1041

if.then1041:                                      ; preds = %do.body1038
  br label %do.body1042

do.body1042:                                      ; preds = %if.then1041
  br label %do.body1043

do.body1043:                                      ; preds = %do.body1042
  %504 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1044 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %504, i32 0, i32 22
  %aptr1045 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1044, i32 0, i32 2
  %505 = load i8*, i8** %aptr1045, align 8
  %506 = load i32, i32* %len, align 4
  %idx.ext1046 = sext i32 %506 to i64
  %add.ptr1047 = getelementptr inbounds i8, i8* %505, i64 %idx.ext1046
  %507 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1048 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %507, i32 0, i32 22
  %aend1049 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1048, i32 0, i32 3
  %508 = load i8*, i8** %aend1049, align 8
  %cmp1050 = icmp ugt i8* %add.ptr1047, %508
  br i1 %cmp1050, label %if.then1052, label %if.end1094

if.then1052:                                      ; preds = %do.body1043
  br label %do.body1053

do.body1053:                                      ; preds = %if.then1052
  %509 = load i32, i32* %len, align 4
  %conv1055 = sext i32 %509 to i64
  %510 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1056 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %510, i32 0, i32 22
  %asiz1057 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1056, i32 0, i32 1
  %511 = load i64, i64* %asiz1057, align 8
  %add1058 = add i64 %conv1055, %511
  %add1059 = add i64 %add1058, 8191
  %and1060 = and i64 %add1059, -8192
  %conv1061 = trunc i64 %and1060 to i32
  store i32 %conv1061, i32* %nsz1054, align 4
  %512 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1063 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %512, i32 0, i32 22
  %aptr1064 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1063, i32 0, i32 2
  %513 = load i8*, i8** %aptr1064, align 8
  %514 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1065 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %514, i32 0, i32 22
  %arena1066 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1065, i32 0, i32 0
  %515 = load i8*, i8** %arena1066, align 8
  %sub.ptr.lhs.cast1067 = ptrtoint i8* %513 to i64
  %sub.ptr.rhs.cast1068 = ptrtoint i8* %515 to i64
  %sub.ptr.sub1069 = sub i64 %sub.ptr.lhs.cast1067, %sub.ptr.rhs.cast1068
  %conv1070 = trunc i64 %sub.ptr.sub1069 to i32
  store i32 %conv1070, i32* %offset1062, align 4
  %516 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1071 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %516, i32 0, i32 22
  %arena1072 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1071, i32 0, i32 0
  %517 = load i8*, i8** %arena1072, align 8
  %518 = load i32, i32* %nsz1054, align 4
  %conv1073 = sext i32 %518 to i64
  %mul1074 = mul i64 %conv1073, 1
  %call1075 = call i8* @Perl_safesysrealloc(i8* %517, i64 %mul1074)
  %519 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1076 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %519, i32 0, i32 22
  %arena1077 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1076, i32 0, i32 0
  store i8* %call1075, i8** %arena1077, align 8
  %520 = load i32, i32* %nsz1054, align 4
  %conv1078 = sext i32 %520 to i64
  %521 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1079 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %521, i32 0, i32 22
  %asiz1080 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1079, i32 0, i32 1
  store i64 %conv1078, i64* %asiz1080, align 8
  %522 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1081 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %522, i32 0, i32 22
  %arena1082 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1081, i32 0, i32 0
  %523 = load i8*, i8** %arena1082, align 8
  %524 = load i32, i32* %offset1062, align 4
  %idx.ext1083 = sext i32 %524 to i64
  %add.ptr1084 = getelementptr inbounds i8, i8* %523, i64 %idx.ext1083
  %525 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1085 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %525, i32 0, i32 22
  %aptr1086 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1085, i32 0, i32 2
  store i8* %add.ptr1084, i8** %aptr1086, align 8
  %526 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1087 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %526, i32 0, i32 22
  %arena1088 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1087, i32 0, i32 0
  %527 = load i8*, i8** %arena1088, align 8
  %528 = load i32, i32* %nsz1054, align 4
  %idx.ext1089 = sext i32 %528 to i64
  %add.ptr1090 = getelementptr inbounds i8, i8* %527, i64 %idx.ext1089
  %529 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1091 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %529, i32 0, i32 22
  %aend1092 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1091, i32 0, i32 3
  store i8* %add.ptr1090, i8** %aend1092, align 8
  br label %do.end1093

do.end1093:                                       ; preds = %do.body1053
  br label %if.end1094

if.end1094:                                       ; preds = %do.end1093, %do.body1043
  br label %do.end1095

do.end1095:                                       ; preds = %if.end1094
  %530 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1096 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %530, i32 0, i32 22
  %aptr1097 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1096, i32 0, i32 2
  %531 = load i8*, i8** %aptr1097, align 8
  %532 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_flags1098 = getelementptr inbounds %struct.sv, %struct.sv* %532, i32 0, i32 2
  %533 = load i32, i32* %sv_flags1098, align 4
  %and1099 = and i32 %533, 2098176
  %cmp1100 = icmp eq i32 %and1099, 1024
  br i1 %cmp1100, label %cond.true1102, label %cond.false1105

cond.true1102:                                    ; preds = %do.end1095
  %534 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_u1103 = getelementptr inbounds %struct.sv, %struct.sv* %534, i32 0, i32 3
  %svu_pv1104 = bitcast %union.anon* %sv_u1103 to i8**
  %535 = load i8*, i8** %svu_pv1104, align 8
  br label %cond.end1107

cond.false1105:                                   ; preds = %do.end1095
  %536 = load %struct.sv*, %struct.sv** %text, align 8
  %call1106 = call i8* @Perl_sv_2pv_flags(%struct.sv* %536, i64* null, i32 2)
  br label %cond.end1107

cond.end1107:                                     ; preds = %cond.false1105, %cond.true1102
  %cond1108 = phi i8* [ %535, %cond.true1102 ], [ %call1106, %cond.false1105 ]
  %537 = load i32, i32* %len, align 4
  %conv1109 = sext i32 %537 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %531, i8* align 1 %cond1108, i64 %conv1109, i1 false)
  %538 = load i32, i32* %len, align 4
  %539 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1110 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %539, i32 0, i32 22
  %aptr1111 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1110, i32 0, i32 2
  %540 = load i8*, i8** %aptr1111, align 8
  %idx.ext1112 = sext i32 %538 to i64
  %add.ptr1113 = getelementptr inbounds i8, i8* %540, i64 %idx.ext1112
  store i8* %add.ptr1113, i8** %aptr1111, align 8
  br label %do.end1114

do.end1114:                                       ; preds = %cond.end1107
  br label %if.end1135

if.else1115:                                      ; preds = %do.body1038
  %541 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1116 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %541, i32 0, i32 24
  %542 = load %struct._PerlIO**, %struct._PerlIO*** %fio1116, align 8
  %543 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_flags1117 = getelementptr inbounds %struct.sv, %struct.sv* %543, i32 0, i32 2
  %544 = load i32, i32* %sv_flags1117, align 4
  %and1118 = and i32 %544, 2098176
  %cmp1119 = icmp eq i32 %and1118, 1024
  br i1 %cmp1119, label %cond.true1121, label %cond.false1124

cond.true1121:                                    ; preds = %if.else1115
  %545 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_u1122 = getelementptr inbounds %struct.sv, %struct.sv* %545, i32 0, i32 3
  %svu_pv1123 = bitcast %union.anon* %sv_u1122 to i8**
  %546 = load i8*, i8** %svu_pv1123, align 8
  br label %cond.end1126

cond.false1124:                                   ; preds = %if.else1115
  %547 = load %struct.sv*, %struct.sv** %text, align 8
  %call1125 = call i8* @Perl_sv_2pv_flags(%struct.sv* %547, i64* null, i32 2)
  br label %cond.end1126

cond.end1126:                                     ; preds = %cond.false1124, %cond.true1121
  %cond1127 = phi i8* [ %546, %cond.true1121 ], [ %call1125, %cond.false1124 ]
  %548 = load i32, i32* %len, align 4
  %conv1128 = sext i32 %548 to i64
  %call1129 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %542, i8* %cond1127, i64 %conv1128)
  %549 = load i32, i32* %len, align 4
  %conv1130 = sext i32 %549 to i64
  %cmp1131 = icmp ne i64 %call1129, %conv1130
  br i1 %cmp1131, label %if.then1133, label %if.end1134

if.then1133:                                      ; preds = %cond.end1126
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1134:                                       ; preds = %cond.end1126
  br label %if.end1135

if.end1135:                                       ; preds = %if.end1134, %do.end1114
  br label %do.end1136

do.end1136:                                       ; preds = %if.end1135
  br label %if.end1137

if.end1137:                                       ; preds = %do.end1136, %do.end1035
  br label %if.end1479

if.else1138:                                      ; preds = %do.body889
  br label %do.body1139

do.body1139:                                      ; preds = %if.else1138
  %550 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1140 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %550, i32 0, i32 24
  %551 = load %struct._PerlIO**, %struct._PerlIO*** %fio1140, align 8
  %tobool1141 = icmp ne %struct._PerlIO** %551, null
  br i1 %tobool1141, label %if.else1200, label %if.then1142

if.then1142:                                      ; preds = %do.body1139
  br label %do.body1143

do.body1143:                                      ; preds = %if.then1142
  %552 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1144 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %552, i32 0, i32 22
  %aptr1145 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1144, i32 0, i32 2
  %553 = load i8*, i8** %aptr1145, align 8
  %554 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1146 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %554, i32 0, i32 22
  %aend1147 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1146, i32 0, i32 3
  %555 = load i8*, i8** %aend1147, align 8
  %cmp1148 = icmp ult i8* %553, %555
  br i1 %cmp1148, label %if.then1150, label %if.else1154

if.then1150:                                      ; preds = %do.body1143
  %556 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1151 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %556, i32 0, i32 22
  %aptr1152 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1151, i32 0, i32 2
  %557 = load i8*, i8** %aptr1152, align 8
  %incdec.ptr1153 = getelementptr inbounds i8, i8* %557, i32 1
  store i8* %incdec.ptr1153, i8** %aptr1152, align 8
  store i8 1, i8* %557, align 1
  br label %if.end1198

if.else1154:                                      ; preds = %do.body1143
  br label %do.body1155

do.body1155:                                      ; preds = %if.else1154
  %558 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1157 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %558, i32 0, i32 22
  %asiz1158 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1157, i32 0, i32 1
  %559 = load i64, i64* %asiz1158, align 8
  %add1159 = add i64 1, %559
  %add1160 = add i64 %add1159, 8191
  %and1161 = and i64 %add1160, -8192
  %conv1162 = trunc i64 %and1161 to i32
  store i32 %conv1162, i32* %nsz1156, align 4
  %560 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1164 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %560, i32 0, i32 22
  %aptr1165 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1164, i32 0, i32 2
  %561 = load i8*, i8** %aptr1165, align 8
  %562 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1166 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %562, i32 0, i32 22
  %arena1167 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1166, i32 0, i32 0
  %563 = load i8*, i8** %arena1167, align 8
  %sub.ptr.lhs.cast1168 = ptrtoint i8* %561 to i64
  %sub.ptr.rhs.cast1169 = ptrtoint i8* %563 to i64
  %sub.ptr.sub1170 = sub i64 %sub.ptr.lhs.cast1168, %sub.ptr.rhs.cast1169
  %conv1171 = trunc i64 %sub.ptr.sub1170 to i32
  store i32 %conv1171, i32* %offset1163, align 4
  %564 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1172 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %564, i32 0, i32 22
  %arena1173 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1172, i32 0, i32 0
  %565 = load i8*, i8** %arena1173, align 8
  %566 = load i32, i32* %nsz1156, align 4
  %conv1174 = sext i32 %566 to i64
  %mul1175 = mul i64 %conv1174, 1
  %call1176 = call i8* @Perl_safesysrealloc(i8* %565, i64 %mul1175)
  %567 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1177 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %567, i32 0, i32 22
  %arena1178 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1177, i32 0, i32 0
  store i8* %call1176, i8** %arena1178, align 8
  %568 = load i32, i32* %nsz1156, align 4
  %conv1179 = sext i32 %568 to i64
  %569 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1180 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %569, i32 0, i32 22
  %asiz1181 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1180, i32 0, i32 1
  store i64 %conv1179, i64* %asiz1181, align 8
  %570 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1182 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %570, i32 0, i32 22
  %arena1183 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1182, i32 0, i32 0
  %571 = load i8*, i8** %arena1183, align 8
  %572 = load i32, i32* %offset1163, align 4
  %idx.ext1184 = sext i32 %572 to i64
  %add.ptr1185 = getelementptr inbounds i8, i8* %571, i64 %idx.ext1184
  %573 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1186 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %573, i32 0, i32 22
  %aptr1187 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1186, i32 0, i32 2
  store i8* %add.ptr1185, i8** %aptr1187, align 8
  %574 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1188 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %574, i32 0, i32 22
  %arena1189 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1188, i32 0, i32 0
  %575 = load i8*, i8** %arena1189, align 8
  %576 = load i32, i32* %nsz1156, align 4
  %idx.ext1190 = sext i32 %576 to i64
  %add.ptr1191 = getelementptr inbounds i8, i8* %575, i64 %idx.ext1190
  %577 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1192 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %577, i32 0, i32 22
  %aend1193 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1192, i32 0, i32 3
  store i8* %add.ptr1191, i8** %aend1193, align 8
  br label %do.end1194

do.end1194:                                       ; preds = %do.body1155
  %578 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1195 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %578, i32 0, i32 22
  %aptr1196 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1195, i32 0, i32 2
  %579 = load i8*, i8** %aptr1196, align 8
  %incdec.ptr1197 = getelementptr inbounds i8, i8* %579, i32 1
  store i8* %incdec.ptr1197, i8** %aptr1196, align 8
  store i8 1, i8* %579, align 1
  br label %if.end1198

if.end1198:                                       ; preds = %do.end1194, %if.then1150
  br label %do.end1199

do.end1199:                                       ; preds = %if.end1198
  br label %if.end1207

if.else1200:                                      ; preds = %do.body1139
  %580 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1201 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %580, i32 0, i32 24
  %581 = load %struct._PerlIO**, %struct._PerlIO*** %fio1201, align 8
  %call1202 = call i32 @PerlIO_putc(%struct._PerlIO** %581, i32 1)
  %cmp1203 = icmp eq i32 %call1202, -1
  br i1 %cmp1203, label %if.then1205, label %if.end1206

if.then1205:                                      ; preds = %if.else1200
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1206:                                       ; preds = %if.else1200
  br label %if.end1207

if.end1207:                                       ; preds = %if.end1206, %do.end1199
  br label %do.end1208

do.end1208:                                       ; preds = %if.end1207
  br label %do.body1209

do.body1209:                                      ; preds = %do.end1208
  %582 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder1210 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %582, i32 0, i32 12
  %583 = load i32, i32* %netorder1210, align 8
  %tobool1211 = icmp ne i32 %583, 0
  br i1 %tobool1211, label %if.then1212, label %if.else1296

if.then1212:                                      ; preds = %do.body1209
  %584 = load i32, i32* %len, align 4
  %call1214 = call i32 @my_swap32(i32 %584)
  store i32 %call1214, i32* %y1213, align 4
  %585 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1215 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %585, i32 0, i32 24
  %586 = load %struct._PerlIO**, %struct._PerlIO*** %fio1215, align 8
  %tobool1216 = icmp ne %struct._PerlIO** %586, null
  br i1 %tobool1216, label %if.else1288, label %if.then1217

if.then1217:                                      ; preds = %if.then1212
  br label %do.body1218

do.body1218:                                      ; preds = %if.then1217
  br label %do.body1219

do.body1219:                                      ; preds = %do.body1218
  %587 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1220 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %587, i32 0, i32 22
  %aptr1221 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1220, i32 0, i32 2
  %588 = load i8*, i8** %aptr1221, align 8
  %add.ptr1222 = getelementptr inbounds i8, i8* %588, i64 4
  %589 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1223 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %589, i32 0, i32 22
  %aend1224 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1223, i32 0, i32 3
  %590 = load i8*, i8** %aend1224, align 8
  %cmp1225 = icmp ugt i8* %add.ptr1222, %590
  br i1 %cmp1225, label %if.then1227, label %if.end1268

if.then1227:                                      ; preds = %do.body1219
  br label %do.body1228

do.body1228:                                      ; preds = %if.then1227
  %591 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1230 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %591, i32 0, i32 22
  %asiz1231 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1230, i32 0, i32 1
  %592 = load i64, i64* %asiz1231, align 8
  %add1232 = add i64 4, %592
  %add1233 = add i64 %add1232, 8191
  %and1234 = and i64 %add1233, -8192
  %conv1235 = trunc i64 %and1234 to i32
  store i32 %conv1235, i32* %nsz1229, align 4
  %593 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1237 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %593, i32 0, i32 22
  %aptr1238 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1237, i32 0, i32 2
  %594 = load i8*, i8** %aptr1238, align 8
  %595 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1239 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %595, i32 0, i32 22
  %arena1240 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1239, i32 0, i32 0
  %596 = load i8*, i8** %arena1240, align 8
  %sub.ptr.lhs.cast1241 = ptrtoint i8* %594 to i64
  %sub.ptr.rhs.cast1242 = ptrtoint i8* %596 to i64
  %sub.ptr.sub1243 = sub i64 %sub.ptr.lhs.cast1241, %sub.ptr.rhs.cast1242
  %conv1244 = trunc i64 %sub.ptr.sub1243 to i32
  store i32 %conv1244, i32* %offset1236, align 4
  %597 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1245 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %597, i32 0, i32 22
  %arena1246 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1245, i32 0, i32 0
  %598 = load i8*, i8** %arena1246, align 8
  %599 = load i32, i32* %nsz1229, align 4
  %conv1247 = sext i32 %599 to i64
  %mul1248 = mul i64 %conv1247, 1
  %call1249 = call i8* @Perl_safesysrealloc(i8* %598, i64 %mul1248)
  %600 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1250 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %600, i32 0, i32 22
  %arena1251 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1250, i32 0, i32 0
  store i8* %call1249, i8** %arena1251, align 8
  %601 = load i32, i32* %nsz1229, align 4
  %conv1252 = sext i32 %601 to i64
  %602 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1253 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %602, i32 0, i32 22
  %asiz1254 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1253, i32 0, i32 1
  store i64 %conv1252, i64* %asiz1254, align 8
  %603 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1255 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %603, i32 0, i32 22
  %arena1256 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1255, i32 0, i32 0
  %604 = load i8*, i8** %arena1256, align 8
  %605 = load i32, i32* %offset1236, align 4
  %idx.ext1257 = sext i32 %605 to i64
  %add.ptr1258 = getelementptr inbounds i8, i8* %604, i64 %idx.ext1257
  %606 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1259 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %606, i32 0, i32 22
  %aptr1260 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1259, i32 0, i32 2
  store i8* %add.ptr1258, i8** %aptr1260, align 8
  %607 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1261 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %607, i32 0, i32 22
  %arena1262 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1261, i32 0, i32 0
  %608 = load i8*, i8** %arena1262, align 8
  %609 = load i32, i32* %nsz1229, align 4
  %idx.ext1263 = sext i32 %609 to i64
  %add.ptr1264 = getelementptr inbounds i8, i8* %608, i64 %idx.ext1263
  %610 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1265 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %610, i32 0, i32 22
  %aend1266 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1265, i32 0, i32 3
  store i8* %add.ptr1264, i8** %aend1266, align 8
  br label %do.end1267

do.end1267:                                       ; preds = %do.body1228
  br label %if.end1268

if.end1268:                                       ; preds = %do.end1267, %do.body1219
  br label %do.end1269

do.end1269:                                       ; preds = %if.end1268
  %611 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1270 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %611, i32 0, i32 22
  %aptr1271 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1270, i32 0, i32 2
  %612 = load i8*, i8** %aptr1271, align 8
  %613 = ptrtoint i8* %612 to i64
  %614 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1272 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %614, i32 0, i32 22
  %aptr1273 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1272, i32 0, i32 2
  %615 = load i8*, i8** %aptr1273, align 8
  %616 = ptrtoint i8* %615 to i64
  %and1274 = and i64 %616, -4
  %cmp1275 = icmp eq i64 %613, %and1274
  br i1 %cmp1275, label %if.then1277, label %if.else1280

if.then1277:                                      ; preds = %do.end1269
  %617 = load i32, i32* %y1213, align 4
  %618 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1278 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %618, i32 0, i32 22
  %aptr1279 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1278, i32 0, i32 2
  %619 = load i8*, i8** %aptr1279, align 8
  %620 = bitcast i8* %619 to i32*
  store i32 %617, i32* %620, align 4
  br label %if.end1283

if.else1280:                                      ; preds = %do.end1269
  %621 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1281 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %621, i32 0, i32 22
  %aptr1282 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1281, i32 0, i32 2
  %622 = load i8*, i8** %aptr1282, align 8
  %623 = bitcast i32* %y1213 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %622, i8* align 4 %623, i64 4, i1 false)
  br label %if.end1283

if.end1283:                                       ; preds = %if.else1280, %if.then1277
  %624 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1284 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %624, i32 0, i32 22
  %aptr1285 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1284, i32 0, i32 2
  %625 = load i8*, i8** %aptr1285, align 8
  %add.ptr1286 = getelementptr inbounds i8, i8* %625, i64 4
  store i8* %add.ptr1286, i8** %aptr1285, align 8
  br label %do.end1287

do.end1287:                                       ; preds = %if.end1283
  br label %if.end1295

if.else1288:                                      ; preds = %if.then1212
  %626 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1289 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %626, i32 0, i32 24
  %627 = load %struct._PerlIO**, %struct._PerlIO*** %fio1289, align 8
  %628 = bitcast i32* %y1213 to i8*
  %call1290 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %627, i8* %628, i64 4)
  %cmp1291 = icmp ne i64 %call1290, 4
  br i1 %cmp1291, label %if.then1293, label %if.end1294

if.then1293:                                      ; preds = %if.else1288
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1294:                                       ; preds = %if.else1288
  br label %if.end1295

if.end1295:                                       ; preds = %if.end1294, %do.end1287
  br label %if.end1378

if.else1296:                                      ; preds = %do.body1209
  %629 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1297 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %629, i32 0, i32 24
  %630 = load %struct._PerlIO**, %struct._PerlIO*** %fio1297, align 8
  %tobool1298 = icmp ne %struct._PerlIO** %630, null
  br i1 %tobool1298, label %if.else1370, label %if.then1299

if.then1299:                                      ; preds = %if.else1296
  br label %do.body1300

do.body1300:                                      ; preds = %if.then1299
  br label %do.body1301

do.body1301:                                      ; preds = %do.body1300
  %631 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1302 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %631, i32 0, i32 22
  %aptr1303 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1302, i32 0, i32 2
  %632 = load i8*, i8** %aptr1303, align 8
  %add.ptr1304 = getelementptr inbounds i8, i8* %632, i64 4
  %633 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1305 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %633, i32 0, i32 22
  %aend1306 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1305, i32 0, i32 3
  %634 = load i8*, i8** %aend1306, align 8
  %cmp1307 = icmp ugt i8* %add.ptr1304, %634
  br i1 %cmp1307, label %if.then1309, label %if.end1350

if.then1309:                                      ; preds = %do.body1301
  br label %do.body1310

do.body1310:                                      ; preds = %if.then1309
  %635 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1312 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %635, i32 0, i32 22
  %asiz1313 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1312, i32 0, i32 1
  %636 = load i64, i64* %asiz1313, align 8
  %add1314 = add i64 4, %636
  %add1315 = add i64 %add1314, 8191
  %and1316 = and i64 %add1315, -8192
  %conv1317 = trunc i64 %and1316 to i32
  store i32 %conv1317, i32* %nsz1311, align 4
  %637 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1319 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %637, i32 0, i32 22
  %aptr1320 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1319, i32 0, i32 2
  %638 = load i8*, i8** %aptr1320, align 8
  %639 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1321 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %639, i32 0, i32 22
  %arena1322 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1321, i32 0, i32 0
  %640 = load i8*, i8** %arena1322, align 8
  %sub.ptr.lhs.cast1323 = ptrtoint i8* %638 to i64
  %sub.ptr.rhs.cast1324 = ptrtoint i8* %640 to i64
  %sub.ptr.sub1325 = sub i64 %sub.ptr.lhs.cast1323, %sub.ptr.rhs.cast1324
  %conv1326 = trunc i64 %sub.ptr.sub1325 to i32
  store i32 %conv1326, i32* %offset1318, align 4
  %641 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1327 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %641, i32 0, i32 22
  %arena1328 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1327, i32 0, i32 0
  %642 = load i8*, i8** %arena1328, align 8
  %643 = load i32, i32* %nsz1311, align 4
  %conv1329 = sext i32 %643 to i64
  %mul1330 = mul i64 %conv1329, 1
  %call1331 = call i8* @Perl_safesysrealloc(i8* %642, i64 %mul1330)
  %644 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1332 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %644, i32 0, i32 22
  %arena1333 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1332, i32 0, i32 0
  store i8* %call1331, i8** %arena1333, align 8
  %645 = load i32, i32* %nsz1311, align 4
  %conv1334 = sext i32 %645 to i64
  %646 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1335 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %646, i32 0, i32 22
  %asiz1336 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1335, i32 0, i32 1
  store i64 %conv1334, i64* %asiz1336, align 8
  %647 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1337 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %647, i32 0, i32 22
  %arena1338 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1337, i32 0, i32 0
  %648 = load i8*, i8** %arena1338, align 8
  %649 = load i32, i32* %offset1318, align 4
  %idx.ext1339 = sext i32 %649 to i64
  %add.ptr1340 = getelementptr inbounds i8, i8* %648, i64 %idx.ext1339
  %650 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1341 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %650, i32 0, i32 22
  %aptr1342 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1341, i32 0, i32 2
  store i8* %add.ptr1340, i8** %aptr1342, align 8
  %651 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1343 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %651, i32 0, i32 22
  %arena1344 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1343, i32 0, i32 0
  %652 = load i8*, i8** %arena1344, align 8
  %653 = load i32, i32* %nsz1311, align 4
  %idx.ext1345 = sext i32 %653 to i64
  %add.ptr1346 = getelementptr inbounds i8, i8* %652, i64 %idx.ext1345
  %654 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1347 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %654, i32 0, i32 22
  %aend1348 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1347, i32 0, i32 3
  store i8* %add.ptr1346, i8** %aend1348, align 8
  br label %do.end1349

do.end1349:                                       ; preds = %do.body1310
  br label %if.end1350

if.end1350:                                       ; preds = %do.end1349, %do.body1301
  br label %do.end1351

do.end1351:                                       ; preds = %if.end1350
  %655 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1352 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %655, i32 0, i32 22
  %aptr1353 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1352, i32 0, i32 2
  %656 = load i8*, i8** %aptr1353, align 8
  %657 = ptrtoint i8* %656 to i64
  %658 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1354 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %658, i32 0, i32 22
  %aptr1355 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1354, i32 0, i32 2
  %659 = load i8*, i8** %aptr1355, align 8
  %660 = ptrtoint i8* %659 to i64
  %and1356 = and i64 %660, -4
  %cmp1357 = icmp eq i64 %657, %and1356
  br i1 %cmp1357, label %if.then1359, label %if.else1362

if.then1359:                                      ; preds = %do.end1351
  %661 = load i32, i32* %len, align 4
  %662 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1360 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %662, i32 0, i32 22
  %aptr1361 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1360, i32 0, i32 2
  %663 = load i8*, i8** %aptr1361, align 8
  %664 = bitcast i8* %663 to i32*
  store i32 %661, i32* %664, align 4
  br label %if.end1365

if.else1362:                                      ; preds = %do.end1351
  %665 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1363 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %665, i32 0, i32 22
  %aptr1364 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1363, i32 0, i32 2
  %666 = load i8*, i8** %aptr1364, align 8
  %667 = bitcast i32* %len to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %666, i8* align 4 %667, i64 4, i1 false)
  br label %if.end1365

if.end1365:                                       ; preds = %if.else1362, %if.then1359
  %668 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1366 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %668, i32 0, i32 22
  %aptr1367 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1366, i32 0, i32 2
  %669 = load i8*, i8** %aptr1367, align 8
  %add.ptr1368 = getelementptr inbounds i8, i8* %669, i64 4
  store i8* %add.ptr1368, i8** %aptr1367, align 8
  br label %do.end1369

do.end1369:                                       ; preds = %if.end1365
  br label %if.end1377

if.else1370:                                      ; preds = %if.else1296
  %670 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1371 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %670, i32 0, i32 24
  %671 = load %struct._PerlIO**, %struct._PerlIO*** %fio1371, align 8
  %672 = bitcast i32* %len to i8*
  %call1372 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %671, i8* %672, i64 4)
  %cmp1373 = icmp ne i64 %call1372, 4
  br i1 %cmp1373, label %if.then1375, label %if.end1376

if.then1375:                                      ; preds = %if.else1370
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1376:                                       ; preds = %if.else1370
  br label %if.end1377

if.end1377:                                       ; preds = %if.end1376, %do.end1369
  br label %if.end1378

if.end1378:                                       ; preds = %if.end1377, %if.end1295
  br label %do.end1379

do.end1379:                                       ; preds = %if.end1378
  br label %do.body1380

do.body1380:                                      ; preds = %do.end1379
  %673 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1381 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %673, i32 0, i32 24
  %674 = load %struct._PerlIO**, %struct._PerlIO*** %fio1381, align 8
  %tobool1382 = icmp ne %struct._PerlIO** %674, null
  br i1 %tobool1382, label %if.else1457, label %if.then1383

if.then1383:                                      ; preds = %do.body1380
  br label %do.body1384

do.body1384:                                      ; preds = %if.then1383
  br label %do.body1385

do.body1385:                                      ; preds = %do.body1384
  %675 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1386 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %675, i32 0, i32 22
  %aptr1387 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1386, i32 0, i32 2
  %676 = load i8*, i8** %aptr1387, align 8
  %677 = load i32, i32* %len, align 4
  %idx.ext1388 = sext i32 %677 to i64
  %add.ptr1389 = getelementptr inbounds i8, i8* %676, i64 %idx.ext1388
  %678 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1390 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %678, i32 0, i32 22
  %aend1391 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1390, i32 0, i32 3
  %679 = load i8*, i8** %aend1391, align 8
  %cmp1392 = icmp ugt i8* %add.ptr1389, %679
  br i1 %cmp1392, label %if.then1394, label %if.end1436

if.then1394:                                      ; preds = %do.body1385
  br label %do.body1395

do.body1395:                                      ; preds = %if.then1394
  %680 = load i32, i32* %len, align 4
  %conv1397 = sext i32 %680 to i64
  %681 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1398 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %681, i32 0, i32 22
  %asiz1399 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1398, i32 0, i32 1
  %682 = load i64, i64* %asiz1399, align 8
  %add1400 = add i64 %conv1397, %682
  %add1401 = add i64 %add1400, 8191
  %and1402 = and i64 %add1401, -8192
  %conv1403 = trunc i64 %and1402 to i32
  store i32 %conv1403, i32* %nsz1396, align 4
  %683 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1405 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %683, i32 0, i32 22
  %aptr1406 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1405, i32 0, i32 2
  %684 = load i8*, i8** %aptr1406, align 8
  %685 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1407 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %685, i32 0, i32 22
  %arena1408 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1407, i32 0, i32 0
  %686 = load i8*, i8** %arena1408, align 8
  %sub.ptr.lhs.cast1409 = ptrtoint i8* %684 to i64
  %sub.ptr.rhs.cast1410 = ptrtoint i8* %686 to i64
  %sub.ptr.sub1411 = sub i64 %sub.ptr.lhs.cast1409, %sub.ptr.rhs.cast1410
  %conv1412 = trunc i64 %sub.ptr.sub1411 to i32
  store i32 %conv1412, i32* %offset1404, align 4
  %687 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1413 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %687, i32 0, i32 22
  %arena1414 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1413, i32 0, i32 0
  %688 = load i8*, i8** %arena1414, align 8
  %689 = load i32, i32* %nsz1396, align 4
  %conv1415 = sext i32 %689 to i64
  %mul1416 = mul i64 %conv1415, 1
  %call1417 = call i8* @Perl_safesysrealloc(i8* %688, i64 %mul1416)
  %690 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1418 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %690, i32 0, i32 22
  %arena1419 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1418, i32 0, i32 0
  store i8* %call1417, i8** %arena1419, align 8
  %691 = load i32, i32* %nsz1396, align 4
  %conv1420 = sext i32 %691 to i64
  %692 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1421 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %692, i32 0, i32 22
  %asiz1422 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1421, i32 0, i32 1
  store i64 %conv1420, i64* %asiz1422, align 8
  %693 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1423 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %693, i32 0, i32 22
  %arena1424 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1423, i32 0, i32 0
  %694 = load i8*, i8** %arena1424, align 8
  %695 = load i32, i32* %offset1404, align 4
  %idx.ext1425 = sext i32 %695 to i64
  %add.ptr1426 = getelementptr inbounds i8, i8* %694, i64 %idx.ext1425
  %696 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1427 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %696, i32 0, i32 22
  %aptr1428 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1427, i32 0, i32 2
  store i8* %add.ptr1426, i8** %aptr1428, align 8
  %697 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1429 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %697, i32 0, i32 22
  %arena1430 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1429, i32 0, i32 0
  %698 = load i8*, i8** %arena1430, align 8
  %699 = load i32, i32* %nsz1396, align 4
  %idx.ext1431 = sext i32 %699 to i64
  %add.ptr1432 = getelementptr inbounds i8, i8* %698, i64 %idx.ext1431
  %700 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1433 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %700, i32 0, i32 22
  %aend1434 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1433, i32 0, i32 3
  store i8* %add.ptr1432, i8** %aend1434, align 8
  br label %do.end1435

do.end1435:                                       ; preds = %do.body1395
  br label %if.end1436

if.end1436:                                       ; preds = %do.end1435, %do.body1385
  br label %do.end1437

do.end1437:                                       ; preds = %if.end1436
  %701 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1438 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %701, i32 0, i32 22
  %aptr1439 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1438, i32 0, i32 2
  %702 = load i8*, i8** %aptr1439, align 8
  %703 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_flags1440 = getelementptr inbounds %struct.sv, %struct.sv* %703, i32 0, i32 2
  %704 = load i32, i32* %sv_flags1440, align 4
  %and1441 = and i32 %704, 2098176
  %cmp1442 = icmp eq i32 %and1441, 1024
  br i1 %cmp1442, label %cond.true1444, label %cond.false1447

cond.true1444:                                    ; preds = %do.end1437
  %705 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_u1445 = getelementptr inbounds %struct.sv, %struct.sv* %705, i32 0, i32 3
  %svu_pv1446 = bitcast %union.anon* %sv_u1445 to i8**
  %706 = load i8*, i8** %svu_pv1446, align 8
  br label %cond.end1449

cond.false1447:                                   ; preds = %do.end1437
  %707 = load %struct.sv*, %struct.sv** %text, align 8
  %call1448 = call i8* @Perl_sv_2pv_flags(%struct.sv* %707, i64* null, i32 2)
  br label %cond.end1449

cond.end1449:                                     ; preds = %cond.false1447, %cond.true1444
  %cond1450 = phi i8* [ %706, %cond.true1444 ], [ %call1448, %cond.false1447 ]
  %708 = load i32, i32* %len, align 4
  %conv1451 = sext i32 %708 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %702, i8* align 1 %cond1450, i64 %conv1451, i1 false)
  %709 = load i32, i32* %len, align 4
  %710 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1452 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %710, i32 0, i32 22
  %aptr1453 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1452, i32 0, i32 2
  %711 = load i8*, i8** %aptr1453, align 8
  %idx.ext1454 = sext i32 %709 to i64
  %add.ptr1455 = getelementptr inbounds i8, i8* %711, i64 %idx.ext1454
  store i8* %add.ptr1455, i8** %aptr1453, align 8
  br label %do.end1456

do.end1456:                                       ; preds = %cond.end1449
  br label %if.end1477

if.else1457:                                      ; preds = %do.body1380
  %712 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1458 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %712, i32 0, i32 24
  %713 = load %struct._PerlIO**, %struct._PerlIO*** %fio1458, align 8
  %714 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_flags1459 = getelementptr inbounds %struct.sv, %struct.sv* %714, i32 0, i32 2
  %715 = load i32, i32* %sv_flags1459, align 4
  %and1460 = and i32 %715, 2098176
  %cmp1461 = icmp eq i32 %and1460, 1024
  br i1 %cmp1461, label %cond.true1463, label %cond.false1466

cond.true1463:                                    ; preds = %if.else1457
  %716 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_u1464 = getelementptr inbounds %struct.sv, %struct.sv* %716, i32 0, i32 3
  %svu_pv1465 = bitcast %union.anon* %sv_u1464 to i8**
  %717 = load i8*, i8** %svu_pv1465, align 8
  br label %cond.end1468

cond.false1466:                                   ; preds = %if.else1457
  %718 = load %struct.sv*, %struct.sv** %text, align 8
  %call1467 = call i8* @Perl_sv_2pv_flags(%struct.sv* %718, i64* null, i32 2)
  br label %cond.end1468

cond.end1468:                                     ; preds = %cond.false1466, %cond.true1463
  %cond1469 = phi i8* [ %717, %cond.true1463 ], [ %call1467, %cond.false1466 ]
  %719 = load i32, i32* %len, align 4
  %conv1470 = sext i32 %719 to i64
  %call1471 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %713, i8* %cond1469, i64 %conv1470)
  %720 = load i32, i32* %len, align 4
  %conv1472 = sext i32 %720 to i64
  %cmp1473 = icmp ne i64 %call1471, %conv1472
  br i1 %cmp1473, label %if.then1475, label %if.end1476

if.then1475:                                      ; preds = %cond.end1468
  store i32 -1, i32* %retval, align 4
  br label %return

if.end1476:                                       ; preds = %cond.end1468
  br label %if.end1477

if.end1477:                                       ; preds = %if.end1476, %do.end1456
  br label %do.end1478

do.end1478:                                       ; preds = %if.end1477
  br label %if.end1479

if.end1479:                                       ; preds = %do.end1478, %if.end1137
  br label %do.end1480

do.end1480:                                       ; preds = %if.end1479
  br label %if.end1481

if.end1481:                                       ; preds = %do.end1480, %do.end887
  %721 = load i64, i64* @PL_tmps_ix, align 8
  %722 = load i64, i64* @PL_tmps_floor, align 8
  %cmp1482 = icmp sgt i64 %721, %722
  br i1 %cmp1482, label %if.then1484, label %if.end1485

if.then1484:                                      ; preds = %if.end1481
  call void @Perl_free_tmps()
  br label %if.end1485

if.end1485:                                       ; preds = %if.then1484, %if.end1481
  call void @Perl_pop_scope()
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end1485, %if.then1475, %if.then1375, %if.then1293, %if.then1205, %if.then1133, %if.then1032, %if.then961, %if.then882, %if.then782, %if.then700, %if.then614, %if.then542, %if.then441, %if.then370, %if.then291, %if.then
  %723 = load i32, i32* %retval, align 4
  ret i32 %723
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @store_other(%struct.stcxt* %cxt, %struct.sv* %sv) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %len = alloca i32, align 4
  %buf = alloca [80 x i8], align 16
  %clen = alloca i8, align 1
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %nsz184 = alloca i32, align 4
  %offset191 = alloca i32, align 4
  %nsz256 = alloca i32, align 4
  %offset264 = alloca i32, align 4
  %nsz338 = alloca i32, align 4
  %offset345 = alloca i32, align 4
  %y = alloca i32, align 4
  %nsz409 = alloca i32, align 4
  %offset416 = alloca i32, align 4
  %nsz491 = alloca i32, align 4
  %offset498 = alloca i32, align 4
  %nsz576 = alloca i32, align 4
  %offset584 = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %forgive_me = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 14
  %1 = load i32, i32* %forgive_me, align 8
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %forgive_me1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 14
  %3 = load i32, i32* %forgive_me1, align 8
  %cmp2 = icmp slt i32 %3, 0
  br i1 %cmp2, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %tobool = icmp ne %struct.sv* %call, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  br i1 true, label %land.rhs, label %land.end97

cond.false:                                       ; preds = %land.lhs.true
  br i1 false, label %land.rhs, label %land.end97

land.rhs:                                         ; preds = %cond.false, %cond.true
  %call3 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %call3, i32 0, i32 2
  %4 = load i32, i32* %sv_flags, align 4
  %and = and i32 %4, 2097152
  %tobool4 = icmp ne i32 %and, 0
  br i1 %tobool4, label %cond.true5, label %cond.false6

cond.true5:                                       ; preds = %land.rhs
  br i1 true, label %cond.true7, label %cond.false10

cond.false6:                                      ; preds = %land.rhs
  br i1 false, label %cond.true7, label %cond.false10

cond.true7:                                       ; preds = %cond.false6, %cond.true5
  %call8 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %call9 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %call8, i32 2)
  %conv = zext i1 %call9 to i32
  br label %cond.end94

cond.false10:                                     ; preds = %cond.false6, %cond.true5
  %call11 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_flags12 = getelementptr inbounds %struct.sv, %struct.sv* %call11, i32 0, i32 2
  %5 = load i32, i32* %sv_flags12, align 4
  %and13 = and i32 %5, 65280
  %tobool14 = icmp ne i32 %and13, 0
  br i1 %tobool14, label %cond.false28, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %cond.false10
  %call16 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_flags17 = getelementptr inbounds %struct.sv, %struct.sv* %call16, i32 0, i32 2
  %6 = load i32, i32* %sv_flags17, align 4
  %and18 = and i32 %6, 255
  %cmp19 = icmp eq i32 %and18, 8
  br i1 %cmp19, label %cond.false28, label %lor.lhs.false21

lor.lhs.false21:                                  ; preds = %lor.lhs.false15
  %call22 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_flags23 = getelementptr inbounds %struct.sv, %struct.sv* %call22, i32 0, i32 2
  %7 = load i32, i32* %sv_flags23, align 4
  %and24 = and i32 %7, 16826623
  %cmp25 = icmp eq i32 %and24, 16777226
  br i1 %cmp25, label %cond.false28, label %cond.true27

cond.true27:                                      ; preds = %lor.lhs.false21
  br label %cond.end92

cond.false28:                                     ; preds = %lor.lhs.false21, %lor.lhs.false15, %cond.false10
  %call29 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_flags30 = getelementptr inbounds %struct.sv, %struct.sv* %call29, i32 0, i32 2
  %8 = load i32, i32* %sv_flags30, align 4
  %and31 = and i32 %8, 1024
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %cond.true33, label %cond.false51

cond.true33:                                      ; preds = %cond.false28
  %call34 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %call34, i32 0, i32 0
  %9 = load i8*, i8** %sv_any, align 8
  %10 = bitcast i8* %9 to %struct.xpv*
  %tobool35 = icmp ne %struct.xpv* %10, null
  br i1 %tobool35, label %land.rhs36, label %land.end50

land.rhs36:                                       ; preds = %cond.true33
  %call37 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_any38 = getelementptr inbounds %struct.sv, %struct.sv* %call37, i32 0, i32 0
  %11 = load i8*, i8** %sv_any38, align 8
  %12 = bitcast i8* %11 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %12, i32 0, i32 2
  %13 = load i64, i64* %xpv_cur, align 8
  %cmp39 = icmp ugt i64 %13, 1
  br i1 %cmp39, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs36
  %call41 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_any42 = getelementptr inbounds %struct.sv, %struct.sv* %call41, i32 0, i32 0
  %14 = load i8*, i8** %sv_any42, align 8
  %15 = bitcast i8* %14 to %struct.xpv*
  %xpv_cur43 = getelementptr inbounds %struct.xpv, %struct.xpv* %15, i32 0, i32 2
  %16 = load i64, i64* %xpv_cur43, align 8
  %tobool44 = icmp ne i64 %16, 0
  br i1 %tobool44, label %land.rhs45, label %land.end

land.rhs45:                                       ; preds = %lor.rhs
  %call46 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %call46, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %17 = load i8*, i8** %svu_pv, align 8
  %18 = load i8, i8* %17, align 1
  %conv47 = sext i8 %18 to i32
  %cmp48 = icmp ne i32 %conv47, 48
  br label %land.end

land.end:                                         ; preds = %land.rhs45, %lor.rhs
  %19 = phi i1 [ false, %lor.rhs ], [ %cmp48, %land.rhs45 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.rhs36
  %20 = phi i1 [ true, %land.rhs36 ], [ %19, %land.end ]
  br label %land.end50

land.end50:                                       ; preds = %lor.end, %cond.true33
  %21 = phi i1 [ false, %cond.true33 ], [ %20, %lor.end ]
  %land.ext = zext i1 %21 to i32
  br label %cond.end90

cond.false51:                                     ; preds = %cond.false28
  %call52 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_flags53 = getelementptr inbounds %struct.sv, %struct.sv* %call52, i32 0, i32 2
  %22 = load i32, i32* %sv_flags53, align 4
  %and54 = and i32 %22, 768
  %tobool55 = icmp ne i32 %and54, 0
  br i1 %tobool55, label %cond.true56, label %cond.false86

cond.true56:                                      ; preds = %cond.false51
  %call57 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_flags58 = getelementptr inbounds %struct.sv, %struct.sv* %call57, i32 0, i32 2
  %23 = load i32, i32* %sv_flags58, align 4
  %and59 = and i32 %23, 256
  %tobool60 = icmp ne i32 %and59, 0
  br i1 %tobool60, label %land.lhs.true61, label %lor.rhs66

land.lhs.true61:                                  ; preds = %cond.true56
  %call62 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_any63 = getelementptr inbounds %struct.sv, %struct.sv* %call62, i32 0, i32 0
  %24 = load i8*, i8** %sv_any63, align 8
  %25 = bitcast i8* %24 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %25, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %26 = load i64, i64* %xivu_iv, align 8
  %cmp64 = icmp ne i64 %26, 0
  br i1 %cmp64, label %lor.end85, label %lor.rhs66

lor.rhs66:                                        ; preds = %land.lhs.true61, %cond.true56
  %call67 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_flags68 = getelementptr inbounds %struct.sv, %struct.sv* %call67, i32 0, i32 2
  %27 = load i32, i32* %sv_flags68, align 4
  %and69 = and i32 %27, 512
  %tobool70 = icmp ne i32 %and69, 0
  br i1 %tobool70, label %land.rhs71, label %land.end83

land.rhs71:                                       ; preds = %lor.rhs66
  %call72 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_any73 = getelementptr inbounds %struct.sv, %struct.sv* %call72, i32 0, i32 0
  %28 = load i8*, i8** %sv_any73, align 8
  %29 = bitcast i8* %28 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %29, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %30 = load double, double* %xnv_nv, align 8
  %cmp74 = fcmp uno double %30, %30
  br i1 %cmp74, label %lor.end82, label %lor.rhs75

lor.rhs75:                                        ; preds = %land.rhs71
  %call76 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_any77 = getelementptr inbounds %struct.sv, %struct.sv* %call76, i32 0, i32 0
  %31 = load i8*, i8** %sv_any77, align 8
  %32 = bitcast i8* %31 to %struct.xpvnv*
  %xnv_u78 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %32, i32 0, i32 5
  %xnv_nv79 = bitcast %union._xnvu* %xnv_u78 to double*
  %33 = load double, double* %xnv_nv79, align 8
  %cmp80 = fcmp une double %33, 0.000000e+00
  br label %lor.end82

lor.end82:                                        ; preds = %lor.rhs75, %land.rhs71
  %34 = phi i1 [ true, %land.rhs71 ], [ %cmp80, %lor.rhs75 ]
  br label %land.end83

land.end83:                                       ; preds = %lor.end82, %lor.rhs66
  %35 = phi i1 [ false, %lor.rhs66 ], [ %34, %lor.end82 ]
  br label %lor.end85

lor.end85:                                        ; preds = %land.end83, %land.lhs.true61
  %36 = phi i1 [ true, %land.lhs.true61 ], [ %35, %land.end83 ]
  %lor.ext = zext i1 %36 to i32
  br label %cond.end

cond.false86:                                     ; preds = %cond.false51
  %call87 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %call88 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %call87, i32 0)
  %conv89 = zext i1 %call88 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false86, %lor.end85
  %cond = phi i32 [ %lor.ext, %lor.end85 ], [ %conv89, %cond.false86 ]
  br label %cond.end90

cond.end90:                                       ; preds = %cond.end, %land.end50
  %cond91 = phi i32 [ %land.ext, %land.end50 ], [ %cond, %cond.end ]
  br label %cond.end92

cond.end92:                                       ; preds = %cond.end90, %cond.true27
  %cond93 = phi i32 [ 0, %cond.true27 ], [ %cond91, %cond.end90 ]
  br label %cond.end94

cond.end94:                                       ; preds = %cond.end92, %cond.true7
  %cond95 = phi i32 [ %conv, %cond.true7 ], [ %cond93, %cond.end92 ]
  %tobool96 = icmp ne i32 %cond95, 0
  br label %land.end97

land.end97:                                       ; preds = %cond.end94, %cond.false, %cond.true
  %37 = phi i1 [ false, %cond.false ], [ false, %cond.true ], [ %tobool96, %cond.end94 ]
  %38 = zext i1 %37 to i64
  %cond99 = select i1 %37, i32 1, i32 0
  %39 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %forgive_me100 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %39, i32 0, i32 14
  store i32 %cond99, i32* %forgive_me100, align 8
  %tobool101 = icmp ne i32 %cond99, 0
  br i1 %tobool101, label %if.end, label %if.then

if.then:                                          ; preds = %land.end97, %entry
  br label %do.body

do.body:                                          ; preds = %if.then
  %40 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %40, i32 0, i32 19
  store i32 1, i32* %s_dirty, align 8
  %41 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call102 = call i8* @Perl_sv_reftype(%struct.sv* %41, i32 0)
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.50, i64 0, i64 0), i8* %call102)
  br label %do.end

do.end:                                           ; preds = %do.body
  br label %if.end

if.end:                                           ; preds = %do.end, %land.end97, %lor.lhs.false
  %42 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call103 = call i8* @Perl_sv_reftype(%struct.sv* %42, i32 0)
  %43 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %44 = ptrtoint %struct.sv* %43 to i64
  call void (i8*, ...) @Perl_warn(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.51, i64 0, i64 0), i8* %call103, i64 %44)
  %arraydecay = getelementptr inbounds [80 x i8], [80 x i8]* %buf, i64 0, i64 0
  %45 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call104 = call i8* @Perl_sv_reftype(%struct.sv* %45, i32 0)
  %46 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %47 = ptrtoint %struct.sv* %46 to i64
  %call105 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.52, i64 0, i64 0), i8* %call104, i64 %47, i32 0) #6
  %arraydecay106 = getelementptr inbounds [80 x i8], [80 x i8]* %buf, i64 0, i64 0
  %call107 = call i64 @strlen(i8* %arraydecay106) #5
  %conv108 = trunc i64 %call107 to i32
  store i32 %conv108, i32* %len, align 4
  br label %do.body109

do.body109:                                       ; preds = %if.end
  %48 = load i32, i32* %len, align 4
  %cmp110 = icmp sle i32 %48, 255
  br i1 %cmp110, label %if.then112, label %if.else320

if.then112:                                       ; preds = %do.body109
  %49 = load i32, i32* %len, align 4
  %conv113 = trunc i32 %49 to i8
  store i8 %conv113, i8* %clen, align 1
  br label %do.body114

do.body114:                                       ; preds = %if.then112
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %50, i32 0, i32 24
  %51 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool115 = icmp ne %struct._PerlIO** %51, null
  br i1 %tobool115, label %if.else158, label %if.then116

if.then116:                                       ; preds = %do.body114
  br label %do.body117

do.body117:                                       ; preds = %if.then116
  %52 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %52, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %53 = load i8*, i8** %aptr, align 8
  %54 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf118 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %54, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf118, i32 0, i32 3
  %55 = load i8*, i8** %aend, align 8
  %cmp119 = icmp ult i8* %53, %55
  br i1 %cmp119, label %if.then121, label %if.else

if.then121:                                       ; preds = %do.body117
  %56 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf122 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %56, i32 0, i32 22
  %aptr123 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf122, i32 0, i32 2
  %57 = load i8*, i8** %aptr123, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %57, i32 1
  store i8* %incdec.ptr, i8** %aptr123, align 8
  store i8 10, i8* %57, align 1
  br label %if.end156

if.else:                                          ; preds = %do.body117
  br label %do.body124

do.body124:                                       ; preds = %if.else
  %58 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf125 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %58, i32 0, i32 22
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf125, i32 0, i32 1
  %59 = load i64, i64* %asiz, align 8
  %add = add i64 1, %59
  %add126 = add i64 %add, 8191
  %and127 = and i64 %add126, -8192
  %conv128 = trunc i64 %and127 to i32
  store i32 %conv128, i32* %nsz, align 4
  %60 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf129 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %60, i32 0, i32 22
  %aptr130 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf129, i32 0, i32 2
  %61 = load i8*, i8** %aptr130, align 8
  %62 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf131 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %62, i32 0, i32 22
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf131, i32 0, i32 0
  %63 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %61 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %63 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv132 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv132, i32* %offset, align 4
  %64 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf133 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %64, i32 0, i32 22
  %arena134 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf133, i32 0, i32 0
  %65 = load i8*, i8** %arena134, align 8
  %66 = load i32, i32* %nsz, align 4
  %conv135 = sext i32 %66 to i64
  %mul = mul i64 %conv135, 1
  %call136 = call i8* @Perl_safesysrealloc(i8* %65, i64 %mul)
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf137 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %67, i32 0, i32 22
  %arena138 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf137, i32 0, i32 0
  store i8* %call136, i8** %arena138, align 8
  %68 = load i32, i32* %nsz, align 4
  %conv139 = sext i32 %68 to i64
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf140 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 22
  %asiz141 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf140, i32 0, i32 1
  store i64 %conv139, i64* %asiz141, align 8
  %70 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf142 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %70, i32 0, i32 22
  %arena143 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf142, i32 0, i32 0
  %71 = load i8*, i8** %arena143, align 8
  %72 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %72 to i64
  %add.ptr = getelementptr inbounds i8, i8* %71, i64 %idx.ext
  %73 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf144 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %73, i32 0, i32 22
  %aptr145 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf144, i32 0, i32 2
  store i8* %add.ptr, i8** %aptr145, align 8
  %74 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf146 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %74, i32 0, i32 22
  %arena147 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf146, i32 0, i32 0
  %75 = load i8*, i8** %arena147, align 8
  %76 = load i32, i32* %nsz, align 4
  %idx.ext148 = sext i32 %76 to i64
  %add.ptr149 = getelementptr inbounds i8, i8* %75, i64 %idx.ext148
  %77 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf150 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %77, i32 0, i32 22
  %aend151 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf150, i32 0, i32 3
  store i8* %add.ptr149, i8** %aend151, align 8
  br label %do.end152

do.end152:                                        ; preds = %do.body124
  %78 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf153 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %78, i32 0, i32 22
  %aptr154 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf153, i32 0, i32 2
  %79 = load i8*, i8** %aptr154, align 8
  %incdec.ptr155 = getelementptr inbounds i8, i8* %79, i32 1
  store i8* %incdec.ptr155, i8** %aptr154, align 8
  store i8 10, i8* %79, align 1
  br label %if.end156

if.end156:                                        ; preds = %do.end152, %if.then121
  br label %do.end157

do.end157:                                        ; preds = %if.end156
  br label %if.end165

if.else158:                                       ; preds = %do.body114
  %80 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio159 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %80, i32 0, i32 24
  %81 = load %struct._PerlIO**, %struct._PerlIO*** %fio159, align 8
  %call160 = call i32 @PerlIO_putc(%struct._PerlIO** %81, i32 10)
  %cmp161 = icmp eq i32 %call160, -1
  br i1 %cmp161, label %if.then163, label %if.end164

if.then163:                                       ; preds = %if.else158
  store i32 -1, i32* %retval, align 4
  br label %return

if.end164:                                        ; preds = %if.else158
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %do.end157
  br label %do.end166

do.end166:                                        ; preds = %if.end165
  br label %do.body167

do.body167:                                       ; preds = %do.end166
  %82 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio168 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %82, i32 0, i32 24
  %83 = load %struct._PerlIO**, %struct._PerlIO*** %fio168, align 8
  %tobool169 = icmp ne %struct._PerlIO** %83, null
  br i1 %tobool169, label %if.else228, label %if.then170

if.then170:                                       ; preds = %do.body167
  br label %do.body171

do.body171:                                       ; preds = %if.then170
  %84 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf172 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %84, i32 0, i32 22
  %aptr173 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf172, i32 0, i32 2
  %85 = load i8*, i8** %aptr173, align 8
  %86 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf174 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %86, i32 0, i32 22
  %aend175 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf174, i32 0, i32 3
  %87 = load i8*, i8** %aend175, align 8
  %cmp176 = icmp ult i8* %85, %87
  br i1 %cmp176, label %if.then178, label %if.else182

if.then178:                                       ; preds = %do.body171
  %88 = load i8, i8* %clen, align 1
  %89 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf179 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %89, i32 0, i32 22
  %aptr180 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf179, i32 0, i32 2
  %90 = load i8*, i8** %aptr180, align 8
  %incdec.ptr181 = getelementptr inbounds i8, i8* %90, i32 1
  store i8* %incdec.ptr181, i8** %aptr180, align 8
  store i8 %88, i8* %90, align 1
  br label %if.end226

if.else182:                                       ; preds = %do.body171
  br label %do.body183

do.body183:                                       ; preds = %if.else182
  %91 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf185 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %91, i32 0, i32 22
  %asiz186 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf185, i32 0, i32 1
  %92 = load i64, i64* %asiz186, align 8
  %add187 = add i64 1, %92
  %add188 = add i64 %add187, 8191
  %and189 = and i64 %add188, -8192
  %conv190 = trunc i64 %and189 to i32
  store i32 %conv190, i32* %nsz184, align 4
  %93 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf192 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %93, i32 0, i32 22
  %aptr193 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf192, i32 0, i32 2
  %94 = load i8*, i8** %aptr193, align 8
  %95 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf194 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %95, i32 0, i32 22
  %arena195 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf194, i32 0, i32 0
  %96 = load i8*, i8** %arena195, align 8
  %sub.ptr.lhs.cast196 = ptrtoint i8* %94 to i64
  %sub.ptr.rhs.cast197 = ptrtoint i8* %96 to i64
  %sub.ptr.sub198 = sub i64 %sub.ptr.lhs.cast196, %sub.ptr.rhs.cast197
  %conv199 = trunc i64 %sub.ptr.sub198 to i32
  store i32 %conv199, i32* %offset191, align 4
  %97 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf200 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %97, i32 0, i32 22
  %arena201 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf200, i32 0, i32 0
  %98 = load i8*, i8** %arena201, align 8
  %99 = load i32, i32* %nsz184, align 4
  %conv202 = sext i32 %99 to i64
  %mul203 = mul i64 %conv202, 1
  %call204 = call i8* @Perl_safesysrealloc(i8* %98, i64 %mul203)
  %100 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf205 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %100, i32 0, i32 22
  %arena206 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf205, i32 0, i32 0
  store i8* %call204, i8** %arena206, align 8
  %101 = load i32, i32* %nsz184, align 4
  %conv207 = sext i32 %101 to i64
  %102 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf208 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %102, i32 0, i32 22
  %asiz209 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf208, i32 0, i32 1
  store i64 %conv207, i64* %asiz209, align 8
  %103 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf210 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %103, i32 0, i32 22
  %arena211 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf210, i32 0, i32 0
  %104 = load i8*, i8** %arena211, align 8
  %105 = load i32, i32* %offset191, align 4
  %idx.ext212 = sext i32 %105 to i64
  %add.ptr213 = getelementptr inbounds i8, i8* %104, i64 %idx.ext212
  %106 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf214 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %106, i32 0, i32 22
  %aptr215 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf214, i32 0, i32 2
  store i8* %add.ptr213, i8** %aptr215, align 8
  %107 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf216 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %107, i32 0, i32 22
  %arena217 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf216, i32 0, i32 0
  %108 = load i8*, i8** %arena217, align 8
  %109 = load i32, i32* %nsz184, align 4
  %idx.ext218 = sext i32 %109 to i64
  %add.ptr219 = getelementptr inbounds i8, i8* %108, i64 %idx.ext218
  %110 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf220 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %110, i32 0, i32 22
  %aend221 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf220, i32 0, i32 3
  store i8* %add.ptr219, i8** %aend221, align 8
  br label %do.end222

do.end222:                                        ; preds = %do.body183
  %111 = load i8, i8* %clen, align 1
  %112 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf223 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %112, i32 0, i32 22
  %aptr224 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf223, i32 0, i32 2
  %113 = load i8*, i8** %aptr224, align 8
  %incdec.ptr225 = getelementptr inbounds i8, i8* %113, i32 1
  store i8* %incdec.ptr225, i8** %aptr224, align 8
  store i8 %111, i8* %113, align 1
  br label %if.end226

if.end226:                                        ; preds = %do.end222, %if.then178
  br label %do.end227

do.end227:                                        ; preds = %if.end226
  br label %if.end236

if.else228:                                       ; preds = %do.body167
  %114 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio229 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %114, i32 0, i32 24
  %115 = load %struct._PerlIO**, %struct._PerlIO*** %fio229, align 8
  %116 = load i8, i8* %clen, align 1
  %conv230 = zext i8 %116 to i32
  %call231 = call i32 @PerlIO_putc(%struct._PerlIO** %115, i32 %conv230)
  %cmp232 = icmp eq i32 %call231, -1
  br i1 %cmp232, label %if.then234, label %if.end235

if.then234:                                       ; preds = %if.else228
  store i32 -1, i32* %retval, align 4
  br label %return

if.end235:                                        ; preds = %if.else228
  br label %if.end236

if.end236:                                        ; preds = %if.end235, %do.end227
  br label %do.end237

do.end237:                                        ; preds = %if.end236
  %117 = load i32, i32* %len, align 4
  %tobool238 = icmp ne i32 %117, 0
  br i1 %tobool238, label %if.then239, label %if.end319

if.then239:                                       ; preds = %do.end237
  br label %do.body240

do.body240:                                       ; preds = %if.then239
  %118 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio241 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %118, i32 0, i32 24
  %119 = load %struct._PerlIO**, %struct._PerlIO*** %fio241, align 8
  %tobool242 = icmp ne %struct._PerlIO** %119, null
  br i1 %tobool242, label %if.else307, label %if.then243

if.then243:                                       ; preds = %do.body240
  br label %do.body244

do.body244:                                       ; preds = %if.then243
  br label %do.body245

do.body245:                                       ; preds = %do.body244
  %120 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf246 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %120, i32 0, i32 22
  %aptr247 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf246, i32 0, i32 2
  %121 = load i8*, i8** %aptr247, align 8
  %122 = load i32, i32* %len, align 4
  %idx.ext248 = sext i32 %122 to i64
  %add.ptr249 = getelementptr inbounds i8, i8* %121, i64 %idx.ext248
  %123 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf250 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %123, i32 0, i32 22
  %aend251 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf250, i32 0, i32 3
  %124 = load i8*, i8** %aend251, align 8
  %cmp252 = icmp ugt i8* %add.ptr249, %124
  br i1 %cmp252, label %if.then254, label %if.end296

if.then254:                                       ; preds = %do.body245
  br label %do.body255

do.body255:                                       ; preds = %if.then254
  %125 = load i32, i32* %len, align 4
  %conv257 = sext i32 %125 to i64
  %126 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf258 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %126, i32 0, i32 22
  %asiz259 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf258, i32 0, i32 1
  %127 = load i64, i64* %asiz259, align 8
  %add260 = add i64 %conv257, %127
  %add261 = add i64 %add260, 8191
  %and262 = and i64 %add261, -8192
  %conv263 = trunc i64 %and262 to i32
  store i32 %conv263, i32* %nsz256, align 4
  %128 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf265 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %128, i32 0, i32 22
  %aptr266 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf265, i32 0, i32 2
  %129 = load i8*, i8** %aptr266, align 8
  %130 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf267 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %130, i32 0, i32 22
  %arena268 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf267, i32 0, i32 0
  %131 = load i8*, i8** %arena268, align 8
  %sub.ptr.lhs.cast269 = ptrtoint i8* %129 to i64
  %sub.ptr.rhs.cast270 = ptrtoint i8* %131 to i64
  %sub.ptr.sub271 = sub i64 %sub.ptr.lhs.cast269, %sub.ptr.rhs.cast270
  %conv272 = trunc i64 %sub.ptr.sub271 to i32
  store i32 %conv272, i32* %offset264, align 4
  %132 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf273 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %132, i32 0, i32 22
  %arena274 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf273, i32 0, i32 0
  %133 = load i8*, i8** %arena274, align 8
  %134 = load i32, i32* %nsz256, align 4
  %conv275 = sext i32 %134 to i64
  %mul276 = mul i64 %conv275, 1
  %call277 = call i8* @Perl_safesysrealloc(i8* %133, i64 %mul276)
  %135 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf278 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %135, i32 0, i32 22
  %arena279 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf278, i32 0, i32 0
  store i8* %call277, i8** %arena279, align 8
  %136 = load i32, i32* %nsz256, align 4
  %conv280 = sext i32 %136 to i64
  %137 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf281 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %137, i32 0, i32 22
  %asiz282 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf281, i32 0, i32 1
  store i64 %conv280, i64* %asiz282, align 8
  %138 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf283 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %138, i32 0, i32 22
  %arena284 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf283, i32 0, i32 0
  %139 = load i8*, i8** %arena284, align 8
  %140 = load i32, i32* %offset264, align 4
  %idx.ext285 = sext i32 %140 to i64
  %add.ptr286 = getelementptr inbounds i8, i8* %139, i64 %idx.ext285
  %141 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf287 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %141, i32 0, i32 22
  %aptr288 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf287, i32 0, i32 2
  store i8* %add.ptr286, i8** %aptr288, align 8
  %142 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf289 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %142, i32 0, i32 22
  %arena290 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf289, i32 0, i32 0
  %143 = load i8*, i8** %arena290, align 8
  %144 = load i32, i32* %nsz256, align 4
  %idx.ext291 = sext i32 %144 to i64
  %add.ptr292 = getelementptr inbounds i8, i8* %143, i64 %idx.ext291
  %145 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf293 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %145, i32 0, i32 22
  %aend294 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf293, i32 0, i32 3
  store i8* %add.ptr292, i8** %aend294, align 8
  br label %do.end295

do.end295:                                        ; preds = %do.body255
  br label %if.end296

if.end296:                                        ; preds = %do.end295, %do.body245
  br label %do.end297

do.end297:                                        ; preds = %if.end296
  %146 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf298 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %146, i32 0, i32 22
  %aptr299 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf298, i32 0, i32 2
  %147 = load i8*, i8** %aptr299, align 8
  %arraydecay300 = getelementptr inbounds [80 x i8], [80 x i8]* %buf, i64 0, i64 0
  %148 = load i32, i32* %len, align 4
  %conv301 = sext i32 %148 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %147, i8* align 16 %arraydecay300, i64 %conv301, i1 false)
  %149 = load i32, i32* %len, align 4
  %150 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf302 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %150, i32 0, i32 22
  %aptr303 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf302, i32 0, i32 2
  %151 = load i8*, i8** %aptr303, align 8
  %idx.ext304 = sext i32 %149 to i64
  %add.ptr305 = getelementptr inbounds i8, i8* %151, i64 %idx.ext304
  store i8* %add.ptr305, i8** %aptr303, align 8
  br label %do.end306

do.end306:                                        ; preds = %do.end297
  br label %if.end317

if.else307:                                       ; preds = %do.body240
  %152 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio308 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %152, i32 0, i32 24
  %153 = load %struct._PerlIO**, %struct._PerlIO*** %fio308, align 8
  %arraydecay309 = getelementptr inbounds [80 x i8], [80 x i8]* %buf, i64 0, i64 0
  %154 = load i32, i32* %len, align 4
  %conv310 = sext i32 %154 to i64
  %call311 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %153, i8* %arraydecay309, i64 %conv310)
  %155 = load i32, i32* %len, align 4
  %conv312 = sext i32 %155 to i64
  %cmp313 = icmp ne i64 %call311, %conv312
  br i1 %cmp313, label %if.then315, label %if.end316

if.then315:                                       ; preds = %if.else307
  store i32 -1, i32* %retval, align 4
  br label %return

if.end316:                                        ; preds = %if.else307
  br label %if.end317

if.end317:                                        ; preds = %if.end316, %do.end306
  br label %do.end318

do.end318:                                        ; preds = %if.end317
  br label %if.end319

if.end319:                                        ; preds = %do.end318, %do.end237
  br label %if.end639

if.else320:                                       ; preds = %do.body109
  br label %do.body321

do.body321:                                       ; preds = %if.else320
  %156 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio322 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %156, i32 0, i32 24
  %157 = load %struct._PerlIO**, %struct._PerlIO*** %fio322, align 8
  %tobool323 = icmp ne %struct._PerlIO** %157, null
  br i1 %tobool323, label %if.else382, label %if.then324

if.then324:                                       ; preds = %do.body321
  br label %do.body325

do.body325:                                       ; preds = %if.then324
  %158 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf326 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %158, i32 0, i32 22
  %aptr327 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf326, i32 0, i32 2
  %159 = load i8*, i8** %aptr327, align 8
  %160 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf328 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %160, i32 0, i32 22
  %aend329 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf328, i32 0, i32 3
  %161 = load i8*, i8** %aend329, align 8
  %cmp330 = icmp ult i8* %159, %161
  br i1 %cmp330, label %if.then332, label %if.else336

if.then332:                                       ; preds = %do.body325
  %162 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf333 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %162, i32 0, i32 22
  %aptr334 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf333, i32 0, i32 2
  %163 = load i8*, i8** %aptr334, align 8
  %incdec.ptr335 = getelementptr inbounds i8, i8* %163, i32 1
  store i8* %incdec.ptr335, i8** %aptr334, align 8
  store i8 1, i8* %163, align 1
  br label %if.end380

if.else336:                                       ; preds = %do.body325
  br label %do.body337

do.body337:                                       ; preds = %if.else336
  %164 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf339 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %164, i32 0, i32 22
  %asiz340 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf339, i32 0, i32 1
  %165 = load i64, i64* %asiz340, align 8
  %add341 = add i64 1, %165
  %add342 = add i64 %add341, 8191
  %and343 = and i64 %add342, -8192
  %conv344 = trunc i64 %and343 to i32
  store i32 %conv344, i32* %nsz338, align 4
  %166 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf346 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %166, i32 0, i32 22
  %aptr347 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf346, i32 0, i32 2
  %167 = load i8*, i8** %aptr347, align 8
  %168 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf348 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %168, i32 0, i32 22
  %arena349 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf348, i32 0, i32 0
  %169 = load i8*, i8** %arena349, align 8
  %sub.ptr.lhs.cast350 = ptrtoint i8* %167 to i64
  %sub.ptr.rhs.cast351 = ptrtoint i8* %169 to i64
  %sub.ptr.sub352 = sub i64 %sub.ptr.lhs.cast350, %sub.ptr.rhs.cast351
  %conv353 = trunc i64 %sub.ptr.sub352 to i32
  store i32 %conv353, i32* %offset345, align 4
  %170 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf354 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %170, i32 0, i32 22
  %arena355 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf354, i32 0, i32 0
  %171 = load i8*, i8** %arena355, align 8
  %172 = load i32, i32* %nsz338, align 4
  %conv356 = sext i32 %172 to i64
  %mul357 = mul i64 %conv356, 1
  %call358 = call i8* @Perl_safesysrealloc(i8* %171, i64 %mul357)
  %173 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf359 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %173, i32 0, i32 22
  %arena360 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf359, i32 0, i32 0
  store i8* %call358, i8** %arena360, align 8
  %174 = load i32, i32* %nsz338, align 4
  %conv361 = sext i32 %174 to i64
  %175 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf362 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %175, i32 0, i32 22
  %asiz363 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf362, i32 0, i32 1
  store i64 %conv361, i64* %asiz363, align 8
  %176 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf364 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %176, i32 0, i32 22
  %arena365 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf364, i32 0, i32 0
  %177 = load i8*, i8** %arena365, align 8
  %178 = load i32, i32* %offset345, align 4
  %idx.ext366 = sext i32 %178 to i64
  %add.ptr367 = getelementptr inbounds i8, i8* %177, i64 %idx.ext366
  %179 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf368 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %179, i32 0, i32 22
  %aptr369 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf368, i32 0, i32 2
  store i8* %add.ptr367, i8** %aptr369, align 8
  %180 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf370 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %180, i32 0, i32 22
  %arena371 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf370, i32 0, i32 0
  %181 = load i8*, i8** %arena371, align 8
  %182 = load i32, i32* %nsz338, align 4
  %idx.ext372 = sext i32 %182 to i64
  %add.ptr373 = getelementptr inbounds i8, i8* %181, i64 %idx.ext372
  %183 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf374 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %183, i32 0, i32 22
  %aend375 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf374, i32 0, i32 3
  store i8* %add.ptr373, i8** %aend375, align 8
  br label %do.end376

do.end376:                                        ; preds = %do.body337
  %184 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf377 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %184, i32 0, i32 22
  %aptr378 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf377, i32 0, i32 2
  %185 = load i8*, i8** %aptr378, align 8
  %incdec.ptr379 = getelementptr inbounds i8, i8* %185, i32 1
  store i8* %incdec.ptr379, i8** %aptr378, align 8
  store i8 1, i8* %185, align 1
  br label %if.end380

if.end380:                                        ; preds = %do.end376, %if.then332
  br label %do.end381

do.end381:                                        ; preds = %if.end380
  br label %if.end389

if.else382:                                       ; preds = %do.body321
  %186 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio383 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %186, i32 0, i32 24
  %187 = load %struct._PerlIO**, %struct._PerlIO*** %fio383, align 8
  %call384 = call i32 @PerlIO_putc(%struct._PerlIO** %187, i32 1)
  %cmp385 = icmp eq i32 %call384, -1
  br i1 %cmp385, label %if.then387, label %if.end388

if.then387:                                       ; preds = %if.else382
  store i32 -1, i32* %retval, align 4
  br label %return

if.end388:                                        ; preds = %if.else382
  br label %if.end389

if.end389:                                        ; preds = %if.end388, %do.end381
  br label %do.end390

do.end390:                                        ; preds = %if.end389
  br label %do.body391

do.body391:                                       ; preds = %do.end390
  %188 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %188, i32 0, i32 12
  %189 = load i32, i32* %netorder, align 8
  %tobool392 = icmp ne i32 %189, 0
  br i1 %tobool392, label %if.then393, label %if.else476

if.then393:                                       ; preds = %do.body391
  %190 = load i32, i32* %len, align 4
  %call394 = call i32 @my_swap32(i32 %190)
  store i32 %call394, i32* %y, align 4
  %191 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio395 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %191, i32 0, i32 24
  %192 = load %struct._PerlIO**, %struct._PerlIO*** %fio395, align 8
  %tobool396 = icmp ne %struct._PerlIO** %192, null
  br i1 %tobool396, label %if.else468, label %if.then397

if.then397:                                       ; preds = %if.then393
  br label %do.body398

do.body398:                                       ; preds = %if.then397
  br label %do.body399

do.body399:                                       ; preds = %do.body398
  %193 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf400 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %193, i32 0, i32 22
  %aptr401 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf400, i32 0, i32 2
  %194 = load i8*, i8** %aptr401, align 8
  %add.ptr402 = getelementptr inbounds i8, i8* %194, i64 4
  %195 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf403 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %195, i32 0, i32 22
  %aend404 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf403, i32 0, i32 3
  %196 = load i8*, i8** %aend404, align 8
  %cmp405 = icmp ugt i8* %add.ptr402, %196
  br i1 %cmp405, label %if.then407, label %if.end448

if.then407:                                       ; preds = %do.body399
  br label %do.body408

do.body408:                                       ; preds = %if.then407
  %197 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf410 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %197, i32 0, i32 22
  %asiz411 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf410, i32 0, i32 1
  %198 = load i64, i64* %asiz411, align 8
  %add412 = add i64 4, %198
  %add413 = add i64 %add412, 8191
  %and414 = and i64 %add413, -8192
  %conv415 = trunc i64 %and414 to i32
  store i32 %conv415, i32* %nsz409, align 4
  %199 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf417 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %199, i32 0, i32 22
  %aptr418 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf417, i32 0, i32 2
  %200 = load i8*, i8** %aptr418, align 8
  %201 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf419 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %201, i32 0, i32 22
  %arena420 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf419, i32 0, i32 0
  %202 = load i8*, i8** %arena420, align 8
  %sub.ptr.lhs.cast421 = ptrtoint i8* %200 to i64
  %sub.ptr.rhs.cast422 = ptrtoint i8* %202 to i64
  %sub.ptr.sub423 = sub i64 %sub.ptr.lhs.cast421, %sub.ptr.rhs.cast422
  %conv424 = trunc i64 %sub.ptr.sub423 to i32
  store i32 %conv424, i32* %offset416, align 4
  %203 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf425 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %203, i32 0, i32 22
  %arena426 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf425, i32 0, i32 0
  %204 = load i8*, i8** %arena426, align 8
  %205 = load i32, i32* %nsz409, align 4
  %conv427 = sext i32 %205 to i64
  %mul428 = mul i64 %conv427, 1
  %call429 = call i8* @Perl_safesysrealloc(i8* %204, i64 %mul428)
  %206 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf430 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %206, i32 0, i32 22
  %arena431 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf430, i32 0, i32 0
  store i8* %call429, i8** %arena431, align 8
  %207 = load i32, i32* %nsz409, align 4
  %conv432 = sext i32 %207 to i64
  %208 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf433 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %208, i32 0, i32 22
  %asiz434 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf433, i32 0, i32 1
  store i64 %conv432, i64* %asiz434, align 8
  %209 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf435 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %209, i32 0, i32 22
  %arena436 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf435, i32 0, i32 0
  %210 = load i8*, i8** %arena436, align 8
  %211 = load i32, i32* %offset416, align 4
  %idx.ext437 = sext i32 %211 to i64
  %add.ptr438 = getelementptr inbounds i8, i8* %210, i64 %idx.ext437
  %212 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf439 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %212, i32 0, i32 22
  %aptr440 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf439, i32 0, i32 2
  store i8* %add.ptr438, i8** %aptr440, align 8
  %213 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf441 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %213, i32 0, i32 22
  %arena442 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf441, i32 0, i32 0
  %214 = load i8*, i8** %arena442, align 8
  %215 = load i32, i32* %nsz409, align 4
  %idx.ext443 = sext i32 %215 to i64
  %add.ptr444 = getelementptr inbounds i8, i8* %214, i64 %idx.ext443
  %216 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf445 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %216, i32 0, i32 22
  %aend446 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf445, i32 0, i32 3
  store i8* %add.ptr444, i8** %aend446, align 8
  br label %do.end447

do.end447:                                        ; preds = %do.body408
  br label %if.end448

if.end448:                                        ; preds = %do.end447, %do.body399
  br label %do.end449

do.end449:                                        ; preds = %if.end448
  %217 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf450 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %217, i32 0, i32 22
  %aptr451 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf450, i32 0, i32 2
  %218 = load i8*, i8** %aptr451, align 8
  %219 = ptrtoint i8* %218 to i64
  %220 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf452 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %220, i32 0, i32 22
  %aptr453 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf452, i32 0, i32 2
  %221 = load i8*, i8** %aptr453, align 8
  %222 = ptrtoint i8* %221 to i64
  %and454 = and i64 %222, -4
  %cmp455 = icmp eq i64 %219, %and454
  br i1 %cmp455, label %if.then457, label %if.else460

if.then457:                                       ; preds = %do.end449
  %223 = load i32, i32* %y, align 4
  %224 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf458 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %224, i32 0, i32 22
  %aptr459 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf458, i32 0, i32 2
  %225 = load i8*, i8** %aptr459, align 8
  %226 = bitcast i8* %225 to i32*
  store i32 %223, i32* %226, align 4
  br label %if.end463

if.else460:                                       ; preds = %do.end449
  %227 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf461 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %227, i32 0, i32 22
  %aptr462 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf461, i32 0, i32 2
  %228 = load i8*, i8** %aptr462, align 8
  %229 = bitcast i32* %y to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %228, i8* align 4 %229, i64 4, i1 false)
  br label %if.end463

if.end463:                                        ; preds = %if.else460, %if.then457
  %230 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf464 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %230, i32 0, i32 22
  %aptr465 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf464, i32 0, i32 2
  %231 = load i8*, i8** %aptr465, align 8
  %add.ptr466 = getelementptr inbounds i8, i8* %231, i64 4
  store i8* %add.ptr466, i8** %aptr465, align 8
  br label %do.end467

do.end467:                                        ; preds = %if.end463
  br label %if.end475

if.else468:                                       ; preds = %if.then393
  %232 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio469 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %232, i32 0, i32 24
  %233 = load %struct._PerlIO**, %struct._PerlIO*** %fio469, align 8
  %234 = bitcast i32* %y to i8*
  %call470 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %233, i8* %234, i64 4)
  %cmp471 = icmp ne i64 %call470, 4
  br i1 %cmp471, label %if.then473, label %if.end474

if.then473:                                       ; preds = %if.else468
  store i32 -1, i32* %retval, align 4
  br label %return

if.end474:                                        ; preds = %if.else468
  br label %if.end475

if.end475:                                        ; preds = %if.end474, %do.end467
  br label %if.end558

if.else476:                                       ; preds = %do.body391
  %235 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio477 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %235, i32 0, i32 24
  %236 = load %struct._PerlIO**, %struct._PerlIO*** %fio477, align 8
  %tobool478 = icmp ne %struct._PerlIO** %236, null
  br i1 %tobool478, label %if.else550, label %if.then479

if.then479:                                       ; preds = %if.else476
  br label %do.body480

do.body480:                                       ; preds = %if.then479
  br label %do.body481

do.body481:                                       ; preds = %do.body480
  %237 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf482 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %237, i32 0, i32 22
  %aptr483 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf482, i32 0, i32 2
  %238 = load i8*, i8** %aptr483, align 8
  %add.ptr484 = getelementptr inbounds i8, i8* %238, i64 4
  %239 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf485 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %239, i32 0, i32 22
  %aend486 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf485, i32 0, i32 3
  %240 = load i8*, i8** %aend486, align 8
  %cmp487 = icmp ugt i8* %add.ptr484, %240
  br i1 %cmp487, label %if.then489, label %if.end530

if.then489:                                       ; preds = %do.body481
  br label %do.body490

do.body490:                                       ; preds = %if.then489
  %241 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf492 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %241, i32 0, i32 22
  %asiz493 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf492, i32 0, i32 1
  %242 = load i64, i64* %asiz493, align 8
  %add494 = add i64 4, %242
  %add495 = add i64 %add494, 8191
  %and496 = and i64 %add495, -8192
  %conv497 = trunc i64 %and496 to i32
  store i32 %conv497, i32* %nsz491, align 4
  %243 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf499 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %243, i32 0, i32 22
  %aptr500 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf499, i32 0, i32 2
  %244 = load i8*, i8** %aptr500, align 8
  %245 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf501 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %245, i32 0, i32 22
  %arena502 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf501, i32 0, i32 0
  %246 = load i8*, i8** %arena502, align 8
  %sub.ptr.lhs.cast503 = ptrtoint i8* %244 to i64
  %sub.ptr.rhs.cast504 = ptrtoint i8* %246 to i64
  %sub.ptr.sub505 = sub i64 %sub.ptr.lhs.cast503, %sub.ptr.rhs.cast504
  %conv506 = trunc i64 %sub.ptr.sub505 to i32
  store i32 %conv506, i32* %offset498, align 4
  %247 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf507 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %247, i32 0, i32 22
  %arena508 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf507, i32 0, i32 0
  %248 = load i8*, i8** %arena508, align 8
  %249 = load i32, i32* %nsz491, align 4
  %conv509 = sext i32 %249 to i64
  %mul510 = mul i64 %conv509, 1
  %call511 = call i8* @Perl_safesysrealloc(i8* %248, i64 %mul510)
  %250 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf512 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %250, i32 0, i32 22
  %arena513 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf512, i32 0, i32 0
  store i8* %call511, i8** %arena513, align 8
  %251 = load i32, i32* %nsz491, align 4
  %conv514 = sext i32 %251 to i64
  %252 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf515 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %252, i32 0, i32 22
  %asiz516 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf515, i32 0, i32 1
  store i64 %conv514, i64* %asiz516, align 8
  %253 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf517 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %253, i32 0, i32 22
  %arena518 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf517, i32 0, i32 0
  %254 = load i8*, i8** %arena518, align 8
  %255 = load i32, i32* %offset498, align 4
  %idx.ext519 = sext i32 %255 to i64
  %add.ptr520 = getelementptr inbounds i8, i8* %254, i64 %idx.ext519
  %256 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf521 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %256, i32 0, i32 22
  %aptr522 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf521, i32 0, i32 2
  store i8* %add.ptr520, i8** %aptr522, align 8
  %257 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf523 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %257, i32 0, i32 22
  %arena524 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf523, i32 0, i32 0
  %258 = load i8*, i8** %arena524, align 8
  %259 = load i32, i32* %nsz491, align 4
  %idx.ext525 = sext i32 %259 to i64
  %add.ptr526 = getelementptr inbounds i8, i8* %258, i64 %idx.ext525
  %260 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf527 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %260, i32 0, i32 22
  %aend528 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf527, i32 0, i32 3
  store i8* %add.ptr526, i8** %aend528, align 8
  br label %do.end529

do.end529:                                        ; preds = %do.body490
  br label %if.end530

if.end530:                                        ; preds = %do.end529, %do.body481
  br label %do.end531

do.end531:                                        ; preds = %if.end530
  %261 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf532 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %261, i32 0, i32 22
  %aptr533 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf532, i32 0, i32 2
  %262 = load i8*, i8** %aptr533, align 8
  %263 = ptrtoint i8* %262 to i64
  %264 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf534 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %264, i32 0, i32 22
  %aptr535 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf534, i32 0, i32 2
  %265 = load i8*, i8** %aptr535, align 8
  %266 = ptrtoint i8* %265 to i64
  %and536 = and i64 %266, -4
  %cmp537 = icmp eq i64 %263, %and536
  br i1 %cmp537, label %if.then539, label %if.else542

if.then539:                                       ; preds = %do.end531
  %267 = load i32, i32* %len, align 4
  %268 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf540 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %268, i32 0, i32 22
  %aptr541 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf540, i32 0, i32 2
  %269 = load i8*, i8** %aptr541, align 8
  %270 = bitcast i8* %269 to i32*
  store i32 %267, i32* %270, align 4
  br label %if.end545

if.else542:                                       ; preds = %do.end531
  %271 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf543 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %271, i32 0, i32 22
  %aptr544 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf543, i32 0, i32 2
  %272 = load i8*, i8** %aptr544, align 8
  %273 = bitcast i32* %len to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %272, i8* align 4 %273, i64 4, i1 false)
  br label %if.end545

if.end545:                                        ; preds = %if.else542, %if.then539
  %274 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf546 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %274, i32 0, i32 22
  %aptr547 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf546, i32 0, i32 2
  %275 = load i8*, i8** %aptr547, align 8
  %add.ptr548 = getelementptr inbounds i8, i8* %275, i64 4
  store i8* %add.ptr548, i8** %aptr547, align 8
  br label %do.end549

do.end549:                                        ; preds = %if.end545
  br label %if.end557

if.else550:                                       ; preds = %if.else476
  %276 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio551 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %276, i32 0, i32 24
  %277 = load %struct._PerlIO**, %struct._PerlIO*** %fio551, align 8
  %278 = bitcast i32* %len to i8*
  %call552 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %277, i8* %278, i64 4)
  %cmp553 = icmp ne i64 %call552, 4
  br i1 %cmp553, label %if.then555, label %if.end556

if.then555:                                       ; preds = %if.else550
  store i32 -1, i32* %retval, align 4
  br label %return

if.end556:                                        ; preds = %if.else550
  br label %if.end557

if.end557:                                        ; preds = %if.end556, %do.end549
  br label %if.end558

if.end558:                                        ; preds = %if.end557, %if.end475
  br label %do.end559

do.end559:                                        ; preds = %if.end558
  br label %do.body560

do.body560:                                       ; preds = %do.end559
  %279 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio561 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %279, i32 0, i32 24
  %280 = load %struct._PerlIO**, %struct._PerlIO*** %fio561, align 8
  %tobool562 = icmp ne %struct._PerlIO** %280, null
  br i1 %tobool562, label %if.else627, label %if.then563

if.then563:                                       ; preds = %do.body560
  br label %do.body564

do.body564:                                       ; preds = %if.then563
  br label %do.body565

do.body565:                                       ; preds = %do.body564
  %281 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf566 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %281, i32 0, i32 22
  %aptr567 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf566, i32 0, i32 2
  %282 = load i8*, i8** %aptr567, align 8
  %283 = load i32, i32* %len, align 4
  %idx.ext568 = sext i32 %283 to i64
  %add.ptr569 = getelementptr inbounds i8, i8* %282, i64 %idx.ext568
  %284 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf570 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %284, i32 0, i32 22
  %aend571 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf570, i32 0, i32 3
  %285 = load i8*, i8** %aend571, align 8
  %cmp572 = icmp ugt i8* %add.ptr569, %285
  br i1 %cmp572, label %if.then574, label %if.end616

if.then574:                                       ; preds = %do.body565
  br label %do.body575

do.body575:                                       ; preds = %if.then574
  %286 = load i32, i32* %len, align 4
  %conv577 = sext i32 %286 to i64
  %287 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf578 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %287, i32 0, i32 22
  %asiz579 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf578, i32 0, i32 1
  %288 = load i64, i64* %asiz579, align 8
  %add580 = add i64 %conv577, %288
  %add581 = add i64 %add580, 8191
  %and582 = and i64 %add581, -8192
  %conv583 = trunc i64 %and582 to i32
  store i32 %conv583, i32* %nsz576, align 4
  %289 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf585 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %289, i32 0, i32 22
  %aptr586 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf585, i32 0, i32 2
  %290 = load i8*, i8** %aptr586, align 8
  %291 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf587 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %291, i32 0, i32 22
  %arena588 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf587, i32 0, i32 0
  %292 = load i8*, i8** %arena588, align 8
  %sub.ptr.lhs.cast589 = ptrtoint i8* %290 to i64
  %sub.ptr.rhs.cast590 = ptrtoint i8* %292 to i64
  %sub.ptr.sub591 = sub i64 %sub.ptr.lhs.cast589, %sub.ptr.rhs.cast590
  %conv592 = trunc i64 %sub.ptr.sub591 to i32
  store i32 %conv592, i32* %offset584, align 4
  %293 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf593 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %293, i32 0, i32 22
  %arena594 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf593, i32 0, i32 0
  %294 = load i8*, i8** %arena594, align 8
  %295 = load i32, i32* %nsz576, align 4
  %conv595 = sext i32 %295 to i64
  %mul596 = mul i64 %conv595, 1
  %call597 = call i8* @Perl_safesysrealloc(i8* %294, i64 %mul596)
  %296 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf598 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %296, i32 0, i32 22
  %arena599 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf598, i32 0, i32 0
  store i8* %call597, i8** %arena599, align 8
  %297 = load i32, i32* %nsz576, align 4
  %conv600 = sext i32 %297 to i64
  %298 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf601 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %298, i32 0, i32 22
  %asiz602 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf601, i32 0, i32 1
  store i64 %conv600, i64* %asiz602, align 8
  %299 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf603 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %299, i32 0, i32 22
  %arena604 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf603, i32 0, i32 0
  %300 = load i8*, i8** %arena604, align 8
  %301 = load i32, i32* %offset584, align 4
  %idx.ext605 = sext i32 %301 to i64
  %add.ptr606 = getelementptr inbounds i8, i8* %300, i64 %idx.ext605
  %302 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf607 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %302, i32 0, i32 22
  %aptr608 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf607, i32 0, i32 2
  store i8* %add.ptr606, i8** %aptr608, align 8
  %303 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf609 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %303, i32 0, i32 22
  %arena610 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf609, i32 0, i32 0
  %304 = load i8*, i8** %arena610, align 8
  %305 = load i32, i32* %nsz576, align 4
  %idx.ext611 = sext i32 %305 to i64
  %add.ptr612 = getelementptr inbounds i8, i8* %304, i64 %idx.ext611
  %306 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf613 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %306, i32 0, i32 22
  %aend614 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf613, i32 0, i32 3
  store i8* %add.ptr612, i8** %aend614, align 8
  br label %do.end615

do.end615:                                        ; preds = %do.body575
  br label %if.end616

if.end616:                                        ; preds = %do.end615, %do.body565
  br label %do.end617

do.end617:                                        ; preds = %if.end616
  %307 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf618 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %307, i32 0, i32 22
  %aptr619 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf618, i32 0, i32 2
  %308 = load i8*, i8** %aptr619, align 8
  %arraydecay620 = getelementptr inbounds [80 x i8], [80 x i8]* %buf, i64 0, i64 0
  %309 = load i32, i32* %len, align 4
  %conv621 = sext i32 %309 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %308, i8* align 16 %arraydecay620, i64 %conv621, i1 false)
  %310 = load i32, i32* %len, align 4
  %311 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf622 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %311, i32 0, i32 22
  %aptr623 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf622, i32 0, i32 2
  %312 = load i8*, i8** %aptr623, align 8
  %idx.ext624 = sext i32 %310 to i64
  %add.ptr625 = getelementptr inbounds i8, i8* %312, i64 %idx.ext624
  store i8* %add.ptr625, i8** %aptr623, align 8
  br label %do.end626

do.end626:                                        ; preds = %do.end617
  br label %if.end637

if.else627:                                       ; preds = %do.body560
  %313 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio628 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %313, i32 0, i32 24
  %314 = load %struct._PerlIO**, %struct._PerlIO*** %fio628, align 8
  %arraydecay629 = getelementptr inbounds [80 x i8], [80 x i8]* %buf, i64 0, i64 0
  %315 = load i32, i32* %len, align 4
  %conv630 = sext i32 %315 to i64
  %call631 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %314, i8* %arraydecay629, i64 %conv630)
  %316 = load i32, i32* %len, align 4
  %conv632 = sext i32 %316 to i64
  %cmp633 = icmp ne i64 %call631, %conv632
  br i1 %cmp633, label %if.then635, label %if.end636

if.then635:                                       ; preds = %if.else627
  store i32 -1, i32* %retval, align 4
  br label %return

if.end636:                                        ; preds = %if.else627
  br label %if.end637

if.end637:                                        ; preds = %if.end636, %do.end626
  br label %do.end638

do.end638:                                        ; preds = %if.end637
  br label %if.end639

if.end639:                                        ; preds = %do.end638, %if.end319
  br label %do.end640

do.end640:                                        ; preds = %if.end639
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %do.end640, %if.then635, %if.then555, %if.then473, %if.then387, %if.then315, %if.then234, %if.then163
  %317 = load i32, i32* %retval, align 4
  ret i32 %317
}

declare dso_local i32 @Perl_Gv_AMupdate(%struct.hv*, i1 zeroext) #1

declare dso_local i64 @Perl_sv_2iv_flags(%struct.sv*, i32) #1

declare dso_local i64 @Perl_sv_2uv_flags(%struct.sv*, i32) #1

declare dso_local double @Perl_sv_2nv_flags(%struct.sv*, i32) #1

declare dso_local i8* @Perl_sv_reftype(%struct.sv*, i32) #1

declare dso_local i64 @Perl_av_len(%struct.av*) #1

declare dso_local %struct.sv** @Perl_av_fetch(%struct.av*, i64, i32) #1

declare dso_local i32 @Perl_hv_iterinit(%struct.hv*) #1

declare dso_local %struct.sv* @Perl_get_sv(i8*, i32) #1

declare dso_local zeroext i1 @Perl_sv_2bool_flags(%struct.sv*, i32) #1

declare dso_local %struct.he* @Perl_hv_iternext_flags(%struct.hv*, i32) #1

declare dso_local %struct.sv* @Perl_hv_iterkeysv(%struct.he*) #1

declare dso_local void @Perl_sortsv(%struct.sv**, i64, i32 (%struct.sv*, %struct.sv*)*) #1

declare dso_local i32 @Perl_sv_cmp(%struct.sv*, %struct.sv*) #1

declare dso_local i32 @Perl_hv_placeholders_get(%struct.hv*) #1

declare dso_local %struct.sv* @Perl_av_shift(%struct.av*) #1

declare dso_local i8* @Perl_hv_common(%struct.hv*, %struct.sv*, i8*, i64, i32, i32, %struct.sv*, i32) #1

declare dso_local i8* @Perl_bytes_from_utf8(i8*, i64*, i8*) #1

declare dso_local %struct.sv* @Perl_hv_iterval(%struct.hv*, %struct.he*) #1

declare dso_local void @Perl_hv_riter_set(%struct.hv*, i32) #1

declare dso_local void @Perl_hv_eiter_set(%struct.hv*, %struct.he*) #1

declare dso_local void @Perl_load_module(i32, %struct.sv*, %struct.sv*, ...) #1

declare dso_local %struct.sv* @Perl_newSVpvn(i8*, i64) #1

declare dso_local %struct.sv* @Perl_newSVnv(double) #1

declare dso_local %struct.sv* @Perl_newSVpvn_flags(i8*, i64, i32) #1

declare dso_local i32 @Perl_call_method(i8*, i32) #1

declare dso_local void @Perl_warn(i8*, ...) #1

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #4

declare dso_local %struct.sv* @Perl_newSVpv(i8*, i64) #1

declare dso_local void @Perl_ptr_table_free(%struct.ptr_tbl*) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @pretrieve(%struct._PerlIO** %f) #0 {
entry:
  %f.addr = alloca %struct._PerlIO**, align 8
  store %struct._PerlIO** %f, %struct._PerlIO*** %f.addr, align 8
  %0 = load %struct._PerlIO**, %struct._PerlIO*** %f.addr, align 8
  %call = call %struct.sv* @do_retrieve(%struct._PerlIO** %0, %struct.sv* null, i32 0)
  ret %struct.sv* %call
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @do_retrieve(%struct._PerlIO** %f, %struct.sv* %in, i32 %optype) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %f.addr = alloca %struct._PerlIO**, align 8
  %in.addr = alloca %struct.sv*, align 8
  %optype.addr = alloca i32, align 4
  %cxt = alloca %struct.stcxt*, align 8
  %sv = alloca %struct.sv*, align 8
  %is_tainted = alloca i32, align 4
  %pre_06_fmt = alloca i32, align 4
  %length = alloca i64, align 8
  %orig = alloca i8*, align 8
  %asbytes = alloca i8*, align 8
  %klen_tmp = alloca i64, align 8
  %is_utf8 = alloca i8, align 1
  %rv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %rv148 = alloca %struct.sv*, align 8
  store %struct._PerlIO** %f, %struct._PerlIO*** %f.addr, align 8
  store %struct.sv* %in, %struct.sv** %in.addr, align 8
  store i32 %optype, i32* %optype.addr, align 4
  %0 = load %struct.stcxt*, %struct.stcxt** @Context_ptr, align 8
  store %struct.stcxt* %0, %struct.stcxt** %cxt, align 8
  store i32 0, i32* %pre_06_fmt, align 4
  %1 = load i32, i32* %optype.addr, align 4
  %or = or i32 %1, 2
  store i32 %or, i32* %optype.addr, align 4
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 19
  %3 = load i32, i32* %s_dirty, align 8
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  call void @clean_context(%struct.stcxt* %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %entry1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 0
  %6 = load i32, i32* %entry1, align 8
  %tobool2 = icmp ne i32 %6, 0
  br i1 %tobool2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %call = call %struct.stcxt* @allocate_context(%struct.stcxt* %7)
  store %struct.stcxt* %call, %struct.stcxt** %cxt, align 8
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %entry5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 0
  %9 = load i32, i32* %entry5, align 8
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %entry5, align 8
  br label %do.body

do.body:                                          ; preds = %if.end4
  %10 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %keybuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %10, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf, i32 0, i32 0
  %11 = load i8*, i8** %arena, align 8
  %tobool6 = icmp ne i8* %11, null
  br i1 %tobool6, label %if.end12, label %if.then7

if.then7:                                         ; preds = %do.body
  %call8 = call i8* @Perl_safesysmalloc(i64 128)
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %keybuf9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 21
  %arena10 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf9, i32 0, i32 0
  store i8* %call8, i8** %arena10, align 8
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %keybuf11 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 21
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf11, i32 0, i32 1
  store i64 128, i64* %asiz, align 8
  br label %if.end12

if.end12:                                         ; preds = %if.then7, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end12
  %14 = load %struct._PerlIO**, %struct._PerlIO*** %f.addr, align 8
  %tobool13 = icmp ne %struct._PerlIO** %14, null
  br i1 %tobool13, label %if.end85, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.end
  %15 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %tobool14 = icmp ne %struct.sv* %15, null
  br i1 %tobool14, label %if.then15, label %if.end85

if.then15:                                        ; preds = %land.lhs.true
  %16 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 2
  %17 = load i32, i32* %sv_flags, align 4
  %and = and i32 %17, 536870912
  %tobool16 = icmp ne i32 %and, 0
  br i1 %tobool16, label %if.then17, label %if.end48

if.then17:                                        ; preds = %if.then15
  %18 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_flags18 = getelementptr inbounds %struct.sv, %struct.sv* %18, i32 0, i32 2
  %19 = load i32, i32* %sv_flags18, align 4
  %and19 = and i32 %19, 2098176
  %cmp = icmp eq i32 %and19, 1024
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then17
  %20 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %20, i32 0, i32 0
  %21 = load i8*, i8** %sv_any, align 8
  %22 = bitcast i8* %21 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %22, i32 0, i32 2
  %23 = load i64, i64* %xpv_cur, align 8
  store i64 %23, i64* %length, align 8
  %24 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %24, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %25 = load i8*, i8** %svu_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then17
  %26 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %call20 = call i8* @Perl_sv_2pv_flags(%struct.sv* %26, i64* %length, i32 2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %25, %cond.true ], [ %call20, %cond.false ]
  store i8* %cond, i8** %orig, align 8
  %27 = load i64, i64* %length, align 8
  %add = add i64 %27, 1
  store i64 %add, i64* %klen_tmp, align 8
  store i8 1, i8* %is_utf8, align 1
  %28 = load i8*, i8** %orig, align 8
  %call21 = call i8* @Perl_bytes_from_utf8(i8* %28, i64* %klen_tmp, i8* %is_utf8)
  store i8* %call21, i8** %asbytes, align 8
  %29 = load i8, i8* %is_utf8, align 1
  %tobool22 = trunc i8 %29 to i1
  br i1 %tobool22, label %if.then23, label %if.end27

if.then23:                                        ; preds = %cond.end
  br label %do.body24

do.body24:                                        ; preds = %if.then23
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %s_dirty25 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 19
  store i32 1, i32* %s_dirty25, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.55, i64 0, i64 0))
  br label %do.end26

do.end26:                                         ; preds = %do.body24
  br label %if.end27

if.end27:                                         ; preds = %do.end26, %cond.end
  %31 = load i8*, i8** %asbytes, align 8
  %32 = load i8*, i8** %orig, align 8
  %cmp28 = icmp ne i8* %31, %32
  br i1 %cmp28, label %if.then29, label %if.end47

if.then29:                                        ; preds = %if.end27
  %call30 = call %struct.sv* @Perl_sv_newmortal()
  store %struct.sv* %call30, %struct.sv** %in.addr, align 8
  %33 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_flags31 = getelementptr inbounds %struct.sv, %struct.sv* %33, i32 0, i32 2
  %34 = load i32, i32* %sv_flags31, align 4
  %and32 = and i32 %34, 255
  %cmp33 = icmp uge i32 %and32, 3
  br i1 %cmp33, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then29
  %35 = load %struct.sv*, %struct.sv** %in.addr, align 8
  call void @Perl_sv_upgrade(%struct.sv* %35, i32 3)
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then29
  %36 = phi i1 [ true, %if.then29 ], [ true, %lor.rhs ]
  %lor.ext = zext i1 %36 to i32
  %37 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_flags34 = getelementptr inbounds %struct.sv, %struct.sv* %37, i32 0, i32 2
  %38 = load i32, i32* %sv_flags34, align 4
  %or35 = or i32 %38, 17408
  store i32 %or35, i32* %sv_flags34, align 4
  br label %do.body36

do.body36:                                        ; preds = %lor.end
  %39 = load i8*, i8** %asbytes, align 8
  %40 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_u37 = getelementptr inbounds %struct.sv, %struct.sv* %40, i32 0, i32 3
  %svu_pv38 = bitcast %union.anon* %sv_u37 to i8**
  store i8* %39, i8** %svu_pv38, align 8
  br label %do.end39

do.end39:                                         ; preds = %do.body36
  br label %do.body40

do.body40:                                        ; preds = %do.end39
  %41 = load i64, i64* %klen_tmp, align 8
  %42 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_any41 = getelementptr inbounds %struct.sv, %struct.sv* %42, i32 0, i32 0
  %43 = load i8*, i8** %sv_any41, align 8
  %44 = bitcast i8* %43 to %struct.xpv*
  %xpv_len_u = getelementptr inbounds %struct.xpv, %struct.xpv* %44, i32 0, i32 3
  %xpvlenu_len = bitcast %union.anon.17* %xpv_len_u to i64*
  store i64 %41, i64* %xpvlenu_len, align 8
  br label %do.end42

do.end42:                                         ; preds = %do.body40
  br label %do.body43

do.body43:                                        ; preds = %do.end42
  %45 = load i64, i64* %klen_tmp, align 8
  %sub = sub i64 %45, 1
  %46 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_any44 = getelementptr inbounds %struct.sv, %struct.sv* %46, i32 0, i32 0
  %47 = load i8*, i8** %sv_any44, align 8
  %48 = bitcast i8* %47 to %struct.xpv*
  %xpv_cur45 = getelementptr inbounds %struct.xpv, %struct.xpv* %48, i32 0, i32 2
  store i64 %sub, i64* %xpv_cur45, align 8
  br label %do.end46

do.end46:                                         ; preds = %do.body43
  br label %if.end47

if.end47:                                         ; preds = %do.end46, %if.end27
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then15
  br label %do.body49

do.body49:                                        ; preds = %if.end48
  %49 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf_ro = getelementptr inbounds %struct.stcxt, %struct.stcxt* %49, i32 0, i32 20
  store i32 1, i32* %membuf_ro, align 4
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %msaved = getelementptr inbounds %struct.stcxt, %struct.stcxt* %50, i32 0, i32 23
  %51 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %51, i32 0, i32 22
  %52 = bitcast %struct.extendable* %msaved to i8*
  %53 = bitcast %struct.extendable* %membuf to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 32, i1 false)
  br label %do.body50

do.body50:                                        ; preds = %do.body49
  %54 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_flags51 = getelementptr inbounds %struct.sv, %struct.sv* %54, i32 0, i32 2
  %55 = load i32, i32* %sv_flags51, align 4
  %and52 = and i32 %55, 16384
  %tobool53 = icmp ne i32 %and52, 0
  br i1 %tobool53, label %if.end58, label %if.then54

if.then54:                                        ; preds = %do.body50
  br label %do.body55

do.body55:                                        ; preds = %if.then54
  %56 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %s_dirty56 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %56, i32 0, i32 19
  store i32 1, i32* %s_dirty56, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.56, i64 0, i64 0))
  br label %do.end57

do.end57:                                         ; preds = %do.body55
  br label %if.end58

if.end58:                                         ; preds = %do.end57, %do.body50
  %57 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_flags59 = getelementptr inbounds %struct.sv, %struct.sv* %57, i32 0, i32 2
  %58 = load i32, i32* %sv_flags59, align 4
  %and60 = and i32 %58, 2098176
  %cmp61 = icmp eq i32 %and60, 1024
  br i1 %cmp61, label %cond.true62, label %cond.false69

cond.true62:                                      ; preds = %if.end58
  %59 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_any63 = getelementptr inbounds %struct.sv, %struct.sv* %59, i32 0, i32 0
  %60 = load i8*, i8** %sv_any63, align 8
  %61 = bitcast i8* %60 to %struct.xpv*
  %xpv_cur64 = getelementptr inbounds %struct.xpv, %struct.xpv* %61, i32 0, i32 2
  %62 = load i64, i64* %xpv_cur64, align 8
  %63 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf65 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %63, i32 0, i32 22
  %asiz66 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf65, i32 0, i32 1
  store i64 %62, i64* %asiz66, align 8
  %64 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_u67 = getelementptr inbounds %struct.sv, %struct.sv* %64, i32 0, i32 3
  %svu_pv68 = bitcast %union.anon* %sv_u67 to i8**
  %65 = load i8*, i8** %svu_pv68, align 8
  br label %cond.end73

cond.false69:                                     ; preds = %if.end58
  %66 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf70 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %67, i32 0, i32 22
  %asiz71 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf70, i32 0, i32 1
  %call72 = call i8* @Perl_sv_2pv_flags(%struct.sv* %66, i64* %asiz71, i32 2)
  br label %cond.end73

cond.end73:                                       ; preds = %cond.false69, %cond.true62
  %cond74 = phi i8* [ %65, %cond.true62 ], [ %call72, %cond.false69 ]
  %68 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf75 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %68, i32 0, i32 22
  %arena76 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf75, i32 0, i32 0
  store i8* %cond74, i8** %arena76, align 8
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf77 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf77, i32 0, i32 2
  store i8* %cond74, i8** %aptr, align 8
  %70 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf78 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %70, i32 0, i32 22
  %arena79 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf78, i32 0, i32 0
  %71 = load i8*, i8** %arena79, align 8
  %72 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf80 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %72, i32 0, i32 22
  %asiz81 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf80, i32 0, i32 1
  %73 = load i64, i64* %asiz81, align 8
  %add.ptr = getelementptr inbounds i8, i8* %71, i64 %73
  %74 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf82 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %74, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf82, i32 0, i32 3
  store i8* %add.ptr, i8** %aend, align 8
  br label %do.end83

do.end83:                                         ; preds = %cond.end73
  br label %do.end84

do.end84:                                         ; preds = %do.end83
  br label %if.end85

if.end85:                                         ; preds = %do.end84, %land.lhs.true, %do.end
  %75 = load %struct._PerlIO**, %struct._PerlIO*** %f.addr, align 8
  %76 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %76, i32 0, i32 24
  store %struct._PerlIO** %75, %struct._PerlIO*** %fio, align 8
  %77 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %call86 = call %struct.sv* @magic_check(%struct.stcxt* %77)
  %tobool87 = icmp ne %struct.sv* %call86, null
  br i1 %tobool87, label %if.end95, label %if.then88

if.then88:                                        ; preds = %if.end85
  br label %do.body89

do.body89:                                        ; preds = %if.then88
  %78 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %s_dirty90 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %78, i32 0, i32 19
  store i32 1, i32* %s_dirty90, align 8
  %79 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %fio91 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %79, i32 0, i32 24
  %80 = load %struct._PerlIO**, %struct._PerlIO*** %fio91, align 8
  %tobool92 = icmp ne %struct._PerlIO** %80, null
  %81 = zext i1 %tobool92 to i64
  %cond93 = select i1 %tobool92, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.59, i64 0, i64 0)
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.57, i64 0, i64 0), i8* %cond93)
  br label %do.end94

do.end94:                                         ; preds = %do.body89
  br label %if.end95

if.end95:                                         ; preds = %do.end94, %if.end85
  %82 = load %struct._PerlIO**, %struct._PerlIO*** %f.addr, align 8
  %tobool96 = icmp ne %struct._PerlIO** %82, null
  br i1 %tobool96, label %cond.true97, label %cond.false98

cond.true97:                                      ; preds = %if.end95
  br label %cond.end108

cond.false98:                                     ; preds = %if.end95
  %83 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %tobool99 = icmp ne %struct.sv* %83, null
  br i1 %tobool99, label %cond.true100, label %cond.false105

cond.true100:                                     ; preds = %cond.false98
  %84 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_flags101 = getelementptr inbounds %struct.sv, %struct.sv* %84, i32 0, i32 2
  %85 = load i32, i32* %sv_flags101, align 4
  %and102 = and i32 %85, 14680064
  %tobool103 = icmp ne i32 %and102, 0
  br i1 %tobool103, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.true100
  %86 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %call104 = call zeroext i1 @Perl_sv_tainted(%struct.sv* %86)
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.true100
  %87 = phi i1 [ false, %cond.true100 ], [ %call104, %land.rhs ]
  %land.ext = zext i1 %87 to i32
  br label %cond.end106

cond.false105:                                    ; preds = %cond.false98
  %88 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %s_tainted = getelementptr inbounds %struct.stcxt, %struct.stcxt* %88, i32 0, i32 13
  %89 = load i32, i32* %s_tainted, align 4
  br label %cond.end106

cond.end106:                                      ; preds = %cond.false105, %land.end
  %cond107 = phi i32 [ %land.ext, %land.end ], [ %89, %cond.false105 ]
  br label %cond.end108

cond.end108:                                      ; preds = %cond.end106, %cond.true97
  %cond109 = phi i32 [ 1, %cond.true97 ], [ %cond107, %cond.end106 ]
  store i32 %cond109, i32* %is_tainted, align 4
  %90 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %91 = load i32, i32* %optype.addr, align 4
  %92 = load i32, i32* %is_tainted, align 4
  call void @init_retrieve_context(%struct.stcxt* %90, i32 %91, i32 %92)
  %93 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %call110 = call %struct.sv* @retrieve(%struct.stcxt* %93, i8* null)
  store %struct.sv* %call110, %struct.sv** %sv, align 8
  %94 = load %struct._PerlIO**, %struct._PerlIO*** %f.addr, align 8
  %tobool111 = icmp ne %struct._PerlIO** %94, null
  br i1 %tobool111, label %if.end120, label %land.lhs.true112

land.lhs.true112:                                 ; preds = %cond.end108
  %95 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %tobool113 = icmp ne %struct.sv* %95, null
  br i1 %tobool113, label %if.then114, label %if.end120

if.then114:                                       ; preds = %land.lhs.true112
  br label %do.body115

do.body115:                                       ; preds = %if.then114
  %96 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf_ro116 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %96, i32 0, i32 20
  store i32 0, i32* %membuf_ro116, align 4
  %97 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf117 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %97, i32 0, i32 22
  %98 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %msaved118 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %98, i32 0, i32 23
  %99 = bitcast %struct.extendable* %membuf117 to i8*
  %100 = bitcast %struct.extendable* %msaved118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 32, i1 false)
  br label %do.end119

do.end119:                                        ; preds = %do.body115
  br label %if.end120

if.end120:                                        ; preds = %do.end119, %land.lhs.true112, %cond.end108
  %101 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %hseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %101, i32 0, i32 3
  %102 = load %struct.hv*, %struct.hv** %hseen, align 8
  %cmp121 = icmp ne %struct.hv* %102, null
  %conv = zext i1 %cmp121 to i32
  store i32 %conv, i32* %pre_06_fmt, align 4
  %103 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  call void @clean_retrieve_context(%struct.stcxt* %103)
  %104 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %prev = getelementptr inbounds %struct.stcxt, %struct.stcxt* %104, i32 0, i32 28
  %105 = load %struct.sv*, %struct.sv** %prev, align 8
  %tobool122 = icmp ne %struct.sv* %105, null
  br i1 %tobool122, label %if.then123, label %if.end124

if.then123:                                       ; preds = %if.end120
  %106 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  call void @free_context(%struct.stcxt* %106)
  br label %if.end124

if.end124:                                        ; preds = %if.then123, %if.end120
  %107 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool125 = icmp ne %struct.sv* %107, null
  br i1 %tobool125, label %if.end127, label %if.then126

if.then126:                                       ; preds = %if.end124
  store %struct.sv* @PL_sv_undef, %struct.sv** %retval, align 8
  br label %return

if.end127:                                        ; preds = %if.end124
  %108 = load i32, i32* %pre_06_fmt, align 4
  %tobool128 = icmp ne i32 %108, 0
  br i1 %tobool128, label %if.then129, label %if.end142

if.then129:                                       ; preds = %if.end127
  %109 = load %struct.sv*, %struct.sv** %sv, align 8
  %call130 = call i32 @sv_type(%struct.sv* %109)
  %cmp131 = icmp eq i32 %call130, 0
  br i1 %cmp131, label %land.lhs.true133, label %if.end141

land.lhs.true133:                                 ; preds = %if.then129
  %110 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u134 = getelementptr inbounds %struct.sv, %struct.sv* %110, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u134 to %struct.sv**
  %111 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  store %struct.sv* %111, %struct.sv** %rv, align 8
  %tobool135 = icmp ne %struct.sv* %111, null
  br i1 %tobool135, label %land.lhs.true136, label %if.end141

land.lhs.true136:                                 ; preds = %land.lhs.true133
  %112 = load %struct.sv*, %struct.sv** %rv, align 8
  %sv_flags137 = getelementptr inbounds %struct.sv, %struct.sv* %112, i32 0, i32 2
  %113 = load i32, i32* %sv_flags137, align 4
  %and138 = and i32 %113, 1048576
  %tobool139 = icmp ne i32 %and138, 0
  br i1 %tobool139, label %if.then140, label %if.end141

if.then140:                                       ; preds = %land.lhs.true136
  %114 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %114, %struct.sv** %retval, align 8
  br label %return

if.end141:                                        ; preds = %land.lhs.true136, %land.lhs.true133, %if.then129
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %if.end127
  %115 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags143 = getelementptr inbounds %struct.sv, %struct.sv* %115, i32 0, i32 2
  %116 = load i32, i32* %sv_flags143, align 4
  %and144 = and i32 %116, 1048576
  %tobool145 = icmp ne i32 %and144, 0
  br i1 %tobool145, label %if.then146, label %if.end227

if.then146:                                       ; preds = %if.end142
  %117 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any147 = getelementptr inbounds %struct.sv, %struct.sv* %117, i32 0, i32 0
  %118 = load i8*, i8** %sv_any147, align 8
  %119 = bitcast i8* %118 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %119, i32 0, i32 0
  %120 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  store %struct.hv* %120, %struct.hv** %stash, align 8
  %121 = load %struct.sv*, %struct.sv** %sv, align 8
  %call149 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %121)
  store %struct.sv* %call149, %struct.sv** %rv148, align 8
  %122 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool150 = icmp ne %struct.hv* %122, null
  br i1 %tobool150, label %land.lhs.true151, label %if.end226

land.lhs.true151:                                 ; preds = %if.then146
  %123 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags152 = getelementptr inbounds %struct.hv, %struct.hv* %123, i32 0, i32 2
  %124 = load i32, i32* %sv_flags152, align 4
  %and153 = and i32 %124, 33554432
  %tobool154 = icmp ne i32 %and153, 0
  br i1 %tobool154, label %land.lhs.true155, label %cond.false217

land.lhs.true155:                                 ; preds = %land.lhs.true151
  %125 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u156 = getelementptr inbounds %struct.hv, %struct.hv* %125, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u156 to %struct.he***
  %126 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %127 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any157 = getelementptr inbounds %struct.hv, %struct.hv* %127, i32 0, i32 0
  %128 = load %struct.xpvhv*, %struct.xpvhv** %sv_any157, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %128, i32 0, i32 3
  %129 = load i64, i64* %xhv_max, align 8
  %add158 = add i64 %129, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %126, i64 %add158
  %130 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %130, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %131 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool159 = icmp ne %struct.hek* %131, null
  br i1 %tobool159, label %land.lhs.true160, label %cond.false217

land.lhs.true160:                                 ; preds = %land.lhs.true155
  %132 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u161 = getelementptr inbounds %struct.hv, %struct.hv* %132, i32 0, i32 3
  %svu_hash162 = bitcast %union.anon.4* %sv_u161 to %struct.he***
  %133 = load %struct.he**, %struct.he*** %svu_hash162, align 8
  %134 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any163 = getelementptr inbounds %struct.hv, %struct.hv* %134, i32 0, i32 0
  %135 = load %struct.xpvhv*, %struct.xpvhv** %sv_any163, align 8
  %xhv_max164 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %135, i32 0, i32 3
  %136 = load i64, i64* %xhv_max164, align 8
  %add165 = add i64 %136, 1
  %arrayidx166 = getelementptr inbounds %struct.he*, %struct.he** %133, i64 %add165
  %137 = bitcast %struct.he** %arrayidx166 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %137, i32 0, i32 4
  %138 = load i32, i32* %xhv_name_count, align 4
  %tobool167 = icmp ne i32 %138, 0
  br i1 %tobool167, label %cond.true168, label %cond.false177

cond.true168:                                     ; preds = %land.lhs.true160
  %139 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u169 = getelementptr inbounds %struct.hv, %struct.hv* %139, i32 0, i32 3
  %svu_hash170 = bitcast %union.anon.4* %sv_u169 to %struct.he***
  %140 = load %struct.he**, %struct.he*** %svu_hash170, align 8
  %141 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any171 = getelementptr inbounds %struct.hv, %struct.hv* %141, i32 0, i32 0
  %142 = load %struct.xpvhv*, %struct.xpvhv** %sv_any171, align 8
  %xhv_max172 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %142, i32 0, i32 3
  %143 = load i64, i64* %xhv_max172, align 8
  %add173 = add i64 %143, 1
  %arrayidx174 = getelementptr inbounds %struct.he*, %struct.he** %140, i64 %add173
  %144 = bitcast %struct.he** %arrayidx174 to %struct.xpvhv_aux*
  %xhv_name_u175 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %144, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u175 to %struct.hek***
  %145 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %146 = load %struct.hek*, %struct.hek** %145, align 8
  %tobool176 = icmp ne %struct.hek* %146, null
  br i1 %tobool176, label %cond.true187, label %cond.false217

cond.false177:                                    ; preds = %land.lhs.true160
  %147 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u178 = getelementptr inbounds %struct.hv, %struct.hv* %147, i32 0, i32 3
  %svu_hash179 = bitcast %union.anon.4* %sv_u178 to %struct.he***
  %148 = load %struct.he**, %struct.he*** %svu_hash179, align 8
  %149 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any180 = getelementptr inbounds %struct.hv, %struct.hv* %149, i32 0, i32 0
  %150 = load %struct.xpvhv*, %struct.xpvhv** %sv_any180, align 8
  %xhv_max181 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %150, i32 0, i32 3
  %151 = load i64, i64* %xhv_max181, align 8
  %add182 = add i64 %151, 1
  %arrayidx183 = getelementptr inbounds %struct.he*, %struct.he** %148, i64 %add182
  %152 = bitcast %struct.he** %arrayidx183 to %struct.xpvhv_aux*
  %xhv_name_u184 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %152, i32 0, i32 0
  %xhvnameu_name185 = bitcast %union._xhvnameu* %xhv_name_u184 to %struct.hek**
  %153 = load %struct.hek*, %struct.hek** %xhvnameu_name185, align 8
  %tobool186 = icmp ne %struct.hek* %153, null
  br i1 %tobool186, label %cond.true187, label %cond.false217

cond.true187:                                     ; preds = %cond.false177, %cond.true168
  %154 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u188 = getelementptr inbounds %struct.hv, %struct.hv* %154, i32 0, i32 3
  %svu_hash189 = bitcast %union.anon.4* %sv_u188 to %struct.he***
  %155 = load %struct.he**, %struct.he*** %svu_hash189, align 8
  %156 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any190 = getelementptr inbounds %struct.hv, %struct.hv* %156, i32 0, i32 0
  %157 = load %struct.xpvhv*, %struct.xpvhv** %sv_any190, align 8
  %xhv_max191 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %157, i32 0, i32 3
  %158 = load i64, i64* %xhv_max191, align 8
  %add192 = add i64 %158, 1
  %arrayidx193 = getelementptr inbounds %struct.he*, %struct.he** %155, i64 %add192
  %159 = bitcast %struct.he** %arrayidx193 to %struct.xpvhv_aux*
  %xhv_name_count194 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %159, i32 0, i32 4
  %160 = load i32, i32* %xhv_name_count194, align 4
  %tobool195 = icmp ne i32 %160, 0
  br i1 %tobool195, label %cond.true196, label %cond.false205

cond.true196:                                     ; preds = %cond.true187
  %161 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u197 = getelementptr inbounds %struct.hv, %struct.hv* %161, i32 0, i32 3
  %svu_hash198 = bitcast %union.anon.4* %sv_u197 to %struct.he***
  %162 = load %struct.he**, %struct.he*** %svu_hash198, align 8
  %163 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any199 = getelementptr inbounds %struct.hv, %struct.hv* %163, i32 0, i32 0
  %164 = load %struct.xpvhv*, %struct.xpvhv** %sv_any199, align 8
  %xhv_max200 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %164, i32 0, i32 3
  %165 = load i64, i64* %xhv_max200, align 8
  %add201 = add i64 %165, 1
  %arrayidx202 = getelementptr inbounds %struct.he*, %struct.he** %162, i64 %add201
  %166 = bitcast %struct.he** %arrayidx202 to %struct.xpvhv_aux*
  %xhv_name_u203 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %166, i32 0, i32 0
  %xhvnameu_names204 = bitcast %union._xhvnameu* %xhv_name_u203 to %struct.hek***
  %167 = load %struct.hek**, %struct.hek*** %xhvnameu_names204, align 8
  %168 = load %struct.hek*, %struct.hek** %167, align 8
  br label %cond.end214

cond.false205:                                    ; preds = %cond.true187
  %169 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u206 = getelementptr inbounds %struct.hv, %struct.hv* %169, i32 0, i32 3
  %svu_hash207 = bitcast %union.anon.4* %sv_u206 to %struct.he***
  %170 = load %struct.he**, %struct.he*** %svu_hash207, align 8
  %171 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any208 = getelementptr inbounds %struct.hv, %struct.hv* %171, i32 0, i32 0
  %172 = load %struct.xpvhv*, %struct.xpvhv** %sv_any208, align 8
  %xhv_max209 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %172, i32 0, i32 3
  %173 = load i64, i64* %xhv_max209, align 8
  %add210 = add i64 %173, 1
  %arrayidx211 = getelementptr inbounds %struct.he*, %struct.he** %170, i64 %add210
  %174 = bitcast %struct.he** %arrayidx211 to %struct.xpvhv_aux*
  %xhv_name_u212 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %174, i32 0, i32 0
  %xhvnameu_name213 = bitcast %union._xhvnameu* %xhv_name_u212 to %struct.hek**
  %175 = load %struct.hek*, %struct.hek** %xhvnameu_name213, align 8
  br label %cond.end214

cond.end214:                                      ; preds = %cond.false205, %cond.true196
  %cond215 = phi %struct.hek* [ %168, %cond.true196 ], [ %175, %cond.false205 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond215, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool216 = icmp ne i8* %arraydecay, null
  br i1 %tobool216, label %land.lhs.true218, label %cond.false222

cond.false217:                                    ; preds = %cond.false177, %cond.true168, %land.lhs.true155, %land.lhs.true151
  br i1 false, label %land.lhs.true218, label %cond.false222

land.lhs.true218:                                 ; preds = %cond.false217, %cond.end214
  %176 = load %struct.hv*, %struct.hv** %stash, align 8
  %call219 = call i32 @Perl_Gv_AMupdate(%struct.hv* %176, i1 zeroext false)
  %tobool220 = icmp ne i32 %call219, 0
  br i1 %tobool220, label %cond.true221, label %cond.false222

cond.true221:                                     ; preds = %land.lhs.true218
  br i1 true, label %if.then225, label %if.end226

cond.false222:                                    ; preds = %land.lhs.true218, %cond.false217, %cond.end214
  %177 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags223 = getelementptr inbounds %struct.hv, %struct.hv* %177, i32 0, i32 2
  %178 = load i32, i32* %sv_flags223, align 4
  %and224 = and i32 %178, -268435457
  store i32 %and224, i32* %sv_flags223, align 4
  br i1 false, label %if.then225, label %if.end226

if.then225:                                       ; preds = %cond.false222, %cond.true221
  %179 = load %struct.sv*, %struct.sv** %rv148, align 8
  call void @SvAMAGIC_on(%struct.sv* %179)
  br label %if.end226

if.end226:                                        ; preds = %if.then225, %cond.false222, %cond.true221, %if.then146
  %180 = load %struct.sv*, %struct.sv** %rv148, align 8
  store %struct.sv* %180, %struct.sv** %retval, align 8
  br label %return

if.end227:                                        ; preds = %if.end142
  %181 = load %struct.sv*, %struct.sv** %sv, align 8
  %call228 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %181)
  store %struct.sv* %call228, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end227, %if.end226, %if.then140, %if.then126
  %182 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %182
}

declare dso_local %struct.sv* @Perl_sv_newmortal() #1

declare dso_local void @Perl_sv_upgrade(%struct.sv*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @magic_check(%struct.stcxt* %cxt) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %buf = alloca [259 x i8], align 16
  %current = alloca i8*, align 8
  %c = alloca i32, align 4
  %length = alloca i32, align 4
  %use_network_order = alloca i32, align 4
  %use_NV_size = alloca i32, align 4
  %old_magic = alloca i32, align 4
  %version_major = alloca i32, align 4
  %version_minor = alloca i32, align 4
  %len = alloca i64, align 8
  %old_len = alloca i64, align 8
  %croak_now = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i32 0, i32* %old_magic, align 4
  store i32 0, i32* %version_minor, align 4
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 24
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.then, label %if.else70

if.then:                                          ; preds = %entry
  store i64 5, i64* %len, align 8
  br label %do.body

do.body:                                          ; preds = %if.then
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 24
  %3 = load %struct._PerlIO**, %struct._PerlIO*** %fio1, align 8
  %tobool2 = icmp ne %struct._PerlIO** %3, null
  br i1 %tobool2, label %if.else12, label %if.then3

if.then3:                                         ; preds = %do.body
  br label %do.body4

do.body4:                                         ; preds = %if.then3
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %5 = load i8*, i8** %aptr, align 8
  %6 = load i64, i64* %len, align 8
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %6
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf5, i32 0, i32 3
  %8 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %8
  br i1 %cmp, label %if.then6, label %if.else

if.then6:                                         ; preds = %do.body4
  %arraydecay = getelementptr inbounds [259 x i8], [259 x i8]* %buf, i64 0, i64 0
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf7 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 22
  %aptr8 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf7, i32 0, i32 2
  %10 = load i8*, i8** %aptr8, align 8
  %11 = load i64, i64* %len, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %arraydecay, i8* align 1 %10, i64 %11, i1 false)
  %12 = load i64, i64* %len, align 8
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 22
  %aptr10 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf9, i32 0, i32 2
  %14 = load i8*, i8** %aptr10, align 8
  %add.ptr11 = getelementptr inbounds i8, i8* %14, i64 %12
  store i8* %add.ptr11, i8** %aptr10, align 8
  br label %if.end

if.else:                                          ; preds = %do.body4
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then6
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end18

if.else12:                                        ; preds = %do.body
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio13 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 24
  %16 = load %struct._PerlIO**, %struct._PerlIO*** %fio13, align 8
  %arraydecay14 = getelementptr inbounds [259 x i8], [259 x i8]* %buf, i64 0, i64 0
  %17 = load i64, i64* %len, align 8
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %16, i8* %arraydecay14, i64 %17)
  %18 = load i64, i64* %len, align 8
  %cmp15 = icmp ne i64 %call, %18
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.else12
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end17:                                         ; preds = %if.else12
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %do.end
  br label %do.end19

do.end19:                                         ; preds = %if.end18
  %arraydecay20 = getelementptr inbounds [259 x i8], [259 x i8]* %buf, i64 0, i64 0
  %19 = load i64, i64* %len, align 8
  %dec = add i64 %19, -1
  store i64 %dec, i64* %len, align 8
  %add.ptr21 = getelementptr inbounds i8, i8* %arraydecay20, i64 %dec
  store i8* %add.ptr21, i8** %current, align 8
  %arraydecay22 = getelementptr inbounds [259 x i8], [259 x i8]* %buf, i64 0, i64 0
  %20 = load i64, i64* %len, align 8
  %call23 = call i32 @memcmp(i8* %arraydecay22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @magicstr, i64 0, i64 0), i64 %20) #5
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %if.then25, label %if.end69

if.then25:                                        ; preds = %do.end19
  store i64 10, i64* %old_len, align 8
  br label %do.body26

do.body26:                                        ; preds = %if.then25
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio27 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 24
  %22 = load %struct._PerlIO**, %struct._PerlIO*** %fio27, align 8
  %tobool28 = icmp ne %struct._PerlIO** %22, null
  br i1 %tobool28, label %if.else49, label %if.then29

if.then29:                                        ; preds = %do.body26
  br label %do.body30

do.body30:                                        ; preds = %if.then29
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf31 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 22
  %aptr32 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf31, i32 0, i32 2
  %24 = load i8*, i8** %aptr32, align 8
  %25 = load i64, i64* %old_len, align 8
  %26 = load i64, i64* %len, align 8
  %sub = sub i64 %25, %26
  %add.ptr33 = getelementptr inbounds i8, i8* %24, i64 %sub
  %27 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf34 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %27, i32 0, i32 22
  %aend35 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf34, i32 0, i32 3
  %28 = load i8*, i8** %aend35, align 8
  %cmp36 = icmp ule i8* %add.ptr33, %28
  br i1 %cmp36, label %if.then37, label %if.else46

if.then37:                                        ; preds = %do.body30
  %29 = load i8*, i8** %current, align 8
  %add.ptr38 = getelementptr inbounds i8, i8* %29, i64 1
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf39 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 22
  %aptr40 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf39, i32 0, i32 2
  %31 = load i8*, i8** %aptr40, align 8
  %32 = load i64, i64* %old_len, align 8
  %33 = load i64, i64* %len, align 8
  %sub41 = sub i64 %32, %33
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr38, i8* align 1 %31, i64 %sub41, i1 false)
  %34 = load i64, i64* %old_len, align 8
  %35 = load i64, i64* %len, align 8
  %sub42 = sub i64 %34, %35
  %36 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf43 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %36, i32 0, i32 22
  %aptr44 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf43, i32 0, i32 2
  %37 = load i8*, i8** %aptr44, align 8
  %add.ptr45 = getelementptr inbounds i8, i8* %37, i64 %sub42
  store i8* %add.ptr45, i8** %aptr44, align 8
  br label %if.end47

if.else46:                                        ; preds = %do.body30
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end47:                                         ; preds = %if.then37
  br label %do.end48

do.end48:                                         ; preds = %if.end47
  br label %if.end58

if.else49:                                        ; preds = %do.body26
  %38 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio50 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %38, i32 0, i32 24
  %39 = load %struct._PerlIO**, %struct._PerlIO*** %fio50, align 8
  %40 = load i8*, i8** %current, align 8
  %add.ptr51 = getelementptr inbounds i8, i8* %40, i64 1
  %41 = load i64, i64* %old_len, align 8
  %42 = load i64, i64* %len, align 8
  %sub52 = sub i64 %41, %42
  %call53 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %39, i8* %add.ptr51, i64 %sub52)
  %43 = load i64, i64* %old_len, align 8
  %44 = load i64, i64* %len, align 8
  %sub54 = sub i64 %43, %44
  %cmp55 = icmp ne i64 %call53, %sub54
  br i1 %cmp55, label %if.then56, label %if.end57

if.then56:                                        ; preds = %if.else49
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end57:                                         ; preds = %if.else49
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %do.end48
  br label %do.end59

do.end59:                                         ; preds = %if.end58
  %arraydecay60 = getelementptr inbounds [259 x i8], [259 x i8]* %buf, i64 0, i64 0
  %45 = load i64, i64* %old_len, align 8
  %call61 = call i32 @memcmp(i8* %arraydecay60, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @old_magicstr, i64 0, i64 0), i64 %45) #5
  %tobool62 = icmp ne i32 %call61, 0
  br i1 %tobool62, label %if.then63, label %if.end66

if.then63:                                        ; preds = %do.end59
  br label %do.body64

do.body64:                                        ; preds = %if.then63
  %46 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %46, i32 0, i32 19
  store i32 1, i32* %s_dirty, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.60, i64 0, i64 0))
  br label %do.end65

do.end65:                                         ; preds = %do.body64
  br label %if.end66

if.end66:                                         ; preds = %do.end65, %do.end59
  %47 = load i32, i32* %old_magic, align 4
  %inc = add nsw i32 %47, 1
  store i32 %inc, i32* %old_magic, align 4
  %arraydecay67 = getelementptr inbounds [259 x i8], [259 x i8]* %buf, i64 0, i64 0
  %48 = load i64, i64* %old_len, align 8
  %add.ptr68 = getelementptr inbounds i8, i8* %arraydecay67, i64 %48
  store i8* %add.ptr68, i8** %current, align 8
  br label %if.end69

if.end69:                                         ; preds = %if.end66, %do.end19
  %49 = load i8*, i8** %current, align 8
  %50 = load i8, i8* %49, align 1
  %conv = zext i8 %50 to i32
  store i32 %conv, i32* %use_network_order, align 4
  br label %if.end98

if.else70:                                        ; preds = %entry
  br label %do.body71

do.body71:                                        ; preds = %if.else70
  %51 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio72 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %51, i32 0, i32 24
  %52 = load %struct._PerlIO**, %struct._PerlIO*** %fio72, align 8
  %tobool73 = icmp ne %struct._PerlIO** %52, null
  br i1 %tobool73, label %if.else89, label %if.then74

if.then74:                                        ; preds = %do.body71
  br label %do.body75

do.body75:                                        ; preds = %if.then74
  %53 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf76 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %53, i32 0, i32 22
  %aptr77 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf76, i32 0, i32 2
  %54 = load i8*, i8** %aptr77, align 8
  %55 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf78 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %55, i32 0, i32 22
  %aend79 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf78, i32 0, i32 3
  %56 = load i8*, i8** %aend79, align 8
  %cmp80 = icmp ult i8* %54, %56
  br i1 %cmp80, label %if.then82, label %if.else86

if.then82:                                        ; preds = %do.body75
  %57 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf83 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %57, i32 0, i32 22
  %aptr84 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf83, i32 0, i32 2
  %58 = load i8*, i8** %aptr84, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %58, i32 1
  store i8* %incdec.ptr, i8** %aptr84, align 8
  %59 = load i8, i8* %58, align 1
  %conv85 = zext i8 %59 to i32
  store i32 %conv85, i32* %use_network_order, align 4
  br label %if.end87

if.else86:                                        ; preds = %do.body75
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end87:                                         ; preds = %if.then82
  br label %do.end88

do.end88:                                         ; preds = %if.end87
  br label %if.end96

if.else89:                                        ; preds = %do.body71
  %60 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio90 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %60, i32 0, i32 24
  %61 = load %struct._PerlIO**, %struct._PerlIO*** %fio90, align 8
  %call91 = call i32 @PerlIO_getc(%struct._PerlIO** %61)
  store i32 %call91, i32* %use_network_order, align 4
  %cmp92 = icmp eq i32 %call91, -1
  br i1 %cmp92, label %if.then94, label %if.end95

if.then94:                                        ; preds = %if.else89
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end95:                                         ; preds = %if.else89
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %do.end88
  br label %do.end97

do.end97:                                         ; preds = %if.end96
  br label %if.end98

if.end98:                                         ; preds = %do.end97, %if.end69
  %62 = load i32, i32* %old_magic, align 4
  %tobool99 = icmp ne i32 %62, 0
  br i1 %tobool99, label %land.lhs.true, label %if.else103

land.lhs.true:                                    ; preds = %if.end98
  %63 = load i32, i32* %use_network_order, align 4
  %cmp100 = icmp sgt i32 %63, 1
  br i1 %cmp100, label %if.then102, label %if.else103

if.then102:                                       ; preds = %land.lhs.true
  store i32 -1, i32* %version_major, align 4
  br label %if.end104

if.else103:                                       ; preds = %land.lhs.true, %if.end98
  %64 = load i32, i32* %use_network_order, align 4
  %shr = ashr i32 %64, 1
  store i32 %shr, i32* %version_major, align 4
  br label %if.end104

if.end104:                                        ; preds = %if.else103, %if.then102
  %65 = load i32, i32* %version_major, align 4
  %cmp105 = icmp sgt i32 %65, 0
  %66 = zext i1 %cmp105 to i64
  %cond = select i1 %cmp105, %struct.sv* (%struct.stcxt*, i8*)** getelementptr inbounds ([33 x %struct.sv* (%struct.stcxt*, i8*)*], [33 x %struct.sv* (%struct.stcxt*, i8*)*]* @sv_retrieve, i64 0, i64 0), %struct.sv* (%struct.stcxt*, i8*)** getelementptr inbounds ([33 x %struct.sv* (%struct.stcxt*, i8*)*], [33 x %struct.sv* (%struct.stcxt*, i8*)*]* @sv_old_retrieve, i64 0, i64 0)
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %retrieve_vtbl = getelementptr inbounds %struct.stcxt, %struct.stcxt* %67, i32 0, i32 27
  store %struct.sv* (%struct.stcxt*, i8*)** %cond, %struct.sv* (%struct.stcxt*, i8*)*** %retrieve_vtbl, align 8
  %68 = load i32, i32* %version_major, align 4
  %cmp107 = icmp sgt i32 %68, 1
  br i1 %cmp107, label %if.then109, label %if.end138

if.then109:                                       ; preds = %if.end104
  br label %do.body110

do.body110:                                       ; preds = %if.then109
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio111 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 24
  %70 = load %struct._PerlIO**, %struct._PerlIO*** %fio111, align 8
  %tobool112 = icmp ne %struct._PerlIO** %70, null
  br i1 %tobool112, label %if.else129, label %if.then113

if.then113:                                       ; preds = %do.body110
  br label %do.body114

do.body114:                                       ; preds = %if.then113
  %71 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf115 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %71, i32 0, i32 22
  %aptr116 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf115, i32 0, i32 2
  %72 = load i8*, i8** %aptr116, align 8
  %73 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf117 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %73, i32 0, i32 22
  %aend118 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf117, i32 0, i32 3
  %74 = load i8*, i8** %aend118, align 8
  %cmp119 = icmp ult i8* %72, %74
  br i1 %cmp119, label %if.then121, label %if.else126

if.then121:                                       ; preds = %do.body114
  %75 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf122 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %75, i32 0, i32 22
  %aptr123 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf122, i32 0, i32 2
  %76 = load i8*, i8** %aptr123, align 8
  %incdec.ptr124 = getelementptr inbounds i8, i8* %76, i32 1
  store i8* %incdec.ptr124, i8** %aptr123, align 8
  %77 = load i8, i8* %76, align 1
  %conv125 = zext i8 %77 to i32
  store i32 %conv125, i32* %version_minor, align 4
  br label %if.end127

if.else126:                                       ; preds = %do.body114
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end127:                                        ; preds = %if.then121
  br label %do.end128

do.end128:                                        ; preds = %if.end127
  br label %if.end136

if.else129:                                       ; preds = %do.body110
  %78 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio130 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %78, i32 0, i32 24
  %79 = load %struct._PerlIO**, %struct._PerlIO*** %fio130, align 8
  %call131 = call i32 @PerlIO_getc(%struct._PerlIO** %79)
  store i32 %call131, i32* %version_minor, align 4
  %cmp132 = icmp eq i32 %call131, -1
  br i1 %cmp132, label %if.then134, label %if.end135

if.then134:                                       ; preds = %if.else129
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end135:                                        ; preds = %if.else129
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %do.end128
  br label %do.end137

do.end137:                                        ; preds = %if.end136
  br label %if.end138

if.end138:                                        ; preds = %do.end137, %if.end104
  %80 = load i32, i32* %version_major, align 4
  %81 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_major = getelementptr inbounds %struct.stcxt, %struct.stcxt* %81, i32 0, i32 25
  store i32 %80, i32* %ver_major, align 8
  %82 = load i32, i32* %version_minor, align 4
  %83 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_minor = getelementptr inbounds %struct.stcxt, %struct.stcxt* %83, i32 0, i32 26
  store i32 %82, i32* %ver_minor, align 4
  %84 = load i32, i32* %version_major, align 4
  %cmp139 = icmp sgt i32 %84, 2
  br i1 %cmp139, label %if.then146, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end138
  %85 = load i32, i32* %version_major, align 4
  %cmp141 = icmp eq i32 %85, 2
  br i1 %cmp141, label %land.lhs.true143, label %if.end268

land.lhs.true143:                                 ; preds = %lor.lhs.false
  %86 = load i32, i32* %version_minor, align 4
  %cmp144 = icmp sgt i32 %86, 10
  br i1 %cmp144, label %if.then146, label %if.end268

if.then146:                                       ; preds = %land.lhs.true143, %if.end138
  store i32 1, i32* %croak_now, align 4
  %87 = load i32, i32* %version_major, align 4
  %cmp147 = icmp eq i32 %87, 2
  br i1 %cmp147, label %if.then149, label %if.end261

if.then149:                                       ; preds = %if.then146
  %88 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %accept_future_minor = getelementptr inbounds %struct.stcxt, %struct.stcxt* %88, i32 0, i32 18
  %89 = load i32, i32* %accept_future_minor, align 4
  %cmp150 = icmp slt i32 %89, 0
  br i1 %cmp150, label %if.then152, label %if.end255

if.then152:                                       ; preds = %if.then149
  %call153 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %tobool154 = icmp ne %struct.sv* %call153, null
  br i1 %tobool154, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then152
  br i1 true, label %land.rhs, label %land.end251

cond.false:                                       ; preds = %if.then152
  br i1 false, label %land.rhs, label %land.end251

land.rhs:                                         ; preds = %cond.false, %cond.true
  %call155 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %call155, i32 0, i32 2
  %90 = load i32, i32* %sv_flags, align 4
  %and = and i32 %90, 2097152
  %tobool156 = icmp ne i32 %and, 0
  br i1 %tobool156, label %cond.true157, label %cond.false158

cond.true157:                                     ; preds = %land.rhs
  br i1 true, label %cond.true159, label %cond.false163

cond.false158:                                    ; preds = %land.rhs
  br i1 false, label %cond.true159, label %cond.false163

cond.true159:                                     ; preds = %cond.false158, %cond.true157
  %call160 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %call161 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %call160, i32 2)
  %conv162 = zext i1 %call161 to i32
  br label %cond.end248

cond.false163:                                    ; preds = %cond.false158, %cond.true157
  %call164 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_flags165 = getelementptr inbounds %struct.sv, %struct.sv* %call164, i32 0, i32 2
  %91 = load i32, i32* %sv_flags165, align 4
  %and166 = and i32 %91, 65280
  %tobool167 = icmp ne i32 %and166, 0
  br i1 %tobool167, label %cond.false181, label %lor.lhs.false168

lor.lhs.false168:                                 ; preds = %cond.false163
  %call169 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_flags170 = getelementptr inbounds %struct.sv, %struct.sv* %call169, i32 0, i32 2
  %92 = load i32, i32* %sv_flags170, align 4
  %and171 = and i32 %92, 255
  %cmp172 = icmp eq i32 %and171, 8
  br i1 %cmp172, label %cond.false181, label %lor.lhs.false174

lor.lhs.false174:                                 ; preds = %lor.lhs.false168
  %call175 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_flags176 = getelementptr inbounds %struct.sv, %struct.sv* %call175, i32 0, i32 2
  %93 = load i32, i32* %sv_flags176, align 4
  %and177 = and i32 %93, 16826623
  %cmp178 = icmp eq i32 %and177, 16777226
  br i1 %cmp178, label %cond.false181, label %cond.true180

cond.true180:                                     ; preds = %lor.lhs.false174
  br label %cond.end246

cond.false181:                                    ; preds = %lor.lhs.false174, %lor.lhs.false168, %cond.false163
  %call182 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_flags183 = getelementptr inbounds %struct.sv, %struct.sv* %call182, i32 0, i32 2
  %94 = load i32, i32* %sv_flags183, align 4
  %and184 = and i32 %94, 1024
  %tobool185 = icmp ne i32 %and184, 0
  br i1 %tobool185, label %cond.true186, label %cond.false204

cond.true186:                                     ; preds = %cond.false181
  %call187 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %call187, i32 0, i32 0
  %95 = load i8*, i8** %sv_any, align 8
  %96 = bitcast i8* %95 to %struct.xpv*
  %tobool188 = icmp ne %struct.xpv* %96, null
  br i1 %tobool188, label %land.rhs189, label %land.end203

land.rhs189:                                      ; preds = %cond.true186
  %call190 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_any191 = getelementptr inbounds %struct.sv, %struct.sv* %call190, i32 0, i32 0
  %97 = load i8*, i8** %sv_any191, align 8
  %98 = bitcast i8* %97 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %98, i32 0, i32 2
  %99 = load i64, i64* %xpv_cur, align 8
  %cmp192 = icmp ugt i64 %99, 1
  br i1 %cmp192, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs189
  %call194 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_any195 = getelementptr inbounds %struct.sv, %struct.sv* %call194, i32 0, i32 0
  %100 = load i8*, i8** %sv_any195, align 8
  %101 = bitcast i8* %100 to %struct.xpv*
  %xpv_cur196 = getelementptr inbounds %struct.xpv, %struct.xpv* %101, i32 0, i32 2
  %102 = load i64, i64* %xpv_cur196, align 8
  %tobool197 = icmp ne i64 %102, 0
  br i1 %tobool197, label %land.rhs198, label %land.end

land.rhs198:                                      ; preds = %lor.rhs
  %call199 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %call199, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %103 = load i8*, i8** %svu_pv, align 8
  %104 = load i8, i8* %103, align 1
  %conv200 = sext i8 %104 to i32
  %cmp201 = icmp ne i32 %conv200, 48
  br label %land.end

land.end:                                         ; preds = %land.rhs198, %lor.rhs
  %105 = phi i1 [ false, %lor.rhs ], [ %cmp201, %land.rhs198 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.rhs189
  %106 = phi i1 [ true, %land.rhs189 ], [ %105, %land.end ]
  br label %land.end203

land.end203:                                      ; preds = %lor.end, %cond.true186
  %107 = phi i1 [ false, %cond.true186 ], [ %106, %lor.end ]
  %land.ext = zext i1 %107 to i32
  br label %cond.end244

cond.false204:                                    ; preds = %cond.false181
  %call205 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_flags206 = getelementptr inbounds %struct.sv, %struct.sv* %call205, i32 0, i32 2
  %108 = load i32, i32* %sv_flags206, align 4
  %and207 = and i32 %108, 768
  %tobool208 = icmp ne i32 %and207, 0
  br i1 %tobool208, label %cond.true209, label %cond.false239

cond.true209:                                     ; preds = %cond.false204
  %call210 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_flags211 = getelementptr inbounds %struct.sv, %struct.sv* %call210, i32 0, i32 2
  %109 = load i32, i32* %sv_flags211, align 4
  %and212 = and i32 %109, 256
  %tobool213 = icmp ne i32 %and212, 0
  br i1 %tobool213, label %land.lhs.true214, label %lor.rhs219

land.lhs.true214:                                 ; preds = %cond.true209
  %call215 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_any216 = getelementptr inbounds %struct.sv, %struct.sv* %call215, i32 0, i32 0
  %110 = load i8*, i8** %sv_any216, align 8
  %111 = bitcast i8* %110 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %111, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %112 = load i64, i64* %xivu_iv, align 8
  %cmp217 = icmp ne i64 %112, 0
  br i1 %cmp217, label %lor.end238, label %lor.rhs219

lor.rhs219:                                       ; preds = %land.lhs.true214, %cond.true209
  %call220 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_flags221 = getelementptr inbounds %struct.sv, %struct.sv* %call220, i32 0, i32 2
  %113 = load i32, i32* %sv_flags221, align 4
  %and222 = and i32 %113, 512
  %tobool223 = icmp ne i32 %and222, 0
  br i1 %tobool223, label %land.rhs224, label %land.end236

land.rhs224:                                      ; preds = %lor.rhs219
  %call225 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_any226 = getelementptr inbounds %struct.sv, %struct.sv* %call225, i32 0, i32 0
  %114 = load i8*, i8** %sv_any226, align 8
  %115 = bitcast i8* %114 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %115, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %116 = load double, double* %xnv_nv, align 8
  %cmp227 = fcmp uno double %116, %116
  br i1 %cmp227, label %lor.end235, label %lor.rhs228

lor.rhs228:                                       ; preds = %land.rhs224
  %call229 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_any230 = getelementptr inbounds %struct.sv, %struct.sv* %call229, i32 0, i32 0
  %117 = load i8*, i8** %sv_any230, align 8
  %118 = bitcast i8* %117 to %struct.xpvnv*
  %xnv_u231 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %118, i32 0, i32 5
  %xnv_nv232 = bitcast %union._xnvu* %xnv_u231 to double*
  %119 = load double, double* %xnv_nv232, align 8
  %cmp233 = fcmp une double %119, 0.000000e+00
  br label %lor.end235

lor.end235:                                       ; preds = %lor.rhs228, %land.rhs224
  %120 = phi i1 [ true, %land.rhs224 ], [ %cmp233, %lor.rhs228 ]
  br label %land.end236

land.end236:                                      ; preds = %lor.end235, %lor.rhs219
  %121 = phi i1 [ false, %lor.rhs219 ], [ %120, %lor.end235 ]
  br label %lor.end238

lor.end238:                                       ; preds = %land.end236, %land.lhs.true214
  %122 = phi i1 [ true, %land.lhs.true214 ], [ %121, %land.end236 ]
  %lor.ext = zext i1 %122 to i32
  br label %cond.end

cond.false239:                                    ; preds = %cond.false204
  %call240 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %call241 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %call240, i32 0)
  %conv242 = zext i1 %call241 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false239, %lor.end238
  %cond243 = phi i32 [ %lor.ext, %lor.end238 ], [ %conv242, %cond.false239 ]
  br label %cond.end244

cond.end244:                                      ; preds = %cond.end, %land.end203
  %cond245 = phi i32 [ %land.ext, %land.end203 ], [ %cond243, %cond.end ]
  br label %cond.end246

cond.end246:                                      ; preds = %cond.end244, %cond.true180
  %cond247 = phi i32 [ 0, %cond.true180 ], [ %cond245, %cond.end244 ]
  br label %cond.end248

cond.end248:                                      ; preds = %cond.end246, %cond.true159
  %cond249 = phi i32 [ %conv162, %cond.true159 ], [ %cond247, %cond.end246 ]
  %tobool250 = icmp ne i32 %cond249, 0
  br label %land.end251

land.end251:                                      ; preds = %cond.end248, %cond.false, %cond.true
  %123 = phi i1 [ false, %cond.false ], [ false, %cond.true ], [ %tobool250, %cond.end248 ]
  %124 = zext i1 %123 to i64
  %cond253 = select i1 %123, i32 1, i32 0
  %125 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %accept_future_minor254 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %125, i32 0, i32 18
  store i32 %cond253, i32* %accept_future_minor254, align 4
  br label %if.end255

if.end255:                                        ; preds = %land.end251, %if.then149
  %126 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %accept_future_minor256 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %126, i32 0, i32 18
  %127 = load i32, i32* %accept_future_minor256, align 4
  %cmp257 = icmp eq i32 %127, 1
  br i1 %cmp257, label %if.then259, label %if.end260

if.then259:                                       ; preds = %if.end255
  store i32 0, i32* %croak_now, align 4
  br label %if.end260

if.end260:                                        ; preds = %if.then259, %if.end255
  br label %if.end261

if.end261:                                        ; preds = %if.end260, %if.then146
  %128 = load i32, i32* %croak_now, align 4
  %tobool262 = icmp ne i32 %128, 0
  br i1 %tobool262, label %if.then263, label %if.end267

if.then263:                                       ; preds = %if.end261
  br label %do.body264

do.body264:                                       ; preds = %if.then263
  %129 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty265 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %129, i32 0, i32 19
  store i32 1, i32* %s_dirty265, align 8
  %130 = load i32, i32* %version_major, align 4
  %131 = load i32, i32* %version_minor, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.62, i64 0, i64 0), i32 %130, i32 %131, i32 2, i32 10)
  br label %do.end266

do.end266:                                        ; preds = %do.body264
  br label %if.end267

if.end267:                                        ; preds = %do.end266, %if.end261
  br label %if.end268

if.end268:                                        ; preds = %if.end267, %land.lhs.true143, %lor.lhs.false
  %132 = load i32, i32* %use_network_order, align 4
  %and269 = and i32 %132, 1
  %133 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %133, i32 0, i32 12
  store i32 %and269, i32* %netorder, align 8
  %tobool270 = icmp ne i32 %and269, 0
  br i1 %tobool270, label %if.then271, label %if.end272

if.then271:                                       ; preds = %if.end268
  store %struct.sv* @PL_sv_undef, %struct.sv** %retval, align 8
  br label %return

if.end272:                                        ; preds = %if.end268
  %134 = load i32, i32* %version_major, align 4
  %cmp273 = icmp sge i32 %134, 2
  br i1 %cmp273, label %land.rhs275, label %land.end278

land.rhs275:                                      ; preds = %if.end272
  %135 = load i32, i32* %version_minor, align 4
  %cmp276 = icmp sge i32 %135, 2
  br label %land.end278

land.end278:                                      ; preds = %land.rhs275, %if.end272
  %136 = phi i1 [ false, %if.end272 ], [ %cmp276, %land.rhs275 ]
  %land.ext279 = zext i1 %136 to i32
  store i32 %land.ext279, i32* %use_NV_size, align 4
  %137 = load i32, i32* %version_major, align 4
  %cmp280 = icmp sge i32 %137, 0
  br i1 %cmp280, label %if.then282, label %if.else311

if.then282:                                       ; preds = %land.end278
  br label %do.body283

do.body283:                                       ; preds = %if.then282
  %138 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio284 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %138, i32 0, i32 24
  %139 = load %struct._PerlIO**, %struct._PerlIO*** %fio284, align 8
  %tobool285 = icmp ne %struct._PerlIO** %139, null
  br i1 %tobool285, label %if.else302, label %if.then286

if.then286:                                       ; preds = %do.body283
  br label %do.body287

do.body287:                                       ; preds = %if.then286
  %140 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf288 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %140, i32 0, i32 22
  %aptr289 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf288, i32 0, i32 2
  %141 = load i8*, i8** %aptr289, align 8
  %142 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf290 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %142, i32 0, i32 22
  %aend291 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf290, i32 0, i32 3
  %143 = load i8*, i8** %aend291, align 8
  %cmp292 = icmp ult i8* %141, %143
  br i1 %cmp292, label %if.then294, label %if.else299

if.then294:                                       ; preds = %do.body287
  %144 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf295 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %144, i32 0, i32 22
  %aptr296 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf295, i32 0, i32 2
  %145 = load i8*, i8** %aptr296, align 8
  %incdec.ptr297 = getelementptr inbounds i8, i8* %145, i32 1
  store i8* %incdec.ptr297, i8** %aptr296, align 8
  %146 = load i8, i8* %145, align 1
  %conv298 = zext i8 %146 to i32
  store i32 %conv298, i32* %c, align 4
  br label %if.end300

if.else299:                                       ; preds = %do.body287
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end300:                                        ; preds = %if.then294
  br label %do.end301

do.end301:                                        ; preds = %if.end300
  br label %if.end309

if.else302:                                       ; preds = %do.body283
  %147 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio303 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %147, i32 0, i32 24
  %148 = load %struct._PerlIO**, %struct._PerlIO*** %fio303, align 8
  %call304 = call i32 @PerlIO_getc(%struct._PerlIO** %148)
  store i32 %call304, i32* %c, align 4
  %cmp305 = icmp eq i32 %call304, -1
  br i1 %cmp305, label %if.then307, label %if.end308

if.then307:                                       ; preds = %if.else302
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end308:                                        ; preds = %if.else302
  br label %if.end309

if.end309:                                        ; preds = %if.end308, %do.end301
  br label %do.end310

do.end310:                                        ; preds = %if.end309
  br label %if.end312

if.else311:                                       ; preds = %land.end278
  %149 = load i32, i32* %use_network_order, align 4
  store i32 %149, i32* %c, align 4
  br label %if.end312

if.end312:                                        ; preds = %if.else311, %do.end310
  %150 = load i32, i32* %c, align 4
  %add = add nsw i32 %150, 3
  %151 = load i32, i32* %use_NV_size, align 4
  %add313 = add nsw i32 %add, %151
  store i32 %add313, i32* %length, align 4
  br label %do.body314

do.body314:                                       ; preds = %if.end312
  %152 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio315 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %152, i32 0, i32 24
  %153 = load %struct._PerlIO**, %struct._PerlIO*** %fio315, align 8
  %tobool316 = icmp ne %struct._PerlIO** %153, null
  br i1 %tobool316, label %if.else338, label %if.then317

if.then317:                                       ; preds = %do.body314
  br label %do.body318

do.body318:                                       ; preds = %if.then317
  %154 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf319 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %154, i32 0, i32 22
  %aptr320 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf319, i32 0, i32 2
  %155 = load i8*, i8** %aptr320, align 8
  %156 = load i32, i32* %length, align 4
  %idx.ext = sext i32 %156 to i64
  %add.ptr321 = getelementptr inbounds i8, i8* %155, i64 %idx.ext
  %157 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf322 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %157, i32 0, i32 22
  %aend323 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf322, i32 0, i32 3
  %158 = load i8*, i8** %aend323, align 8
  %cmp324 = icmp ule i8* %add.ptr321, %158
  br i1 %cmp324, label %if.then326, label %if.else335

if.then326:                                       ; preds = %do.body318
  %arraydecay327 = getelementptr inbounds [259 x i8], [259 x i8]* %buf, i64 0, i64 0
  %159 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf328 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %159, i32 0, i32 22
  %aptr329 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf328, i32 0, i32 2
  %160 = load i8*, i8** %aptr329, align 8
  %161 = load i32, i32* %length, align 4
  %conv330 = sext i32 %161 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %arraydecay327, i8* align 1 %160, i64 %conv330, i1 false)
  %162 = load i32, i32* %length, align 4
  %163 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf331 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %163, i32 0, i32 22
  %aptr332 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf331, i32 0, i32 2
  %164 = load i8*, i8** %aptr332, align 8
  %idx.ext333 = sext i32 %162 to i64
  %add.ptr334 = getelementptr inbounds i8, i8* %164, i64 %idx.ext333
  store i8* %add.ptr334, i8** %aptr332, align 8
  br label %if.end336

if.else335:                                       ; preds = %do.body318
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end336:                                        ; preds = %if.then326
  br label %do.end337

do.end337:                                        ; preds = %if.end336
  br label %if.end348

if.else338:                                       ; preds = %do.body314
  %165 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio339 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %165, i32 0, i32 24
  %166 = load %struct._PerlIO**, %struct._PerlIO*** %fio339, align 8
  %arraydecay340 = getelementptr inbounds [259 x i8], [259 x i8]* %buf, i64 0, i64 0
  %167 = load i32, i32* %length, align 4
  %conv341 = sext i32 %167 to i64
  %call342 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %166, i8* %arraydecay340, i64 %conv341)
  %168 = load i32, i32* %length, align 4
  %conv343 = sext i32 %168 to i64
  %cmp344 = icmp ne i64 %call342, %conv343
  br i1 %cmp344, label %if.then346, label %if.end347

if.then346:                                       ; preds = %if.else338
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end347:                                        ; preds = %if.else338
  br label %if.end348

if.end348:                                        ; preds = %if.end347, %do.end337
  br label %do.end349

do.end349:                                        ; preds = %if.end348
  %169 = load i32, i32* %c, align 4
  %conv350 = sext i32 %169 to i64
  %cmp351 = icmp ne i64 %conv350, 8
  br i1 %cmp351, label %if.then358, label %lor.lhs.false353

lor.lhs.false353:                                 ; preds = %do.end349
  %arraydecay354 = getelementptr inbounds [259 x i8], [259 x i8]* %buf, i64 0, i64 0
  %170 = load i32, i32* %c, align 4
  %conv355 = sext i32 %170 to i64
  %call356 = call i32 @memcmp(i8* %arraydecay354, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @byteorderstr, i64 0, i64 0), i64 %conv355) #5
  %tobool357 = icmp ne i32 %call356, 0
  br i1 %tobool357, label %if.then358, label %if.end362

if.then358:                                       ; preds = %lor.lhs.false353, %do.end349
  br label %do.body359

do.body359:                                       ; preds = %if.then358
  %171 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty360 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %171, i32 0, i32 19
  store i32 1, i32* %s_dirty360, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.63, i64 0, i64 0))
  br label %do.end361

do.end361:                                        ; preds = %do.body359
  br label %if.end362

if.end362:                                        ; preds = %do.end361, %lor.lhs.false353
  %arraydecay363 = getelementptr inbounds [259 x i8], [259 x i8]* %buf, i64 0, i64 0
  %172 = load i32, i32* %c, align 4
  %idx.ext364 = sext i32 %172 to i64
  %add.ptr365 = getelementptr inbounds i8, i8* %arraydecay363, i64 %idx.ext364
  store i8* %add.ptr365, i8** %current, align 8
  %173 = load i8*, i8** %current, align 8
  %incdec.ptr366 = getelementptr inbounds i8, i8* %173, i32 1
  store i8* %incdec.ptr366, i8** %current, align 8
  %174 = load i8, i8* %173, align 1
  %conv367 = zext i8 %174 to i32
  %conv368 = sext i32 %conv367 to i64
  %cmp369 = icmp ne i64 %conv368, 4
  br i1 %cmp369, label %if.then371, label %if.end375

if.then371:                                       ; preds = %if.end362
  br label %do.body372

do.body372:                                       ; preds = %if.then371
  %175 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty373 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %175, i32 0, i32 19
  store i32 1, i32* %s_dirty373, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0))
  br label %do.end374

do.end374:                                        ; preds = %do.body372
  br label %if.end375

if.end375:                                        ; preds = %do.end374, %if.end362
  %176 = load i8*, i8** %current, align 8
  %incdec.ptr376 = getelementptr inbounds i8, i8* %176, i32 1
  store i8* %incdec.ptr376, i8** %current, align 8
  %177 = load i8, i8* %176, align 1
  %conv377 = zext i8 %177 to i32
  %conv378 = sext i32 %conv377 to i64
  %cmp379 = icmp ne i64 %conv378, 8
  br i1 %cmp379, label %if.then381, label %if.end385

if.then381:                                       ; preds = %if.end375
  br label %do.body382

do.body382:                                       ; preds = %if.then381
  %178 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty383 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %178, i32 0, i32 19
  store i32 1, i32* %s_dirty383, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.65, i64 0, i64 0))
  br label %do.end384

do.end384:                                        ; preds = %do.body382
  br label %if.end385

if.end385:                                        ; preds = %do.end384, %if.end375
  %179 = load i8*, i8** %current, align 8
  %180 = load i8, i8* %179, align 1
  %conv386 = zext i8 %180 to i32
  %conv387 = sext i32 %conv386 to i64
  %cmp388 = icmp ne i64 %conv387, 8
  br i1 %cmp388, label %if.then390, label %if.end394

if.then390:                                       ; preds = %if.end385
  br label %do.body391

do.body391:                                       ; preds = %if.then390
  %181 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty392 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %181, i32 0, i32 19
  store i32 1, i32* %s_dirty392, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.66, i64 0, i64 0))
  br label %do.end393

do.end393:                                        ; preds = %do.body391
  br label %if.end394

if.end394:                                        ; preds = %do.end393, %if.end385
  %182 = load i32, i32* %use_NV_size, align 4
  %tobool395 = icmp ne i32 %182, 0
  br i1 %tobool395, label %if.then396, label %if.end407

if.then396:                                       ; preds = %if.end394
  %183 = load i8*, i8** %current, align 8
  %incdec.ptr397 = getelementptr inbounds i8, i8* %183, i32 1
  store i8* %incdec.ptr397, i8** %current, align 8
  %184 = load i8, i8* %incdec.ptr397, align 1
  %conv398 = zext i8 %184 to i32
  %conv399 = sext i32 %conv398 to i64
  %cmp400 = icmp ne i64 %conv399, 8
  br i1 %cmp400, label %if.then402, label %if.end406

if.then402:                                       ; preds = %if.then396
  br label %do.body403

do.body403:                                       ; preds = %if.then402
  %185 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty404 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %185, i32 0, i32 19
  store i32 1, i32* %s_dirty404, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.67, i64 0, i64 0))
  br label %do.end405

do.end405:                                        ; preds = %do.body403
  br label %if.end406

if.end406:                                        ; preds = %do.end405, %if.then396
  br label %if.end407

if.end407:                                        ; preds = %if.end406, %if.end394
  store %struct.sv* @PL_sv_undef, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end407, %if.then346, %if.else335, %if.then307, %if.else299, %if.then271, %if.then134, %if.else126, %if.then94, %if.else86, %if.then56, %if.else46, %if.then16, %if.else
  %186 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %186
}

declare dso_local zeroext i1 @Perl_sv_tainted(%struct.sv*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @init_retrieve_context(%struct.stcxt* %cxt, i32 %optype, i32 %is_tainted) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  %optype.addr = alloca i32, align 4
  %is_tainted.addr = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i32 %optype, i32* %optype.addr, align 4
  store i32 %is_tainted, i32* %is_tainted.addr, align 4
  %call = call %struct.sv* @Perl_newSV_type(i32 12)
  %0 = bitcast %struct.sv* %call to i8*
  %1 = bitcast i8* %0 to %struct.hv*
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 9
  store %struct.hv* %1, %struct.hv** %hook, align 8
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %pseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 2
  store %struct.ptr_tbl* null, %struct.ptr_tbl** %pseen, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %retrieve_vtbl = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 27
  %5 = load %struct.sv* (%struct.stcxt*, i8*)**, %struct.sv* (%struct.stcxt*, i8*)*** %retrieve_vtbl, align 8
  %6 = bitcast %struct.sv* (%struct.stcxt*, i8*)** %5 to i8*
  %cmp = icmp eq i8* %6, bitcast ([33 x %struct.sv* (%struct.stcxt*, i8*)*]* @sv_old_retrieve to i8*)
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %call1 = call %struct.sv* @Perl_newSV_type(i32 12)
  %7 = bitcast %struct.sv* %call1 to i8*
  %8 = bitcast i8* %7 to %struct.hv*
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %8, %cond.true ], [ null, %cond.false ]
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 3
  store %struct.hv* %cond, %struct.hv** %hseen, align 8
  %call2 = call %struct.sv* @Perl_newSV_type(i32 11)
  %10 = bitcast %struct.sv* %call2 to i8*
  %11 = bitcast i8* %10 to %struct.av*
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 5
  store %struct.av* %11, %struct.av** %aseen, align 8
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %where_is_undef = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 6
  store i64 -1, i64* %where_is_undef, align 8
  %call3 = call %struct.sv* @Perl_newSV_type(i32 11)
  %14 = bitcast %struct.sv* %call3 to i8*
  %15 = bitcast i8* %14 to %struct.av*
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aclass = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 8
  store %struct.av* %15, %struct.av** %aclass, align 8
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 10
  store i64 0, i64* %tagnum, align 8
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %classnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 11
  store i64 0, i64* %classnum, align 8
  %19 = load i32, i32* %optype.addr, align 4
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %optype4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %20, i32 0, i32 1
  store i32 %19, i32* %optype4, align 4
  %21 = load i32, i32* %is_tainted.addr, align 4
  %22 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_tainted = getelementptr inbounds %struct.stcxt, %struct.stcxt* %22, i32 0, i32 13
  store i32 %21, i32* %s_tainted, align 4
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %entry5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 0
  store i32 1, i32* %entry5, align 8
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %accept_future_minor = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 18
  store i32 -1, i32* %accept_future_minor, align 4
  %25 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %25, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %type = alloca i32, align 4
  %svh = alloca %struct.sv**, align 8
  %sv = alloca %struct.sv*, align 8
  %tag = alloca i64, align 8
  %nettag = alloca i32, align 4
  %tagn = alloca i32, align 4
  %tag142 = alloca i32, align 4
  %len = alloca i32, align 4
  %stash = alloca %struct.hv*, align 8
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 3
  %1 = load %struct.hv*, %struct.hv** %hseen, align 8
  %tobool = icmp ne %struct.hv* %1, null
  br i1 %tobool, label %if.then, label %if.end110

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 12
  %3 = load i32, i32* %netorder, align 8
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.then2, label %if.else20

if.then2:                                         ; preds = %if.then
  br label %do.body

do.body:                                          ; preds = %if.then2
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 24
  %5 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool3 = icmp ne %struct._PerlIO** %5, null
  br i1 %tobool3, label %if.else13, label %if.then4

if.then4:                                         ; preds = %do.body
  br label %do.body5

do.body5:                                         ; preds = %if.then4
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %7 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 4
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf6, i32 0, i32 3
  %9 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %9
  br i1 %cmp, label %if.then7, label %if.else

if.then7:                                         ; preds = %do.body5
  %10 = bitcast i32* %nettag to i8*
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf8 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 22
  %aptr9 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf8, i32 0, i32 2
  %12 = load i8*, i8** %aptr9, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 1 %12, i64 4, i1 false)
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf10 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 22
  %aptr11 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf10, i32 0, i32 2
  %14 = load i8*, i8** %aptr11, align 8
  %add.ptr12 = getelementptr inbounds i8, i8* %14, i64 4
  store i8* %add.ptr12, i8** %aptr11, align 8
  br label %if.end

if.else:                                          ; preds = %do.body5
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then7
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end18

if.else13:                                        ; preds = %do.body
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 24
  %16 = load %struct._PerlIO**, %struct._PerlIO*** %fio14, align 8
  %17 = bitcast i32* %nettag to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %16, i8* %17, i64 4)
  %cmp15 = icmp ne i64 %call, 4
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.else13
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end17:                                         ; preds = %if.else13
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %do.end
  br label %do.end19

do.end19:                                         ; preds = %if.end18
  %18 = load i32, i32* %nettag, align 4
  %conv = sext i32 %18 to i64
  store i64 %conv, i64* %tag, align 8
  br label %if.end51

if.else20:                                        ; preds = %if.then
  br label %do.body21

do.body21:                                        ; preds = %if.else20
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 24
  %20 = load %struct._PerlIO**, %struct._PerlIO*** %fio22, align 8
  %tobool23 = icmp ne %struct._PerlIO** %20, null
  br i1 %tobool23, label %if.else42, label %if.then24

if.then24:                                        ; preds = %do.body21
  br label %do.body25

do.body25:                                        ; preds = %if.then24
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 22
  %aptr27 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 2
  %22 = load i8*, i8** %aptr27, align 8
  %add.ptr28 = getelementptr inbounds i8, i8* %22, i64 8
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf29 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 22
  %aend30 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf29, i32 0, i32 3
  %24 = load i8*, i8** %aend30, align 8
  %cmp31 = icmp ule i8* %add.ptr28, %24
  br i1 %cmp31, label %if.then33, label %if.else39

if.then33:                                        ; preds = %do.body25
  %25 = bitcast i64* %tag to i8*
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf34 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 22
  %aptr35 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf34, i32 0, i32 2
  %27 = load i8*, i8** %aptr35, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 1 %27, i64 8, i1 false)
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf36 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 22
  %aptr37 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf36, i32 0, i32 2
  %29 = load i8*, i8** %aptr37, align 8
  %add.ptr38 = getelementptr inbounds i8, i8* %29, i64 8
  store i8* %add.ptr38, i8** %aptr37, align 8
  br label %if.end40

if.else39:                                        ; preds = %do.body25
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end40:                                         ; preds = %if.then33
  br label %do.end41

do.end41:                                         ; preds = %if.end40
  br label %if.end49

if.else42:                                        ; preds = %do.body21
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio43 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 24
  %31 = load %struct._PerlIO**, %struct._PerlIO*** %fio43, align 8
  %32 = bitcast i64* %tag to i8*
  %call44 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %31, i8* %32, i64 8)
  %cmp45 = icmp ne i64 %call44, 8
  br i1 %cmp45, label %if.then47, label %if.end48

if.then47:                                        ; preds = %if.else42
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end48:                                         ; preds = %if.else42
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %do.end41
  br label %do.end50

do.end50:                                         ; preds = %if.end49
  br label %if.end51

if.end51:                                         ; preds = %do.end50, %do.end19
  br label %do.body52

do.body52:                                        ; preds = %if.end51
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio53 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 24
  %34 = load %struct._PerlIO**, %struct._PerlIO*** %fio53, align 8
  %tobool54 = icmp ne %struct._PerlIO** %34, null
  br i1 %tobool54, label %if.else70, label %if.then55

if.then55:                                        ; preds = %do.body52
  br label %do.body56

do.body56:                                        ; preds = %if.then55
  %35 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf57 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %35, i32 0, i32 22
  %aptr58 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf57, i32 0, i32 2
  %36 = load i8*, i8** %aptr58, align 8
  %37 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf59 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %37, i32 0, i32 22
  %aend60 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf59, i32 0, i32 3
  %38 = load i8*, i8** %aend60, align 8
  %cmp61 = icmp ult i8* %36, %38
  br i1 %cmp61, label %if.then63, label %if.else67

if.then63:                                        ; preds = %do.body56
  %39 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf64 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %39, i32 0, i32 22
  %aptr65 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf64, i32 0, i32 2
  %40 = load i8*, i8** %aptr65, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %incdec.ptr, i8** %aptr65, align 8
  %41 = load i8, i8* %40, align 1
  %conv66 = zext i8 %41 to i32
  store i32 %conv66, i32* %type, align 4
  br label %if.end68

if.else67:                                        ; preds = %do.body56
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end68:                                         ; preds = %if.then63
  br label %do.end69

do.end69:                                         ; preds = %if.end68
  br label %if.end77

if.else70:                                        ; preds = %do.body52
  %42 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio71 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %42, i32 0, i32 24
  %43 = load %struct._PerlIO**, %struct._PerlIO*** %fio71, align 8
  %call72 = call i32 @PerlIO_getc(%struct._PerlIO** %43)
  store i32 %call72, i32* %type, align 4
  %cmp73 = icmp eq i32 %call72, -1
  br i1 %cmp73, label %if.then75, label %if.end76

if.then75:                                        ; preds = %if.else70
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end76:                                         ; preds = %if.else70
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %do.end69
  br label %do.end78

do.end78:                                         ; preds = %if.end77
  %44 = load i32, i32* %type, align 4
  %cmp79 = icmp eq i32 %44, 0
  br i1 %cmp79, label %if.then81, label %if.end103

if.then81:                                        ; preds = %do.end78
  %45 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen82 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %45, i32 0, i32 3
  %46 = load %struct.hv*, %struct.hv** %hseen82, align 8
  %47 = bitcast i64* %tag to i8*
  %call83 = call i8* @Perl_hv_common_key_len(%struct.hv* %46, i8* %47, i32 8, i32 32, %struct.sv* null, i32 0)
  %48 = bitcast i8* %call83 to %struct.sv**
  store %struct.sv** %48, %struct.sv*** %svh, align 8
  %49 = load %struct.sv**, %struct.sv*** %svh, align 8
  %tobool84 = icmp ne %struct.sv** %49, null
  br i1 %tobool84, label %if.end88, label %if.then85

if.then85:                                        ; preds = %if.then81
  br label %do.body86

do.body86:                                        ; preds = %if.then85
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %50, i32 0, i32 19
  store i32 1, i32* %s_dirty, align 8
  %51 = load i64, i64* %tag, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.87, i64 0, i64 0), i64 %51)
  br label %do.end87

do.end87:                                         ; preds = %do.body86
  br label %if.end88

if.end88:                                         ; preds = %do.end87, %if.then81
  %52 = load %struct.sv**, %struct.sv*** %svh, align 8
  %53 = load %struct.sv*, %struct.sv** %52, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %53, i32 0, i32 2
  %54 = load i32, i32* %sv_flags, align 4
  %and = and i32 %54, 2097408
  %cmp89 = icmp eq i32 %and, 256
  br i1 %cmp89, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end88
  %55 = load %struct.sv**, %struct.sv*** %svh, align 8
  %56 = load %struct.sv*, %struct.sv** %55, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %56, i32 0, i32 0
  %57 = load i8*, i8** %sv_any, align 8
  %58 = bitcast i8* %57 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %58, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %59 = load i64, i64* %xivu_iv, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end88
  %60 = load %struct.sv**, %struct.sv*** %svh, align 8
  %61 = load %struct.sv*, %struct.sv** %60, align 8
  %call91 = call i64 @Perl_sv_2iv_flags(%struct.sv* %61, i32 2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %59, %cond.true ], [ %call91, %cond.false ]
  %conv92 = trunc i64 %cond to i32
  store i32 %conv92, i32* %tagn, align 4
  %62 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %62, i32 0, i32 5
  %63 = load %struct.av*, %struct.av** %aseen, align 8
  %64 = load i32, i32* %tagn, align 4
  %conv93 = sext i32 %64 to i64
  %call94 = call %struct.sv** @Perl_av_fetch(%struct.av* %63, i64 %conv93, i32 0)
  store %struct.sv** %call94, %struct.sv*** %svh, align 8
  %65 = load %struct.sv**, %struct.sv*** %svh, align 8
  %tobool95 = icmp ne %struct.sv** %65, null
  br i1 %tobool95, label %if.end101, label %if.then96

if.then96:                                        ; preds = %cond.end
  br label %do.body97

do.body97:                                        ; preds = %if.then96
  %66 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty98 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %66, i32 0, i32 19
  store i32 1, i32* %s_dirty98, align 8
  %67 = load i32, i32* %tagn, align 4
  %conv99 = sext i32 %67 to i64
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.69, i64 0, i64 0), i64 %conv99)
  br label %do.end100

do.end100:                                        ; preds = %do.body97
  br label %if.end101

if.end101:                                        ; preds = %do.end100, %cond.end
  %68 = load %struct.sv**, %struct.sv*** %svh, align 8
  %69 = load %struct.sv*, %struct.sv** %68, align 8
  store %struct.sv* %69, %struct.sv** %sv, align 8
  %70 = load %struct.sv*, %struct.sv** %sv, align 8
  %71 = bitcast %struct.sv* %70 to i8*
  %72 = bitcast i8* %71 to %struct.sv*
  %call102 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %72)
  %73 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %73, %struct.sv** %retval, align 8
  br label %return

if.end103:                                        ; preds = %do.end78
  %74 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen104 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %74, i32 0, i32 3
  %75 = load %struct.hv*, %struct.hv** %hseen104, align 8
  %76 = bitcast i64* %tag to i8*
  %77 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %77, i32 0, i32 10
  %78 = load i64, i64* %tagnum, align 8
  %call105 = call %struct.sv* @Perl_newSViv(i64 %78)
  %call106 = call i8* @Perl_hv_common_key_len(%struct.hv* %75, i8* %76, i32 8, i32 36, %struct.sv* %call105, i32 0)
  %79 = bitcast i8* %call106 to %struct.sv**
  %tobool107 = icmp ne %struct.sv** %79, null
  br i1 %tobool107, label %if.end109, label %if.then108

if.then108:                                       ; preds = %if.end103
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end109:                                        ; preds = %if.end103
  br label %first_time

if.end110:                                        ; preds = %entry
  br label %do.body111

do.body111:                                       ; preds = %if.end110
  %80 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio112 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %80, i32 0, i32 24
  %81 = load %struct._PerlIO**, %struct._PerlIO*** %fio112, align 8
  %tobool113 = icmp ne %struct._PerlIO** %81, null
  br i1 %tobool113, label %if.else130, label %if.then114

if.then114:                                       ; preds = %do.body111
  br label %do.body115

do.body115:                                       ; preds = %if.then114
  %82 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf116 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %82, i32 0, i32 22
  %aptr117 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf116, i32 0, i32 2
  %83 = load i8*, i8** %aptr117, align 8
  %84 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf118 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %84, i32 0, i32 22
  %aend119 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf118, i32 0, i32 3
  %85 = load i8*, i8** %aend119, align 8
  %cmp120 = icmp ult i8* %83, %85
  br i1 %cmp120, label %if.then122, label %if.else127

if.then122:                                       ; preds = %do.body115
  %86 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf123 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %86, i32 0, i32 22
  %aptr124 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf123, i32 0, i32 2
  %87 = load i8*, i8** %aptr124, align 8
  %incdec.ptr125 = getelementptr inbounds i8, i8* %87, i32 1
  store i8* %incdec.ptr125, i8** %aptr124, align 8
  %88 = load i8, i8* %87, align 1
  %conv126 = zext i8 %88 to i32
  store i32 %conv126, i32* %type, align 4
  br label %if.end128

if.else127:                                       ; preds = %do.body115
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end128:                                        ; preds = %if.then122
  br label %do.end129

do.end129:                                        ; preds = %if.end128
  br label %if.end137

if.else130:                                       ; preds = %do.body111
  %89 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio131 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %89, i32 0, i32 24
  %90 = load %struct._PerlIO**, %struct._PerlIO*** %fio131, align 8
  %call132 = call i32 @PerlIO_getc(%struct._PerlIO** %90)
  store i32 %call132, i32* %type, align 4
  %cmp133 = icmp eq i32 %call132, -1
  br i1 %cmp133, label %if.then135, label %if.end136

if.then135:                                       ; preds = %if.else130
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end136:                                        ; preds = %if.else130
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %do.end129
  br label %do.end138

do.end138:                                        ; preds = %if.end137
  %91 = load i32, i32* %type, align 4
  %cmp139 = icmp eq i32 %91, 0
  br i1 %cmp139, label %if.then141, label %if.else197

if.then141:                                       ; preds = %do.end138
  br label %do.body143

do.body143:                                       ; preds = %if.then141
  %92 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio144 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %92, i32 0, i32 24
  %93 = load %struct._PerlIO**, %struct._PerlIO*** %fio144, align 8
  %tobool145 = icmp ne %struct._PerlIO** %93, null
  br i1 %tobool145, label %if.else176, label %if.then146

if.then146:                                       ; preds = %do.body143
  br label %do.body147

do.body147:                                       ; preds = %if.then146
  %94 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf148 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %94, i32 0, i32 22
  %aptr149 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf148, i32 0, i32 2
  %95 = load i8*, i8** %aptr149, align 8
  %add.ptr150 = getelementptr inbounds i8, i8* %95, i64 4
  %96 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf151 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %96, i32 0, i32 22
  %aend152 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf151, i32 0, i32 3
  %97 = load i8*, i8** %aend152, align 8
  %cmp153 = icmp ule i8* %add.ptr150, %97
  br i1 %cmp153, label %if.then155, label %if.else173

if.then155:                                       ; preds = %do.body147
  %98 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf156 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %98, i32 0, i32 22
  %aptr157 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf156, i32 0, i32 2
  %99 = load i8*, i8** %aptr157, align 8
  %100 = ptrtoint i8* %99 to i64
  %101 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf158 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %101, i32 0, i32 22
  %aptr159 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf158, i32 0, i32 2
  %102 = load i8*, i8** %aptr159, align 8
  %103 = ptrtoint i8* %102 to i64
  %and160 = and i64 %103, -4
  %cmp161 = icmp eq i64 %100, %and160
  br i1 %cmp161, label %if.then163, label %if.else166

if.then163:                                       ; preds = %if.then155
  %104 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf164 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %104, i32 0, i32 22
  %aptr165 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf164, i32 0, i32 2
  %105 = load i8*, i8** %aptr165, align 8
  %106 = bitcast i8* %105 to i32*
  %107 = load i32, i32* %106, align 4
  store i32 %107, i32* %tag142, align 4
  br label %if.end169

if.else166:                                       ; preds = %if.then155
  %108 = bitcast i32* %tag142 to i8*
  %109 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf167 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %109, i32 0, i32 22
  %aptr168 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf167, i32 0, i32 2
  %110 = load i8*, i8** %aptr168, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 1 %110, i64 4, i1 false)
  br label %if.end169

if.end169:                                        ; preds = %if.else166, %if.then163
  %111 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf170 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %111, i32 0, i32 22
  %aptr171 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf170, i32 0, i32 2
  %112 = load i8*, i8** %aptr171, align 8
  %add.ptr172 = getelementptr inbounds i8, i8* %112, i64 4
  store i8* %add.ptr172, i8** %aptr171, align 8
  br label %if.end174

if.else173:                                       ; preds = %do.body147
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end174:                                        ; preds = %if.end169
  br label %do.end175

do.end175:                                        ; preds = %if.end174
  br label %if.end183

if.else176:                                       ; preds = %do.body143
  %113 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio177 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %113, i32 0, i32 24
  %114 = load %struct._PerlIO**, %struct._PerlIO*** %fio177, align 8
  %115 = bitcast i32* %tag142 to i8*
  %call178 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %114, i8* %115, i64 4)
  %cmp179 = icmp ne i64 %call178, 4
  br i1 %cmp179, label %if.then181, label %if.end182

if.then181:                                       ; preds = %if.else176
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end182:                                        ; preds = %if.else176
  br label %if.end183

if.end183:                                        ; preds = %if.end182, %do.end175
  br label %do.end184

do.end184:                                        ; preds = %if.end183
  %116 = load i32, i32* %tag142, align 4
  %call185 = call i32 @my_swap32(i32 %116)
  store i32 %call185, i32* %tag142, align 4
  %117 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen186 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %117, i32 0, i32 5
  %118 = load %struct.av*, %struct.av** %aseen186, align 8
  %119 = load i32, i32* %tag142, align 4
  %conv187 = sext i32 %119 to i64
  %call188 = call %struct.sv** @Perl_av_fetch(%struct.av* %118, i64 %conv187, i32 0)
  store %struct.sv** %call188, %struct.sv*** %svh, align 8
  %120 = load %struct.sv**, %struct.sv*** %svh, align 8
  %tobool189 = icmp ne %struct.sv** %120, null
  br i1 %tobool189, label %if.end195, label %if.then190

if.then190:                                       ; preds = %do.end184
  br label %do.body191

do.body191:                                       ; preds = %if.then190
  %121 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty192 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %121, i32 0, i32 19
  store i32 1, i32* %s_dirty192, align 8
  %122 = load i32, i32* %tag142, align 4
  %conv193 = sext i32 %122 to i64
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.69, i64 0, i64 0), i64 %conv193)
  br label %do.end194

do.end194:                                        ; preds = %do.body191
  br label %if.end195

if.end195:                                        ; preds = %do.end194, %do.end184
  %123 = load %struct.sv**, %struct.sv*** %svh, align 8
  %124 = load %struct.sv*, %struct.sv** %123, align 8
  store %struct.sv* %124, %struct.sv** %sv, align 8
  %125 = load %struct.sv*, %struct.sv** %sv, align 8
  %126 = bitcast %struct.sv* %125 to i8*
  %127 = bitcast i8* %126 to %struct.sv*
  %call196 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %127)
  %128 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %128, %struct.sv** %retval, align 8
  br label %return

if.else197:                                       ; preds = %do.end138
  %129 = load i32, i32* %type, align 4
  %cmp198 = icmp sge i32 %129, 32
  br i1 %cmp198, label %land.lhs.true, label %if.end325

land.lhs.true:                                    ; preds = %if.else197
  %130 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_minor = getelementptr inbounds %struct.stcxt, %struct.stcxt* %130, i32 0, i32 26
  %131 = load i32, i32* %ver_minor, align 4
  %cmp200 = icmp sgt i32 %131, 10
  br i1 %cmp200, label %if.then202, label %if.end325

if.then202:                                       ; preds = %land.lhs.true
  %132 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %accept_future_minor = getelementptr inbounds %struct.stcxt, %struct.stcxt* %132, i32 0, i32 18
  %133 = load i32, i32* %accept_future_minor, align 4
  %cmp203 = icmp slt i32 %133, 0
  br i1 %cmp203, label %if.then205, label %if.end315

if.then205:                                       ; preds = %if.then202
  %call206 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %tobool207 = icmp ne %struct.sv* %call206, null
  br i1 %tobool207, label %cond.true208, label %cond.false209

cond.true208:                                     ; preds = %if.then205
  br i1 true, label %land.rhs, label %land.end311

cond.false209:                                    ; preds = %if.then205
  br i1 false, label %land.rhs, label %land.end311

land.rhs:                                         ; preds = %cond.false209, %cond.true208
  %call210 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_flags211 = getelementptr inbounds %struct.sv, %struct.sv* %call210, i32 0, i32 2
  %134 = load i32, i32* %sv_flags211, align 4
  %and212 = and i32 %134, 2097152
  %tobool213 = icmp ne i32 %and212, 0
  br i1 %tobool213, label %cond.true214, label %cond.false215

cond.true214:                                     ; preds = %land.rhs
  br i1 true, label %cond.true216, label %cond.false220

cond.false215:                                    ; preds = %land.rhs
  br i1 false, label %cond.true216, label %cond.false220

cond.true216:                                     ; preds = %cond.false215, %cond.true214
  %call217 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %call218 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %call217, i32 2)
  %conv219 = zext i1 %call218 to i32
  br label %cond.end308

cond.false220:                                    ; preds = %cond.false215, %cond.true214
  %call221 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_flags222 = getelementptr inbounds %struct.sv, %struct.sv* %call221, i32 0, i32 2
  %135 = load i32, i32* %sv_flags222, align 4
  %and223 = and i32 %135, 65280
  %tobool224 = icmp ne i32 %and223, 0
  br i1 %tobool224, label %cond.false237, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.false220
  %call225 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_flags226 = getelementptr inbounds %struct.sv, %struct.sv* %call225, i32 0, i32 2
  %136 = load i32, i32* %sv_flags226, align 4
  %and227 = and i32 %136, 255
  %cmp228 = icmp eq i32 %and227, 8
  br i1 %cmp228, label %cond.false237, label %lor.lhs.false230

lor.lhs.false230:                                 ; preds = %lor.lhs.false
  %call231 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_flags232 = getelementptr inbounds %struct.sv, %struct.sv* %call231, i32 0, i32 2
  %137 = load i32, i32* %sv_flags232, align 4
  %and233 = and i32 %137, 16826623
  %cmp234 = icmp eq i32 %and233, 16777226
  br i1 %cmp234, label %cond.false237, label %cond.true236

cond.true236:                                     ; preds = %lor.lhs.false230
  br label %cond.end306

cond.false237:                                    ; preds = %lor.lhs.false230, %lor.lhs.false, %cond.false220
  %call238 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_flags239 = getelementptr inbounds %struct.sv, %struct.sv* %call238, i32 0, i32 2
  %138 = load i32, i32* %sv_flags239, align 4
  %and240 = and i32 %138, 1024
  %tobool241 = icmp ne i32 %and240, 0
  br i1 %tobool241, label %cond.true242, label %cond.false261

cond.true242:                                     ; preds = %cond.false237
  %call243 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_any244 = getelementptr inbounds %struct.sv, %struct.sv* %call243, i32 0, i32 0
  %139 = load i8*, i8** %sv_any244, align 8
  %140 = bitcast i8* %139 to %struct.xpv*
  %tobool245 = icmp ne %struct.xpv* %140, null
  br i1 %tobool245, label %land.rhs246, label %land.end260

land.rhs246:                                      ; preds = %cond.true242
  %call247 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_any248 = getelementptr inbounds %struct.sv, %struct.sv* %call247, i32 0, i32 0
  %141 = load i8*, i8** %sv_any248, align 8
  %142 = bitcast i8* %141 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %142, i32 0, i32 2
  %143 = load i64, i64* %xpv_cur, align 8
  %cmp249 = icmp ugt i64 %143, 1
  br i1 %cmp249, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs246
  %call251 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_any252 = getelementptr inbounds %struct.sv, %struct.sv* %call251, i32 0, i32 0
  %144 = load i8*, i8** %sv_any252, align 8
  %145 = bitcast i8* %144 to %struct.xpv*
  %xpv_cur253 = getelementptr inbounds %struct.xpv, %struct.xpv* %145, i32 0, i32 2
  %146 = load i64, i64* %xpv_cur253, align 8
  %tobool254 = icmp ne i64 %146, 0
  br i1 %tobool254, label %land.rhs255, label %land.end

land.rhs255:                                      ; preds = %lor.rhs
  %call256 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %call256, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %147 = load i8*, i8** %svu_pv, align 8
  %148 = load i8, i8* %147, align 1
  %conv257 = sext i8 %148 to i32
  %cmp258 = icmp ne i32 %conv257, 48
  br label %land.end

land.end:                                         ; preds = %land.rhs255, %lor.rhs
  %149 = phi i1 [ false, %lor.rhs ], [ %cmp258, %land.rhs255 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.rhs246
  %150 = phi i1 [ true, %land.rhs246 ], [ %149, %land.end ]
  br label %land.end260

land.end260:                                      ; preds = %lor.end, %cond.true242
  %151 = phi i1 [ false, %cond.true242 ], [ %150, %lor.end ]
  %land.ext = zext i1 %151 to i32
  br label %cond.end304

cond.false261:                                    ; preds = %cond.false237
  %call262 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_flags263 = getelementptr inbounds %struct.sv, %struct.sv* %call262, i32 0, i32 2
  %152 = load i32, i32* %sv_flags263, align 4
  %and264 = and i32 %152, 768
  %tobool265 = icmp ne i32 %and264, 0
  br i1 %tobool265, label %cond.true266, label %cond.false298

cond.true266:                                     ; preds = %cond.false261
  %call267 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_flags268 = getelementptr inbounds %struct.sv, %struct.sv* %call267, i32 0, i32 2
  %153 = load i32, i32* %sv_flags268, align 4
  %and269 = and i32 %153, 256
  %tobool270 = icmp ne i32 %and269, 0
  br i1 %tobool270, label %land.lhs.true271, label %lor.rhs278

land.lhs.true271:                                 ; preds = %cond.true266
  %call272 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_any273 = getelementptr inbounds %struct.sv, %struct.sv* %call272, i32 0, i32 0
  %154 = load i8*, i8** %sv_any273, align 8
  %155 = bitcast i8* %154 to %struct.xpviv*
  %xiv_u274 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %155, i32 0, i32 4
  %xivu_iv275 = bitcast %union._xivu* %xiv_u274 to i64*
  %156 = load i64, i64* %xivu_iv275, align 8
  %cmp276 = icmp ne i64 %156, 0
  br i1 %cmp276, label %lor.end297, label %lor.rhs278

lor.rhs278:                                       ; preds = %land.lhs.true271, %cond.true266
  %call279 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_flags280 = getelementptr inbounds %struct.sv, %struct.sv* %call279, i32 0, i32 2
  %157 = load i32, i32* %sv_flags280, align 4
  %and281 = and i32 %157, 512
  %tobool282 = icmp ne i32 %and281, 0
  br i1 %tobool282, label %land.rhs283, label %land.end295

land.rhs283:                                      ; preds = %lor.rhs278
  %call284 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_any285 = getelementptr inbounds %struct.sv, %struct.sv* %call284, i32 0, i32 0
  %158 = load i8*, i8** %sv_any285, align 8
  %159 = bitcast i8* %158 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %159, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %160 = load double, double* %xnv_nv, align 8
  %cmp286 = fcmp uno double %160, %160
  br i1 %cmp286, label %lor.end294, label %lor.rhs287

lor.rhs287:                                       ; preds = %land.rhs283
  %call288 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %sv_any289 = getelementptr inbounds %struct.sv, %struct.sv* %call288, i32 0, i32 0
  %161 = load i8*, i8** %sv_any289, align 8
  %162 = bitcast i8* %161 to %struct.xpvnv*
  %xnv_u290 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %162, i32 0, i32 5
  %xnv_nv291 = bitcast %union._xnvu* %xnv_u290 to double*
  %163 = load double, double* %xnv_nv291, align 8
  %cmp292 = fcmp une double %163, 0.000000e+00
  br label %lor.end294

lor.end294:                                       ; preds = %lor.rhs287, %land.rhs283
  %164 = phi i1 [ true, %land.rhs283 ], [ %cmp292, %lor.rhs287 ]
  br label %land.end295

land.end295:                                      ; preds = %lor.end294, %lor.rhs278
  %165 = phi i1 [ false, %lor.rhs278 ], [ %164, %lor.end294 ]
  br label %lor.end297

lor.end297:                                       ; preds = %land.end295, %land.lhs.true271
  %166 = phi i1 [ true, %land.lhs.true271 ], [ %165, %land.end295 ]
  %lor.ext = zext i1 %166 to i32
  br label %cond.end302

cond.false298:                                    ; preds = %cond.false261
  %call299 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 1)
  %call300 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %call299, i32 0)
  %conv301 = zext i1 %call300 to i32
  br label %cond.end302

cond.end302:                                      ; preds = %cond.false298, %lor.end297
  %cond303 = phi i32 [ %lor.ext, %lor.end297 ], [ %conv301, %cond.false298 ]
  br label %cond.end304

cond.end304:                                      ; preds = %cond.end302, %land.end260
  %cond305 = phi i32 [ %land.ext, %land.end260 ], [ %cond303, %cond.end302 ]
  br label %cond.end306

cond.end306:                                      ; preds = %cond.end304, %cond.true236
  %cond307 = phi i32 [ 0, %cond.true236 ], [ %cond305, %cond.end304 ]
  br label %cond.end308

cond.end308:                                      ; preds = %cond.end306, %cond.true216
  %cond309 = phi i32 [ %conv219, %cond.true216 ], [ %cond307, %cond.end306 ]
  %tobool310 = icmp ne i32 %cond309, 0
  br label %land.end311

land.end311:                                      ; preds = %cond.end308, %cond.false209, %cond.true208
  %167 = phi i1 [ false, %cond.false209 ], [ false, %cond.true208 ], [ %tobool310, %cond.end308 ]
  %168 = zext i1 %167 to i64
  %cond313 = select i1 %167, i32 1, i32 0
  %169 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %accept_future_minor314 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %169, i32 0, i32 18
  store i32 %cond313, i32* %accept_future_minor314, align 4
  br label %if.end315

if.end315:                                        ; preds = %land.end311, %if.then202
  %170 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %accept_future_minor316 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %170, i32 0, i32 18
  %171 = load i32, i32* %accept_future_minor316, align 4
  %cmp317 = icmp eq i32 %171, 1
  br i1 %cmp317, label %if.then319, label %if.end324

if.then319:                                       ; preds = %if.end315
  br label %do.body320

do.body320:                                       ; preds = %if.then319
  %172 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty321 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %172, i32 0, i32 19
  store i32 1, i32* %s_dirty321, align 8
  %173 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_major = getelementptr inbounds %struct.stcxt, %struct.stcxt* %173, i32 0, i32 25
  %174 = load i32, i32* %ver_major, align 8
  %175 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_minor322 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %175, i32 0, i32 26
  %176 = load i32, i32* %ver_minor322, align 4
  %177 = load i32, i32* %type, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([119 x i8], [119 x i8]* @.str.88, i64 0, i64 0), i32 %174, i32 %176, i32 %177, i32 2, i32 10, i32 31)
  br label %do.end323

do.end323:                                        ; preds = %do.body320
  br label %if.end324

if.end324:                                        ; preds = %do.end323, %if.end315
  br label %if.end325

if.end325:                                        ; preds = %if.end324, %land.lhs.true, %if.else197
  br label %if.end326

if.end326:                                        ; preds = %if.end325
  br label %first_time

first_time:                                       ; preds = %if.end326, %if.end109
  %178 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %retrieve_vtbl = getelementptr inbounds %struct.stcxt, %struct.stcxt* %178, i32 0, i32 27
  %179 = load %struct.sv* (%struct.stcxt*, i8*)**, %struct.sv* (%struct.stcxt*, i8*)*** %retrieve_vtbl, align 8
  %180 = load i32, i32* %type, align 4
  %cmp327 = icmp sge i32 %180, 32
  br i1 %cmp327, label %cond.true329, label %cond.false330

cond.true329:                                     ; preds = %first_time
  br label %cond.end331

cond.false330:                                    ; preds = %first_time
  %181 = load i32, i32* %type, align 4
  br label %cond.end331

cond.end331:                                      ; preds = %cond.false330, %cond.true329
  %cond332 = phi i32 [ 32, %cond.true329 ], [ %181, %cond.false330 ]
  %idxprom = sext i32 %cond332 to i64
  %arrayidx = getelementptr inbounds %struct.sv* (%struct.stcxt*, i8*)*, %struct.sv* (%struct.stcxt*, i8*)** %179, i64 %idxprom
  %182 = load %struct.sv* (%struct.stcxt*, i8*)*, %struct.sv* (%struct.stcxt*, i8*)** %arrayidx, align 8
  %183 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %184 = load i8*, i8** %cname.addr, align 8
  %call333 = call %struct.sv* %182(%struct.stcxt* %183, i8* %184)
  store %struct.sv* %call333, %struct.sv** %sv, align 8
  %185 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool334 = icmp ne %struct.sv* %185, null
  br i1 %tobool334, label %if.end336, label %if.then335

if.then335:                                       ; preds = %cond.end331
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end336:                                        ; preds = %cond.end331
  %186 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_major337 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %186, i32 0, i32 25
  %187 = load i32, i32* %ver_major337, align 8
  %cmp338 = icmp slt i32 %187, 2
  br i1 %cmp338, label %if.then340, label %if.end592

if.then340:                                       ; preds = %if.end336
  br label %while.cond

while.cond:                                       ; preds = %do.end591, %if.then340
  %188 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio341 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %188, i32 0, i32 24
  %189 = load %struct._PerlIO**, %struct._PerlIO*** %fio341, align 8
  %tobool342 = icmp ne %struct._PerlIO** %189, null
  br i1 %tobool342, label %cond.true343, label %cond.false346

cond.true343:                                     ; preds = %while.cond
  %190 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio344 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %190, i32 0, i32 24
  %191 = load %struct._PerlIO**, %struct._PerlIO*** %fio344, align 8
  %call345 = call i32 @PerlIO_getc(%struct._PerlIO** %191)
  br label %cond.end361

cond.false346:                                    ; preds = %while.cond
  %192 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf347 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %192, i32 0, i32 22
  %aptr348 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf347, i32 0, i32 2
  %193 = load i8*, i8** %aptr348, align 8
  %194 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf349 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %194, i32 0, i32 22
  %aend350 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf349, i32 0, i32 3
  %195 = load i8*, i8** %aend350, align 8
  %cmp351 = icmp uge i8* %193, %195
  br i1 %cmp351, label %cond.true353, label %cond.false354

cond.true353:                                     ; preds = %cond.false346
  br label %cond.end359

cond.false354:                                    ; preds = %cond.false346
  %196 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf355 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %196, i32 0, i32 22
  %aptr356 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf355, i32 0, i32 2
  %197 = load i8*, i8** %aptr356, align 8
  %incdec.ptr357 = getelementptr inbounds i8, i8* %197, i32 1
  store i8* %incdec.ptr357, i8** %aptr356, align 8
  %198 = load i8, i8* %197, align 1
  %conv358 = sext i8 %198 to i32
  br label %cond.end359

cond.end359:                                      ; preds = %cond.false354, %cond.true353
  %cond360 = phi i32 [ -1, %cond.true353 ], [ %conv358, %cond.false354 ]
  br label %cond.end361

cond.end361:                                      ; preds = %cond.end359, %cond.true343
  %cond362 = phi i32 [ %call345, %cond.true343 ], [ %cond360, %cond.end359 ]
  store i32 %cond362, i32* %type, align 4
  %cmp363 = icmp ne i32 %cond362, 88
  br i1 %cmp363, label %while.body, label %while.end

while.body:                                       ; preds = %cond.end361
  %199 = load i32, i32* %type, align 4
  switch i32 %199, label %sw.default [
    i32 98, label %sw.bb
    i32 66, label %sw.bb393
    i32 -1, label %sw.bb441
  ]

sw.bb:                                            ; preds = %while.body
  br label %do.body365

do.body365:                                       ; preds = %sw.bb
  %200 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio366 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %200, i32 0, i32 24
  %201 = load %struct._PerlIO**, %struct._PerlIO*** %fio366, align 8
  %tobool367 = icmp ne %struct._PerlIO** %201, null
  br i1 %tobool367, label %if.else384, label %if.then368

if.then368:                                       ; preds = %do.body365
  br label %do.body369

do.body369:                                       ; preds = %if.then368
  %202 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf370 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %202, i32 0, i32 22
  %aptr371 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf370, i32 0, i32 2
  %203 = load i8*, i8** %aptr371, align 8
  %204 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf372 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %204, i32 0, i32 22
  %aend373 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf372, i32 0, i32 3
  %205 = load i8*, i8** %aend373, align 8
  %cmp374 = icmp ult i8* %203, %205
  br i1 %cmp374, label %if.then376, label %if.else381

if.then376:                                       ; preds = %do.body369
  %206 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf377 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %206, i32 0, i32 22
  %aptr378 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf377, i32 0, i32 2
  %207 = load i8*, i8** %aptr378, align 8
  %incdec.ptr379 = getelementptr inbounds i8, i8* %207, i32 1
  store i8* %incdec.ptr379, i8** %aptr378, align 8
  %208 = load i8, i8* %207, align 1
  %conv380 = zext i8 %208 to i32
  store i32 %conv380, i32* %len, align 4
  br label %if.end382

if.else381:                                       ; preds = %do.body369
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end382:                                        ; preds = %if.then376
  br label %do.end383

do.end383:                                        ; preds = %if.end382
  br label %if.end391

if.else384:                                       ; preds = %do.body365
  %209 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio385 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %209, i32 0, i32 24
  %210 = load %struct._PerlIO**, %struct._PerlIO*** %fio385, align 8
  %call386 = call i32 @PerlIO_getc(%struct._PerlIO** %210)
  store i32 %call386, i32* %len, align 4
  %cmp387 = icmp eq i32 %call386, -1
  br i1 %cmp387, label %if.then389, label %if.end390

if.then389:                                       ; preds = %if.else384
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end390:                                        ; preds = %if.else384
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %do.end383
  br label %do.end392

do.end392:                                        ; preds = %if.end391
  br label %sw.epilog

sw.bb393:                                         ; preds = %while.body
  br label %do.body394

do.body394:                                       ; preds = %sw.bb393
  %211 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio395 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %211, i32 0, i32 24
  %212 = load %struct._PerlIO**, %struct._PerlIO*** %fio395, align 8
  %tobool396 = icmp ne %struct._PerlIO** %212, null
  br i1 %tobool396, label %if.else427, label %if.then397

if.then397:                                       ; preds = %do.body394
  br label %do.body398

do.body398:                                       ; preds = %if.then397
  %213 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf399 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %213, i32 0, i32 22
  %aptr400 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf399, i32 0, i32 2
  %214 = load i8*, i8** %aptr400, align 8
  %add.ptr401 = getelementptr inbounds i8, i8* %214, i64 4
  %215 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf402 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %215, i32 0, i32 22
  %aend403 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf402, i32 0, i32 3
  %216 = load i8*, i8** %aend403, align 8
  %cmp404 = icmp ule i8* %add.ptr401, %216
  br i1 %cmp404, label %if.then406, label %if.else424

if.then406:                                       ; preds = %do.body398
  %217 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf407 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %217, i32 0, i32 22
  %aptr408 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf407, i32 0, i32 2
  %218 = load i8*, i8** %aptr408, align 8
  %219 = ptrtoint i8* %218 to i64
  %220 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf409 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %220, i32 0, i32 22
  %aptr410 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf409, i32 0, i32 2
  %221 = load i8*, i8** %aptr410, align 8
  %222 = ptrtoint i8* %221 to i64
  %and411 = and i64 %222, -4
  %cmp412 = icmp eq i64 %219, %and411
  br i1 %cmp412, label %if.then414, label %if.else417

if.then414:                                       ; preds = %if.then406
  %223 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf415 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %223, i32 0, i32 22
  %aptr416 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf415, i32 0, i32 2
  %224 = load i8*, i8** %aptr416, align 8
  %225 = bitcast i8* %224 to i32*
  %226 = load i32, i32* %225, align 4
  store i32 %226, i32* %len, align 4
  br label %if.end420

if.else417:                                       ; preds = %if.then406
  %227 = bitcast i32* %len to i8*
  %228 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf418 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %228, i32 0, i32 22
  %aptr419 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf418, i32 0, i32 2
  %229 = load i8*, i8** %aptr419, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %227, i8* align 1 %229, i64 4, i1 false)
  br label %if.end420

if.end420:                                        ; preds = %if.else417, %if.then414
  %230 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf421 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %230, i32 0, i32 22
  %aptr422 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf421, i32 0, i32 2
  %231 = load i8*, i8** %aptr422, align 8
  %add.ptr423 = getelementptr inbounds i8, i8* %231, i64 4
  store i8* %add.ptr423, i8** %aptr422, align 8
  br label %if.end425

if.else424:                                       ; preds = %do.body398
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end425:                                        ; preds = %if.end420
  br label %do.end426

do.end426:                                        ; preds = %if.end425
  br label %if.end434

if.else427:                                       ; preds = %do.body394
  %232 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio428 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %232, i32 0, i32 24
  %233 = load %struct._PerlIO**, %struct._PerlIO*** %fio428, align 8
  %234 = bitcast i32* %len to i8*
  %call429 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %233, i8* %234, i64 4)
  %cmp430 = icmp ne i64 %call429, 4
  br i1 %cmp430, label %if.then432, label %if.end433

if.then432:                                       ; preds = %if.else427
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end433:                                        ; preds = %if.else427
  br label %if.end434

if.end434:                                        ; preds = %if.end433, %do.end426
  %235 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder435 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %235, i32 0, i32 12
  %236 = load i32, i32* %netorder435, align 8
  %tobool436 = icmp ne i32 %236, 0
  br i1 %tobool436, label %if.then437, label %if.end439

if.then437:                                       ; preds = %if.end434
  %237 = load i32, i32* %len, align 4
  %call438 = call i32 @my_swap32(i32 %237)
  store i32 %call438, i32* %len, align 4
  br label %if.end439

if.end439:                                        ; preds = %if.then437, %if.end434
  br label %do.end440

do.end440:                                        ; preds = %if.end439
  br label %sw.epilog

sw.bb441:                                         ; preds = %while.body
  br label %sw.default

sw.default:                                       ; preds = %while.body, %sw.bb441
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

sw.epilog:                                        ; preds = %do.end440, %do.end392
  br label %do.body442

do.body442:                                       ; preds = %sw.epilog
  %238 = load i32, i32* %len, align 4
  %conv443 = sext i32 %238 to i64
  %239 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %239, i32 0, i32 21
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf, i32 0, i32 1
  %240 = load i64, i64* %asiz, align 8
  %cmp444 = icmp uge i64 %conv443, %240
  br i1 %cmp444, label %if.then446, label %if.end456

if.then446:                                       ; preds = %do.body442
  %241 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf447 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %241, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf447, i32 0, i32 0
  %242 = load i8*, i8** %arena, align 8
  %243 = load i32, i32* %len, align 4
  %conv448 = sext i32 %243 to i64
  %add = add i64 %conv448, 1
  %mul = mul i64 %add, 1
  %call449 = call i8* @Perl_safesysrealloc(i8* %242, i64 %mul)
  %244 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf450 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %244, i32 0, i32 21
  %arena451 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf450, i32 0, i32 0
  store i8* %call449, i8** %arena451, align 8
  %245 = load i32, i32* %len, align 4
  %conv452 = sext i32 %245 to i64
  %add453 = add i64 %conv452, 1
  %246 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf454 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %246, i32 0, i32 21
  %asiz455 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf454, i32 0, i32 1
  store i64 %add453, i64* %asiz455, align 8
  br label %if.end456

if.end456:                                        ; preds = %if.then446, %do.body442
  br label %do.end457

do.end457:                                        ; preds = %if.end456
  %247 = load i32, i32* %len, align 4
  %tobool458 = icmp ne i32 %247, 0
  br i1 %tobool458, label %if.then459, label %if.end498

if.then459:                                       ; preds = %do.end457
  br label %do.body460

do.body460:                                       ; preds = %if.then459
  %248 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio461 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %248, i32 0, i32 24
  %249 = load %struct._PerlIO**, %struct._PerlIO*** %fio461, align 8
  %tobool462 = icmp ne %struct._PerlIO** %249, null
  br i1 %tobool462, label %if.else485, label %if.then463

if.then463:                                       ; preds = %do.body460
  br label %do.body464

do.body464:                                       ; preds = %if.then463
  %250 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf465 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %250, i32 0, i32 22
  %aptr466 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf465, i32 0, i32 2
  %251 = load i8*, i8** %aptr466, align 8
  %252 = load i32, i32* %len, align 4
  %idx.ext = sext i32 %252 to i64
  %add.ptr467 = getelementptr inbounds i8, i8* %251, i64 %idx.ext
  %253 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf468 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %253, i32 0, i32 22
  %aend469 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf468, i32 0, i32 3
  %254 = load i8*, i8** %aend469, align 8
  %cmp470 = icmp ule i8* %add.ptr467, %254
  br i1 %cmp470, label %if.then472, label %if.else482

if.then472:                                       ; preds = %do.body464
  %255 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf473 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %255, i32 0, i32 21
  %arena474 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf473, i32 0, i32 0
  %256 = load i8*, i8** %arena474, align 8
  %257 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf475 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %257, i32 0, i32 22
  %aptr476 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf475, i32 0, i32 2
  %258 = load i8*, i8** %aptr476, align 8
  %259 = load i32, i32* %len, align 4
  %conv477 = sext i32 %259 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %256, i8* align 1 %258, i64 %conv477, i1 false)
  %260 = load i32, i32* %len, align 4
  %261 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf478 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %261, i32 0, i32 22
  %aptr479 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf478, i32 0, i32 2
  %262 = load i8*, i8** %aptr479, align 8
  %idx.ext480 = sext i32 %260 to i64
  %add.ptr481 = getelementptr inbounds i8, i8* %262, i64 %idx.ext480
  store i8* %add.ptr481, i8** %aptr479, align 8
  br label %if.end483

if.else482:                                       ; preds = %do.body464
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end483:                                        ; preds = %if.then472
  br label %do.end484

do.end484:                                        ; preds = %if.end483
  br label %if.end496

if.else485:                                       ; preds = %do.body460
  %263 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio486 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %263, i32 0, i32 24
  %264 = load %struct._PerlIO**, %struct._PerlIO*** %fio486, align 8
  %265 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf487 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %265, i32 0, i32 21
  %arena488 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf487, i32 0, i32 0
  %266 = load i8*, i8** %arena488, align 8
  %267 = load i32, i32* %len, align 4
  %conv489 = sext i32 %267 to i64
  %call490 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %264, i8* %266, i64 %conv489)
  %268 = load i32, i32* %len, align 4
  %conv491 = sext i32 %268 to i64
  %cmp492 = icmp ne i64 %call490, %conv491
  br i1 %cmp492, label %if.then494, label %if.end495

if.then494:                                       ; preds = %if.else485
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end495:                                        ; preds = %if.else485
  br label %if.end496

if.end496:                                        ; preds = %if.end495, %do.end484
  br label %do.end497

do.end497:                                        ; preds = %if.end496
  br label %if.end498

if.end498:                                        ; preds = %do.end497, %do.end457
  %269 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf499 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %269, i32 0, i32 21
  %arena500 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf499, i32 0, i32 0
  %270 = load i8*, i8** %arena500, align 8
  %271 = load i32, i32* %len, align 4
  %idxprom501 = sext i32 %271 to i64
  %arrayidx502 = getelementptr inbounds i8, i8* %270, i64 %idxprom501
  store i8 0, i8* %arrayidx502, align 1
  %272 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf503 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %272, i32 0, i32 21
  %arena504 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf503, i32 0, i32 0
  %273 = load i8*, i8** %arena504, align 8
  %274 = load i32, i32* %len, align 4
  %call505 = call %struct.hv* @Perl_gv_stashpvn(i8* %273, i32 %274, i32 1)
  store %struct.hv* %call505, %struct.hv** %stash, align 8
  br label %do.body506

do.body506:                                       ; preds = %if.end498
  %275 = load %struct.sv*, %struct.sv** %sv, align 8
  %call507 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %275)
  store %struct.sv* %call507, %struct.sv** %ref, align 8
  %276 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %276, i32 0, i32 30
  %277 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool508 = icmp ne i32 %277, 0
  br i1 %tobool508, label %land.lhs.true509, label %if.end586

land.lhs.true509:                                 ; preds = %do.body506
  %278 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags510 = getelementptr inbounds %struct.hv, %struct.hv* %278, i32 0, i32 2
  %279 = load i32, i32* %sv_flags510, align 4
  %and511 = and i32 %279, 33554432
  %tobool512 = icmp ne i32 %and511, 0
  br i1 %tobool512, label %land.lhs.true513, label %cond.false576

land.lhs.true513:                                 ; preds = %land.lhs.true509
  %280 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u514 = getelementptr inbounds %struct.hv, %struct.hv* %280, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u514 to %struct.he***
  %281 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %282 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any515 = getelementptr inbounds %struct.hv, %struct.hv* %282, i32 0, i32 0
  %283 = load %struct.xpvhv*, %struct.xpvhv** %sv_any515, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %283, i32 0, i32 3
  %284 = load i64, i64* %xhv_max, align 8
  %add516 = add i64 %284, 1
  %arrayidx517 = getelementptr inbounds %struct.he*, %struct.he** %281, i64 %add516
  %285 = bitcast %struct.he** %arrayidx517 to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %285, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %286 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool518 = icmp ne %struct.hek* %286, null
  br i1 %tobool518, label %land.lhs.true519, label %cond.false576

land.lhs.true519:                                 ; preds = %land.lhs.true513
  %287 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u520 = getelementptr inbounds %struct.hv, %struct.hv* %287, i32 0, i32 3
  %svu_hash521 = bitcast %union.anon.4* %sv_u520 to %struct.he***
  %288 = load %struct.he**, %struct.he*** %svu_hash521, align 8
  %289 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any522 = getelementptr inbounds %struct.hv, %struct.hv* %289, i32 0, i32 0
  %290 = load %struct.xpvhv*, %struct.xpvhv** %sv_any522, align 8
  %xhv_max523 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %290, i32 0, i32 3
  %291 = load i64, i64* %xhv_max523, align 8
  %add524 = add i64 %291, 1
  %arrayidx525 = getelementptr inbounds %struct.he*, %struct.he** %288, i64 %add524
  %292 = bitcast %struct.he** %arrayidx525 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %292, i32 0, i32 4
  %293 = load i32, i32* %xhv_name_count, align 4
  %tobool526 = icmp ne i32 %293, 0
  br i1 %tobool526, label %cond.true527, label %cond.false536

cond.true527:                                     ; preds = %land.lhs.true519
  %294 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u528 = getelementptr inbounds %struct.hv, %struct.hv* %294, i32 0, i32 3
  %svu_hash529 = bitcast %union.anon.4* %sv_u528 to %struct.he***
  %295 = load %struct.he**, %struct.he*** %svu_hash529, align 8
  %296 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any530 = getelementptr inbounds %struct.hv, %struct.hv* %296, i32 0, i32 0
  %297 = load %struct.xpvhv*, %struct.xpvhv** %sv_any530, align 8
  %xhv_max531 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %297, i32 0, i32 3
  %298 = load i64, i64* %xhv_max531, align 8
  %add532 = add i64 %298, 1
  %arrayidx533 = getelementptr inbounds %struct.he*, %struct.he** %295, i64 %add532
  %299 = bitcast %struct.he** %arrayidx533 to %struct.xpvhv_aux*
  %xhv_name_u534 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %299, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u534 to %struct.hek***
  %300 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %301 = load %struct.hek*, %struct.hek** %300, align 8
  %tobool535 = icmp ne %struct.hek* %301, null
  br i1 %tobool535, label %cond.true546, label %cond.false576

cond.false536:                                    ; preds = %land.lhs.true519
  %302 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u537 = getelementptr inbounds %struct.hv, %struct.hv* %302, i32 0, i32 3
  %svu_hash538 = bitcast %union.anon.4* %sv_u537 to %struct.he***
  %303 = load %struct.he**, %struct.he*** %svu_hash538, align 8
  %304 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any539 = getelementptr inbounds %struct.hv, %struct.hv* %304, i32 0, i32 0
  %305 = load %struct.xpvhv*, %struct.xpvhv** %sv_any539, align 8
  %xhv_max540 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %305, i32 0, i32 3
  %306 = load i64, i64* %xhv_max540, align 8
  %add541 = add i64 %306, 1
  %arrayidx542 = getelementptr inbounds %struct.he*, %struct.he** %303, i64 %add541
  %307 = bitcast %struct.he** %arrayidx542 to %struct.xpvhv_aux*
  %xhv_name_u543 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %307, i32 0, i32 0
  %xhvnameu_name544 = bitcast %union._xhvnameu* %xhv_name_u543 to %struct.hek**
  %308 = load %struct.hek*, %struct.hek** %xhvnameu_name544, align 8
  %tobool545 = icmp ne %struct.hek* %308, null
  br i1 %tobool545, label %cond.true546, label %cond.false576

cond.true546:                                     ; preds = %cond.false536, %cond.true527
  %309 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u547 = getelementptr inbounds %struct.hv, %struct.hv* %309, i32 0, i32 3
  %svu_hash548 = bitcast %union.anon.4* %sv_u547 to %struct.he***
  %310 = load %struct.he**, %struct.he*** %svu_hash548, align 8
  %311 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any549 = getelementptr inbounds %struct.hv, %struct.hv* %311, i32 0, i32 0
  %312 = load %struct.xpvhv*, %struct.xpvhv** %sv_any549, align 8
  %xhv_max550 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %312, i32 0, i32 3
  %313 = load i64, i64* %xhv_max550, align 8
  %add551 = add i64 %313, 1
  %arrayidx552 = getelementptr inbounds %struct.he*, %struct.he** %310, i64 %add551
  %314 = bitcast %struct.he** %arrayidx552 to %struct.xpvhv_aux*
  %xhv_name_count553 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %314, i32 0, i32 4
  %315 = load i32, i32* %xhv_name_count553, align 4
  %tobool554 = icmp ne i32 %315, 0
  br i1 %tobool554, label %cond.true555, label %cond.false564

cond.true555:                                     ; preds = %cond.true546
  %316 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u556 = getelementptr inbounds %struct.hv, %struct.hv* %316, i32 0, i32 3
  %svu_hash557 = bitcast %union.anon.4* %sv_u556 to %struct.he***
  %317 = load %struct.he**, %struct.he*** %svu_hash557, align 8
  %318 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any558 = getelementptr inbounds %struct.hv, %struct.hv* %318, i32 0, i32 0
  %319 = load %struct.xpvhv*, %struct.xpvhv** %sv_any558, align 8
  %xhv_max559 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %319, i32 0, i32 3
  %320 = load i64, i64* %xhv_max559, align 8
  %add560 = add i64 %320, 1
  %arrayidx561 = getelementptr inbounds %struct.he*, %struct.he** %317, i64 %add560
  %321 = bitcast %struct.he** %arrayidx561 to %struct.xpvhv_aux*
  %xhv_name_u562 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %321, i32 0, i32 0
  %xhvnameu_names563 = bitcast %union._xhvnameu* %xhv_name_u562 to %struct.hek***
  %322 = load %struct.hek**, %struct.hek*** %xhvnameu_names563, align 8
  %323 = load %struct.hek*, %struct.hek** %322, align 8
  br label %cond.end573

cond.false564:                                    ; preds = %cond.true546
  %324 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u565 = getelementptr inbounds %struct.hv, %struct.hv* %324, i32 0, i32 3
  %svu_hash566 = bitcast %union.anon.4* %sv_u565 to %struct.he***
  %325 = load %struct.he**, %struct.he*** %svu_hash566, align 8
  %326 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any567 = getelementptr inbounds %struct.hv, %struct.hv* %326, i32 0, i32 0
  %327 = load %struct.xpvhv*, %struct.xpvhv** %sv_any567, align 8
  %xhv_max568 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %327, i32 0, i32 3
  %328 = load i64, i64* %xhv_max568, align 8
  %add569 = add i64 %328, 1
  %arrayidx570 = getelementptr inbounds %struct.he*, %struct.he** %325, i64 %add569
  %329 = bitcast %struct.he** %arrayidx570 to %struct.xpvhv_aux*
  %xhv_name_u571 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %329, i32 0, i32 0
  %xhvnameu_name572 = bitcast %union._xhvnameu* %xhv_name_u571 to %struct.hek**
  %330 = load %struct.hek*, %struct.hek** %xhvnameu_name572, align 8
  br label %cond.end573

cond.end573:                                      ; preds = %cond.false564, %cond.true555
  %cond574 = phi %struct.hek* [ %323, %cond.true555 ], [ %330, %cond.false564 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond574, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool575 = icmp ne i8* %arraydecay, null
  br i1 %tobool575, label %land.lhs.true577, label %cond.false581

cond.false576:                                    ; preds = %cond.false536, %cond.true527, %land.lhs.true513, %land.lhs.true509
  br i1 false, label %land.lhs.true577, label %cond.false581

land.lhs.true577:                                 ; preds = %cond.false576, %cond.end573
  %331 = load %struct.hv*, %struct.hv** %stash, align 8
  %call578 = call i32 @Perl_Gv_AMupdate(%struct.hv* %331, i1 zeroext false)
  %tobool579 = icmp ne i32 %call578, 0
  br i1 %tobool579, label %cond.true580, label %cond.false581

cond.true580:                                     ; preds = %land.lhs.true577
  br i1 true, label %if.then584, label %if.end586

cond.false581:                                    ; preds = %land.lhs.true577, %cond.false576, %cond.end573
  %332 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags582 = getelementptr inbounds %struct.hv, %struct.hv* %332, i32 0, i32 2
  %333 = load i32, i32* %sv_flags582, align 4
  %and583 = and i32 %333, -268435457
  store i32 %and583, i32* %sv_flags582, align 4
  br i1 false, label %if.then584, label %if.end586

if.then584:                                       ; preds = %cond.false581, %cond.true580
  %334 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded585 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %334, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded585, align 8
  %335 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %335)
  br label %if.end586

if.end586:                                        ; preds = %if.then584, %cond.false581, %cond.true580, %do.body506
  %336 = load %struct.sv*, %struct.sv** %ref, align 8
  %337 = load %struct.hv*, %struct.hv** %stash, align 8
  %call587 = call %struct.sv* @Perl_sv_bless(%struct.sv* %336, %struct.hv* %337)
  br label %do.body588

do.body588:                                       ; preds = %if.end586
  %338 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u589 = getelementptr inbounds %struct.sv, %struct.sv* %338, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u589 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end590

do.end590:                                        ; preds = %do.body588
  %339 = load %struct.sv*, %struct.sv** %ref, align 8
  %340 = bitcast %struct.sv* %339 to i8*
  %341 = bitcast i8* %340 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %341)
  br label %do.end591

do.end591:                                        ; preds = %do.end590
  br label %while.cond

while.end:                                        ; preds = %cond.end361
  br label %if.end592

if.end592:                                        ; preds = %while.end, %if.end336
  %342 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %342, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end592, %if.then494, %if.else482, %sw.default, %if.then432, %if.else424, %if.then389, %if.else381, %if.then335, %if.end195, %if.then181, %if.else173, %if.then135, %if.else127, %if.then108, %if.end101, %if.then75, %if.else67, %if.then47, %if.else39, %if.then16, %if.else
  %343 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %343
}

; Function Attrs: noinline nounwind uwtable
define internal void @SvAMAGIC_on(%struct.sv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u to %struct.sv**
  %1 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 2
  %2 = load i32, i32* %sv_flags, align 4
  %and = and i32 %2, 1048576
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u1 = getelementptr inbounds %struct.sv, %struct.sv* %3, i32 0, i32 3
  %svu_rv2 = bitcast %union.anon* %sv_u1 to %struct.sv**
  %4 = load %struct.sv*, %struct.sv** %svu_rv2, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %4, i32 0, i32 0
  %5 = load i8*, i8** %sv_any, align 8
  %6 = bitcast i8* %5 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %6, i32 0, i32 0
  %7 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  %sv_flags3 = getelementptr inbounds %struct.hv, %struct.hv* %7, i32 0, i32 2
  %8 = load i32, i32* %sv_flags3, align 4
  %or = or i32 %8, 268435456
  store i32 %or, i32* %sv_flags3, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

declare dso_local i64 @Perl_PerlIO_read(%struct._PerlIO**, i8*, i64) #1

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #3

declare dso_local i32 @PerlIO_getc(%struct._PerlIO**) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_lscalar(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 24
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else19, label %if.then

if.then:                                          ; preds = %do.body
  br label %do.body1

do.body1:                                         ; preds = %if.then
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 4
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %5
  br i1 %cmp, label %if.then3, label %if.else17

if.then3:                                         ; preds = %do.body1
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 22
  %aptr5 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf4, i32 0, i32 2
  %7 = load i8*, i8** %aptr5, align 8
  %8 = ptrtoint i8* %7 to i64
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 22
  %aptr7 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf6, i32 0, i32 2
  %10 = load i8*, i8** %aptr7, align 8
  %11 = ptrtoint i8* %10 to i64
  %and = and i64 %11, -4
  %cmp8 = icmp eq i64 %8, %and
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.then3
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf10 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 22
  %aptr11 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf10, i32 0, i32 2
  %13 = load i8*, i8** %aptr11, align 8
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %len, align 4
  br label %if.end

if.else:                                          ; preds = %if.then3
  %16 = bitcast i32* %len to i8*
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf12 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 22
  %aptr13 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf12, i32 0, i32 2
  %18 = load i8*, i8** %aptr13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 1 %18, i64 4, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 22
  %aptr15 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf14, i32 0, i32 2
  %20 = load i8*, i8** %aptr15, align 8
  %add.ptr16 = getelementptr inbounds i8, i8* %20, i64 4
  store i8* %add.ptr16, i8** %aptr15, align 8
  br label %if.end18

if.else17:                                        ; preds = %do.body1
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end18:                                         ; preds = %if.end
  br label %do.end

do.end:                                           ; preds = %if.end18
  br label %if.end24

if.else19:                                        ; preds = %do.body
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio20 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 24
  %22 = load %struct._PerlIO**, %struct._PerlIO*** %fio20, align 8
  %23 = bitcast i32* %len to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %22, i8* %23, i64 4)
  %cmp21 = icmp ne i64 %call, 4
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.else19
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end23:                                         ; preds = %if.else19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %do.end
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 12
  %25 = load i32, i32* %netorder, align 8
  %tobool25 = icmp ne i32 %25, 0
  br i1 %tobool25, label %if.then26, label %if.end28

if.then26:                                        ; preds = %if.end24
  %26 = load i32, i32* %len, align 4
  %call27 = call i32 @my_swap32(i32 %26)
  store i32 %call27, i32* %len, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.end24
  br label %do.end29

do.end29:                                         ; preds = %if.end28
  %27 = load i32, i32* %len, align 4
  %conv = sext i32 %27 to i64
  %call30 = call %struct.sv* @Perl_newSV(i64 %conv)
  store %struct.sv* %call30, %struct.sv** %sv, align 8
  %28 = load i8*, i8** %cname.addr, align 8
  %tobool31 = icmp ne i8* %28, null
  br i1 %tobool31, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end29
  %29 = load i8*, i8** %cname.addr, align 8
  %call32 = call %struct.hv* @Perl_gv_stashpv(i8* %29, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %do.end29
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call32, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  br label %do.body33

do.body33:                                        ; preds = %cond.end
  br label %do.body34

do.body34:                                        ; preds = %do.body33
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 5
  %31 = load %struct.av*, %struct.av** %aseen, align 8
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %32, i32 0, i32 10
  %33 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %33, 1
  store i64 %inc, i64* %tagnum, align 8
  %34 = load %struct.sv*, %struct.sv** %sv, align 8
  %35 = bitcast %struct.sv* %34 to i8*
  %36 = bitcast i8* %35 to %struct.sv*
  %call35 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %36)
  %call36 = call %struct.sv** @Perl_av_store(%struct.av* %31, i64 %33, %struct.sv* %call35)
  %cmp37 = icmp eq %struct.sv** %call36, null
  br i1 %cmp37, label %if.then39, label %if.end40

if.then39:                                        ; preds = %do.body34
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end40:                                         ; preds = %do.body34
  br label %do.end41

do.end41:                                         ; preds = %if.end40
  %37 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool42 = icmp ne %struct.hv* %37, null
  br i1 %tobool42, label %if.then43, label %if.end124

if.then43:                                        ; preds = %do.end41
  br label %do.body44

do.body44:                                        ; preds = %if.then43
  %38 = load %struct.sv*, %struct.sv** %sv, align 8
  %call45 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %38)
  store %struct.sv* %call45, %struct.sv** %ref, align 8
  %39 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %39, i32 0, i32 30
  %40 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool46 = icmp ne i32 %40, 0
  br i1 %tobool46, label %land.lhs.true, label %if.end118

land.lhs.true:                                    ; preds = %do.body44
  %41 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %41, i32 0, i32 2
  %42 = load i32, i32* %sv_flags, align 4
  %and47 = and i32 %42, 33554432
  %tobool48 = icmp ne i32 %and47, 0
  br i1 %tobool48, label %land.lhs.true49, label %cond.false108

land.lhs.true49:                                  ; preds = %land.lhs.true
  %43 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %43, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %44 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %45 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %45, i32 0, i32 0
  %46 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %46, i32 0, i32 3
  %47 = load i64, i64* %xhv_max, align 8
  %add = add i64 %47, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %44, i64 %add
  %48 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %48, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %49 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool50 = icmp ne %struct.hek* %49, null
  br i1 %tobool50, label %land.lhs.true51, label %cond.false108

land.lhs.true51:                                  ; preds = %land.lhs.true49
  %50 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u52 = getelementptr inbounds %struct.hv, %struct.hv* %50, i32 0, i32 3
  %svu_hash53 = bitcast %union.anon.4* %sv_u52 to %struct.he***
  %51 = load %struct.he**, %struct.he*** %svu_hash53, align 8
  %52 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any54 = getelementptr inbounds %struct.hv, %struct.hv* %52, i32 0, i32 0
  %53 = load %struct.xpvhv*, %struct.xpvhv** %sv_any54, align 8
  %xhv_max55 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %53, i32 0, i32 3
  %54 = load i64, i64* %xhv_max55, align 8
  %add56 = add i64 %54, 1
  %arrayidx57 = getelementptr inbounds %struct.he*, %struct.he** %51, i64 %add56
  %55 = bitcast %struct.he** %arrayidx57 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %55, i32 0, i32 4
  %56 = load i32, i32* %xhv_name_count, align 4
  %tobool58 = icmp ne i32 %56, 0
  br i1 %tobool58, label %cond.true59, label %cond.false68

cond.true59:                                      ; preds = %land.lhs.true51
  %57 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u60 = getelementptr inbounds %struct.hv, %struct.hv* %57, i32 0, i32 3
  %svu_hash61 = bitcast %union.anon.4* %sv_u60 to %struct.he***
  %58 = load %struct.he**, %struct.he*** %svu_hash61, align 8
  %59 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any62 = getelementptr inbounds %struct.hv, %struct.hv* %59, i32 0, i32 0
  %60 = load %struct.xpvhv*, %struct.xpvhv** %sv_any62, align 8
  %xhv_max63 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %60, i32 0, i32 3
  %61 = load i64, i64* %xhv_max63, align 8
  %add64 = add i64 %61, 1
  %arrayidx65 = getelementptr inbounds %struct.he*, %struct.he** %58, i64 %add64
  %62 = bitcast %struct.he** %arrayidx65 to %struct.xpvhv_aux*
  %xhv_name_u66 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %62, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u66 to %struct.hek***
  %63 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %64 = load %struct.hek*, %struct.hek** %63, align 8
  %tobool67 = icmp ne %struct.hek* %64, null
  br i1 %tobool67, label %cond.true78, label %cond.false108

cond.false68:                                     ; preds = %land.lhs.true51
  %65 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u69 = getelementptr inbounds %struct.hv, %struct.hv* %65, i32 0, i32 3
  %svu_hash70 = bitcast %union.anon.4* %sv_u69 to %struct.he***
  %66 = load %struct.he**, %struct.he*** %svu_hash70, align 8
  %67 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any71 = getelementptr inbounds %struct.hv, %struct.hv* %67, i32 0, i32 0
  %68 = load %struct.xpvhv*, %struct.xpvhv** %sv_any71, align 8
  %xhv_max72 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %68, i32 0, i32 3
  %69 = load i64, i64* %xhv_max72, align 8
  %add73 = add i64 %69, 1
  %arrayidx74 = getelementptr inbounds %struct.he*, %struct.he** %66, i64 %add73
  %70 = bitcast %struct.he** %arrayidx74 to %struct.xpvhv_aux*
  %xhv_name_u75 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %70, i32 0, i32 0
  %xhvnameu_name76 = bitcast %union._xhvnameu* %xhv_name_u75 to %struct.hek**
  %71 = load %struct.hek*, %struct.hek** %xhvnameu_name76, align 8
  %tobool77 = icmp ne %struct.hek* %71, null
  br i1 %tobool77, label %cond.true78, label %cond.false108

cond.true78:                                      ; preds = %cond.false68, %cond.true59
  %72 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u79 = getelementptr inbounds %struct.hv, %struct.hv* %72, i32 0, i32 3
  %svu_hash80 = bitcast %union.anon.4* %sv_u79 to %struct.he***
  %73 = load %struct.he**, %struct.he*** %svu_hash80, align 8
  %74 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any81 = getelementptr inbounds %struct.hv, %struct.hv* %74, i32 0, i32 0
  %75 = load %struct.xpvhv*, %struct.xpvhv** %sv_any81, align 8
  %xhv_max82 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %75, i32 0, i32 3
  %76 = load i64, i64* %xhv_max82, align 8
  %add83 = add i64 %76, 1
  %arrayidx84 = getelementptr inbounds %struct.he*, %struct.he** %73, i64 %add83
  %77 = bitcast %struct.he** %arrayidx84 to %struct.xpvhv_aux*
  %xhv_name_count85 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %77, i32 0, i32 4
  %78 = load i32, i32* %xhv_name_count85, align 4
  %tobool86 = icmp ne i32 %78, 0
  br i1 %tobool86, label %cond.true87, label %cond.false96

cond.true87:                                      ; preds = %cond.true78
  %79 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u88 = getelementptr inbounds %struct.hv, %struct.hv* %79, i32 0, i32 3
  %svu_hash89 = bitcast %union.anon.4* %sv_u88 to %struct.he***
  %80 = load %struct.he**, %struct.he*** %svu_hash89, align 8
  %81 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any90 = getelementptr inbounds %struct.hv, %struct.hv* %81, i32 0, i32 0
  %82 = load %struct.xpvhv*, %struct.xpvhv** %sv_any90, align 8
  %xhv_max91 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %82, i32 0, i32 3
  %83 = load i64, i64* %xhv_max91, align 8
  %add92 = add i64 %83, 1
  %arrayidx93 = getelementptr inbounds %struct.he*, %struct.he** %80, i64 %add92
  %84 = bitcast %struct.he** %arrayidx93 to %struct.xpvhv_aux*
  %xhv_name_u94 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %84, i32 0, i32 0
  %xhvnameu_names95 = bitcast %union._xhvnameu* %xhv_name_u94 to %struct.hek***
  %85 = load %struct.hek**, %struct.hek*** %xhvnameu_names95, align 8
  %86 = load %struct.hek*, %struct.hek** %85, align 8
  br label %cond.end105

cond.false96:                                     ; preds = %cond.true78
  %87 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u97 = getelementptr inbounds %struct.hv, %struct.hv* %87, i32 0, i32 3
  %svu_hash98 = bitcast %union.anon.4* %sv_u97 to %struct.he***
  %88 = load %struct.he**, %struct.he*** %svu_hash98, align 8
  %89 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any99 = getelementptr inbounds %struct.hv, %struct.hv* %89, i32 0, i32 0
  %90 = load %struct.xpvhv*, %struct.xpvhv** %sv_any99, align 8
  %xhv_max100 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %90, i32 0, i32 3
  %91 = load i64, i64* %xhv_max100, align 8
  %add101 = add i64 %91, 1
  %arrayidx102 = getelementptr inbounds %struct.he*, %struct.he** %88, i64 %add101
  %92 = bitcast %struct.he** %arrayidx102 to %struct.xpvhv_aux*
  %xhv_name_u103 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %92, i32 0, i32 0
  %xhvnameu_name104 = bitcast %union._xhvnameu* %xhv_name_u103 to %struct.hek**
  %93 = load %struct.hek*, %struct.hek** %xhvnameu_name104, align 8
  br label %cond.end105

cond.end105:                                      ; preds = %cond.false96, %cond.true87
  %cond106 = phi %struct.hek* [ %86, %cond.true87 ], [ %93, %cond.false96 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond106, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool107 = icmp ne i8* %arraydecay, null
  br i1 %tobool107, label %land.lhs.true109, label %cond.false113

cond.false108:                                    ; preds = %cond.false68, %cond.true59, %land.lhs.true49, %land.lhs.true
  br i1 false, label %land.lhs.true109, label %cond.false113

land.lhs.true109:                                 ; preds = %cond.false108, %cond.end105
  %94 = load %struct.hv*, %struct.hv** %stash, align 8
  %call110 = call i32 @Perl_Gv_AMupdate(%struct.hv* %94, i1 zeroext false)
  %tobool111 = icmp ne i32 %call110, 0
  br i1 %tobool111, label %cond.true112, label %cond.false113

cond.true112:                                     ; preds = %land.lhs.true109
  br i1 true, label %if.then116, label %if.end118

cond.false113:                                    ; preds = %land.lhs.true109, %cond.false108, %cond.end105
  %95 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags114 = getelementptr inbounds %struct.hv, %struct.hv* %95, i32 0, i32 2
  %96 = load i32, i32* %sv_flags114, align 4
  %and115 = and i32 %96, -268435457
  store i32 %and115, i32* %sv_flags114, align 4
  br i1 false, label %if.then116, label %if.end118

if.then116:                                       ; preds = %cond.false113, %cond.true112
  %97 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded117 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %97, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded117, align 8
  %98 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %98)
  br label %if.end118

if.end118:                                        ; preds = %if.then116, %cond.false113, %cond.true112, %do.body44
  %99 = load %struct.sv*, %struct.sv** %ref, align 8
  %100 = load %struct.hv*, %struct.hv** %stash, align 8
  %call119 = call %struct.sv* @Perl_sv_bless(%struct.sv* %99, %struct.hv* %100)
  br label %do.body120

do.body120:                                       ; preds = %if.end118
  %101 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u121 = getelementptr inbounds %struct.sv, %struct.sv* %101, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u121 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end122

do.end122:                                        ; preds = %do.body120
  %102 = load %struct.sv*, %struct.sv** %ref, align 8
  %103 = bitcast %struct.sv* %102 to i8*
  %104 = bitcast i8* %103 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %104)
  br label %do.end123

do.end123:                                        ; preds = %do.end122
  br label %if.end124

if.end124:                                        ; preds = %do.end123, %do.end41
  br label %do.end125

do.end125:                                        ; preds = %if.end124
  %105 = load i32, i32* %len, align 4
  %cmp126 = icmp eq i32 %105, 0
  br i1 %cmp126, label %if.then128, label %if.end129

if.then128:                                       ; preds = %do.end125
  %106 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_setpvn(%struct.sv* %106, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i64 0)
  %107 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %107, %struct.sv** %retval, align 8
  br label %return

if.end129:                                        ; preds = %do.end125
  br label %do.body130

do.body130:                                       ; preds = %if.end129
  %108 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio131 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %108, i32 0, i32 24
  %109 = load %struct._PerlIO**, %struct._PerlIO*** %fio131, align 8
  %tobool132 = icmp ne %struct._PerlIO** %109, null
  br i1 %tobool132, label %if.else154, label %if.then133

if.then133:                                       ; preds = %do.body130
  br label %do.body134

do.body134:                                       ; preds = %if.then133
  %110 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf135 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %110, i32 0, i32 22
  %aptr136 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf135, i32 0, i32 2
  %111 = load i8*, i8** %aptr136, align 8
  %112 = load i32, i32* %len, align 4
  %idx.ext = sext i32 %112 to i64
  %add.ptr137 = getelementptr inbounds i8, i8* %111, i64 %idx.ext
  %113 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf138 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %113, i32 0, i32 22
  %aend139 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf138, i32 0, i32 3
  %114 = load i8*, i8** %aend139, align 8
  %cmp140 = icmp ule i8* %add.ptr137, %114
  br i1 %cmp140, label %if.then142, label %if.else151

if.then142:                                       ; preds = %do.body134
  %115 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u143 = getelementptr inbounds %struct.sv, %struct.sv* %115, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u143 to i8**
  %116 = load i8*, i8** %svu_pv, align 8
  %117 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf144 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %117, i32 0, i32 22
  %aptr145 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf144, i32 0, i32 2
  %118 = load i8*, i8** %aptr145, align 8
  %119 = load i32, i32* %len, align 4
  %conv146 = sext i32 %119 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %116, i8* align 1 %118, i64 %conv146, i1 false)
  %120 = load i32, i32* %len, align 4
  %121 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf147 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %121, i32 0, i32 22
  %aptr148 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf147, i32 0, i32 2
  %122 = load i8*, i8** %aptr148, align 8
  %idx.ext149 = sext i32 %120 to i64
  %add.ptr150 = getelementptr inbounds i8, i8* %122, i64 %idx.ext149
  store i8* %add.ptr150, i8** %aptr148, align 8
  br label %if.end152

if.else151:                                       ; preds = %do.body134
  %123 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_free(%struct.sv* %123)
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end152:                                        ; preds = %if.then142
  br label %do.end153

do.end153:                                        ; preds = %if.end152
  br label %if.end165

if.else154:                                       ; preds = %do.body130
  %124 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio155 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %124, i32 0, i32 24
  %125 = load %struct._PerlIO**, %struct._PerlIO*** %fio155, align 8
  %126 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u156 = getelementptr inbounds %struct.sv, %struct.sv* %126, i32 0, i32 3
  %svu_pv157 = bitcast %union.anon* %sv_u156 to i8**
  %127 = load i8*, i8** %svu_pv157, align 8
  %128 = load i32, i32* %len, align 4
  %conv158 = sext i32 %128 to i64
  %call159 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %125, i8* %127, i64 %conv158)
  %129 = load i32, i32* %len, align 4
  %conv160 = sext i32 %129 to i64
  %cmp161 = icmp ne i64 %call159, %conv160
  br i1 %cmp161, label %if.then163, label %if.end164

if.then163:                                       ; preds = %if.else154
  %130 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_free(%struct.sv* %130)
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end164:                                        ; preds = %if.else154
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %do.end153
  br label %do.end166

do.end166:                                        ; preds = %if.end165
  br label %do.body167

do.body167:                                       ; preds = %do.end166
  %131 = load i32, i32* %len, align 4
  %conv168 = sext i32 %131 to i64
  %132 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any169 = getelementptr inbounds %struct.sv, %struct.sv* %132, i32 0, i32 0
  %133 = load i8*, i8** %sv_any169, align 8
  %134 = bitcast i8* %133 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %134, i32 0, i32 2
  store i64 %conv168, i64* %xpv_cur, align 8
  br label %do.end170

do.end170:                                        ; preds = %do.body167
  %135 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u171 = getelementptr inbounds %struct.sv, %struct.sv* %135, i32 0, i32 3
  %svu_pv172 = bitcast %union.anon* %sv_u171 to i8**
  %136 = load i8*, i8** %svu_pv172, align 8
  %137 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any173 = getelementptr inbounds %struct.sv, %struct.sv* %137, i32 0, i32 0
  %138 = load i8*, i8** %sv_any173, align 8
  %139 = bitcast i8* %138 to %struct.xpv*
  %xpv_cur174 = getelementptr inbounds %struct.xpv, %struct.xpv* %139, i32 0, i32 2
  %140 = load i64, i64* %xpv_cur174, align 8
  %add.ptr175 = getelementptr inbounds i8, i8* %136, i64 %140
  store i8 0, i8* %add.ptr175, align 1
  %141 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags176 = getelementptr inbounds %struct.sv, %struct.sv* %141, i32 0, i32 2
  %142 = load i32, i32* %sv_flags176, align 4
  %and177 = and i32 %142, 1610547455
  store i32 %and177, i32* %sv_flags176, align 4
  %143 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags178 = getelementptr inbounds %struct.sv, %struct.sv* %143, i32 0, i32 2
  %144 = load i32, i32* %sv_flags178, align 4
  %or = or i32 %144, 17408
  store i32 %or, i32* %sv_flags178, align 4
  %145 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_tainted = getelementptr inbounds %struct.stcxt, %struct.stcxt* %145, i32 0, i32 13
  %146 = load i32, i32* %s_tainted, align 4
  %tobool179 = icmp ne i32 %146, 0
  br i1 %tobool179, label %if.then180, label %if.end203

if.then180:                                       ; preds = %do.end170
  br label %do.body181

do.body181:                                       ; preds = %if.then180
  %147 = load i8, i8* @PL_tainting, align 1
  %tobool182 = trunc i8 %147 to i1
  br i1 %tobool182, label %cond.true184, label %cond.false185

cond.true184:                                     ; preds = %do.body181
  br i1 true, label %if.then186, label %if.end201

cond.false185:                                    ; preds = %do.body181
  br i1 false, label %if.then186, label %if.end201

if.then186:                                       ; preds = %cond.false185, %cond.true184
  %148 = load i8, i8* @PL_tainted, align 1
  %tobool187 = trunc i8 %148 to i1
  br i1 %tobool187, label %cond.true189, label %cond.false190

cond.true189:                                     ; preds = %if.then186
  br i1 true, label %if.then191, label %if.end200

cond.false190:                                    ; preds = %if.then186
  br i1 false, label %if.then191, label %if.end200

if.then191:                                       ; preds = %cond.false190, %cond.true189
  br label %do.body192

do.body192:                                       ; preds = %if.then191
  %149 = load i8, i8* @PL_tainting, align 1
  %tobool193 = trunc i8 %149 to i1
  br i1 %tobool193, label %cond.true195, label %cond.false196

cond.true195:                                     ; preds = %do.body192
  br i1 true, label %if.then197, label %if.end198

cond.false196:                                    ; preds = %do.body192
  br i1 false, label %if.then197, label %if.end198

if.then197:                                       ; preds = %cond.false196, %cond.true195
  %150 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_magic(%struct.sv* %150, %struct.sv* null, i32 116, i8* null, i32 0)
  br label %if.end198

if.end198:                                        ; preds = %if.then197, %cond.false196, %cond.true195
  br label %do.end199

do.end199:                                        ; preds = %if.end198
  br label %if.end200

if.end200:                                        ; preds = %do.end199, %cond.false190, %cond.true189
  br label %if.end201

if.end201:                                        ; preds = %if.end200, %cond.false185, %cond.true184
  br label %do.end202

do.end202:                                        ; preds = %if.end201
  br label %if.end203

if.end203:                                        ; preds = %do.end202, %do.end170
  %151 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %151, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end203, %if.then163, %if.else151, %if.then128, %if.then39, %if.then22, %if.else17
  %152 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %152
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_array(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %av = alloca %struct.av*, align 8
  %sv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %seen_null = alloca i8, align 1
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  store i8 0, i8* %seen_null, align 1
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 24
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else19, label %if.then

if.then:                                          ; preds = %do.body
  br label %do.body1

do.body1:                                         ; preds = %if.then
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 4
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %5
  br i1 %cmp, label %if.then3, label %if.else17

if.then3:                                         ; preds = %do.body1
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 22
  %aptr5 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf4, i32 0, i32 2
  %7 = load i8*, i8** %aptr5, align 8
  %8 = ptrtoint i8* %7 to i64
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 22
  %aptr7 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf6, i32 0, i32 2
  %10 = load i8*, i8** %aptr7, align 8
  %11 = ptrtoint i8* %10 to i64
  %and = and i64 %11, -4
  %cmp8 = icmp eq i64 %8, %and
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.then3
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf10 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 22
  %aptr11 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf10, i32 0, i32 2
  %13 = load i8*, i8** %aptr11, align 8
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %len, align 4
  br label %if.end

if.else:                                          ; preds = %if.then3
  %16 = bitcast i32* %len to i8*
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf12 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 22
  %aptr13 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf12, i32 0, i32 2
  %18 = load i8*, i8** %aptr13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 1 %18, i64 4, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 22
  %aptr15 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf14, i32 0, i32 2
  %20 = load i8*, i8** %aptr15, align 8
  %add.ptr16 = getelementptr inbounds i8, i8* %20, i64 4
  store i8* %add.ptr16, i8** %aptr15, align 8
  br label %if.end18

if.else17:                                        ; preds = %do.body1
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end18:                                         ; preds = %if.end
  br label %do.end

do.end:                                           ; preds = %if.end18
  br label %if.end24

if.else19:                                        ; preds = %do.body
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio20 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 24
  %22 = load %struct._PerlIO**, %struct._PerlIO*** %fio20, align 8
  %23 = bitcast i32* %len to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %22, i8* %23, i64 4)
  %cmp21 = icmp ne i64 %call, 4
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.else19
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end23:                                         ; preds = %if.else19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %do.end
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 12
  %25 = load i32, i32* %netorder, align 8
  %tobool25 = icmp ne i32 %25, 0
  br i1 %tobool25, label %if.then26, label %if.end28

if.then26:                                        ; preds = %if.end24
  %26 = load i32, i32* %len, align 4
  %call27 = call i32 @my_swap32(i32 %26)
  store i32 %call27, i32* %len, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.end24
  br label %do.end29

do.end29:                                         ; preds = %if.end28
  %call30 = call %struct.sv* @Perl_newSV_type(i32 11)
  %27 = bitcast %struct.sv* %call30 to i8*
  %28 = bitcast i8* %27 to %struct.av*
  store %struct.av* %28, %struct.av** %av, align 8
  %29 = load i8*, i8** %cname.addr, align 8
  %tobool31 = icmp ne i8* %29, null
  br i1 %tobool31, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end29
  %30 = load i8*, i8** %cname.addr, align 8
  %call32 = call %struct.hv* @Perl_gv_stashpv(i8* %30, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %do.end29
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call32, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  br label %do.body33

do.body33:                                        ; preds = %cond.end
  br label %do.body34

do.body34:                                        ; preds = %do.body33
  %31 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %31, i32 0, i32 5
  %32 = load %struct.av*, %struct.av** %aseen, align 8
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 10
  %34 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %34, 1
  store i64 %inc, i64* %tagnum, align 8
  %35 = load %struct.av*, %struct.av** %av, align 8
  %36 = bitcast %struct.av* %35 to i8*
  %37 = bitcast i8* %36 to %struct.sv*
  %call35 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %37)
  %call36 = call %struct.sv** @Perl_av_store(%struct.av* %32, i64 %34, %struct.sv* %call35)
  %cmp37 = icmp eq %struct.sv** %call36, null
  br i1 %cmp37, label %if.then38, label %if.end39

if.then38:                                        ; preds = %do.body34
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end39:                                         ; preds = %do.body34
  br label %do.end40

do.end40:                                         ; preds = %if.end39
  %38 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool41 = icmp ne %struct.hv* %38, null
  br i1 %tobool41, label %if.then42, label %if.end123

if.then42:                                        ; preds = %do.end40
  br label %do.body43

do.body43:                                        ; preds = %if.then42
  %39 = load %struct.av*, %struct.av** %av, align 8
  %40 = bitcast %struct.av* %39 to %struct.sv*
  %call44 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %40)
  store %struct.sv* %call44, %struct.sv** %ref, align 8
  %41 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %41, i32 0, i32 30
  %42 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool45 = icmp ne i32 %42, 0
  br i1 %tobool45, label %land.lhs.true, label %if.end117

land.lhs.true:                                    ; preds = %do.body43
  %43 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %43, i32 0, i32 2
  %44 = load i32, i32* %sv_flags, align 4
  %and46 = and i32 %44, 33554432
  %tobool47 = icmp ne i32 %and46, 0
  br i1 %tobool47, label %land.lhs.true48, label %cond.false107

land.lhs.true48:                                  ; preds = %land.lhs.true
  %45 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %45, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %46 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %47 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %47, i32 0, i32 0
  %48 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %48, i32 0, i32 3
  %49 = load i64, i64* %xhv_max, align 8
  %add = add i64 %49, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %46, i64 %add
  %50 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %50, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %51 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool49 = icmp ne %struct.hek* %51, null
  br i1 %tobool49, label %land.lhs.true50, label %cond.false107

land.lhs.true50:                                  ; preds = %land.lhs.true48
  %52 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u51 = getelementptr inbounds %struct.hv, %struct.hv* %52, i32 0, i32 3
  %svu_hash52 = bitcast %union.anon.4* %sv_u51 to %struct.he***
  %53 = load %struct.he**, %struct.he*** %svu_hash52, align 8
  %54 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any53 = getelementptr inbounds %struct.hv, %struct.hv* %54, i32 0, i32 0
  %55 = load %struct.xpvhv*, %struct.xpvhv** %sv_any53, align 8
  %xhv_max54 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %55, i32 0, i32 3
  %56 = load i64, i64* %xhv_max54, align 8
  %add55 = add i64 %56, 1
  %arrayidx56 = getelementptr inbounds %struct.he*, %struct.he** %53, i64 %add55
  %57 = bitcast %struct.he** %arrayidx56 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %57, i32 0, i32 4
  %58 = load i32, i32* %xhv_name_count, align 4
  %tobool57 = icmp ne i32 %58, 0
  br i1 %tobool57, label %cond.true58, label %cond.false67

cond.true58:                                      ; preds = %land.lhs.true50
  %59 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u59 = getelementptr inbounds %struct.hv, %struct.hv* %59, i32 0, i32 3
  %svu_hash60 = bitcast %union.anon.4* %sv_u59 to %struct.he***
  %60 = load %struct.he**, %struct.he*** %svu_hash60, align 8
  %61 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any61 = getelementptr inbounds %struct.hv, %struct.hv* %61, i32 0, i32 0
  %62 = load %struct.xpvhv*, %struct.xpvhv** %sv_any61, align 8
  %xhv_max62 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %62, i32 0, i32 3
  %63 = load i64, i64* %xhv_max62, align 8
  %add63 = add i64 %63, 1
  %arrayidx64 = getelementptr inbounds %struct.he*, %struct.he** %60, i64 %add63
  %64 = bitcast %struct.he** %arrayidx64 to %struct.xpvhv_aux*
  %xhv_name_u65 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %64, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u65 to %struct.hek***
  %65 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %66 = load %struct.hek*, %struct.hek** %65, align 8
  %tobool66 = icmp ne %struct.hek* %66, null
  br i1 %tobool66, label %cond.true77, label %cond.false107

cond.false67:                                     ; preds = %land.lhs.true50
  %67 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u68 = getelementptr inbounds %struct.hv, %struct.hv* %67, i32 0, i32 3
  %svu_hash69 = bitcast %union.anon.4* %sv_u68 to %struct.he***
  %68 = load %struct.he**, %struct.he*** %svu_hash69, align 8
  %69 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any70 = getelementptr inbounds %struct.hv, %struct.hv* %69, i32 0, i32 0
  %70 = load %struct.xpvhv*, %struct.xpvhv** %sv_any70, align 8
  %xhv_max71 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %70, i32 0, i32 3
  %71 = load i64, i64* %xhv_max71, align 8
  %add72 = add i64 %71, 1
  %arrayidx73 = getelementptr inbounds %struct.he*, %struct.he** %68, i64 %add72
  %72 = bitcast %struct.he** %arrayidx73 to %struct.xpvhv_aux*
  %xhv_name_u74 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %72, i32 0, i32 0
  %xhvnameu_name75 = bitcast %union._xhvnameu* %xhv_name_u74 to %struct.hek**
  %73 = load %struct.hek*, %struct.hek** %xhvnameu_name75, align 8
  %tobool76 = icmp ne %struct.hek* %73, null
  br i1 %tobool76, label %cond.true77, label %cond.false107

cond.true77:                                      ; preds = %cond.false67, %cond.true58
  %74 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u78 = getelementptr inbounds %struct.hv, %struct.hv* %74, i32 0, i32 3
  %svu_hash79 = bitcast %union.anon.4* %sv_u78 to %struct.he***
  %75 = load %struct.he**, %struct.he*** %svu_hash79, align 8
  %76 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any80 = getelementptr inbounds %struct.hv, %struct.hv* %76, i32 0, i32 0
  %77 = load %struct.xpvhv*, %struct.xpvhv** %sv_any80, align 8
  %xhv_max81 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %77, i32 0, i32 3
  %78 = load i64, i64* %xhv_max81, align 8
  %add82 = add i64 %78, 1
  %arrayidx83 = getelementptr inbounds %struct.he*, %struct.he** %75, i64 %add82
  %79 = bitcast %struct.he** %arrayidx83 to %struct.xpvhv_aux*
  %xhv_name_count84 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %79, i32 0, i32 4
  %80 = load i32, i32* %xhv_name_count84, align 4
  %tobool85 = icmp ne i32 %80, 0
  br i1 %tobool85, label %cond.true86, label %cond.false95

cond.true86:                                      ; preds = %cond.true77
  %81 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u87 = getelementptr inbounds %struct.hv, %struct.hv* %81, i32 0, i32 3
  %svu_hash88 = bitcast %union.anon.4* %sv_u87 to %struct.he***
  %82 = load %struct.he**, %struct.he*** %svu_hash88, align 8
  %83 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any89 = getelementptr inbounds %struct.hv, %struct.hv* %83, i32 0, i32 0
  %84 = load %struct.xpvhv*, %struct.xpvhv** %sv_any89, align 8
  %xhv_max90 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %84, i32 0, i32 3
  %85 = load i64, i64* %xhv_max90, align 8
  %add91 = add i64 %85, 1
  %arrayidx92 = getelementptr inbounds %struct.he*, %struct.he** %82, i64 %add91
  %86 = bitcast %struct.he** %arrayidx92 to %struct.xpvhv_aux*
  %xhv_name_u93 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %86, i32 0, i32 0
  %xhvnameu_names94 = bitcast %union._xhvnameu* %xhv_name_u93 to %struct.hek***
  %87 = load %struct.hek**, %struct.hek*** %xhvnameu_names94, align 8
  %88 = load %struct.hek*, %struct.hek** %87, align 8
  br label %cond.end104

cond.false95:                                     ; preds = %cond.true77
  %89 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u96 = getelementptr inbounds %struct.hv, %struct.hv* %89, i32 0, i32 3
  %svu_hash97 = bitcast %union.anon.4* %sv_u96 to %struct.he***
  %90 = load %struct.he**, %struct.he*** %svu_hash97, align 8
  %91 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any98 = getelementptr inbounds %struct.hv, %struct.hv* %91, i32 0, i32 0
  %92 = load %struct.xpvhv*, %struct.xpvhv** %sv_any98, align 8
  %xhv_max99 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %92, i32 0, i32 3
  %93 = load i64, i64* %xhv_max99, align 8
  %add100 = add i64 %93, 1
  %arrayidx101 = getelementptr inbounds %struct.he*, %struct.he** %90, i64 %add100
  %94 = bitcast %struct.he** %arrayidx101 to %struct.xpvhv_aux*
  %xhv_name_u102 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %94, i32 0, i32 0
  %xhvnameu_name103 = bitcast %union._xhvnameu* %xhv_name_u102 to %struct.hek**
  %95 = load %struct.hek*, %struct.hek** %xhvnameu_name103, align 8
  br label %cond.end104

cond.end104:                                      ; preds = %cond.false95, %cond.true86
  %cond105 = phi %struct.hek* [ %88, %cond.true86 ], [ %95, %cond.false95 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond105, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool106 = icmp ne i8* %arraydecay, null
  br i1 %tobool106, label %land.lhs.true108, label %cond.false112

cond.false107:                                    ; preds = %cond.false67, %cond.true58, %land.lhs.true48, %land.lhs.true
  br i1 false, label %land.lhs.true108, label %cond.false112

land.lhs.true108:                                 ; preds = %cond.false107, %cond.end104
  %96 = load %struct.hv*, %struct.hv** %stash, align 8
  %call109 = call i32 @Perl_Gv_AMupdate(%struct.hv* %96, i1 zeroext false)
  %tobool110 = icmp ne i32 %call109, 0
  br i1 %tobool110, label %cond.true111, label %cond.false112

cond.true111:                                     ; preds = %land.lhs.true108
  br i1 true, label %if.then115, label %if.end117

cond.false112:                                    ; preds = %land.lhs.true108, %cond.false107, %cond.end104
  %97 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags113 = getelementptr inbounds %struct.hv, %struct.hv* %97, i32 0, i32 2
  %98 = load i32, i32* %sv_flags113, align 4
  %and114 = and i32 %98, -268435457
  store i32 %and114, i32* %sv_flags113, align 4
  br i1 false, label %if.then115, label %if.end117

if.then115:                                       ; preds = %cond.false112, %cond.true111
  %99 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded116 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %99, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded116, align 8
  %100 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %100)
  br label %if.end117

if.end117:                                        ; preds = %if.then115, %cond.false112, %cond.true111, %do.body43
  %101 = load %struct.sv*, %struct.sv** %ref, align 8
  %102 = load %struct.hv*, %struct.hv** %stash, align 8
  %call118 = call %struct.sv* @Perl_sv_bless(%struct.sv* %101, %struct.hv* %102)
  br label %do.body119

do.body119:                                       ; preds = %if.end117
  %103 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u120 = getelementptr inbounds %struct.sv, %struct.sv* %103, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u120 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end121

do.end121:                                        ; preds = %do.body119
  %104 = load %struct.sv*, %struct.sv** %ref, align 8
  %105 = bitcast %struct.sv* %104 to i8*
  %106 = bitcast i8* %105 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %106)
  br label %do.end122

do.end122:                                        ; preds = %do.end121
  br label %if.end123

if.end123:                                        ; preds = %do.end122, %do.end40
  br label %do.end124

do.end124:                                        ; preds = %if.end123
  %107 = load i32, i32* %len, align 4
  %tobool125 = icmp ne i32 %107, 0
  br i1 %tobool125, label %if.then126, label %if.else127

if.then126:                                       ; preds = %do.end124
  %108 = load %struct.av*, %struct.av** %av, align 8
  %109 = load i32, i32* %len, align 4
  %conv = sext i32 %109 to i64
  call void @Perl_av_extend(%struct.av* %108, i64 %conv)
  br label %if.end128

if.else127:                                       ; preds = %do.end124
  %110 = load %struct.av*, %struct.av** %av, align 8
  %111 = bitcast %struct.av* %110 to %struct.sv*
  store %struct.sv* %111, %struct.sv** %retval, align 8
  br label %return

if.end128:                                        ; preds = %if.then126
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end128
  %112 = load i32, i32* %i, align 4
  %113 = load i32, i32* %len, align 4
  %cmp129 = icmp slt i32 %112, %113
  br i1 %cmp129, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %114 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call131 = call %struct.sv* @retrieve(%struct.stcxt* %114, i8* null)
  store %struct.sv* %call131, %struct.sv** %sv, align 8
  %115 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool132 = icmp ne %struct.sv* %115, null
  br i1 %tobool132, label %if.end134, label %if.then133

if.then133:                                       ; preds = %for.body
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end134:                                        ; preds = %for.body
  %116 = load %struct.sv*, %struct.sv** %sv, align 8
  %cmp135 = icmp eq %struct.sv* %116, @PL_sv_undef
  br i1 %cmp135, label %if.then137, label %if.end138

if.then137:                                       ; preds = %if.end134
  store i8 1, i8* %seen_null, align 1
  br label %for.inc

if.end138:                                        ; preds = %if.end134
  %117 = load %struct.sv*, %struct.sv** %sv, align 8
  %cmp139 = icmp eq %struct.sv* %117, @PL_sv_placeholder
  br i1 %cmp139, label %if.then141, label %if.end142

if.then141:                                       ; preds = %if.end138
  store %struct.sv* @PL_sv_undef, %struct.sv** %sv, align 8
  br label %if.end142

if.end142:                                        ; preds = %if.then141, %if.end138
  %118 = load %struct.av*, %struct.av** %av, align 8
  %119 = load i32, i32* %i, align 4
  %conv143 = sext i32 %119 to i64
  %120 = load %struct.sv*, %struct.sv** %sv, align 8
  %call144 = call %struct.sv** @Perl_av_store(%struct.av* %118, i64 %conv143, %struct.sv* %120)
  %cmp145 = icmp eq %struct.sv** %call144, null
  br i1 %cmp145, label %if.then147, label %if.end148

if.then147:                                       ; preds = %if.end142
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end148:                                        ; preds = %if.end142
  br label %for.inc

for.inc:                                          ; preds = %if.end148, %if.then137
  %121 = load i32, i32* %i, align 4
  %inc149 = add nsw i32 %121, 1
  store i32 %inc149, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %122 = load i8, i8* %seen_null, align 1
  %tobool150 = trunc i8 %122 to i1
  br i1 %tobool150, label %if.then151, label %if.end153

if.then151:                                       ; preds = %for.end
  %123 = load %struct.av*, %struct.av** %av, align 8
  %124 = load i32, i32* %len, align 4
  %sub = sub nsw i32 %124, 1
  %conv152 = sext i32 %sub to i64
  call void @Perl_av_fill(%struct.av* %123, i64 %conv152)
  br label %if.end153

if.end153:                                        ; preds = %if.then151, %for.end
  %125 = load %struct.av*, %struct.av** %av, align 8
  %126 = bitcast %struct.av* %125 to %struct.sv*
  store %struct.sv* %126, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end153, %if.then147, %if.then133, %if.else127, %if.then38, %if.then22, %if.else17
  %127 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %127
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_hash(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %size = alloca i32, align 4
  %i = alloca i32, align 4
  %hv = alloca %struct.hv*, align 8
  %sv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 24
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else19, label %if.then

if.then:                                          ; preds = %do.body
  br label %do.body1

do.body1:                                         ; preds = %if.then
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 4
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %5
  br i1 %cmp, label %if.then3, label %if.else17

if.then3:                                         ; preds = %do.body1
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 22
  %aptr5 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf4, i32 0, i32 2
  %7 = load i8*, i8** %aptr5, align 8
  %8 = ptrtoint i8* %7 to i64
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 22
  %aptr7 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf6, i32 0, i32 2
  %10 = load i8*, i8** %aptr7, align 8
  %11 = ptrtoint i8* %10 to i64
  %and = and i64 %11, -4
  %cmp8 = icmp eq i64 %8, %and
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.then3
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf10 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 22
  %aptr11 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf10, i32 0, i32 2
  %13 = load i8*, i8** %aptr11, align 8
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %len, align 4
  br label %if.end

if.else:                                          ; preds = %if.then3
  %16 = bitcast i32* %len to i8*
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf12 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 22
  %aptr13 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf12, i32 0, i32 2
  %18 = load i8*, i8** %aptr13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 1 %18, i64 4, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 22
  %aptr15 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf14, i32 0, i32 2
  %20 = load i8*, i8** %aptr15, align 8
  %add.ptr16 = getelementptr inbounds i8, i8* %20, i64 4
  store i8* %add.ptr16, i8** %aptr15, align 8
  br label %if.end18

if.else17:                                        ; preds = %do.body1
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end18:                                         ; preds = %if.end
  br label %do.end

do.end:                                           ; preds = %if.end18
  br label %if.end24

if.else19:                                        ; preds = %do.body
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio20 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 24
  %22 = load %struct._PerlIO**, %struct._PerlIO*** %fio20, align 8
  %23 = bitcast i32* %len to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %22, i8* %23, i64 4)
  %cmp21 = icmp ne i64 %call, 4
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.else19
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end23:                                         ; preds = %if.else19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %do.end
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 12
  %25 = load i32, i32* %netorder, align 8
  %tobool25 = icmp ne i32 %25, 0
  br i1 %tobool25, label %if.then26, label %if.end28

if.then26:                                        ; preds = %if.end24
  %26 = load i32, i32* %len, align 4
  %call27 = call i32 @my_swap32(i32 %26)
  store i32 %call27, i32* %len, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.end24
  br label %do.end29

do.end29:                                         ; preds = %if.end28
  %call30 = call %struct.sv* @Perl_newSV_type(i32 12)
  %27 = bitcast %struct.sv* %call30 to i8*
  %28 = bitcast i8* %27 to %struct.hv*
  store %struct.hv* %28, %struct.hv** %hv, align 8
  %29 = load i8*, i8** %cname.addr, align 8
  %tobool31 = icmp ne i8* %29, null
  br i1 %tobool31, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end29
  %30 = load i8*, i8** %cname.addr, align 8
  %call32 = call %struct.hv* @Perl_gv_stashpv(i8* %30, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %do.end29
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call32, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  br label %do.body33

do.body33:                                        ; preds = %cond.end
  br label %do.body34

do.body34:                                        ; preds = %do.body33
  %31 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %31, i32 0, i32 5
  %32 = load %struct.av*, %struct.av** %aseen, align 8
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 10
  %34 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %34, 1
  store i64 %inc, i64* %tagnum, align 8
  %35 = load %struct.hv*, %struct.hv** %hv, align 8
  %36 = bitcast %struct.hv* %35 to i8*
  %37 = bitcast i8* %36 to %struct.sv*
  %call35 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %37)
  %call36 = call %struct.sv** @Perl_av_store(%struct.av* %32, i64 %34, %struct.sv* %call35)
  %cmp37 = icmp eq %struct.sv** %call36, null
  br i1 %cmp37, label %if.then38, label %if.end39

if.then38:                                        ; preds = %do.body34
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end39:                                         ; preds = %do.body34
  br label %do.end40

do.end40:                                         ; preds = %if.end39
  %38 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool41 = icmp ne %struct.hv* %38, null
  br i1 %tobool41, label %if.then42, label %if.end123

if.then42:                                        ; preds = %do.end40
  br label %do.body43

do.body43:                                        ; preds = %if.then42
  %39 = load %struct.hv*, %struct.hv** %hv, align 8
  %40 = bitcast %struct.hv* %39 to %struct.sv*
  %call44 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %40)
  store %struct.sv* %call44, %struct.sv** %ref, align 8
  %41 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %41, i32 0, i32 30
  %42 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool45 = icmp ne i32 %42, 0
  br i1 %tobool45, label %land.lhs.true, label %if.end117

land.lhs.true:                                    ; preds = %do.body43
  %43 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %43, i32 0, i32 2
  %44 = load i32, i32* %sv_flags, align 4
  %and46 = and i32 %44, 33554432
  %tobool47 = icmp ne i32 %and46, 0
  br i1 %tobool47, label %land.lhs.true48, label %cond.false107

land.lhs.true48:                                  ; preds = %land.lhs.true
  %45 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %45, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %46 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %47 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %47, i32 0, i32 0
  %48 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %48, i32 0, i32 3
  %49 = load i64, i64* %xhv_max, align 8
  %add = add i64 %49, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %46, i64 %add
  %50 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %50, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %51 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool49 = icmp ne %struct.hek* %51, null
  br i1 %tobool49, label %land.lhs.true50, label %cond.false107

land.lhs.true50:                                  ; preds = %land.lhs.true48
  %52 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u51 = getelementptr inbounds %struct.hv, %struct.hv* %52, i32 0, i32 3
  %svu_hash52 = bitcast %union.anon.4* %sv_u51 to %struct.he***
  %53 = load %struct.he**, %struct.he*** %svu_hash52, align 8
  %54 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any53 = getelementptr inbounds %struct.hv, %struct.hv* %54, i32 0, i32 0
  %55 = load %struct.xpvhv*, %struct.xpvhv** %sv_any53, align 8
  %xhv_max54 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %55, i32 0, i32 3
  %56 = load i64, i64* %xhv_max54, align 8
  %add55 = add i64 %56, 1
  %arrayidx56 = getelementptr inbounds %struct.he*, %struct.he** %53, i64 %add55
  %57 = bitcast %struct.he** %arrayidx56 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %57, i32 0, i32 4
  %58 = load i32, i32* %xhv_name_count, align 4
  %tobool57 = icmp ne i32 %58, 0
  br i1 %tobool57, label %cond.true58, label %cond.false67

cond.true58:                                      ; preds = %land.lhs.true50
  %59 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u59 = getelementptr inbounds %struct.hv, %struct.hv* %59, i32 0, i32 3
  %svu_hash60 = bitcast %union.anon.4* %sv_u59 to %struct.he***
  %60 = load %struct.he**, %struct.he*** %svu_hash60, align 8
  %61 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any61 = getelementptr inbounds %struct.hv, %struct.hv* %61, i32 0, i32 0
  %62 = load %struct.xpvhv*, %struct.xpvhv** %sv_any61, align 8
  %xhv_max62 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %62, i32 0, i32 3
  %63 = load i64, i64* %xhv_max62, align 8
  %add63 = add i64 %63, 1
  %arrayidx64 = getelementptr inbounds %struct.he*, %struct.he** %60, i64 %add63
  %64 = bitcast %struct.he** %arrayidx64 to %struct.xpvhv_aux*
  %xhv_name_u65 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %64, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u65 to %struct.hek***
  %65 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %66 = load %struct.hek*, %struct.hek** %65, align 8
  %tobool66 = icmp ne %struct.hek* %66, null
  br i1 %tobool66, label %cond.true77, label %cond.false107

cond.false67:                                     ; preds = %land.lhs.true50
  %67 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u68 = getelementptr inbounds %struct.hv, %struct.hv* %67, i32 0, i32 3
  %svu_hash69 = bitcast %union.anon.4* %sv_u68 to %struct.he***
  %68 = load %struct.he**, %struct.he*** %svu_hash69, align 8
  %69 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any70 = getelementptr inbounds %struct.hv, %struct.hv* %69, i32 0, i32 0
  %70 = load %struct.xpvhv*, %struct.xpvhv** %sv_any70, align 8
  %xhv_max71 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %70, i32 0, i32 3
  %71 = load i64, i64* %xhv_max71, align 8
  %add72 = add i64 %71, 1
  %arrayidx73 = getelementptr inbounds %struct.he*, %struct.he** %68, i64 %add72
  %72 = bitcast %struct.he** %arrayidx73 to %struct.xpvhv_aux*
  %xhv_name_u74 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %72, i32 0, i32 0
  %xhvnameu_name75 = bitcast %union._xhvnameu* %xhv_name_u74 to %struct.hek**
  %73 = load %struct.hek*, %struct.hek** %xhvnameu_name75, align 8
  %tobool76 = icmp ne %struct.hek* %73, null
  br i1 %tobool76, label %cond.true77, label %cond.false107

cond.true77:                                      ; preds = %cond.false67, %cond.true58
  %74 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u78 = getelementptr inbounds %struct.hv, %struct.hv* %74, i32 0, i32 3
  %svu_hash79 = bitcast %union.anon.4* %sv_u78 to %struct.he***
  %75 = load %struct.he**, %struct.he*** %svu_hash79, align 8
  %76 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any80 = getelementptr inbounds %struct.hv, %struct.hv* %76, i32 0, i32 0
  %77 = load %struct.xpvhv*, %struct.xpvhv** %sv_any80, align 8
  %xhv_max81 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %77, i32 0, i32 3
  %78 = load i64, i64* %xhv_max81, align 8
  %add82 = add i64 %78, 1
  %arrayidx83 = getelementptr inbounds %struct.he*, %struct.he** %75, i64 %add82
  %79 = bitcast %struct.he** %arrayidx83 to %struct.xpvhv_aux*
  %xhv_name_count84 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %79, i32 0, i32 4
  %80 = load i32, i32* %xhv_name_count84, align 4
  %tobool85 = icmp ne i32 %80, 0
  br i1 %tobool85, label %cond.true86, label %cond.false95

cond.true86:                                      ; preds = %cond.true77
  %81 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u87 = getelementptr inbounds %struct.hv, %struct.hv* %81, i32 0, i32 3
  %svu_hash88 = bitcast %union.anon.4* %sv_u87 to %struct.he***
  %82 = load %struct.he**, %struct.he*** %svu_hash88, align 8
  %83 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any89 = getelementptr inbounds %struct.hv, %struct.hv* %83, i32 0, i32 0
  %84 = load %struct.xpvhv*, %struct.xpvhv** %sv_any89, align 8
  %xhv_max90 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %84, i32 0, i32 3
  %85 = load i64, i64* %xhv_max90, align 8
  %add91 = add i64 %85, 1
  %arrayidx92 = getelementptr inbounds %struct.he*, %struct.he** %82, i64 %add91
  %86 = bitcast %struct.he** %arrayidx92 to %struct.xpvhv_aux*
  %xhv_name_u93 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %86, i32 0, i32 0
  %xhvnameu_names94 = bitcast %union._xhvnameu* %xhv_name_u93 to %struct.hek***
  %87 = load %struct.hek**, %struct.hek*** %xhvnameu_names94, align 8
  %88 = load %struct.hek*, %struct.hek** %87, align 8
  br label %cond.end104

cond.false95:                                     ; preds = %cond.true77
  %89 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u96 = getelementptr inbounds %struct.hv, %struct.hv* %89, i32 0, i32 3
  %svu_hash97 = bitcast %union.anon.4* %sv_u96 to %struct.he***
  %90 = load %struct.he**, %struct.he*** %svu_hash97, align 8
  %91 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any98 = getelementptr inbounds %struct.hv, %struct.hv* %91, i32 0, i32 0
  %92 = load %struct.xpvhv*, %struct.xpvhv** %sv_any98, align 8
  %xhv_max99 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %92, i32 0, i32 3
  %93 = load i64, i64* %xhv_max99, align 8
  %add100 = add i64 %93, 1
  %arrayidx101 = getelementptr inbounds %struct.he*, %struct.he** %90, i64 %add100
  %94 = bitcast %struct.he** %arrayidx101 to %struct.xpvhv_aux*
  %xhv_name_u102 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %94, i32 0, i32 0
  %xhvnameu_name103 = bitcast %union._xhvnameu* %xhv_name_u102 to %struct.hek**
  %95 = load %struct.hek*, %struct.hek** %xhvnameu_name103, align 8
  br label %cond.end104

cond.end104:                                      ; preds = %cond.false95, %cond.true86
  %cond105 = phi %struct.hek* [ %88, %cond.true86 ], [ %95, %cond.false95 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond105, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool106 = icmp ne i8* %arraydecay, null
  br i1 %tobool106, label %land.lhs.true108, label %cond.false112

cond.false107:                                    ; preds = %cond.false67, %cond.true58, %land.lhs.true48, %land.lhs.true
  br i1 false, label %land.lhs.true108, label %cond.false112

land.lhs.true108:                                 ; preds = %cond.false107, %cond.end104
  %96 = load %struct.hv*, %struct.hv** %stash, align 8
  %call109 = call i32 @Perl_Gv_AMupdate(%struct.hv* %96, i1 zeroext false)
  %tobool110 = icmp ne i32 %call109, 0
  br i1 %tobool110, label %cond.true111, label %cond.false112

cond.true111:                                     ; preds = %land.lhs.true108
  br i1 true, label %if.then115, label %if.end117

cond.false112:                                    ; preds = %land.lhs.true108, %cond.false107, %cond.end104
  %97 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags113 = getelementptr inbounds %struct.hv, %struct.hv* %97, i32 0, i32 2
  %98 = load i32, i32* %sv_flags113, align 4
  %and114 = and i32 %98, -268435457
  store i32 %and114, i32* %sv_flags113, align 4
  br i1 false, label %if.then115, label %if.end117

if.then115:                                       ; preds = %cond.false112, %cond.true111
  %99 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded116 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %99, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded116, align 8
  %100 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %100)
  br label %if.end117

if.end117:                                        ; preds = %if.then115, %cond.false112, %cond.true111, %do.body43
  %101 = load %struct.sv*, %struct.sv** %ref, align 8
  %102 = load %struct.hv*, %struct.hv** %stash, align 8
  %call118 = call %struct.sv* @Perl_sv_bless(%struct.sv* %101, %struct.hv* %102)
  br label %do.body119

do.body119:                                       ; preds = %if.end117
  %103 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u120 = getelementptr inbounds %struct.sv, %struct.sv* %103, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u120 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end121

do.end121:                                        ; preds = %do.body119
  %104 = load %struct.sv*, %struct.sv** %ref, align 8
  %105 = bitcast %struct.sv* %104 to i8*
  %106 = bitcast i8* %105 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %106)
  br label %do.end122

do.end122:                                        ; preds = %do.end121
  br label %if.end123

if.end123:                                        ; preds = %do.end122, %do.end40
  br label %do.end124

do.end124:                                        ; preds = %if.end123
  %107 = load i32, i32* %len, align 4
  %cmp125 = icmp eq i32 %107, 0
  br i1 %cmp125, label %if.then126, label %if.end127

if.then126:                                       ; preds = %do.end124
  %108 = load %struct.hv*, %struct.hv** %hv, align 8
  %109 = bitcast %struct.hv* %108 to %struct.sv*
  store %struct.sv* %109, %struct.sv** %retval, align 8
  br label %return

if.end127:                                        ; preds = %do.end124
  %110 = load %struct.hv*, %struct.hv** %hv, align 8
  %111 = load i32, i32* %len, align 4
  %add128 = add nsw i32 %111, 1
  %conv = sext i32 %add128 to i64
  call void @Perl_hv_ksplit(%struct.hv* %110, i64 %conv)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end127
  %112 = load i32, i32* %i, align 4
  %113 = load i32, i32* %len, align 4
  %cmp129 = icmp slt i32 %112, %113
  br i1 %cmp129, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %114 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call131 = call %struct.sv* @retrieve(%struct.stcxt* %114, i8* null)
  store %struct.sv* %call131, %struct.sv** %sv, align 8
  %115 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool132 = icmp ne %struct.sv* %115, null
  br i1 %tobool132, label %if.end134, label %if.then133

if.then133:                                       ; preds = %for.body
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end134:                                        ; preds = %for.body
  br label %do.body135

do.body135:                                       ; preds = %if.end134
  %116 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio136 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %116, i32 0, i32 24
  %117 = load %struct._PerlIO**, %struct._PerlIO*** %fio136, align 8
  %tobool137 = icmp ne %struct._PerlIO** %117, null
  br i1 %tobool137, label %if.else168, label %if.then138

if.then138:                                       ; preds = %do.body135
  br label %do.body139

do.body139:                                       ; preds = %if.then138
  %118 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf140 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %118, i32 0, i32 22
  %aptr141 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf140, i32 0, i32 2
  %119 = load i8*, i8** %aptr141, align 8
  %add.ptr142 = getelementptr inbounds i8, i8* %119, i64 4
  %120 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf143 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %120, i32 0, i32 22
  %aend144 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf143, i32 0, i32 3
  %121 = load i8*, i8** %aend144, align 8
  %cmp145 = icmp ule i8* %add.ptr142, %121
  br i1 %cmp145, label %if.then147, label %if.else165

if.then147:                                       ; preds = %do.body139
  %122 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf148 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %122, i32 0, i32 22
  %aptr149 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf148, i32 0, i32 2
  %123 = load i8*, i8** %aptr149, align 8
  %124 = ptrtoint i8* %123 to i64
  %125 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf150 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %125, i32 0, i32 22
  %aptr151 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf150, i32 0, i32 2
  %126 = load i8*, i8** %aptr151, align 8
  %127 = ptrtoint i8* %126 to i64
  %and152 = and i64 %127, -4
  %cmp153 = icmp eq i64 %124, %and152
  br i1 %cmp153, label %if.then155, label %if.else158

if.then155:                                       ; preds = %if.then147
  %128 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf156 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %128, i32 0, i32 22
  %aptr157 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf156, i32 0, i32 2
  %129 = load i8*, i8** %aptr157, align 8
  %130 = bitcast i8* %129 to i32*
  %131 = load i32, i32* %130, align 4
  store i32 %131, i32* %size, align 4
  br label %if.end161

if.else158:                                       ; preds = %if.then147
  %132 = bitcast i32* %size to i8*
  %133 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf159 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %133, i32 0, i32 22
  %aptr160 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf159, i32 0, i32 2
  %134 = load i8*, i8** %aptr160, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %132, i8* align 1 %134, i64 4, i1 false)
  br label %if.end161

if.end161:                                        ; preds = %if.else158, %if.then155
  %135 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf162 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %135, i32 0, i32 22
  %aptr163 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf162, i32 0, i32 2
  %136 = load i8*, i8** %aptr163, align 8
  %add.ptr164 = getelementptr inbounds i8, i8* %136, i64 4
  store i8* %add.ptr164, i8** %aptr163, align 8
  br label %if.end166

if.else165:                                       ; preds = %do.body139
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end166:                                        ; preds = %if.end161
  br label %do.end167

do.end167:                                        ; preds = %if.end166
  br label %if.end175

if.else168:                                       ; preds = %do.body135
  %137 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio169 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %137, i32 0, i32 24
  %138 = load %struct._PerlIO**, %struct._PerlIO*** %fio169, align 8
  %139 = bitcast i32* %size to i8*
  %call170 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %138, i8* %139, i64 4)
  %cmp171 = icmp ne i64 %call170, 4
  br i1 %cmp171, label %if.then173, label %if.end174

if.then173:                                       ; preds = %if.else168
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end174:                                        ; preds = %if.else168
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %do.end167
  %140 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder176 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %140, i32 0, i32 12
  %141 = load i32, i32* %netorder176, align 8
  %tobool177 = icmp ne i32 %141, 0
  br i1 %tobool177, label %if.then178, label %if.end180

if.then178:                                       ; preds = %if.end175
  %142 = load i32, i32* %size, align 4
  %call179 = call i32 @my_swap32(i32 %142)
  store i32 %call179, i32* %size, align 4
  br label %if.end180

if.end180:                                        ; preds = %if.then178, %if.end175
  br label %do.end181

do.end181:                                        ; preds = %if.end180
  br label %do.body182

do.body182:                                       ; preds = %do.end181
  %143 = load i32, i32* %size, align 4
  %conv183 = sext i32 %143 to i64
  %144 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %144, i32 0, i32 21
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf, i32 0, i32 1
  %145 = load i64, i64* %asiz, align 8
  %cmp184 = icmp uge i64 %conv183, %145
  br i1 %cmp184, label %if.then186, label %if.end197

if.then186:                                       ; preds = %do.body182
  %146 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf187 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %146, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf187, i32 0, i32 0
  %147 = load i8*, i8** %arena, align 8
  %148 = load i32, i32* %size, align 4
  %conv188 = sext i32 %148 to i64
  %add189 = add i64 %conv188, 1
  %mul = mul i64 %add189, 1
  %call190 = call i8* @Perl_safesysrealloc(i8* %147, i64 %mul)
  %149 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf191 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %149, i32 0, i32 21
  %arena192 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf191, i32 0, i32 0
  store i8* %call190, i8** %arena192, align 8
  %150 = load i32, i32* %size, align 4
  %conv193 = sext i32 %150 to i64
  %add194 = add i64 %conv193, 1
  %151 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf195 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %151, i32 0, i32 21
  %asiz196 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf195, i32 0, i32 1
  store i64 %add194, i64* %asiz196, align 8
  br label %if.end197

if.end197:                                        ; preds = %if.then186, %do.body182
  br label %do.end198

do.end198:                                        ; preds = %if.end197
  %152 = load i32, i32* %size, align 4
  %tobool199 = icmp ne i32 %152, 0
  br i1 %tobool199, label %if.then200, label %if.end239

if.then200:                                       ; preds = %do.end198
  br label %do.body201

do.body201:                                       ; preds = %if.then200
  %153 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio202 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %153, i32 0, i32 24
  %154 = load %struct._PerlIO**, %struct._PerlIO*** %fio202, align 8
  %tobool203 = icmp ne %struct._PerlIO** %154, null
  br i1 %tobool203, label %if.else226, label %if.then204

if.then204:                                       ; preds = %do.body201
  br label %do.body205

do.body205:                                       ; preds = %if.then204
  %155 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf206 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %155, i32 0, i32 22
  %aptr207 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf206, i32 0, i32 2
  %156 = load i8*, i8** %aptr207, align 8
  %157 = load i32, i32* %size, align 4
  %idx.ext = sext i32 %157 to i64
  %add.ptr208 = getelementptr inbounds i8, i8* %156, i64 %idx.ext
  %158 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf209 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %158, i32 0, i32 22
  %aend210 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf209, i32 0, i32 3
  %159 = load i8*, i8** %aend210, align 8
  %cmp211 = icmp ule i8* %add.ptr208, %159
  br i1 %cmp211, label %if.then213, label %if.else223

if.then213:                                       ; preds = %do.body205
  %160 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf214 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %160, i32 0, i32 21
  %arena215 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf214, i32 0, i32 0
  %161 = load i8*, i8** %arena215, align 8
  %162 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf216 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %162, i32 0, i32 22
  %aptr217 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf216, i32 0, i32 2
  %163 = load i8*, i8** %aptr217, align 8
  %164 = load i32, i32* %size, align 4
  %conv218 = sext i32 %164 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %161, i8* align 1 %163, i64 %conv218, i1 false)
  %165 = load i32, i32* %size, align 4
  %166 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf219 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %166, i32 0, i32 22
  %aptr220 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf219, i32 0, i32 2
  %167 = load i8*, i8** %aptr220, align 8
  %idx.ext221 = sext i32 %165 to i64
  %add.ptr222 = getelementptr inbounds i8, i8* %167, i64 %idx.ext221
  store i8* %add.ptr222, i8** %aptr220, align 8
  br label %if.end224

if.else223:                                       ; preds = %do.body205
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end224:                                        ; preds = %if.then213
  br label %do.end225

do.end225:                                        ; preds = %if.end224
  br label %if.end237

if.else226:                                       ; preds = %do.body201
  %168 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio227 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %168, i32 0, i32 24
  %169 = load %struct._PerlIO**, %struct._PerlIO*** %fio227, align 8
  %170 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf228 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %170, i32 0, i32 21
  %arena229 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf228, i32 0, i32 0
  %171 = load i8*, i8** %arena229, align 8
  %172 = load i32, i32* %size, align 4
  %conv230 = sext i32 %172 to i64
  %call231 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %169, i8* %171, i64 %conv230)
  %173 = load i32, i32* %size, align 4
  %conv232 = sext i32 %173 to i64
  %cmp233 = icmp ne i64 %call231, %conv232
  br i1 %cmp233, label %if.then235, label %if.end236

if.then235:                                       ; preds = %if.else226
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end236:                                        ; preds = %if.else226
  br label %if.end237

if.end237:                                        ; preds = %if.end236, %do.end225
  br label %do.end238

do.end238:                                        ; preds = %if.end237
  br label %if.end239

if.end239:                                        ; preds = %do.end238, %do.end198
  %174 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf240 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %174, i32 0, i32 21
  %arena241 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf240, i32 0, i32 0
  %175 = load i8*, i8** %arena241, align 8
  %176 = load i32, i32* %size, align 4
  %idxprom = sext i32 %176 to i64
  %arrayidx242 = getelementptr inbounds i8, i8* %175, i64 %idxprom
  store i8 0, i8* %arrayidx242, align 1
  %177 = load %struct.hv*, %struct.hv** %hv, align 8
  %178 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf243 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %178, i32 0, i32 21
  %arena244 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf243, i32 0, i32 0
  %179 = load i8*, i8** %arena244, align 8
  %180 = load i32, i32* %size, align 4
  %181 = load %struct.sv*, %struct.sv** %sv, align 8
  %call245 = call i8* @Perl_hv_common_key_len(%struct.hv* %177, i8* %179, i32 %180, i32 36, %struct.sv* %181, i32 0)
  %182 = bitcast i8* %call245 to %struct.sv**
  %cmp246 = icmp eq %struct.sv** %182, null
  br i1 %cmp246, label %if.then248, label %if.end249

if.then248:                                       ; preds = %if.end239
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end249:                                        ; preds = %if.end239
  br label %for.inc

for.inc:                                          ; preds = %if.end249
  %183 = load i32, i32* %i, align 4
  %inc250 = add nsw i32 %183, 1
  store i32 %inc250, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %184 = load %struct.hv*, %struct.hv** %hv, align 8
  %185 = bitcast %struct.hv* %184 to %struct.sv*
  store %struct.sv* %185, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %for.end, %if.then248, %if.then235, %if.else223, %if.then173, %if.else165, %if.then133, %if.then126, %if.then38, %if.then22, %if.else17
  %186 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %186
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_ref(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %rv = alloca %struct.sv*, align 8
  %sv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %call = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call, %struct.sv** %rv, align 8
  %0 = load i8*, i8** %cname.addr, align 8
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %cname.addr, align 8
  %call1 = call %struct.hv* @Perl_gv_stashpv(i8* %1, i32 1)
  store %struct.hv* %call1, %struct.hv** %stash, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  store %struct.hv* null, %struct.hv** %stash, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %do.body

do.body:                                          ; preds = %if.end
  br label %do.body2

do.body2:                                         ; preds = %do.body
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 5
  %3 = load %struct.av*, %struct.av** %aseen, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 10
  %5 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %5, 1
  store i64 %inc, i64* %tagnum, align 8
  %6 = load %struct.sv*, %struct.sv** %rv, align 8
  %7 = bitcast %struct.sv* %6 to i8*
  %8 = bitcast i8* %7 to %struct.sv*
  %call3 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %8)
  %call4 = call %struct.sv** @Perl_av_store(%struct.av* %3, i64 %5, %struct.sv* %call3)
  %cmp = icmp eq %struct.sv** %call4, null
  br i1 %cmp, label %if.then5, label %if.end6

if.then5:                                         ; preds = %do.body2
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end6:                                          ; preds = %do.body2
  br label %do.end

do.end:                                           ; preds = %if.end6
  %9 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool7 = icmp ne %struct.hv* %9, null
  br i1 %tobool7, label %if.then8, label %if.end84

if.then8:                                         ; preds = %do.end
  br label %do.body9

do.body9:                                         ; preds = %if.then8
  %10 = load %struct.sv*, %struct.sv** %rv, align 8
  %call10 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %10)
  store %struct.sv* %call10, %struct.sv** %ref, align 8
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 30
  %12 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool11 = icmp ne i32 %12, 0
  br i1 %tobool11, label %land.lhs.true, label %if.end78

land.lhs.true:                                    ; preds = %do.body9
  %13 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %13, i32 0, i32 2
  %14 = load i32, i32* %sv_flags, align 4
  %and = and i32 %14, 33554432
  %tobool12 = icmp ne i32 %and, 0
  br i1 %tobool12, label %land.lhs.true13, label %cond.false68

land.lhs.true13:                                  ; preds = %land.lhs.true
  %15 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %15, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %16 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %17 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %17, i32 0, i32 0
  %18 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %18, i32 0, i32 3
  %19 = load i64, i64* %xhv_max, align 8
  %add = add i64 %19, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %16, i64 %add
  %20 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %20, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %21 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool14 = icmp ne %struct.hek* %21, null
  br i1 %tobool14, label %land.lhs.true15, label %cond.false68

land.lhs.true15:                                  ; preds = %land.lhs.true13
  %22 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u16 = getelementptr inbounds %struct.hv, %struct.hv* %22, i32 0, i32 3
  %svu_hash17 = bitcast %union.anon.4* %sv_u16 to %struct.he***
  %23 = load %struct.he**, %struct.he*** %svu_hash17, align 8
  %24 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any18 = getelementptr inbounds %struct.hv, %struct.hv* %24, i32 0, i32 0
  %25 = load %struct.xpvhv*, %struct.xpvhv** %sv_any18, align 8
  %xhv_max19 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %25, i32 0, i32 3
  %26 = load i64, i64* %xhv_max19, align 8
  %add20 = add i64 %26, 1
  %arrayidx21 = getelementptr inbounds %struct.he*, %struct.he** %23, i64 %add20
  %27 = bitcast %struct.he** %arrayidx21 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %27, i32 0, i32 4
  %28 = load i32, i32* %xhv_name_count, align 4
  %tobool22 = icmp ne i32 %28, 0
  br i1 %tobool22, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true15
  %29 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u23 = getelementptr inbounds %struct.hv, %struct.hv* %29, i32 0, i32 3
  %svu_hash24 = bitcast %union.anon.4* %sv_u23 to %struct.he***
  %30 = load %struct.he**, %struct.he*** %svu_hash24, align 8
  %31 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any25 = getelementptr inbounds %struct.hv, %struct.hv* %31, i32 0, i32 0
  %32 = load %struct.xpvhv*, %struct.xpvhv** %sv_any25, align 8
  %xhv_max26 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %32, i32 0, i32 3
  %33 = load i64, i64* %xhv_max26, align 8
  %add27 = add i64 %33, 1
  %arrayidx28 = getelementptr inbounds %struct.he*, %struct.he** %30, i64 %add27
  %34 = bitcast %struct.he** %arrayidx28 to %struct.xpvhv_aux*
  %xhv_name_u29 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %34, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u29 to %struct.hek***
  %35 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %36 = load %struct.hek*, %struct.hek** %35, align 8
  %tobool30 = icmp ne %struct.hek* %36, null
  br i1 %tobool30, label %cond.true40, label %cond.false68

cond.false:                                       ; preds = %land.lhs.true15
  %37 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u31 = getelementptr inbounds %struct.hv, %struct.hv* %37, i32 0, i32 3
  %svu_hash32 = bitcast %union.anon.4* %sv_u31 to %struct.he***
  %38 = load %struct.he**, %struct.he*** %svu_hash32, align 8
  %39 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any33 = getelementptr inbounds %struct.hv, %struct.hv* %39, i32 0, i32 0
  %40 = load %struct.xpvhv*, %struct.xpvhv** %sv_any33, align 8
  %xhv_max34 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %40, i32 0, i32 3
  %41 = load i64, i64* %xhv_max34, align 8
  %add35 = add i64 %41, 1
  %arrayidx36 = getelementptr inbounds %struct.he*, %struct.he** %38, i64 %add35
  %42 = bitcast %struct.he** %arrayidx36 to %struct.xpvhv_aux*
  %xhv_name_u37 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %42, i32 0, i32 0
  %xhvnameu_name38 = bitcast %union._xhvnameu* %xhv_name_u37 to %struct.hek**
  %43 = load %struct.hek*, %struct.hek** %xhvnameu_name38, align 8
  %tobool39 = icmp ne %struct.hek* %43, null
  br i1 %tobool39, label %cond.true40, label %cond.false68

cond.true40:                                      ; preds = %cond.false, %cond.true
  %44 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u41 = getelementptr inbounds %struct.hv, %struct.hv* %44, i32 0, i32 3
  %svu_hash42 = bitcast %union.anon.4* %sv_u41 to %struct.he***
  %45 = load %struct.he**, %struct.he*** %svu_hash42, align 8
  %46 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any43 = getelementptr inbounds %struct.hv, %struct.hv* %46, i32 0, i32 0
  %47 = load %struct.xpvhv*, %struct.xpvhv** %sv_any43, align 8
  %xhv_max44 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %47, i32 0, i32 3
  %48 = load i64, i64* %xhv_max44, align 8
  %add45 = add i64 %48, 1
  %arrayidx46 = getelementptr inbounds %struct.he*, %struct.he** %45, i64 %add45
  %49 = bitcast %struct.he** %arrayidx46 to %struct.xpvhv_aux*
  %xhv_name_count47 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %49, i32 0, i32 4
  %50 = load i32, i32* %xhv_name_count47, align 4
  %tobool48 = icmp ne i32 %50, 0
  br i1 %tobool48, label %cond.true49, label %cond.false58

cond.true49:                                      ; preds = %cond.true40
  %51 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u50 = getelementptr inbounds %struct.hv, %struct.hv* %51, i32 0, i32 3
  %svu_hash51 = bitcast %union.anon.4* %sv_u50 to %struct.he***
  %52 = load %struct.he**, %struct.he*** %svu_hash51, align 8
  %53 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any52 = getelementptr inbounds %struct.hv, %struct.hv* %53, i32 0, i32 0
  %54 = load %struct.xpvhv*, %struct.xpvhv** %sv_any52, align 8
  %xhv_max53 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %54, i32 0, i32 3
  %55 = load i64, i64* %xhv_max53, align 8
  %add54 = add i64 %55, 1
  %arrayidx55 = getelementptr inbounds %struct.he*, %struct.he** %52, i64 %add54
  %56 = bitcast %struct.he** %arrayidx55 to %struct.xpvhv_aux*
  %xhv_name_u56 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %56, i32 0, i32 0
  %xhvnameu_names57 = bitcast %union._xhvnameu* %xhv_name_u56 to %struct.hek***
  %57 = load %struct.hek**, %struct.hek*** %xhvnameu_names57, align 8
  %58 = load %struct.hek*, %struct.hek** %57, align 8
  br label %cond.end

cond.false58:                                     ; preds = %cond.true40
  %59 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u59 = getelementptr inbounds %struct.hv, %struct.hv* %59, i32 0, i32 3
  %svu_hash60 = bitcast %union.anon.4* %sv_u59 to %struct.he***
  %60 = load %struct.he**, %struct.he*** %svu_hash60, align 8
  %61 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any61 = getelementptr inbounds %struct.hv, %struct.hv* %61, i32 0, i32 0
  %62 = load %struct.xpvhv*, %struct.xpvhv** %sv_any61, align 8
  %xhv_max62 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %62, i32 0, i32 3
  %63 = load i64, i64* %xhv_max62, align 8
  %add63 = add i64 %63, 1
  %arrayidx64 = getelementptr inbounds %struct.he*, %struct.he** %60, i64 %add63
  %64 = bitcast %struct.he** %arrayidx64 to %struct.xpvhv_aux*
  %xhv_name_u65 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %64, i32 0, i32 0
  %xhvnameu_name66 = bitcast %union._xhvnameu* %xhv_name_u65 to %struct.hek**
  %65 = load %struct.hek*, %struct.hek** %xhvnameu_name66, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false58, %cond.true49
  %cond = phi %struct.hek* [ %58, %cond.true49 ], [ %65, %cond.false58 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool67 = icmp ne i8* %arraydecay, null
  br i1 %tobool67, label %land.lhs.true69, label %cond.false73

cond.false68:                                     ; preds = %cond.false, %cond.true, %land.lhs.true13, %land.lhs.true
  br i1 false, label %land.lhs.true69, label %cond.false73

land.lhs.true69:                                  ; preds = %cond.false68, %cond.end
  %66 = load %struct.hv*, %struct.hv** %stash, align 8
  %call70 = call i32 @Perl_Gv_AMupdate(%struct.hv* %66, i1 zeroext false)
  %tobool71 = icmp ne i32 %call70, 0
  br i1 %tobool71, label %cond.true72, label %cond.false73

cond.true72:                                      ; preds = %land.lhs.true69
  br i1 true, label %if.then76, label %if.end78

cond.false73:                                     ; preds = %land.lhs.true69, %cond.false68, %cond.end
  %67 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags74 = getelementptr inbounds %struct.hv, %struct.hv* %67, i32 0, i32 2
  %68 = load i32, i32* %sv_flags74, align 4
  %and75 = and i32 %68, -268435457
  store i32 %and75, i32* %sv_flags74, align 4
  br i1 false, label %if.then76, label %if.end78

if.then76:                                        ; preds = %cond.false73, %cond.true72
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded77 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded77, align 8
  %70 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %70)
  br label %if.end78

if.end78:                                         ; preds = %if.then76, %cond.false73, %cond.true72, %do.body9
  %71 = load %struct.sv*, %struct.sv** %ref, align 8
  %72 = load %struct.hv*, %struct.hv** %stash, align 8
  %call79 = call %struct.sv* @Perl_sv_bless(%struct.sv* %71, %struct.hv* %72)
  br label %do.body80

do.body80:                                        ; preds = %if.end78
  %73 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u81 = getelementptr inbounds %struct.sv, %struct.sv* %73, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u81 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end82

do.end82:                                         ; preds = %do.body80
  %74 = load %struct.sv*, %struct.sv** %ref, align 8
  %75 = bitcast %struct.sv* %74 to i8*
  %76 = bitcast i8* %75 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %76)
  br label %do.end83

do.end83:                                         ; preds = %do.end82
  br label %if.end84

if.end84:                                         ; preds = %do.end83, %do.end
  br label %do.end85

do.end85:                                         ; preds = %if.end84
  %77 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call86 = call %struct.sv* @retrieve(%struct.stcxt* %77, i8* null)
  store %struct.sv* %call86, %struct.sv** %sv, align 8
  %78 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool87 = icmp ne %struct.sv* %78, null
  br i1 %tobool87, label %if.end89, label %if.then88

if.then88:                                        ; preds = %do.end85
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end89:                                         ; preds = %do.end85
  %79 = load i8*, i8** %cname.addr, align 8
  %tobool90 = icmp ne i8* %79, null
  br i1 %tobool90, label %if.then91, label %if.else92

if.then91:                                        ; preds = %if.end89
  br label %if.end93

if.else92:                                        ; preds = %if.end89
  %80 = load %struct.sv*, %struct.sv** %rv, align 8
  call void @Perl_sv_upgrade(%struct.sv* %80, i32 1)
  br label %if.end93

if.end93:                                         ; preds = %if.else92, %if.then91
  br label %do.body94

do.body94:                                        ; preds = %if.end93
  %81 = load %struct.sv*, %struct.sv** %sv, align 8
  %82 = load %struct.sv*, %struct.sv** %rv, align 8
  %sv_u95 = getelementptr inbounds %struct.sv, %struct.sv* %82, i32 0, i32 3
  %svu_rv96 = bitcast %union.anon* %sv_u95 to %struct.sv**
  store %struct.sv* %81, %struct.sv** %svu_rv96, align 8
  br label %do.end97

do.end97:                                         ; preds = %do.body94
  %83 = load %struct.sv*, %struct.sv** %rv, align 8
  %sv_flags98 = getelementptr inbounds %struct.sv, %struct.sv* %83, i32 0, i32 2
  %84 = load i32, i32* %sv_flags98, align 4
  %or = or i32 %84, 2048
  store i32 %or, i32* %sv_flags98, align 4
  %85 = load %struct.sv*, %struct.sv** %rv, align 8
  store %struct.sv* %85, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %do.end97, %if.then88, %if.then5
  %86 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %86
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_undef(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %call = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call, %struct.sv** %sv, align 8
  %0 = load i8*, i8** %cname.addr, align 8
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %cname.addr, align 8
  %call1 = call %struct.hv* @Perl_gv_stashpv(i8* %1, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call1, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  br label %do.body

do.body:                                          ; preds = %cond.end
  br label %do.body2

do.body2:                                         ; preds = %do.body
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 5
  %3 = load %struct.av*, %struct.av** %aseen, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 10
  %5 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %5, 1
  store i64 %inc, i64* %tagnum, align 8
  %6 = load %struct.sv*, %struct.sv** %sv, align 8
  %7 = bitcast %struct.sv* %6 to i8*
  %8 = bitcast i8* %7 to %struct.sv*
  %call3 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %8)
  %call4 = call %struct.sv** @Perl_av_store(%struct.av* %3, i64 %5, %struct.sv* %call3)
  %cmp = icmp eq %struct.sv** %call4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body2
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %do.body2
  br label %do.end

do.end:                                           ; preds = %if.end
  %9 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool5 = icmp ne %struct.hv* %9, null
  br i1 %tobool5, label %if.then6, label %if.end86

if.then6:                                         ; preds = %do.end
  br label %do.body7

do.body7:                                         ; preds = %if.then6
  %10 = load %struct.sv*, %struct.sv** %sv, align 8
  %call8 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %10)
  store %struct.sv* %call8, %struct.sv** %ref, align 8
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 30
  %12 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool9 = icmp ne i32 %12, 0
  br i1 %tobool9, label %land.lhs.true, label %if.end80

land.lhs.true:                                    ; preds = %do.body7
  %13 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %13, i32 0, i32 2
  %14 = load i32, i32* %sv_flags, align 4
  %and = and i32 %14, 33554432
  %tobool10 = icmp ne i32 %and, 0
  br i1 %tobool10, label %land.lhs.true11, label %cond.false70

land.lhs.true11:                                  ; preds = %land.lhs.true
  %15 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %15, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %16 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %17 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %17, i32 0, i32 0
  %18 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %18, i32 0, i32 3
  %19 = load i64, i64* %xhv_max, align 8
  %add = add i64 %19, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %16, i64 %add
  %20 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %20, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %21 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool12 = icmp ne %struct.hek* %21, null
  br i1 %tobool12, label %land.lhs.true13, label %cond.false70

land.lhs.true13:                                  ; preds = %land.lhs.true11
  %22 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u14 = getelementptr inbounds %struct.hv, %struct.hv* %22, i32 0, i32 3
  %svu_hash15 = bitcast %union.anon.4* %sv_u14 to %struct.he***
  %23 = load %struct.he**, %struct.he*** %svu_hash15, align 8
  %24 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any16 = getelementptr inbounds %struct.hv, %struct.hv* %24, i32 0, i32 0
  %25 = load %struct.xpvhv*, %struct.xpvhv** %sv_any16, align 8
  %xhv_max17 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %25, i32 0, i32 3
  %26 = load i64, i64* %xhv_max17, align 8
  %add18 = add i64 %26, 1
  %arrayidx19 = getelementptr inbounds %struct.he*, %struct.he** %23, i64 %add18
  %27 = bitcast %struct.he** %arrayidx19 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %27, i32 0, i32 4
  %28 = load i32, i32* %xhv_name_count, align 4
  %tobool20 = icmp ne i32 %28, 0
  br i1 %tobool20, label %cond.true21, label %cond.false30

cond.true21:                                      ; preds = %land.lhs.true13
  %29 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u22 = getelementptr inbounds %struct.hv, %struct.hv* %29, i32 0, i32 3
  %svu_hash23 = bitcast %union.anon.4* %sv_u22 to %struct.he***
  %30 = load %struct.he**, %struct.he*** %svu_hash23, align 8
  %31 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any24 = getelementptr inbounds %struct.hv, %struct.hv* %31, i32 0, i32 0
  %32 = load %struct.xpvhv*, %struct.xpvhv** %sv_any24, align 8
  %xhv_max25 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %32, i32 0, i32 3
  %33 = load i64, i64* %xhv_max25, align 8
  %add26 = add i64 %33, 1
  %arrayidx27 = getelementptr inbounds %struct.he*, %struct.he** %30, i64 %add26
  %34 = bitcast %struct.he** %arrayidx27 to %struct.xpvhv_aux*
  %xhv_name_u28 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %34, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u28 to %struct.hek***
  %35 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %36 = load %struct.hek*, %struct.hek** %35, align 8
  %tobool29 = icmp ne %struct.hek* %36, null
  br i1 %tobool29, label %cond.true40, label %cond.false70

cond.false30:                                     ; preds = %land.lhs.true13
  %37 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u31 = getelementptr inbounds %struct.hv, %struct.hv* %37, i32 0, i32 3
  %svu_hash32 = bitcast %union.anon.4* %sv_u31 to %struct.he***
  %38 = load %struct.he**, %struct.he*** %svu_hash32, align 8
  %39 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any33 = getelementptr inbounds %struct.hv, %struct.hv* %39, i32 0, i32 0
  %40 = load %struct.xpvhv*, %struct.xpvhv** %sv_any33, align 8
  %xhv_max34 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %40, i32 0, i32 3
  %41 = load i64, i64* %xhv_max34, align 8
  %add35 = add i64 %41, 1
  %arrayidx36 = getelementptr inbounds %struct.he*, %struct.he** %38, i64 %add35
  %42 = bitcast %struct.he** %arrayidx36 to %struct.xpvhv_aux*
  %xhv_name_u37 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %42, i32 0, i32 0
  %xhvnameu_name38 = bitcast %union._xhvnameu* %xhv_name_u37 to %struct.hek**
  %43 = load %struct.hek*, %struct.hek** %xhvnameu_name38, align 8
  %tobool39 = icmp ne %struct.hek* %43, null
  br i1 %tobool39, label %cond.true40, label %cond.false70

cond.true40:                                      ; preds = %cond.false30, %cond.true21
  %44 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u41 = getelementptr inbounds %struct.hv, %struct.hv* %44, i32 0, i32 3
  %svu_hash42 = bitcast %union.anon.4* %sv_u41 to %struct.he***
  %45 = load %struct.he**, %struct.he*** %svu_hash42, align 8
  %46 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any43 = getelementptr inbounds %struct.hv, %struct.hv* %46, i32 0, i32 0
  %47 = load %struct.xpvhv*, %struct.xpvhv** %sv_any43, align 8
  %xhv_max44 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %47, i32 0, i32 3
  %48 = load i64, i64* %xhv_max44, align 8
  %add45 = add i64 %48, 1
  %arrayidx46 = getelementptr inbounds %struct.he*, %struct.he** %45, i64 %add45
  %49 = bitcast %struct.he** %arrayidx46 to %struct.xpvhv_aux*
  %xhv_name_count47 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %49, i32 0, i32 4
  %50 = load i32, i32* %xhv_name_count47, align 4
  %tobool48 = icmp ne i32 %50, 0
  br i1 %tobool48, label %cond.true49, label %cond.false58

cond.true49:                                      ; preds = %cond.true40
  %51 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u50 = getelementptr inbounds %struct.hv, %struct.hv* %51, i32 0, i32 3
  %svu_hash51 = bitcast %union.anon.4* %sv_u50 to %struct.he***
  %52 = load %struct.he**, %struct.he*** %svu_hash51, align 8
  %53 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any52 = getelementptr inbounds %struct.hv, %struct.hv* %53, i32 0, i32 0
  %54 = load %struct.xpvhv*, %struct.xpvhv** %sv_any52, align 8
  %xhv_max53 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %54, i32 0, i32 3
  %55 = load i64, i64* %xhv_max53, align 8
  %add54 = add i64 %55, 1
  %arrayidx55 = getelementptr inbounds %struct.he*, %struct.he** %52, i64 %add54
  %56 = bitcast %struct.he** %arrayidx55 to %struct.xpvhv_aux*
  %xhv_name_u56 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %56, i32 0, i32 0
  %xhvnameu_names57 = bitcast %union._xhvnameu* %xhv_name_u56 to %struct.hek***
  %57 = load %struct.hek**, %struct.hek*** %xhvnameu_names57, align 8
  %58 = load %struct.hek*, %struct.hek** %57, align 8
  br label %cond.end67

cond.false58:                                     ; preds = %cond.true40
  %59 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u59 = getelementptr inbounds %struct.hv, %struct.hv* %59, i32 0, i32 3
  %svu_hash60 = bitcast %union.anon.4* %sv_u59 to %struct.he***
  %60 = load %struct.he**, %struct.he*** %svu_hash60, align 8
  %61 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any61 = getelementptr inbounds %struct.hv, %struct.hv* %61, i32 0, i32 0
  %62 = load %struct.xpvhv*, %struct.xpvhv** %sv_any61, align 8
  %xhv_max62 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %62, i32 0, i32 3
  %63 = load i64, i64* %xhv_max62, align 8
  %add63 = add i64 %63, 1
  %arrayidx64 = getelementptr inbounds %struct.he*, %struct.he** %60, i64 %add63
  %64 = bitcast %struct.he** %arrayidx64 to %struct.xpvhv_aux*
  %xhv_name_u65 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %64, i32 0, i32 0
  %xhvnameu_name66 = bitcast %union._xhvnameu* %xhv_name_u65 to %struct.hek**
  %65 = load %struct.hek*, %struct.hek** %xhvnameu_name66, align 8
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false58, %cond.true49
  %cond68 = phi %struct.hek* [ %58, %cond.true49 ], [ %65, %cond.false58 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond68, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool69 = icmp ne i8* %arraydecay, null
  br i1 %tobool69, label %land.lhs.true71, label %cond.false75

cond.false70:                                     ; preds = %cond.false30, %cond.true21, %land.lhs.true11, %land.lhs.true
  br i1 false, label %land.lhs.true71, label %cond.false75

land.lhs.true71:                                  ; preds = %cond.false70, %cond.end67
  %66 = load %struct.hv*, %struct.hv** %stash, align 8
  %call72 = call i32 @Perl_Gv_AMupdate(%struct.hv* %66, i1 zeroext false)
  %tobool73 = icmp ne i32 %call72, 0
  br i1 %tobool73, label %cond.true74, label %cond.false75

cond.true74:                                      ; preds = %land.lhs.true71
  br i1 true, label %if.then78, label %if.end80

cond.false75:                                     ; preds = %land.lhs.true71, %cond.false70, %cond.end67
  %67 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags76 = getelementptr inbounds %struct.hv, %struct.hv* %67, i32 0, i32 2
  %68 = load i32, i32* %sv_flags76, align 4
  %and77 = and i32 %68, -268435457
  store i32 %and77, i32* %sv_flags76, align 4
  br i1 false, label %if.then78, label %if.end80

if.then78:                                        ; preds = %cond.false75, %cond.true74
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded79 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded79, align 8
  %70 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %70)
  br label %if.end80

if.end80:                                         ; preds = %if.then78, %cond.false75, %cond.true74, %do.body7
  %71 = load %struct.sv*, %struct.sv** %ref, align 8
  %72 = load %struct.hv*, %struct.hv** %stash, align 8
  %call81 = call %struct.sv* @Perl_sv_bless(%struct.sv* %71, %struct.hv* %72)
  br label %do.body82

do.body82:                                        ; preds = %if.end80
  %73 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u83 = getelementptr inbounds %struct.sv, %struct.sv* %73, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u83 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end84

do.end84:                                         ; preds = %do.body82
  %74 = load %struct.sv*, %struct.sv** %ref, align 8
  %75 = bitcast %struct.sv* %74 to i8*
  %76 = bitcast i8* %75 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %76)
  br label %do.end85

do.end85:                                         ; preds = %do.end84
  br label %if.end86

if.end86:                                         ; preds = %do.end85, %do.end
  br label %do.end87

do.end87:                                         ; preds = %if.end86
  %77 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %77, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %do.end87, %if.then
  %78 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %78
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_integer(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %iv = alloca i64, align 8
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 24
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else9, label %if.then

if.then:                                          ; preds = %do.body
  br label %do.body1

do.body1:                                         ; preds = %if.then
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %5
  br i1 %cmp, label %if.then3, label %if.else

if.then3:                                         ; preds = %do.body1
  %6 = bitcast i64* %iv to i8*
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 22
  %aptr5 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf4, i32 0, i32 2
  %8 = load i8*, i8** %aptr5, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 1 %8, i64 8, i1 false)
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 22
  %aptr7 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf6, i32 0, i32 2
  %10 = load i8*, i8** %aptr7, align 8
  %add.ptr8 = getelementptr inbounds i8, i8* %10, i64 8
  store i8* %add.ptr8, i8** %aptr7, align 8
  br label %if.end

if.else:                                          ; preds = %do.body1
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then3
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end14

if.else9:                                         ; preds = %do.body
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio10 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 24
  %12 = load %struct._PerlIO**, %struct._PerlIO*** %fio10, align 8
  %13 = bitcast i64* %iv to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %12, i8* %13, i64 8)
  %cmp11 = icmp ne i64 %call, 8
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.else9
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end13:                                         ; preds = %if.else9
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %do.end
  br label %do.end15

do.end15:                                         ; preds = %if.end14
  %14 = load i64, i64* %iv, align 8
  %call16 = call %struct.sv* @Perl_newSViv(i64 %14)
  store %struct.sv* %call16, %struct.sv** %sv, align 8
  %15 = load i8*, i8** %cname.addr, align 8
  %tobool17 = icmp ne i8* %15, null
  br i1 %tobool17, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end15
  %16 = load i8*, i8** %cname.addr, align 8
  %call18 = call %struct.hv* @Perl_gv_stashpv(i8* %16, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %do.end15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call18, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  br label %do.body19

do.body19:                                        ; preds = %cond.end
  br label %do.body20

do.body20:                                        ; preds = %do.body19
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 5
  %18 = load %struct.av*, %struct.av** %aseen, align 8
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 10
  %20 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %20, 1
  store i64 %inc, i64* %tagnum, align 8
  %21 = load %struct.sv*, %struct.sv** %sv, align 8
  %22 = bitcast %struct.sv* %21 to i8*
  %23 = bitcast i8* %22 to %struct.sv*
  %call21 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %23)
  %call22 = call %struct.sv** @Perl_av_store(%struct.av* %18, i64 %20, %struct.sv* %call21)
  %cmp23 = icmp eq %struct.sv** %call22, null
  br i1 %cmp23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %do.body20
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end25:                                         ; preds = %do.body20
  br label %do.end26

do.end26:                                         ; preds = %if.end25
  %24 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool27 = icmp ne %struct.hv* %24, null
  br i1 %tobool27, label %if.then28, label %if.end108

if.then28:                                        ; preds = %do.end26
  br label %do.body29

do.body29:                                        ; preds = %if.then28
  %25 = load %struct.sv*, %struct.sv** %sv, align 8
  %call30 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %25)
  store %struct.sv* %call30, %struct.sv** %ref, align 8
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 30
  %27 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool31 = icmp ne i32 %27, 0
  br i1 %tobool31, label %land.lhs.true, label %if.end102

land.lhs.true:                                    ; preds = %do.body29
  %28 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %28, i32 0, i32 2
  %29 = load i32, i32* %sv_flags, align 4
  %and = and i32 %29, 33554432
  %tobool32 = icmp ne i32 %and, 0
  br i1 %tobool32, label %land.lhs.true33, label %cond.false92

land.lhs.true33:                                  ; preds = %land.lhs.true
  %30 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %30, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %31 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %32 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %32, i32 0, i32 0
  %33 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %33, i32 0, i32 3
  %34 = load i64, i64* %xhv_max, align 8
  %add = add i64 %34, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %31, i64 %add
  %35 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %35, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %36 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool34 = icmp ne %struct.hek* %36, null
  br i1 %tobool34, label %land.lhs.true35, label %cond.false92

land.lhs.true35:                                  ; preds = %land.lhs.true33
  %37 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u36 = getelementptr inbounds %struct.hv, %struct.hv* %37, i32 0, i32 3
  %svu_hash37 = bitcast %union.anon.4* %sv_u36 to %struct.he***
  %38 = load %struct.he**, %struct.he*** %svu_hash37, align 8
  %39 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any38 = getelementptr inbounds %struct.hv, %struct.hv* %39, i32 0, i32 0
  %40 = load %struct.xpvhv*, %struct.xpvhv** %sv_any38, align 8
  %xhv_max39 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %40, i32 0, i32 3
  %41 = load i64, i64* %xhv_max39, align 8
  %add40 = add i64 %41, 1
  %arrayidx41 = getelementptr inbounds %struct.he*, %struct.he** %38, i64 %add40
  %42 = bitcast %struct.he** %arrayidx41 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %42, i32 0, i32 4
  %43 = load i32, i32* %xhv_name_count, align 4
  %tobool42 = icmp ne i32 %43, 0
  br i1 %tobool42, label %cond.true43, label %cond.false52

cond.true43:                                      ; preds = %land.lhs.true35
  %44 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u44 = getelementptr inbounds %struct.hv, %struct.hv* %44, i32 0, i32 3
  %svu_hash45 = bitcast %union.anon.4* %sv_u44 to %struct.he***
  %45 = load %struct.he**, %struct.he*** %svu_hash45, align 8
  %46 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any46 = getelementptr inbounds %struct.hv, %struct.hv* %46, i32 0, i32 0
  %47 = load %struct.xpvhv*, %struct.xpvhv** %sv_any46, align 8
  %xhv_max47 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %47, i32 0, i32 3
  %48 = load i64, i64* %xhv_max47, align 8
  %add48 = add i64 %48, 1
  %arrayidx49 = getelementptr inbounds %struct.he*, %struct.he** %45, i64 %add48
  %49 = bitcast %struct.he** %arrayidx49 to %struct.xpvhv_aux*
  %xhv_name_u50 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %49, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u50 to %struct.hek***
  %50 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %51 = load %struct.hek*, %struct.hek** %50, align 8
  %tobool51 = icmp ne %struct.hek* %51, null
  br i1 %tobool51, label %cond.true62, label %cond.false92

cond.false52:                                     ; preds = %land.lhs.true35
  %52 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u53 = getelementptr inbounds %struct.hv, %struct.hv* %52, i32 0, i32 3
  %svu_hash54 = bitcast %union.anon.4* %sv_u53 to %struct.he***
  %53 = load %struct.he**, %struct.he*** %svu_hash54, align 8
  %54 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any55 = getelementptr inbounds %struct.hv, %struct.hv* %54, i32 0, i32 0
  %55 = load %struct.xpvhv*, %struct.xpvhv** %sv_any55, align 8
  %xhv_max56 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %55, i32 0, i32 3
  %56 = load i64, i64* %xhv_max56, align 8
  %add57 = add i64 %56, 1
  %arrayidx58 = getelementptr inbounds %struct.he*, %struct.he** %53, i64 %add57
  %57 = bitcast %struct.he** %arrayidx58 to %struct.xpvhv_aux*
  %xhv_name_u59 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %57, i32 0, i32 0
  %xhvnameu_name60 = bitcast %union._xhvnameu* %xhv_name_u59 to %struct.hek**
  %58 = load %struct.hek*, %struct.hek** %xhvnameu_name60, align 8
  %tobool61 = icmp ne %struct.hek* %58, null
  br i1 %tobool61, label %cond.true62, label %cond.false92

cond.true62:                                      ; preds = %cond.false52, %cond.true43
  %59 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u63 = getelementptr inbounds %struct.hv, %struct.hv* %59, i32 0, i32 3
  %svu_hash64 = bitcast %union.anon.4* %sv_u63 to %struct.he***
  %60 = load %struct.he**, %struct.he*** %svu_hash64, align 8
  %61 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any65 = getelementptr inbounds %struct.hv, %struct.hv* %61, i32 0, i32 0
  %62 = load %struct.xpvhv*, %struct.xpvhv** %sv_any65, align 8
  %xhv_max66 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %62, i32 0, i32 3
  %63 = load i64, i64* %xhv_max66, align 8
  %add67 = add i64 %63, 1
  %arrayidx68 = getelementptr inbounds %struct.he*, %struct.he** %60, i64 %add67
  %64 = bitcast %struct.he** %arrayidx68 to %struct.xpvhv_aux*
  %xhv_name_count69 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %64, i32 0, i32 4
  %65 = load i32, i32* %xhv_name_count69, align 4
  %tobool70 = icmp ne i32 %65, 0
  br i1 %tobool70, label %cond.true71, label %cond.false80

cond.true71:                                      ; preds = %cond.true62
  %66 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u72 = getelementptr inbounds %struct.hv, %struct.hv* %66, i32 0, i32 3
  %svu_hash73 = bitcast %union.anon.4* %sv_u72 to %struct.he***
  %67 = load %struct.he**, %struct.he*** %svu_hash73, align 8
  %68 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any74 = getelementptr inbounds %struct.hv, %struct.hv* %68, i32 0, i32 0
  %69 = load %struct.xpvhv*, %struct.xpvhv** %sv_any74, align 8
  %xhv_max75 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %69, i32 0, i32 3
  %70 = load i64, i64* %xhv_max75, align 8
  %add76 = add i64 %70, 1
  %arrayidx77 = getelementptr inbounds %struct.he*, %struct.he** %67, i64 %add76
  %71 = bitcast %struct.he** %arrayidx77 to %struct.xpvhv_aux*
  %xhv_name_u78 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %71, i32 0, i32 0
  %xhvnameu_names79 = bitcast %union._xhvnameu* %xhv_name_u78 to %struct.hek***
  %72 = load %struct.hek**, %struct.hek*** %xhvnameu_names79, align 8
  %73 = load %struct.hek*, %struct.hek** %72, align 8
  br label %cond.end89

cond.false80:                                     ; preds = %cond.true62
  %74 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u81 = getelementptr inbounds %struct.hv, %struct.hv* %74, i32 0, i32 3
  %svu_hash82 = bitcast %union.anon.4* %sv_u81 to %struct.he***
  %75 = load %struct.he**, %struct.he*** %svu_hash82, align 8
  %76 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any83 = getelementptr inbounds %struct.hv, %struct.hv* %76, i32 0, i32 0
  %77 = load %struct.xpvhv*, %struct.xpvhv** %sv_any83, align 8
  %xhv_max84 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %77, i32 0, i32 3
  %78 = load i64, i64* %xhv_max84, align 8
  %add85 = add i64 %78, 1
  %arrayidx86 = getelementptr inbounds %struct.he*, %struct.he** %75, i64 %add85
  %79 = bitcast %struct.he** %arrayidx86 to %struct.xpvhv_aux*
  %xhv_name_u87 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %79, i32 0, i32 0
  %xhvnameu_name88 = bitcast %union._xhvnameu* %xhv_name_u87 to %struct.hek**
  %80 = load %struct.hek*, %struct.hek** %xhvnameu_name88, align 8
  br label %cond.end89

cond.end89:                                       ; preds = %cond.false80, %cond.true71
  %cond90 = phi %struct.hek* [ %73, %cond.true71 ], [ %80, %cond.false80 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond90, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool91 = icmp ne i8* %arraydecay, null
  br i1 %tobool91, label %land.lhs.true93, label %cond.false97

cond.false92:                                     ; preds = %cond.false52, %cond.true43, %land.lhs.true33, %land.lhs.true
  br i1 false, label %land.lhs.true93, label %cond.false97

land.lhs.true93:                                  ; preds = %cond.false92, %cond.end89
  %81 = load %struct.hv*, %struct.hv** %stash, align 8
  %call94 = call i32 @Perl_Gv_AMupdate(%struct.hv* %81, i1 zeroext false)
  %tobool95 = icmp ne i32 %call94, 0
  br i1 %tobool95, label %cond.true96, label %cond.false97

cond.true96:                                      ; preds = %land.lhs.true93
  br i1 true, label %if.then100, label %if.end102

cond.false97:                                     ; preds = %land.lhs.true93, %cond.false92, %cond.end89
  %82 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags98 = getelementptr inbounds %struct.hv, %struct.hv* %82, i32 0, i32 2
  %83 = load i32, i32* %sv_flags98, align 4
  %and99 = and i32 %83, -268435457
  store i32 %and99, i32* %sv_flags98, align 4
  br i1 false, label %if.then100, label %if.end102

if.then100:                                       ; preds = %cond.false97, %cond.true96
  %84 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded101 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %84, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded101, align 8
  %85 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %85)
  br label %if.end102

if.end102:                                        ; preds = %if.then100, %cond.false97, %cond.true96, %do.body29
  %86 = load %struct.sv*, %struct.sv** %ref, align 8
  %87 = load %struct.hv*, %struct.hv** %stash, align 8
  %call103 = call %struct.sv* @Perl_sv_bless(%struct.sv* %86, %struct.hv* %87)
  br label %do.body104

do.body104:                                       ; preds = %if.end102
  %88 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u105 = getelementptr inbounds %struct.sv, %struct.sv* %88, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u105 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end106

do.end106:                                        ; preds = %do.body104
  %89 = load %struct.sv*, %struct.sv** %ref, align 8
  %90 = bitcast %struct.sv* %89 to i8*
  %91 = bitcast i8* %90 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %91)
  br label %do.end107

do.end107:                                        ; preds = %do.end106
  br label %if.end108

if.end108:                                        ; preds = %do.end107, %do.end26
  br label %do.end109

do.end109:                                        ; preds = %if.end108
  %92 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %92, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %do.end109, %if.then24, %if.then12, %if.else
  %93 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %93
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_double(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %nv = alloca double, align 8
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 24
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else9, label %if.then

if.then:                                          ; preds = %do.body
  br label %do.body1

do.body1:                                         ; preds = %if.then
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %5
  br i1 %cmp, label %if.then3, label %if.else

if.then3:                                         ; preds = %do.body1
  %6 = bitcast double* %nv to i8*
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 22
  %aptr5 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf4, i32 0, i32 2
  %8 = load i8*, i8** %aptr5, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 1 %8, i64 8, i1 false)
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 22
  %aptr7 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf6, i32 0, i32 2
  %10 = load i8*, i8** %aptr7, align 8
  %add.ptr8 = getelementptr inbounds i8, i8* %10, i64 8
  store i8* %add.ptr8, i8** %aptr7, align 8
  br label %if.end

if.else:                                          ; preds = %do.body1
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then3
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end14

if.else9:                                         ; preds = %do.body
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio10 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 24
  %12 = load %struct._PerlIO**, %struct._PerlIO*** %fio10, align 8
  %13 = bitcast double* %nv to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %12, i8* %13, i64 8)
  %cmp11 = icmp ne i64 %call, 8
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.else9
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end13:                                         ; preds = %if.else9
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %do.end
  br label %do.end15

do.end15:                                         ; preds = %if.end14
  %14 = load double, double* %nv, align 8
  %call16 = call %struct.sv* @Perl_newSVnv(double %14)
  store %struct.sv* %call16, %struct.sv** %sv, align 8
  %15 = load i8*, i8** %cname.addr, align 8
  %tobool17 = icmp ne i8* %15, null
  br i1 %tobool17, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end15
  %16 = load i8*, i8** %cname.addr, align 8
  %call18 = call %struct.hv* @Perl_gv_stashpv(i8* %16, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %do.end15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call18, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  br label %do.body19

do.body19:                                        ; preds = %cond.end
  br label %do.body20

do.body20:                                        ; preds = %do.body19
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 5
  %18 = load %struct.av*, %struct.av** %aseen, align 8
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 10
  %20 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %20, 1
  store i64 %inc, i64* %tagnum, align 8
  %21 = load %struct.sv*, %struct.sv** %sv, align 8
  %22 = bitcast %struct.sv* %21 to i8*
  %23 = bitcast i8* %22 to %struct.sv*
  %call21 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %23)
  %call22 = call %struct.sv** @Perl_av_store(%struct.av* %18, i64 %20, %struct.sv* %call21)
  %cmp23 = icmp eq %struct.sv** %call22, null
  br i1 %cmp23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %do.body20
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end25:                                         ; preds = %do.body20
  br label %do.end26

do.end26:                                         ; preds = %if.end25
  %24 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool27 = icmp ne %struct.hv* %24, null
  br i1 %tobool27, label %if.then28, label %if.end108

if.then28:                                        ; preds = %do.end26
  br label %do.body29

do.body29:                                        ; preds = %if.then28
  %25 = load %struct.sv*, %struct.sv** %sv, align 8
  %call30 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %25)
  store %struct.sv* %call30, %struct.sv** %ref, align 8
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 30
  %27 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool31 = icmp ne i32 %27, 0
  br i1 %tobool31, label %land.lhs.true, label %if.end102

land.lhs.true:                                    ; preds = %do.body29
  %28 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %28, i32 0, i32 2
  %29 = load i32, i32* %sv_flags, align 4
  %and = and i32 %29, 33554432
  %tobool32 = icmp ne i32 %and, 0
  br i1 %tobool32, label %land.lhs.true33, label %cond.false92

land.lhs.true33:                                  ; preds = %land.lhs.true
  %30 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %30, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %31 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %32 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %32, i32 0, i32 0
  %33 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %33, i32 0, i32 3
  %34 = load i64, i64* %xhv_max, align 8
  %add = add i64 %34, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %31, i64 %add
  %35 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %35, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %36 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool34 = icmp ne %struct.hek* %36, null
  br i1 %tobool34, label %land.lhs.true35, label %cond.false92

land.lhs.true35:                                  ; preds = %land.lhs.true33
  %37 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u36 = getelementptr inbounds %struct.hv, %struct.hv* %37, i32 0, i32 3
  %svu_hash37 = bitcast %union.anon.4* %sv_u36 to %struct.he***
  %38 = load %struct.he**, %struct.he*** %svu_hash37, align 8
  %39 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any38 = getelementptr inbounds %struct.hv, %struct.hv* %39, i32 0, i32 0
  %40 = load %struct.xpvhv*, %struct.xpvhv** %sv_any38, align 8
  %xhv_max39 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %40, i32 0, i32 3
  %41 = load i64, i64* %xhv_max39, align 8
  %add40 = add i64 %41, 1
  %arrayidx41 = getelementptr inbounds %struct.he*, %struct.he** %38, i64 %add40
  %42 = bitcast %struct.he** %arrayidx41 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %42, i32 0, i32 4
  %43 = load i32, i32* %xhv_name_count, align 4
  %tobool42 = icmp ne i32 %43, 0
  br i1 %tobool42, label %cond.true43, label %cond.false52

cond.true43:                                      ; preds = %land.lhs.true35
  %44 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u44 = getelementptr inbounds %struct.hv, %struct.hv* %44, i32 0, i32 3
  %svu_hash45 = bitcast %union.anon.4* %sv_u44 to %struct.he***
  %45 = load %struct.he**, %struct.he*** %svu_hash45, align 8
  %46 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any46 = getelementptr inbounds %struct.hv, %struct.hv* %46, i32 0, i32 0
  %47 = load %struct.xpvhv*, %struct.xpvhv** %sv_any46, align 8
  %xhv_max47 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %47, i32 0, i32 3
  %48 = load i64, i64* %xhv_max47, align 8
  %add48 = add i64 %48, 1
  %arrayidx49 = getelementptr inbounds %struct.he*, %struct.he** %45, i64 %add48
  %49 = bitcast %struct.he** %arrayidx49 to %struct.xpvhv_aux*
  %xhv_name_u50 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %49, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u50 to %struct.hek***
  %50 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %51 = load %struct.hek*, %struct.hek** %50, align 8
  %tobool51 = icmp ne %struct.hek* %51, null
  br i1 %tobool51, label %cond.true62, label %cond.false92

cond.false52:                                     ; preds = %land.lhs.true35
  %52 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u53 = getelementptr inbounds %struct.hv, %struct.hv* %52, i32 0, i32 3
  %svu_hash54 = bitcast %union.anon.4* %sv_u53 to %struct.he***
  %53 = load %struct.he**, %struct.he*** %svu_hash54, align 8
  %54 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any55 = getelementptr inbounds %struct.hv, %struct.hv* %54, i32 0, i32 0
  %55 = load %struct.xpvhv*, %struct.xpvhv** %sv_any55, align 8
  %xhv_max56 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %55, i32 0, i32 3
  %56 = load i64, i64* %xhv_max56, align 8
  %add57 = add i64 %56, 1
  %arrayidx58 = getelementptr inbounds %struct.he*, %struct.he** %53, i64 %add57
  %57 = bitcast %struct.he** %arrayidx58 to %struct.xpvhv_aux*
  %xhv_name_u59 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %57, i32 0, i32 0
  %xhvnameu_name60 = bitcast %union._xhvnameu* %xhv_name_u59 to %struct.hek**
  %58 = load %struct.hek*, %struct.hek** %xhvnameu_name60, align 8
  %tobool61 = icmp ne %struct.hek* %58, null
  br i1 %tobool61, label %cond.true62, label %cond.false92

cond.true62:                                      ; preds = %cond.false52, %cond.true43
  %59 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u63 = getelementptr inbounds %struct.hv, %struct.hv* %59, i32 0, i32 3
  %svu_hash64 = bitcast %union.anon.4* %sv_u63 to %struct.he***
  %60 = load %struct.he**, %struct.he*** %svu_hash64, align 8
  %61 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any65 = getelementptr inbounds %struct.hv, %struct.hv* %61, i32 0, i32 0
  %62 = load %struct.xpvhv*, %struct.xpvhv** %sv_any65, align 8
  %xhv_max66 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %62, i32 0, i32 3
  %63 = load i64, i64* %xhv_max66, align 8
  %add67 = add i64 %63, 1
  %arrayidx68 = getelementptr inbounds %struct.he*, %struct.he** %60, i64 %add67
  %64 = bitcast %struct.he** %arrayidx68 to %struct.xpvhv_aux*
  %xhv_name_count69 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %64, i32 0, i32 4
  %65 = load i32, i32* %xhv_name_count69, align 4
  %tobool70 = icmp ne i32 %65, 0
  br i1 %tobool70, label %cond.true71, label %cond.false80

cond.true71:                                      ; preds = %cond.true62
  %66 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u72 = getelementptr inbounds %struct.hv, %struct.hv* %66, i32 0, i32 3
  %svu_hash73 = bitcast %union.anon.4* %sv_u72 to %struct.he***
  %67 = load %struct.he**, %struct.he*** %svu_hash73, align 8
  %68 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any74 = getelementptr inbounds %struct.hv, %struct.hv* %68, i32 0, i32 0
  %69 = load %struct.xpvhv*, %struct.xpvhv** %sv_any74, align 8
  %xhv_max75 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %69, i32 0, i32 3
  %70 = load i64, i64* %xhv_max75, align 8
  %add76 = add i64 %70, 1
  %arrayidx77 = getelementptr inbounds %struct.he*, %struct.he** %67, i64 %add76
  %71 = bitcast %struct.he** %arrayidx77 to %struct.xpvhv_aux*
  %xhv_name_u78 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %71, i32 0, i32 0
  %xhvnameu_names79 = bitcast %union._xhvnameu* %xhv_name_u78 to %struct.hek***
  %72 = load %struct.hek**, %struct.hek*** %xhvnameu_names79, align 8
  %73 = load %struct.hek*, %struct.hek** %72, align 8
  br label %cond.end89

cond.false80:                                     ; preds = %cond.true62
  %74 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u81 = getelementptr inbounds %struct.hv, %struct.hv* %74, i32 0, i32 3
  %svu_hash82 = bitcast %union.anon.4* %sv_u81 to %struct.he***
  %75 = load %struct.he**, %struct.he*** %svu_hash82, align 8
  %76 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any83 = getelementptr inbounds %struct.hv, %struct.hv* %76, i32 0, i32 0
  %77 = load %struct.xpvhv*, %struct.xpvhv** %sv_any83, align 8
  %xhv_max84 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %77, i32 0, i32 3
  %78 = load i64, i64* %xhv_max84, align 8
  %add85 = add i64 %78, 1
  %arrayidx86 = getelementptr inbounds %struct.he*, %struct.he** %75, i64 %add85
  %79 = bitcast %struct.he** %arrayidx86 to %struct.xpvhv_aux*
  %xhv_name_u87 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %79, i32 0, i32 0
  %xhvnameu_name88 = bitcast %union._xhvnameu* %xhv_name_u87 to %struct.hek**
  %80 = load %struct.hek*, %struct.hek** %xhvnameu_name88, align 8
  br label %cond.end89

cond.end89:                                       ; preds = %cond.false80, %cond.true71
  %cond90 = phi %struct.hek* [ %73, %cond.true71 ], [ %80, %cond.false80 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond90, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool91 = icmp ne i8* %arraydecay, null
  br i1 %tobool91, label %land.lhs.true93, label %cond.false97

cond.false92:                                     ; preds = %cond.false52, %cond.true43, %land.lhs.true33, %land.lhs.true
  br i1 false, label %land.lhs.true93, label %cond.false97

land.lhs.true93:                                  ; preds = %cond.false92, %cond.end89
  %81 = load %struct.hv*, %struct.hv** %stash, align 8
  %call94 = call i32 @Perl_Gv_AMupdate(%struct.hv* %81, i1 zeroext false)
  %tobool95 = icmp ne i32 %call94, 0
  br i1 %tobool95, label %cond.true96, label %cond.false97

cond.true96:                                      ; preds = %land.lhs.true93
  br i1 true, label %if.then100, label %if.end102

cond.false97:                                     ; preds = %land.lhs.true93, %cond.false92, %cond.end89
  %82 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags98 = getelementptr inbounds %struct.hv, %struct.hv* %82, i32 0, i32 2
  %83 = load i32, i32* %sv_flags98, align 4
  %and99 = and i32 %83, -268435457
  store i32 %and99, i32* %sv_flags98, align 4
  br i1 false, label %if.then100, label %if.end102

if.then100:                                       ; preds = %cond.false97, %cond.true96
  %84 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded101 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %84, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded101, align 8
  %85 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %85)
  br label %if.end102

if.end102:                                        ; preds = %if.then100, %cond.false97, %cond.true96, %do.body29
  %86 = load %struct.sv*, %struct.sv** %ref, align 8
  %87 = load %struct.hv*, %struct.hv** %stash, align 8
  %call103 = call %struct.sv* @Perl_sv_bless(%struct.sv* %86, %struct.hv* %87)
  br label %do.body104

do.body104:                                       ; preds = %if.end102
  %88 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u105 = getelementptr inbounds %struct.sv, %struct.sv* %88, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u105 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end106

do.end106:                                        ; preds = %do.body104
  %89 = load %struct.sv*, %struct.sv** %ref, align 8
  %90 = bitcast %struct.sv* %89 to i8*
  %91 = bitcast i8* %90 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %91)
  br label %do.end107

do.end107:                                        ; preds = %do.end106
  br label %if.end108

if.end108:                                        ; preds = %do.end107, %do.end26
  br label %do.end109

do.end109:                                        ; preds = %if.end108
  %92 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %92, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %do.end109, %if.then24, %if.then12, %if.else
  %93 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %93
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_byte(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %siv = alloca i32, align 4
  %tmp = alloca i8, align 1
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 24
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else6, label %if.then

if.then:                                          ; preds = %do.body
  br label %do.body1

do.body1:                                         ; preds = %if.then
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %3, %5
  br i1 %cmp, label %if.then3, label %if.else

if.then3:                                         ; preds = %do.body1
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 22
  %aptr5 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf4, i32 0, i32 2
  %7 = load i8*, i8** %aptr5, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %aptr5, align 8
  %8 = load i8, i8* %7, align 1
  %conv = zext i8 %8 to i32
  store i32 %conv, i32* %siv, align 4
  br label %if.end

if.else:                                          ; preds = %do.body1
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then3
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end12

if.else6:                                         ; preds = %do.body
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio7 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 24
  %10 = load %struct._PerlIO**, %struct._PerlIO*** %fio7, align 8
  %call = call i32 @PerlIO_getc(%struct._PerlIO** %10)
  store i32 %call, i32* %siv, align 4
  %cmp8 = icmp eq i32 %call, -1
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.else6
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end11:                                         ; preds = %if.else6
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %do.end
  br label %do.end13

do.end13:                                         ; preds = %if.end12
  %11 = load i32, i32* %siv, align 4
  %conv14 = trunc i32 %11 to i8
  %conv15 = zext i8 %conv14 to i32
  %sub = sub nsw i32 %conv15, 128
  %conv16 = trunc i32 %sub to i8
  store i8 %conv16, i8* %tmp, align 1
  %12 = load i8, i8* %tmp, align 1
  %conv17 = sext i8 %12 to i64
  %call18 = call %struct.sv* @Perl_newSViv(i64 %conv17)
  store %struct.sv* %call18, %struct.sv** %sv, align 8
  %13 = load i8*, i8** %cname.addr, align 8
  %tobool19 = icmp ne i8* %13, null
  br i1 %tobool19, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end13
  %14 = load i8*, i8** %cname.addr, align 8
  %call20 = call %struct.hv* @Perl_gv_stashpv(i8* %14, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %do.end13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call20, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  br label %do.body21

do.body21:                                        ; preds = %cond.end
  br label %do.body22

do.body22:                                        ; preds = %do.body21
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 5
  %16 = load %struct.av*, %struct.av** %aseen, align 8
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 10
  %18 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %18, 1
  store i64 %inc, i64* %tagnum, align 8
  %19 = load %struct.sv*, %struct.sv** %sv, align 8
  %20 = bitcast %struct.sv* %19 to i8*
  %21 = bitcast i8* %20 to %struct.sv*
  %call23 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %21)
  %call24 = call %struct.sv** @Perl_av_store(%struct.av* %16, i64 %18, %struct.sv* %call23)
  %cmp25 = icmp eq %struct.sv** %call24, null
  br i1 %cmp25, label %if.then27, label %if.end28

if.then27:                                        ; preds = %do.body22
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end28:                                         ; preds = %do.body22
  br label %do.end29

do.end29:                                         ; preds = %if.end28
  %22 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool30 = icmp ne %struct.hv* %22, null
  br i1 %tobool30, label %if.then31, label %if.end111

if.then31:                                        ; preds = %do.end29
  br label %do.body32

do.body32:                                        ; preds = %if.then31
  %23 = load %struct.sv*, %struct.sv** %sv, align 8
  %call33 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %23)
  store %struct.sv* %call33, %struct.sv** %ref, align 8
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 30
  %25 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool34 = icmp ne i32 %25, 0
  br i1 %tobool34, label %land.lhs.true, label %if.end105

land.lhs.true:                                    ; preds = %do.body32
  %26 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %26, i32 0, i32 2
  %27 = load i32, i32* %sv_flags, align 4
  %and = and i32 %27, 33554432
  %tobool35 = icmp ne i32 %and, 0
  br i1 %tobool35, label %land.lhs.true36, label %cond.false95

land.lhs.true36:                                  ; preds = %land.lhs.true
  %28 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %28, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %29 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %30 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %30, i32 0, i32 0
  %31 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %31, i32 0, i32 3
  %32 = load i64, i64* %xhv_max, align 8
  %add = add i64 %32, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %29, i64 %add
  %33 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %33, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %34 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool37 = icmp ne %struct.hek* %34, null
  br i1 %tobool37, label %land.lhs.true38, label %cond.false95

land.lhs.true38:                                  ; preds = %land.lhs.true36
  %35 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u39 = getelementptr inbounds %struct.hv, %struct.hv* %35, i32 0, i32 3
  %svu_hash40 = bitcast %union.anon.4* %sv_u39 to %struct.he***
  %36 = load %struct.he**, %struct.he*** %svu_hash40, align 8
  %37 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any41 = getelementptr inbounds %struct.hv, %struct.hv* %37, i32 0, i32 0
  %38 = load %struct.xpvhv*, %struct.xpvhv** %sv_any41, align 8
  %xhv_max42 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %38, i32 0, i32 3
  %39 = load i64, i64* %xhv_max42, align 8
  %add43 = add i64 %39, 1
  %arrayidx44 = getelementptr inbounds %struct.he*, %struct.he** %36, i64 %add43
  %40 = bitcast %struct.he** %arrayidx44 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %40, i32 0, i32 4
  %41 = load i32, i32* %xhv_name_count, align 4
  %tobool45 = icmp ne i32 %41, 0
  br i1 %tobool45, label %cond.true46, label %cond.false55

cond.true46:                                      ; preds = %land.lhs.true38
  %42 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u47 = getelementptr inbounds %struct.hv, %struct.hv* %42, i32 0, i32 3
  %svu_hash48 = bitcast %union.anon.4* %sv_u47 to %struct.he***
  %43 = load %struct.he**, %struct.he*** %svu_hash48, align 8
  %44 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any49 = getelementptr inbounds %struct.hv, %struct.hv* %44, i32 0, i32 0
  %45 = load %struct.xpvhv*, %struct.xpvhv** %sv_any49, align 8
  %xhv_max50 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %45, i32 0, i32 3
  %46 = load i64, i64* %xhv_max50, align 8
  %add51 = add i64 %46, 1
  %arrayidx52 = getelementptr inbounds %struct.he*, %struct.he** %43, i64 %add51
  %47 = bitcast %struct.he** %arrayidx52 to %struct.xpvhv_aux*
  %xhv_name_u53 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %47, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u53 to %struct.hek***
  %48 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %49 = load %struct.hek*, %struct.hek** %48, align 8
  %tobool54 = icmp ne %struct.hek* %49, null
  br i1 %tobool54, label %cond.true65, label %cond.false95

cond.false55:                                     ; preds = %land.lhs.true38
  %50 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u56 = getelementptr inbounds %struct.hv, %struct.hv* %50, i32 0, i32 3
  %svu_hash57 = bitcast %union.anon.4* %sv_u56 to %struct.he***
  %51 = load %struct.he**, %struct.he*** %svu_hash57, align 8
  %52 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any58 = getelementptr inbounds %struct.hv, %struct.hv* %52, i32 0, i32 0
  %53 = load %struct.xpvhv*, %struct.xpvhv** %sv_any58, align 8
  %xhv_max59 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %53, i32 0, i32 3
  %54 = load i64, i64* %xhv_max59, align 8
  %add60 = add i64 %54, 1
  %arrayidx61 = getelementptr inbounds %struct.he*, %struct.he** %51, i64 %add60
  %55 = bitcast %struct.he** %arrayidx61 to %struct.xpvhv_aux*
  %xhv_name_u62 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %55, i32 0, i32 0
  %xhvnameu_name63 = bitcast %union._xhvnameu* %xhv_name_u62 to %struct.hek**
  %56 = load %struct.hek*, %struct.hek** %xhvnameu_name63, align 8
  %tobool64 = icmp ne %struct.hek* %56, null
  br i1 %tobool64, label %cond.true65, label %cond.false95

cond.true65:                                      ; preds = %cond.false55, %cond.true46
  %57 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u66 = getelementptr inbounds %struct.hv, %struct.hv* %57, i32 0, i32 3
  %svu_hash67 = bitcast %union.anon.4* %sv_u66 to %struct.he***
  %58 = load %struct.he**, %struct.he*** %svu_hash67, align 8
  %59 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any68 = getelementptr inbounds %struct.hv, %struct.hv* %59, i32 0, i32 0
  %60 = load %struct.xpvhv*, %struct.xpvhv** %sv_any68, align 8
  %xhv_max69 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %60, i32 0, i32 3
  %61 = load i64, i64* %xhv_max69, align 8
  %add70 = add i64 %61, 1
  %arrayidx71 = getelementptr inbounds %struct.he*, %struct.he** %58, i64 %add70
  %62 = bitcast %struct.he** %arrayidx71 to %struct.xpvhv_aux*
  %xhv_name_count72 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %62, i32 0, i32 4
  %63 = load i32, i32* %xhv_name_count72, align 4
  %tobool73 = icmp ne i32 %63, 0
  br i1 %tobool73, label %cond.true74, label %cond.false83

cond.true74:                                      ; preds = %cond.true65
  %64 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u75 = getelementptr inbounds %struct.hv, %struct.hv* %64, i32 0, i32 3
  %svu_hash76 = bitcast %union.anon.4* %sv_u75 to %struct.he***
  %65 = load %struct.he**, %struct.he*** %svu_hash76, align 8
  %66 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any77 = getelementptr inbounds %struct.hv, %struct.hv* %66, i32 0, i32 0
  %67 = load %struct.xpvhv*, %struct.xpvhv** %sv_any77, align 8
  %xhv_max78 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %67, i32 0, i32 3
  %68 = load i64, i64* %xhv_max78, align 8
  %add79 = add i64 %68, 1
  %arrayidx80 = getelementptr inbounds %struct.he*, %struct.he** %65, i64 %add79
  %69 = bitcast %struct.he** %arrayidx80 to %struct.xpvhv_aux*
  %xhv_name_u81 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %69, i32 0, i32 0
  %xhvnameu_names82 = bitcast %union._xhvnameu* %xhv_name_u81 to %struct.hek***
  %70 = load %struct.hek**, %struct.hek*** %xhvnameu_names82, align 8
  %71 = load %struct.hek*, %struct.hek** %70, align 8
  br label %cond.end92

cond.false83:                                     ; preds = %cond.true65
  %72 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u84 = getelementptr inbounds %struct.hv, %struct.hv* %72, i32 0, i32 3
  %svu_hash85 = bitcast %union.anon.4* %sv_u84 to %struct.he***
  %73 = load %struct.he**, %struct.he*** %svu_hash85, align 8
  %74 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any86 = getelementptr inbounds %struct.hv, %struct.hv* %74, i32 0, i32 0
  %75 = load %struct.xpvhv*, %struct.xpvhv** %sv_any86, align 8
  %xhv_max87 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %75, i32 0, i32 3
  %76 = load i64, i64* %xhv_max87, align 8
  %add88 = add i64 %76, 1
  %arrayidx89 = getelementptr inbounds %struct.he*, %struct.he** %73, i64 %add88
  %77 = bitcast %struct.he** %arrayidx89 to %struct.xpvhv_aux*
  %xhv_name_u90 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %77, i32 0, i32 0
  %xhvnameu_name91 = bitcast %union._xhvnameu* %xhv_name_u90 to %struct.hek**
  %78 = load %struct.hek*, %struct.hek** %xhvnameu_name91, align 8
  br label %cond.end92

cond.end92:                                       ; preds = %cond.false83, %cond.true74
  %cond93 = phi %struct.hek* [ %71, %cond.true74 ], [ %78, %cond.false83 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond93, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool94 = icmp ne i8* %arraydecay, null
  br i1 %tobool94, label %land.lhs.true96, label %cond.false100

cond.false95:                                     ; preds = %cond.false55, %cond.true46, %land.lhs.true36, %land.lhs.true
  br i1 false, label %land.lhs.true96, label %cond.false100

land.lhs.true96:                                  ; preds = %cond.false95, %cond.end92
  %79 = load %struct.hv*, %struct.hv** %stash, align 8
  %call97 = call i32 @Perl_Gv_AMupdate(%struct.hv* %79, i1 zeroext false)
  %tobool98 = icmp ne i32 %call97, 0
  br i1 %tobool98, label %cond.true99, label %cond.false100

cond.true99:                                      ; preds = %land.lhs.true96
  br i1 true, label %if.then103, label %if.end105

cond.false100:                                    ; preds = %land.lhs.true96, %cond.false95, %cond.end92
  %80 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags101 = getelementptr inbounds %struct.hv, %struct.hv* %80, i32 0, i32 2
  %81 = load i32, i32* %sv_flags101, align 4
  %and102 = and i32 %81, -268435457
  store i32 %and102, i32* %sv_flags101, align 4
  br i1 false, label %if.then103, label %if.end105

if.then103:                                       ; preds = %cond.false100, %cond.true99
  %82 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded104 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %82, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded104, align 8
  %83 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %83)
  br label %if.end105

if.end105:                                        ; preds = %if.then103, %cond.false100, %cond.true99, %do.body32
  %84 = load %struct.sv*, %struct.sv** %ref, align 8
  %85 = load %struct.hv*, %struct.hv** %stash, align 8
  %call106 = call %struct.sv* @Perl_sv_bless(%struct.sv* %84, %struct.hv* %85)
  br label %do.body107

do.body107:                                       ; preds = %if.end105
  %86 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u108 = getelementptr inbounds %struct.sv, %struct.sv* %86, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u108 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end109

do.end109:                                        ; preds = %do.body107
  %87 = load %struct.sv*, %struct.sv** %ref, align 8
  %88 = bitcast %struct.sv* %87 to i8*
  %89 = bitcast i8* %88 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %89)
  br label %do.end110

do.end110:                                        ; preds = %do.end109
  br label %if.end111

if.end111:                                        ; preds = %do.end110, %do.end29
  br label %do.end112

do.end112:                                        ; preds = %if.end111
  %90 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %90, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %do.end112, %if.then27, %if.then10, %if.else
  %91 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %91
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_netint(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %iv = alloca i32, align 4
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 24
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else19, label %if.then

if.then:                                          ; preds = %do.body
  br label %do.body1

do.body1:                                         ; preds = %if.then
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 4
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %5
  br i1 %cmp, label %if.then3, label %if.else17

if.then3:                                         ; preds = %do.body1
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 22
  %aptr5 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf4, i32 0, i32 2
  %7 = load i8*, i8** %aptr5, align 8
  %8 = ptrtoint i8* %7 to i64
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 22
  %aptr7 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf6, i32 0, i32 2
  %10 = load i8*, i8** %aptr7, align 8
  %11 = ptrtoint i8* %10 to i64
  %and = and i64 %11, -4
  %cmp8 = icmp eq i64 %8, %and
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.then3
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf10 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 22
  %aptr11 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf10, i32 0, i32 2
  %13 = load i8*, i8** %aptr11, align 8
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %iv, align 4
  br label %if.end

if.else:                                          ; preds = %if.then3
  %16 = bitcast i32* %iv to i8*
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf12 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 22
  %aptr13 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf12, i32 0, i32 2
  %18 = load i8*, i8** %aptr13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 1 %18, i64 4, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 22
  %aptr15 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf14, i32 0, i32 2
  %20 = load i8*, i8** %aptr15, align 8
  %add.ptr16 = getelementptr inbounds i8, i8* %20, i64 4
  store i8* %add.ptr16, i8** %aptr15, align 8
  br label %if.end18

if.else17:                                        ; preds = %do.body1
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end18:                                         ; preds = %if.end
  br label %do.end

do.end:                                           ; preds = %if.end18
  br label %if.end24

if.else19:                                        ; preds = %do.body
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio20 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 24
  %22 = load %struct._PerlIO**, %struct._PerlIO*** %fio20, align 8
  %23 = bitcast i32* %iv to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %22, i8* %23, i64 4)
  %cmp21 = icmp ne i64 %call, 4
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.else19
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end23:                                         ; preds = %if.else19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %do.end
  br label %do.end25

do.end25:                                         ; preds = %if.end24
  %24 = load i32, i32* %iv, align 4
  %call26 = call i32 @my_swap32(i32 %24)
  %conv = sext i32 %call26 to i64
  %call27 = call %struct.sv* @Perl_newSViv(i64 %conv)
  store %struct.sv* %call27, %struct.sv** %sv, align 8
  %25 = load i8*, i8** %cname.addr, align 8
  %tobool28 = icmp ne i8* %25, null
  br i1 %tobool28, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end25
  %26 = load i8*, i8** %cname.addr, align 8
  %call29 = call %struct.hv* @Perl_gv_stashpv(i8* %26, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %do.end25
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call29, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  br label %do.body30

do.body30:                                        ; preds = %cond.end
  br label %do.body31

do.body31:                                        ; preds = %do.body30
  %27 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %27, i32 0, i32 5
  %28 = load %struct.av*, %struct.av** %aseen, align 8
  %29 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %29, i32 0, i32 10
  %30 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %30, 1
  store i64 %inc, i64* %tagnum, align 8
  %31 = load %struct.sv*, %struct.sv** %sv, align 8
  %32 = bitcast %struct.sv* %31 to i8*
  %33 = bitcast i8* %32 to %struct.sv*
  %call32 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %33)
  %call33 = call %struct.sv** @Perl_av_store(%struct.av* %28, i64 %30, %struct.sv* %call32)
  %cmp34 = icmp eq %struct.sv** %call33, null
  br i1 %cmp34, label %if.then36, label %if.end37

if.then36:                                        ; preds = %do.body31
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end37:                                         ; preds = %do.body31
  br label %do.end38

do.end38:                                         ; preds = %if.end37
  %34 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool39 = icmp ne %struct.hv* %34, null
  br i1 %tobool39, label %if.then40, label %if.end121

if.then40:                                        ; preds = %do.end38
  br label %do.body41

do.body41:                                        ; preds = %if.then40
  %35 = load %struct.sv*, %struct.sv** %sv, align 8
  %call42 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %35)
  store %struct.sv* %call42, %struct.sv** %ref, align 8
  %36 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %36, i32 0, i32 30
  %37 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool43 = icmp ne i32 %37, 0
  br i1 %tobool43, label %land.lhs.true, label %if.end115

land.lhs.true:                                    ; preds = %do.body41
  %38 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %38, i32 0, i32 2
  %39 = load i32, i32* %sv_flags, align 4
  %and44 = and i32 %39, 33554432
  %tobool45 = icmp ne i32 %and44, 0
  br i1 %tobool45, label %land.lhs.true46, label %cond.false105

land.lhs.true46:                                  ; preds = %land.lhs.true
  %40 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %40, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %41 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %42 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %42, i32 0, i32 0
  %43 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %43, i32 0, i32 3
  %44 = load i64, i64* %xhv_max, align 8
  %add = add i64 %44, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %41, i64 %add
  %45 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %45, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %46 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool47 = icmp ne %struct.hek* %46, null
  br i1 %tobool47, label %land.lhs.true48, label %cond.false105

land.lhs.true48:                                  ; preds = %land.lhs.true46
  %47 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u49 = getelementptr inbounds %struct.hv, %struct.hv* %47, i32 0, i32 3
  %svu_hash50 = bitcast %union.anon.4* %sv_u49 to %struct.he***
  %48 = load %struct.he**, %struct.he*** %svu_hash50, align 8
  %49 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any51 = getelementptr inbounds %struct.hv, %struct.hv* %49, i32 0, i32 0
  %50 = load %struct.xpvhv*, %struct.xpvhv** %sv_any51, align 8
  %xhv_max52 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %50, i32 0, i32 3
  %51 = load i64, i64* %xhv_max52, align 8
  %add53 = add i64 %51, 1
  %arrayidx54 = getelementptr inbounds %struct.he*, %struct.he** %48, i64 %add53
  %52 = bitcast %struct.he** %arrayidx54 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %52, i32 0, i32 4
  %53 = load i32, i32* %xhv_name_count, align 4
  %tobool55 = icmp ne i32 %53, 0
  br i1 %tobool55, label %cond.true56, label %cond.false65

cond.true56:                                      ; preds = %land.lhs.true48
  %54 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u57 = getelementptr inbounds %struct.hv, %struct.hv* %54, i32 0, i32 3
  %svu_hash58 = bitcast %union.anon.4* %sv_u57 to %struct.he***
  %55 = load %struct.he**, %struct.he*** %svu_hash58, align 8
  %56 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any59 = getelementptr inbounds %struct.hv, %struct.hv* %56, i32 0, i32 0
  %57 = load %struct.xpvhv*, %struct.xpvhv** %sv_any59, align 8
  %xhv_max60 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %57, i32 0, i32 3
  %58 = load i64, i64* %xhv_max60, align 8
  %add61 = add i64 %58, 1
  %arrayidx62 = getelementptr inbounds %struct.he*, %struct.he** %55, i64 %add61
  %59 = bitcast %struct.he** %arrayidx62 to %struct.xpvhv_aux*
  %xhv_name_u63 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %59, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u63 to %struct.hek***
  %60 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %61 = load %struct.hek*, %struct.hek** %60, align 8
  %tobool64 = icmp ne %struct.hek* %61, null
  br i1 %tobool64, label %cond.true75, label %cond.false105

cond.false65:                                     ; preds = %land.lhs.true48
  %62 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u66 = getelementptr inbounds %struct.hv, %struct.hv* %62, i32 0, i32 3
  %svu_hash67 = bitcast %union.anon.4* %sv_u66 to %struct.he***
  %63 = load %struct.he**, %struct.he*** %svu_hash67, align 8
  %64 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any68 = getelementptr inbounds %struct.hv, %struct.hv* %64, i32 0, i32 0
  %65 = load %struct.xpvhv*, %struct.xpvhv** %sv_any68, align 8
  %xhv_max69 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %65, i32 0, i32 3
  %66 = load i64, i64* %xhv_max69, align 8
  %add70 = add i64 %66, 1
  %arrayidx71 = getelementptr inbounds %struct.he*, %struct.he** %63, i64 %add70
  %67 = bitcast %struct.he** %arrayidx71 to %struct.xpvhv_aux*
  %xhv_name_u72 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %67, i32 0, i32 0
  %xhvnameu_name73 = bitcast %union._xhvnameu* %xhv_name_u72 to %struct.hek**
  %68 = load %struct.hek*, %struct.hek** %xhvnameu_name73, align 8
  %tobool74 = icmp ne %struct.hek* %68, null
  br i1 %tobool74, label %cond.true75, label %cond.false105

cond.true75:                                      ; preds = %cond.false65, %cond.true56
  %69 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u76 = getelementptr inbounds %struct.hv, %struct.hv* %69, i32 0, i32 3
  %svu_hash77 = bitcast %union.anon.4* %sv_u76 to %struct.he***
  %70 = load %struct.he**, %struct.he*** %svu_hash77, align 8
  %71 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any78 = getelementptr inbounds %struct.hv, %struct.hv* %71, i32 0, i32 0
  %72 = load %struct.xpvhv*, %struct.xpvhv** %sv_any78, align 8
  %xhv_max79 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %72, i32 0, i32 3
  %73 = load i64, i64* %xhv_max79, align 8
  %add80 = add i64 %73, 1
  %arrayidx81 = getelementptr inbounds %struct.he*, %struct.he** %70, i64 %add80
  %74 = bitcast %struct.he** %arrayidx81 to %struct.xpvhv_aux*
  %xhv_name_count82 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %74, i32 0, i32 4
  %75 = load i32, i32* %xhv_name_count82, align 4
  %tobool83 = icmp ne i32 %75, 0
  br i1 %tobool83, label %cond.true84, label %cond.false93

cond.true84:                                      ; preds = %cond.true75
  %76 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u85 = getelementptr inbounds %struct.hv, %struct.hv* %76, i32 0, i32 3
  %svu_hash86 = bitcast %union.anon.4* %sv_u85 to %struct.he***
  %77 = load %struct.he**, %struct.he*** %svu_hash86, align 8
  %78 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any87 = getelementptr inbounds %struct.hv, %struct.hv* %78, i32 0, i32 0
  %79 = load %struct.xpvhv*, %struct.xpvhv** %sv_any87, align 8
  %xhv_max88 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %79, i32 0, i32 3
  %80 = load i64, i64* %xhv_max88, align 8
  %add89 = add i64 %80, 1
  %arrayidx90 = getelementptr inbounds %struct.he*, %struct.he** %77, i64 %add89
  %81 = bitcast %struct.he** %arrayidx90 to %struct.xpvhv_aux*
  %xhv_name_u91 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %81, i32 0, i32 0
  %xhvnameu_names92 = bitcast %union._xhvnameu* %xhv_name_u91 to %struct.hek***
  %82 = load %struct.hek**, %struct.hek*** %xhvnameu_names92, align 8
  %83 = load %struct.hek*, %struct.hek** %82, align 8
  br label %cond.end102

cond.false93:                                     ; preds = %cond.true75
  %84 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u94 = getelementptr inbounds %struct.hv, %struct.hv* %84, i32 0, i32 3
  %svu_hash95 = bitcast %union.anon.4* %sv_u94 to %struct.he***
  %85 = load %struct.he**, %struct.he*** %svu_hash95, align 8
  %86 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any96 = getelementptr inbounds %struct.hv, %struct.hv* %86, i32 0, i32 0
  %87 = load %struct.xpvhv*, %struct.xpvhv** %sv_any96, align 8
  %xhv_max97 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %87, i32 0, i32 3
  %88 = load i64, i64* %xhv_max97, align 8
  %add98 = add i64 %88, 1
  %arrayidx99 = getelementptr inbounds %struct.he*, %struct.he** %85, i64 %add98
  %89 = bitcast %struct.he** %arrayidx99 to %struct.xpvhv_aux*
  %xhv_name_u100 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %89, i32 0, i32 0
  %xhvnameu_name101 = bitcast %union._xhvnameu* %xhv_name_u100 to %struct.hek**
  %90 = load %struct.hek*, %struct.hek** %xhvnameu_name101, align 8
  br label %cond.end102

cond.end102:                                      ; preds = %cond.false93, %cond.true84
  %cond103 = phi %struct.hek* [ %83, %cond.true84 ], [ %90, %cond.false93 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond103, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool104 = icmp ne i8* %arraydecay, null
  br i1 %tobool104, label %land.lhs.true106, label %cond.false110

cond.false105:                                    ; preds = %cond.false65, %cond.true56, %land.lhs.true46, %land.lhs.true
  br i1 false, label %land.lhs.true106, label %cond.false110

land.lhs.true106:                                 ; preds = %cond.false105, %cond.end102
  %91 = load %struct.hv*, %struct.hv** %stash, align 8
  %call107 = call i32 @Perl_Gv_AMupdate(%struct.hv* %91, i1 zeroext false)
  %tobool108 = icmp ne i32 %call107, 0
  br i1 %tobool108, label %cond.true109, label %cond.false110

cond.true109:                                     ; preds = %land.lhs.true106
  br i1 true, label %if.then113, label %if.end115

cond.false110:                                    ; preds = %land.lhs.true106, %cond.false105, %cond.end102
  %92 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags111 = getelementptr inbounds %struct.hv, %struct.hv* %92, i32 0, i32 2
  %93 = load i32, i32* %sv_flags111, align 4
  %and112 = and i32 %93, -268435457
  store i32 %and112, i32* %sv_flags111, align 4
  br i1 false, label %if.then113, label %if.end115

if.then113:                                       ; preds = %cond.false110, %cond.true109
  %94 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded114 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %94, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded114, align 8
  %95 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %95)
  br label %if.end115

if.end115:                                        ; preds = %if.then113, %cond.false110, %cond.true109, %do.body41
  %96 = load %struct.sv*, %struct.sv** %ref, align 8
  %97 = load %struct.hv*, %struct.hv** %stash, align 8
  %call116 = call %struct.sv* @Perl_sv_bless(%struct.sv* %96, %struct.hv* %97)
  br label %do.body117

do.body117:                                       ; preds = %if.end115
  %98 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u118 = getelementptr inbounds %struct.sv, %struct.sv* %98, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u118 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end119

do.end119:                                        ; preds = %do.body117
  %99 = load %struct.sv*, %struct.sv** %ref, align 8
  %100 = bitcast %struct.sv* %99 to i8*
  %101 = bitcast i8* %100 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %101)
  br label %do.end120

do.end120:                                        ; preds = %do.end119
  br label %if.end121

if.end121:                                        ; preds = %do.end120, %do.end38
  br label %do.end122

do.end122:                                        ; preds = %if.end121
  %102 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %102, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %do.end122, %if.then36, %if.then22, %if.else17
  %103 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %103
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_scalar(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 24
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else6, label %if.then

if.then:                                          ; preds = %do.body
  br label %do.body1

do.body1:                                         ; preds = %if.then
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %3, %5
  br i1 %cmp, label %if.then3, label %if.else

if.then3:                                         ; preds = %do.body1
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 22
  %aptr5 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf4, i32 0, i32 2
  %7 = load i8*, i8** %aptr5, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %aptr5, align 8
  %8 = load i8, i8* %7, align 1
  %conv = zext i8 %8 to i32
  store i32 %conv, i32* %len, align 4
  br label %if.end

if.else:                                          ; preds = %do.body1
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then3
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end12

if.else6:                                         ; preds = %do.body
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio7 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 24
  %10 = load %struct._PerlIO**, %struct._PerlIO*** %fio7, align 8
  %call = call i32 @PerlIO_getc(%struct._PerlIO** %10)
  store i32 %call, i32* %len, align 4
  %cmp8 = icmp eq i32 %call, -1
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.else6
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end11:                                         ; preds = %if.else6
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %do.end
  br label %do.end13

do.end13:                                         ; preds = %if.end12
  %11 = load i32, i32* %len, align 4
  %conv14 = sext i32 %11 to i64
  %call15 = call %struct.sv* @Perl_newSV(i64 %conv14)
  store %struct.sv* %call15, %struct.sv** %sv, align 8
  %12 = load i8*, i8** %cname.addr, align 8
  %tobool16 = icmp ne i8* %12, null
  br i1 %tobool16, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end13
  %13 = load i8*, i8** %cname.addr, align 8
  %call17 = call %struct.hv* @Perl_gv_stashpv(i8* %13, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %do.end13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call17, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  br label %do.body18

do.body18:                                        ; preds = %cond.end
  br label %do.body19

do.body19:                                        ; preds = %do.body18
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 5
  %15 = load %struct.av*, %struct.av** %aseen, align 8
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 10
  %17 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %17, 1
  store i64 %inc, i64* %tagnum, align 8
  %18 = load %struct.sv*, %struct.sv** %sv, align 8
  %19 = bitcast %struct.sv* %18 to i8*
  %20 = bitcast i8* %19 to %struct.sv*
  %call20 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %20)
  %call21 = call %struct.sv** @Perl_av_store(%struct.av* %15, i64 %17, %struct.sv* %call20)
  %cmp22 = icmp eq %struct.sv** %call21, null
  br i1 %cmp22, label %if.then24, label %if.end25

if.then24:                                        ; preds = %do.body19
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end25:                                         ; preds = %do.body19
  br label %do.end26

do.end26:                                         ; preds = %if.end25
  %21 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool27 = icmp ne %struct.hv* %21, null
  br i1 %tobool27, label %if.then28, label %if.end108

if.then28:                                        ; preds = %do.end26
  br label %do.body29

do.body29:                                        ; preds = %if.then28
  %22 = load %struct.sv*, %struct.sv** %sv, align 8
  %call30 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %22)
  store %struct.sv* %call30, %struct.sv** %ref, align 8
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 30
  %24 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool31 = icmp ne i32 %24, 0
  br i1 %tobool31, label %land.lhs.true, label %if.end102

land.lhs.true:                                    ; preds = %do.body29
  %25 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %25, i32 0, i32 2
  %26 = load i32, i32* %sv_flags, align 4
  %and = and i32 %26, 33554432
  %tobool32 = icmp ne i32 %and, 0
  br i1 %tobool32, label %land.lhs.true33, label %cond.false92

land.lhs.true33:                                  ; preds = %land.lhs.true
  %27 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %27, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %28 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %29 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %29, i32 0, i32 0
  %30 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %30, i32 0, i32 3
  %31 = load i64, i64* %xhv_max, align 8
  %add = add i64 %31, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %28, i64 %add
  %32 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %32, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %33 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool34 = icmp ne %struct.hek* %33, null
  br i1 %tobool34, label %land.lhs.true35, label %cond.false92

land.lhs.true35:                                  ; preds = %land.lhs.true33
  %34 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u36 = getelementptr inbounds %struct.hv, %struct.hv* %34, i32 0, i32 3
  %svu_hash37 = bitcast %union.anon.4* %sv_u36 to %struct.he***
  %35 = load %struct.he**, %struct.he*** %svu_hash37, align 8
  %36 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any38 = getelementptr inbounds %struct.hv, %struct.hv* %36, i32 0, i32 0
  %37 = load %struct.xpvhv*, %struct.xpvhv** %sv_any38, align 8
  %xhv_max39 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %37, i32 0, i32 3
  %38 = load i64, i64* %xhv_max39, align 8
  %add40 = add i64 %38, 1
  %arrayidx41 = getelementptr inbounds %struct.he*, %struct.he** %35, i64 %add40
  %39 = bitcast %struct.he** %arrayidx41 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %39, i32 0, i32 4
  %40 = load i32, i32* %xhv_name_count, align 4
  %tobool42 = icmp ne i32 %40, 0
  br i1 %tobool42, label %cond.true43, label %cond.false52

cond.true43:                                      ; preds = %land.lhs.true35
  %41 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u44 = getelementptr inbounds %struct.hv, %struct.hv* %41, i32 0, i32 3
  %svu_hash45 = bitcast %union.anon.4* %sv_u44 to %struct.he***
  %42 = load %struct.he**, %struct.he*** %svu_hash45, align 8
  %43 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any46 = getelementptr inbounds %struct.hv, %struct.hv* %43, i32 0, i32 0
  %44 = load %struct.xpvhv*, %struct.xpvhv** %sv_any46, align 8
  %xhv_max47 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %44, i32 0, i32 3
  %45 = load i64, i64* %xhv_max47, align 8
  %add48 = add i64 %45, 1
  %arrayidx49 = getelementptr inbounds %struct.he*, %struct.he** %42, i64 %add48
  %46 = bitcast %struct.he** %arrayidx49 to %struct.xpvhv_aux*
  %xhv_name_u50 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %46, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u50 to %struct.hek***
  %47 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %48 = load %struct.hek*, %struct.hek** %47, align 8
  %tobool51 = icmp ne %struct.hek* %48, null
  br i1 %tobool51, label %cond.true62, label %cond.false92

cond.false52:                                     ; preds = %land.lhs.true35
  %49 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u53 = getelementptr inbounds %struct.hv, %struct.hv* %49, i32 0, i32 3
  %svu_hash54 = bitcast %union.anon.4* %sv_u53 to %struct.he***
  %50 = load %struct.he**, %struct.he*** %svu_hash54, align 8
  %51 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any55 = getelementptr inbounds %struct.hv, %struct.hv* %51, i32 0, i32 0
  %52 = load %struct.xpvhv*, %struct.xpvhv** %sv_any55, align 8
  %xhv_max56 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %52, i32 0, i32 3
  %53 = load i64, i64* %xhv_max56, align 8
  %add57 = add i64 %53, 1
  %arrayidx58 = getelementptr inbounds %struct.he*, %struct.he** %50, i64 %add57
  %54 = bitcast %struct.he** %arrayidx58 to %struct.xpvhv_aux*
  %xhv_name_u59 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %54, i32 0, i32 0
  %xhvnameu_name60 = bitcast %union._xhvnameu* %xhv_name_u59 to %struct.hek**
  %55 = load %struct.hek*, %struct.hek** %xhvnameu_name60, align 8
  %tobool61 = icmp ne %struct.hek* %55, null
  br i1 %tobool61, label %cond.true62, label %cond.false92

cond.true62:                                      ; preds = %cond.false52, %cond.true43
  %56 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u63 = getelementptr inbounds %struct.hv, %struct.hv* %56, i32 0, i32 3
  %svu_hash64 = bitcast %union.anon.4* %sv_u63 to %struct.he***
  %57 = load %struct.he**, %struct.he*** %svu_hash64, align 8
  %58 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any65 = getelementptr inbounds %struct.hv, %struct.hv* %58, i32 0, i32 0
  %59 = load %struct.xpvhv*, %struct.xpvhv** %sv_any65, align 8
  %xhv_max66 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %59, i32 0, i32 3
  %60 = load i64, i64* %xhv_max66, align 8
  %add67 = add i64 %60, 1
  %arrayidx68 = getelementptr inbounds %struct.he*, %struct.he** %57, i64 %add67
  %61 = bitcast %struct.he** %arrayidx68 to %struct.xpvhv_aux*
  %xhv_name_count69 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %61, i32 0, i32 4
  %62 = load i32, i32* %xhv_name_count69, align 4
  %tobool70 = icmp ne i32 %62, 0
  br i1 %tobool70, label %cond.true71, label %cond.false80

cond.true71:                                      ; preds = %cond.true62
  %63 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u72 = getelementptr inbounds %struct.hv, %struct.hv* %63, i32 0, i32 3
  %svu_hash73 = bitcast %union.anon.4* %sv_u72 to %struct.he***
  %64 = load %struct.he**, %struct.he*** %svu_hash73, align 8
  %65 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any74 = getelementptr inbounds %struct.hv, %struct.hv* %65, i32 0, i32 0
  %66 = load %struct.xpvhv*, %struct.xpvhv** %sv_any74, align 8
  %xhv_max75 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %66, i32 0, i32 3
  %67 = load i64, i64* %xhv_max75, align 8
  %add76 = add i64 %67, 1
  %arrayidx77 = getelementptr inbounds %struct.he*, %struct.he** %64, i64 %add76
  %68 = bitcast %struct.he** %arrayidx77 to %struct.xpvhv_aux*
  %xhv_name_u78 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %68, i32 0, i32 0
  %xhvnameu_names79 = bitcast %union._xhvnameu* %xhv_name_u78 to %struct.hek***
  %69 = load %struct.hek**, %struct.hek*** %xhvnameu_names79, align 8
  %70 = load %struct.hek*, %struct.hek** %69, align 8
  br label %cond.end89

cond.false80:                                     ; preds = %cond.true62
  %71 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u81 = getelementptr inbounds %struct.hv, %struct.hv* %71, i32 0, i32 3
  %svu_hash82 = bitcast %union.anon.4* %sv_u81 to %struct.he***
  %72 = load %struct.he**, %struct.he*** %svu_hash82, align 8
  %73 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any83 = getelementptr inbounds %struct.hv, %struct.hv* %73, i32 0, i32 0
  %74 = load %struct.xpvhv*, %struct.xpvhv** %sv_any83, align 8
  %xhv_max84 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %74, i32 0, i32 3
  %75 = load i64, i64* %xhv_max84, align 8
  %add85 = add i64 %75, 1
  %arrayidx86 = getelementptr inbounds %struct.he*, %struct.he** %72, i64 %add85
  %76 = bitcast %struct.he** %arrayidx86 to %struct.xpvhv_aux*
  %xhv_name_u87 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %76, i32 0, i32 0
  %xhvnameu_name88 = bitcast %union._xhvnameu* %xhv_name_u87 to %struct.hek**
  %77 = load %struct.hek*, %struct.hek** %xhvnameu_name88, align 8
  br label %cond.end89

cond.end89:                                       ; preds = %cond.false80, %cond.true71
  %cond90 = phi %struct.hek* [ %70, %cond.true71 ], [ %77, %cond.false80 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond90, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool91 = icmp ne i8* %arraydecay, null
  br i1 %tobool91, label %land.lhs.true93, label %cond.false97

cond.false92:                                     ; preds = %cond.false52, %cond.true43, %land.lhs.true33, %land.lhs.true
  br i1 false, label %land.lhs.true93, label %cond.false97

land.lhs.true93:                                  ; preds = %cond.false92, %cond.end89
  %78 = load %struct.hv*, %struct.hv** %stash, align 8
  %call94 = call i32 @Perl_Gv_AMupdate(%struct.hv* %78, i1 zeroext false)
  %tobool95 = icmp ne i32 %call94, 0
  br i1 %tobool95, label %cond.true96, label %cond.false97

cond.true96:                                      ; preds = %land.lhs.true93
  br i1 true, label %if.then100, label %if.end102

cond.false97:                                     ; preds = %land.lhs.true93, %cond.false92, %cond.end89
  %79 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags98 = getelementptr inbounds %struct.hv, %struct.hv* %79, i32 0, i32 2
  %80 = load i32, i32* %sv_flags98, align 4
  %and99 = and i32 %80, -268435457
  store i32 %and99, i32* %sv_flags98, align 4
  br i1 false, label %if.then100, label %if.end102

if.then100:                                       ; preds = %cond.false97, %cond.true96
  %81 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded101 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %81, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded101, align 8
  %82 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %82)
  br label %if.end102

if.end102:                                        ; preds = %if.then100, %cond.false97, %cond.true96, %do.body29
  %83 = load %struct.sv*, %struct.sv** %ref, align 8
  %84 = load %struct.hv*, %struct.hv** %stash, align 8
  %call103 = call %struct.sv* @Perl_sv_bless(%struct.sv* %83, %struct.hv* %84)
  br label %do.body104

do.body104:                                       ; preds = %if.end102
  %85 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u105 = getelementptr inbounds %struct.sv, %struct.sv* %85, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u105 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end106

do.end106:                                        ; preds = %do.body104
  %86 = load %struct.sv*, %struct.sv** %ref, align 8
  %87 = bitcast %struct.sv* %86 to i8*
  %88 = bitcast i8* %87 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %88)
  br label %do.end107

do.end107:                                        ; preds = %do.end106
  br label %if.end108

if.end108:                                        ; preds = %do.end107, %do.end26
  br label %do.end109

do.end109:                                        ; preds = %if.end108
  %89 = load i32, i32* %len, align 4
  %cmp110 = icmp eq i32 %89, 0
  br i1 %cmp110, label %if.then112, label %if.else134

if.then112:                                       ; preds = %do.end109
  %90 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags113 = getelementptr inbounds %struct.sv, %struct.sv* %90, i32 0, i32 2
  %91 = load i32, i32* %sv_flags113, align 4
  %and114 = and i32 %91, 255
  %cmp115 = icmp ule i32 %and114, 3
  br i1 %cmp115, label %if.then117, label %if.end118

if.then117:                                       ; preds = %if.then112
  %92 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_upgrade(%struct.sv* %92, i32 3)
  br label %if.end118

if.end118:                                        ; preds = %if.then117, %if.then112
  %93 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags119 = getelementptr inbounds %struct.sv, %struct.sv* %93, i32 0, i32 2
  %94 = load i32, i32* %sv_flags119, align 4
  %and120 = and i32 %94, 268435456
  %tobool121 = icmp ne i32 %and120, 0
  br i1 %tobool121, label %cond.true125, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end118
  %95 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any122 = getelementptr inbounds %struct.sv, %struct.sv* %95, i32 0, i32 0
  %96 = load i8*, i8** %sv_any122, align 8
  %97 = bitcast i8* %96 to %struct.xpv*
  %xpv_len_u = getelementptr inbounds %struct.xpv, %struct.xpv* %97, i32 0, i32 3
  %xpvlenu_len = bitcast %union.anon.17* %xpv_len_u to i64*
  %98 = load i64, i64* %xpvlenu_len, align 8
  %cmp123 = icmp ult i64 %98, 1
  br i1 %cmp123, label %cond.true125, label %cond.false127

cond.true125:                                     ; preds = %lor.lhs.false, %if.end118
  %99 = load %struct.sv*, %struct.sv** %sv, align 8
  %call126 = call i8* @Perl_sv_grow(%struct.sv* %99, i64 1)
  br label %cond.end129

cond.false127:                                    ; preds = %lor.lhs.false
  %100 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u128 = getelementptr inbounds %struct.sv, %struct.sv* %100, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u128 to i8**
  %101 = load i8*, i8** %svu_pv, align 8
  br label %cond.end129

cond.end129:                                      ; preds = %cond.false127, %cond.true125
  %cond130 = phi i8* [ %call126, %cond.true125 ], [ %101, %cond.false127 ]
  %102 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u131 = getelementptr inbounds %struct.sv, %struct.sv* %102, i32 0, i32 3
  %svu_pv132 = bitcast %union.anon* %sv_u131 to i8**
  %103 = load i8*, i8** %svu_pv132, align 8
  %104 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any133 = getelementptr inbounds %struct.sv, %struct.sv* %104, i32 0, i32 0
  %105 = load i8*, i8** %sv_any133, align 8
  %106 = bitcast i8* %105 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %106, i32 0, i32 2
  %107 = load i64, i64* %xpv_cur, align 8
  %add.ptr = getelementptr inbounds i8, i8* %103, i64 %107
  store i8 0, i8* %add.ptr, align 1
  br label %if.end183

if.else134:                                       ; preds = %do.end109
  br label %do.body135

do.body135:                                       ; preds = %if.else134
  %108 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio136 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %108, i32 0, i32 24
  %109 = load %struct._PerlIO**, %struct._PerlIO*** %fio136, align 8
  %tobool137 = icmp ne %struct._PerlIO** %109, null
  br i1 %tobool137, label %if.else160, label %if.then138

if.then138:                                       ; preds = %do.body135
  br label %do.body139

do.body139:                                       ; preds = %if.then138
  %110 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf140 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %110, i32 0, i32 22
  %aptr141 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf140, i32 0, i32 2
  %111 = load i8*, i8** %aptr141, align 8
  %112 = load i32, i32* %len, align 4
  %idx.ext = sext i32 %112 to i64
  %add.ptr142 = getelementptr inbounds i8, i8* %111, i64 %idx.ext
  %113 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf143 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %113, i32 0, i32 22
  %aend144 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf143, i32 0, i32 3
  %114 = load i8*, i8** %aend144, align 8
  %cmp145 = icmp ule i8* %add.ptr142, %114
  br i1 %cmp145, label %if.then147, label %if.else157

if.then147:                                       ; preds = %do.body139
  %115 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u148 = getelementptr inbounds %struct.sv, %struct.sv* %115, i32 0, i32 3
  %svu_pv149 = bitcast %union.anon* %sv_u148 to i8**
  %116 = load i8*, i8** %svu_pv149, align 8
  %117 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf150 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %117, i32 0, i32 22
  %aptr151 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf150, i32 0, i32 2
  %118 = load i8*, i8** %aptr151, align 8
  %119 = load i32, i32* %len, align 4
  %conv152 = sext i32 %119 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %116, i8* align 1 %118, i64 %conv152, i1 false)
  %120 = load i32, i32* %len, align 4
  %121 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf153 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %121, i32 0, i32 22
  %aptr154 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf153, i32 0, i32 2
  %122 = load i8*, i8** %aptr154, align 8
  %idx.ext155 = sext i32 %120 to i64
  %add.ptr156 = getelementptr inbounds i8, i8* %122, i64 %idx.ext155
  store i8* %add.ptr156, i8** %aptr154, align 8
  br label %if.end158

if.else157:                                       ; preds = %do.body139
  %123 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_free(%struct.sv* %123)
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end158:                                        ; preds = %if.then147
  br label %do.end159

do.end159:                                        ; preds = %if.end158
  br label %if.end171

if.else160:                                       ; preds = %do.body135
  %124 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio161 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %124, i32 0, i32 24
  %125 = load %struct._PerlIO**, %struct._PerlIO*** %fio161, align 8
  %126 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u162 = getelementptr inbounds %struct.sv, %struct.sv* %126, i32 0, i32 3
  %svu_pv163 = bitcast %union.anon* %sv_u162 to i8**
  %127 = load i8*, i8** %svu_pv163, align 8
  %128 = load i32, i32* %len, align 4
  %conv164 = sext i32 %128 to i64
  %call165 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %125, i8* %127, i64 %conv164)
  %129 = load i32, i32* %len, align 4
  %conv166 = sext i32 %129 to i64
  %cmp167 = icmp ne i64 %call165, %conv166
  br i1 %cmp167, label %if.then169, label %if.end170

if.then169:                                       ; preds = %if.else160
  %130 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_free(%struct.sv* %130)
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end170:                                        ; preds = %if.else160
  br label %if.end171

if.end171:                                        ; preds = %if.end170, %do.end159
  br label %do.end172

do.end172:                                        ; preds = %if.end171
  br label %do.body173

do.body173:                                       ; preds = %do.end172
  %131 = load i32, i32* %len, align 4
  %conv174 = sext i32 %131 to i64
  %132 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any175 = getelementptr inbounds %struct.sv, %struct.sv* %132, i32 0, i32 0
  %133 = load i8*, i8** %sv_any175, align 8
  %134 = bitcast i8* %133 to %struct.xpv*
  %xpv_cur176 = getelementptr inbounds %struct.xpv, %struct.xpv* %134, i32 0, i32 2
  store i64 %conv174, i64* %xpv_cur176, align 8
  br label %do.end177

do.end177:                                        ; preds = %do.body173
  %135 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_u178 = getelementptr inbounds %struct.sv, %struct.sv* %135, i32 0, i32 3
  %svu_pv179 = bitcast %union.anon* %sv_u178 to i8**
  %136 = load i8*, i8** %svu_pv179, align 8
  %137 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any180 = getelementptr inbounds %struct.sv, %struct.sv* %137, i32 0, i32 0
  %138 = load i8*, i8** %sv_any180, align 8
  %139 = bitcast i8* %138 to %struct.xpv*
  %xpv_cur181 = getelementptr inbounds %struct.xpv, %struct.xpv* %139, i32 0, i32 2
  %140 = load i64, i64* %xpv_cur181, align 8
  %add.ptr182 = getelementptr inbounds i8, i8* %136, i64 %140
  store i8 0, i8* %add.ptr182, align 1
  br label %if.end183

if.end183:                                        ; preds = %do.end177, %cond.end129
  %141 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags184 = getelementptr inbounds %struct.sv, %struct.sv* %141, i32 0, i32 2
  %142 = load i32, i32* %sv_flags184, align 4
  %and185 = and i32 %142, 1610547455
  store i32 %and185, i32* %sv_flags184, align 4
  %143 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags186 = getelementptr inbounds %struct.sv, %struct.sv* %143, i32 0, i32 2
  %144 = load i32, i32* %sv_flags186, align 4
  %or = or i32 %144, 17408
  store i32 %or, i32* %sv_flags186, align 4
  %145 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_tainted = getelementptr inbounds %struct.stcxt, %struct.stcxt* %145, i32 0, i32 13
  %146 = load i32, i32* %s_tainted, align 4
  %tobool187 = icmp ne i32 %146, 0
  br i1 %tobool187, label %if.then188, label %if.end211

if.then188:                                       ; preds = %if.end183
  br label %do.body189

do.body189:                                       ; preds = %if.then188
  %147 = load i8, i8* @PL_tainting, align 1
  %tobool190 = trunc i8 %147 to i1
  br i1 %tobool190, label %cond.true192, label %cond.false193

cond.true192:                                     ; preds = %do.body189
  br i1 true, label %if.then194, label %if.end209

cond.false193:                                    ; preds = %do.body189
  br i1 false, label %if.then194, label %if.end209

if.then194:                                       ; preds = %cond.false193, %cond.true192
  %148 = load i8, i8* @PL_tainted, align 1
  %tobool195 = trunc i8 %148 to i1
  br i1 %tobool195, label %cond.true197, label %cond.false198

cond.true197:                                     ; preds = %if.then194
  br i1 true, label %if.then199, label %if.end208

cond.false198:                                    ; preds = %if.then194
  br i1 false, label %if.then199, label %if.end208

if.then199:                                       ; preds = %cond.false198, %cond.true197
  br label %do.body200

do.body200:                                       ; preds = %if.then199
  %149 = load i8, i8* @PL_tainting, align 1
  %tobool201 = trunc i8 %149 to i1
  br i1 %tobool201, label %cond.true203, label %cond.false204

cond.true203:                                     ; preds = %do.body200
  br i1 true, label %if.then205, label %if.end206

cond.false204:                                    ; preds = %do.body200
  br i1 false, label %if.then205, label %if.end206

if.then205:                                       ; preds = %cond.false204, %cond.true203
  %150 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_magic(%struct.sv* %150, %struct.sv* null, i32 116, i8* null, i32 0)
  br label %if.end206

if.end206:                                        ; preds = %if.then205, %cond.false204, %cond.true203
  br label %do.end207

do.end207:                                        ; preds = %if.end206
  br label %if.end208

if.end208:                                        ; preds = %do.end207, %cond.false198, %cond.true197
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %cond.false193, %cond.true192
  br label %do.end210

do.end210:                                        ; preds = %if.end209
  br label %if.end211

if.end211:                                        ; preds = %do.end210, %if.end183
  %151 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %151, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end211, %if.then169, %if.else157, %if.then24, %if.then10, %if.else
  %152 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %152
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_tied_array(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %tv = alloca %struct.sv*, align 8
  %sv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %call = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call, %struct.sv** %tv, align 8
  %0 = load i8*, i8** %cname.addr, align 8
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %cname.addr, align 8
  %call1 = call %struct.hv* @Perl_gv_stashpv(i8* %1, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call1, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  br label %do.body

do.body:                                          ; preds = %cond.end
  br label %do.body2

do.body2:                                         ; preds = %do.body
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 5
  %3 = load %struct.av*, %struct.av** %aseen, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 10
  %5 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %5, 1
  store i64 %inc, i64* %tagnum, align 8
  %6 = load %struct.sv*, %struct.sv** %tv, align 8
  %7 = bitcast %struct.sv* %6 to i8*
  %8 = bitcast i8* %7 to %struct.sv*
  %call3 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %8)
  %call4 = call %struct.sv** @Perl_av_store(%struct.av* %3, i64 %5, %struct.sv* %call3)
  %cmp = icmp eq %struct.sv** %call4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body2
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %do.body2
  br label %do.end

do.end:                                           ; preds = %if.end
  %9 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool5 = icmp ne %struct.hv* %9, null
  br i1 %tobool5, label %if.then6, label %if.end86

if.then6:                                         ; preds = %do.end
  br label %do.body7

do.body7:                                         ; preds = %if.then6
  %10 = load %struct.sv*, %struct.sv** %tv, align 8
  %call8 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %10)
  store %struct.sv* %call8, %struct.sv** %ref, align 8
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 30
  %12 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool9 = icmp ne i32 %12, 0
  br i1 %tobool9, label %land.lhs.true, label %if.end80

land.lhs.true:                                    ; preds = %do.body7
  %13 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %13, i32 0, i32 2
  %14 = load i32, i32* %sv_flags, align 4
  %and = and i32 %14, 33554432
  %tobool10 = icmp ne i32 %and, 0
  br i1 %tobool10, label %land.lhs.true11, label %cond.false70

land.lhs.true11:                                  ; preds = %land.lhs.true
  %15 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %15, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %16 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %17 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %17, i32 0, i32 0
  %18 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %18, i32 0, i32 3
  %19 = load i64, i64* %xhv_max, align 8
  %add = add i64 %19, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %16, i64 %add
  %20 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %20, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %21 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool12 = icmp ne %struct.hek* %21, null
  br i1 %tobool12, label %land.lhs.true13, label %cond.false70

land.lhs.true13:                                  ; preds = %land.lhs.true11
  %22 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u14 = getelementptr inbounds %struct.hv, %struct.hv* %22, i32 0, i32 3
  %svu_hash15 = bitcast %union.anon.4* %sv_u14 to %struct.he***
  %23 = load %struct.he**, %struct.he*** %svu_hash15, align 8
  %24 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any16 = getelementptr inbounds %struct.hv, %struct.hv* %24, i32 0, i32 0
  %25 = load %struct.xpvhv*, %struct.xpvhv** %sv_any16, align 8
  %xhv_max17 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %25, i32 0, i32 3
  %26 = load i64, i64* %xhv_max17, align 8
  %add18 = add i64 %26, 1
  %arrayidx19 = getelementptr inbounds %struct.he*, %struct.he** %23, i64 %add18
  %27 = bitcast %struct.he** %arrayidx19 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %27, i32 0, i32 4
  %28 = load i32, i32* %xhv_name_count, align 4
  %tobool20 = icmp ne i32 %28, 0
  br i1 %tobool20, label %cond.true21, label %cond.false30

cond.true21:                                      ; preds = %land.lhs.true13
  %29 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u22 = getelementptr inbounds %struct.hv, %struct.hv* %29, i32 0, i32 3
  %svu_hash23 = bitcast %union.anon.4* %sv_u22 to %struct.he***
  %30 = load %struct.he**, %struct.he*** %svu_hash23, align 8
  %31 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any24 = getelementptr inbounds %struct.hv, %struct.hv* %31, i32 0, i32 0
  %32 = load %struct.xpvhv*, %struct.xpvhv** %sv_any24, align 8
  %xhv_max25 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %32, i32 0, i32 3
  %33 = load i64, i64* %xhv_max25, align 8
  %add26 = add i64 %33, 1
  %arrayidx27 = getelementptr inbounds %struct.he*, %struct.he** %30, i64 %add26
  %34 = bitcast %struct.he** %arrayidx27 to %struct.xpvhv_aux*
  %xhv_name_u28 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %34, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u28 to %struct.hek***
  %35 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %36 = load %struct.hek*, %struct.hek** %35, align 8
  %tobool29 = icmp ne %struct.hek* %36, null
  br i1 %tobool29, label %cond.true40, label %cond.false70

cond.false30:                                     ; preds = %land.lhs.true13
  %37 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u31 = getelementptr inbounds %struct.hv, %struct.hv* %37, i32 0, i32 3
  %svu_hash32 = bitcast %union.anon.4* %sv_u31 to %struct.he***
  %38 = load %struct.he**, %struct.he*** %svu_hash32, align 8
  %39 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any33 = getelementptr inbounds %struct.hv, %struct.hv* %39, i32 0, i32 0
  %40 = load %struct.xpvhv*, %struct.xpvhv** %sv_any33, align 8
  %xhv_max34 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %40, i32 0, i32 3
  %41 = load i64, i64* %xhv_max34, align 8
  %add35 = add i64 %41, 1
  %arrayidx36 = getelementptr inbounds %struct.he*, %struct.he** %38, i64 %add35
  %42 = bitcast %struct.he** %arrayidx36 to %struct.xpvhv_aux*
  %xhv_name_u37 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %42, i32 0, i32 0
  %xhvnameu_name38 = bitcast %union._xhvnameu* %xhv_name_u37 to %struct.hek**
  %43 = load %struct.hek*, %struct.hek** %xhvnameu_name38, align 8
  %tobool39 = icmp ne %struct.hek* %43, null
  br i1 %tobool39, label %cond.true40, label %cond.false70

cond.true40:                                      ; preds = %cond.false30, %cond.true21
  %44 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u41 = getelementptr inbounds %struct.hv, %struct.hv* %44, i32 0, i32 3
  %svu_hash42 = bitcast %union.anon.4* %sv_u41 to %struct.he***
  %45 = load %struct.he**, %struct.he*** %svu_hash42, align 8
  %46 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any43 = getelementptr inbounds %struct.hv, %struct.hv* %46, i32 0, i32 0
  %47 = load %struct.xpvhv*, %struct.xpvhv** %sv_any43, align 8
  %xhv_max44 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %47, i32 0, i32 3
  %48 = load i64, i64* %xhv_max44, align 8
  %add45 = add i64 %48, 1
  %arrayidx46 = getelementptr inbounds %struct.he*, %struct.he** %45, i64 %add45
  %49 = bitcast %struct.he** %arrayidx46 to %struct.xpvhv_aux*
  %xhv_name_count47 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %49, i32 0, i32 4
  %50 = load i32, i32* %xhv_name_count47, align 4
  %tobool48 = icmp ne i32 %50, 0
  br i1 %tobool48, label %cond.true49, label %cond.false58

cond.true49:                                      ; preds = %cond.true40
  %51 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u50 = getelementptr inbounds %struct.hv, %struct.hv* %51, i32 0, i32 3
  %svu_hash51 = bitcast %union.anon.4* %sv_u50 to %struct.he***
  %52 = load %struct.he**, %struct.he*** %svu_hash51, align 8
  %53 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any52 = getelementptr inbounds %struct.hv, %struct.hv* %53, i32 0, i32 0
  %54 = load %struct.xpvhv*, %struct.xpvhv** %sv_any52, align 8
  %xhv_max53 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %54, i32 0, i32 3
  %55 = load i64, i64* %xhv_max53, align 8
  %add54 = add i64 %55, 1
  %arrayidx55 = getelementptr inbounds %struct.he*, %struct.he** %52, i64 %add54
  %56 = bitcast %struct.he** %arrayidx55 to %struct.xpvhv_aux*
  %xhv_name_u56 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %56, i32 0, i32 0
  %xhvnameu_names57 = bitcast %union._xhvnameu* %xhv_name_u56 to %struct.hek***
  %57 = load %struct.hek**, %struct.hek*** %xhvnameu_names57, align 8
  %58 = load %struct.hek*, %struct.hek** %57, align 8
  br label %cond.end67

cond.false58:                                     ; preds = %cond.true40
  %59 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u59 = getelementptr inbounds %struct.hv, %struct.hv* %59, i32 0, i32 3
  %svu_hash60 = bitcast %union.anon.4* %sv_u59 to %struct.he***
  %60 = load %struct.he**, %struct.he*** %svu_hash60, align 8
  %61 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any61 = getelementptr inbounds %struct.hv, %struct.hv* %61, i32 0, i32 0
  %62 = load %struct.xpvhv*, %struct.xpvhv** %sv_any61, align 8
  %xhv_max62 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %62, i32 0, i32 3
  %63 = load i64, i64* %xhv_max62, align 8
  %add63 = add i64 %63, 1
  %arrayidx64 = getelementptr inbounds %struct.he*, %struct.he** %60, i64 %add63
  %64 = bitcast %struct.he** %arrayidx64 to %struct.xpvhv_aux*
  %xhv_name_u65 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %64, i32 0, i32 0
  %xhvnameu_name66 = bitcast %union._xhvnameu* %xhv_name_u65 to %struct.hek**
  %65 = load %struct.hek*, %struct.hek** %xhvnameu_name66, align 8
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false58, %cond.true49
  %cond68 = phi %struct.hek* [ %58, %cond.true49 ], [ %65, %cond.false58 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond68, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool69 = icmp ne i8* %arraydecay, null
  br i1 %tobool69, label %land.lhs.true71, label %cond.false75

cond.false70:                                     ; preds = %cond.false30, %cond.true21, %land.lhs.true11, %land.lhs.true
  br i1 false, label %land.lhs.true71, label %cond.false75

land.lhs.true71:                                  ; preds = %cond.false70, %cond.end67
  %66 = load %struct.hv*, %struct.hv** %stash, align 8
  %call72 = call i32 @Perl_Gv_AMupdate(%struct.hv* %66, i1 zeroext false)
  %tobool73 = icmp ne i32 %call72, 0
  br i1 %tobool73, label %cond.true74, label %cond.false75

cond.true74:                                      ; preds = %land.lhs.true71
  br i1 true, label %if.then78, label %if.end80

cond.false75:                                     ; preds = %land.lhs.true71, %cond.false70, %cond.end67
  %67 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags76 = getelementptr inbounds %struct.hv, %struct.hv* %67, i32 0, i32 2
  %68 = load i32, i32* %sv_flags76, align 4
  %and77 = and i32 %68, -268435457
  store i32 %and77, i32* %sv_flags76, align 4
  br i1 false, label %if.then78, label %if.end80

if.then78:                                        ; preds = %cond.false75, %cond.true74
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded79 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded79, align 8
  %70 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %70)
  br label %if.end80

if.end80:                                         ; preds = %if.then78, %cond.false75, %cond.true74, %do.body7
  %71 = load %struct.sv*, %struct.sv** %ref, align 8
  %72 = load %struct.hv*, %struct.hv** %stash, align 8
  %call81 = call %struct.sv* @Perl_sv_bless(%struct.sv* %71, %struct.hv* %72)
  br label %do.body82

do.body82:                                        ; preds = %if.end80
  %73 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u83 = getelementptr inbounds %struct.sv, %struct.sv* %73, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u83 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end84

do.end84:                                         ; preds = %do.body82
  %74 = load %struct.sv*, %struct.sv** %ref, align 8
  %75 = bitcast %struct.sv* %74 to i8*
  %76 = bitcast i8* %75 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %76)
  br label %do.end85

do.end85:                                         ; preds = %do.end84
  br label %if.end86

if.end86:                                         ; preds = %do.end85, %do.end
  br label %do.end87

do.end87:                                         ; preds = %if.end86
  %77 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call88 = call %struct.sv* @retrieve(%struct.stcxt* %77, i8* null)
  store %struct.sv* %call88, %struct.sv** %sv, align 8
  %78 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool89 = icmp ne %struct.sv* %78, null
  br i1 %tobool89, label %if.end91, label %if.then90

if.then90:                                        ; preds = %do.end87
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end91:                                         ; preds = %do.end87
  %79 = load %struct.sv*, %struct.sv** %tv, align 8
  call void @Perl_sv_upgrade(%struct.sv* %79, i32 11)
  %80 = load %struct.sv*, %struct.sv** %tv, align 8
  %81 = bitcast %struct.sv* %80 to %struct.av*
  %sv_flags92 = getelementptr inbounds %struct.av, %struct.av* %81, i32 0, i32 2
  %82 = load i32, i32* %sv_flags92, align 4
  %and93 = and i32 %82, -1073741825
  store i32 %and93, i32* %sv_flags92, align 4
  %83 = load %struct.sv*, %struct.sv** %tv, align 8
  %84 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_magic(%struct.sv* %83, %struct.sv* %84, i32 80, i8* null, i32 0)
  %85 = load %struct.sv*, %struct.sv** %sv, align 8
  %86 = bitcast %struct.sv* %85 to i8*
  %87 = bitcast i8* %86 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %87)
  %88 = load %struct.sv*, %struct.sv** %tv, align 8
  store %struct.sv* %88, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end91, %if.then90, %if.then
  %89 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %89
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_tied_hash(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %tv = alloca %struct.sv*, align 8
  %sv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %call = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call, %struct.sv** %tv, align 8
  %0 = load i8*, i8** %cname.addr, align 8
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %cname.addr, align 8
  %call1 = call %struct.hv* @Perl_gv_stashpv(i8* %1, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call1, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  br label %do.body

do.body:                                          ; preds = %cond.end
  br label %do.body2

do.body2:                                         ; preds = %do.body
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 5
  %3 = load %struct.av*, %struct.av** %aseen, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 10
  %5 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %5, 1
  store i64 %inc, i64* %tagnum, align 8
  %6 = load %struct.sv*, %struct.sv** %tv, align 8
  %7 = bitcast %struct.sv* %6 to i8*
  %8 = bitcast i8* %7 to %struct.sv*
  %call3 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %8)
  %call4 = call %struct.sv** @Perl_av_store(%struct.av* %3, i64 %5, %struct.sv* %call3)
  %cmp = icmp eq %struct.sv** %call4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body2
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %do.body2
  br label %do.end

do.end:                                           ; preds = %if.end
  %9 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool5 = icmp ne %struct.hv* %9, null
  br i1 %tobool5, label %if.then6, label %if.end86

if.then6:                                         ; preds = %do.end
  br label %do.body7

do.body7:                                         ; preds = %if.then6
  %10 = load %struct.sv*, %struct.sv** %tv, align 8
  %call8 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %10)
  store %struct.sv* %call8, %struct.sv** %ref, align 8
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 30
  %12 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool9 = icmp ne i32 %12, 0
  br i1 %tobool9, label %land.lhs.true, label %if.end80

land.lhs.true:                                    ; preds = %do.body7
  %13 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %13, i32 0, i32 2
  %14 = load i32, i32* %sv_flags, align 4
  %and = and i32 %14, 33554432
  %tobool10 = icmp ne i32 %and, 0
  br i1 %tobool10, label %land.lhs.true11, label %cond.false70

land.lhs.true11:                                  ; preds = %land.lhs.true
  %15 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %15, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %16 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %17 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %17, i32 0, i32 0
  %18 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %18, i32 0, i32 3
  %19 = load i64, i64* %xhv_max, align 8
  %add = add i64 %19, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %16, i64 %add
  %20 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %20, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %21 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool12 = icmp ne %struct.hek* %21, null
  br i1 %tobool12, label %land.lhs.true13, label %cond.false70

land.lhs.true13:                                  ; preds = %land.lhs.true11
  %22 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u14 = getelementptr inbounds %struct.hv, %struct.hv* %22, i32 0, i32 3
  %svu_hash15 = bitcast %union.anon.4* %sv_u14 to %struct.he***
  %23 = load %struct.he**, %struct.he*** %svu_hash15, align 8
  %24 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any16 = getelementptr inbounds %struct.hv, %struct.hv* %24, i32 0, i32 0
  %25 = load %struct.xpvhv*, %struct.xpvhv** %sv_any16, align 8
  %xhv_max17 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %25, i32 0, i32 3
  %26 = load i64, i64* %xhv_max17, align 8
  %add18 = add i64 %26, 1
  %arrayidx19 = getelementptr inbounds %struct.he*, %struct.he** %23, i64 %add18
  %27 = bitcast %struct.he** %arrayidx19 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %27, i32 0, i32 4
  %28 = load i32, i32* %xhv_name_count, align 4
  %tobool20 = icmp ne i32 %28, 0
  br i1 %tobool20, label %cond.true21, label %cond.false30

cond.true21:                                      ; preds = %land.lhs.true13
  %29 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u22 = getelementptr inbounds %struct.hv, %struct.hv* %29, i32 0, i32 3
  %svu_hash23 = bitcast %union.anon.4* %sv_u22 to %struct.he***
  %30 = load %struct.he**, %struct.he*** %svu_hash23, align 8
  %31 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any24 = getelementptr inbounds %struct.hv, %struct.hv* %31, i32 0, i32 0
  %32 = load %struct.xpvhv*, %struct.xpvhv** %sv_any24, align 8
  %xhv_max25 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %32, i32 0, i32 3
  %33 = load i64, i64* %xhv_max25, align 8
  %add26 = add i64 %33, 1
  %arrayidx27 = getelementptr inbounds %struct.he*, %struct.he** %30, i64 %add26
  %34 = bitcast %struct.he** %arrayidx27 to %struct.xpvhv_aux*
  %xhv_name_u28 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %34, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u28 to %struct.hek***
  %35 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %36 = load %struct.hek*, %struct.hek** %35, align 8
  %tobool29 = icmp ne %struct.hek* %36, null
  br i1 %tobool29, label %cond.true40, label %cond.false70

cond.false30:                                     ; preds = %land.lhs.true13
  %37 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u31 = getelementptr inbounds %struct.hv, %struct.hv* %37, i32 0, i32 3
  %svu_hash32 = bitcast %union.anon.4* %sv_u31 to %struct.he***
  %38 = load %struct.he**, %struct.he*** %svu_hash32, align 8
  %39 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any33 = getelementptr inbounds %struct.hv, %struct.hv* %39, i32 0, i32 0
  %40 = load %struct.xpvhv*, %struct.xpvhv** %sv_any33, align 8
  %xhv_max34 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %40, i32 0, i32 3
  %41 = load i64, i64* %xhv_max34, align 8
  %add35 = add i64 %41, 1
  %arrayidx36 = getelementptr inbounds %struct.he*, %struct.he** %38, i64 %add35
  %42 = bitcast %struct.he** %arrayidx36 to %struct.xpvhv_aux*
  %xhv_name_u37 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %42, i32 0, i32 0
  %xhvnameu_name38 = bitcast %union._xhvnameu* %xhv_name_u37 to %struct.hek**
  %43 = load %struct.hek*, %struct.hek** %xhvnameu_name38, align 8
  %tobool39 = icmp ne %struct.hek* %43, null
  br i1 %tobool39, label %cond.true40, label %cond.false70

cond.true40:                                      ; preds = %cond.false30, %cond.true21
  %44 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u41 = getelementptr inbounds %struct.hv, %struct.hv* %44, i32 0, i32 3
  %svu_hash42 = bitcast %union.anon.4* %sv_u41 to %struct.he***
  %45 = load %struct.he**, %struct.he*** %svu_hash42, align 8
  %46 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any43 = getelementptr inbounds %struct.hv, %struct.hv* %46, i32 0, i32 0
  %47 = load %struct.xpvhv*, %struct.xpvhv** %sv_any43, align 8
  %xhv_max44 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %47, i32 0, i32 3
  %48 = load i64, i64* %xhv_max44, align 8
  %add45 = add i64 %48, 1
  %arrayidx46 = getelementptr inbounds %struct.he*, %struct.he** %45, i64 %add45
  %49 = bitcast %struct.he** %arrayidx46 to %struct.xpvhv_aux*
  %xhv_name_count47 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %49, i32 0, i32 4
  %50 = load i32, i32* %xhv_name_count47, align 4
  %tobool48 = icmp ne i32 %50, 0
  br i1 %tobool48, label %cond.true49, label %cond.false58

cond.true49:                                      ; preds = %cond.true40
  %51 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u50 = getelementptr inbounds %struct.hv, %struct.hv* %51, i32 0, i32 3
  %svu_hash51 = bitcast %union.anon.4* %sv_u50 to %struct.he***
  %52 = load %struct.he**, %struct.he*** %svu_hash51, align 8
  %53 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any52 = getelementptr inbounds %struct.hv, %struct.hv* %53, i32 0, i32 0
  %54 = load %struct.xpvhv*, %struct.xpvhv** %sv_any52, align 8
  %xhv_max53 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %54, i32 0, i32 3
  %55 = load i64, i64* %xhv_max53, align 8
  %add54 = add i64 %55, 1
  %arrayidx55 = getelementptr inbounds %struct.he*, %struct.he** %52, i64 %add54
  %56 = bitcast %struct.he** %arrayidx55 to %struct.xpvhv_aux*
  %xhv_name_u56 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %56, i32 0, i32 0
  %xhvnameu_names57 = bitcast %union._xhvnameu* %xhv_name_u56 to %struct.hek***
  %57 = load %struct.hek**, %struct.hek*** %xhvnameu_names57, align 8
  %58 = load %struct.hek*, %struct.hek** %57, align 8
  br label %cond.end67

cond.false58:                                     ; preds = %cond.true40
  %59 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u59 = getelementptr inbounds %struct.hv, %struct.hv* %59, i32 0, i32 3
  %svu_hash60 = bitcast %union.anon.4* %sv_u59 to %struct.he***
  %60 = load %struct.he**, %struct.he*** %svu_hash60, align 8
  %61 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any61 = getelementptr inbounds %struct.hv, %struct.hv* %61, i32 0, i32 0
  %62 = load %struct.xpvhv*, %struct.xpvhv** %sv_any61, align 8
  %xhv_max62 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %62, i32 0, i32 3
  %63 = load i64, i64* %xhv_max62, align 8
  %add63 = add i64 %63, 1
  %arrayidx64 = getelementptr inbounds %struct.he*, %struct.he** %60, i64 %add63
  %64 = bitcast %struct.he** %arrayidx64 to %struct.xpvhv_aux*
  %xhv_name_u65 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %64, i32 0, i32 0
  %xhvnameu_name66 = bitcast %union._xhvnameu* %xhv_name_u65 to %struct.hek**
  %65 = load %struct.hek*, %struct.hek** %xhvnameu_name66, align 8
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false58, %cond.true49
  %cond68 = phi %struct.hek* [ %58, %cond.true49 ], [ %65, %cond.false58 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond68, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool69 = icmp ne i8* %arraydecay, null
  br i1 %tobool69, label %land.lhs.true71, label %cond.false75

cond.false70:                                     ; preds = %cond.false30, %cond.true21, %land.lhs.true11, %land.lhs.true
  br i1 false, label %land.lhs.true71, label %cond.false75

land.lhs.true71:                                  ; preds = %cond.false70, %cond.end67
  %66 = load %struct.hv*, %struct.hv** %stash, align 8
  %call72 = call i32 @Perl_Gv_AMupdate(%struct.hv* %66, i1 zeroext false)
  %tobool73 = icmp ne i32 %call72, 0
  br i1 %tobool73, label %cond.true74, label %cond.false75

cond.true74:                                      ; preds = %land.lhs.true71
  br i1 true, label %if.then78, label %if.end80

cond.false75:                                     ; preds = %land.lhs.true71, %cond.false70, %cond.end67
  %67 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags76 = getelementptr inbounds %struct.hv, %struct.hv* %67, i32 0, i32 2
  %68 = load i32, i32* %sv_flags76, align 4
  %and77 = and i32 %68, -268435457
  store i32 %and77, i32* %sv_flags76, align 4
  br i1 false, label %if.then78, label %if.end80

if.then78:                                        ; preds = %cond.false75, %cond.true74
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded79 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded79, align 8
  %70 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %70)
  br label %if.end80

if.end80:                                         ; preds = %if.then78, %cond.false75, %cond.true74, %do.body7
  %71 = load %struct.sv*, %struct.sv** %ref, align 8
  %72 = load %struct.hv*, %struct.hv** %stash, align 8
  %call81 = call %struct.sv* @Perl_sv_bless(%struct.sv* %71, %struct.hv* %72)
  br label %do.body82

do.body82:                                        ; preds = %if.end80
  %73 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u83 = getelementptr inbounds %struct.sv, %struct.sv* %73, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u83 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end84

do.end84:                                         ; preds = %do.body82
  %74 = load %struct.sv*, %struct.sv** %ref, align 8
  %75 = bitcast %struct.sv* %74 to i8*
  %76 = bitcast i8* %75 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %76)
  br label %do.end85

do.end85:                                         ; preds = %do.end84
  br label %if.end86

if.end86:                                         ; preds = %do.end85, %do.end
  br label %do.end87

do.end87:                                         ; preds = %if.end86
  %77 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call88 = call %struct.sv* @retrieve(%struct.stcxt* %77, i8* null)
  store %struct.sv* %call88, %struct.sv** %sv, align 8
  %78 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool89 = icmp ne %struct.sv* %78, null
  br i1 %tobool89, label %if.end91, label %if.then90

if.then90:                                        ; preds = %do.end87
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end91:                                         ; preds = %do.end87
  %79 = load %struct.sv*, %struct.sv** %tv, align 8
  call void @Perl_sv_upgrade(%struct.sv* %79, i32 12)
  %80 = load %struct.sv*, %struct.sv** %tv, align 8
  %81 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_magic(%struct.sv* %80, %struct.sv* %81, i32 80, i8* null, i32 0)
  %82 = load %struct.sv*, %struct.sv** %sv, align 8
  %83 = bitcast %struct.sv* %82 to i8*
  %84 = bitcast i8* %83 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %84)
  %85 = load %struct.sv*, %struct.sv** %tv, align 8
  store %struct.sv* %85, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end91, %if.then90, %if.then
  %86 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %86
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_tied_scalar(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %tv = alloca %struct.sv*, align 8
  %sv = alloca %struct.sv*, align 8
  %obj = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  store %struct.sv* null, %struct.sv** %obj, align 8
  %call = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call, %struct.sv** %tv, align 8
  %0 = load i8*, i8** %cname.addr, align 8
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %cname.addr, align 8
  %call1 = call %struct.hv* @Perl_gv_stashpv(i8* %1, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call1, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  br label %do.body

do.body:                                          ; preds = %cond.end
  br label %do.body2

do.body2:                                         ; preds = %do.body
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 5
  %3 = load %struct.av*, %struct.av** %aseen, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 10
  %5 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %5, 1
  store i64 %inc, i64* %tagnum, align 8
  %6 = load %struct.sv*, %struct.sv** %tv, align 8
  %7 = bitcast %struct.sv* %6 to i8*
  %8 = bitcast i8* %7 to %struct.sv*
  %call3 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %8)
  %call4 = call %struct.sv** @Perl_av_store(%struct.av* %3, i64 %5, %struct.sv* %call3)
  %cmp = icmp eq %struct.sv** %call4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body2
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %do.body2
  br label %do.end

do.end:                                           ; preds = %if.end
  %9 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool5 = icmp ne %struct.hv* %9, null
  br i1 %tobool5, label %if.then6, label %if.end86

if.then6:                                         ; preds = %do.end
  br label %do.body7

do.body7:                                         ; preds = %if.then6
  %10 = load %struct.sv*, %struct.sv** %tv, align 8
  %call8 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %10)
  store %struct.sv* %call8, %struct.sv** %ref, align 8
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 30
  %12 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool9 = icmp ne i32 %12, 0
  br i1 %tobool9, label %land.lhs.true, label %if.end80

land.lhs.true:                                    ; preds = %do.body7
  %13 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %13, i32 0, i32 2
  %14 = load i32, i32* %sv_flags, align 4
  %and = and i32 %14, 33554432
  %tobool10 = icmp ne i32 %and, 0
  br i1 %tobool10, label %land.lhs.true11, label %cond.false70

land.lhs.true11:                                  ; preds = %land.lhs.true
  %15 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %15, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %16 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %17 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %17, i32 0, i32 0
  %18 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %18, i32 0, i32 3
  %19 = load i64, i64* %xhv_max, align 8
  %add = add i64 %19, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %16, i64 %add
  %20 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %20, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %21 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool12 = icmp ne %struct.hek* %21, null
  br i1 %tobool12, label %land.lhs.true13, label %cond.false70

land.lhs.true13:                                  ; preds = %land.lhs.true11
  %22 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u14 = getelementptr inbounds %struct.hv, %struct.hv* %22, i32 0, i32 3
  %svu_hash15 = bitcast %union.anon.4* %sv_u14 to %struct.he***
  %23 = load %struct.he**, %struct.he*** %svu_hash15, align 8
  %24 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any16 = getelementptr inbounds %struct.hv, %struct.hv* %24, i32 0, i32 0
  %25 = load %struct.xpvhv*, %struct.xpvhv** %sv_any16, align 8
  %xhv_max17 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %25, i32 0, i32 3
  %26 = load i64, i64* %xhv_max17, align 8
  %add18 = add i64 %26, 1
  %arrayidx19 = getelementptr inbounds %struct.he*, %struct.he** %23, i64 %add18
  %27 = bitcast %struct.he** %arrayidx19 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %27, i32 0, i32 4
  %28 = load i32, i32* %xhv_name_count, align 4
  %tobool20 = icmp ne i32 %28, 0
  br i1 %tobool20, label %cond.true21, label %cond.false30

cond.true21:                                      ; preds = %land.lhs.true13
  %29 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u22 = getelementptr inbounds %struct.hv, %struct.hv* %29, i32 0, i32 3
  %svu_hash23 = bitcast %union.anon.4* %sv_u22 to %struct.he***
  %30 = load %struct.he**, %struct.he*** %svu_hash23, align 8
  %31 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any24 = getelementptr inbounds %struct.hv, %struct.hv* %31, i32 0, i32 0
  %32 = load %struct.xpvhv*, %struct.xpvhv** %sv_any24, align 8
  %xhv_max25 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %32, i32 0, i32 3
  %33 = load i64, i64* %xhv_max25, align 8
  %add26 = add i64 %33, 1
  %arrayidx27 = getelementptr inbounds %struct.he*, %struct.he** %30, i64 %add26
  %34 = bitcast %struct.he** %arrayidx27 to %struct.xpvhv_aux*
  %xhv_name_u28 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %34, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u28 to %struct.hek***
  %35 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %36 = load %struct.hek*, %struct.hek** %35, align 8
  %tobool29 = icmp ne %struct.hek* %36, null
  br i1 %tobool29, label %cond.true40, label %cond.false70

cond.false30:                                     ; preds = %land.lhs.true13
  %37 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u31 = getelementptr inbounds %struct.hv, %struct.hv* %37, i32 0, i32 3
  %svu_hash32 = bitcast %union.anon.4* %sv_u31 to %struct.he***
  %38 = load %struct.he**, %struct.he*** %svu_hash32, align 8
  %39 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any33 = getelementptr inbounds %struct.hv, %struct.hv* %39, i32 0, i32 0
  %40 = load %struct.xpvhv*, %struct.xpvhv** %sv_any33, align 8
  %xhv_max34 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %40, i32 0, i32 3
  %41 = load i64, i64* %xhv_max34, align 8
  %add35 = add i64 %41, 1
  %arrayidx36 = getelementptr inbounds %struct.he*, %struct.he** %38, i64 %add35
  %42 = bitcast %struct.he** %arrayidx36 to %struct.xpvhv_aux*
  %xhv_name_u37 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %42, i32 0, i32 0
  %xhvnameu_name38 = bitcast %union._xhvnameu* %xhv_name_u37 to %struct.hek**
  %43 = load %struct.hek*, %struct.hek** %xhvnameu_name38, align 8
  %tobool39 = icmp ne %struct.hek* %43, null
  br i1 %tobool39, label %cond.true40, label %cond.false70

cond.true40:                                      ; preds = %cond.false30, %cond.true21
  %44 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u41 = getelementptr inbounds %struct.hv, %struct.hv* %44, i32 0, i32 3
  %svu_hash42 = bitcast %union.anon.4* %sv_u41 to %struct.he***
  %45 = load %struct.he**, %struct.he*** %svu_hash42, align 8
  %46 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any43 = getelementptr inbounds %struct.hv, %struct.hv* %46, i32 0, i32 0
  %47 = load %struct.xpvhv*, %struct.xpvhv** %sv_any43, align 8
  %xhv_max44 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %47, i32 0, i32 3
  %48 = load i64, i64* %xhv_max44, align 8
  %add45 = add i64 %48, 1
  %arrayidx46 = getelementptr inbounds %struct.he*, %struct.he** %45, i64 %add45
  %49 = bitcast %struct.he** %arrayidx46 to %struct.xpvhv_aux*
  %xhv_name_count47 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %49, i32 0, i32 4
  %50 = load i32, i32* %xhv_name_count47, align 4
  %tobool48 = icmp ne i32 %50, 0
  br i1 %tobool48, label %cond.true49, label %cond.false58

cond.true49:                                      ; preds = %cond.true40
  %51 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u50 = getelementptr inbounds %struct.hv, %struct.hv* %51, i32 0, i32 3
  %svu_hash51 = bitcast %union.anon.4* %sv_u50 to %struct.he***
  %52 = load %struct.he**, %struct.he*** %svu_hash51, align 8
  %53 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any52 = getelementptr inbounds %struct.hv, %struct.hv* %53, i32 0, i32 0
  %54 = load %struct.xpvhv*, %struct.xpvhv** %sv_any52, align 8
  %xhv_max53 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %54, i32 0, i32 3
  %55 = load i64, i64* %xhv_max53, align 8
  %add54 = add i64 %55, 1
  %arrayidx55 = getelementptr inbounds %struct.he*, %struct.he** %52, i64 %add54
  %56 = bitcast %struct.he** %arrayidx55 to %struct.xpvhv_aux*
  %xhv_name_u56 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %56, i32 0, i32 0
  %xhvnameu_names57 = bitcast %union._xhvnameu* %xhv_name_u56 to %struct.hek***
  %57 = load %struct.hek**, %struct.hek*** %xhvnameu_names57, align 8
  %58 = load %struct.hek*, %struct.hek** %57, align 8
  br label %cond.end67

cond.false58:                                     ; preds = %cond.true40
  %59 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u59 = getelementptr inbounds %struct.hv, %struct.hv* %59, i32 0, i32 3
  %svu_hash60 = bitcast %union.anon.4* %sv_u59 to %struct.he***
  %60 = load %struct.he**, %struct.he*** %svu_hash60, align 8
  %61 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any61 = getelementptr inbounds %struct.hv, %struct.hv* %61, i32 0, i32 0
  %62 = load %struct.xpvhv*, %struct.xpvhv** %sv_any61, align 8
  %xhv_max62 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %62, i32 0, i32 3
  %63 = load i64, i64* %xhv_max62, align 8
  %add63 = add i64 %63, 1
  %arrayidx64 = getelementptr inbounds %struct.he*, %struct.he** %60, i64 %add63
  %64 = bitcast %struct.he** %arrayidx64 to %struct.xpvhv_aux*
  %xhv_name_u65 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %64, i32 0, i32 0
  %xhvnameu_name66 = bitcast %union._xhvnameu* %xhv_name_u65 to %struct.hek**
  %65 = load %struct.hek*, %struct.hek** %xhvnameu_name66, align 8
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false58, %cond.true49
  %cond68 = phi %struct.hek* [ %58, %cond.true49 ], [ %65, %cond.false58 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond68, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool69 = icmp ne i8* %arraydecay, null
  br i1 %tobool69, label %land.lhs.true71, label %cond.false75

cond.false70:                                     ; preds = %cond.false30, %cond.true21, %land.lhs.true11, %land.lhs.true
  br i1 false, label %land.lhs.true71, label %cond.false75

land.lhs.true71:                                  ; preds = %cond.false70, %cond.end67
  %66 = load %struct.hv*, %struct.hv** %stash, align 8
  %call72 = call i32 @Perl_Gv_AMupdate(%struct.hv* %66, i1 zeroext false)
  %tobool73 = icmp ne i32 %call72, 0
  br i1 %tobool73, label %cond.true74, label %cond.false75

cond.true74:                                      ; preds = %land.lhs.true71
  br i1 true, label %if.then78, label %if.end80

cond.false75:                                     ; preds = %land.lhs.true71, %cond.false70, %cond.end67
  %67 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags76 = getelementptr inbounds %struct.hv, %struct.hv* %67, i32 0, i32 2
  %68 = load i32, i32* %sv_flags76, align 4
  %and77 = and i32 %68, -268435457
  store i32 %and77, i32* %sv_flags76, align 4
  br i1 false, label %if.then78, label %if.end80

if.then78:                                        ; preds = %cond.false75, %cond.true74
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded79 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded79, align 8
  %70 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %70)
  br label %if.end80

if.end80:                                         ; preds = %if.then78, %cond.false75, %cond.true74, %do.body7
  %71 = load %struct.sv*, %struct.sv** %ref, align 8
  %72 = load %struct.hv*, %struct.hv** %stash, align 8
  %call81 = call %struct.sv* @Perl_sv_bless(%struct.sv* %71, %struct.hv* %72)
  br label %do.body82

do.body82:                                        ; preds = %if.end80
  %73 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u83 = getelementptr inbounds %struct.sv, %struct.sv* %73, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u83 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end84

do.end84:                                         ; preds = %do.body82
  %74 = load %struct.sv*, %struct.sv** %ref, align 8
  %75 = bitcast %struct.sv* %74 to i8*
  %76 = bitcast i8* %75 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %76)
  br label %do.end85

do.end85:                                         ; preds = %do.end84
  br label %if.end86

if.end86:                                         ; preds = %do.end85, %do.end
  br label %do.end87

do.end87:                                         ; preds = %if.end86
  %77 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call88 = call %struct.sv* @retrieve(%struct.stcxt* %77, i8* null)
  store %struct.sv* %call88, %struct.sv** %sv, align 8
  %78 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool89 = icmp ne %struct.sv* %78, null
  br i1 %tobool89, label %if.else, label %if.then90

if.then90:                                        ; preds = %do.end87
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.else:                                          ; preds = %do.end87
  %79 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags91 = getelementptr inbounds %struct.sv, %struct.sv* %79, i32 0, i32 2
  %80 = load i32, i32* %sv_flags91, align 4
  %and92 = and i32 %80, 255
  %cmp93 = icmp ne i32 %and92, 0
  br i1 %cmp93, label %if.then94, label %if.end95

if.then94:                                        ; preds = %if.else
  %81 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %81, %struct.sv** %obj, align 8
  br label %if.end95

if.end95:                                         ; preds = %if.then94, %if.else
  br label %if.end96

if.end96:                                         ; preds = %if.end95
  %82 = load %struct.sv*, %struct.sv** %tv, align 8
  call void @Perl_sv_upgrade(%struct.sv* %82, i32 7)
  %83 = load %struct.sv*, %struct.sv** %tv, align 8
  %84 = load %struct.sv*, %struct.sv** %obj, align 8
  call void @Perl_sv_magic(%struct.sv* %83, %struct.sv* %84, i32 113, i8* null, i32 0)
  %85 = load %struct.sv*, %struct.sv** %obj, align 8
  %tobool97 = icmp ne %struct.sv* %85, null
  br i1 %tobool97, label %if.then98, label %if.end99

if.then98:                                        ; preds = %if.end96
  %86 = load %struct.sv*, %struct.sv** %obj, align 8
  %87 = bitcast %struct.sv* %86 to i8*
  %88 = bitcast i8* %87 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %88)
  br label %if.end99

if.end99:                                         ; preds = %if.then98, %if.end96
  %89 = load %struct.sv*, %struct.sv** %tv, align 8
  store %struct.sv* %89, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end99, %if.then90, %if.then
  %90 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %90
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_sv_undef(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %sv, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %where_is_undef = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 6
  %1 = load i64, i64* %where_is_undef, align 8
  %cmp = icmp eq i64 %1, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 10
  %3 = load i64, i64* %tagnum, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %where_is_undef1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 6
  store i64 %3, i64* %where_is_undef1, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8*, i8** %cname.addr, align 8
  %tobool = icmp ne i8* %5, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %6 = load i8*, i8** %cname.addr, align 8
  %call = call %struct.hv* @Perl_gv_stashpv(i8* %6, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %if.end
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  br label %do.body

do.body:                                          ; preds = %cond.end
  br label %do.body2

do.body2:                                         ; preds = %do.body
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 5
  %8 = load %struct.av*, %struct.av** %aseen, align 8
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 10
  %10 = load i64, i64* %tagnum3, align 8
  %inc = add nsw i64 %10, 1
  store i64 %inc, i64* %tagnum3, align 8
  %11 = load %struct.sv*, %struct.sv** %sv, align 8
  %call4 = call %struct.sv** @Perl_av_store(%struct.av* %8, i64 %10, %struct.sv* %11)
  %cmp5 = icmp eq %struct.sv** %call4, null
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %do.body2
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end7:                                          ; preds = %do.body2
  br label %do.end

do.end:                                           ; preds = %if.end7
  %12 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool8 = icmp ne %struct.hv* %12, null
  br i1 %tobool8, label %if.then9, label %if.end89

if.then9:                                         ; preds = %do.end
  br label %do.body10

do.body10:                                        ; preds = %if.then9
  %13 = load %struct.sv*, %struct.sv** %sv, align 8
  %call11 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %13)
  store %struct.sv* %call11, %struct.sv** %ref, align 8
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 30
  %15 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool12 = icmp ne i32 %15, 0
  br i1 %tobool12, label %land.lhs.true, label %if.end83

land.lhs.true:                                    ; preds = %do.body10
  %16 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %16, i32 0, i32 2
  %17 = load i32, i32* %sv_flags, align 4
  %and = and i32 %17, 33554432
  %tobool13 = icmp ne i32 %and, 0
  br i1 %tobool13, label %land.lhs.true14, label %cond.false73

land.lhs.true14:                                  ; preds = %land.lhs.true
  %18 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %18, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %19 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %20 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %20, i32 0, i32 0
  %21 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %21, i32 0, i32 3
  %22 = load i64, i64* %xhv_max, align 8
  %add = add i64 %22, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %19, i64 %add
  %23 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %23, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %24 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool15 = icmp ne %struct.hek* %24, null
  br i1 %tobool15, label %land.lhs.true16, label %cond.false73

land.lhs.true16:                                  ; preds = %land.lhs.true14
  %25 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u17 = getelementptr inbounds %struct.hv, %struct.hv* %25, i32 0, i32 3
  %svu_hash18 = bitcast %union.anon.4* %sv_u17 to %struct.he***
  %26 = load %struct.he**, %struct.he*** %svu_hash18, align 8
  %27 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any19 = getelementptr inbounds %struct.hv, %struct.hv* %27, i32 0, i32 0
  %28 = load %struct.xpvhv*, %struct.xpvhv** %sv_any19, align 8
  %xhv_max20 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %28, i32 0, i32 3
  %29 = load i64, i64* %xhv_max20, align 8
  %add21 = add i64 %29, 1
  %arrayidx22 = getelementptr inbounds %struct.he*, %struct.he** %26, i64 %add21
  %30 = bitcast %struct.he** %arrayidx22 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %30, i32 0, i32 4
  %31 = load i32, i32* %xhv_name_count, align 4
  %tobool23 = icmp ne i32 %31, 0
  br i1 %tobool23, label %cond.true24, label %cond.false33

cond.true24:                                      ; preds = %land.lhs.true16
  %32 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u25 = getelementptr inbounds %struct.hv, %struct.hv* %32, i32 0, i32 3
  %svu_hash26 = bitcast %union.anon.4* %sv_u25 to %struct.he***
  %33 = load %struct.he**, %struct.he*** %svu_hash26, align 8
  %34 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any27 = getelementptr inbounds %struct.hv, %struct.hv* %34, i32 0, i32 0
  %35 = load %struct.xpvhv*, %struct.xpvhv** %sv_any27, align 8
  %xhv_max28 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %35, i32 0, i32 3
  %36 = load i64, i64* %xhv_max28, align 8
  %add29 = add i64 %36, 1
  %arrayidx30 = getelementptr inbounds %struct.he*, %struct.he** %33, i64 %add29
  %37 = bitcast %struct.he** %arrayidx30 to %struct.xpvhv_aux*
  %xhv_name_u31 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %37, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u31 to %struct.hek***
  %38 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %39 = load %struct.hek*, %struct.hek** %38, align 8
  %tobool32 = icmp ne %struct.hek* %39, null
  br i1 %tobool32, label %cond.true43, label %cond.false73

cond.false33:                                     ; preds = %land.lhs.true16
  %40 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u34 = getelementptr inbounds %struct.hv, %struct.hv* %40, i32 0, i32 3
  %svu_hash35 = bitcast %union.anon.4* %sv_u34 to %struct.he***
  %41 = load %struct.he**, %struct.he*** %svu_hash35, align 8
  %42 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any36 = getelementptr inbounds %struct.hv, %struct.hv* %42, i32 0, i32 0
  %43 = load %struct.xpvhv*, %struct.xpvhv** %sv_any36, align 8
  %xhv_max37 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %43, i32 0, i32 3
  %44 = load i64, i64* %xhv_max37, align 8
  %add38 = add i64 %44, 1
  %arrayidx39 = getelementptr inbounds %struct.he*, %struct.he** %41, i64 %add38
  %45 = bitcast %struct.he** %arrayidx39 to %struct.xpvhv_aux*
  %xhv_name_u40 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %45, i32 0, i32 0
  %xhvnameu_name41 = bitcast %union._xhvnameu* %xhv_name_u40 to %struct.hek**
  %46 = load %struct.hek*, %struct.hek** %xhvnameu_name41, align 8
  %tobool42 = icmp ne %struct.hek* %46, null
  br i1 %tobool42, label %cond.true43, label %cond.false73

cond.true43:                                      ; preds = %cond.false33, %cond.true24
  %47 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u44 = getelementptr inbounds %struct.hv, %struct.hv* %47, i32 0, i32 3
  %svu_hash45 = bitcast %union.anon.4* %sv_u44 to %struct.he***
  %48 = load %struct.he**, %struct.he*** %svu_hash45, align 8
  %49 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any46 = getelementptr inbounds %struct.hv, %struct.hv* %49, i32 0, i32 0
  %50 = load %struct.xpvhv*, %struct.xpvhv** %sv_any46, align 8
  %xhv_max47 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %50, i32 0, i32 3
  %51 = load i64, i64* %xhv_max47, align 8
  %add48 = add i64 %51, 1
  %arrayidx49 = getelementptr inbounds %struct.he*, %struct.he** %48, i64 %add48
  %52 = bitcast %struct.he** %arrayidx49 to %struct.xpvhv_aux*
  %xhv_name_count50 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %52, i32 0, i32 4
  %53 = load i32, i32* %xhv_name_count50, align 4
  %tobool51 = icmp ne i32 %53, 0
  br i1 %tobool51, label %cond.true52, label %cond.false61

cond.true52:                                      ; preds = %cond.true43
  %54 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u53 = getelementptr inbounds %struct.hv, %struct.hv* %54, i32 0, i32 3
  %svu_hash54 = bitcast %union.anon.4* %sv_u53 to %struct.he***
  %55 = load %struct.he**, %struct.he*** %svu_hash54, align 8
  %56 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any55 = getelementptr inbounds %struct.hv, %struct.hv* %56, i32 0, i32 0
  %57 = load %struct.xpvhv*, %struct.xpvhv** %sv_any55, align 8
  %xhv_max56 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %57, i32 0, i32 3
  %58 = load i64, i64* %xhv_max56, align 8
  %add57 = add i64 %58, 1
  %arrayidx58 = getelementptr inbounds %struct.he*, %struct.he** %55, i64 %add57
  %59 = bitcast %struct.he** %arrayidx58 to %struct.xpvhv_aux*
  %xhv_name_u59 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %59, i32 0, i32 0
  %xhvnameu_names60 = bitcast %union._xhvnameu* %xhv_name_u59 to %struct.hek***
  %60 = load %struct.hek**, %struct.hek*** %xhvnameu_names60, align 8
  %61 = load %struct.hek*, %struct.hek** %60, align 8
  br label %cond.end70

cond.false61:                                     ; preds = %cond.true43
  %62 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u62 = getelementptr inbounds %struct.hv, %struct.hv* %62, i32 0, i32 3
  %svu_hash63 = bitcast %union.anon.4* %sv_u62 to %struct.he***
  %63 = load %struct.he**, %struct.he*** %svu_hash63, align 8
  %64 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any64 = getelementptr inbounds %struct.hv, %struct.hv* %64, i32 0, i32 0
  %65 = load %struct.xpvhv*, %struct.xpvhv** %sv_any64, align 8
  %xhv_max65 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %65, i32 0, i32 3
  %66 = load i64, i64* %xhv_max65, align 8
  %add66 = add i64 %66, 1
  %arrayidx67 = getelementptr inbounds %struct.he*, %struct.he** %63, i64 %add66
  %67 = bitcast %struct.he** %arrayidx67 to %struct.xpvhv_aux*
  %xhv_name_u68 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %67, i32 0, i32 0
  %xhvnameu_name69 = bitcast %union._xhvnameu* %xhv_name_u68 to %struct.hek**
  %68 = load %struct.hek*, %struct.hek** %xhvnameu_name69, align 8
  br label %cond.end70

cond.end70:                                       ; preds = %cond.false61, %cond.true52
  %cond71 = phi %struct.hek* [ %61, %cond.true52 ], [ %68, %cond.false61 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond71, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool72 = icmp ne i8* %arraydecay, null
  br i1 %tobool72, label %land.lhs.true74, label %cond.false78

cond.false73:                                     ; preds = %cond.false33, %cond.true24, %land.lhs.true14, %land.lhs.true
  br i1 false, label %land.lhs.true74, label %cond.false78

land.lhs.true74:                                  ; preds = %cond.false73, %cond.end70
  %69 = load %struct.hv*, %struct.hv** %stash, align 8
  %call75 = call i32 @Perl_Gv_AMupdate(%struct.hv* %69, i1 zeroext false)
  %tobool76 = icmp ne i32 %call75, 0
  br i1 %tobool76, label %cond.true77, label %cond.false78

cond.true77:                                      ; preds = %land.lhs.true74
  br i1 true, label %if.then81, label %if.end83

cond.false78:                                     ; preds = %land.lhs.true74, %cond.false73, %cond.end70
  %70 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags79 = getelementptr inbounds %struct.hv, %struct.hv* %70, i32 0, i32 2
  %71 = load i32, i32* %sv_flags79, align 4
  %and80 = and i32 %71, -268435457
  store i32 %and80, i32* %sv_flags79, align 4
  br i1 false, label %if.then81, label %if.end83

if.then81:                                        ; preds = %cond.false78, %cond.true77
  %72 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded82 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %72, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded82, align 8
  %73 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %73)
  br label %if.end83

if.end83:                                         ; preds = %if.then81, %cond.false78, %cond.true77, %do.body10
  %74 = load %struct.sv*, %struct.sv** %ref, align 8
  %75 = load %struct.hv*, %struct.hv** %stash, align 8
  %call84 = call %struct.sv* @Perl_sv_bless(%struct.sv* %74, %struct.hv* %75)
  br label %do.body85

do.body85:                                        ; preds = %if.end83
  %76 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u86 = getelementptr inbounds %struct.sv, %struct.sv* %76, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u86 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end87

do.end87:                                         ; preds = %do.body85
  %77 = load %struct.sv*, %struct.sv** %ref, align 8
  %78 = bitcast %struct.sv* %77 to i8*
  %79 = bitcast i8* %78 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %79)
  br label %do.end88

do.end88:                                         ; preds = %do.end87
  br label %if.end89

if.end89:                                         ; preds = %do.end88, %do.end
  br label %do.end90

do.end90:                                         ; preds = %if.end89
  %80 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %80, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %do.end90, %if.then6
  %81 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %81
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_sv_yes(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %sv, align 8
  %0 = load i8*, i8** %cname.addr, align 8
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %cname.addr, align 8
  %call = call %struct.hv* @Perl_gv_stashpv(i8* %1, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  br label %do.body

do.body:                                          ; preds = %cond.end
  br label %do.body1

do.body1:                                         ; preds = %do.body
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 5
  %3 = load %struct.av*, %struct.av** %aseen, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 10
  %5 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %5, 1
  store i64 %inc, i64* %tagnum, align 8
  %6 = load %struct.sv*, %struct.sv** %sv, align 8
  %call2 = call %struct.sv** @Perl_av_store(%struct.av* %3, i64 %5, %struct.sv* %6)
  %cmp = icmp eq %struct.sv** %call2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body1
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %do.body1
  br label %do.end

do.end:                                           ; preds = %if.end
  %7 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool3 = icmp ne %struct.hv* %7, null
  br i1 %tobool3, label %if.then4, label %if.end84

if.then4:                                         ; preds = %do.end
  br label %do.body5

do.body5:                                         ; preds = %if.then4
  %8 = load %struct.sv*, %struct.sv** %sv, align 8
  %call6 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %8)
  store %struct.sv* %call6, %struct.sv** %ref, align 8
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 30
  %10 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool7 = icmp ne i32 %10, 0
  br i1 %tobool7, label %land.lhs.true, label %if.end78

land.lhs.true:                                    ; preds = %do.body5
  %11 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %11, i32 0, i32 2
  %12 = load i32, i32* %sv_flags, align 4
  %and = and i32 %12, 33554432
  %tobool8 = icmp ne i32 %and, 0
  br i1 %tobool8, label %land.lhs.true9, label %cond.false68

land.lhs.true9:                                   ; preds = %land.lhs.true
  %13 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %13, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %14 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %15 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %15, i32 0, i32 0
  %16 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %16, i32 0, i32 3
  %17 = load i64, i64* %xhv_max, align 8
  %add = add i64 %17, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %14, i64 %add
  %18 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %18, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %19 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool10 = icmp ne %struct.hek* %19, null
  br i1 %tobool10, label %land.lhs.true11, label %cond.false68

land.lhs.true11:                                  ; preds = %land.lhs.true9
  %20 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u12 = getelementptr inbounds %struct.hv, %struct.hv* %20, i32 0, i32 3
  %svu_hash13 = bitcast %union.anon.4* %sv_u12 to %struct.he***
  %21 = load %struct.he**, %struct.he*** %svu_hash13, align 8
  %22 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any14 = getelementptr inbounds %struct.hv, %struct.hv* %22, i32 0, i32 0
  %23 = load %struct.xpvhv*, %struct.xpvhv** %sv_any14, align 8
  %xhv_max15 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %23, i32 0, i32 3
  %24 = load i64, i64* %xhv_max15, align 8
  %add16 = add i64 %24, 1
  %arrayidx17 = getelementptr inbounds %struct.he*, %struct.he** %21, i64 %add16
  %25 = bitcast %struct.he** %arrayidx17 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %25, i32 0, i32 4
  %26 = load i32, i32* %xhv_name_count, align 4
  %tobool18 = icmp ne i32 %26, 0
  br i1 %tobool18, label %cond.true19, label %cond.false28

cond.true19:                                      ; preds = %land.lhs.true11
  %27 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u20 = getelementptr inbounds %struct.hv, %struct.hv* %27, i32 0, i32 3
  %svu_hash21 = bitcast %union.anon.4* %sv_u20 to %struct.he***
  %28 = load %struct.he**, %struct.he*** %svu_hash21, align 8
  %29 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any22 = getelementptr inbounds %struct.hv, %struct.hv* %29, i32 0, i32 0
  %30 = load %struct.xpvhv*, %struct.xpvhv** %sv_any22, align 8
  %xhv_max23 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %30, i32 0, i32 3
  %31 = load i64, i64* %xhv_max23, align 8
  %add24 = add i64 %31, 1
  %arrayidx25 = getelementptr inbounds %struct.he*, %struct.he** %28, i64 %add24
  %32 = bitcast %struct.he** %arrayidx25 to %struct.xpvhv_aux*
  %xhv_name_u26 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %32, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u26 to %struct.hek***
  %33 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %34 = load %struct.hek*, %struct.hek** %33, align 8
  %tobool27 = icmp ne %struct.hek* %34, null
  br i1 %tobool27, label %cond.true38, label %cond.false68

cond.false28:                                     ; preds = %land.lhs.true11
  %35 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u29 = getelementptr inbounds %struct.hv, %struct.hv* %35, i32 0, i32 3
  %svu_hash30 = bitcast %union.anon.4* %sv_u29 to %struct.he***
  %36 = load %struct.he**, %struct.he*** %svu_hash30, align 8
  %37 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any31 = getelementptr inbounds %struct.hv, %struct.hv* %37, i32 0, i32 0
  %38 = load %struct.xpvhv*, %struct.xpvhv** %sv_any31, align 8
  %xhv_max32 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %38, i32 0, i32 3
  %39 = load i64, i64* %xhv_max32, align 8
  %add33 = add i64 %39, 1
  %arrayidx34 = getelementptr inbounds %struct.he*, %struct.he** %36, i64 %add33
  %40 = bitcast %struct.he** %arrayidx34 to %struct.xpvhv_aux*
  %xhv_name_u35 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %40, i32 0, i32 0
  %xhvnameu_name36 = bitcast %union._xhvnameu* %xhv_name_u35 to %struct.hek**
  %41 = load %struct.hek*, %struct.hek** %xhvnameu_name36, align 8
  %tobool37 = icmp ne %struct.hek* %41, null
  br i1 %tobool37, label %cond.true38, label %cond.false68

cond.true38:                                      ; preds = %cond.false28, %cond.true19
  %42 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u39 = getelementptr inbounds %struct.hv, %struct.hv* %42, i32 0, i32 3
  %svu_hash40 = bitcast %union.anon.4* %sv_u39 to %struct.he***
  %43 = load %struct.he**, %struct.he*** %svu_hash40, align 8
  %44 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any41 = getelementptr inbounds %struct.hv, %struct.hv* %44, i32 0, i32 0
  %45 = load %struct.xpvhv*, %struct.xpvhv** %sv_any41, align 8
  %xhv_max42 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %45, i32 0, i32 3
  %46 = load i64, i64* %xhv_max42, align 8
  %add43 = add i64 %46, 1
  %arrayidx44 = getelementptr inbounds %struct.he*, %struct.he** %43, i64 %add43
  %47 = bitcast %struct.he** %arrayidx44 to %struct.xpvhv_aux*
  %xhv_name_count45 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %47, i32 0, i32 4
  %48 = load i32, i32* %xhv_name_count45, align 4
  %tobool46 = icmp ne i32 %48, 0
  br i1 %tobool46, label %cond.true47, label %cond.false56

cond.true47:                                      ; preds = %cond.true38
  %49 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u48 = getelementptr inbounds %struct.hv, %struct.hv* %49, i32 0, i32 3
  %svu_hash49 = bitcast %union.anon.4* %sv_u48 to %struct.he***
  %50 = load %struct.he**, %struct.he*** %svu_hash49, align 8
  %51 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any50 = getelementptr inbounds %struct.hv, %struct.hv* %51, i32 0, i32 0
  %52 = load %struct.xpvhv*, %struct.xpvhv** %sv_any50, align 8
  %xhv_max51 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %52, i32 0, i32 3
  %53 = load i64, i64* %xhv_max51, align 8
  %add52 = add i64 %53, 1
  %arrayidx53 = getelementptr inbounds %struct.he*, %struct.he** %50, i64 %add52
  %54 = bitcast %struct.he** %arrayidx53 to %struct.xpvhv_aux*
  %xhv_name_u54 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %54, i32 0, i32 0
  %xhvnameu_names55 = bitcast %union._xhvnameu* %xhv_name_u54 to %struct.hek***
  %55 = load %struct.hek**, %struct.hek*** %xhvnameu_names55, align 8
  %56 = load %struct.hek*, %struct.hek** %55, align 8
  br label %cond.end65

cond.false56:                                     ; preds = %cond.true38
  %57 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u57 = getelementptr inbounds %struct.hv, %struct.hv* %57, i32 0, i32 3
  %svu_hash58 = bitcast %union.anon.4* %sv_u57 to %struct.he***
  %58 = load %struct.he**, %struct.he*** %svu_hash58, align 8
  %59 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any59 = getelementptr inbounds %struct.hv, %struct.hv* %59, i32 0, i32 0
  %60 = load %struct.xpvhv*, %struct.xpvhv** %sv_any59, align 8
  %xhv_max60 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %60, i32 0, i32 3
  %61 = load i64, i64* %xhv_max60, align 8
  %add61 = add i64 %61, 1
  %arrayidx62 = getelementptr inbounds %struct.he*, %struct.he** %58, i64 %add61
  %62 = bitcast %struct.he** %arrayidx62 to %struct.xpvhv_aux*
  %xhv_name_u63 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %62, i32 0, i32 0
  %xhvnameu_name64 = bitcast %union._xhvnameu* %xhv_name_u63 to %struct.hek**
  %63 = load %struct.hek*, %struct.hek** %xhvnameu_name64, align 8
  br label %cond.end65

cond.end65:                                       ; preds = %cond.false56, %cond.true47
  %cond66 = phi %struct.hek* [ %56, %cond.true47 ], [ %63, %cond.false56 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond66, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool67 = icmp ne i8* %arraydecay, null
  br i1 %tobool67, label %land.lhs.true69, label %cond.false73

cond.false68:                                     ; preds = %cond.false28, %cond.true19, %land.lhs.true9, %land.lhs.true
  br i1 false, label %land.lhs.true69, label %cond.false73

land.lhs.true69:                                  ; preds = %cond.false68, %cond.end65
  %64 = load %struct.hv*, %struct.hv** %stash, align 8
  %call70 = call i32 @Perl_Gv_AMupdate(%struct.hv* %64, i1 zeroext false)
  %tobool71 = icmp ne i32 %call70, 0
  br i1 %tobool71, label %cond.true72, label %cond.false73

cond.true72:                                      ; preds = %land.lhs.true69
  br i1 true, label %if.then76, label %if.end78

cond.false73:                                     ; preds = %land.lhs.true69, %cond.false68, %cond.end65
  %65 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags74 = getelementptr inbounds %struct.hv, %struct.hv* %65, i32 0, i32 2
  %66 = load i32, i32* %sv_flags74, align 4
  %and75 = and i32 %66, -268435457
  store i32 %and75, i32* %sv_flags74, align 4
  br i1 false, label %if.then76, label %if.end78

if.then76:                                        ; preds = %cond.false73, %cond.true72
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded77 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %67, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded77, align 8
  %68 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %68)
  br label %if.end78

if.end78:                                         ; preds = %if.then76, %cond.false73, %cond.true72, %do.body5
  %69 = load %struct.sv*, %struct.sv** %ref, align 8
  %70 = load %struct.hv*, %struct.hv** %stash, align 8
  %call79 = call %struct.sv* @Perl_sv_bless(%struct.sv* %69, %struct.hv* %70)
  br label %do.body80

do.body80:                                        ; preds = %if.end78
  %71 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u81 = getelementptr inbounds %struct.sv, %struct.sv* %71, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u81 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end82

do.end82:                                         ; preds = %do.body80
  %72 = load %struct.sv*, %struct.sv** %ref, align 8
  %73 = bitcast %struct.sv* %72 to i8*
  %74 = bitcast i8* %73 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %74)
  br label %do.end83

do.end83:                                         ; preds = %do.end82
  br label %if.end84

if.end84:                                         ; preds = %do.end83, %do.end
  br label %do.end85

do.end85:                                         ; preds = %if.end84
  %75 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %75, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %do.end85, %if.then
  %76 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %76
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_sv_no(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %sv, align 8
  %0 = load i8*, i8** %cname.addr, align 8
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %cname.addr, align 8
  %call = call %struct.hv* @Perl_gv_stashpv(i8* %1, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  br label %do.body

do.body:                                          ; preds = %cond.end
  br label %do.body1

do.body1:                                         ; preds = %do.body
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 5
  %3 = load %struct.av*, %struct.av** %aseen, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 10
  %5 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %5, 1
  store i64 %inc, i64* %tagnum, align 8
  %6 = load %struct.sv*, %struct.sv** %sv, align 8
  %call2 = call %struct.sv** @Perl_av_store(%struct.av* %3, i64 %5, %struct.sv* %6)
  %cmp = icmp eq %struct.sv** %call2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body1
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %do.body1
  br label %do.end

do.end:                                           ; preds = %if.end
  %7 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool3 = icmp ne %struct.hv* %7, null
  br i1 %tobool3, label %if.then4, label %if.end84

if.then4:                                         ; preds = %do.end
  br label %do.body5

do.body5:                                         ; preds = %if.then4
  %8 = load %struct.sv*, %struct.sv** %sv, align 8
  %call6 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %8)
  store %struct.sv* %call6, %struct.sv** %ref, align 8
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 30
  %10 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool7 = icmp ne i32 %10, 0
  br i1 %tobool7, label %land.lhs.true, label %if.end78

land.lhs.true:                                    ; preds = %do.body5
  %11 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %11, i32 0, i32 2
  %12 = load i32, i32* %sv_flags, align 4
  %and = and i32 %12, 33554432
  %tobool8 = icmp ne i32 %and, 0
  br i1 %tobool8, label %land.lhs.true9, label %cond.false68

land.lhs.true9:                                   ; preds = %land.lhs.true
  %13 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %13, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %14 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %15 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %15, i32 0, i32 0
  %16 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %16, i32 0, i32 3
  %17 = load i64, i64* %xhv_max, align 8
  %add = add i64 %17, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %14, i64 %add
  %18 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %18, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %19 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool10 = icmp ne %struct.hek* %19, null
  br i1 %tobool10, label %land.lhs.true11, label %cond.false68

land.lhs.true11:                                  ; preds = %land.lhs.true9
  %20 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u12 = getelementptr inbounds %struct.hv, %struct.hv* %20, i32 0, i32 3
  %svu_hash13 = bitcast %union.anon.4* %sv_u12 to %struct.he***
  %21 = load %struct.he**, %struct.he*** %svu_hash13, align 8
  %22 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any14 = getelementptr inbounds %struct.hv, %struct.hv* %22, i32 0, i32 0
  %23 = load %struct.xpvhv*, %struct.xpvhv** %sv_any14, align 8
  %xhv_max15 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %23, i32 0, i32 3
  %24 = load i64, i64* %xhv_max15, align 8
  %add16 = add i64 %24, 1
  %arrayidx17 = getelementptr inbounds %struct.he*, %struct.he** %21, i64 %add16
  %25 = bitcast %struct.he** %arrayidx17 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %25, i32 0, i32 4
  %26 = load i32, i32* %xhv_name_count, align 4
  %tobool18 = icmp ne i32 %26, 0
  br i1 %tobool18, label %cond.true19, label %cond.false28

cond.true19:                                      ; preds = %land.lhs.true11
  %27 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u20 = getelementptr inbounds %struct.hv, %struct.hv* %27, i32 0, i32 3
  %svu_hash21 = bitcast %union.anon.4* %sv_u20 to %struct.he***
  %28 = load %struct.he**, %struct.he*** %svu_hash21, align 8
  %29 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any22 = getelementptr inbounds %struct.hv, %struct.hv* %29, i32 0, i32 0
  %30 = load %struct.xpvhv*, %struct.xpvhv** %sv_any22, align 8
  %xhv_max23 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %30, i32 0, i32 3
  %31 = load i64, i64* %xhv_max23, align 8
  %add24 = add i64 %31, 1
  %arrayidx25 = getelementptr inbounds %struct.he*, %struct.he** %28, i64 %add24
  %32 = bitcast %struct.he** %arrayidx25 to %struct.xpvhv_aux*
  %xhv_name_u26 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %32, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u26 to %struct.hek***
  %33 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %34 = load %struct.hek*, %struct.hek** %33, align 8
  %tobool27 = icmp ne %struct.hek* %34, null
  br i1 %tobool27, label %cond.true38, label %cond.false68

cond.false28:                                     ; preds = %land.lhs.true11
  %35 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u29 = getelementptr inbounds %struct.hv, %struct.hv* %35, i32 0, i32 3
  %svu_hash30 = bitcast %union.anon.4* %sv_u29 to %struct.he***
  %36 = load %struct.he**, %struct.he*** %svu_hash30, align 8
  %37 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any31 = getelementptr inbounds %struct.hv, %struct.hv* %37, i32 0, i32 0
  %38 = load %struct.xpvhv*, %struct.xpvhv** %sv_any31, align 8
  %xhv_max32 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %38, i32 0, i32 3
  %39 = load i64, i64* %xhv_max32, align 8
  %add33 = add i64 %39, 1
  %arrayidx34 = getelementptr inbounds %struct.he*, %struct.he** %36, i64 %add33
  %40 = bitcast %struct.he** %arrayidx34 to %struct.xpvhv_aux*
  %xhv_name_u35 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %40, i32 0, i32 0
  %xhvnameu_name36 = bitcast %union._xhvnameu* %xhv_name_u35 to %struct.hek**
  %41 = load %struct.hek*, %struct.hek** %xhvnameu_name36, align 8
  %tobool37 = icmp ne %struct.hek* %41, null
  br i1 %tobool37, label %cond.true38, label %cond.false68

cond.true38:                                      ; preds = %cond.false28, %cond.true19
  %42 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u39 = getelementptr inbounds %struct.hv, %struct.hv* %42, i32 0, i32 3
  %svu_hash40 = bitcast %union.anon.4* %sv_u39 to %struct.he***
  %43 = load %struct.he**, %struct.he*** %svu_hash40, align 8
  %44 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any41 = getelementptr inbounds %struct.hv, %struct.hv* %44, i32 0, i32 0
  %45 = load %struct.xpvhv*, %struct.xpvhv** %sv_any41, align 8
  %xhv_max42 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %45, i32 0, i32 3
  %46 = load i64, i64* %xhv_max42, align 8
  %add43 = add i64 %46, 1
  %arrayidx44 = getelementptr inbounds %struct.he*, %struct.he** %43, i64 %add43
  %47 = bitcast %struct.he** %arrayidx44 to %struct.xpvhv_aux*
  %xhv_name_count45 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %47, i32 0, i32 4
  %48 = load i32, i32* %xhv_name_count45, align 4
  %tobool46 = icmp ne i32 %48, 0
  br i1 %tobool46, label %cond.true47, label %cond.false56

cond.true47:                                      ; preds = %cond.true38
  %49 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u48 = getelementptr inbounds %struct.hv, %struct.hv* %49, i32 0, i32 3
  %svu_hash49 = bitcast %union.anon.4* %sv_u48 to %struct.he***
  %50 = load %struct.he**, %struct.he*** %svu_hash49, align 8
  %51 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any50 = getelementptr inbounds %struct.hv, %struct.hv* %51, i32 0, i32 0
  %52 = load %struct.xpvhv*, %struct.xpvhv** %sv_any50, align 8
  %xhv_max51 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %52, i32 0, i32 3
  %53 = load i64, i64* %xhv_max51, align 8
  %add52 = add i64 %53, 1
  %arrayidx53 = getelementptr inbounds %struct.he*, %struct.he** %50, i64 %add52
  %54 = bitcast %struct.he** %arrayidx53 to %struct.xpvhv_aux*
  %xhv_name_u54 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %54, i32 0, i32 0
  %xhvnameu_names55 = bitcast %union._xhvnameu* %xhv_name_u54 to %struct.hek***
  %55 = load %struct.hek**, %struct.hek*** %xhvnameu_names55, align 8
  %56 = load %struct.hek*, %struct.hek** %55, align 8
  br label %cond.end65

cond.false56:                                     ; preds = %cond.true38
  %57 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u57 = getelementptr inbounds %struct.hv, %struct.hv* %57, i32 0, i32 3
  %svu_hash58 = bitcast %union.anon.4* %sv_u57 to %struct.he***
  %58 = load %struct.he**, %struct.he*** %svu_hash58, align 8
  %59 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any59 = getelementptr inbounds %struct.hv, %struct.hv* %59, i32 0, i32 0
  %60 = load %struct.xpvhv*, %struct.xpvhv** %sv_any59, align 8
  %xhv_max60 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %60, i32 0, i32 3
  %61 = load i64, i64* %xhv_max60, align 8
  %add61 = add i64 %61, 1
  %arrayidx62 = getelementptr inbounds %struct.he*, %struct.he** %58, i64 %add61
  %62 = bitcast %struct.he** %arrayidx62 to %struct.xpvhv_aux*
  %xhv_name_u63 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %62, i32 0, i32 0
  %xhvnameu_name64 = bitcast %union._xhvnameu* %xhv_name_u63 to %struct.hek**
  %63 = load %struct.hek*, %struct.hek** %xhvnameu_name64, align 8
  br label %cond.end65

cond.end65:                                       ; preds = %cond.false56, %cond.true47
  %cond66 = phi %struct.hek* [ %56, %cond.true47 ], [ %63, %cond.false56 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond66, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool67 = icmp ne i8* %arraydecay, null
  br i1 %tobool67, label %land.lhs.true69, label %cond.false73

cond.false68:                                     ; preds = %cond.false28, %cond.true19, %land.lhs.true9, %land.lhs.true
  br i1 false, label %land.lhs.true69, label %cond.false73

land.lhs.true69:                                  ; preds = %cond.false68, %cond.end65
  %64 = load %struct.hv*, %struct.hv** %stash, align 8
  %call70 = call i32 @Perl_Gv_AMupdate(%struct.hv* %64, i1 zeroext false)
  %tobool71 = icmp ne i32 %call70, 0
  br i1 %tobool71, label %cond.true72, label %cond.false73

cond.true72:                                      ; preds = %land.lhs.true69
  br i1 true, label %if.then76, label %if.end78

cond.false73:                                     ; preds = %land.lhs.true69, %cond.false68, %cond.end65
  %65 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags74 = getelementptr inbounds %struct.hv, %struct.hv* %65, i32 0, i32 2
  %66 = load i32, i32* %sv_flags74, align 4
  %and75 = and i32 %66, -268435457
  store i32 %and75, i32* %sv_flags74, align 4
  br i1 false, label %if.then76, label %if.end78

if.then76:                                        ; preds = %cond.false73, %cond.true72
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded77 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %67, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded77, align 8
  %68 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %68)
  br label %if.end78

if.end78:                                         ; preds = %if.then76, %cond.false73, %cond.true72, %do.body5
  %69 = load %struct.sv*, %struct.sv** %ref, align 8
  %70 = load %struct.hv*, %struct.hv** %stash, align 8
  %call79 = call %struct.sv* @Perl_sv_bless(%struct.sv* %69, %struct.hv* %70)
  br label %do.body80

do.body80:                                        ; preds = %if.end78
  %71 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u81 = getelementptr inbounds %struct.sv, %struct.sv* %71, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u81 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end82

do.end82:                                         ; preds = %do.body80
  %72 = load %struct.sv*, %struct.sv** %ref, align 8
  %73 = bitcast %struct.sv* %72 to i8*
  %74 = bitcast i8* %73 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %74)
  br label %do.end83

do.end83:                                         ; preds = %do.end82
  br label %if.end84

if.end84:                                         ; preds = %do.end83, %do.end
  br label %do.end85

do.end85:                                         ; preds = %if.end84
  %75 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %75, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %do.end85, %if.then
  %76 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %76
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_blessed(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  %buf = alloca [128 x i8], align 16
  %classname = alloca i8*, align 8
  %malloced_classname = alloca i8*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0
  store i8* %arraydecay, i8** %classname, align 8
  store i8* null, i8** %malloced_classname, align 8
  %0 = load i8*, i8** %cname.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 24
  %2 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %2, null
  br i1 %tobool, label %if.else6, label %if.then

if.then:                                          ; preds = %do.body
  br label %do.body1

do.body1:                                         ; preds = %if.then
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %4 = load i8*, i8** %aptr, align 8
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2, i32 0, i32 3
  %6 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %4, %6
  br i1 %cmp, label %if.then3, label %if.else

if.then3:                                         ; preds = %do.body1
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 22
  %aptr5 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf4, i32 0, i32 2
  %8 = load i8*, i8** %aptr5, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr, i8** %aptr5, align 8
  %9 = load i8, i8* %8, align 1
  %conv = zext i8 %9 to i32
  store i32 %conv, i32* %len, align 4
  br label %if.end

if.else:                                          ; preds = %do.body1
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then3
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end12

if.else6:                                         ; preds = %do.body
  %10 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio7 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %10, i32 0, i32 24
  %11 = load %struct._PerlIO**, %struct._PerlIO*** %fio7, align 8
  %call = call i32 @PerlIO_getc(%struct._PerlIO** %11)
  store i32 %call, i32* %len, align 4
  %cmp8 = icmp eq i32 %call, -1
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.else6
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end11:                                         ; preds = %if.else6
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %do.end
  br label %do.end13

do.end13:                                         ; preds = %if.end12
  %12 = load i32, i32* %len, align 4
  %and = and i32 %12, 128
  %tobool14 = icmp ne i32 %and, 0
  br i1 %tobool14, label %if.then15, label %if.end63

if.then15:                                        ; preds = %do.end13
  br label %do.body16

do.body16:                                        ; preds = %if.then15
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio17 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 24
  %14 = load %struct._PerlIO**, %struct._PerlIO*** %fio17, align 8
  %tobool18 = icmp ne %struct._PerlIO** %14, null
  br i1 %tobool18, label %if.else48, label %if.then19

if.then19:                                        ; preds = %do.body16
  br label %do.body20

do.body20:                                        ; preds = %if.then19
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf21 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 22
  %aptr22 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf21, i32 0, i32 2
  %16 = load i8*, i8** %aptr22, align 8
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 4
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf23 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 22
  %aend24 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf23, i32 0, i32 3
  %18 = load i8*, i8** %aend24, align 8
  %cmp25 = icmp ule i8* %add.ptr, %18
  br i1 %cmp25, label %if.then27, label %if.else45

if.then27:                                        ; preds = %do.body20
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf28 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 22
  %aptr29 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf28, i32 0, i32 2
  %20 = load i8*, i8** %aptr29, align 8
  %21 = ptrtoint i8* %20 to i64
  %22 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf30 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %22, i32 0, i32 22
  %aptr31 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf30, i32 0, i32 2
  %23 = load i8*, i8** %aptr31, align 8
  %24 = ptrtoint i8* %23 to i64
  %and32 = and i64 %24, -4
  %cmp33 = icmp eq i64 %21, %and32
  br i1 %cmp33, label %if.then35, label %if.else38

if.then35:                                        ; preds = %if.then27
  %25 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf36 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %25, i32 0, i32 22
  %aptr37 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf36, i32 0, i32 2
  %26 = load i8*, i8** %aptr37, align 8
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %len, align 4
  br label %if.end41

if.else38:                                        ; preds = %if.then27
  %29 = bitcast i32* %len to i8*
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf39 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 22
  %aptr40 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf39, i32 0, i32 2
  %31 = load i8*, i8** %aptr40, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 1 %31, i64 4, i1 false)
  br label %if.end41

if.end41:                                         ; preds = %if.else38, %if.then35
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf42 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %32, i32 0, i32 22
  %aptr43 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf42, i32 0, i32 2
  %33 = load i8*, i8** %aptr43, align 8
  %add.ptr44 = getelementptr inbounds i8, i8* %33, i64 4
  store i8* %add.ptr44, i8** %aptr43, align 8
  br label %if.end46

if.else45:                                        ; preds = %do.body20
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end46:                                         ; preds = %if.end41
  br label %do.end47

do.end47:                                         ; preds = %if.end46
  br label %if.end55

if.else48:                                        ; preds = %do.body16
  %34 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio49 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %34, i32 0, i32 24
  %35 = load %struct._PerlIO**, %struct._PerlIO*** %fio49, align 8
  %36 = bitcast i32* %len to i8*
  %call50 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %35, i8* %36, i64 4)
  %cmp51 = icmp ne i64 %call50, 4
  br i1 %cmp51, label %if.then53, label %if.end54

if.then53:                                        ; preds = %if.else48
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end54:                                         ; preds = %if.else48
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %do.end47
  %37 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %37, i32 0, i32 12
  %38 = load i32, i32* %netorder, align 8
  %tobool56 = icmp ne i32 %38, 0
  br i1 %tobool56, label %if.then57, label %if.end59

if.then57:                                        ; preds = %if.end55
  %39 = load i32, i32* %len, align 4
  %call58 = call i32 @my_swap32(i32 %39)
  store i32 %call58, i32* %len, align 4
  br label %if.end59

if.end59:                                         ; preds = %if.then57, %if.end55
  br label %do.end60

do.end60:                                         ; preds = %if.end59
  %40 = load i32, i32* %len, align 4
  %add = add nsw i32 %40, 1
  %conv61 = sext i32 %add to i64
  %mul = mul i64 %conv61, 1
  %call62 = call i8* @Perl_safesysmalloc(i64 %mul)
  store i8* %call62, i8** %classname, align 8
  %41 = load i8*, i8** %classname, align 8
  store i8* %41, i8** %malloced_classname, align 8
  br label %if.end63

if.end63:                                         ; preds = %do.end60, %do.end13
  br label %do.body64

do.body64:                                        ; preds = %if.end63
  %42 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio65 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %42, i32 0, i32 24
  %43 = load %struct._PerlIO**, %struct._PerlIO*** %fio65, align 8
  %tobool66 = icmp ne %struct._PerlIO** %43, null
  br i1 %tobool66, label %if.else87, label %if.then67

if.then67:                                        ; preds = %do.body64
  br label %do.body68

do.body68:                                        ; preds = %if.then67
  %44 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf69 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %44, i32 0, i32 22
  %aptr70 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf69, i32 0, i32 2
  %45 = load i8*, i8** %aptr70, align 8
  %46 = load i32, i32* %len, align 4
  %idx.ext = sext i32 %46 to i64
  %add.ptr71 = getelementptr inbounds i8, i8* %45, i64 %idx.ext
  %47 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf72 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %47, i32 0, i32 22
  %aend73 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf72, i32 0, i32 3
  %48 = load i8*, i8** %aend73, align 8
  %cmp74 = icmp ule i8* %add.ptr71, %48
  br i1 %cmp74, label %if.then76, label %if.else84

if.then76:                                        ; preds = %do.body68
  %49 = load i8*, i8** %classname, align 8
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf77 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %50, i32 0, i32 22
  %aptr78 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf77, i32 0, i32 2
  %51 = load i8*, i8** %aptr78, align 8
  %52 = load i32, i32* %len, align 4
  %conv79 = sext i32 %52 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 %51, i64 %conv79, i1 false)
  %53 = load i32, i32* %len, align 4
  %54 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf80 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %54, i32 0, i32 22
  %aptr81 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf80, i32 0, i32 2
  %55 = load i8*, i8** %aptr81, align 8
  %idx.ext82 = sext i32 %53 to i64
  %add.ptr83 = getelementptr inbounds i8, i8* %55, i64 %idx.ext82
  store i8* %add.ptr83, i8** %aptr81, align 8
  br label %if.end85

if.else84:                                        ; preds = %do.body68
  %56 = load i8*, i8** %malloced_classname, align 8
  call void @Perl_safesysfree(i8* %56)
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end85:                                         ; preds = %if.then76
  br label %do.end86

do.end86:                                         ; preds = %if.end85
  br label %if.end96

if.else87:                                        ; preds = %do.body64
  %57 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio88 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %57, i32 0, i32 24
  %58 = load %struct._PerlIO**, %struct._PerlIO*** %fio88, align 8
  %59 = load i8*, i8** %classname, align 8
  %60 = load i32, i32* %len, align 4
  %conv89 = sext i32 %60 to i64
  %call90 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %58, i8* %59, i64 %conv89)
  %61 = load i32, i32* %len, align 4
  %conv91 = sext i32 %61 to i64
  %cmp92 = icmp ne i64 %call90, %conv91
  br i1 %cmp92, label %if.then94, label %if.end95

if.then94:                                        ; preds = %if.else87
  %62 = load i8*, i8** %malloced_classname, align 8
  call void @Perl_safesysfree(i8* %62)
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end95:                                         ; preds = %if.else87
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %do.end86
  br label %do.end97

do.end97:                                         ; preds = %if.end96
  %63 = load i8*, i8** %classname, align 8
  %64 = load i32, i32* %len, align 4
  %idxprom = sext i32 %64 to i64
  %arrayidx = getelementptr inbounds i8, i8* %63, i64 %idxprom
  store i8 0, i8* %arrayidx, align 1
  %65 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aclass = getelementptr inbounds %struct.stcxt, %struct.stcxt* %65, i32 0, i32 8
  %66 = load %struct.av*, %struct.av** %aclass, align 8
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %classnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %67, i32 0, i32 11
  %68 = load i64, i64* %classnum, align 8
  %inc = add nsw i64 %68, 1
  store i64 %inc, i64* %classnum, align 8
  %69 = load i8*, i8** %classname, align 8
  %70 = load i32, i32* %len, align 4
  %conv98 = sext i32 %70 to i64
  %call99 = call %struct.sv* @Perl_newSVpvn(i8* %69, i64 %conv98)
  %call100 = call %struct.sv** @Perl_av_store(%struct.av* %66, i64 %68, %struct.sv* %call99)
  %tobool101 = icmp ne %struct.sv** %call100, null
  br i1 %tobool101, label %if.end103, label %if.then102

if.then102:                                       ; preds = %do.end97
  %71 = load i8*, i8** %malloced_classname, align 8
  call void @Perl_safesysfree(i8* %71)
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end103:                                        ; preds = %do.end97
  %72 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %73 = load i8*, i8** %classname, align 8
  %call104 = call %struct.sv* @retrieve(%struct.stcxt* %72, i8* %73)
  store %struct.sv* %call104, %struct.sv** %sv, align 8
  %74 = load i8*, i8** %malloced_classname, align 8
  %tobool105 = icmp ne i8* %74, null
  br i1 %tobool105, label %if.then106, label %if.end107

if.then106:                                       ; preds = %if.end103
  %75 = load i8*, i8** %malloced_classname, align 8
  call void @Perl_safesysfree(i8* %75)
  br label %if.end107

if.end107:                                        ; preds = %if.then106, %if.end103
  %76 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %76, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end107, %if.then102, %if.then94, %if.else84, %if.then53, %if.else45, %if.then10, %if.else
  %77 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %77
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_idx_blessed(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %idx = alloca i32, align 4
  %classname = alloca i8*, align 8
  %sva = alloca %struct.sv**, align 8
  %sv = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load i8*, i8** %cname.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 24
  %2 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %2, null
  br i1 %tobool, label %if.else6, label %if.then

if.then:                                          ; preds = %do.body
  br label %do.body1

do.body1:                                         ; preds = %if.then
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %4 = load i8*, i8** %aptr, align 8
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2, i32 0, i32 3
  %6 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %4, %6
  br i1 %cmp, label %if.then3, label %if.else

if.then3:                                         ; preds = %do.body1
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 22
  %aptr5 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf4, i32 0, i32 2
  %8 = load i8*, i8** %aptr5, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr, i8** %aptr5, align 8
  %9 = load i8, i8* %8, align 1
  %conv = zext i8 %9 to i32
  store i32 %conv, i32* %idx, align 4
  br label %if.end

if.else:                                          ; preds = %do.body1
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then3
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end12

if.else6:                                         ; preds = %do.body
  %10 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio7 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %10, i32 0, i32 24
  %11 = load %struct._PerlIO**, %struct._PerlIO*** %fio7, align 8
  %call = call i32 @PerlIO_getc(%struct._PerlIO** %11)
  store i32 %call, i32* %idx, align 4
  %cmp8 = icmp eq i32 %call, -1
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.else6
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end11:                                         ; preds = %if.else6
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %do.end
  br label %do.end13

do.end13:                                         ; preds = %if.end12
  %12 = load i32, i32* %idx, align 4
  %and = and i32 %12, 128
  %tobool14 = icmp ne i32 %and, 0
  br i1 %tobool14, label %if.then15, label %if.end61

if.then15:                                        ; preds = %do.end13
  br label %do.body16

do.body16:                                        ; preds = %if.then15
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio17 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 24
  %14 = load %struct._PerlIO**, %struct._PerlIO*** %fio17, align 8
  %tobool18 = icmp ne %struct._PerlIO** %14, null
  br i1 %tobool18, label %if.else48, label %if.then19

if.then19:                                        ; preds = %do.body16
  br label %do.body20

do.body20:                                        ; preds = %if.then19
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf21 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 22
  %aptr22 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf21, i32 0, i32 2
  %16 = load i8*, i8** %aptr22, align 8
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 4
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf23 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 22
  %aend24 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf23, i32 0, i32 3
  %18 = load i8*, i8** %aend24, align 8
  %cmp25 = icmp ule i8* %add.ptr, %18
  br i1 %cmp25, label %if.then27, label %if.else45

if.then27:                                        ; preds = %do.body20
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf28 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 22
  %aptr29 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf28, i32 0, i32 2
  %20 = load i8*, i8** %aptr29, align 8
  %21 = ptrtoint i8* %20 to i64
  %22 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf30 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %22, i32 0, i32 22
  %aptr31 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf30, i32 0, i32 2
  %23 = load i8*, i8** %aptr31, align 8
  %24 = ptrtoint i8* %23 to i64
  %and32 = and i64 %24, -4
  %cmp33 = icmp eq i64 %21, %and32
  br i1 %cmp33, label %if.then35, label %if.else38

if.then35:                                        ; preds = %if.then27
  %25 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf36 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %25, i32 0, i32 22
  %aptr37 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf36, i32 0, i32 2
  %26 = load i8*, i8** %aptr37, align 8
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %idx, align 4
  br label %if.end41

if.else38:                                        ; preds = %if.then27
  %29 = bitcast i32* %idx to i8*
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf39 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 22
  %aptr40 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf39, i32 0, i32 2
  %31 = load i8*, i8** %aptr40, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 1 %31, i64 4, i1 false)
  br label %if.end41

if.end41:                                         ; preds = %if.else38, %if.then35
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf42 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %32, i32 0, i32 22
  %aptr43 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf42, i32 0, i32 2
  %33 = load i8*, i8** %aptr43, align 8
  %add.ptr44 = getelementptr inbounds i8, i8* %33, i64 4
  store i8* %add.ptr44, i8** %aptr43, align 8
  br label %if.end46

if.else45:                                        ; preds = %do.body20
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end46:                                         ; preds = %if.end41
  br label %do.end47

do.end47:                                         ; preds = %if.end46
  br label %if.end55

if.else48:                                        ; preds = %do.body16
  %34 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio49 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %34, i32 0, i32 24
  %35 = load %struct._PerlIO**, %struct._PerlIO*** %fio49, align 8
  %36 = bitcast i32* %idx to i8*
  %call50 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %35, i8* %36, i64 4)
  %cmp51 = icmp ne i64 %call50, 4
  br i1 %cmp51, label %if.then53, label %if.end54

if.then53:                                        ; preds = %if.else48
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end54:                                         ; preds = %if.else48
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %do.end47
  %37 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %37, i32 0, i32 12
  %38 = load i32, i32* %netorder, align 8
  %tobool56 = icmp ne i32 %38, 0
  br i1 %tobool56, label %if.then57, label %if.end59

if.then57:                                        ; preds = %if.end55
  %39 = load i32, i32* %idx, align 4
  %call58 = call i32 @my_swap32(i32 %39)
  store i32 %call58, i32* %idx, align 4
  br label %if.end59

if.end59:                                         ; preds = %if.then57, %if.end55
  br label %do.end60

do.end60:                                         ; preds = %if.end59
  br label %if.end61

if.end61:                                         ; preds = %do.end60, %do.end13
  %40 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aclass = getelementptr inbounds %struct.stcxt, %struct.stcxt* %40, i32 0, i32 8
  %41 = load %struct.av*, %struct.av** %aclass, align 8
  %42 = load i32, i32* %idx, align 4
  %conv62 = sext i32 %42 to i64
  %call63 = call %struct.sv** @Perl_av_fetch(%struct.av* %41, i64 %conv62, i32 0)
  store %struct.sv** %call63, %struct.sv*** %sva, align 8
  %43 = load %struct.sv**, %struct.sv*** %sva, align 8
  %tobool64 = icmp ne %struct.sv** %43, null
  br i1 %tobool64, label %if.end69, label %if.then65

if.then65:                                        ; preds = %if.end61
  br label %do.body66

do.body66:                                        ; preds = %if.then65
  %44 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %44, i32 0, i32 19
  store i32 1, i32* %s_dirty, align 8
  %45 = load i32, i32* %idx, align 4
  %conv67 = sext i32 %45 to i64
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.68, i64 0, i64 0), i64 %conv67)
  br label %do.end68

do.end68:                                         ; preds = %do.body66
  br label %if.end69

if.end69:                                         ; preds = %do.end68, %if.end61
  %46 = load %struct.sv**, %struct.sv*** %sva, align 8
  %47 = load %struct.sv*, %struct.sv** %46, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %47, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %48 = load i8*, i8** %svu_pv, align 8
  store i8* %48, i8** %classname, align 8
  %49 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %50 = load i8*, i8** %classname, align 8
  %call70 = call %struct.sv* @retrieve(%struct.stcxt* %49, i8* %50)
  store %struct.sv* %call70, %struct.sv** %sv, align 8
  %51 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %51, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end69, %if.then53, %if.else45, %if.then10, %if.else
  %52 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %52
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_hook(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %buf = alloca [128 x i8], align 16
  %classname = alloca i8*, align 8
  %flags = alloca i32, align 4
  %len2 = alloca i32, align 4
  %frozen = alloca %struct.sv*, align 8
  %len3 = alloca i32, align 4
  %av = alloca %struct.av*, align 8
  %hook = alloca %struct.sv*, align 8
  %sv = alloca %struct.sv*, align 8
  %rv = alloca %struct.sv*, align 8
  %attach = alloca %struct.gv*, align 8
  %stash = alloca %struct.hv*, align 8
  %obj_type = alloca i32, align 4
  %clone = alloca i32, align 4
  %mtype = alloca i8, align 1
  %extra_type = alloca i32, align 4
  %sva = alloca %struct.sv**, align 8
  %idx = alloca i32, align 4
  %malloced_classname = alloca i8*, align 8
  %ary = alloca %struct.sv**, align 8
  %i = alloca i32, align 4
  %tag = alloca i32, align 4
  %svh = alloca %struct.sv**, align 8
  %xsv = alloca %struct.sv*, align 8
  %attached = alloca %struct.sv*, align 8
  %attach_hook = alloca %struct.sv*, align 8
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0
  store i8* %arraydecay, i8** %classname, align 8
  store i32 0, i32* %len3, align 4
  store %struct.av* null, %struct.av** %av, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %optype = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 1
  %1 = load i32, i32* %optype, align 4
  %and = and i32 %1, 4
  store i32 %and, i32* %clone, align 4
  store i8 0, i8* %mtype, align 1
  store i32 0, i32* %extra_type, align 4
  %2 = load i8*, i8** %cname.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 24
  %4 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %4, null
  br i1 %tobool, label %if.else6, label %if.then

if.then:                                          ; preds = %do.body
  br label %do.body1

do.body1:                                         ; preds = %if.then
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %6 = load i8*, i8** %aptr, align 8
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2, i32 0, i32 3
  %8 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %6, %8
  br i1 %cmp, label %if.then3, label %if.else

if.then3:                                         ; preds = %do.body1
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 22
  %aptr5 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf4, i32 0, i32 2
  %10 = load i8*, i8** %aptr5, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr, i8** %aptr5, align 8
  %11 = load i8, i8* %10, align 1
  %conv = zext i8 %11 to i32
  store i32 %conv, i32* %flags, align 4
  br label %if.end

if.else:                                          ; preds = %do.body1
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then3
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end12

if.else6:                                         ; preds = %do.body
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio7 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 24
  %13 = load %struct._PerlIO**, %struct._PerlIO*** %fio7, align 8
  %call = call i32 @PerlIO_getc(%struct._PerlIO** %13)
  store i32 %call, i32* %flags, align 4
  %cmp8 = icmp eq i32 %call, -1
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.else6
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end11:                                         ; preds = %if.else6
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %do.end
  br label %do.end13

do.end13:                                         ; preds = %if.end12
  %14 = load i32, i32* %flags, align 4
  %and14 = and i32 %14, 3
  store i32 %and14, i32* %obj_type, align 4
  %15 = load i32, i32* %obj_type, align 4
  switch i32 %15, label %sw.default56 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb16
    i32 2, label %sw.bb18
    i32 3, label %sw.bb20
  ]

sw.bb:                                            ; preds = %do.end13
  %call15 = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call15, %struct.sv** %sv, align 8
  br label %sw.epilog58

sw.bb16:                                          ; preds = %do.end13
  %call17 = call %struct.sv* @Perl_newSV_type(i32 11)
  %16 = bitcast %struct.sv* %call17 to i8*
  %17 = bitcast i8* %16 to %struct.av*
  %18 = bitcast %struct.av* %17 to %struct.sv*
  store %struct.sv* %18, %struct.sv** %sv, align 8
  br label %sw.epilog58

sw.bb18:                                          ; preds = %do.end13
  %call19 = call %struct.sv* @Perl_newSV_type(i32 12)
  %19 = bitcast %struct.sv* %call19 to i8*
  %20 = bitcast i8* %19 to %struct.hv*
  %21 = bitcast %struct.hv* %20 to %struct.sv*
  store %struct.sv* %21, %struct.sv** %sv, align 8
  br label %sw.epilog58

sw.bb20:                                          ; preds = %do.end13
  br label %do.body21

do.body21:                                        ; preds = %sw.bb20
  %22 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %22, i32 0, i32 24
  %23 = load %struct._PerlIO**, %struct._PerlIO*** %fio22, align 8
  %tobool23 = icmp ne %struct._PerlIO** %23, null
  br i1 %tobool23, label %if.else40, label %if.then24

if.then24:                                        ; preds = %do.body21
  br label %do.body25

do.body25:                                        ; preds = %if.then24
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 22
  %aptr27 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 2
  %25 = load i8*, i8** %aptr27, align 8
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf28 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 22
  %aend29 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf28, i32 0, i32 3
  %27 = load i8*, i8** %aend29, align 8
  %cmp30 = icmp ult i8* %25, %27
  br i1 %cmp30, label %if.then32, label %if.else37

if.then32:                                        ; preds = %do.body25
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf33 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 22
  %aptr34 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf33, i32 0, i32 2
  %29 = load i8*, i8** %aptr34, align 8
  %incdec.ptr35 = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %incdec.ptr35, i8** %aptr34, align 8
  %30 = load i8, i8* %29, align 1
  %conv36 = zext i8 %30 to i32
  store i32 %conv36, i32* %extra_type, align 4
  br label %if.end38

if.else37:                                        ; preds = %do.body25
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end38:                                         ; preds = %if.then32
  br label %do.end39

do.end39:                                         ; preds = %if.end38
  br label %if.end47

if.else40:                                        ; preds = %do.body21
  %31 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio41 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %31, i32 0, i32 24
  %32 = load %struct._PerlIO**, %struct._PerlIO*** %fio41, align 8
  %call42 = call i32 @PerlIO_getc(%struct._PerlIO** %32)
  store i32 %call42, i32* %extra_type, align 4
  %cmp43 = icmp eq i32 %call42, -1
  br i1 %cmp43, label %if.then45, label %if.end46

if.then45:                                        ; preds = %if.else40
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end46:                                         ; preds = %if.else40
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %do.end39
  br label %do.end48

do.end48:                                         ; preds = %if.end47
  %33 = load i32, i32* %extra_type, align 4
  switch i32 %33, label %sw.default [
    i32 4, label %sw.bb49
    i32 5, label %sw.bb51
    i32 6, label %sw.bb53
  ]

sw.bb49:                                          ; preds = %do.end48
  %call50 = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call50, %struct.sv** %sv, align 8
  store i8 113, i8* %mtype, align 1
  br label %sw.epilog

sw.bb51:                                          ; preds = %do.end48
  %call52 = call %struct.sv* @Perl_newSV_type(i32 11)
  %34 = bitcast %struct.sv* %call52 to i8*
  %35 = bitcast i8* %34 to %struct.av*
  %36 = bitcast %struct.av* %35 to %struct.sv*
  store %struct.sv* %36, %struct.sv** %sv, align 8
  store i8 80, i8* %mtype, align 1
  br label %sw.epilog

sw.bb53:                                          ; preds = %do.end48
  %call54 = call %struct.sv* @Perl_newSV_type(i32 12)
  %37 = bitcast %struct.sv* %call54 to i8*
  %38 = bitcast i8* %37 to %struct.hv*
  %39 = bitcast %struct.hv* %38 to %struct.sv*
  store %struct.sv* %39, %struct.sv** %sv, align 8
  store i8 80, i8* %mtype, align 1
  br label %sw.epilog

sw.default:                                       ; preds = %do.end48
  %40 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call55 = call %struct.sv* @retrieve_other(%struct.stcxt* %40, i8* null)
  store %struct.sv* %call55, %struct.sv** %retval, align 8
  br label %return

sw.epilog:                                        ; preds = %sw.bb53, %sw.bb51, %sw.bb49
  br label %sw.epilog58

sw.default56:                                     ; preds = %do.end13
  %41 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call57 = call %struct.sv* @retrieve_other(%struct.stcxt* %41, i8* null)
  store %struct.sv* %call57, %struct.sv** %retval, align 8
  br label %return

sw.epilog58:                                      ; preds = %sw.epilog, %sw.bb18, %sw.bb16, %sw.bb
  br label %do.body59

do.body59:                                        ; preds = %sw.epilog58
  %42 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %42, i32 0, i32 5
  %43 = load %struct.av*, %struct.av** %aseen, align 8
  %44 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %44, i32 0, i32 10
  %45 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %45, 1
  store i64 %inc, i64* %tagnum, align 8
  %46 = load %struct.sv*, %struct.sv** %sv, align 8
  %47 = bitcast %struct.sv* %46 to i8*
  %48 = bitcast i8* %47 to %struct.sv*
  %call60 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %48)
  %call61 = call %struct.sv** @Perl_av_store(%struct.av* %43, i64 %45, %struct.sv* %call60)
  %cmp62 = icmp eq %struct.sv** %call61, null
  br i1 %cmp62, label %if.then64, label %if.end65

if.then64:                                        ; preds = %do.body59
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end65:                                         ; preds = %do.body59
  br label %do.end66

do.end66:                                         ; preds = %if.end65
  br label %while.cond

while.cond:                                       ; preds = %do.end100, %do.end66
  %49 = load i32, i32* %flags, align 4
  %and67 = and i32 %49, 64
  %tobool68 = icmp ne i32 %and67, 0
  br i1 %tobool68, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call69 = call %struct.sv* @retrieve(%struct.stcxt* %50, i8* null)
  store %struct.sv* %call69, %struct.sv** %rv, align 8
  %51 = load %struct.sv*, %struct.sv** %rv, align 8
  %tobool70 = icmp ne %struct.sv* %51, null
  br i1 %tobool70, label %if.end72, label %if.then71

if.then71:                                        ; preds = %while.body
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end72:                                         ; preds = %while.body
  %52 = load %struct.sv*, %struct.sv** %rv, align 8
  %53 = bitcast %struct.sv* %52 to i8*
  %54 = bitcast i8* %53 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %54)
  br label %do.body73

do.body73:                                        ; preds = %if.end72
  %55 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio74 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %55, i32 0, i32 24
  %56 = load %struct._PerlIO**, %struct._PerlIO*** %fio74, align 8
  %tobool75 = icmp ne %struct._PerlIO** %56, null
  br i1 %tobool75, label %if.else92, label %if.then76

if.then76:                                        ; preds = %do.body73
  br label %do.body77

do.body77:                                        ; preds = %if.then76
  %57 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf78 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %57, i32 0, i32 22
  %aptr79 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf78, i32 0, i32 2
  %58 = load i8*, i8** %aptr79, align 8
  %59 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf80 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %59, i32 0, i32 22
  %aend81 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf80, i32 0, i32 3
  %60 = load i8*, i8** %aend81, align 8
  %cmp82 = icmp ult i8* %58, %60
  br i1 %cmp82, label %if.then84, label %if.else89

if.then84:                                        ; preds = %do.body77
  %61 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf85 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %61, i32 0, i32 22
  %aptr86 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf85, i32 0, i32 2
  %62 = load i8*, i8** %aptr86, align 8
  %incdec.ptr87 = getelementptr inbounds i8, i8* %62, i32 1
  store i8* %incdec.ptr87, i8** %aptr86, align 8
  %63 = load i8, i8* %62, align 1
  %conv88 = zext i8 %63 to i32
  store i32 %conv88, i32* %flags, align 4
  br label %if.end90

if.else89:                                        ; preds = %do.body77
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end90:                                         ; preds = %if.then84
  br label %do.end91

do.end91:                                         ; preds = %if.end90
  br label %if.end99

if.else92:                                        ; preds = %do.body73
  %64 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio93 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %64, i32 0, i32 24
  %65 = load %struct._PerlIO**, %struct._PerlIO*** %fio93, align 8
  %call94 = call i32 @PerlIO_getc(%struct._PerlIO** %65)
  store i32 %call94, i32* %flags, align 4
  %cmp95 = icmp eq i32 %call94, -1
  br i1 %cmp95, label %if.then97, label %if.end98

if.then97:                                        ; preds = %if.else92
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end98:                                         ; preds = %if.else92
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %do.end91
  br label %do.end100

do.end100:                                        ; preds = %if.end99
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %66 = load i32, i32* %flags, align 4
  %and101 = and i32 %66, 32
  %tobool102 = icmp ne i32 %and101, 0
  br i1 %tobool102, label %if.then103, label %if.else190

if.then103:                                       ; preds = %while.end
  %67 = load i32, i32* %flags, align 4
  %and104 = and i32 %67, 4
  %tobool105 = icmp ne i32 %and104, 0
  br i1 %tobool105, label %if.then106, label %if.else152

if.then106:                                       ; preds = %if.then103
  br label %do.body107

do.body107:                                       ; preds = %if.then106
  %68 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio108 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %68, i32 0, i32 24
  %69 = load %struct._PerlIO**, %struct._PerlIO*** %fio108, align 8
  %tobool109 = icmp ne %struct._PerlIO** %69, null
  br i1 %tobool109, label %if.else139, label %if.then110

if.then110:                                       ; preds = %do.body107
  br label %do.body111

do.body111:                                       ; preds = %if.then110
  %70 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf112 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %70, i32 0, i32 22
  %aptr113 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf112, i32 0, i32 2
  %71 = load i8*, i8** %aptr113, align 8
  %add.ptr = getelementptr inbounds i8, i8* %71, i64 4
  %72 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf114 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %72, i32 0, i32 22
  %aend115 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf114, i32 0, i32 3
  %73 = load i8*, i8** %aend115, align 8
  %cmp116 = icmp ule i8* %add.ptr, %73
  br i1 %cmp116, label %if.then118, label %if.else136

if.then118:                                       ; preds = %do.body111
  %74 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf119 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %74, i32 0, i32 22
  %aptr120 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf119, i32 0, i32 2
  %75 = load i8*, i8** %aptr120, align 8
  %76 = ptrtoint i8* %75 to i64
  %77 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf121 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %77, i32 0, i32 22
  %aptr122 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf121, i32 0, i32 2
  %78 = load i8*, i8** %aptr122, align 8
  %79 = ptrtoint i8* %78 to i64
  %and123 = and i64 %79, -4
  %cmp124 = icmp eq i64 %76, %and123
  br i1 %cmp124, label %if.then126, label %if.else129

if.then126:                                       ; preds = %if.then118
  %80 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf127 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %80, i32 0, i32 22
  %aptr128 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf127, i32 0, i32 2
  %81 = load i8*, i8** %aptr128, align 8
  %82 = bitcast i8* %81 to i32*
  %83 = load i32, i32* %82, align 4
  store i32 %83, i32* %idx, align 4
  br label %if.end132

if.else129:                                       ; preds = %if.then118
  %84 = bitcast i32* %idx to i8*
  %85 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf130 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %85, i32 0, i32 22
  %aptr131 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf130, i32 0, i32 2
  %86 = load i8*, i8** %aptr131, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %84, i8* align 1 %86, i64 4, i1 false)
  br label %if.end132

if.end132:                                        ; preds = %if.else129, %if.then126
  %87 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf133 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %87, i32 0, i32 22
  %aptr134 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf133, i32 0, i32 2
  %88 = load i8*, i8** %aptr134, align 8
  %add.ptr135 = getelementptr inbounds i8, i8* %88, i64 4
  store i8* %add.ptr135, i8** %aptr134, align 8
  br label %if.end137

if.else136:                                       ; preds = %do.body111
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end137:                                        ; preds = %if.end132
  br label %do.end138

do.end138:                                        ; preds = %if.end137
  br label %if.end146

if.else139:                                       ; preds = %do.body107
  %89 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio140 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %89, i32 0, i32 24
  %90 = load %struct._PerlIO**, %struct._PerlIO*** %fio140, align 8
  %91 = bitcast i32* %idx to i8*
  %call141 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %90, i8* %91, i64 4)
  %cmp142 = icmp ne i64 %call141, 4
  br i1 %cmp142, label %if.then144, label %if.end145

if.then144:                                       ; preds = %if.else139
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end145:                                        ; preds = %if.else139
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %do.end138
  %92 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %92, i32 0, i32 12
  %93 = load i32, i32* %netorder, align 8
  %tobool147 = icmp ne i32 %93, 0
  br i1 %tobool147, label %if.then148, label %if.end150

if.then148:                                       ; preds = %if.end146
  %94 = load i32, i32* %idx, align 4
  %call149 = call i32 @my_swap32(i32 %94)
  store i32 %call149, i32* %idx, align 4
  br label %if.end150

if.end150:                                        ; preds = %if.then148, %if.end146
  br label %do.end151

do.end151:                                        ; preds = %if.end150
  br label %if.end181

if.else152:                                       ; preds = %if.then103
  br label %do.body153

do.body153:                                       ; preds = %if.else152
  %95 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio154 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %95, i32 0, i32 24
  %96 = load %struct._PerlIO**, %struct._PerlIO*** %fio154, align 8
  %tobool155 = icmp ne %struct._PerlIO** %96, null
  br i1 %tobool155, label %if.else172, label %if.then156

if.then156:                                       ; preds = %do.body153
  br label %do.body157

do.body157:                                       ; preds = %if.then156
  %97 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf158 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %97, i32 0, i32 22
  %aptr159 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf158, i32 0, i32 2
  %98 = load i8*, i8** %aptr159, align 8
  %99 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf160 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %99, i32 0, i32 22
  %aend161 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf160, i32 0, i32 3
  %100 = load i8*, i8** %aend161, align 8
  %cmp162 = icmp ult i8* %98, %100
  br i1 %cmp162, label %if.then164, label %if.else169

if.then164:                                       ; preds = %do.body157
  %101 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf165 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %101, i32 0, i32 22
  %aptr166 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf165, i32 0, i32 2
  %102 = load i8*, i8** %aptr166, align 8
  %incdec.ptr167 = getelementptr inbounds i8, i8* %102, i32 1
  store i8* %incdec.ptr167, i8** %aptr166, align 8
  %103 = load i8, i8* %102, align 1
  %conv168 = zext i8 %103 to i32
  store i32 %conv168, i32* %idx, align 4
  br label %if.end170

if.else169:                                       ; preds = %do.body157
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end170:                                        ; preds = %if.then164
  br label %do.end171

do.end171:                                        ; preds = %if.end170
  br label %if.end179

if.else172:                                       ; preds = %do.body153
  %104 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio173 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %104, i32 0, i32 24
  %105 = load %struct._PerlIO**, %struct._PerlIO*** %fio173, align 8
  %call174 = call i32 @PerlIO_getc(%struct._PerlIO** %105)
  store i32 %call174, i32* %idx, align 4
  %cmp175 = icmp eq i32 %call174, -1
  br i1 %cmp175, label %if.then177, label %if.end178

if.then177:                                       ; preds = %if.else172
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end178:                                        ; preds = %if.else172
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %do.end171
  br label %do.end180

do.end180:                                        ; preds = %if.end179
  br label %if.end181

if.end181:                                        ; preds = %do.end180, %do.end151
  %106 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aclass = getelementptr inbounds %struct.stcxt, %struct.stcxt* %106, i32 0, i32 8
  %107 = load %struct.av*, %struct.av** %aclass, align 8
  %108 = load i32, i32* %idx, align 4
  %conv182 = sext i32 %108 to i64
  %call183 = call %struct.sv** @Perl_av_fetch(%struct.av* %107, i64 %conv182, i32 0)
  store %struct.sv** %call183, %struct.sv*** %sva, align 8
  %109 = load %struct.sv**, %struct.sv*** %sva, align 8
  %tobool184 = icmp ne %struct.sv** %109, null
  br i1 %tobool184, label %if.end189, label %if.then185

if.then185:                                       ; preds = %if.end181
  br label %do.body186

do.body186:                                       ; preds = %if.then185
  %110 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %110, i32 0, i32 19
  store i32 1, i32* %s_dirty, align 8
  %111 = load i32, i32* %idx, align 4
  %conv187 = sext i32 %111 to i64
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.68, i64 0, i64 0), i64 %conv187)
  br label %do.end188

do.end188:                                        ; preds = %do.body186
  br label %if.end189

if.end189:                                        ; preds = %do.end188, %if.end181
  %112 = load %struct.sv**, %struct.sv*** %sva, align 8
  %113 = load %struct.sv*, %struct.sv** %112, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %113, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %114 = load i8*, i8** %svu_pv, align 8
  store i8* %114, i8** %classname, align 8
  br label %if.end319

if.else190:                                       ; preds = %while.end
  store i8* null, i8** %malloced_classname, align 8
  %115 = load i32, i32* %flags, align 4
  %and191 = and i32 %115, 4
  %tobool192 = icmp ne i32 %and191, 0
  br i1 %tobool192, label %if.then193, label %if.else241

if.then193:                                       ; preds = %if.else190
  br label %do.body194

do.body194:                                       ; preds = %if.then193
  %116 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio195 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %116, i32 0, i32 24
  %117 = load %struct._PerlIO**, %struct._PerlIO*** %fio195, align 8
  %tobool196 = icmp ne %struct._PerlIO** %117, null
  br i1 %tobool196, label %if.else227, label %if.then197

if.then197:                                       ; preds = %do.body194
  br label %do.body198

do.body198:                                       ; preds = %if.then197
  %118 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf199 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %118, i32 0, i32 22
  %aptr200 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf199, i32 0, i32 2
  %119 = load i8*, i8** %aptr200, align 8
  %add.ptr201 = getelementptr inbounds i8, i8* %119, i64 4
  %120 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf202 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %120, i32 0, i32 22
  %aend203 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf202, i32 0, i32 3
  %121 = load i8*, i8** %aend203, align 8
  %cmp204 = icmp ule i8* %add.ptr201, %121
  br i1 %cmp204, label %if.then206, label %if.else224

if.then206:                                       ; preds = %do.body198
  %122 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf207 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %122, i32 0, i32 22
  %aptr208 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf207, i32 0, i32 2
  %123 = load i8*, i8** %aptr208, align 8
  %124 = ptrtoint i8* %123 to i64
  %125 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf209 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %125, i32 0, i32 22
  %aptr210 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf209, i32 0, i32 2
  %126 = load i8*, i8** %aptr210, align 8
  %127 = ptrtoint i8* %126 to i64
  %and211 = and i64 %127, -4
  %cmp212 = icmp eq i64 %124, %and211
  br i1 %cmp212, label %if.then214, label %if.else217

if.then214:                                       ; preds = %if.then206
  %128 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf215 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %128, i32 0, i32 22
  %aptr216 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf215, i32 0, i32 2
  %129 = load i8*, i8** %aptr216, align 8
  %130 = bitcast i8* %129 to i32*
  %131 = load i32, i32* %130, align 4
  store i32 %131, i32* %len, align 4
  br label %if.end220

if.else217:                                       ; preds = %if.then206
  %132 = bitcast i32* %len to i8*
  %133 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf218 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %133, i32 0, i32 22
  %aptr219 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf218, i32 0, i32 2
  %134 = load i8*, i8** %aptr219, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %132, i8* align 1 %134, i64 4, i1 false)
  br label %if.end220

if.end220:                                        ; preds = %if.else217, %if.then214
  %135 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf221 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %135, i32 0, i32 22
  %aptr222 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf221, i32 0, i32 2
  %136 = load i8*, i8** %aptr222, align 8
  %add.ptr223 = getelementptr inbounds i8, i8* %136, i64 4
  store i8* %add.ptr223, i8** %aptr222, align 8
  br label %if.end225

if.else224:                                       ; preds = %do.body198
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end225:                                        ; preds = %if.end220
  br label %do.end226

do.end226:                                        ; preds = %if.end225
  br label %if.end234

if.else227:                                       ; preds = %do.body194
  %137 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio228 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %137, i32 0, i32 24
  %138 = load %struct._PerlIO**, %struct._PerlIO*** %fio228, align 8
  %139 = bitcast i32* %len to i8*
  %call229 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %138, i8* %139, i64 4)
  %cmp230 = icmp ne i64 %call229, 4
  br i1 %cmp230, label %if.then232, label %if.end233

if.then232:                                       ; preds = %if.else227
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end233:                                        ; preds = %if.else227
  br label %if.end234

if.end234:                                        ; preds = %if.end233, %do.end226
  %140 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder235 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %140, i32 0, i32 12
  %141 = load i32, i32* %netorder235, align 8
  %tobool236 = icmp ne i32 %141, 0
  br i1 %tobool236, label %if.then237, label %if.end239

if.then237:                                       ; preds = %if.end234
  %142 = load i32, i32* %len, align 4
  %call238 = call i32 @my_swap32(i32 %142)
  store i32 %call238, i32* %len, align 4
  br label %if.end239

if.end239:                                        ; preds = %if.then237, %if.end234
  br label %do.end240

do.end240:                                        ; preds = %if.end239
  br label %if.end270

if.else241:                                       ; preds = %if.else190
  br label %do.body242

do.body242:                                       ; preds = %if.else241
  %143 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio243 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %143, i32 0, i32 24
  %144 = load %struct._PerlIO**, %struct._PerlIO*** %fio243, align 8
  %tobool244 = icmp ne %struct._PerlIO** %144, null
  br i1 %tobool244, label %if.else261, label %if.then245

if.then245:                                       ; preds = %do.body242
  br label %do.body246

do.body246:                                       ; preds = %if.then245
  %145 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf247 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %145, i32 0, i32 22
  %aptr248 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf247, i32 0, i32 2
  %146 = load i8*, i8** %aptr248, align 8
  %147 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf249 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %147, i32 0, i32 22
  %aend250 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf249, i32 0, i32 3
  %148 = load i8*, i8** %aend250, align 8
  %cmp251 = icmp ult i8* %146, %148
  br i1 %cmp251, label %if.then253, label %if.else258

if.then253:                                       ; preds = %do.body246
  %149 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf254 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %149, i32 0, i32 22
  %aptr255 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf254, i32 0, i32 2
  %150 = load i8*, i8** %aptr255, align 8
  %incdec.ptr256 = getelementptr inbounds i8, i8* %150, i32 1
  store i8* %incdec.ptr256, i8** %aptr255, align 8
  %151 = load i8, i8* %150, align 1
  %conv257 = zext i8 %151 to i32
  store i32 %conv257, i32* %len, align 4
  br label %if.end259

if.else258:                                       ; preds = %do.body246
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end259:                                        ; preds = %if.then253
  br label %do.end260

do.end260:                                        ; preds = %if.end259
  br label %if.end268

if.else261:                                       ; preds = %do.body242
  %152 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio262 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %152, i32 0, i32 24
  %153 = load %struct._PerlIO**, %struct._PerlIO*** %fio262, align 8
  %call263 = call i32 @PerlIO_getc(%struct._PerlIO** %153)
  store i32 %call263, i32* %len, align 4
  %cmp264 = icmp eq i32 %call263, -1
  br i1 %cmp264, label %if.then266, label %if.end267

if.then266:                                       ; preds = %if.else261
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end267:                                        ; preds = %if.else261
  br label %if.end268

if.end268:                                        ; preds = %if.end267, %do.end260
  br label %do.end269

do.end269:                                        ; preds = %if.end268
  br label %if.end270

if.end270:                                        ; preds = %do.end269, %do.end240
  %154 = load i32, i32* %len, align 4
  %cmp271 = icmp sgt i32 %154, 127
  br i1 %cmp271, label %if.then273, label %if.end276

if.then273:                                       ; preds = %if.end270
  %155 = load i32, i32* %len, align 4
  %add = add nsw i32 %155, 1
  %conv274 = sext i32 %add to i64
  %mul = mul i64 %conv274, 1
  %call275 = call i8* @Perl_safesysmalloc(i64 %mul)
  store i8* %call275, i8** %classname, align 8
  %156 = load i8*, i8** %classname, align 8
  store i8* %156, i8** %malloced_classname, align 8
  br label %if.end276

if.end276:                                        ; preds = %if.then273, %if.end270
  br label %do.body277

do.body277:                                       ; preds = %if.end276
  %157 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio278 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %157, i32 0, i32 24
  %158 = load %struct._PerlIO**, %struct._PerlIO*** %fio278, align 8
  %tobool279 = icmp ne %struct._PerlIO** %158, null
  br i1 %tobool279, label %if.else300, label %if.then280

if.then280:                                       ; preds = %do.body277
  br label %do.body281

do.body281:                                       ; preds = %if.then280
  %159 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf282 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %159, i32 0, i32 22
  %aptr283 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf282, i32 0, i32 2
  %160 = load i8*, i8** %aptr283, align 8
  %161 = load i32, i32* %len, align 4
  %idx.ext = sext i32 %161 to i64
  %add.ptr284 = getelementptr inbounds i8, i8* %160, i64 %idx.ext
  %162 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf285 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %162, i32 0, i32 22
  %aend286 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf285, i32 0, i32 3
  %163 = load i8*, i8** %aend286, align 8
  %cmp287 = icmp ule i8* %add.ptr284, %163
  br i1 %cmp287, label %if.then289, label %if.else297

if.then289:                                       ; preds = %do.body281
  %164 = load i8*, i8** %classname, align 8
  %165 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf290 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %165, i32 0, i32 22
  %aptr291 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf290, i32 0, i32 2
  %166 = load i8*, i8** %aptr291, align 8
  %167 = load i32, i32* %len, align 4
  %conv292 = sext i32 %167 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %164, i8* align 1 %166, i64 %conv292, i1 false)
  %168 = load i32, i32* %len, align 4
  %169 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf293 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %169, i32 0, i32 22
  %aptr294 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf293, i32 0, i32 2
  %170 = load i8*, i8** %aptr294, align 8
  %idx.ext295 = sext i32 %168 to i64
  %add.ptr296 = getelementptr inbounds i8, i8* %170, i64 %idx.ext295
  store i8* %add.ptr296, i8** %aptr294, align 8
  br label %if.end298

if.else297:                                       ; preds = %do.body281
  %171 = load i8*, i8** %malloced_classname, align 8
  call void @Perl_safesysfree(i8* %171)
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end298:                                        ; preds = %if.then289
  br label %do.end299

do.end299:                                        ; preds = %if.end298
  br label %if.end309

if.else300:                                       ; preds = %do.body277
  %172 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio301 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %172, i32 0, i32 24
  %173 = load %struct._PerlIO**, %struct._PerlIO*** %fio301, align 8
  %174 = load i8*, i8** %classname, align 8
  %175 = load i32, i32* %len, align 4
  %conv302 = sext i32 %175 to i64
  %call303 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %173, i8* %174, i64 %conv302)
  %176 = load i32, i32* %len, align 4
  %conv304 = sext i32 %176 to i64
  %cmp305 = icmp ne i64 %call303, %conv304
  br i1 %cmp305, label %if.then307, label %if.end308

if.then307:                                       ; preds = %if.else300
  %177 = load i8*, i8** %malloced_classname, align 8
  call void @Perl_safesysfree(i8* %177)
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end308:                                        ; preds = %if.else300
  br label %if.end309

if.end309:                                        ; preds = %if.end308, %do.end299
  br label %do.end310

do.end310:                                        ; preds = %if.end309
  %178 = load i8*, i8** %classname, align 8
  %179 = load i32, i32* %len, align 4
  %idxprom = sext i32 %179 to i64
  %arrayidx = getelementptr inbounds i8, i8* %178, i64 %idxprom
  store i8 0, i8* %arrayidx, align 1
  %180 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aclass311 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %180, i32 0, i32 8
  %181 = load %struct.av*, %struct.av** %aclass311, align 8
  %182 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %classnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %182, i32 0, i32 11
  %183 = load i64, i64* %classnum, align 8
  %inc312 = add nsw i64 %183, 1
  store i64 %inc312, i64* %classnum, align 8
  %184 = load i8*, i8** %classname, align 8
  %185 = load i32, i32* %len, align 4
  %conv313 = sext i32 %185 to i64
  %call314 = call %struct.sv* @Perl_newSVpvn(i8* %184, i64 %conv313)
  %call315 = call %struct.sv** @Perl_av_store(%struct.av* %181, i64 %183, %struct.sv* %call314)
  %tobool316 = icmp ne %struct.sv** %call315, null
  br i1 %tobool316, label %if.end318, label %if.then317

if.then317:                                       ; preds = %do.end310
  %186 = load i8*, i8** %malloced_classname, align 8
  call void @Perl_safesysfree(i8* %186)
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end318:                                        ; preds = %do.end310
  br label %if.end319

if.end319:                                        ; preds = %if.end318, %if.end189
  %187 = load i32, i32* %flags, align 4
  %and320 = and i32 %187, 8
  %tobool321 = icmp ne i32 %and320, 0
  br i1 %tobool321, label %if.then322, label %if.else370

if.then322:                                       ; preds = %if.end319
  br label %do.body323

do.body323:                                       ; preds = %if.then322
  %188 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio324 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %188, i32 0, i32 24
  %189 = load %struct._PerlIO**, %struct._PerlIO*** %fio324, align 8
  %tobool325 = icmp ne %struct._PerlIO** %189, null
  br i1 %tobool325, label %if.else356, label %if.then326

if.then326:                                       ; preds = %do.body323
  br label %do.body327

do.body327:                                       ; preds = %if.then326
  %190 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf328 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %190, i32 0, i32 22
  %aptr329 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf328, i32 0, i32 2
  %191 = load i8*, i8** %aptr329, align 8
  %add.ptr330 = getelementptr inbounds i8, i8* %191, i64 4
  %192 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf331 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %192, i32 0, i32 22
  %aend332 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf331, i32 0, i32 3
  %193 = load i8*, i8** %aend332, align 8
  %cmp333 = icmp ule i8* %add.ptr330, %193
  br i1 %cmp333, label %if.then335, label %if.else353

if.then335:                                       ; preds = %do.body327
  %194 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf336 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %194, i32 0, i32 22
  %aptr337 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf336, i32 0, i32 2
  %195 = load i8*, i8** %aptr337, align 8
  %196 = ptrtoint i8* %195 to i64
  %197 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf338 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %197, i32 0, i32 22
  %aptr339 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf338, i32 0, i32 2
  %198 = load i8*, i8** %aptr339, align 8
  %199 = ptrtoint i8* %198 to i64
  %and340 = and i64 %199, -4
  %cmp341 = icmp eq i64 %196, %and340
  br i1 %cmp341, label %if.then343, label %if.else346

if.then343:                                       ; preds = %if.then335
  %200 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf344 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %200, i32 0, i32 22
  %aptr345 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf344, i32 0, i32 2
  %201 = load i8*, i8** %aptr345, align 8
  %202 = bitcast i8* %201 to i32*
  %203 = load i32, i32* %202, align 4
  store i32 %203, i32* %len2, align 4
  br label %if.end349

if.else346:                                       ; preds = %if.then335
  %204 = bitcast i32* %len2 to i8*
  %205 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf347 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %205, i32 0, i32 22
  %aptr348 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf347, i32 0, i32 2
  %206 = load i8*, i8** %aptr348, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %204, i8* align 1 %206, i64 4, i1 false)
  br label %if.end349

if.end349:                                        ; preds = %if.else346, %if.then343
  %207 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf350 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %207, i32 0, i32 22
  %aptr351 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf350, i32 0, i32 2
  %208 = load i8*, i8** %aptr351, align 8
  %add.ptr352 = getelementptr inbounds i8, i8* %208, i64 4
  store i8* %add.ptr352, i8** %aptr351, align 8
  br label %if.end354

if.else353:                                       ; preds = %do.body327
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end354:                                        ; preds = %if.end349
  br label %do.end355

do.end355:                                        ; preds = %if.end354
  br label %if.end363

if.else356:                                       ; preds = %do.body323
  %209 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio357 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %209, i32 0, i32 24
  %210 = load %struct._PerlIO**, %struct._PerlIO*** %fio357, align 8
  %211 = bitcast i32* %len2 to i8*
  %call358 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %210, i8* %211, i64 4)
  %cmp359 = icmp ne i64 %call358, 4
  br i1 %cmp359, label %if.then361, label %if.end362

if.then361:                                       ; preds = %if.else356
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end362:                                        ; preds = %if.else356
  br label %if.end363

if.end363:                                        ; preds = %if.end362, %do.end355
  %212 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder364 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %212, i32 0, i32 12
  %213 = load i32, i32* %netorder364, align 8
  %tobool365 = icmp ne i32 %213, 0
  br i1 %tobool365, label %if.then366, label %if.end368

if.then366:                                       ; preds = %if.end363
  %214 = load i32, i32* %len2, align 4
  %call367 = call i32 @my_swap32(i32 %214)
  store i32 %call367, i32* %len2, align 4
  br label %if.end368

if.end368:                                        ; preds = %if.then366, %if.end363
  br label %do.end369

do.end369:                                        ; preds = %if.end368
  br label %if.end399

if.else370:                                       ; preds = %if.end319
  br label %do.body371

do.body371:                                       ; preds = %if.else370
  %215 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio372 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %215, i32 0, i32 24
  %216 = load %struct._PerlIO**, %struct._PerlIO*** %fio372, align 8
  %tobool373 = icmp ne %struct._PerlIO** %216, null
  br i1 %tobool373, label %if.else390, label %if.then374

if.then374:                                       ; preds = %do.body371
  br label %do.body375

do.body375:                                       ; preds = %if.then374
  %217 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf376 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %217, i32 0, i32 22
  %aptr377 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf376, i32 0, i32 2
  %218 = load i8*, i8** %aptr377, align 8
  %219 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf378 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %219, i32 0, i32 22
  %aend379 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf378, i32 0, i32 3
  %220 = load i8*, i8** %aend379, align 8
  %cmp380 = icmp ult i8* %218, %220
  br i1 %cmp380, label %if.then382, label %if.else387

if.then382:                                       ; preds = %do.body375
  %221 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf383 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %221, i32 0, i32 22
  %aptr384 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf383, i32 0, i32 2
  %222 = load i8*, i8** %aptr384, align 8
  %incdec.ptr385 = getelementptr inbounds i8, i8* %222, i32 1
  store i8* %incdec.ptr385, i8** %aptr384, align 8
  %223 = load i8, i8* %222, align 1
  %conv386 = zext i8 %223 to i32
  store i32 %conv386, i32* %len2, align 4
  br label %if.end388

if.else387:                                       ; preds = %do.body375
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end388:                                        ; preds = %if.then382
  br label %do.end389

do.end389:                                        ; preds = %if.end388
  br label %if.end397

if.else390:                                       ; preds = %do.body371
  %224 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio391 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %224, i32 0, i32 24
  %225 = load %struct._PerlIO**, %struct._PerlIO*** %fio391, align 8
  %call392 = call i32 @PerlIO_getc(%struct._PerlIO** %225)
  store i32 %call392, i32* %len2, align 4
  %cmp393 = icmp eq i32 %call392, -1
  br i1 %cmp393, label %if.then395, label %if.end396

if.then395:                                       ; preds = %if.else390
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end396:                                        ; preds = %if.else390
  br label %if.end397

if.end397:                                        ; preds = %if.end396, %do.end389
  br label %do.end398

do.end398:                                        ; preds = %if.end397
  br label %if.end399

if.end399:                                        ; preds = %do.end398, %do.end369
  %226 = load i32, i32* %len2, align 4
  %conv400 = sext i32 %226 to i64
  %call401 = call %struct.sv* @Perl_newSV(i64 %conv400)
  store %struct.sv* %call401, %struct.sv** %frozen, align 8
  %227 = load i32, i32* %len2, align 4
  %tobool402 = icmp ne i32 %227, 0
  br i1 %tobool402, label %if.then403, label %if.end451

if.then403:                                       ; preds = %if.end399
  br label %do.body404

do.body404:                                       ; preds = %if.then403
  %228 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio405 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %228, i32 0, i32 24
  %229 = load %struct._PerlIO**, %struct._PerlIO*** %fio405, align 8
  %tobool406 = icmp ne %struct._PerlIO** %229, null
  br i1 %tobool406, label %if.else430, label %if.then407

if.then407:                                       ; preds = %do.body404
  br label %do.body408

do.body408:                                       ; preds = %if.then407
  %230 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf409 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %230, i32 0, i32 22
  %aptr410 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf409, i32 0, i32 2
  %231 = load i8*, i8** %aptr410, align 8
  %232 = load i32, i32* %len2, align 4
  %idx.ext411 = sext i32 %232 to i64
  %add.ptr412 = getelementptr inbounds i8, i8* %231, i64 %idx.ext411
  %233 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf413 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %233, i32 0, i32 22
  %aend414 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf413, i32 0, i32 3
  %234 = load i8*, i8** %aend414, align 8
  %cmp415 = icmp ule i8* %add.ptr412, %234
  br i1 %cmp415, label %if.then417, label %if.else427

if.then417:                                       ; preds = %do.body408
  %235 = load %struct.sv*, %struct.sv** %frozen, align 8
  %sv_u418 = getelementptr inbounds %struct.sv, %struct.sv* %235, i32 0, i32 3
  %svu_pv419 = bitcast %union.anon* %sv_u418 to i8**
  %236 = load i8*, i8** %svu_pv419, align 8
  %237 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf420 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %237, i32 0, i32 22
  %aptr421 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf420, i32 0, i32 2
  %238 = load i8*, i8** %aptr421, align 8
  %239 = load i32, i32* %len2, align 4
  %conv422 = sext i32 %239 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %236, i8* align 1 %238, i64 %conv422, i1 false)
  %240 = load i32, i32* %len2, align 4
  %241 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf423 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %241, i32 0, i32 22
  %aptr424 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf423, i32 0, i32 2
  %242 = load i8*, i8** %aptr424, align 8
  %idx.ext425 = sext i32 %240 to i64
  %add.ptr426 = getelementptr inbounds i8, i8* %242, i64 %idx.ext425
  store i8* %add.ptr426, i8** %aptr424, align 8
  br label %if.end428

if.else427:                                       ; preds = %do.body408
  %243 = load %struct.sv*, %struct.sv** %frozen, align 8
  call void @Perl_sv_free(%struct.sv* %243)
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end428:                                        ; preds = %if.then417
  br label %do.end429

do.end429:                                        ; preds = %if.end428
  br label %if.end441

if.else430:                                       ; preds = %do.body404
  %244 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio431 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %244, i32 0, i32 24
  %245 = load %struct._PerlIO**, %struct._PerlIO*** %fio431, align 8
  %246 = load %struct.sv*, %struct.sv** %frozen, align 8
  %sv_u432 = getelementptr inbounds %struct.sv, %struct.sv* %246, i32 0, i32 3
  %svu_pv433 = bitcast %union.anon* %sv_u432 to i8**
  %247 = load i8*, i8** %svu_pv433, align 8
  %248 = load i32, i32* %len2, align 4
  %conv434 = sext i32 %248 to i64
  %call435 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %245, i8* %247, i64 %conv434)
  %249 = load i32, i32* %len2, align 4
  %conv436 = sext i32 %249 to i64
  %cmp437 = icmp ne i64 %call435, %conv436
  br i1 %cmp437, label %if.then439, label %if.end440

if.then439:                                       ; preds = %if.else430
  %250 = load %struct.sv*, %struct.sv** %frozen, align 8
  call void @Perl_sv_free(%struct.sv* %250)
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end440:                                        ; preds = %if.else430
  br label %if.end441

if.end441:                                        ; preds = %if.end440, %do.end429
  br label %do.end442

do.end442:                                        ; preds = %if.end441
  br label %do.body443

do.body443:                                       ; preds = %do.end442
  %251 = load i32, i32* %len2, align 4
  %conv444 = sext i32 %251 to i64
  %252 = load %struct.sv*, %struct.sv** %frozen, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %252, i32 0, i32 0
  %253 = load i8*, i8** %sv_any, align 8
  %254 = bitcast i8* %253 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %254, i32 0, i32 2
  store i64 %conv444, i64* %xpv_cur, align 8
  br label %do.end445

do.end445:                                        ; preds = %do.body443
  %255 = load %struct.sv*, %struct.sv** %frozen, align 8
  %sv_u446 = getelementptr inbounds %struct.sv, %struct.sv* %255, i32 0, i32 3
  %svu_pv447 = bitcast %union.anon* %sv_u446 to i8**
  %256 = load i8*, i8** %svu_pv447, align 8
  %257 = load %struct.sv*, %struct.sv** %frozen, align 8
  %sv_any448 = getelementptr inbounds %struct.sv, %struct.sv* %257, i32 0, i32 0
  %258 = load i8*, i8** %sv_any448, align 8
  %259 = bitcast i8* %258 to %struct.xpv*
  %xpv_cur449 = getelementptr inbounds %struct.xpv, %struct.xpv* %259, i32 0, i32 2
  %260 = load i64, i64* %xpv_cur449, align 8
  %add.ptr450 = getelementptr inbounds i8, i8* %256, i64 %260
  store i8 0, i8* %add.ptr450, align 1
  br label %if.end451

if.end451:                                        ; preds = %do.end445, %if.end399
  %261 = load %struct.sv*, %struct.sv** %frozen, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %261, i32 0, i32 2
  %262 = load i32, i32* %sv_flags, align 4
  %and452 = and i32 %262, 1610547455
  store i32 %and452, i32* %sv_flags, align 4
  %263 = load %struct.sv*, %struct.sv** %frozen, align 8
  %sv_flags453 = getelementptr inbounds %struct.sv, %struct.sv* %263, i32 0, i32 2
  %264 = load i32, i32* %sv_flags453, align 4
  %or = or i32 %264, 17408
  store i32 %or, i32* %sv_flags453, align 4
  %265 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_tainted = getelementptr inbounds %struct.stcxt, %struct.stcxt* %265, i32 0, i32 13
  %266 = load i32, i32* %s_tainted, align 4
  %tobool454 = icmp ne i32 %266, 0
  br i1 %tobool454, label %if.then455, label %if.end476

if.then455:                                       ; preds = %if.end451
  br label %do.body456

do.body456:                                       ; preds = %if.then455
  %267 = load i8, i8* @PL_tainting, align 1
  %tobool457 = trunc i8 %267 to i1
  br i1 %tobool457, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.body456
  br i1 true, label %if.then459, label %if.end474

cond.false:                                       ; preds = %do.body456
  br i1 false, label %if.then459, label %if.end474

if.then459:                                       ; preds = %cond.false, %cond.true
  %268 = load i8, i8* @PL_tainted, align 1
  %tobool460 = trunc i8 %268 to i1
  br i1 %tobool460, label %cond.true462, label %cond.false463

cond.true462:                                     ; preds = %if.then459
  br i1 true, label %if.then464, label %if.end473

cond.false463:                                    ; preds = %if.then459
  br i1 false, label %if.then464, label %if.end473

if.then464:                                       ; preds = %cond.false463, %cond.true462
  br label %do.body465

do.body465:                                       ; preds = %if.then464
  %269 = load i8, i8* @PL_tainting, align 1
  %tobool466 = trunc i8 %269 to i1
  br i1 %tobool466, label %cond.true468, label %cond.false469

cond.true468:                                     ; preds = %do.body465
  br i1 true, label %if.then470, label %if.end471

cond.false469:                                    ; preds = %do.body465
  br i1 false, label %if.then470, label %if.end471

if.then470:                                       ; preds = %cond.false469, %cond.true468
  %270 = load %struct.sv*, %struct.sv** %frozen, align 8
  call void @Perl_sv_magic(%struct.sv* %270, %struct.sv* null, i32 116, i8* null, i32 0)
  br label %if.end471

if.end471:                                        ; preds = %if.then470, %cond.false469, %cond.true468
  br label %do.end472

do.end472:                                        ; preds = %if.end471
  br label %if.end473

if.end473:                                        ; preds = %do.end472, %cond.false463, %cond.true462
  br label %if.end474

if.end474:                                        ; preds = %if.end473, %cond.false, %cond.true
  br label %do.end475

do.end475:                                        ; preds = %if.end474
  br label %if.end476

if.end476:                                        ; preds = %do.end475, %if.end451
  %271 = load i32, i32* %flags, align 4
  %and477 = and i32 %271, 128
  %tobool478 = icmp ne i32 %and477, 0
  br i1 %tobool478, label %if.then479, label %if.end568

if.then479:                                       ; preds = %if.end476
  %272 = load i32, i32* %flags, align 4
  %and480 = and i32 %272, 16
  %tobool481 = icmp ne i32 %and480, 0
  br i1 %tobool481, label %if.then482, label %if.else530

if.then482:                                       ; preds = %if.then479
  br label %do.body483

do.body483:                                       ; preds = %if.then482
  %273 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio484 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %273, i32 0, i32 24
  %274 = load %struct._PerlIO**, %struct._PerlIO*** %fio484, align 8
  %tobool485 = icmp ne %struct._PerlIO** %274, null
  br i1 %tobool485, label %if.else516, label %if.then486

if.then486:                                       ; preds = %do.body483
  br label %do.body487

do.body487:                                       ; preds = %if.then486
  %275 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf488 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %275, i32 0, i32 22
  %aptr489 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf488, i32 0, i32 2
  %276 = load i8*, i8** %aptr489, align 8
  %add.ptr490 = getelementptr inbounds i8, i8* %276, i64 4
  %277 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf491 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %277, i32 0, i32 22
  %aend492 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf491, i32 0, i32 3
  %278 = load i8*, i8** %aend492, align 8
  %cmp493 = icmp ule i8* %add.ptr490, %278
  br i1 %cmp493, label %if.then495, label %if.else513

if.then495:                                       ; preds = %do.body487
  %279 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf496 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %279, i32 0, i32 22
  %aptr497 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf496, i32 0, i32 2
  %280 = load i8*, i8** %aptr497, align 8
  %281 = ptrtoint i8* %280 to i64
  %282 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf498 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %282, i32 0, i32 22
  %aptr499 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf498, i32 0, i32 2
  %283 = load i8*, i8** %aptr499, align 8
  %284 = ptrtoint i8* %283 to i64
  %and500 = and i64 %284, -4
  %cmp501 = icmp eq i64 %281, %and500
  br i1 %cmp501, label %if.then503, label %if.else506

if.then503:                                       ; preds = %if.then495
  %285 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf504 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %285, i32 0, i32 22
  %aptr505 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf504, i32 0, i32 2
  %286 = load i8*, i8** %aptr505, align 8
  %287 = bitcast i8* %286 to i32*
  %288 = load i32, i32* %287, align 4
  store i32 %288, i32* %len3, align 4
  br label %if.end509

if.else506:                                       ; preds = %if.then495
  %289 = bitcast i32* %len3 to i8*
  %290 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf507 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %290, i32 0, i32 22
  %aptr508 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf507, i32 0, i32 2
  %291 = load i8*, i8** %aptr508, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %289, i8* align 1 %291, i64 4, i1 false)
  br label %if.end509

if.end509:                                        ; preds = %if.else506, %if.then503
  %292 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf510 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %292, i32 0, i32 22
  %aptr511 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf510, i32 0, i32 2
  %293 = load i8*, i8** %aptr511, align 8
  %add.ptr512 = getelementptr inbounds i8, i8* %293, i64 4
  store i8* %add.ptr512, i8** %aptr511, align 8
  br label %if.end514

if.else513:                                       ; preds = %do.body487
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end514:                                        ; preds = %if.end509
  br label %do.end515

do.end515:                                        ; preds = %if.end514
  br label %if.end523

if.else516:                                       ; preds = %do.body483
  %294 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio517 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %294, i32 0, i32 24
  %295 = load %struct._PerlIO**, %struct._PerlIO*** %fio517, align 8
  %296 = bitcast i32* %len3 to i8*
  %call518 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %295, i8* %296, i64 4)
  %cmp519 = icmp ne i64 %call518, 4
  br i1 %cmp519, label %if.then521, label %if.end522

if.then521:                                       ; preds = %if.else516
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end522:                                        ; preds = %if.else516
  br label %if.end523

if.end523:                                        ; preds = %if.end522, %do.end515
  %297 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder524 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %297, i32 0, i32 12
  %298 = load i32, i32* %netorder524, align 8
  %tobool525 = icmp ne i32 %298, 0
  br i1 %tobool525, label %if.then526, label %if.end528

if.then526:                                       ; preds = %if.end523
  %299 = load i32, i32* %len3, align 4
  %call527 = call i32 @my_swap32(i32 %299)
  store i32 %call527, i32* %len3, align 4
  br label %if.end528

if.end528:                                        ; preds = %if.then526, %if.end523
  br label %do.end529

do.end529:                                        ; preds = %if.end528
  br label %if.end559

if.else530:                                       ; preds = %if.then479
  br label %do.body531

do.body531:                                       ; preds = %if.else530
  %300 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio532 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %300, i32 0, i32 24
  %301 = load %struct._PerlIO**, %struct._PerlIO*** %fio532, align 8
  %tobool533 = icmp ne %struct._PerlIO** %301, null
  br i1 %tobool533, label %if.else550, label %if.then534

if.then534:                                       ; preds = %do.body531
  br label %do.body535

do.body535:                                       ; preds = %if.then534
  %302 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf536 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %302, i32 0, i32 22
  %aptr537 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf536, i32 0, i32 2
  %303 = load i8*, i8** %aptr537, align 8
  %304 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf538 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %304, i32 0, i32 22
  %aend539 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf538, i32 0, i32 3
  %305 = load i8*, i8** %aend539, align 8
  %cmp540 = icmp ult i8* %303, %305
  br i1 %cmp540, label %if.then542, label %if.else547

if.then542:                                       ; preds = %do.body535
  %306 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf543 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %306, i32 0, i32 22
  %aptr544 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf543, i32 0, i32 2
  %307 = load i8*, i8** %aptr544, align 8
  %incdec.ptr545 = getelementptr inbounds i8, i8* %307, i32 1
  store i8* %incdec.ptr545, i8** %aptr544, align 8
  %308 = load i8, i8* %307, align 1
  %conv546 = zext i8 %308 to i32
  store i32 %conv546, i32* %len3, align 4
  br label %if.end548

if.else547:                                       ; preds = %do.body535
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end548:                                        ; preds = %if.then542
  br label %do.end549

do.end549:                                        ; preds = %if.end548
  br label %if.end557

if.else550:                                       ; preds = %do.body531
  %309 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio551 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %309, i32 0, i32 24
  %310 = load %struct._PerlIO**, %struct._PerlIO*** %fio551, align 8
  %call552 = call i32 @PerlIO_getc(%struct._PerlIO** %310)
  store i32 %call552, i32* %len3, align 4
  %cmp553 = icmp eq i32 %call552, -1
  br i1 %cmp553, label %if.then555, label %if.end556

if.then555:                                       ; preds = %if.else550
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end556:                                        ; preds = %if.else550
  br label %if.end557

if.end557:                                        ; preds = %if.end556, %do.end549
  br label %do.end558

do.end558:                                        ; preds = %if.end557
  br label %if.end559

if.end559:                                        ; preds = %do.end558, %do.end529
  %311 = load i32, i32* %len3, align 4
  %tobool560 = icmp ne i32 %311, 0
  br i1 %tobool560, label %if.then561, label %if.end567

if.then561:                                       ; preds = %if.end559
  %call562 = call %struct.sv* @Perl_newSV_type(i32 11)
  %312 = bitcast %struct.sv* %call562 to i8*
  %313 = bitcast i8* %312 to %struct.av*
  store %struct.av* %313, %struct.av** %av, align 8
  %314 = load %struct.av*, %struct.av** %av, align 8
  %315 = load i32, i32* %len3, align 4
  %add563 = add nsw i32 %315, 1
  %conv564 = sext i32 %add563 to i64
  call void @Perl_av_extend(%struct.av* %314, i64 %conv564)
  %316 = load i32, i32* %len3, align 4
  %conv565 = sext i32 %316 to i64
  %317 = load %struct.av*, %struct.av** %av, align 8
  %sv_any566 = getelementptr inbounds %struct.av, %struct.av* %317, i32 0, i32 0
  %318 = load %struct.xpvav*, %struct.xpvav** %sv_any566, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %318, i32 0, i32 2
  store i64 %conv565, i64* %xav_fill, align 8
  br label %if.end567

if.end567:                                        ; preds = %if.then561, %if.end559
  br label %if.end568

if.end568:                                        ; preds = %if.end567, %if.end476
  %319 = load %struct.av*, %struct.av** %av, align 8
  %tobool569 = icmp ne %struct.av* %319, null
  br i1 %tobool569, label %if.then570, label %if.end637

if.then570:                                       ; preds = %if.end568
  %320 = load %struct.av*, %struct.av** %av, align 8
  %sv_u571 = getelementptr inbounds %struct.av, %struct.av* %320, i32 0, i32 3
  %svu_array = bitcast %union.anon.2* %sv_u571 to %struct.sv***
  %321 = load %struct.sv**, %struct.sv*** %svu_array, align 8
  store %struct.sv** %321, %struct.sv*** %ary, align 8
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then570
  %322 = load i32, i32* %i, align 4
  %323 = load i32, i32* %len3, align 4
  %cmp572 = icmp sle i32 %322, %323
  br i1 %cmp572, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %do.body574

do.body574:                                       ; preds = %for.body
  %324 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio575 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %324, i32 0, i32 24
  %325 = load %struct._PerlIO**, %struct._PerlIO*** %fio575, align 8
  %tobool576 = icmp ne %struct._PerlIO** %325, null
  br i1 %tobool576, label %if.else607, label %if.then577

if.then577:                                       ; preds = %do.body574
  br label %do.body578

do.body578:                                       ; preds = %if.then577
  %326 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf579 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %326, i32 0, i32 22
  %aptr580 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf579, i32 0, i32 2
  %327 = load i8*, i8** %aptr580, align 8
  %add.ptr581 = getelementptr inbounds i8, i8* %327, i64 4
  %328 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf582 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %328, i32 0, i32 22
  %aend583 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf582, i32 0, i32 3
  %329 = load i8*, i8** %aend583, align 8
  %cmp584 = icmp ule i8* %add.ptr581, %329
  br i1 %cmp584, label %if.then586, label %if.else604

if.then586:                                       ; preds = %do.body578
  %330 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf587 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %330, i32 0, i32 22
  %aptr588 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf587, i32 0, i32 2
  %331 = load i8*, i8** %aptr588, align 8
  %332 = ptrtoint i8* %331 to i64
  %333 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf589 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %333, i32 0, i32 22
  %aptr590 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf589, i32 0, i32 2
  %334 = load i8*, i8** %aptr590, align 8
  %335 = ptrtoint i8* %334 to i64
  %and591 = and i64 %335, -4
  %cmp592 = icmp eq i64 %332, %and591
  br i1 %cmp592, label %if.then594, label %if.else597

if.then594:                                       ; preds = %if.then586
  %336 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf595 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %336, i32 0, i32 22
  %aptr596 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf595, i32 0, i32 2
  %337 = load i8*, i8** %aptr596, align 8
  %338 = bitcast i8* %337 to i32*
  %339 = load i32, i32* %338, align 4
  store i32 %339, i32* %tag, align 4
  br label %if.end600

if.else597:                                       ; preds = %if.then586
  %340 = bitcast i32* %tag to i8*
  %341 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf598 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %341, i32 0, i32 22
  %aptr599 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf598, i32 0, i32 2
  %342 = load i8*, i8** %aptr599, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %340, i8* align 1 %342, i64 4, i1 false)
  br label %if.end600

if.end600:                                        ; preds = %if.else597, %if.then594
  %343 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf601 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %343, i32 0, i32 22
  %aptr602 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf601, i32 0, i32 2
  %344 = load i8*, i8** %aptr602, align 8
  %add.ptr603 = getelementptr inbounds i8, i8* %344, i64 4
  store i8* %add.ptr603, i8** %aptr602, align 8
  br label %if.end605

if.else604:                                       ; preds = %do.body578
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end605:                                        ; preds = %if.end600
  br label %do.end606

do.end606:                                        ; preds = %if.end605
  br label %if.end614

if.else607:                                       ; preds = %do.body574
  %345 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio608 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %345, i32 0, i32 24
  %346 = load %struct._PerlIO**, %struct._PerlIO*** %fio608, align 8
  %347 = bitcast i32* %tag to i8*
  %call609 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %346, i8* %347, i64 4)
  %cmp610 = icmp ne i64 %call609, 4
  br i1 %cmp610, label %if.then612, label %if.end613

if.then612:                                       ; preds = %if.else607
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end613:                                        ; preds = %if.else607
  br label %if.end614

if.end614:                                        ; preds = %if.end613, %do.end606
  br label %do.end615

do.end615:                                        ; preds = %if.end614
  %348 = load i32, i32* %tag, align 4
  %call616 = call i32 @my_swap32(i32 %348)
  store i32 %call616, i32* %tag, align 4
  %349 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen617 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %349, i32 0, i32 5
  %350 = load %struct.av*, %struct.av** %aseen617, align 8
  %351 = load i32, i32* %tag, align 4
  %conv618 = sext i32 %351 to i64
  %call619 = call %struct.sv** @Perl_av_fetch(%struct.av* %350, i64 %conv618, i32 0)
  store %struct.sv** %call619, %struct.sv*** %svh, align 8
  %352 = load %struct.sv**, %struct.sv*** %svh, align 8
  %tobool620 = icmp ne %struct.sv** %352, null
  br i1 %tobool620, label %if.end632, label %if.then621

if.then621:                                       ; preds = %do.end615
  %353 = load i32, i32* %tag, align 4
  %conv622 = sext i32 %353 to i64
  %354 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %where_is_undef = getelementptr inbounds %struct.stcxt, %struct.stcxt* %354, i32 0, i32 6
  %355 = load i64, i64* %where_is_undef, align 8
  %cmp623 = icmp eq i64 %conv622, %355
  br i1 %cmp623, label %if.then625, label %if.else626

if.then625:                                       ; preds = %if.then621
  store %struct.sv* @PL_sv_undef, %struct.sv** %xsv, align 8
  store %struct.sv** %xsv, %struct.sv*** %svh, align 8
  br label %if.end631

if.else626:                                       ; preds = %if.then621
  br label %do.body627

do.body627:                                       ; preds = %if.else626
  %356 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty628 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %356, i32 0, i32 19
  store i32 1, i32* %s_dirty628, align 8
  %357 = load i32, i32* %tag, align 4
  %conv629 = sext i32 %357 to i64
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.69, i64 0, i64 0), i64 %conv629)
  br label %do.end630

do.end630:                                        ; preds = %do.body627
  br label %if.end631

if.end631:                                        ; preds = %do.end630, %if.then625
  br label %if.end632

if.end632:                                        ; preds = %if.end631, %do.end615
  %358 = load %struct.sv**, %struct.sv*** %svh, align 8
  %359 = load %struct.sv*, %struct.sv** %358, align 8
  store %struct.sv* %359, %struct.sv** %xsv, align 8
  %360 = load %struct.sv*, %struct.sv** %xsv, align 8
  %361 = bitcast %struct.sv* %360 to i8*
  %362 = bitcast i8* %361 to %struct.sv*
  %call633 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %362)
  %363 = load %struct.sv**, %struct.sv*** %ary, align 8
  %364 = load i32, i32* %i, align 4
  %idxprom634 = sext i32 %364 to i64
  %arrayidx635 = getelementptr inbounds %struct.sv*, %struct.sv** %363, i64 %idxprom634
  store %struct.sv* %call633, %struct.sv** %arrayidx635, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end632
  %365 = load i32, i32* %i, align 4
  %inc636 = add nsw i32 %365, 1
  store i32 %inc636, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end637

if.end637:                                        ; preds = %for.end, %if.end568
  %366 = load i8*, i8** %classname, align 8
  %call638 = call %struct.hv* @Perl_gv_stashpv(i8* %366, i32 1)
  store %struct.hv* %call638, %struct.hv** %stash, align 8
  %367 = load %struct.hv*, %struct.hv** %stash, align 8
  %call639 = call %struct.gv* @Perl_gv_fetchmethod_autoload(%struct.hv* %367, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i64 0, i64 0), i32 0)
  store %struct.gv* %call639, %struct.gv** %attach, align 8
  %368 = load %struct.gv*, %struct.gv** %attach, align 8
  %tobool640 = icmp ne %struct.gv* %368, null
  br i1 %tobool640, label %land.lhs.true, label %if.end707

land.lhs.true:                                    ; preds = %if.end637
  %369 = load %struct.gv*, %struct.gv** %attach, align 8
  %sv_flags641 = getelementptr inbounds %struct.gv, %struct.gv* %369, i32 0, i32 2
  %370 = load i32, i32* %sv_flags641, align 4
  %and642 = and i32 %370, 255
  %cmp643 = icmp eq i32 %and642, 9
  br i1 %cmp643, label %if.then645, label %if.end707

if.then645:                                       ; preds = %land.lhs.true
  %371 = load %struct.gv*, %struct.gv** %attach, align 8
  %sv_u646 = getelementptr inbounds %struct.gv, %struct.gv* %371, i32 0, i32 3
  %svu_gp = bitcast %union.anon.3* %sv_u646 to %struct.gp**
  %372 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr647 = getelementptr inbounds %struct.gp, %struct.gp* %372, i64 0
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr647, i32 0, i32 2
  %373 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  %add.ptr648 = getelementptr inbounds %struct.cv, %struct.cv* %373, i64 0
  %374 = bitcast %struct.cv* %add.ptr648 to %struct.sv*
  %call649 = call %struct.sv* @Perl_newRV(%struct.sv* %374)
  store %struct.sv* %call649, %struct.sv** %attach_hook, align 8
  %375 = load %struct.av*, %struct.av** %av, align 8
  %tobool650 = icmp ne %struct.av* %375, null
  br i1 %tobool650, label %if.then651, label %if.end655

if.then651:                                       ; preds = %if.then645
  br label %do.body652

do.body652:                                       ; preds = %if.then651
  %376 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty653 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %376, i32 0, i32 19
  store i32 1, i32* %s_dirty653, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.70, i64 0, i64 0))
  br label %do.end654

do.end654:                                        ; preds = %do.body652
  br label %if.end655

if.end655:                                        ; preds = %do.end654, %if.then645
  %call656 = call %struct.sv* @Perl_newSV_type(i32 11)
  %377 = bitcast %struct.sv* %call656 to i8*
  %378 = bitcast i8* %377 to %struct.av*
  store %struct.av* %378, %struct.av** %av, align 8
  %379 = load %struct.av*, %struct.av** %av, align 8
  call void @Perl_av_extend(%struct.av* %379, i64 1)
  %380 = load %struct.av*, %struct.av** %av, align 8
  %sv_any657 = getelementptr inbounds %struct.av, %struct.av* %380, i32 0, i32 0
  %381 = load %struct.xpvav*, %struct.xpvav** %sv_any657, align 8
  %xav_fill658 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %381, i32 0, i32 2
  store i64 0, i64* %xav_fill658, align 8
  %382 = load %struct.sv*, %struct.sv** %frozen, align 8
  %383 = bitcast %struct.sv* %382 to i8*
  %384 = bitcast i8* %383 to %struct.sv*
  %call659 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %384)
  %385 = load %struct.av*, %struct.av** %av, align 8
  %sv_u660 = getelementptr inbounds %struct.av, %struct.av* %385, i32 0, i32 3
  %svu_array661 = bitcast %union.anon.2* %sv_u660 to %struct.sv***
  %386 = load %struct.sv**, %struct.sv*** %svu_array661, align 8
  %arrayidx662 = getelementptr inbounds %struct.sv*, %struct.sv** %386, i64 0
  store %struct.sv* %call659, %struct.sv** %arrayidx662, align 8
  %387 = load i8*, i8** %classname, align 8
  %call663 = call %struct.sv* @Perl_newSVpv(i8* %387, i64 0)
  store %struct.sv* %call663, %struct.sv** %rv, align 8
  %388 = load %struct.sv*, %struct.sv** %rv, align 8
  %389 = load %struct.sv*, %struct.sv** %attach_hook, align 8
  %390 = load i32, i32* %clone, align 4
  %391 = load %struct.av*, %struct.av** %av, align 8
  %call664 = call %struct.sv* @scalar_call(%struct.sv* %388, %struct.sv* %389, i32 %390, %struct.av* %391, i32 2)
  store %struct.sv* %call664, %struct.sv** %attached, align 8
  %392 = load %struct.sv*, %struct.sv** %rv, align 8
  %393 = bitcast %struct.sv* %392 to i8*
  %394 = bitcast i8* %393 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %394)
  %395 = load %struct.sv*, %struct.sv** %frozen, align 8
  %396 = bitcast %struct.sv* %395 to i8*
  %397 = bitcast i8* %396 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %397)
  %398 = load %struct.av*, %struct.av** %av, align 8
  call void @Perl_av_undef(%struct.av* %398)
  %399 = load %struct.av*, %struct.av** %av, align 8
  %400 = bitcast %struct.av* %399 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %400)
  %401 = load %struct.sv*, %struct.sv** %attach_hook, align 8
  %402 = bitcast %struct.sv* %401 to i8*
  %403 = bitcast i8* %402 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %403)
  %404 = load %struct.sv*, %struct.sv** %attached, align 8
  %tobool665 = icmp ne %struct.sv* %404, null
  br i1 %tobool665, label %land.lhs.true666, label %if.end703

land.lhs.true666:                                 ; preds = %if.end655
  %405 = load %struct.sv*, %struct.sv** %attached, align 8
  %sv_flags667 = getelementptr inbounds %struct.sv, %struct.sv* %405, i32 0, i32 2
  %406 = load i32, i32* %sv_flags667, align 4
  %and668 = and i32 %406, 2048
  %tobool669 = icmp ne i32 %and668, 0
  br i1 %tobool669, label %land.lhs.true670, label %if.end703

land.lhs.true670:                                 ; preds = %land.lhs.true666
  %407 = load %struct.sv*, %struct.sv** %attached, align 8
  %408 = load i8*, i8** %classname, align 8
  %call671 = call zeroext i1 @Perl_sv_derived_from(%struct.sv* %407, i8* %408)
  br i1 %call671, label %if.then673, label %if.end703

if.then673:                                       ; preds = %land.lhs.true670
  br label %do.body674

do.body674:                                       ; preds = %if.then673
  %409 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen675 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %409, i32 0, i32 5
  %410 = load %struct.av*, %struct.av** %aseen675, align 8
  %call676 = call %struct.sv* @Perl_av_pop(%struct.av* %410)
  %411 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum677 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %411, i32 0, i32 10
  %412 = load i64, i64* %tagnum677, align 8
  %dec = add nsw i64 %412, -1
  store i64 %dec, i64* %tagnum677, align 8
  br label %do.end678

do.end678:                                        ; preds = %do.body674
  %413 = load %struct.sv*, %struct.sv** %sv, align 8
  %414 = bitcast %struct.sv* %413 to i8*
  %415 = bitcast i8* %414 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %415)
  %416 = load %struct.sv*, %struct.sv** %sv, align 8
  %417 = bitcast %struct.sv* %416 to i8*
  %418 = bitcast i8* %417 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %418)
  %419 = load %struct.sv*, %struct.sv** %attached, align 8
  %sv_u679 = getelementptr inbounds %struct.sv, %struct.sv* %419, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u679 to %struct.sv**
  %420 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  store %struct.sv* %420, %struct.sv** %sv, align 8
  br label %do.body680

do.body680:                                       ; preds = %do.end678
  %421 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen681 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %421, i32 0, i32 5
  %422 = load %struct.av*, %struct.av** %aseen681, align 8
  %423 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum682 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %423, i32 0, i32 10
  %424 = load i64, i64* %tagnum682, align 8
  %inc683 = add nsw i64 %424, 1
  store i64 %inc683, i64* %tagnum682, align 8
  %425 = load %struct.sv*, %struct.sv** %sv, align 8
  %426 = bitcast %struct.sv* %425 to i8*
  %427 = bitcast i8* %426 to %struct.sv*
  %call684 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %427)
  %call685 = call %struct.sv** @Perl_av_store(%struct.av* %422, i64 %424, %struct.sv* %call684)
  %cmp686 = icmp eq %struct.sv** %call685, null
  br i1 %cmp686, label %if.then688, label %if.end689

if.then688:                                       ; preds = %do.body680
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end689:                                        ; preds = %do.body680
  br label %do.end690

do.end690:                                        ; preds = %if.end689
  br label %do.body691

do.body691:                                       ; preds = %do.end690
  %428 = load %struct.sv*, %struct.sv** %attached, align 8
  %sv_u692 = getelementptr inbounds %struct.sv, %struct.sv* %428, i32 0, i32 3
  %svu_rv693 = bitcast %union.anon* %sv_u692 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv693, align 8
  br label %do.end694

do.end694:                                        ; preds = %do.body691
  %429 = load %struct.sv*, %struct.sv** %attached, align 8
  %430 = bitcast %struct.sv* %429 to i8*
  %431 = bitcast i8* %430 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %431)
  %432 = load i32, i32* %flags, align 4
  %and695 = and i32 %432, 32
  %tobool696 = icmp ne i32 %and695, 0
  br i1 %tobool696, label %if.end702, label %land.lhs.true697

land.lhs.true697:                                 ; preds = %do.end694
  %433 = load i8*, i8** %classname, align 8
  %arraydecay698 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0
  %cmp699 = icmp ne i8* %433, %arraydecay698
  br i1 %cmp699, label %if.then701, label %if.end702

if.then701:                                       ; preds = %land.lhs.true697
  %434 = load i8*, i8** %classname, align 8
  call void @Perl_safesysfree(i8* %434)
  br label %if.end702

if.end702:                                        ; preds = %if.then701, %land.lhs.true697, %do.end694
  %435 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %435, %struct.sv** %retval, align 8
  br label %return

if.end703:                                        ; preds = %land.lhs.true670, %land.lhs.true666, %if.end655
  br label %do.body704

do.body704:                                       ; preds = %if.end703
  %436 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty705 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %436, i32 0, i32 19
  store i32 1, i32* %s_dirty705, align 8
  %437 = load i8*, i8** %classname, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.71, i64 0, i64 0), i8* %437)
  br label %do.end706

do.end706:                                        ; preds = %do.body704
  br label %if.end707

if.end707:                                        ; preds = %do.end706, %land.lhs.true, %if.end637
  br label %do.body708

do.body708:                                       ; preds = %if.end707
  %438 = load %struct.sv*, %struct.sv** %sv, align 8
  %call709 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %438)
  store %struct.sv* %call709, %struct.sv** %ref, align 8
  %439 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %439, i32 0, i32 30
  %440 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool710 = icmp ne i32 %440, 0
  br i1 %tobool710, label %land.lhs.true711, label %if.end787

land.lhs.true711:                                 ; preds = %do.body708
  %441 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags712 = getelementptr inbounds %struct.hv, %struct.hv* %441, i32 0, i32 2
  %442 = load i32, i32* %sv_flags712, align 4
  %and713 = and i32 %442, 33554432
  %tobool714 = icmp ne i32 %and713, 0
  br i1 %tobool714, label %land.lhs.true715, label %cond.false777

land.lhs.true715:                                 ; preds = %land.lhs.true711
  %443 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u716 = getelementptr inbounds %struct.hv, %struct.hv* %443, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u716 to %struct.he***
  %444 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %445 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any717 = getelementptr inbounds %struct.hv, %struct.hv* %445, i32 0, i32 0
  %446 = load %struct.xpvhv*, %struct.xpvhv** %sv_any717, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %446, i32 0, i32 3
  %447 = load i64, i64* %xhv_max, align 8
  %add718 = add i64 %447, 1
  %arrayidx719 = getelementptr inbounds %struct.he*, %struct.he** %444, i64 %add718
  %448 = bitcast %struct.he** %arrayidx719 to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %448, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %449 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool720 = icmp ne %struct.hek* %449, null
  br i1 %tobool720, label %land.lhs.true721, label %cond.false777

land.lhs.true721:                                 ; preds = %land.lhs.true715
  %450 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u722 = getelementptr inbounds %struct.hv, %struct.hv* %450, i32 0, i32 3
  %svu_hash723 = bitcast %union.anon.4* %sv_u722 to %struct.he***
  %451 = load %struct.he**, %struct.he*** %svu_hash723, align 8
  %452 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any724 = getelementptr inbounds %struct.hv, %struct.hv* %452, i32 0, i32 0
  %453 = load %struct.xpvhv*, %struct.xpvhv** %sv_any724, align 8
  %xhv_max725 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %453, i32 0, i32 3
  %454 = load i64, i64* %xhv_max725, align 8
  %add726 = add i64 %454, 1
  %arrayidx727 = getelementptr inbounds %struct.he*, %struct.he** %451, i64 %add726
  %455 = bitcast %struct.he** %arrayidx727 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %455, i32 0, i32 4
  %456 = load i32, i32* %xhv_name_count, align 4
  %tobool728 = icmp ne i32 %456, 0
  br i1 %tobool728, label %cond.true729, label %cond.false738

cond.true729:                                     ; preds = %land.lhs.true721
  %457 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u730 = getelementptr inbounds %struct.hv, %struct.hv* %457, i32 0, i32 3
  %svu_hash731 = bitcast %union.anon.4* %sv_u730 to %struct.he***
  %458 = load %struct.he**, %struct.he*** %svu_hash731, align 8
  %459 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any732 = getelementptr inbounds %struct.hv, %struct.hv* %459, i32 0, i32 0
  %460 = load %struct.xpvhv*, %struct.xpvhv** %sv_any732, align 8
  %xhv_max733 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %460, i32 0, i32 3
  %461 = load i64, i64* %xhv_max733, align 8
  %add734 = add i64 %461, 1
  %arrayidx735 = getelementptr inbounds %struct.he*, %struct.he** %458, i64 %add734
  %462 = bitcast %struct.he** %arrayidx735 to %struct.xpvhv_aux*
  %xhv_name_u736 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %462, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u736 to %struct.hek***
  %463 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %464 = load %struct.hek*, %struct.hek** %463, align 8
  %tobool737 = icmp ne %struct.hek* %464, null
  br i1 %tobool737, label %cond.true748, label %cond.false777

cond.false738:                                    ; preds = %land.lhs.true721
  %465 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u739 = getelementptr inbounds %struct.hv, %struct.hv* %465, i32 0, i32 3
  %svu_hash740 = bitcast %union.anon.4* %sv_u739 to %struct.he***
  %466 = load %struct.he**, %struct.he*** %svu_hash740, align 8
  %467 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any741 = getelementptr inbounds %struct.hv, %struct.hv* %467, i32 0, i32 0
  %468 = load %struct.xpvhv*, %struct.xpvhv** %sv_any741, align 8
  %xhv_max742 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %468, i32 0, i32 3
  %469 = load i64, i64* %xhv_max742, align 8
  %add743 = add i64 %469, 1
  %arrayidx744 = getelementptr inbounds %struct.he*, %struct.he** %466, i64 %add743
  %470 = bitcast %struct.he** %arrayidx744 to %struct.xpvhv_aux*
  %xhv_name_u745 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %470, i32 0, i32 0
  %xhvnameu_name746 = bitcast %union._xhvnameu* %xhv_name_u745 to %struct.hek**
  %471 = load %struct.hek*, %struct.hek** %xhvnameu_name746, align 8
  %tobool747 = icmp ne %struct.hek* %471, null
  br i1 %tobool747, label %cond.true748, label %cond.false777

cond.true748:                                     ; preds = %cond.false738, %cond.true729
  %472 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u749 = getelementptr inbounds %struct.hv, %struct.hv* %472, i32 0, i32 3
  %svu_hash750 = bitcast %union.anon.4* %sv_u749 to %struct.he***
  %473 = load %struct.he**, %struct.he*** %svu_hash750, align 8
  %474 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any751 = getelementptr inbounds %struct.hv, %struct.hv* %474, i32 0, i32 0
  %475 = load %struct.xpvhv*, %struct.xpvhv** %sv_any751, align 8
  %xhv_max752 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %475, i32 0, i32 3
  %476 = load i64, i64* %xhv_max752, align 8
  %add753 = add i64 %476, 1
  %arrayidx754 = getelementptr inbounds %struct.he*, %struct.he** %473, i64 %add753
  %477 = bitcast %struct.he** %arrayidx754 to %struct.xpvhv_aux*
  %xhv_name_count755 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %477, i32 0, i32 4
  %478 = load i32, i32* %xhv_name_count755, align 4
  %tobool756 = icmp ne i32 %478, 0
  br i1 %tobool756, label %cond.true757, label %cond.false766

cond.true757:                                     ; preds = %cond.true748
  %479 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u758 = getelementptr inbounds %struct.hv, %struct.hv* %479, i32 0, i32 3
  %svu_hash759 = bitcast %union.anon.4* %sv_u758 to %struct.he***
  %480 = load %struct.he**, %struct.he*** %svu_hash759, align 8
  %481 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any760 = getelementptr inbounds %struct.hv, %struct.hv* %481, i32 0, i32 0
  %482 = load %struct.xpvhv*, %struct.xpvhv** %sv_any760, align 8
  %xhv_max761 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %482, i32 0, i32 3
  %483 = load i64, i64* %xhv_max761, align 8
  %add762 = add i64 %483, 1
  %arrayidx763 = getelementptr inbounds %struct.he*, %struct.he** %480, i64 %add762
  %484 = bitcast %struct.he** %arrayidx763 to %struct.xpvhv_aux*
  %xhv_name_u764 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %484, i32 0, i32 0
  %xhvnameu_names765 = bitcast %union._xhvnameu* %xhv_name_u764 to %struct.hek***
  %485 = load %struct.hek**, %struct.hek*** %xhvnameu_names765, align 8
  %486 = load %struct.hek*, %struct.hek** %485, align 8
  br label %cond.end

cond.false766:                                    ; preds = %cond.true748
  %487 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u767 = getelementptr inbounds %struct.hv, %struct.hv* %487, i32 0, i32 3
  %svu_hash768 = bitcast %union.anon.4* %sv_u767 to %struct.he***
  %488 = load %struct.he**, %struct.he*** %svu_hash768, align 8
  %489 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any769 = getelementptr inbounds %struct.hv, %struct.hv* %489, i32 0, i32 0
  %490 = load %struct.xpvhv*, %struct.xpvhv** %sv_any769, align 8
  %xhv_max770 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %490, i32 0, i32 3
  %491 = load i64, i64* %xhv_max770, align 8
  %add771 = add i64 %491, 1
  %arrayidx772 = getelementptr inbounds %struct.he*, %struct.he** %488, i64 %add771
  %492 = bitcast %struct.he** %arrayidx772 to %struct.xpvhv_aux*
  %xhv_name_u773 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %492, i32 0, i32 0
  %xhvnameu_name774 = bitcast %union._xhvnameu* %xhv_name_u773 to %struct.hek**
  %493 = load %struct.hek*, %struct.hek** %xhvnameu_name774, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false766, %cond.true757
  %cond = phi %struct.hek* [ %486, %cond.true757 ], [ %493, %cond.false766 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond, i32 0, i32 2
  %arraydecay775 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool776 = icmp ne i8* %arraydecay775, null
  br i1 %tobool776, label %land.lhs.true778, label %cond.false782

cond.false777:                                    ; preds = %cond.false738, %cond.true729, %land.lhs.true715, %land.lhs.true711
  br i1 false, label %land.lhs.true778, label %cond.false782

land.lhs.true778:                                 ; preds = %cond.false777, %cond.end
  %494 = load %struct.hv*, %struct.hv** %stash, align 8
  %call779 = call i32 @Perl_Gv_AMupdate(%struct.hv* %494, i1 zeroext false)
  %tobool780 = icmp ne i32 %call779, 0
  br i1 %tobool780, label %cond.true781, label %cond.false782

cond.true781:                                     ; preds = %land.lhs.true778
  br i1 true, label %if.then785, label %if.end787

cond.false782:                                    ; preds = %land.lhs.true778, %cond.false777, %cond.end
  %495 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags783 = getelementptr inbounds %struct.hv, %struct.hv* %495, i32 0, i32 2
  %496 = load i32, i32* %sv_flags783, align 4
  %and784 = and i32 %496, -268435457
  store i32 %and784, i32* %sv_flags783, align 4
  br i1 false, label %if.then785, label %if.end787

if.then785:                                       ; preds = %cond.false782, %cond.true781
  %497 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded786 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %497, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded786, align 8
  %498 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %498)
  br label %if.end787

if.end787:                                        ; preds = %if.then785, %cond.false782, %cond.true781, %do.body708
  %499 = load %struct.sv*, %struct.sv** %ref, align 8
  %500 = load %struct.hv*, %struct.hv** %stash, align 8
  %call788 = call %struct.sv* @Perl_sv_bless(%struct.sv* %499, %struct.hv* %500)
  br label %do.body789

do.body789:                                       ; preds = %if.end787
  %501 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u790 = getelementptr inbounds %struct.sv, %struct.sv* %501, i32 0, i32 3
  %svu_rv791 = bitcast %union.anon* %sv_u790 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv791, align 8
  br label %do.end792

do.end792:                                        ; preds = %do.body789
  %502 = load %struct.sv*, %struct.sv** %ref, align 8
  %503 = bitcast %struct.sv* %502 to i8*
  %504 = bitcast i8* %503 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %504)
  br label %do.end793

do.end793:                                        ; preds = %do.end792
  %505 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook794 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %505, i32 0, i32 9
  %506 = load %struct.hv*, %struct.hv** %hook794, align 8
  %507 = load %struct.hv*, %struct.hv** %stash, align 8
  %call795 = call %struct.sv* @pkg_can(%struct.hv* %506, %struct.hv* %507, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.72, i64 0, i64 0))
  store %struct.sv* %call795, %struct.sv** %hook, align 8
  %508 = load %struct.sv*, %struct.sv** %hook, align 8
  %tobool796 = icmp ne %struct.sv* %508, null
  br i1 %tobool796, label %if.end811, label %if.then797

if.then797:                                       ; preds = %do.end793
  %509 = load i8*, i8** %classname, align 8
  %call798 = call %struct.sv* @Perl_newSVpv(i8* %509, i64 0)
  call void (i32, %struct.sv*, %struct.sv*, ...) @Perl_load_module(i32 2, %struct.sv* %call798, %struct.sv* null)
  %510 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook799 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %510, i32 0, i32 9
  %511 = load %struct.hv*, %struct.hv** %hook799, align 8
  %512 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any800 = getelementptr inbounds %struct.sv, %struct.sv* %512, i32 0, i32 0
  %513 = load i8*, i8** %sv_any800, align 8
  %514 = bitcast i8* %513 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %514, i32 0, i32 0
  %515 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  call void @pkg_uncache(%struct.hv* %511, %struct.hv* %515, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.72, i64 0, i64 0))
  %516 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook801 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %516, i32 0, i32 9
  %517 = load %struct.hv*, %struct.hv** %hook801, align 8
  %518 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any802 = getelementptr inbounds %struct.sv, %struct.sv* %518, i32 0, i32 0
  %519 = load i8*, i8** %sv_any802, align 8
  %520 = bitcast i8* %519 to %struct.xpvmg*
  %xmg_stash803 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %520, i32 0, i32 0
  %521 = load %struct.hv*, %struct.hv** %xmg_stash803, align 8
  %call804 = call %struct.sv* @pkg_can(%struct.hv* %517, %struct.hv* %521, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.72, i64 0, i64 0))
  store %struct.sv* %call804, %struct.sv** %hook, align 8
  %522 = load %struct.sv*, %struct.sv** %hook, align 8
  %tobool805 = icmp ne %struct.sv* %522, null
  br i1 %tobool805, label %if.end810, label %if.then806

if.then806:                                       ; preds = %if.then797
  br label %do.body807

do.body807:                                       ; preds = %if.then806
  %523 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty808 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %523, i32 0, i32 19
  store i32 1, i32* %s_dirty808, align 8
  %524 = load i8*, i8** %classname, align 8
  %525 = load i8*, i8** %classname, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.73, i64 0, i64 0), i8* %524, i8* %525)
  br label %do.end809

do.end809:                                        ; preds = %do.body807
  br label %if.end810

if.end810:                                        ; preds = %do.end809, %if.then797
  br label %if.end811

if.end811:                                        ; preds = %if.end810, %do.end793
  %526 = load %struct.av*, %struct.av** %av, align 8
  %tobool812 = icmp ne %struct.av* %526, null
  br i1 %tobool812, label %if.end817, label %if.then813

if.then813:                                       ; preds = %if.end811
  %call814 = call %struct.sv* @Perl_newSV_type(i32 11)
  %527 = bitcast %struct.sv* %call814 to i8*
  %528 = bitcast i8* %527 to %struct.av*
  store %struct.av* %528, %struct.av** %av, align 8
  %529 = load %struct.av*, %struct.av** %av, align 8
  call void @Perl_av_extend(%struct.av* %529, i64 1)
  %530 = load %struct.av*, %struct.av** %av, align 8
  %sv_any815 = getelementptr inbounds %struct.av, %struct.av* %530, i32 0, i32 0
  %531 = load %struct.xpvav*, %struct.xpvav** %sv_any815, align 8
  %xav_fill816 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %531, i32 0, i32 2
  store i64 0, i64* %xav_fill816, align 8
  br label %if.end817

if.end817:                                        ; preds = %if.then813, %if.end811
  %532 = load %struct.sv*, %struct.sv** %frozen, align 8
  %533 = bitcast %struct.sv* %532 to i8*
  %534 = bitcast i8* %533 to %struct.sv*
  %call818 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %534)
  %535 = load %struct.av*, %struct.av** %av, align 8
  %sv_u819 = getelementptr inbounds %struct.av, %struct.av* %535, i32 0, i32 3
  %svu_array820 = bitcast %union.anon.2* %sv_u819 to %struct.sv***
  %536 = load %struct.sv**, %struct.sv*** %svu_array820, align 8
  %arrayidx821 = getelementptr inbounds %struct.sv*, %struct.sv** %536, i64 0
  store %struct.sv* %call818, %struct.sv** %arrayidx821, align 8
  %537 = load %struct.sv*, %struct.sv** %sv, align 8
  %call822 = call %struct.sv* @Perl_newRV(%struct.sv* %537)
  store %struct.sv* %call822, %struct.sv** %rv, align 8
  %538 = load %struct.sv*, %struct.sv** %rv, align 8
  %539 = load %struct.sv*, %struct.sv** %hook, align 8
  %540 = load i32, i32* %clone, align 4
  %541 = load %struct.av*, %struct.av** %av, align 8
  %call823 = call %struct.sv* @scalar_call(%struct.sv* %538, %struct.sv* %539, i32 %540, %struct.av* %541, i32 6)
  %542 = load %struct.sv*, %struct.sv** %rv, align 8
  %543 = bitcast %struct.sv* %542 to i8*
  %544 = bitcast i8* %543 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %544)
  %545 = load %struct.sv*, %struct.sv** %frozen, align 8
  %546 = bitcast %struct.sv* %545 to i8*
  %547 = bitcast i8* %546 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %547)
  %548 = load %struct.av*, %struct.av** %av, align 8
  call void @Perl_av_undef(%struct.av* %548)
  %549 = load %struct.av*, %struct.av** %av, align 8
  %550 = bitcast %struct.av* %549 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %550)
  %551 = load i32, i32* %flags, align 4
  %and824 = and i32 %551, 32
  %tobool825 = icmp ne i32 %and824, 0
  br i1 %tobool825, label %if.end831, label %land.lhs.true826

land.lhs.true826:                                 ; preds = %if.end817
  %552 = load i8*, i8** %classname, align 8
  %arraydecay827 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0
  %cmp828 = icmp ne i8* %552, %arraydecay827
  br i1 %cmp828, label %if.then830, label %if.end831

if.then830:                                       ; preds = %land.lhs.true826
  %553 = load i8*, i8** %classname, align 8
  call void @Perl_safesysfree(i8* %553)
  br label %if.end831

if.end831:                                        ; preds = %if.then830, %land.lhs.true826, %if.end817
  %554 = load i32, i32* %extra_type, align 4
  %tobool832 = icmp ne i32 %554, 0
  br i1 %tobool832, label %if.end834, label %if.then833

if.then833:                                       ; preds = %if.end831
  %555 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %555, %struct.sv** %retval, align 8
  br label %return

if.end834:                                        ; preds = %if.end831
  %556 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call835 = call %struct.sv* @retrieve(%struct.stcxt* %556, i8* null)
  store %struct.sv* %call835, %struct.sv** %rv, align 8
  %557 = load i32, i32* %extra_type, align 4
  switch i32 %557, label %sw.default841 [
    i32 4, label %sw.bb836
    i32 5, label %sw.bb837
    i32 6, label %sw.bb840
  ]

sw.bb836:                                         ; preds = %if.end834
  %558 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_upgrade(%struct.sv* %558, i32 7)
  br label %sw.epilog845

sw.bb837:                                         ; preds = %if.end834
  %559 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_upgrade(%struct.sv* %559, i32 11)
  %560 = load %struct.sv*, %struct.sv** %sv, align 8
  %561 = bitcast %struct.sv* %560 to %struct.av*
  %sv_flags838 = getelementptr inbounds %struct.av, %struct.av* %561, i32 0, i32 2
  %562 = load i32, i32* %sv_flags838, align 4
  %and839 = and i32 %562, -1073741825
  store i32 %and839, i32* %sv_flags838, align 4
  br label %sw.epilog845

sw.bb840:                                         ; preds = %if.end834
  %563 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_upgrade(%struct.sv* %563, i32 12)
  br label %sw.epilog845

sw.default841:                                    ; preds = %if.end834
  br label %do.body842

do.body842:                                       ; preds = %sw.default841
  %564 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty843 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %564, i32 0, i32 19
  store i32 1, i32* %s_dirty843, align 8
  %565 = load i32, i32* %extra_type, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.74, i64 0, i64 0), i32 %565)
  br label %do.end844

do.end844:                                        ; preds = %do.body842
  br label %sw.epilog845

sw.epilog845:                                     ; preds = %do.end844, %sw.bb840, %sw.bb837, %sw.bb836
  %566 = load %struct.sv*, %struct.sv** %sv, align 8
  %567 = load %struct.sv*, %struct.sv** %rv, align 8
  %568 = load i8, i8* %mtype, align 1
  %conv846 = sext i8 %568 to i32
  call void @Perl_sv_magic(%struct.sv* %566, %struct.sv* %567, i32 %conv846, i8* null, i32 0)
  %569 = load %struct.sv*, %struct.sv** %rv, align 8
  %570 = bitcast %struct.sv* %569 to i8*
  %571 = bitcast i8* %570 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %571)
  %572 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %572, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %sw.epilog845, %if.then833, %if.end702, %if.then688, %if.then612, %if.else604, %if.then555, %if.else547, %if.then521, %if.else513, %if.then439, %if.else427, %if.then395, %if.else387, %if.then361, %if.else353, %if.then317, %if.then307, %if.else297, %if.then266, %if.else258, %if.then232, %if.else224, %if.then177, %if.else169, %if.then144, %if.else136, %if.then97, %if.else89, %if.then71, %if.then64, %sw.default56, %sw.default, %if.then45, %if.else37, %if.then10, %if.else
  %573 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %573
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_overloaded(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %rv = alloca %struct.sv*, align 8
  %sv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %ref = alloca %struct.sv*, align 8
  %package = alloca i8*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %call = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call, %struct.sv** %rv, align 8
  %0 = load i8*, i8** %cname.addr, align 8
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %cname.addr, align 8
  %call1 = call %struct.hv* @Perl_gv_stashpv(i8* %1, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call1, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  br label %do.body

do.body:                                          ; preds = %cond.end
  br label %do.body2

do.body2:                                         ; preds = %do.body
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 5
  %3 = load %struct.av*, %struct.av** %aseen, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 10
  %5 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %5, 1
  store i64 %inc, i64* %tagnum, align 8
  %6 = load %struct.sv*, %struct.sv** %rv, align 8
  %7 = bitcast %struct.sv* %6 to i8*
  %8 = bitcast i8* %7 to %struct.sv*
  %call3 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %8)
  %call4 = call %struct.sv** @Perl_av_store(%struct.av* %3, i64 %5, %struct.sv* %call3)
  %cmp = icmp eq %struct.sv** %call4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body2
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %do.body2
  br label %do.end

do.end:                                           ; preds = %if.end
  %9 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool5 = icmp ne %struct.hv* %9, null
  br i1 %tobool5, label %if.then6, label %if.end86

if.then6:                                         ; preds = %do.end
  br label %do.body7

do.body7:                                         ; preds = %if.then6
  %10 = load %struct.sv*, %struct.sv** %rv, align 8
  %call8 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %10)
  store %struct.sv* %call8, %struct.sv** %ref, align 8
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 30
  %12 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool9 = icmp ne i32 %12, 0
  br i1 %tobool9, label %land.lhs.true, label %if.end80

land.lhs.true:                                    ; preds = %do.body7
  %13 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %13, i32 0, i32 2
  %14 = load i32, i32* %sv_flags, align 4
  %and = and i32 %14, 33554432
  %tobool10 = icmp ne i32 %and, 0
  br i1 %tobool10, label %land.lhs.true11, label %cond.false70

land.lhs.true11:                                  ; preds = %land.lhs.true
  %15 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %15, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %16 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %17 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %17, i32 0, i32 0
  %18 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %18, i32 0, i32 3
  %19 = load i64, i64* %xhv_max, align 8
  %add = add i64 %19, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %16, i64 %add
  %20 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %20, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %21 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool12 = icmp ne %struct.hek* %21, null
  br i1 %tobool12, label %land.lhs.true13, label %cond.false70

land.lhs.true13:                                  ; preds = %land.lhs.true11
  %22 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u14 = getelementptr inbounds %struct.hv, %struct.hv* %22, i32 0, i32 3
  %svu_hash15 = bitcast %union.anon.4* %sv_u14 to %struct.he***
  %23 = load %struct.he**, %struct.he*** %svu_hash15, align 8
  %24 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any16 = getelementptr inbounds %struct.hv, %struct.hv* %24, i32 0, i32 0
  %25 = load %struct.xpvhv*, %struct.xpvhv** %sv_any16, align 8
  %xhv_max17 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %25, i32 0, i32 3
  %26 = load i64, i64* %xhv_max17, align 8
  %add18 = add i64 %26, 1
  %arrayidx19 = getelementptr inbounds %struct.he*, %struct.he** %23, i64 %add18
  %27 = bitcast %struct.he** %arrayidx19 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %27, i32 0, i32 4
  %28 = load i32, i32* %xhv_name_count, align 4
  %tobool20 = icmp ne i32 %28, 0
  br i1 %tobool20, label %cond.true21, label %cond.false30

cond.true21:                                      ; preds = %land.lhs.true13
  %29 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u22 = getelementptr inbounds %struct.hv, %struct.hv* %29, i32 0, i32 3
  %svu_hash23 = bitcast %union.anon.4* %sv_u22 to %struct.he***
  %30 = load %struct.he**, %struct.he*** %svu_hash23, align 8
  %31 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any24 = getelementptr inbounds %struct.hv, %struct.hv* %31, i32 0, i32 0
  %32 = load %struct.xpvhv*, %struct.xpvhv** %sv_any24, align 8
  %xhv_max25 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %32, i32 0, i32 3
  %33 = load i64, i64* %xhv_max25, align 8
  %add26 = add i64 %33, 1
  %arrayidx27 = getelementptr inbounds %struct.he*, %struct.he** %30, i64 %add26
  %34 = bitcast %struct.he** %arrayidx27 to %struct.xpvhv_aux*
  %xhv_name_u28 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %34, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u28 to %struct.hek***
  %35 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %36 = load %struct.hek*, %struct.hek** %35, align 8
  %tobool29 = icmp ne %struct.hek* %36, null
  br i1 %tobool29, label %cond.true40, label %cond.false70

cond.false30:                                     ; preds = %land.lhs.true13
  %37 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u31 = getelementptr inbounds %struct.hv, %struct.hv* %37, i32 0, i32 3
  %svu_hash32 = bitcast %union.anon.4* %sv_u31 to %struct.he***
  %38 = load %struct.he**, %struct.he*** %svu_hash32, align 8
  %39 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any33 = getelementptr inbounds %struct.hv, %struct.hv* %39, i32 0, i32 0
  %40 = load %struct.xpvhv*, %struct.xpvhv** %sv_any33, align 8
  %xhv_max34 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %40, i32 0, i32 3
  %41 = load i64, i64* %xhv_max34, align 8
  %add35 = add i64 %41, 1
  %arrayidx36 = getelementptr inbounds %struct.he*, %struct.he** %38, i64 %add35
  %42 = bitcast %struct.he** %arrayidx36 to %struct.xpvhv_aux*
  %xhv_name_u37 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %42, i32 0, i32 0
  %xhvnameu_name38 = bitcast %union._xhvnameu* %xhv_name_u37 to %struct.hek**
  %43 = load %struct.hek*, %struct.hek** %xhvnameu_name38, align 8
  %tobool39 = icmp ne %struct.hek* %43, null
  br i1 %tobool39, label %cond.true40, label %cond.false70

cond.true40:                                      ; preds = %cond.false30, %cond.true21
  %44 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u41 = getelementptr inbounds %struct.hv, %struct.hv* %44, i32 0, i32 3
  %svu_hash42 = bitcast %union.anon.4* %sv_u41 to %struct.he***
  %45 = load %struct.he**, %struct.he*** %svu_hash42, align 8
  %46 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any43 = getelementptr inbounds %struct.hv, %struct.hv* %46, i32 0, i32 0
  %47 = load %struct.xpvhv*, %struct.xpvhv** %sv_any43, align 8
  %xhv_max44 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %47, i32 0, i32 3
  %48 = load i64, i64* %xhv_max44, align 8
  %add45 = add i64 %48, 1
  %arrayidx46 = getelementptr inbounds %struct.he*, %struct.he** %45, i64 %add45
  %49 = bitcast %struct.he** %arrayidx46 to %struct.xpvhv_aux*
  %xhv_name_count47 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %49, i32 0, i32 4
  %50 = load i32, i32* %xhv_name_count47, align 4
  %tobool48 = icmp ne i32 %50, 0
  br i1 %tobool48, label %cond.true49, label %cond.false58

cond.true49:                                      ; preds = %cond.true40
  %51 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u50 = getelementptr inbounds %struct.hv, %struct.hv* %51, i32 0, i32 3
  %svu_hash51 = bitcast %union.anon.4* %sv_u50 to %struct.he***
  %52 = load %struct.he**, %struct.he*** %svu_hash51, align 8
  %53 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any52 = getelementptr inbounds %struct.hv, %struct.hv* %53, i32 0, i32 0
  %54 = load %struct.xpvhv*, %struct.xpvhv** %sv_any52, align 8
  %xhv_max53 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %54, i32 0, i32 3
  %55 = load i64, i64* %xhv_max53, align 8
  %add54 = add i64 %55, 1
  %arrayidx55 = getelementptr inbounds %struct.he*, %struct.he** %52, i64 %add54
  %56 = bitcast %struct.he** %arrayidx55 to %struct.xpvhv_aux*
  %xhv_name_u56 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %56, i32 0, i32 0
  %xhvnameu_names57 = bitcast %union._xhvnameu* %xhv_name_u56 to %struct.hek***
  %57 = load %struct.hek**, %struct.hek*** %xhvnameu_names57, align 8
  %58 = load %struct.hek*, %struct.hek** %57, align 8
  br label %cond.end67

cond.false58:                                     ; preds = %cond.true40
  %59 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u59 = getelementptr inbounds %struct.hv, %struct.hv* %59, i32 0, i32 3
  %svu_hash60 = bitcast %union.anon.4* %sv_u59 to %struct.he***
  %60 = load %struct.he**, %struct.he*** %svu_hash60, align 8
  %61 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any61 = getelementptr inbounds %struct.hv, %struct.hv* %61, i32 0, i32 0
  %62 = load %struct.xpvhv*, %struct.xpvhv** %sv_any61, align 8
  %xhv_max62 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %62, i32 0, i32 3
  %63 = load i64, i64* %xhv_max62, align 8
  %add63 = add i64 %63, 1
  %arrayidx64 = getelementptr inbounds %struct.he*, %struct.he** %60, i64 %add63
  %64 = bitcast %struct.he** %arrayidx64 to %struct.xpvhv_aux*
  %xhv_name_u65 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %64, i32 0, i32 0
  %xhvnameu_name66 = bitcast %union._xhvnameu* %xhv_name_u65 to %struct.hek**
  %65 = load %struct.hek*, %struct.hek** %xhvnameu_name66, align 8
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false58, %cond.true49
  %cond68 = phi %struct.hek* [ %58, %cond.true49 ], [ %65, %cond.false58 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond68, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool69 = icmp ne i8* %arraydecay, null
  br i1 %tobool69, label %land.lhs.true71, label %cond.false75

cond.false70:                                     ; preds = %cond.false30, %cond.true21, %land.lhs.true11, %land.lhs.true
  br i1 false, label %land.lhs.true71, label %cond.false75

land.lhs.true71:                                  ; preds = %cond.false70, %cond.end67
  %66 = load %struct.hv*, %struct.hv** %stash, align 8
  %call72 = call i32 @Perl_Gv_AMupdate(%struct.hv* %66, i1 zeroext false)
  %tobool73 = icmp ne i32 %call72, 0
  br i1 %tobool73, label %cond.true74, label %cond.false75

cond.true74:                                      ; preds = %land.lhs.true71
  br i1 true, label %if.then78, label %if.end80

cond.false75:                                     ; preds = %land.lhs.true71, %cond.false70, %cond.end67
  %67 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags76 = getelementptr inbounds %struct.hv, %struct.hv* %67, i32 0, i32 2
  %68 = load i32, i32* %sv_flags76, align 4
  %and77 = and i32 %68, -268435457
  store i32 %and77, i32* %sv_flags76, align 4
  br i1 false, label %if.then78, label %if.end80

if.then78:                                        ; preds = %cond.false75, %cond.true74
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded79 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded79, align 8
  %70 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %70)
  br label %if.end80

if.end80:                                         ; preds = %if.then78, %cond.false75, %cond.true74, %do.body7
  %71 = load %struct.sv*, %struct.sv** %ref, align 8
  %72 = load %struct.hv*, %struct.hv** %stash, align 8
  %call81 = call %struct.sv* @Perl_sv_bless(%struct.sv* %71, %struct.hv* %72)
  br label %do.body82

do.body82:                                        ; preds = %if.end80
  %73 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u83 = getelementptr inbounds %struct.sv, %struct.sv* %73, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u83 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end84

do.end84:                                         ; preds = %do.body82
  %74 = load %struct.sv*, %struct.sv** %ref, align 8
  %75 = bitcast %struct.sv* %74 to i8*
  %76 = bitcast i8* %75 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %76)
  br label %do.end85

do.end85:                                         ; preds = %do.end84
  br label %if.end86

if.end86:                                         ; preds = %do.end85, %do.end
  br label %do.end87

do.end87:                                         ; preds = %if.end86
  %77 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded88 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %77, i32 0, i32 30
  store i32 1, i32* %in_retrieve_overloaded88, align 8
  %78 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call89 = call %struct.sv* @retrieve(%struct.stcxt* %78, i8* null)
  store %struct.sv* %call89, %struct.sv** %sv, align 8
  %79 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded90 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %79, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded90, align 8
  %80 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool91 = icmp ne %struct.sv* %80, null
  br i1 %tobool91, label %if.end93, label %if.then92

if.then92:                                        ; preds = %do.end87
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end93:                                         ; preds = %do.end87
  %81 = load %struct.sv*, %struct.sv** %rv, align 8
  %sv_flags94 = getelementptr inbounds %struct.sv, %struct.sv* %81, i32 0, i32 2
  %82 = load i32, i32* %sv_flags94, align 4
  %and95 = and i32 %82, 255
  %cmp96 = icmp uge i32 %and95, 1
  br i1 %cmp96, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end93
  %83 = load %struct.sv*, %struct.sv** %rv, align 8
  call void @Perl_sv_upgrade(%struct.sv* %83, i32 1)
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end93
  %84 = phi i1 [ true, %if.end93 ], [ true, %lor.rhs ]
  %lor.ext = zext i1 %84 to i32
  br label %do.body97

do.body97:                                        ; preds = %lor.end
  %85 = load %struct.sv*, %struct.sv** %sv, align 8
  %86 = load %struct.sv*, %struct.sv** %rv, align 8
  %sv_u98 = getelementptr inbounds %struct.sv, %struct.sv* %86, i32 0, i32 3
  %svu_rv99 = bitcast %union.anon* %sv_u98 to %struct.sv**
  store %struct.sv* %85, %struct.sv** %svu_rv99, align 8
  br label %do.end100

do.end100:                                        ; preds = %do.body97
  %87 = load %struct.sv*, %struct.sv** %rv, align 8
  %sv_flags101 = getelementptr inbounds %struct.sv, %struct.sv* %87, i32 0, i32 2
  %88 = load i32, i32* %sv_flags101, align 4
  %or = or i32 %88, 2048
  store i32 %or, i32* %sv_flags101, align 4
  %89 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags102 = getelementptr inbounds %struct.sv, %struct.sv* %89, i32 0, i32 2
  %90 = load i32, i32* %sv_flags102, align 4
  %and103 = and i32 %90, 255
  %tobool104 = icmp ne i32 %and103, 0
  br i1 %tobool104, label %cond.true105, label %cond.false107

cond.true105:                                     ; preds = %do.end100
  %91 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any106 = getelementptr inbounds %struct.sv, %struct.sv* %91, i32 0, i32 0
  %92 = load i8*, i8** %sv_any106, align 8
  %93 = bitcast i8* %92 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %93, i32 0, i32 0
  %94 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  br label %cond.end108

cond.false107:                                    ; preds = %do.end100
  br label %cond.end108

cond.end108:                                      ; preds = %cond.false107, %cond.true105
  %cond109 = phi %struct.hv* [ %94, %cond.true105 ], [ null, %cond.false107 ]
  store %struct.hv* %cond109, %struct.hv** %stash, align 8
  %95 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool110 = icmp ne %struct.hv* %95, null
  br i1 %tobool110, label %if.end115, label %if.then111

if.then111:                                       ; preds = %cond.end108
  br label %do.body112

do.body112:                                       ; preds = %if.then111
  %96 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %96, i32 0, i32 19
  store i32 1, i32* %s_dirty, align 8
  %97 = load %struct.sv*, %struct.sv** %sv, align 8
  %call113 = call i8* @Perl_sv_reftype(%struct.sv* %97, i32 0)
  %98 = load %struct.sv*, %struct.sv** %sv, align 8
  %99 = ptrtoint %struct.sv* %98 to i64
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.75, i64 0, i64 0), i8* %call113, i64 %99)
  br label %do.end114

do.end114:                                        ; preds = %do.body112
  br label %if.end115

if.end115:                                        ; preds = %do.end114, %cond.end108
  %100 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags116 = getelementptr inbounds %struct.hv, %struct.hv* %100, i32 0, i32 2
  %101 = load i32, i32* %sv_flags116, align 4
  %and117 = and i32 %101, 33554432
  %tobool118 = icmp ne i32 %and117, 0
  br i1 %tobool118, label %land.lhs.true119, label %cond.false190

land.lhs.true119:                                 ; preds = %if.end115
  %102 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u120 = getelementptr inbounds %struct.hv, %struct.hv* %102, i32 0, i32 3
  %svu_hash121 = bitcast %union.anon.4* %sv_u120 to %struct.he***
  %103 = load %struct.he**, %struct.he*** %svu_hash121, align 8
  %104 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any122 = getelementptr inbounds %struct.hv, %struct.hv* %104, i32 0, i32 0
  %105 = load %struct.xpvhv*, %struct.xpvhv** %sv_any122, align 8
  %xhv_max123 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %105, i32 0, i32 3
  %106 = load i64, i64* %xhv_max123, align 8
  %add124 = add i64 %106, 1
  %arrayidx125 = getelementptr inbounds %struct.he*, %struct.he** %103, i64 %add124
  %107 = bitcast %struct.he** %arrayidx125 to %struct.xpvhv_aux*
  %xhv_name_u126 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %107, i32 0, i32 0
  %xhvnameu_name127 = bitcast %union._xhvnameu* %xhv_name_u126 to %struct.hek**
  %108 = load %struct.hek*, %struct.hek** %xhvnameu_name127, align 8
  %tobool128 = icmp ne %struct.hek* %108, null
  br i1 %tobool128, label %land.lhs.true129, label %cond.false190

land.lhs.true129:                                 ; preds = %land.lhs.true119
  %109 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u130 = getelementptr inbounds %struct.hv, %struct.hv* %109, i32 0, i32 3
  %svu_hash131 = bitcast %union.anon.4* %sv_u130 to %struct.he***
  %110 = load %struct.he**, %struct.he*** %svu_hash131, align 8
  %111 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any132 = getelementptr inbounds %struct.hv, %struct.hv* %111, i32 0, i32 0
  %112 = load %struct.xpvhv*, %struct.xpvhv** %sv_any132, align 8
  %xhv_max133 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %112, i32 0, i32 3
  %113 = load i64, i64* %xhv_max133, align 8
  %add134 = add i64 %113, 1
  %arrayidx135 = getelementptr inbounds %struct.he*, %struct.he** %110, i64 %add134
  %114 = bitcast %struct.he** %arrayidx135 to %struct.xpvhv_aux*
  %xhv_name_count136 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %114, i32 0, i32 4
  %115 = load i32, i32* %xhv_name_count136, align 4
  %tobool137 = icmp ne i32 %115, 0
  br i1 %tobool137, label %cond.true138, label %cond.false148

cond.true138:                                     ; preds = %land.lhs.true129
  %116 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u139 = getelementptr inbounds %struct.hv, %struct.hv* %116, i32 0, i32 3
  %svu_hash140 = bitcast %union.anon.4* %sv_u139 to %struct.he***
  %117 = load %struct.he**, %struct.he*** %svu_hash140, align 8
  %118 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any141 = getelementptr inbounds %struct.hv, %struct.hv* %118, i32 0, i32 0
  %119 = load %struct.xpvhv*, %struct.xpvhv** %sv_any141, align 8
  %xhv_max142 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %119, i32 0, i32 3
  %120 = load i64, i64* %xhv_max142, align 8
  %add143 = add i64 %120, 1
  %arrayidx144 = getelementptr inbounds %struct.he*, %struct.he** %117, i64 %add143
  %121 = bitcast %struct.he** %arrayidx144 to %struct.xpvhv_aux*
  %xhv_name_u145 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %121, i32 0, i32 0
  %xhvnameu_names146 = bitcast %union._xhvnameu* %xhv_name_u145 to %struct.hek***
  %122 = load %struct.hek**, %struct.hek*** %xhvnameu_names146, align 8
  %123 = load %struct.hek*, %struct.hek** %122, align 8
  %tobool147 = icmp ne %struct.hek* %123, null
  br i1 %tobool147, label %cond.true158, label %cond.false190

cond.false148:                                    ; preds = %land.lhs.true129
  %124 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u149 = getelementptr inbounds %struct.hv, %struct.hv* %124, i32 0, i32 3
  %svu_hash150 = bitcast %union.anon.4* %sv_u149 to %struct.he***
  %125 = load %struct.he**, %struct.he*** %svu_hash150, align 8
  %126 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any151 = getelementptr inbounds %struct.hv, %struct.hv* %126, i32 0, i32 0
  %127 = load %struct.xpvhv*, %struct.xpvhv** %sv_any151, align 8
  %xhv_max152 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %127, i32 0, i32 3
  %128 = load i64, i64* %xhv_max152, align 8
  %add153 = add i64 %128, 1
  %arrayidx154 = getelementptr inbounds %struct.he*, %struct.he** %125, i64 %add153
  %129 = bitcast %struct.he** %arrayidx154 to %struct.xpvhv_aux*
  %xhv_name_u155 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %129, i32 0, i32 0
  %xhvnameu_name156 = bitcast %union._xhvnameu* %xhv_name_u155 to %struct.hek**
  %130 = load %struct.hek*, %struct.hek** %xhvnameu_name156, align 8
  %tobool157 = icmp ne %struct.hek* %130, null
  br i1 %tobool157, label %cond.true158, label %cond.false190

cond.true158:                                     ; preds = %cond.false148, %cond.true138
  %131 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u159 = getelementptr inbounds %struct.hv, %struct.hv* %131, i32 0, i32 3
  %svu_hash160 = bitcast %union.anon.4* %sv_u159 to %struct.he***
  %132 = load %struct.he**, %struct.he*** %svu_hash160, align 8
  %133 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any161 = getelementptr inbounds %struct.hv, %struct.hv* %133, i32 0, i32 0
  %134 = load %struct.xpvhv*, %struct.xpvhv** %sv_any161, align 8
  %xhv_max162 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %134, i32 0, i32 3
  %135 = load i64, i64* %xhv_max162, align 8
  %add163 = add i64 %135, 1
  %arrayidx164 = getelementptr inbounds %struct.he*, %struct.he** %132, i64 %add163
  %136 = bitcast %struct.he** %arrayidx164 to %struct.xpvhv_aux*
  %xhv_name_count165 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %136, i32 0, i32 4
  %137 = load i32, i32* %xhv_name_count165, align 4
  %tobool166 = icmp ne i32 %137, 0
  br i1 %tobool166, label %cond.true167, label %cond.false176

cond.true167:                                     ; preds = %cond.true158
  %138 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u168 = getelementptr inbounds %struct.hv, %struct.hv* %138, i32 0, i32 3
  %svu_hash169 = bitcast %union.anon.4* %sv_u168 to %struct.he***
  %139 = load %struct.he**, %struct.he*** %svu_hash169, align 8
  %140 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any170 = getelementptr inbounds %struct.hv, %struct.hv* %140, i32 0, i32 0
  %141 = load %struct.xpvhv*, %struct.xpvhv** %sv_any170, align 8
  %xhv_max171 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %141, i32 0, i32 3
  %142 = load i64, i64* %xhv_max171, align 8
  %add172 = add i64 %142, 1
  %arrayidx173 = getelementptr inbounds %struct.he*, %struct.he** %139, i64 %add172
  %143 = bitcast %struct.he** %arrayidx173 to %struct.xpvhv_aux*
  %xhv_name_u174 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %143, i32 0, i32 0
  %xhvnameu_names175 = bitcast %union._xhvnameu* %xhv_name_u174 to %struct.hek***
  %144 = load %struct.hek**, %struct.hek*** %xhvnameu_names175, align 8
  %145 = load %struct.hek*, %struct.hek** %144, align 8
  br label %cond.end185

cond.false176:                                    ; preds = %cond.true158
  %146 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u177 = getelementptr inbounds %struct.hv, %struct.hv* %146, i32 0, i32 3
  %svu_hash178 = bitcast %union.anon.4* %sv_u177 to %struct.he***
  %147 = load %struct.he**, %struct.he*** %svu_hash178, align 8
  %148 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any179 = getelementptr inbounds %struct.hv, %struct.hv* %148, i32 0, i32 0
  %149 = load %struct.xpvhv*, %struct.xpvhv** %sv_any179, align 8
  %xhv_max180 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %149, i32 0, i32 3
  %150 = load i64, i64* %xhv_max180, align 8
  %add181 = add i64 %150, 1
  %arrayidx182 = getelementptr inbounds %struct.he*, %struct.he** %147, i64 %add181
  %151 = bitcast %struct.he** %arrayidx182 to %struct.xpvhv_aux*
  %xhv_name_u183 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %151, i32 0, i32 0
  %xhvnameu_name184 = bitcast %union._xhvnameu* %xhv_name_u183 to %struct.hek**
  %152 = load %struct.hek*, %struct.hek** %xhvnameu_name184, align 8
  br label %cond.end185

cond.end185:                                      ; preds = %cond.false176, %cond.true167
  %cond186 = phi %struct.hek* [ %145, %cond.true167 ], [ %152, %cond.false176 ]
  %hek_key187 = getelementptr inbounds %struct.hek, %struct.hek* %cond186, i32 0, i32 2
  %arraydecay188 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key187, i64 0, i64 0
  %tobool189 = icmp ne i8* %arraydecay188, null
  br i1 %tobool189, label %land.lhs.true191, label %cond.false195

cond.false190:                                    ; preds = %cond.false148, %cond.true138, %land.lhs.true119, %if.end115
  br i1 false, label %land.lhs.true191, label %cond.false195

land.lhs.true191:                                 ; preds = %cond.false190, %cond.end185
  %153 = load %struct.hv*, %struct.hv** %stash, align 8
  %call192 = call i32 @Perl_Gv_AMupdate(%struct.hv* %153, i1 zeroext false)
  %tobool193 = icmp ne i32 %call192, 0
  br i1 %tobool193, label %cond.true194, label %cond.false195

cond.true194:                                     ; preds = %land.lhs.true191
  br i1 true, label %if.end364, label %if.then198

cond.false195:                                    ; preds = %land.lhs.true191, %cond.false190, %cond.end185
  %154 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags196 = getelementptr inbounds %struct.hv, %struct.hv* %154, i32 0, i32 2
  %155 = load i32, i32* %sv_flags196, align 4
  %and197 = and i32 %155, -268435457
  store i32 %and197, i32* %sv_flags196, align 4
  br i1 false, label %if.end364, label %if.then198

if.then198:                                       ; preds = %cond.false195, %cond.true194
  %156 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags199 = getelementptr inbounds %struct.hv, %struct.hv* %156, i32 0, i32 2
  %157 = load i32, i32* %sv_flags199, align 4
  %and200 = and i32 %157, 33554432
  %tobool201 = icmp ne i32 %and200, 0
  br i1 %tobool201, label %land.lhs.true202, label %cond.false272

land.lhs.true202:                                 ; preds = %if.then198
  %158 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u203 = getelementptr inbounds %struct.hv, %struct.hv* %158, i32 0, i32 3
  %svu_hash204 = bitcast %union.anon.4* %sv_u203 to %struct.he***
  %159 = load %struct.he**, %struct.he*** %svu_hash204, align 8
  %160 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any205 = getelementptr inbounds %struct.hv, %struct.hv* %160, i32 0, i32 0
  %161 = load %struct.xpvhv*, %struct.xpvhv** %sv_any205, align 8
  %xhv_max206 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %161, i32 0, i32 3
  %162 = load i64, i64* %xhv_max206, align 8
  %add207 = add i64 %162, 1
  %arrayidx208 = getelementptr inbounds %struct.he*, %struct.he** %159, i64 %add207
  %163 = bitcast %struct.he** %arrayidx208 to %struct.xpvhv_aux*
  %xhv_name_u209 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %163, i32 0, i32 0
  %xhvnameu_name210 = bitcast %union._xhvnameu* %xhv_name_u209 to %struct.hek**
  %164 = load %struct.hek*, %struct.hek** %xhvnameu_name210, align 8
  %tobool211 = icmp ne %struct.hek* %164, null
  br i1 %tobool211, label %land.lhs.true212, label %cond.false272

land.lhs.true212:                                 ; preds = %land.lhs.true202
  %165 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u213 = getelementptr inbounds %struct.hv, %struct.hv* %165, i32 0, i32 3
  %svu_hash214 = bitcast %union.anon.4* %sv_u213 to %struct.he***
  %166 = load %struct.he**, %struct.he*** %svu_hash214, align 8
  %167 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any215 = getelementptr inbounds %struct.hv, %struct.hv* %167, i32 0, i32 0
  %168 = load %struct.xpvhv*, %struct.xpvhv** %sv_any215, align 8
  %xhv_max216 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %168, i32 0, i32 3
  %169 = load i64, i64* %xhv_max216, align 8
  %add217 = add i64 %169, 1
  %arrayidx218 = getelementptr inbounds %struct.he*, %struct.he** %166, i64 %add217
  %170 = bitcast %struct.he** %arrayidx218 to %struct.xpvhv_aux*
  %xhv_name_count219 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %170, i32 0, i32 4
  %171 = load i32, i32* %xhv_name_count219, align 4
  %tobool220 = icmp ne i32 %171, 0
  br i1 %tobool220, label %cond.true221, label %cond.false231

cond.true221:                                     ; preds = %land.lhs.true212
  %172 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u222 = getelementptr inbounds %struct.hv, %struct.hv* %172, i32 0, i32 3
  %svu_hash223 = bitcast %union.anon.4* %sv_u222 to %struct.he***
  %173 = load %struct.he**, %struct.he*** %svu_hash223, align 8
  %174 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any224 = getelementptr inbounds %struct.hv, %struct.hv* %174, i32 0, i32 0
  %175 = load %struct.xpvhv*, %struct.xpvhv** %sv_any224, align 8
  %xhv_max225 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %175, i32 0, i32 3
  %176 = load i64, i64* %xhv_max225, align 8
  %add226 = add i64 %176, 1
  %arrayidx227 = getelementptr inbounds %struct.he*, %struct.he** %173, i64 %add226
  %177 = bitcast %struct.he** %arrayidx227 to %struct.xpvhv_aux*
  %xhv_name_u228 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %177, i32 0, i32 0
  %xhvnameu_names229 = bitcast %union._xhvnameu* %xhv_name_u228 to %struct.hek***
  %178 = load %struct.hek**, %struct.hek*** %xhvnameu_names229, align 8
  %179 = load %struct.hek*, %struct.hek** %178, align 8
  %tobool230 = icmp ne %struct.hek* %179, null
  br i1 %tobool230, label %cond.true241, label %cond.false272

cond.false231:                                    ; preds = %land.lhs.true212
  %180 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u232 = getelementptr inbounds %struct.hv, %struct.hv* %180, i32 0, i32 3
  %svu_hash233 = bitcast %union.anon.4* %sv_u232 to %struct.he***
  %181 = load %struct.he**, %struct.he*** %svu_hash233, align 8
  %182 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any234 = getelementptr inbounds %struct.hv, %struct.hv* %182, i32 0, i32 0
  %183 = load %struct.xpvhv*, %struct.xpvhv** %sv_any234, align 8
  %xhv_max235 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %183, i32 0, i32 3
  %184 = load i64, i64* %xhv_max235, align 8
  %add236 = add i64 %184, 1
  %arrayidx237 = getelementptr inbounds %struct.he*, %struct.he** %181, i64 %add236
  %185 = bitcast %struct.he** %arrayidx237 to %struct.xpvhv_aux*
  %xhv_name_u238 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %185, i32 0, i32 0
  %xhvnameu_name239 = bitcast %union._xhvnameu* %xhv_name_u238 to %struct.hek**
  %186 = load %struct.hek*, %struct.hek** %xhvnameu_name239, align 8
  %tobool240 = icmp ne %struct.hek* %186, null
  br i1 %tobool240, label %cond.true241, label %cond.false272

cond.true241:                                     ; preds = %cond.false231, %cond.true221
  %187 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u242 = getelementptr inbounds %struct.hv, %struct.hv* %187, i32 0, i32 3
  %svu_hash243 = bitcast %union.anon.4* %sv_u242 to %struct.he***
  %188 = load %struct.he**, %struct.he*** %svu_hash243, align 8
  %189 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any244 = getelementptr inbounds %struct.hv, %struct.hv* %189, i32 0, i32 0
  %190 = load %struct.xpvhv*, %struct.xpvhv** %sv_any244, align 8
  %xhv_max245 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %190, i32 0, i32 3
  %191 = load i64, i64* %xhv_max245, align 8
  %add246 = add i64 %191, 1
  %arrayidx247 = getelementptr inbounds %struct.he*, %struct.he** %188, i64 %add246
  %192 = bitcast %struct.he** %arrayidx247 to %struct.xpvhv_aux*
  %xhv_name_count248 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %192, i32 0, i32 4
  %193 = load i32, i32* %xhv_name_count248, align 4
  %tobool249 = icmp ne i32 %193, 0
  br i1 %tobool249, label %cond.true250, label %cond.false259

cond.true250:                                     ; preds = %cond.true241
  %194 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u251 = getelementptr inbounds %struct.hv, %struct.hv* %194, i32 0, i32 3
  %svu_hash252 = bitcast %union.anon.4* %sv_u251 to %struct.he***
  %195 = load %struct.he**, %struct.he*** %svu_hash252, align 8
  %196 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any253 = getelementptr inbounds %struct.hv, %struct.hv* %196, i32 0, i32 0
  %197 = load %struct.xpvhv*, %struct.xpvhv** %sv_any253, align 8
  %xhv_max254 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %197, i32 0, i32 3
  %198 = load i64, i64* %xhv_max254, align 8
  %add255 = add i64 %198, 1
  %arrayidx256 = getelementptr inbounds %struct.he*, %struct.he** %195, i64 %add255
  %199 = bitcast %struct.he** %arrayidx256 to %struct.xpvhv_aux*
  %xhv_name_u257 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %199, i32 0, i32 0
  %xhvnameu_names258 = bitcast %union._xhvnameu* %xhv_name_u257 to %struct.hek***
  %200 = load %struct.hek**, %struct.hek*** %xhvnameu_names258, align 8
  %201 = load %struct.hek*, %struct.hek** %200, align 8
  br label %cond.end268

cond.false259:                                    ; preds = %cond.true241
  %202 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u260 = getelementptr inbounds %struct.hv, %struct.hv* %202, i32 0, i32 3
  %svu_hash261 = bitcast %union.anon.4* %sv_u260 to %struct.he***
  %203 = load %struct.he**, %struct.he*** %svu_hash261, align 8
  %204 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any262 = getelementptr inbounds %struct.hv, %struct.hv* %204, i32 0, i32 0
  %205 = load %struct.xpvhv*, %struct.xpvhv** %sv_any262, align 8
  %xhv_max263 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %205, i32 0, i32 3
  %206 = load i64, i64* %xhv_max263, align 8
  %add264 = add i64 %206, 1
  %arrayidx265 = getelementptr inbounds %struct.he*, %struct.he** %203, i64 %add264
  %207 = bitcast %struct.he** %arrayidx265 to %struct.xpvhv_aux*
  %xhv_name_u266 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %207, i32 0, i32 0
  %xhvnameu_name267 = bitcast %union._xhvnameu* %xhv_name_u266 to %struct.hek**
  %208 = load %struct.hek*, %struct.hek** %xhvnameu_name267, align 8
  br label %cond.end268

cond.end268:                                      ; preds = %cond.false259, %cond.true250
  %cond269 = phi %struct.hek* [ %201, %cond.true250 ], [ %208, %cond.false259 ]
  %hek_key270 = getelementptr inbounds %struct.hek, %struct.hek* %cond269, i32 0, i32 2
  %arraydecay271 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key270, i64 0, i64 0
  br label %cond.end273

cond.false272:                                    ; preds = %cond.false231, %cond.true221, %land.lhs.true202, %if.then198
  br label %cond.end273

cond.end273:                                      ; preds = %cond.false272, %cond.end268
  %cond274 = phi i8* [ %arraydecay271, %cond.end268 ], [ null, %cond.false272 ]
  store i8* %cond274, i8** %package, align 8
  %209 = load i8*, i8** %package, align 8
  %call275 = call %struct.sv* @Perl_newSVpv(i8* %209, i64 0)
  call void (i32, %struct.sv*, %struct.sv*, ...) @Perl_load_module(i32 2, %struct.sv* %call275, %struct.sv* null)
  %210 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags276 = getelementptr inbounds %struct.hv, %struct.hv* %210, i32 0, i32 2
  %211 = load i32, i32* %sv_flags276, align 4
  %and277 = and i32 %211, 33554432
  %tobool278 = icmp ne i32 %and277, 0
  br i1 %tobool278, label %land.lhs.true279, label %cond.false350

land.lhs.true279:                                 ; preds = %cond.end273
  %212 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u280 = getelementptr inbounds %struct.hv, %struct.hv* %212, i32 0, i32 3
  %svu_hash281 = bitcast %union.anon.4* %sv_u280 to %struct.he***
  %213 = load %struct.he**, %struct.he*** %svu_hash281, align 8
  %214 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any282 = getelementptr inbounds %struct.hv, %struct.hv* %214, i32 0, i32 0
  %215 = load %struct.xpvhv*, %struct.xpvhv** %sv_any282, align 8
  %xhv_max283 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %215, i32 0, i32 3
  %216 = load i64, i64* %xhv_max283, align 8
  %add284 = add i64 %216, 1
  %arrayidx285 = getelementptr inbounds %struct.he*, %struct.he** %213, i64 %add284
  %217 = bitcast %struct.he** %arrayidx285 to %struct.xpvhv_aux*
  %xhv_name_u286 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %217, i32 0, i32 0
  %xhvnameu_name287 = bitcast %union._xhvnameu* %xhv_name_u286 to %struct.hek**
  %218 = load %struct.hek*, %struct.hek** %xhvnameu_name287, align 8
  %tobool288 = icmp ne %struct.hek* %218, null
  br i1 %tobool288, label %land.lhs.true289, label %cond.false350

land.lhs.true289:                                 ; preds = %land.lhs.true279
  %219 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u290 = getelementptr inbounds %struct.hv, %struct.hv* %219, i32 0, i32 3
  %svu_hash291 = bitcast %union.anon.4* %sv_u290 to %struct.he***
  %220 = load %struct.he**, %struct.he*** %svu_hash291, align 8
  %221 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any292 = getelementptr inbounds %struct.hv, %struct.hv* %221, i32 0, i32 0
  %222 = load %struct.xpvhv*, %struct.xpvhv** %sv_any292, align 8
  %xhv_max293 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %222, i32 0, i32 3
  %223 = load i64, i64* %xhv_max293, align 8
  %add294 = add i64 %223, 1
  %arrayidx295 = getelementptr inbounds %struct.he*, %struct.he** %220, i64 %add294
  %224 = bitcast %struct.he** %arrayidx295 to %struct.xpvhv_aux*
  %xhv_name_count296 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %224, i32 0, i32 4
  %225 = load i32, i32* %xhv_name_count296, align 4
  %tobool297 = icmp ne i32 %225, 0
  br i1 %tobool297, label %cond.true298, label %cond.false308

cond.true298:                                     ; preds = %land.lhs.true289
  %226 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u299 = getelementptr inbounds %struct.hv, %struct.hv* %226, i32 0, i32 3
  %svu_hash300 = bitcast %union.anon.4* %sv_u299 to %struct.he***
  %227 = load %struct.he**, %struct.he*** %svu_hash300, align 8
  %228 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any301 = getelementptr inbounds %struct.hv, %struct.hv* %228, i32 0, i32 0
  %229 = load %struct.xpvhv*, %struct.xpvhv** %sv_any301, align 8
  %xhv_max302 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %229, i32 0, i32 3
  %230 = load i64, i64* %xhv_max302, align 8
  %add303 = add i64 %230, 1
  %arrayidx304 = getelementptr inbounds %struct.he*, %struct.he** %227, i64 %add303
  %231 = bitcast %struct.he** %arrayidx304 to %struct.xpvhv_aux*
  %xhv_name_u305 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %231, i32 0, i32 0
  %xhvnameu_names306 = bitcast %union._xhvnameu* %xhv_name_u305 to %struct.hek***
  %232 = load %struct.hek**, %struct.hek*** %xhvnameu_names306, align 8
  %233 = load %struct.hek*, %struct.hek** %232, align 8
  %tobool307 = icmp ne %struct.hek* %233, null
  br i1 %tobool307, label %cond.true318, label %cond.false350

cond.false308:                                    ; preds = %land.lhs.true289
  %234 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u309 = getelementptr inbounds %struct.hv, %struct.hv* %234, i32 0, i32 3
  %svu_hash310 = bitcast %union.anon.4* %sv_u309 to %struct.he***
  %235 = load %struct.he**, %struct.he*** %svu_hash310, align 8
  %236 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any311 = getelementptr inbounds %struct.hv, %struct.hv* %236, i32 0, i32 0
  %237 = load %struct.xpvhv*, %struct.xpvhv** %sv_any311, align 8
  %xhv_max312 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %237, i32 0, i32 3
  %238 = load i64, i64* %xhv_max312, align 8
  %add313 = add i64 %238, 1
  %arrayidx314 = getelementptr inbounds %struct.he*, %struct.he** %235, i64 %add313
  %239 = bitcast %struct.he** %arrayidx314 to %struct.xpvhv_aux*
  %xhv_name_u315 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %239, i32 0, i32 0
  %xhvnameu_name316 = bitcast %union._xhvnameu* %xhv_name_u315 to %struct.hek**
  %240 = load %struct.hek*, %struct.hek** %xhvnameu_name316, align 8
  %tobool317 = icmp ne %struct.hek* %240, null
  br i1 %tobool317, label %cond.true318, label %cond.false350

cond.true318:                                     ; preds = %cond.false308, %cond.true298
  %241 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u319 = getelementptr inbounds %struct.hv, %struct.hv* %241, i32 0, i32 3
  %svu_hash320 = bitcast %union.anon.4* %sv_u319 to %struct.he***
  %242 = load %struct.he**, %struct.he*** %svu_hash320, align 8
  %243 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any321 = getelementptr inbounds %struct.hv, %struct.hv* %243, i32 0, i32 0
  %244 = load %struct.xpvhv*, %struct.xpvhv** %sv_any321, align 8
  %xhv_max322 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %244, i32 0, i32 3
  %245 = load i64, i64* %xhv_max322, align 8
  %add323 = add i64 %245, 1
  %arrayidx324 = getelementptr inbounds %struct.he*, %struct.he** %242, i64 %add323
  %246 = bitcast %struct.he** %arrayidx324 to %struct.xpvhv_aux*
  %xhv_name_count325 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %246, i32 0, i32 4
  %247 = load i32, i32* %xhv_name_count325, align 4
  %tobool326 = icmp ne i32 %247, 0
  br i1 %tobool326, label %cond.true327, label %cond.false336

cond.true327:                                     ; preds = %cond.true318
  %248 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u328 = getelementptr inbounds %struct.hv, %struct.hv* %248, i32 0, i32 3
  %svu_hash329 = bitcast %union.anon.4* %sv_u328 to %struct.he***
  %249 = load %struct.he**, %struct.he*** %svu_hash329, align 8
  %250 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any330 = getelementptr inbounds %struct.hv, %struct.hv* %250, i32 0, i32 0
  %251 = load %struct.xpvhv*, %struct.xpvhv** %sv_any330, align 8
  %xhv_max331 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %251, i32 0, i32 3
  %252 = load i64, i64* %xhv_max331, align 8
  %add332 = add i64 %252, 1
  %arrayidx333 = getelementptr inbounds %struct.he*, %struct.he** %249, i64 %add332
  %253 = bitcast %struct.he** %arrayidx333 to %struct.xpvhv_aux*
  %xhv_name_u334 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %253, i32 0, i32 0
  %xhvnameu_names335 = bitcast %union._xhvnameu* %xhv_name_u334 to %struct.hek***
  %254 = load %struct.hek**, %struct.hek*** %xhvnameu_names335, align 8
  %255 = load %struct.hek*, %struct.hek** %254, align 8
  br label %cond.end345

cond.false336:                                    ; preds = %cond.true318
  %256 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u337 = getelementptr inbounds %struct.hv, %struct.hv* %256, i32 0, i32 3
  %svu_hash338 = bitcast %union.anon.4* %sv_u337 to %struct.he***
  %257 = load %struct.he**, %struct.he*** %svu_hash338, align 8
  %258 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any339 = getelementptr inbounds %struct.hv, %struct.hv* %258, i32 0, i32 0
  %259 = load %struct.xpvhv*, %struct.xpvhv** %sv_any339, align 8
  %xhv_max340 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %259, i32 0, i32 3
  %260 = load i64, i64* %xhv_max340, align 8
  %add341 = add i64 %260, 1
  %arrayidx342 = getelementptr inbounds %struct.he*, %struct.he** %257, i64 %add341
  %261 = bitcast %struct.he** %arrayidx342 to %struct.xpvhv_aux*
  %xhv_name_u343 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %261, i32 0, i32 0
  %xhvnameu_name344 = bitcast %union._xhvnameu* %xhv_name_u343 to %struct.hek**
  %262 = load %struct.hek*, %struct.hek** %xhvnameu_name344, align 8
  br label %cond.end345

cond.end345:                                      ; preds = %cond.false336, %cond.true327
  %cond346 = phi %struct.hek* [ %255, %cond.true327 ], [ %262, %cond.false336 ]
  %hek_key347 = getelementptr inbounds %struct.hek, %struct.hek* %cond346, i32 0, i32 2
  %arraydecay348 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key347, i64 0, i64 0
  %tobool349 = icmp ne i8* %arraydecay348, null
  br i1 %tobool349, label %land.lhs.true351, label %cond.false355

cond.false350:                                    ; preds = %cond.false308, %cond.true298, %land.lhs.true279, %cond.end273
  br i1 false, label %land.lhs.true351, label %cond.false355

land.lhs.true351:                                 ; preds = %cond.false350, %cond.end345
  %263 = load %struct.hv*, %struct.hv** %stash, align 8
  %call352 = call i32 @Perl_Gv_AMupdate(%struct.hv* %263, i1 zeroext false)
  %tobool353 = icmp ne i32 %call352, 0
  br i1 %tobool353, label %cond.true354, label %cond.false355

cond.true354:                                     ; preds = %land.lhs.true351
  br i1 true, label %if.end363, label %if.then358

cond.false355:                                    ; preds = %land.lhs.true351, %cond.false350, %cond.end345
  %264 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags356 = getelementptr inbounds %struct.hv, %struct.hv* %264, i32 0, i32 2
  %265 = load i32, i32* %sv_flags356, align 4
  %and357 = and i32 %265, -268435457
  store i32 %and357, i32* %sv_flags356, align 4
  br i1 false, label %if.end363, label %if.then358

if.then358:                                       ; preds = %cond.false355, %cond.true354
  br label %do.body359

do.body359:                                       ; preds = %if.then358
  %266 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty360 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %266, i32 0, i32 19
  store i32 1, i32* %s_dirty360, align 8
  %267 = load %struct.sv*, %struct.sv** %sv, align 8
  %call361 = call i8* @Perl_sv_reftype(%struct.sv* %267, i32 0)
  %268 = load %struct.sv*, %struct.sv** %sv, align 8
  %269 = ptrtoint %struct.sv* %268 to i64
  %270 = load i8*, i8** %package, align 8
  %271 = load i8*, i8** %package, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.76, i64 0, i64 0), i8* %call361, i64 %269, i8* %270, i8* %271)
  br label %do.end362

do.end362:                                        ; preds = %do.body359
  br label %if.end363

if.end363:                                        ; preds = %do.end362, %cond.false355, %cond.true354
  br label %if.end364

if.end364:                                        ; preds = %if.end363, %cond.false195, %cond.true194
  %272 = load %struct.sv*, %struct.sv** %rv, align 8
  call void @SvAMAGIC_on(%struct.sv* %272)
  %273 = load %struct.sv*, %struct.sv** %rv, align 8
  store %struct.sv* %273, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end364, %if.then92, %if.then
  %274 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %274
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_tied_key(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %tv = alloca %struct.sv*, align 8
  %sv = alloca %struct.sv*, align 8
  %key = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %call = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call, %struct.sv** %tv, align 8
  %0 = load i8*, i8** %cname.addr, align 8
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %cname.addr, align 8
  %call1 = call %struct.hv* @Perl_gv_stashpv(i8* %1, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call1, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  br label %do.body

do.body:                                          ; preds = %cond.end
  br label %do.body2

do.body2:                                         ; preds = %do.body
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 5
  %3 = load %struct.av*, %struct.av** %aseen, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 10
  %5 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %5, 1
  store i64 %inc, i64* %tagnum, align 8
  %6 = load %struct.sv*, %struct.sv** %tv, align 8
  %7 = bitcast %struct.sv* %6 to i8*
  %8 = bitcast i8* %7 to %struct.sv*
  %call3 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %8)
  %call4 = call %struct.sv** @Perl_av_store(%struct.av* %3, i64 %5, %struct.sv* %call3)
  %cmp = icmp eq %struct.sv** %call4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body2
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %do.body2
  br label %do.end

do.end:                                           ; preds = %if.end
  %9 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool5 = icmp ne %struct.hv* %9, null
  br i1 %tobool5, label %if.then6, label %if.end86

if.then6:                                         ; preds = %do.end
  br label %do.body7

do.body7:                                         ; preds = %if.then6
  %10 = load %struct.sv*, %struct.sv** %tv, align 8
  %call8 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %10)
  store %struct.sv* %call8, %struct.sv** %ref, align 8
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 30
  %12 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool9 = icmp ne i32 %12, 0
  br i1 %tobool9, label %land.lhs.true, label %if.end80

land.lhs.true:                                    ; preds = %do.body7
  %13 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %13, i32 0, i32 2
  %14 = load i32, i32* %sv_flags, align 4
  %and = and i32 %14, 33554432
  %tobool10 = icmp ne i32 %and, 0
  br i1 %tobool10, label %land.lhs.true11, label %cond.false70

land.lhs.true11:                                  ; preds = %land.lhs.true
  %15 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %15, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %16 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %17 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %17, i32 0, i32 0
  %18 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %18, i32 0, i32 3
  %19 = load i64, i64* %xhv_max, align 8
  %add = add i64 %19, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %16, i64 %add
  %20 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %20, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %21 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool12 = icmp ne %struct.hek* %21, null
  br i1 %tobool12, label %land.lhs.true13, label %cond.false70

land.lhs.true13:                                  ; preds = %land.lhs.true11
  %22 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u14 = getelementptr inbounds %struct.hv, %struct.hv* %22, i32 0, i32 3
  %svu_hash15 = bitcast %union.anon.4* %sv_u14 to %struct.he***
  %23 = load %struct.he**, %struct.he*** %svu_hash15, align 8
  %24 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any16 = getelementptr inbounds %struct.hv, %struct.hv* %24, i32 0, i32 0
  %25 = load %struct.xpvhv*, %struct.xpvhv** %sv_any16, align 8
  %xhv_max17 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %25, i32 0, i32 3
  %26 = load i64, i64* %xhv_max17, align 8
  %add18 = add i64 %26, 1
  %arrayidx19 = getelementptr inbounds %struct.he*, %struct.he** %23, i64 %add18
  %27 = bitcast %struct.he** %arrayidx19 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %27, i32 0, i32 4
  %28 = load i32, i32* %xhv_name_count, align 4
  %tobool20 = icmp ne i32 %28, 0
  br i1 %tobool20, label %cond.true21, label %cond.false30

cond.true21:                                      ; preds = %land.lhs.true13
  %29 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u22 = getelementptr inbounds %struct.hv, %struct.hv* %29, i32 0, i32 3
  %svu_hash23 = bitcast %union.anon.4* %sv_u22 to %struct.he***
  %30 = load %struct.he**, %struct.he*** %svu_hash23, align 8
  %31 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any24 = getelementptr inbounds %struct.hv, %struct.hv* %31, i32 0, i32 0
  %32 = load %struct.xpvhv*, %struct.xpvhv** %sv_any24, align 8
  %xhv_max25 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %32, i32 0, i32 3
  %33 = load i64, i64* %xhv_max25, align 8
  %add26 = add i64 %33, 1
  %arrayidx27 = getelementptr inbounds %struct.he*, %struct.he** %30, i64 %add26
  %34 = bitcast %struct.he** %arrayidx27 to %struct.xpvhv_aux*
  %xhv_name_u28 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %34, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u28 to %struct.hek***
  %35 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %36 = load %struct.hek*, %struct.hek** %35, align 8
  %tobool29 = icmp ne %struct.hek* %36, null
  br i1 %tobool29, label %cond.true40, label %cond.false70

cond.false30:                                     ; preds = %land.lhs.true13
  %37 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u31 = getelementptr inbounds %struct.hv, %struct.hv* %37, i32 0, i32 3
  %svu_hash32 = bitcast %union.anon.4* %sv_u31 to %struct.he***
  %38 = load %struct.he**, %struct.he*** %svu_hash32, align 8
  %39 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any33 = getelementptr inbounds %struct.hv, %struct.hv* %39, i32 0, i32 0
  %40 = load %struct.xpvhv*, %struct.xpvhv** %sv_any33, align 8
  %xhv_max34 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %40, i32 0, i32 3
  %41 = load i64, i64* %xhv_max34, align 8
  %add35 = add i64 %41, 1
  %arrayidx36 = getelementptr inbounds %struct.he*, %struct.he** %38, i64 %add35
  %42 = bitcast %struct.he** %arrayidx36 to %struct.xpvhv_aux*
  %xhv_name_u37 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %42, i32 0, i32 0
  %xhvnameu_name38 = bitcast %union._xhvnameu* %xhv_name_u37 to %struct.hek**
  %43 = load %struct.hek*, %struct.hek** %xhvnameu_name38, align 8
  %tobool39 = icmp ne %struct.hek* %43, null
  br i1 %tobool39, label %cond.true40, label %cond.false70

cond.true40:                                      ; preds = %cond.false30, %cond.true21
  %44 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u41 = getelementptr inbounds %struct.hv, %struct.hv* %44, i32 0, i32 3
  %svu_hash42 = bitcast %union.anon.4* %sv_u41 to %struct.he***
  %45 = load %struct.he**, %struct.he*** %svu_hash42, align 8
  %46 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any43 = getelementptr inbounds %struct.hv, %struct.hv* %46, i32 0, i32 0
  %47 = load %struct.xpvhv*, %struct.xpvhv** %sv_any43, align 8
  %xhv_max44 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %47, i32 0, i32 3
  %48 = load i64, i64* %xhv_max44, align 8
  %add45 = add i64 %48, 1
  %arrayidx46 = getelementptr inbounds %struct.he*, %struct.he** %45, i64 %add45
  %49 = bitcast %struct.he** %arrayidx46 to %struct.xpvhv_aux*
  %xhv_name_count47 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %49, i32 0, i32 4
  %50 = load i32, i32* %xhv_name_count47, align 4
  %tobool48 = icmp ne i32 %50, 0
  br i1 %tobool48, label %cond.true49, label %cond.false58

cond.true49:                                      ; preds = %cond.true40
  %51 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u50 = getelementptr inbounds %struct.hv, %struct.hv* %51, i32 0, i32 3
  %svu_hash51 = bitcast %union.anon.4* %sv_u50 to %struct.he***
  %52 = load %struct.he**, %struct.he*** %svu_hash51, align 8
  %53 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any52 = getelementptr inbounds %struct.hv, %struct.hv* %53, i32 0, i32 0
  %54 = load %struct.xpvhv*, %struct.xpvhv** %sv_any52, align 8
  %xhv_max53 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %54, i32 0, i32 3
  %55 = load i64, i64* %xhv_max53, align 8
  %add54 = add i64 %55, 1
  %arrayidx55 = getelementptr inbounds %struct.he*, %struct.he** %52, i64 %add54
  %56 = bitcast %struct.he** %arrayidx55 to %struct.xpvhv_aux*
  %xhv_name_u56 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %56, i32 0, i32 0
  %xhvnameu_names57 = bitcast %union._xhvnameu* %xhv_name_u56 to %struct.hek***
  %57 = load %struct.hek**, %struct.hek*** %xhvnameu_names57, align 8
  %58 = load %struct.hek*, %struct.hek** %57, align 8
  br label %cond.end67

cond.false58:                                     ; preds = %cond.true40
  %59 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u59 = getelementptr inbounds %struct.hv, %struct.hv* %59, i32 0, i32 3
  %svu_hash60 = bitcast %union.anon.4* %sv_u59 to %struct.he***
  %60 = load %struct.he**, %struct.he*** %svu_hash60, align 8
  %61 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any61 = getelementptr inbounds %struct.hv, %struct.hv* %61, i32 0, i32 0
  %62 = load %struct.xpvhv*, %struct.xpvhv** %sv_any61, align 8
  %xhv_max62 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %62, i32 0, i32 3
  %63 = load i64, i64* %xhv_max62, align 8
  %add63 = add i64 %63, 1
  %arrayidx64 = getelementptr inbounds %struct.he*, %struct.he** %60, i64 %add63
  %64 = bitcast %struct.he** %arrayidx64 to %struct.xpvhv_aux*
  %xhv_name_u65 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %64, i32 0, i32 0
  %xhvnameu_name66 = bitcast %union._xhvnameu* %xhv_name_u65 to %struct.hek**
  %65 = load %struct.hek*, %struct.hek** %xhvnameu_name66, align 8
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false58, %cond.true49
  %cond68 = phi %struct.hek* [ %58, %cond.true49 ], [ %65, %cond.false58 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond68, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool69 = icmp ne i8* %arraydecay, null
  br i1 %tobool69, label %land.lhs.true71, label %cond.false75

cond.false70:                                     ; preds = %cond.false30, %cond.true21, %land.lhs.true11, %land.lhs.true
  br i1 false, label %land.lhs.true71, label %cond.false75

land.lhs.true71:                                  ; preds = %cond.false70, %cond.end67
  %66 = load %struct.hv*, %struct.hv** %stash, align 8
  %call72 = call i32 @Perl_Gv_AMupdate(%struct.hv* %66, i1 zeroext false)
  %tobool73 = icmp ne i32 %call72, 0
  br i1 %tobool73, label %cond.true74, label %cond.false75

cond.true74:                                      ; preds = %land.lhs.true71
  br i1 true, label %if.then78, label %if.end80

cond.false75:                                     ; preds = %land.lhs.true71, %cond.false70, %cond.end67
  %67 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags76 = getelementptr inbounds %struct.hv, %struct.hv* %67, i32 0, i32 2
  %68 = load i32, i32* %sv_flags76, align 4
  %and77 = and i32 %68, -268435457
  store i32 %and77, i32* %sv_flags76, align 4
  br i1 false, label %if.then78, label %if.end80

if.then78:                                        ; preds = %cond.false75, %cond.true74
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded79 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded79, align 8
  %70 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %70)
  br label %if.end80

if.end80:                                         ; preds = %if.then78, %cond.false75, %cond.true74, %do.body7
  %71 = load %struct.sv*, %struct.sv** %ref, align 8
  %72 = load %struct.hv*, %struct.hv** %stash, align 8
  %call81 = call %struct.sv* @Perl_sv_bless(%struct.sv* %71, %struct.hv* %72)
  br label %do.body82

do.body82:                                        ; preds = %if.end80
  %73 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u83 = getelementptr inbounds %struct.sv, %struct.sv* %73, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u83 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end84

do.end84:                                         ; preds = %do.body82
  %74 = load %struct.sv*, %struct.sv** %ref, align 8
  %75 = bitcast %struct.sv* %74 to i8*
  %76 = bitcast i8* %75 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %76)
  br label %do.end85

do.end85:                                         ; preds = %do.end84
  br label %if.end86

if.end86:                                         ; preds = %do.end85, %do.end
  br label %do.end87

do.end87:                                         ; preds = %if.end86
  %77 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call88 = call %struct.sv* @retrieve(%struct.stcxt* %77, i8* null)
  store %struct.sv* %call88, %struct.sv** %sv, align 8
  %78 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool89 = icmp ne %struct.sv* %78, null
  br i1 %tobool89, label %if.end91, label %if.then90

if.then90:                                        ; preds = %do.end87
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end91:                                         ; preds = %do.end87
  %79 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call92 = call %struct.sv* @retrieve(%struct.stcxt* %79, i8* null)
  store %struct.sv* %call92, %struct.sv** %key, align 8
  %80 = load %struct.sv*, %struct.sv** %key, align 8
  %tobool93 = icmp ne %struct.sv* %80, null
  br i1 %tobool93, label %if.end95, label %if.then94

if.then94:                                        ; preds = %if.end91
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end95:                                         ; preds = %if.end91
  %81 = load %struct.sv*, %struct.sv** %tv, align 8
  call void @Perl_sv_upgrade(%struct.sv* %81, i32 7)
  %82 = load %struct.sv*, %struct.sv** %tv, align 8
  %83 = load %struct.sv*, %struct.sv** %sv, align 8
  %84 = load %struct.sv*, %struct.sv** %key, align 8
  %85 = bitcast %struct.sv* %84 to i8*
  call void @Perl_sv_magic(%struct.sv* %82, %struct.sv* %83, i32 112, i8* %85, i32 -2)
  %86 = load %struct.sv*, %struct.sv** %key, align 8
  %87 = bitcast %struct.sv* %86 to i8*
  %88 = bitcast i8* %87 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %88)
  %89 = load %struct.sv*, %struct.sv** %sv, align 8
  %90 = bitcast %struct.sv* %89 to i8*
  %91 = bitcast i8* %90 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %91)
  %92 = load %struct.sv*, %struct.sv** %tv, align 8
  store %struct.sv* %92, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end95, %if.then94, %if.then90, %if.then
  %93 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %93
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_tied_idx(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %tv = alloca %struct.sv*, align 8
  %sv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %idx = alloca i32, align 4
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %call = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call, %struct.sv** %tv, align 8
  %0 = load i8*, i8** %cname.addr, align 8
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %cname.addr, align 8
  %call1 = call %struct.hv* @Perl_gv_stashpv(i8* %1, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call1, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  br label %do.body

do.body:                                          ; preds = %cond.end
  br label %do.body2

do.body2:                                         ; preds = %do.body
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 5
  %3 = load %struct.av*, %struct.av** %aseen, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 10
  %5 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %5, 1
  store i64 %inc, i64* %tagnum, align 8
  %6 = load %struct.sv*, %struct.sv** %tv, align 8
  %7 = bitcast %struct.sv* %6 to i8*
  %8 = bitcast i8* %7 to %struct.sv*
  %call3 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %8)
  %call4 = call %struct.sv** @Perl_av_store(%struct.av* %3, i64 %5, %struct.sv* %call3)
  %cmp = icmp eq %struct.sv** %call4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body2
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %do.body2
  br label %do.end

do.end:                                           ; preds = %if.end
  %9 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool5 = icmp ne %struct.hv* %9, null
  br i1 %tobool5, label %if.then6, label %if.end86

if.then6:                                         ; preds = %do.end
  br label %do.body7

do.body7:                                         ; preds = %if.then6
  %10 = load %struct.sv*, %struct.sv** %tv, align 8
  %call8 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %10)
  store %struct.sv* %call8, %struct.sv** %ref, align 8
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 30
  %12 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool9 = icmp ne i32 %12, 0
  br i1 %tobool9, label %land.lhs.true, label %if.end80

land.lhs.true:                                    ; preds = %do.body7
  %13 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %13, i32 0, i32 2
  %14 = load i32, i32* %sv_flags, align 4
  %and = and i32 %14, 33554432
  %tobool10 = icmp ne i32 %and, 0
  br i1 %tobool10, label %land.lhs.true11, label %cond.false70

land.lhs.true11:                                  ; preds = %land.lhs.true
  %15 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %15, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %16 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %17 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %17, i32 0, i32 0
  %18 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %18, i32 0, i32 3
  %19 = load i64, i64* %xhv_max, align 8
  %add = add i64 %19, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %16, i64 %add
  %20 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %20, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %21 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool12 = icmp ne %struct.hek* %21, null
  br i1 %tobool12, label %land.lhs.true13, label %cond.false70

land.lhs.true13:                                  ; preds = %land.lhs.true11
  %22 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u14 = getelementptr inbounds %struct.hv, %struct.hv* %22, i32 0, i32 3
  %svu_hash15 = bitcast %union.anon.4* %sv_u14 to %struct.he***
  %23 = load %struct.he**, %struct.he*** %svu_hash15, align 8
  %24 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any16 = getelementptr inbounds %struct.hv, %struct.hv* %24, i32 0, i32 0
  %25 = load %struct.xpvhv*, %struct.xpvhv** %sv_any16, align 8
  %xhv_max17 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %25, i32 0, i32 3
  %26 = load i64, i64* %xhv_max17, align 8
  %add18 = add i64 %26, 1
  %arrayidx19 = getelementptr inbounds %struct.he*, %struct.he** %23, i64 %add18
  %27 = bitcast %struct.he** %arrayidx19 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %27, i32 0, i32 4
  %28 = load i32, i32* %xhv_name_count, align 4
  %tobool20 = icmp ne i32 %28, 0
  br i1 %tobool20, label %cond.true21, label %cond.false30

cond.true21:                                      ; preds = %land.lhs.true13
  %29 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u22 = getelementptr inbounds %struct.hv, %struct.hv* %29, i32 0, i32 3
  %svu_hash23 = bitcast %union.anon.4* %sv_u22 to %struct.he***
  %30 = load %struct.he**, %struct.he*** %svu_hash23, align 8
  %31 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any24 = getelementptr inbounds %struct.hv, %struct.hv* %31, i32 0, i32 0
  %32 = load %struct.xpvhv*, %struct.xpvhv** %sv_any24, align 8
  %xhv_max25 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %32, i32 0, i32 3
  %33 = load i64, i64* %xhv_max25, align 8
  %add26 = add i64 %33, 1
  %arrayidx27 = getelementptr inbounds %struct.he*, %struct.he** %30, i64 %add26
  %34 = bitcast %struct.he** %arrayidx27 to %struct.xpvhv_aux*
  %xhv_name_u28 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %34, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u28 to %struct.hek***
  %35 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %36 = load %struct.hek*, %struct.hek** %35, align 8
  %tobool29 = icmp ne %struct.hek* %36, null
  br i1 %tobool29, label %cond.true40, label %cond.false70

cond.false30:                                     ; preds = %land.lhs.true13
  %37 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u31 = getelementptr inbounds %struct.hv, %struct.hv* %37, i32 0, i32 3
  %svu_hash32 = bitcast %union.anon.4* %sv_u31 to %struct.he***
  %38 = load %struct.he**, %struct.he*** %svu_hash32, align 8
  %39 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any33 = getelementptr inbounds %struct.hv, %struct.hv* %39, i32 0, i32 0
  %40 = load %struct.xpvhv*, %struct.xpvhv** %sv_any33, align 8
  %xhv_max34 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %40, i32 0, i32 3
  %41 = load i64, i64* %xhv_max34, align 8
  %add35 = add i64 %41, 1
  %arrayidx36 = getelementptr inbounds %struct.he*, %struct.he** %38, i64 %add35
  %42 = bitcast %struct.he** %arrayidx36 to %struct.xpvhv_aux*
  %xhv_name_u37 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %42, i32 0, i32 0
  %xhvnameu_name38 = bitcast %union._xhvnameu* %xhv_name_u37 to %struct.hek**
  %43 = load %struct.hek*, %struct.hek** %xhvnameu_name38, align 8
  %tobool39 = icmp ne %struct.hek* %43, null
  br i1 %tobool39, label %cond.true40, label %cond.false70

cond.true40:                                      ; preds = %cond.false30, %cond.true21
  %44 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u41 = getelementptr inbounds %struct.hv, %struct.hv* %44, i32 0, i32 3
  %svu_hash42 = bitcast %union.anon.4* %sv_u41 to %struct.he***
  %45 = load %struct.he**, %struct.he*** %svu_hash42, align 8
  %46 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any43 = getelementptr inbounds %struct.hv, %struct.hv* %46, i32 0, i32 0
  %47 = load %struct.xpvhv*, %struct.xpvhv** %sv_any43, align 8
  %xhv_max44 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %47, i32 0, i32 3
  %48 = load i64, i64* %xhv_max44, align 8
  %add45 = add i64 %48, 1
  %arrayidx46 = getelementptr inbounds %struct.he*, %struct.he** %45, i64 %add45
  %49 = bitcast %struct.he** %arrayidx46 to %struct.xpvhv_aux*
  %xhv_name_count47 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %49, i32 0, i32 4
  %50 = load i32, i32* %xhv_name_count47, align 4
  %tobool48 = icmp ne i32 %50, 0
  br i1 %tobool48, label %cond.true49, label %cond.false58

cond.true49:                                      ; preds = %cond.true40
  %51 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u50 = getelementptr inbounds %struct.hv, %struct.hv* %51, i32 0, i32 3
  %svu_hash51 = bitcast %union.anon.4* %sv_u50 to %struct.he***
  %52 = load %struct.he**, %struct.he*** %svu_hash51, align 8
  %53 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any52 = getelementptr inbounds %struct.hv, %struct.hv* %53, i32 0, i32 0
  %54 = load %struct.xpvhv*, %struct.xpvhv** %sv_any52, align 8
  %xhv_max53 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %54, i32 0, i32 3
  %55 = load i64, i64* %xhv_max53, align 8
  %add54 = add i64 %55, 1
  %arrayidx55 = getelementptr inbounds %struct.he*, %struct.he** %52, i64 %add54
  %56 = bitcast %struct.he** %arrayidx55 to %struct.xpvhv_aux*
  %xhv_name_u56 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %56, i32 0, i32 0
  %xhvnameu_names57 = bitcast %union._xhvnameu* %xhv_name_u56 to %struct.hek***
  %57 = load %struct.hek**, %struct.hek*** %xhvnameu_names57, align 8
  %58 = load %struct.hek*, %struct.hek** %57, align 8
  br label %cond.end67

cond.false58:                                     ; preds = %cond.true40
  %59 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u59 = getelementptr inbounds %struct.hv, %struct.hv* %59, i32 0, i32 3
  %svu_hash60 = bitcast %union.anon.4* %sv_u59 to %struct.he***
  %60 = load %struct.he**, %struct.he*** %svu_hash60, align 8
  %61 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any61 = getelementptr inbounds %struct.hv, %struct.hv* %61, i32 0, i32 0
  %62 = load %struct.xpvhv*, %struct.xpvhv** %sv_any61, align 8
  %xhv_max62 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %62, i32 0, i32 3
  %63 = load i64, i64* %xhv_max62, align 8
  %add63 = add i64 %63, 1
  %arrayidx64 = getelementptr inbounds %struct.he*, %struct.he** %60, i64 %add63
  %64 = bitcast %struct.he** %arrayidx64 to %struct.xpvhv_aux*
  %xhv_name_u65 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %64, i32 0, i32 0
  %xhvnameu_name66 = bitcast %union._xhvnameu* %xhv_name_u65 to %struct.hek**
  %65 = load %struct.hek*, %struct.hek** %xhvnameu_name66, align 8
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false58, %cond.true49
  %cond68 = phi %struct.hek* [ %58, %cond.true49 ], [ %65, %cond.false58 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond68, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool69 = icmp ne i8* %arraydecay, null
  br i1 %tobool69, label %land.lhs.true71, label %cond.false75

cond.false70:                                     ; preds = %cond.false30, %cond.true21, %land.lhs.true11, %land.lhs.true
  br i1 false, label %land.lhs.true71, label %cond.false75

land.lhs.true71:                                  ; preds = %cond.false70, %cond.end67
  %66 = load %struct.hv*, %struct.hv** %stash, align 8
  %call72 = call i32 @Perl_Gv_AMupdate(%struct.hv* %66, i1 zeroext false)
  %tobool73 = icmp ne i32 %call72, 0
  br i1 %tobool73, label %cond.true74, label %cond.false75

cond.true74:                                      ; preds = %land.lhs.true71
  br i1 true, label %if.then78, label %if.end80

cond.false75:                                     ; preds = %land.lhs.true71, %cond.false70, %cond.end67
  %67 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags76 = getelementptr inbounds %struct.hv, %struct.hv* %67, i32 0, i32 2
  %68 = load i32, i32* %sv_flags76, align 4
  %and77 = and i32 %68, -268435457
  store i32 %and77, i32* %sv_flags76, align 4
  br i1 false, label %if.then78, label %if.end80

if.then78:                                        ; preds = %cond.false75, %cond.true74
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded79 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded79, align 8
  %70 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %70)
  br label %if.end80

if.end80:                                         ; preds = %if.then78, %cond.false75, %cond.true74, %do.body7
  %71 = load %struct.sv*, %struct.sv** %ref, align 8
  %72 = load %struct.hv*, %struct.hv** %stash, align 8
  %call81 = call %struct.sv* @Perl_sv_bless(%struct.sv* %71, %struct.hv* %72)
  br label %do.body82

do.body82:                                        ; preds = %if.end80
  %73 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u83 = getelementptr inbounds %struct.sv, %struct.sv* %73, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u83 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end84

do.end84:                                         ; preds = %do.body82
  %74 = load %struct.sv*, %struct.sv** %ref, align 8
  %75 = bitcast %struct.sv* %74 to i8*
  %76 = bitcast i8* %75 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %76)
  br label %do.end85

do.end85:                                         ; preds = %do.end84
  br label %if.end86

if.end86:                                         ; preds = %do.end85, %do.end
  br label %do.end87

do.end87:                                         ; preds = %if.end86
  %77 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call88 = call %struct.sv* @retrieve(%struct.stcxt* %77, i8* null)
  store %struct.sv* %call88, %struct.sv** %sv, align 8
  %78 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool89 = icmp ne %struct.sv* %78, null
  br i1 %tobool89, label %if.end91, label %if.then90

if.then90:                                        ; preds = %do.end87
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end91:                                         ; preds = %do.end87
  br label %do.body92

do.body92:                                        ; preds = %if.end91
  %79 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %79, i32 0, i32 24
  %80 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool93 = icmp ne %struct._PerlIO** %80, null
  br i1 %tobool93, label %if.else117, label %if.then94

if.then94:                                        ; preds = %do.body92
  br label %do.body95

do.body95:                                        ; preds = %if.then94
  %81 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %81, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %82 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %82, i64 4
  %83 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf96 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %83, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf96, i32 0, i32 3
  %84 = load i8*, i8** %aend, align 8
  %cmp97 = icmp ule i8* %add.ptr, %84
  br i1 %cmp97, label %if.then98, label %if.else114

if.then98:                                        ; preds = %do.body95
  %85 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf99 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %85, i32 0, i32 22
  %aptr100 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf99, i32 0, i32 2
  %86 = load i8*, i8** %aptr100, align 8
  %87 = ptrtoint i8* %86 to i64
  %88 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf101 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %88, i32 0, i32 22
  %aptr102 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf101, i32 0, i32 2
  %89 = load i8*, i8** %aptr102, align 8
  %90 = ptrtoint i8* %89 to i64
  %and103 = and i64 %90, -4
  %cmp104 = icmp eq i64 %87, %and103
  br i1 %cmp104, label %if.then105, label %if.else

if.then105:                                       ; preds = %if.then98
  %91 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf106 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %91, i32 0, i32 22
  %aptr107 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf106, i32 0, i32 2
  %92 = load i8*, i8** %aptr107, align 8
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  store i32 %94, i32* %idx, align 4
  br label %if.end110

if.else:                                          ; preds = %if.then98
  %95 = bitcast i32* %idx to i8*
  %96 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf108 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %96, i32 0, i32 22
  %aptr109 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf108, i32 0, i32 2
  %97 = load i8*, i8** %aptr109, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 1 %97, i64 4, i1 false)
  br label %if.end110

if.end110:                                        ; preds = %if.else, %if.then105
  %98 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf111 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %98, i32 0, i32 22
  %aptr112 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf111, i32 0, i32 2
  %99 = load i8*, i8** %aptr112, align 8
  %add.ptr113 = getelementptr inbounds i8, i8* %99, i64 4
  store i8* %add.ptr113, i8** %aptr112, align 8
  br label %if.end115

if.else114:                                       ; preds = %do.body95
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end115:                                        ; preds = %if.end110
  br label %do.end116

do.end116:                                        ; preds = %if.end115
  br label %if.end123

if.else117:                                       ; preds = %do.body92
  %100 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio118 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %100, i32 0, i32 24
  %101 = load %struct._PerlIO**, %struct._PerlIO*** %fio118, align 8
  %102 = bitcast i32* %idx to i8*
  %call119 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %101, i8* %102, i64 4)
  %cmp120 = icmp ne i64 %call119, 4
  br i1 %cmp120, label %if.then121, label %if.end122

if.then121:                                       ; preds = %if.else117
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end122:                                        ; preds = %if.else117
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %do.end116
  %103 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %103, i32 0, i32 12
  %104 = load i32, i32* %netorder, align 8
  %tobool124 = icmp ne i32 %104, 0
  br i1 %tobool124, label %if.then125, label %if.end127

if.then125:                                       ; preds = %if.end123
  %105 = load i32, i32* %idx, align 4
  %call126 = call i32 @my_swap32(i32 %105)
  store i32 %call126, i32* %idx, align 4
  br label %if.end127

if.end127:                                        ; preds = %if.then125, %if.end123
  br label %do.end128

do.end128:                                        ; preds = %if.end127
  %106 = load %struct.sv*, %struct.sv** %tv, align 8
  call void @Perl_sv_upgrade(%struct.sv* %106, i32 7)
  %107 = load %struct.sv*, %struct.sv** %tv, align 8
  %108 = load %struct.sv*, %struct.sv** %sv, align 8
  %109 = load i32, i32* %idx, align 4
  call void @Perl_sv_magic(%struct.sv* %107, %struct.sv* %108, i32 112, i8* null, i32 %109)
  %110 = load %struct.sv*, %struct.sv** %sv, align 8
  %111 = bitcast %struct.sv* %110 to i8*
  %112 = bitcast i8* %111 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %112)
  %113 = load %struct.sv*, %struct.sv** %tv, align 8
  store %struct.sv* %113, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %do.end128, %if.then121, %if.else114, %if.then90, %if.then
  %114 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %114
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_utf8str(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %1 = load i8*, i8** %cname.addr, align 8
  %call = call %struct.sv* @retrieve_scalar(%struct.stcxt* %0, i8* %1)
  store %struct.sv* %call, %struct.sv** %sv, align 8
  %2 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool = icmp ne %struct.sv* %2, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %3, i32 0, i32 2
  %4 = load i32, i32* %sv_flags, align 4
  %or = or i32 %4, 536870912
  store i32 %or, i32* %sv_flags, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.sv*, %struct.sv** %sv, align 8
  ret %struct.sv* %5
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_lutf8str(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %1 = load i8*, i8** %cname.addr, align 8
  %call = call %struct.sv* @retrieve_lscalar(%struct.stcxt* %0, i8* %1)
  store %struct.sv* %call, %struct.sv** %sv, align 8
  %2 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool = icmp ne %struct.sv* %2, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %3, i32 0, i32 2
  %4 = load i32, i32* %sv_flags, align 4
  %or = or i32 %4, 536870912
  store i32 %or, i32* %sv_flags, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.sv*, %struct.sv** %sv, align 8
  ret %struct.sv* %5
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_flag_hash(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %size = alloca i32, align 4
  %i = alloca i32, align 4
  %hv = alloca %struct.hv*, align 8
  %sv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %hash_flags = alloca i32, align 4
  %ref = alloca %struct.sv*, align 8
  %flags = alloca i32, align 4
  %store_flags = alloca i32, align 4
  %keysv = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 24
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else6, label %if.then

if.then:                                          ; preds = %do.body
  br label %do.body1

do.body1:                                         ; preds = %if.then
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %3, %5
  br i1 %cmp, label %if.then3, label %if.else

if.then3:                                         ; preds = %do.body1
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 22
  %aptr5 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf4, i32 0, i32 2
  %7 = load i8*, i8** %aptr5, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %aptr5, align 8
  %8 = load i8, i8* %7, align 1
  %conv = zext i8 %8 to i32
  store i32 %conv, i32* %hash_flags, align 4
  br label %if.end

if.else:                                          ; preds = %do.body1
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then3
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end12

if.else6:                                         ; preds = %do.body
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio7 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 24
  %10 = load %struct._PerlIO**, %struct._PerlIO*** %fio7, align 8
  %call = call i32 @PerlIO_getc(%struct._PerlIO** %10)
  store i32 %call, i32* %hash_flags, align 4
  %cmp8 = icmp eq i32 %call, -1
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.else6
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end11:                                         ; preds = %if.else6
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %do.end
  br label %do.end13

do.end13:                                         ; preds = %if.end12
  br label %do.body14

do.body14:                                        ; preds = %do.end13
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio15 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 24
  %12 = load %struct._PerlIO**, %struct._PerlIO*** %fio15, align 8
  %tobool16 = icmp ne %struct._PerlIO** %12, null
  br i1 %tobool16, label %if.else45, label %if.then17

if.then17:                                        ; preds = %do.body14
  br label %do.body18

do.body18:                                        ; preds = %if.then17
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 22
  %aptr20 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf19, i32 0, i32 2
  %14 = load i8*, i8** %aptr20, align 8
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 4
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf21 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 22
  %aend22 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf21, i32 0, i32 3
  %16 = load i8*, i8** %aend22, align 8
  %cmp23 = icmp ule i8* %add.ptr, %16
  br i1 %cmp23, label %if.then25, label %if.else42

if.then25:                                        ; preds = %do.body18
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 22
  %aptr27 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 2
  %18 = load i8*, i8** %aptr27, align 8
  %19 = ptrtoint i8* %18 to i64
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf28 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %20, i32 0, i32 22
  %aptr29 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf28, i32 0, i32 2
  %21 = load i8*, i8** %aptr29, align 8
  %22 = ptrtoint i8* %21 to i64
  %and = and i64 %22, -4
  %cmp30 = icmp eq i64 %19, %and
  br i1 %cmp30, label %if.then32, label %if.else35

if.then32:                                        ; preds = %if.then25
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf33 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 22
  %aptr34 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf33, i32 0, i32 2
  %24 = load i8*, i8** %aptr34, align 8
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %len, align 4
  br label %if.end38

if.else35:                                        ; preds = %if.then25
  %27 = bitcast i32* %len to i8*
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf36 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 22
  %aptr37 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf36, i32 0, i32 2
  %29 = load i8*, i8** %aptr37, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 1 %29, i64 4, i1 false)
  br label %if.end38

if.end38:                                         ; preds = %if.else35, %if.then32
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf39 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 22
  %aptr40 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf39, i32 0, i32 2
  %31 = load i8*, i8** %aptr40, align 8
  %add.ptr41 = getelementptr inbounds i8, i8* %31, i64 4
  store i8* %add.ptr41, i8** %aptr40, align 8
  br label %if.end43

if.else42:                                        ; preds = %do.body18
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end43:                                         ; preds = %if.end38
  br label %do.end44

do.end44:                                         ; preds = %if.end43
  br label %if.end52

if.else45:                                        ; preds = %do.body14
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio46 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %32, i32 0, i32 24
  %33 = load %struct._PerlIO**, %struct._PerlIO*** %fio46, align 8
  %34 = bitcast i32* %len to i8*
  %call47 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %33, i8* %34, i64 4)
  %cmp48 = icmp ne i64 %call47, 4
  br i1 %cmp48, label %if.then50, label %if.end51

if.then50:                                        ; preds = %if.else45
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end51:                                         ; preds = %if.else45
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %do.end44
  %35 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %35, i32 0, i32 12
  %36 = load i32, i32* %netorder, align 8
  %tobool53 = icmp ne i32 %36, 0
  br i1 %tobool53, label %if.then54, label %if.end56

if.then54:                                        ; preds = %if.end52
  %37 = load i32, i32* %len, align 4
  %call55 = call i32 @my_swap32(i32 %37)
  store i32 %call55, i32* %len, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %if.end52
  br label %do.end57

do.end57:                                         ; preds = %if.end56
  %call58 = call %struct.sv* @Perl_newSV_type(i32 12)
  %38 = bitcast %struct.sv* %call58 to i8*
  %39 = bitcast i8* %38 to %struct.hv*
  store %struct.hv* %39, %struct.hv** %hv, align 8
  %40 = load i8*, i8** %cname.addr, align 8
  %tobool59 = icmp ne i8* %40, null
  br i1 %tobool59, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end57
  %41 = load i8*, i8** %cname.addr, align 8
  %call60 = call %struct.hv* @Perl_gv_stashpv(i8* %41, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %do.end57
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call60, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  br label %do.body61

do.body61:                                        ; preds = %cond.end
  br label %do.body62

do.body62:                                        ; preds = %do.body61
  %42 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %42, i32 0, i32 5
  %43 = load %struct.av*, %struct.av** %aseen, align 8
  %44 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %44, i32 0, i32 10
  %45 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %45, 1
  store i64 %inc, i64* %tagnum, align 8
  %46 = load %struct.hv*, %struct.hv** %hv, align 8
  %47 = bitcast %struct.hv* %46 to i8*
  %48 = bitcast i8* %47 to %struct.sv*
  %call63 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %48)
  %call64 = call %struct.sv** @Perl_av_store(%struct.av* %43, i64 %45, %struct.sv* %call63)
  %cmp65 = icmp eq %struct.sv** %call64, null
  br i1 %cmp65, label %if.then67, label %if.end68

if.then67:                                        ; preds = %do.body62
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end68:                                         ; preds = %do.body62
  br label %do.end69

do.end69:                                         ; preds = %if.end68
  %49 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool70 = icmp ne %struct.hv* %49, null
  br i1 %tobool70, label %if.then71, label %if.end152

if.then71:                                        ; preds = %do.end69
  br label %do.body72

do.body72:                                        ; preds = %if.then71
  %50 = load %struct.hv*, %struct.hv** %hv, align 8
  %51 = bitcast %struct.hv* %50 to %struct.sv*
  %call73 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %51)
  store %struct.sv* %call73, %struct.sv** %ref, align 8
  %52 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %52, i32 0, i32 30
  %53 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool74 = icmp ne i32 %53, 0
  br i1 %tobool74, label %land.lhs.true, label %if.end146

land.lhs.true:                                    ; preds = %do.body72
  %54 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %54, i32 0, i32 2
  %55 = load i32, i32* %sv_flags, align 4
  %and75 = and i32 %55, 33554432
  %tobool76 = icmp ne i32 %and75, 0
  br i1 %tobool76, label %land.lhs.true77, label %cond.false136

land.lhs.true77:                                  ; preds = %land.lhs.true
  %56 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %56, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %57 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %58 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %58, i32 0, i32 0
  %59 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %59, i32 0, i32 3
  %60 = load i64, i64* %xhv_max, align 8
  %add = add i64 %60, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %57, i64 %add
  %61 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %61, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %62 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool78 = icmp ne %struct.hek* %62, null
  br i1 %tobool78, label %land.lhs.true79, label %cond.false136

land.lhs.true79:                                  ; preds = %land.lhs.true77
  %63 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u80 = getelementptr inbounds %struct.hv, %struct.hv* %63, i32 0, i32 3
  %svu_hash81 = bitcast %union.anon.4* %sv_u80 to %struct.he***
  %64 = load %struct.he**, %struct.he*** %svu_hash81, align 8
  %65 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any82 = getelementptr inbounds %struct.hv, %struct.hv* %65, i32 0, i32 0
  %66 = load %struct.xpvhv*, %struct.xpvhv** %sv_any82, align 8
  %xhv_max83 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %66, i32 0, i32 3
  %67 = load i64, i64* %xhv_max83, align 8
  %add84 = add i64 %67, 1
  %arrayidx85 = getelementptr inbounds %struct.he*, %struct.he** %64, i64 %add84
  %68 = bitcast %struct.he** %arrayidx85 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %68, i32 0, i32 4
  %69 = load i32, i32* %xhv_name_count, align 4
  %tobool86 = icmp ne i32 %69, 0
  br i1 %tobool86, label %cond.true87, label %cond.false96

cond.true87:                                      ; preds = %land.lhs.true79
  %70 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u88 = getelementptr inbounds %struct.hv, %struct.hv* %70, i32 0, i32 3
  %svu_hash89 = bitcast %union.anon.4* %sv_u88 to %struct.he***
  %71 = load %struct.he**, %struct.he*** %svu_hash89, align 8
  %72 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any90 = getelementptr inbounds %struct.hv, %struct.hv* %72, i32 0, i32 0
  %73 = load %struct.xpvhv*, %struct.xpvhv** %sv_any90, align 8
  %xhv_max91 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %73, i32 0, i32 3
  %74 = load i64, i64* %xhv_max91, align 8
  %add92 = add i64 %74, 1
  %arrayidx93 = getelementptr inbounds %struct.he*, %struct.he** %71, i64 %add92
  %75 = bitcast %struct.he** %arrayidx93 to %struct.xpvhv_aux*
  %xhv_name_u94 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %75, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u94 to %struct.hek***
  %76 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %77 = load %struct.hek*, %struct.hek** %76, align 8
  %tobool95 = icmp ne %struct.hek* %77, null
  br i1 %tobool95, label %cond.true106, label %cond.false136

cond.false96:                                     ; preds = %land.lhs.true79
  %78 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u97 = getelementptr inbounds %struct.hv, %struct.hv* %78, i32 0, i32 3
  %svu_hash98 = bitcast %union.anon.4* %sv_u97 to %struct.he***
  %79 = load %struct.he**, %struct.he*** %svu_hash98, align 8
  %80 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any99 = getelementptr inbounds %struct.hv, %struct.hv* %80, i32 0, i32 0
  %81 = load %struct.xpvhv*, %struct.xpvhv** %sv_any99, align 8
  %xhv_max100 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %81, i32 0, i32 3
  %82 = load i64, i64* %xhv_max100, align 8
  %add101 = add i64 %82, 1
  %arrayidx102 = getelementptr inbounds %struct.he*, %struct.he** %79, i64 %add101
  %83 = bitcast %struct.he** %arrayidx102 to %struct.xpvhv_aux*
  %xhv_name_u103 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %83, i32 0, i32 0
  %xhvnameu_name104 = bitcast %union._xhvnameu* %xhv_name_u103 to %struct.hek**
  %84 = load %struct.hek*, %struct.hek** %xhvnameu_name104, align 8
  %tobool105 = icmp ne %struct.hek* %84, null
  br i1 %tobool105, label %cond.true106, label %cond.false136

cond.true106:                                     ; preds = %cond.false96, %cond.true87
  %85 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u107 = getelementptr inbounds %struct.hv, %struct.hv* %85, i32 0, i32 3
  %svu_hash108 = bitcast %union.anon.4* %sv_u107 to %struct.he***
  %86 = load %struct.he**, %struct.he*** %svu_hash108, align 8
  %87 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any109 = getelementptr inbounds %struct.hv, %struct.hv* %87, i32 0, i32 0
  %88 = load %struct.xpvhv*, %struct.xpvhv** %sv_any109, align 8
  %xhv_max110 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %88, i32 0, i32 3
  %89 = load i64, i64* %xhv_max110, align 8
  %add111 = add i64 %89, 1
  %arrayidx112 = getelementptr inbounds %struct.he*, %struct.he** %86, i64 %add111
  %90 = bitcast %struct.he** %arrayidx112 to %struct.xpvhv_aux*
  %xhv_name_count113 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %90, i32 0, i32 4
  %91 = load i32, i32* %xhv_name_count113, align 4
  %tobool114 = icmp ne i32 %91, 0
  br i1 %tobool114, label %cond.true115, label %cond.false124

cond.true115:                                     ; preds = %cond.true106
  %92 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u116 = getelementptr inbounds %struct.hv, %struct.hv* %92, i32 0, i32 3
  %svu_hash117 = bitcast %union.anon.4* %sv_u116 to %struct.he***
  %93 = load %struct.he**, %struct.he*** %svu_hash117, align 8
  %94 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any118 = getelementptr inbounds %struct.hv, %struct.hv* %94, i32 0, i32 0
  %95 = load %struct.xpvhv*, %struct.xpvhv** %sv_any118, align 8
  %xhv_max119 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %95, i32 0, i32 3
  %96 = load i64, i64* %xhv_max119, align 8
  %add120 = add i64 %96, 1
  %arrayidx121 = getelementptr inbounds %struct.he*, %struct.he** %93, i64 %add120
  %97 = bitcast %struct.he** %arrayidx121 to %struct.xpvhv_aux*
  %xhv_name_u122 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %97, i32 0, i32 0
  %xhvnameu_names123 = bitcast %union._xhvnameu* %xhv_name_u122 to %struct.hek***
  %98 = load %struct.hek**, %struct.hek*** %xhvnameu_names123, align 8
  %99 = load %struct.hek*, %struct.hek** %98, align 8
  br label %cond.end133

cond.false124:                                    ; preds = %cond.true106
  %100 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u125 = getelementptr inbounds %struct.hv, %struct.hv* %100, i32 0, i32 3
  %svu_hash126 = bitcast %union.anon.4* %sv_u125 to %struct.he***
  %101 = load %struct.he**, %struct.he*** %svu_hash126, align 8
  %102 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any127 = getelementptr inbounds %struct.hv, %struct.hv* %102, i32 0, i32 0
  %103 = load %struct.xpvhv*, %struct.xpvhv** %sv_any127, align 8
  %xhv_max128 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %103, i32 0, i32 3
  %104 = load i64, i64* %xhv_max128, align 8
  %add129 = add i64 %104, 1
  %arrayidx130 = getelementptr inbounds %struct.he*, %struct.he** %101, i64 %add129
  %105 = bitcast %struct.he** %arrayidx130 to %struct.xpvhv_aux*
  %xhv_name_u131 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %105, i32 0, i32 0
  %xhvnameu_name132 = bitcast %union._xhvnameu* %xhv_name_u131 to %struct.hek**
  %106 = load %struct.hek*, %struct.hek** %xhvnameu_name132, align 8
  br label %cond.end133

cond.end133:                                      ; preds = %cond.false124, %cond.true115
  %cond134 = phi %struct.hek* [ %99, %cond.true115 ], [ %106, %cond.false124 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond134, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool135 = icmp ne i8* %arraydecay, null
  br i1 %tobool135, label %land.lhs.true137, label %cond.false141

cond.false136:                                    ; preds = %cond.false96, %cond.true87, %land.lhs.true77, %land.lhs.true
  br i1 false, label %land.lhs.true137, label %cond.false141

land.lhs.true137:                                 ; preds = %cond.false136, %cond.end133
  %107 = load %struct.hv*, %struct.hv** %stash, align 8
  %call138 = call i32 @Perl_Gv_AMupdate(%struct.hv* %107, i1 zeroext false)
  %tobool139 = icmp ne i32 %call138, 0
  br i1 %tobool139, label %cond.true140, label %cond.false141

cond.true140:                                     ; preds = %land.lhs.true137
  br i1 true, label %if.then144, label %if.end146

cond.false141:                                    ; preds = %land.lhs.true137, %cond.false136, %cond.end133
  %108 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags142 = getelementptr inbounds %struct.hv, %struct.hv* %108, i32 0, i32 2
  %109 = load i32, i32* %sv_flags142, align 4
  %and143 = and i32 %109, -268435457
  store i32 %and143, i32* %sv_flags142, align 4
  br i1 false, label %if.then144, label %if.end146

if.then144:                                       ; preds = %cond.false141, %cond.true140
  %110 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded145 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %110, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded145, align 8
  %111 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %111)
  br label %if.end146

if.end146:                                        ; preds = %if.then144, %cond.false141, %cond.true140, %do.body72
  %112 = load %struct.sv*, %struct.sv** %ref, align 8
  %113 = load %struct.hv*, %struct.hv** %stash, align 8
  %call147 = call %struct.sv* @Perl_sv_bless(%struct.sv* %112, %struct.hv* %113)
  br label %do.body148

do.body148:                                       ; preds = %if.end146
  %114 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u149 = getelementptr inbounds %struct.sv, %struct.sv* %114, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u149 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end150

do.end150:                                        ; preds = %do.body148
  %115 = load %struct.sv*, %struct.sv** %ref, align 8
  %116 = bitcast %struct.sv* %115 to i8*
  %117 = bitcast i8* %116 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %117)
  br label %do.end151

do.end151:                                        ; preds = %do.end150
  br label %if.end152

if.end152:                                        ; preds = %do.end151, %do.end69
  br label %do.end153

do.end153:                                        ; preds = %if.end152
  %118 = load i32, i32* %len, align 4
  %cmp154 = icmp eq i32 %118, 0
  br i1 %cmp154, label %if.then156, label %if.end157

if.then156:                                       ; preds = %do.end153
  %119 = load %struct.hv*, %struct.hv** %hv, align 8
  %120 = bitcast %struct.hv* %119 to %struct.sv*
  store %struct.sv* %120, %struct.sv** %retval, align 8
  br label %return

if.end157:                                        ; preds = %do.end153
  %121 = load %struct.hv*, %struct.hv** %hv, align 8
  %122 = load i32, i32* %len, align 4
  %add158 = add nsw i32 %122, 1
  %conv159 = sext i32 %add158 to i64
  call void @Perl_hv_ksplit(%struct.hv* %121, i64 %conv159)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end157
  %123 = load i32, i32* %i, align 4
  %124 = load i32, i32* %len, align 4
  %cmp160 = icmp slt i32 %123, %124
  br i1 %cmp160, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %store_flags, align 4
  %125 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call162 = call %struct.sv* @retrieve(%struct.stcxt* %125, i8* null)
  store %struct.sv* %call162, %struct.sv** %sv, align 8
  %126 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool163 = icmp ne %struct.sv* %126, null
  br i1 %tobool163, label %if.end165, label %if.then164

if.then164:                                       ; preds = %for.body
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end165:                                        ; preds = %for.body
  br label %do.body166

do.body166:                                       ; preds = %if.end165
  %127 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio167 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %127, i32 0, i32 24
  %128 = load %struct._PerlIO**, %struct._PerlIO*** %fio167, align 8
  %tobool168 = icmp ne %struct._PerlIO** %128, null
  br i1 %tobool168, label %if.else185, label %if.then169

if.then169:                                       ; preds = %do.body166
  br label %do.body170

do.body170:                                       ; preds = %if.then169
  %129 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf171 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %129, i32 0, i32 22
  %aptr172 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf171, i32 0, i32 2
  %130 = load i8*, i8** %aptr172, align 8
  %131 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf173 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %131, i32 0, i32 22
  %aend174 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf173, i32 0, i32 3
  %132 = load i8*, i8** %aend174, align 8
  %cmp175 = icmp ult i8* %130, %132
  br i1 %cmp175, label %if.then177, label %if.else182

if.then177:                                       ; preds = %do.body170
  %133 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf178 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %133, i32 0, i32 22
  %aptr179 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf178, i32 0, i32 2
  %134 = load i8*, i8** %aptr179, align 8
  %incdec.ptr180 = getelementptr inbounds i8, i8* %134, i32 1
  store i8* %incdec.ptr180, i8** %aptr179, align 8
  %135 = load i8, i8* %134, align 1
  %conv181 = zext i8 %135 to i32
  store i32 %conv181, i32* %flags, align 4
  br label %if.end183

if.else182:                                       ; preds = %do.body170
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end183:                                        ; preds = %if.then177
  br label %do.end184

do.end184:                                        ; preds = %if.end183
  br label %if.end192

if.else185:                                       ; preds = %do.body166
  %136 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio186 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %136, i32 0, i32 24
  %137 = load %struct._PerlIO**, %struct._PerlIO*** %fio186, align 8
  %call187 = call i32 @PerlIO_getc(%struct._PerlIO** %137)
  store i32 %call187, i32* %flags, align 4
  %cmp188 = icmp eq i32 %call187, -1
  br i1 %cmp188, label %if.then190, label %if.end191

if.then190:                                       ; preds = %if.else185
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end191:                                        ; preds = %if.else185
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %do.end184
  br label %do.end193

do.end193:                                        ; preds = %if.end192
  %138 = load i32, i32* %hash_flags, align 4
  %and194 = and i32 %138, 1
  %tobool195 = icmp ne i32 %and194, 0
  br i1 %tobool195, label %land.lhs.true196, label %if.end201

land.lhs.true196:                                 ; preds = %do.end193
  %139 = load i32, i32* %flags, align 4
  %and197 = and i32 %139, 4
  %tobool198 = icmp ne i32 %and197, 0
  br i1 %tobool198, label %if.then199, label %if.end201

if.then199:                                       ; preds = %land.lhs.true196
  %140 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags200 = getelementptr inbounds %struct.sv, %struct.sv* %140, i32 0, i32 2
  %141 = load i32, i32* %sv_flags200, align 4
  %or = or i32 %141, 134217728
  store i32 %or, i32* %sv_flags200, align 4
  br label %if.end201

if.end201:                                        ; preds = %if.then199, %land.lhs.true196, %do.end193
  %142 = load i32, i32* %flags, align 4
  %and202 = and i32 %142, 8
  %tobool203 = icmp ne i32 %and202, 0
  br i1 %tobool203, label %if.then204, label %if.else213

if.then204:                                       ; preds = %if.end201
  %143 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call205 = call %struct.sv* @retrieve(%struct.stcxt* %143, i8* null)
  store %struct.sv* %call205, %struct.sv** %keysv, align 8
  %144 = load %struct.sv*, %struct.sv** %keysv, align 8
  %tobool206 = icmp ne %struct.sv* %144, null
  br i1 %tobool206, label %if.end208, label %if.then207

if.then207:                                       ; preds = %if.then204
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end208:                                        ; preds = %if.then204
  %145 = load %struct.hv*, %struct.hv** %hv, align 8
  %146 = load %struct.sv*, %struct.sv** %keysv, align 8
  %147 = load %struct.sv*, %struct.sv** %sv, align 8
  %call209 = call i8* @Perl_hv_common(%struct.hv* %145, %struct.sv* %146, i8* null, i64 0, i32 0, i32 4, %struct.sv* %147, i32 0)
  %148 = bitcast i8* %call209 to %struct.he*
  %tobool210 = icmp ne %struct.he* %148, null
  br i1 %tobool210, label %if.end212, label %if.then211

if.then211:                                       ; preds = %if.end208
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end212:                                        ; preds = %if.end208
  br label %if.end345

if.else213:                                       ; preds = %if.end201
  %149 = load i32, i32* %flags, align 4
  %and214 = and i32 %149, 16
  %tobool215 = icmp ne i32 %and214, 0
  br i1 %tobool215, label %if.then216, label %if.end218

if.then216:                                       ; preds = %if.else213
  %150 = load %struct.sv*, %struct.sv** %sv, align 8
  %151 = bitcast %struct.sv* %150 to i8*
  %152 = bitcast i8* %151 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %152)
  store %struct.sv* @PL_sv_placeholder, %struct.sv** %sv, align 8
  %153 = load i32, i32* %store_flags, align 4
  %or217 = or i32 %153, 512
  store i32 %or217, i32* %store_flags, align 4
  br label %if.end218

if.end218:                                        ; preds = %if.then216, %if.else213
  %154 = load i32, i32* %flags, align 4
  %and219 = and i32 %154, 1
  %tobool220 = icmp ne i32 %and219, 0
  br i1 %tobool220, label %if.then221, label %if.end223

if.then221:                                       ; preds = %if.end218
  %155 = load i32, i32* %store_flags, align 4
  %or222 = or i32 %155, 1
  store i32 %or222, i32* %store_flags, align 4
  br label %if.end223

if.end223:                                        ; preds = %if.then221, %if.end218
  %156 = load i32, i32* %flags, align 4
  %and224 = and i32 %156, 2
  %tobool225 = icmp ne i32 %and224, 0
  br i1 %tobool225, label %if.then226, label %if.end228

if.then226:                                       ; preds = %if.end223
  %157 = load i32, i32* %store_flags, align 4
  %or227 = or i32 %157, 2
  store i32 %or227, i32* %store_flags, align 4
  br label %if.end228

if.end228:                                        ; preds = %if.then226, %if.end223
  br label %do.body229

do.body229:                                       ; preds = %if.end228
  %158 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio230 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %158, i32 0, i32 24
  %159 = load %struct._PerlIO**, %struct._PerlIO*** %fio230, align 8
  %tobool231 = icmp ne %struct._PerlIO** %159, null
  br i1 %tobool231, label %if.else262, label %if.then232

if.then232:                                       ; preds = %do.body229
  br label %do.body233

do.body233:                                       ; preds = %if.then232
  %160 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf234 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %160, i32 0, i32 22
  %aptr235 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf234, i32 0, i32 2
  %161 = load i8*, i8** %aptr235, align 8
  %add.ptr236 = getelementptr inbounds i8, i8* %161, i64 4
  %162 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf237 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %162, i32 0, i32 22
  %aend238 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf237, i32 0, i32 3
  %163 = load i8*, i8** %aend238, align 8
  %cmp239 = icmp ule i8* %add.ptr236, %163
  br i1 %cmp239, label %if.then241, label %if.else259

if.then241:                                       ; preds = %do.body233
  %164 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf242 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %164, i32 0, i32 22
  %aptr243 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf242, i32 0, i32 2
  %165 = load i8*, i8** %aptr243, align 8
  %166 = ptrtoint i8* %165 to i64
  %167 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf244 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %167, i32 0, i32 22
  %aptr245 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf244, i32 0, i32 2
  %168 = load i8*, i8** %aptr245, align 8
  %169 = ptrtoint i8* %168 to i64
  %and246 = and i64 %169, -4
  %cmp247 = icmp eq i64 %166, %and246
  br i1 %cmp247, label %if.then249, label %if.else252

if.then249:                                       ; preds = %if.then241
  %170 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf250 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %170, i32 0, i32 22
  %aptr251 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf250, i32 0, i32 2
  %171 = load i8*, i8** %aptr251, align 8
  %172 = bitcast i8* %171 to i32*
  %173 = load i32, i32* %172, align 4
  store i32 %173, i32* %size, align 4
  br label %if.end255

if.else252:                                       ; preds = %if.then241
  %174 = bitcast i32* %size to i8*
  %175 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf253 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %175, i32 0, i32 22
  %aptr254 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf253, i32 0, i32 2
  %176 = load i8*, i8** %aptr254, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* align 1 %176, i64 4, i1 false)
  br label %if.end255

if.end255:                                        ; preds = %if.else252, %if.then249
  %177 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf256 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %177, i32 0, i32 22
  %aptr257 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf256, i32 0, i32 2
  %178 = load i8*, i8** %aptr257, align 8
  %add.ptr258 = getelementptr inbounds i8, i8* %178, i64 4
  store i8* %add.ptr258, i8** %aptr257, align 8
  br label %if.end260

if.else259:                                       ; preds = %do.body233
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end260:                                        ; preds = %if.end255
  br label %do.end261

do.end261:                                        ; preds = %if.end260
  br label %if.end269

if.else262:                                       ; preds = %do.body229
  %179 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio263 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %179, i32 0, i32 24
  %180 = load %struct._PerlIO**, %struct._PerlIO*** %fio263, align 8
  %181 = bitcast i32* %size to i8*
  %call264 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %180, i8* %181, i64 4)
  %cmp265 = icmp ne i64 %call264, 4
  br i1 %cmp265, label %if.then267, label %if.end268

if.then267:                                       ; preds = %if.else262
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end268:                                        ; preds = %if.else262
  br label %if.end269

if.end269:                                        ; preds = %if.end268, %do.end261
  %182 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder270 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %182, i32 0, i32 12
  %183 = load i32, i32* %netorder270, align 8
  %tobool271 = icmp ne i32 %183, 0
  br i1 %tobool271, label %if.then272, label %if.end274

if.then272:                                       ; preds = %if.end269
  %184 = load i32, i32* %size, align 4
  %call273 = call i32 @my_swap32(i32 %184)
  store i32 %call273, i32* %size, align 4
  br label %if.end274

if.end274:                                        ; preds = %if.then272, %if.end269
  br label %do.end275

do.end275:                                        ; preds = %if.end274
  br label %do.body276

do.body276:                                       ; preds = %do.end275
  %185 = load i32, i32* %size, align 4
  %conv277 = sext i32 %185 to i64
  %186 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %186, i32 0, i32 21
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf, i32 0, i32 1
  %187 = load i64, i64* %asiz, align 8
  %cmp278 = icmp uge i64 %conv277, %187
  br i1 %cmp278, label %if.then280, label %if.end291

if.then280:                                       ; preds = %do.body276
  %188 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf281 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %188, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf281, i32 0, i32 0
  %189 = load i8*, i8** %arena, align 8
  %190 = load i32, i32* %size, align 4
  %conv282 = sext i32 %190 to i64
  %add283 = add i64 %conv282, 1
  %mul = mul i64 %add283, 1
  %call284 = call i8* @Perl_safesysrealloc(i8* %189, i64 %mul)
  %191 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf285 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %191, i32 0, i32 21
  %arena286 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf285, i32 0, i32 0
  store i8* %call284, i8** %arena286, align 8
  %192 = load i32, i32* %size, align 4
  %conv287 = sext i32 %192 to i64
  %add288 = add i64 %conv287, 1
  %193 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf289 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %193, i32 0, i32 21
  %asiz290 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf289, i32 0, i32 1
  store i64 %add288, i64* %asiz290, align 8
  br label %if.end291

if.end291:                                        ; preds = %if.then280, %do.body276
  br label %do.end292

do.end292:                                        ; preds = %if.end291
  %194 = load i32, i32* %size, align 4
  %tobool293 = icmp ne i32 %194, 0
  br i1 %tobool293, label %if.then294, label %if.end333

if.then294:                                       ; preds = %do.end292
  br label %do.body295

do.body295:                                       ; preds = %if.then294
  %195 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio296 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %195, i32 0, i32 24
  %196 = load %struct._PerlIO**, %struct._PerlIO*** %fio296, align 8
  %tobool297 = icmp ne %struct._PerlIO** %196, null
  br i1 %tobool297, label %if.else320, label %if.then298

if.then298:                                       ; preds = %do.body295
  br label %do.body299

do.body299:                                       ; preds = %if.then298
  %197 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf300 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %197, i32 0, i32 22
  %aptr301 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf300, i32 0, i32 2
  %198 = load i8*, i8** %aptr301, align 8
  %199 = load i32, i32* %size, align 4
  %idx.ext = sext i32 %199 to i64
  %add.ptr302 = getelementptr inbounds i8, i8* %198, i64 %idx.ext
  %200 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf303 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %200, i32 0, i32 22
  %aend304 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf303, i32 0, i32 3
  %201 = load i8*, i8** %aend304, align 8
  %cmp305 = icmp ule i8* %add.ptr302, %201
  br i1 %cmp305, label %if.then307, label %if.else317

if.then307:                                       ; preds = %do.body299
  %202 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf308 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %202, i32 0, i32 21
  %arena309 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf308, i32 0, i32 0
  %203 = load i8*, i8** %arena309, align 8
  %204 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf310 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %204, i32 0, i32 22
  %aptr311 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf310, i32 0, i32 2
  %205 = load i8*, i8** %aptr311, align 8
  %206 = load i32, i32* %size, align 4
  %conv312 = sext i32 %206 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %203, i8* align 1 %205, i64 %conv312, i1 false)
  %207 = load i32, i32* %size, align 4
  %208 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf313 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %208, i32 0, i32 22
  %aptr314 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf313, i32 0, i32 2
  %209 = load i8*, i8** %aptr314, align 8
  %idx.ext315 = sext i32 %207 to i64
  %add.ptr316 = getelementptr inbounds i8, i8* %209, i64 %idx.ext315
  store i8* %add.ptr316, i8** %aptr314, align 8
  br label %if.end318

if.else317:                                       ; preds = %do.body299
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end318:                                        ; preds = %if.then307
  br label %do.end319

do.end319:                                        ; preds = %if.end318
  br label %if.end331

if.else320:                                       ; preds = %do.body295
  %210 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio321 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %210, i32 0, i32 24
  %211 = load %struct._PerlIO**, %struct._PerlIO*** %fio321, align 8
  %212 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf322 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %212, i32 0, i32 21
  %arena323 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf322, i32 0, i32 0
  %213 = load i8*, i8** %arena323, align 8
  %214 = load i32, i32* %size, align 4
  %conv324 = sext i32 %214 to i64
  %call325 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %211, i8* %213, i64 %conv324)
  %215 = load i32, i32* %size, align 4
  %conv326 = sext i32 %215 to i64
  %cmp327 = icmp ne i64 %call325, %conv326
  br i1 %cmp327, label %if.then329, label %if.end330

if.then329:                                       ; preds = %if.else320
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end330:                                        ; preds = %if.else320
  br label %if.end331

if.end331:                                        ; preds = %if.end330, %do.end319
  br label %do.end332

do.end332:                                        ; preds = %if.end331
  br label %if.end333

if.end333:                                        ; preds = %do.end332, %do.end292
  %216 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf334 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %216, i32 0, i32 21
  %arena335 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf334, i32 0, i32 0
  %217 = load i8*, i8** %arena335, align 8
  %218 = load i32, i32* %size, align 4
  %idxprom = sext i32 %218 to i64
  %arrayidx336 = getelementptr inbounds i8, i8* %217, i64 %idxprom
  store i8 0, i8* %arrayidx336, align 1
  %219 = load %struct.hv*, %struct.hv** %hv, align 8
  %220 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf337 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %220, i32 0, i32 21
  %arena338 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf337, i32 0, i32 0
  %221 = load i8*, i8** %arena338, align 8
  %222 = load i32, i32* %size, align 4
  %conv339 = sext i32 %222 to i64
  %223 = load i32, i32* %store_flags, align 4
  %224 = load %struct.sv*, %struct.sv** %sv, align 8
  %call340 = call i8* @Perl_hv_common(%struct.hv* %219, %struct.sv* null, i8* %221, i64 %conv339, i32 %223, i32 36, %struct.sv* %224, i32 0)
  %225 = bitcast i8* %call340 to %struct.sv**
  %cmp341 = icmp eq %struct.sv** %225, null
  br i1 %cmp341, label %if.then343, label %if.end344

if.then343:                                       ; preds = %if.end333
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end344:                                        ; preds = %if.end333
  br label %if.end345

if.end345:                                        ; preds = %if.end344, %if.end212
  br label %for.inc

for.inc:                                          ; preds = %if.end345
  %226 = load i32, i32* %i, align 4
  %inc346 = add nsw i32 %226, 1
  store i32 %inc346, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %227 = load i32, i32* %hash_flags, align 4
  %and347 = and i32 %227, 1
  %tobool348 = icmp ne i32 %and347, 0
  br i1 %tobool348, label %if.then349, label %if.end352

if.then349:                                       ; preds = %for.end
  %228 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_flags350 = getelementptr inbounds %struct.hv, %struct.hv* %228, i32 0, i32 2
  %229 = load i32, i32* %sv_flags350, align 4
  %or351 = or i32 %229, 134217728
  store i32 %or351, i32* %sv_flags350, align 4
  br label %if.end352

if.end352:                                        ; preds = %if.then349, %for.end
  %230 = load %struct.hv*, %struct.hv** %hv, align 8
  %231 = bitcast %struct.hv* %230 to %struct.sv*
  store %struct.sv* %231, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end352, %if.then343, %if.then329, %if.else317, %if.then267, %if.else259, %if.then211, %if.then207, %if.then190, %if.else182, %if.then164, %if.then156, %if.then67, %if.then50, %if.else42, %if.then10, %if.else
  %232 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %232
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_code(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sp = alloca %struct.sv**, align 8
  %type = alloca i32, align 4
  %count = alloca i32, align 4
  %tagnum = alloca i32, align 4
  %cv = alloca %struct.sv*, align 8
  %sv = alloca %struct.sv*, align 8
  %text = alloca %struct.sv*, align 8
  %sub = alloca %struct.sv*, align 8
  %errsv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %ref = alloca %struct.sv*, align 8
  %mark_stack_entry = alloca i32*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  store %struct.sv* null, %struct.sv** %text, align 8
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 10
  %2 = load i64, i64* %tagnum1, align 8
  %conv = trunc i64 %2 to i32
  store i32 %conv, i32* %tagnum, align 4
  %call = call %struct.sv* @Perl_newSViv(i64 0)
  store %struct.sv* %call, %struct.sv** %sv, align 8
  %3 = load i8*, i8** %cname.addr, align 8
  %tobool = icmp ne i8* %3, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %4 = load i8*, i8** %cname.addr, align 8
  %call2 = call %struct.hv* @Perl_gv_stashpv(i8* %4, i32 1)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call2, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  br label %do.body

do.body:                                          ; preds = %cond.end
  br label %do.body3

do.body3:                                         ; preds = %do.body
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 5
  %6 = load %struct.av*, %struct.av** %aseen, align 8
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 10
  %8 = load i64, i64* %tagnum4, align 8
  %inc = add nsw i64 %8, 1
  store i64 %inc, i64* %tagnum4, align 8
  %9 = load %struct.sv*, %struct.sv** %sv, align 8
  %10 = bitcast %struct.sv* %9 to i8*
  %11 = bitcast i8* %10 to %struct.sv*
  %call5 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %11)
  %call6 = call %struct.sv** @Perl_av_store(%struct.av* %6, i64 %8, %struct.sv* %call5)
  %cmp = icmp eq %struct.sv** %call6, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body3
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %do.body3
  br label %do.end

do.end:                                           ; preds = %if.end
  %12 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool8 = icmp ne %struct.hv* %12, null
  br i1 %tobool8, label %if.then9, label %if.end89

if.then9:                                         ; preds = %do.end
  br label %do.body10

do.body10:                                        ; preds = %if.then9
  %13 = load %struct.sv*, %struct.sv** %sv, align 8
  %call11 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %13)
  store %struct.sv* %call11, %struct.sv** %ref, align 8
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 30
  %15 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool12 = icmp ne i32 %15, 0
  br i1 %tobool12, label %land.lhs.true, label %if.end83

land.lhs.true:                                    ; preds = %do.body10
  %16 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %16, i32 0, i32 2
  %17 = load i32, i32* %sv_flags, align 4
  %and = and i32 %17, 33554432
  %tobool13 = icmp ne i32 %and, 0
  br i1 %tobool13, label %land.lhs.true14, label %cond.false73

land.lhs.true14:                                  ; preds = %land.lhs.true
  %18 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %18, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %19 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %20 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %20, i32 0, i32 0
  %21 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %21, i32 0, i32 3
  %22 = load i64, i64* %xhv_max, align 8
  %add = add i64 %22, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %19, i64 %add
  %23 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %23, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %24 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool15 = icmp ne %struct.hek* %24, null
  br i1 %tobool15, label %land.lhs.true16, label %cond.false73

land.lhs.true16:                                  ; preds = %land.lhs.true14
  %25 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u17 = getelementptr inbounds %struct.hv, %struct.hv* %25, i32 0, i32 3
  %svu_hash18 = bitcast %union.anon.4* %sv_u17 to %struct.he***
  %26 = load %struct.he**, %struct.he*** %svu_hash18, align 8
  %27 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any19 = getelementptr inbounds %struct.hv, %struct.hv* %27, i32 0, i32 0
  %28 = load %struct.xpvhv*, %struct.xpvhv** %sv_any19, align 8
  %xhv_max20 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %28, i32 0, i32 3
  %29 = load i64, i64* %xhv_max20, align 8
  %add21 = add i64 %29, 1
  %arrayidx22 = getelementptr inbounds %struct.he*, %struct.he** %26, i64 %add21
  %30 = bitcast %struct.he** %arrayidx22 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %30, i32 0, i32 4
  %31 = load i32, i32* %xhv_name_count, align 4
  %tobool23 = icmp ne i32 %31, 0
  br i1 %tobool23, label %cond.true24, label %cond.false33

cond.true24:                                      ; preds = %land.lhs.true16
  %32 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u25 = getelementptr inbounds %struct.hv, %struct.hv* %32, i32 0, i32 3
  %svu_hash26 = bitcast %union.anon.4* %sv_u25 to %struct.he***
  %33 = load %struct.he**, %struct.he*** %svu_hash26, align 8
  %34 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any27 = getelementptr inbounds %struct.hv, %struct.hv* %34, i32 0, i32 0
  %35 = load %struct.xpvhv*, %struct.xpvhv** %sv_any27, align 8
  %xhv_max28 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %35, i32 0, i32 3
  %36 = load i64, i64* %xhv_max28, align 8
  %add29 = add i64 %36, 1
  %arrayidx30 = getelementptr inbounds %struct.he*, %struct.he** %33, i64 %add29
  %37 = bitcast %struct.he** %arrayidx30 to %struct.xpvhv_aux*
  %xhv_name_u31 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %37, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u31 to %struct.hek***
  %38 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %39 = load %struct.hek*, %struct.hek** %38, align 8
  %tobool32 = icmp ne %struct.hek* %39, null
  br i1 %tobool32, label %cond.true43, label %cond.false73

cond.false33:                                     ; preds = %land.lhs.true16
  %40 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u34 = getelementptr inbounds %struct.hv, %struct.hv* %40, i32 0, i32 3
  %svu_hash35 = bitcast %union.anon.4* %sv_u34 to %struct.he***
  %41 = load %struct.he**, %struct.he*** %svu_hash35, align 8
  %42 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any36 = getelementptr inbounds %struct.hv, %struct.hv* %42, i32 0, i32 0
  %43 = load %struct.xpvhv*, %struct.xpvhv** %sv_any36, align 8
  %xhv_max37 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %43, i32 0, i32 3
  %44 = load i64, i64* %xhv_max37, align 8
  %add38 = add i64 %44, 1
  %arrayidx39 = getelementptr inbounds %struct.he*, %struct.he** %41, i64 %add38
  %45 = bitcast %struct.he** %arrayidx39 to %struct.xpvhv_aux*
  %xhv_name_u40 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %45, i32 0, i32 0
  %xhvnameu_name41 = bitcast %union._xhvnameu* %xhv_name_u40 to %struct.hek**
  %46 = load %struct.hek*, %struct.hek** %xhvnameu_name41, align 8
  %tobool42 = icmp ne %struct.hek* %46, null
  br i1 %tobool42, label %cond.true43, label %cond.false73

cond.true43:                                      ; preds = %cond.false33, %cond.true24
  %47 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u44 = getelementptr inbounds %struct.hv, %struct.hv* %47, i32 0, i32 3
  %svu_hash45 = bitcast %union.anon.4* %sv_u44 to %struct.he***
  %48 = load %struct.he**, %struct.he*** %svu_hash45, align 8
  %49 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any46 = getelementptr inbounds %struct.hv, %struct.hv* %49, i32 0, i32 0
  %50 = load %struct.xpvhv*, %struct.xpvhv** %sv_any46, align 8
  %xhv_max47 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %50, i32 0, i32 3
  %51 = load i64, i64* %xhv_max47, align 8
  %add48 = add i64 %51, 1
  %arrayidx49 = getelementptr inbounds %struct.he*, %struct.he** %48, i64 %add48
  %52 = bitcast %struct.he** %arrayidx49 to %struct.xpvhv_aux*
  %xhv_name_count50 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %52, i32 0, i32 4
  %53 = load i32, i32* %xhv_name_count50, align 4
  %tobool51 = icmp ne i32 %53, 0
  br i1 %tobool51, label %cond.true52, label %cond.false61

cond.true52:                                      ; preds = %cond.true43
  %54 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u53 = getelementptr inbounds %struct.hv, %struct.hv* %54, i32 0, i32 3
  %svu_hash54 = bitcast %union.anon.4* %sv_u53 to %struct.he***
  %55 = load %struct.he**, %struct.he*** %svu_hash54, align 8
  %56 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any55 = getelementptr inbounds %struct.hv, %struct.hv* %56, i32 0, i32 0
  %57 = load %struct.xpvhv*, %struct.xpvhv** %sv_any55, align 8
  %xhv_max56 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %57, i32 0, i32 3
  %58 = load i64, i64* %xhv_max56, align 8
  %add57 = add i64 %58, 1
  %arrayidx58 = getelementptr inbounds %struct.he*, %struct.he** %55, i64 %add57
  %59 = bitcast %struct.he** %arrayidx58 to %struct.xpvhv_aux*
  %xhv_name_u59 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %59, i32 0, i32 0
  %xhvnameu_names60 = bitcast %union._xhvnameu* %xhv_name_u59 to %struct.hek***
  %60 = load %struct.hek**, %struct.hek*** %xhvnameu_names60, align 8
  %61 = load %struct.hek*, %struct.hek** %60, align 8
  br label %cond.end70

cond.false61:                                     ; preds = %cond.true43
  %62 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_u62 = getelementptr inbounds %struct.hv, %struct.hv* %62, i32 0, i32 3
  %svu_hash63 = bitcast %union.anon.4* %sv_u62 to %struct.he***
  %63 = load %struct.he**, %struct.he*** %svu_hash63, align 8
  %64 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any64 = getelementptr inbounds %struct.hv, %struct.hv* %64, i32 0, i32 0
  %65 = load %struct.xpvhv*, %struct.xpvhv** %sv_any64, align 8
  %xhv_max65 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %65, i32 0, i32 3
  %66 = load i64, i64* %xhv_max65, align 8
  %add66 = add i64 %66, 1
  %arrayidx67 = getelementptr inbounds %struct.he*, %struct.he** %63, i64 %add66
  %67 = bitcast %struct.he** %arrayidx67 to %struct.xpvhv_aux*
  %xhv_name_u68 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %67, i32 0, i32 0
  %xhvnameu_name69 = bitcast %union._xhvnameu* %xhv_name_u68 to %struct.hek**
  %68 = load %struct.hek*, %struct.hek** %xhvnameu_name69, align 8
  br label %cond.end70

cond.end70:                                       ; preds = %cond.false61, %cond.true52
  %cond71 = phi %struct.hek* [ %61, %cond.true52 ], [ %68, %cond.false61 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond71, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool72 = icmp ne i8* %arraydecay, null
  br i1 %tobool72, label %land.lhs.true74, label %cond.false78

cond.false73:                                     ; preds = %cond.false33, %cond.true24, %land.lhs.true14, %land.lhs.true
  br i1 false, label %land.lhs.true74, label %cond.false78

land.lhs.true74:                                  ; preds = %cond.false73, %cond.end70
  %69 = load %struct.hv*, %struct.hv** %stash, align 8
  %call75 = call i32 @Perl_Gv_AMupdate(%struct.hv* %69, i1 zeroext false)
  %tobool76 = icmp ne i32 %call75, 0
  br i1 %tobool76, label %cond.true77, label %cond.false78

cond.true77:                                      ; preds = %land.lhs.true74
  br i1 true, label %if.then81, label %if.end83

cond.false78:                                     ; preds = %land.lhs.true74, %cond.false73, %cond.end70
  %70 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_flags79 = getelementptr inbounds %struct.hv, %struct.hv* %70, i32 0, i32 2
  %71 = load i32, i32* %sv_flags79, align 4
  %and80 = and i32 %71, -268435457
  store i32 %and80, i32* %sv_flags79, align 4
  br i1 false, label %if.then81, label %if.end83

if.then81:                                        ; preds = %cond.false78, %cond.true77
  %72 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded82 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %72, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded82, align 8
  %73 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %73)
  br label %if.end83

if.end83:                                         ; preds = %if.then81, %cond.false78, %cond.true77, %do.body10
  %74 = load %struct.sv*, %struct.sv** %ref, align 8
  %75 = load %struct.hv*, %struct.hv** %stash, align 8
  %call84 = call %struct.sv* @Perl_sv_bless(%struct.sv* %74, %struct.hv* %75)
  br label %do.body85

do.body85:                                        ; preds = %if.end83
  %76 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u86 = getelementptr inbounds %struct.sv, %struct.sv* %76, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u86 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end87

do.end87:                                         ; preds = %do.body85
  %77 = load %struct.sv*, %struct.sv** %ref, align 8
  %78 = bitcast %struct.sv* %77 to i8*
  %79 = bitcast i8* %78 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %79)
  br label %do.end88

do.end88:                                         ; preds = %do.end87
  br label %if.end89

if.end89:                                         ; preds = %do.end88, %do.end
  br label %do.end90

do.end90:                                         ; preds = %if.end89
  br label %do.body91

do.body91:                                        ; preds = %do.end90
  %80 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %80, i32 0, i32 24
  %81 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool92 = icmp ne %struct._PerlIO** %81, null
  br i1 %tobool92, label %if.else104, label %if.then93

if.then93:                                        ; preds = %do.body91
  br label %do.body94

do.body94:                                        ; preds = %if.then93
  %82 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %82, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %83 = load i8*, i8** %aptr, align 8
  %84 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf95 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %84, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf95, i32 0, i32 3
  %85 = load i8*, i8** %aend, align 8
  %cmp96 = icmp ult i8* %83, %85
  br i1 %cmp96, label %if.then98, label %if.else

if.then98:                                        ; preds = %do.body94
  %86 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf99 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %86, i32 0, i32 22
  %aptr100 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf99, i32 0, i32 2
  %87 = load i8*, i8** %aptr100, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %87, i32 1
  store i8* %incdec.ptr, i8** %aptr100, align 8
  %88 = load i8, i8* %87, align 1
  %conv101 = zext i8 %88 to i32
  store i32 %conv101, i32* %type, align 4
  br label %if.end102

if.else:                                          ; preds = %do.body94
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end102:                                        ; preds = %if.then98
  br label %do.end103

do.end103:                                        ; preds = %if.end102
  br label %if.end111

if.else104:                                       ; preds = %do.body91
  %89 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio105 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %89, i32 0, i32 24
  %90 = load %struct._PerlIO**, %struct._PerlIO*** %fio105, align 8
  %call106 = call i32 @PerlIO_getc(%struct._PerlIO** %90)
  store i32 %call106, i32* %type, align 4
  %cmp107 = icmp eq i32 %call106, -1
  br i1 %cmp107, label %if.then109, label %if.end110

if.then109:                                       ; preds = %if.else104
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end110:                                        ; preds = %if.else104
  br label %if.end111

if.end111:                                        ; preds = %if.end110, %do.end103
  br label %do.end112

do.end112:                                        ; preds = %if.end111
  %91 = load i32, i32* %type, align 4
  switch i32 %91, label %sw.default [
    i32 10, label %sw.bb
    i32 1, label %sw.bb114
    i32 23, label %sw.bb116
    i32 24, label %sw.bb118
  ]

sw.bb:                                            ; preds = %do.end112
  %92 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %93 = load i8*, i8** %cname.addr, align 8
  %call113 = call %struct.sv* @retrieve_scalar(%struct.stcxt* %92, i8* %93)
  store %struct.sv* %call113, %struct.sv** %text, align 8
  br label %sw.epilog

sw.bb114:                                         ; preds = %do.end112
  %94 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %95 = load i8*, i8** %cname.addr, align 8
  %call115 = call %struct.sv* @retrieve_lscalar(%struct.stcxt* %94, i8* %95)
  store %struct.sv* %call115, %struct.sv** %text, align 8
  br label %sw.epilog

sw.bb116:                                         ; preds = %do.end112
  %96 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %97 = load i8*, i8** %cname.addr, align 8
  %call117 = call %struct.sv* @retrieve_utf8str(%struct.stcxt* %96, i8* %97)
  store %struct.sv* %call117, %struct.sv** %text, align 8
  br label %sw.epilog

sw.bb118:                                         ; preds = %do.end112
  %98 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %99 = load i8*, i8** %cname.addr, align 8
  %call119 = call %struct.sv* @retrieve_lutf8str(%struct.stcxt* %98, i8* %99)
  store %struct.sv* %call119, %struct.sv** %text, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.end112
  br label %do.body120

do.body120:                                       ; preds = %sw.default
  %100 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %100, i32 0, i32 19
  store i32 1, i32* %s_dirty, align 8
  %101 = load i32, i32* %type, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.77, i64 0, i64 0), i32 %101)
  br label %do.end121

do.end121:                                        ; preds = %do.body120
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.end121, %sw.bb118, %sw.bb116, %sw.bb114, %sw.bb
  %call122 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i64 0, i64 0), i64 4)
  store %struct.sv* %call122, %struct.sv** %sub, align 8
  %102 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_flags123 = getelementptr inbounds %struct.sv, %struct.sv* %102, i32 0, i32 2
  %103 = load i32, i32* %sv_flags123, align 4
  %and124 = and i32 %103, 536870912
  %tobool125 = icmp ne i32 %and124, 0
  br i1 %tobool125, label %if.then126, label %if.end128

if.then126:                                       ; preds = %sw.epilog
  %104 = load %struct.sv*, %struct.sv** %sub, align 8
  %sv_flags127 = getelementptr inbounds %struct.sv, %struct.sv* %104, i32 0, i32 2
  %105 = load i32, i32* %sv_flags127, align 4
  %or = or i32 %105, 536870912
  store i32 %or, i32* %sv_flags127, align 4
  br label %if.end128

if.end128:                                        ; preds = %if.then126, %sw.epilog
  %106 = load %struct.sv*, %struct.sv** %sub, align 8
  %107 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_flags129 = getelementptr inbounds %struct.sv, %struct.sv* %107, i32 0, i32 2
  %108 = load i32, i32* %sv_flags129, align 4
  %and130 = and i32 %108, 2098176
  %cmp131 = icmp eq i32 %and130, 1024
  br i1 %cmp131, label %cond.true133, label %cond.false135

cond.true133:                                     ; preds = %if.end128
  %109 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_u134 = getelementptr inbounds %struct.sv, %struct.sv* %109, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u134 to i8**
  %110 = load i8*, i8** %svu_pv, align 8
  br label %cond.end137

cond.false135:                                    ; preds = %if.end128
  %111 = load %struct.sv*, %struct.sv** %text, align 8
  %call136 = call i8* @Perl_sv_2pv_flags(%struct.sv* %111, i64* null, i32 2)
  br label %cond.end137

cond.end137:                                      ; preds = %cond.false135, %cond.true133
  %cond138 = phi i8* [ %110, %cond.true133 ], [ %call136, %cond.false135 ]
  call void @Perl_sv_catpv(%struct.sv* %106, i8* %cond138)
  %112 = load %struct.sv*, %struct.sv** %text, align 8
  %113 = bitcast %struct.sv* %112 to i8*
  %114 = bitcast i8* %113 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %114)
  %115 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval = getelementptr inbounds %struct.stcxt, %struct.stcxt* %115, i32 0, i32 16
  %116 = load %struct.sv*, %struct.sv** %eval, align 8
  %cmp139 = icmp eq %struct.sv* %116, null
  br i1 %cmp139, label %if.then141, label %if.end146

if.then141:                                       ; preds = %cond.end137
  %call142 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.79, i64 0, i64 0), i32 1)
  %117 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval143 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %117, i32 0, i32 16
  store %struct.sv* %call142, %struct.sv** %eval143, align 8
  %118 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval144 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %118, i32 0, i32 16
  %119 = load %struct.sv*, %struct.sv** %eval144, align 8
  %120 = bitcast %struct.sv* %119 to i8*
  %121 = bitcast i8* %120 to %struct.sv*
  %call145 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %121)
  br label %if.end146

if.end146:                                        ; preds = %if.then141, %cond.end137
  %122 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval147 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %122, i32 0, i32 16
  %123 = load %struct.sv*, %struct.sv** %eval147, align 8
  %tobool148 = icmp ne %struct.sv* %123, null
  br i1 %tobool148, label %cond.true149, label %cond.false150

cond.true149:                                     ; preds = %if.end146
  br i1 true, label %land.lhs.true151, label %if.then240

cond.false150:                                    ; preds = %if.end146
  br i1 false, label %land.lhs.true151, label %if.then240

land.lhs.true151:                                 ; preds = %cond.false150, %cond.true149
  %124 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval152 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %124, i32 0, i32 16
  %125 = load %struct.sv*, %struct.sv** %eval152, align 8
  %sv_flags153 = getelementptr inbounds %struct.sv, %struct.sv* %125, i32 0, i32 2
  %126 = load i32, i32* %sv_flags153, align 4
  %and154 = and i32 %126, 2097152
  %tobool155 = icmp ne i32 %and154, 0
  br i1 %tobool155, label %cond.true156, label %cond.false157

cond.true156:                                     ; preds = %land.lhs.true151
  br i1 true, label %cond.true158, label %cond.false162

cond.false157:                                    ; preds = %land.lhs.true151
  br i1 false, label %cond.true158, label %cond.false162

cond.true158:                                     ; preds = %cond.false157, %cond.true156
  %127 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval159 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %127, i32 0, i32 16
  %128 = load %struct.sv*, %struct.sv** %eval159, align 8
  %call160 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %128, i32 2)
  br i1 %call160, label %if.end375, label %if.then240

cond.false162:                                    ; preds = %cond.false157, %cond.true156
  %129 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval163 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %129, i32 0, i32 16
  %130 = load %struct.sv*, %struct.sv** %eval163, align 8
  %sv_flags164 = getelementptr inbounds %struct.sv, %struct.sv* %130, i32 0, i32 2
  %131 = load i32, i32* %sv_flags164, align 4
  %and165 = and i32 %131, 65280
  %tobool166 = icmp ne i32 %and165, 0
  br i1 %tobool166, label %cond.false179, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.false162
  %132 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval167 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %132, i32 0, i32 16
  %133 = load %struct.sv*, %struct.sv** %eval167, align 8
  %sv_flags168 = getelementptr inbounds %struct.sv, %struct.sv* %133, i32 0, i32 2
  %134 = load i32, i32* %sv_flags168, align 4
  %and169 = and i32 %134, 255
  %cmp170 = icmp eq i32 %and169, 8
  br i1 %cmp170, label %cond.false179, label %lor.lhs.false172

lor.lhs.false172:                                 ; preds = %lor.lhs.false
  %135 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval173 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %135, i32 0, i32 16
  %136 = load %struct.sv*, %struct.sv** %eval173, align 8
  %sv_flags174 = getelementptr inbounds %struct.sv, %struct.sv* %136, i32 0, i32 2
  %137 = load i32, i32* %sv_flags174, align 4
  %and175 = and i32 %137, 16826623
  %cmp176 = icmp eq i32 %and175, 16777226
  br i1 %cmp176, label %cond.false179, label %cond.true178

cond.true178:                                     ; preds = %lor.lhs.false172
  br i1 false, label %if.end375, label %if.then240

cond.false179:                                    ; preds = %lor.lhs.false172, %lor.lhs.false, %cond.false162
  %138 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval180 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %138, i32 0, i32 16
  %139 = load %struct.sv*, %struct.sv** %eval180, align 8
  %sv_flags181 = getelementptr inbounds %struct.sv, %struct.sv* %139, i32 0, i32 2
  %140 = load i32, i32* %sv_flags181, align 4
  %and182 = and i32 %140, 1024
  %tobool183 = icmp ne i32 %and182, 0
  br i1 %tobool183, label %cond.true184, label %cond.false205

cond.true184:                                     ; preds = %cond.false179
  %141 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval185 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %141, i32 0, i32 16
  %142 = load %struct.sv*, %struct.sv** %eval185, align 8
  %sv_any186 = getelementptr inbounds %struct.sv, %struct.sv* %142, i32 0, i32 0
  %143 = load i8*, i8** %sv_any186, align 8
  %144 = bitcast i8* %143 to %struct.xpv*
  %tobool187 = icmp ne %struct.xpv* %144, null
  br i1 %tobool187, label %land.lhs.true188, label %if.then240

land.lhs.true188:                                 ; preds = %cond.true184
  %145 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval189 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %145, i32 0, i32 16
  %146 = load %struct.sv*, %struct.sv** %eval189, align 8
  %sv_any190 = getelementptr inbounds %struct.sv, %struct.sv* %146, i32 0, i32 0
  %147 = load i8*, i8** %sv_any190, align 8
  %148 = bitcast i8* %147 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %148, i32 0, i32 2
  %149 = load i64, i64* %xpv_cur, align 8
  %cmp191 = icmp ugt i64 %149, 1
  br i1 %cmp191, label %if.end375, label %lor.lhs.false193

lor.lhs.false193:                                 ; preds = %land.lhs.true188
  %150 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval194 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %150, i32 0, i32 16
  %151 = load %struct.sv*, %struct.sv** %eval194, align 8
  %sv_any195 = getelementptr inbounds %struct.sv, %struct.sv* %151, i32 0, i32 0
  %152 = load i8*, i8** %sv_any195, align 8
  %153 = bitcast i8* %152 to %struct.xpv*
  %xpv_cur196 = getelementptr inbounds %struct.xpv, %struct.xpv* %153, i32 0, i32 2
  %154 = load i64, i64* %xpv_cur196, align 8
  %tobool197 = icmp ne i64 %154, 0
  br i1 %tobool197, label %land.lhs.true198, label %if.then240

land.lhs.true198:                                 ; preds = %lor.lhs.false193
  %155 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval199 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %155, i32 0, i32 16
  %156 = load %struct.sv*, %struct.sv** %eval199, align 8
  %sv_u200 = getelementptr inbounds %struct.sv, %struct.sv* %156, i32 0, i32 3
  %svu_pv201 = bitcast %union.anon* %sv_u200 to i8**
  %157 = load i8*, i8** %svu_pv201, align 8
  %158 = load i8, i8* %157, align 1
  %conv202 = sext i8 %158 to i32
  %cmp203 = icmp ne i32 %conv202, 48
  br i1 %cmp203, label %if.end375, label %if.then240

cond.false205:                                    ; preds = %cond.false179
  %159 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval206 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %159, i32 0, i32 16
  %160 = load %struct.sv*, %struct.sv** %eval206, align 8
  %sv_flags207 = getelementptr inbounds %struct.sv, %struct.sv* %160, i32 0, i32 2
  %161 = load i32, i32* %sv_flags207, align 4
  %and208 = and i32 %161, 768
  %tobool209 = icmp ne i32 %and208, 0
  br i1 %tobool209, label %cond.true210, label %cond.false236

cond.true210:                                     ; preds = %cond.false205
  %162 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval211 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %162, i32 0, i32 16
  %163 = load %struct.sv*, %struct.sv** %eval211, align 8
  %sv_flags212 = getelementptr inbounds %struct.sv, %struct.sv* %163, i32 0, i32 2
  %164 = load i32, i32* %sv_flags212, align 4
  %and213 = and i32 %164, 256
  %tobool214 = icmp ne i32 %and213, 0
  br i1 %tobool214, label %land.lhs.true215, label %lor.lhs.false220

land.lhs.true215:                                 ; preds = %cond.true210
  %165 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval216 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %165, i32 0, i32 16
  %166 = load %struct.sv*, %struct.sv** %eval216, align 8
  %sv_any217 = getelementptr inbounds %struct.sv, %struct.sv* %166, i32 0, i32 0
  %167 = load i8*, i8** %sv_any217, align 8
  %168 = bitcast i8* %167 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %168, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %169 = load i64, i64* %xivu_iv, align 8
  %cmp218 = icmp ne i64 %169, 0
  br i1 %cmp218, label %if.end375, label %lor.lhs.false220

lor.lhs.false220:                                 ; preds = %land.lhs.true215, %cond.true210
  %170 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval221 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %170, i32 0, i32 16
  %171 = load %struct.sv*, %struct.sv** %eval221, align 8
  %sv_flags222 = getelementptr inbounds %struct.sv, %struct.sv* %171, i32 0, i32 2
  %172 = load i32, i32* %sv_flags222, align 4
  %and223 = and i32 %172, 512
  %tobool224 = icmp ne i32 %and223, 0
  br i1 %tobool224, label %land.lhs.true225, label %if.then240

land.lhs.true225:                                 ; preds = %lor.lhs.false220
  %173 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval226 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %173, i32 0, i32 16
  %174 = load %struct.sv*, %struct.sv** %eval226, align 8
  %sv_any227 = getelementptr inbounds %struct.sv, %struct.sv* %174, i32 0, i32 0
  %175 = load i8*, i8** %sv_any227, align 8
  %176 = bitcast i8* %175 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %176, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %177 = load double, double* %xnv_nv, align 8
  %cmp228 = fcmp uno double %177, %177
  br i1 %cmp228, label %if.end375, label %lor.lhs.false229

lor.lhs.false229:                                 ; preds = %land.lhs.true225
  %178 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval230 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %178, i32 0, i32 16
  %179 = load %struct.sv*, %struct.sv** %eval230, align 8
  %sv_any231 = getelementptr inbounds %struct.sv, %struct.sv* %179, i32 0, i32 0
  %180 = load i8*, i8** %sv_any231, align 8
  %181 = bitcast i8* %180 to %struct.xpvnv*
  %xnv_u232 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %181, i32 0, i32 5
  %xnv_nv233 = bitcast %union._xnvu* %xnv_u232 to double*
  %182 = load double, double* %xnv_nv233, align 8
  %cmp234 = fcmp une double %182, 0.000000e+00
  br i1 %cmp234, label %if.end375, label %if.then240

cond.false236:                                    ; preds = %cond.false205
  %183 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval237 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %183, i32 0, i32 16
  %184 = load %struct.sv*, %struct.sv** %eval237, align 8
  %call238 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %184, i32 0)
  br i1 %call238, label %if.end375, label %if.then240

if.then240:                                       ; preds = %cond.false236, %lor.lhs.false229, %lor.lhs.false220, %land.lhs.true198, %lor.lhs.false193, %cond.true184, %cond.true178, %cond.true158, %cond.false150, %cond.true149
  %185 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %forgive_me = getelementptr inbounds %struct.stcxt, %struct.stcxt* %185, i32 0, i32 14
  %186 = load i32, i32* %forgive_me, align 8
  %cmp241 = icmp eq i32 %186, 0
  br i1 %cmp241, label %if.then364, label %lor.lhs.false243

lor.lhs.false243:                                 ; preds = %if.then240
  %187 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %forgive_me244 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %187, i32 0, i32 14
  %188 = load i32, i32* %forgive_me244, align 8
  %cmp245 = icmp slt i32 %188, 0
  br i1 %cmp245, label %land.lhs.true247, label %if.else368

land.lhs.true247:                                 ; preds = %lor.lhs.false243
  %call248 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %tobool249 = icmp ne %struct.sv* %call248, null
  br i1 %tobool249, label %cond.true250, label %cond.false251

cond.true250:                                     ; preds = %land.lhs.true247
  br i1 true, label %land.rhs, label %land.end359

cond.false251:                                    ; preds = %land.lhs.true247
  br i1 false, label %land.rhs, label %land.end359

land.rhs:                                         ; preds = %cond.false251, %cond.true250
  %call252 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_flags253 = getelementptr inbounds %struct.sv, %struct.sv* %call252, i32 0, i32 2
  %189 = load i32, i32* %sv_flags253, align 4
  %and254 = and i32 %189, 2097152
  %tobool255 = icmp ne i32 %and254, 0
  br i1 %tobool255, label %cond.true256, label %cond.false257

cond.true256:                                     ; preds = %land.rhs
  br i1 true, label %cond.true258, label %cond.false262

cond.false257:                                    ; preds = %land.rhs
  br i1 false, label %cond.true258, label %cond.false262

cond.true258:                                     ; preds = %cond.false257, %cond.true256
  %call259 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %call260 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %call259, i32 2)
  %conv261 = zext i1 %call260 to i32
  br label %cond.end356

cond.false262:                                    ; preds = %cond.false257, %cond.true256
  %call263 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_flags264 = getelementptr inbounds %struct.sv, %struct.sv* %call263, i32 0, i32 2
  %190 = load i32, i32* %sv_flags264, align 4
  %and265 = and i32 %190, 65280
  %tobool266 = icmp ne i32 %and265, 0
  br i1 %tobool266, label %cond.false280, label %lor.lhs.false267

lor.lhs.false267:                                 ; preds = %cond.false262
  %call268 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_flags269 = getelementptr inbounds %struct.sv, %struct.sv* %call268, i32 0, i32 2
  %191 = load i32, i32* %sv_flags269, align 4
  %and270 = and i32 %191, 255
  %cmp271 = icmp eq i32 %and270, 8
  br i1 %cmp271, label %cond.false280, label %lor.lhs.false273

lor.lhs.false273:                                 ; preds = %lor.lhs.false267
  %call274 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_flags275 = getelementptr inbounds %struct.sv, %struct.sv* %call274, i32 0, i32 2
  %192 = load i32, i32* %sv_flags275, align 4
  %and276 = and i32 %192, 16826623
  %cmp277 = icmp eq i32 %and276, 16777226
  br i1 %cmp277, label %cond.false280, label %cond.true279

cond.true279:                                     ; preds = %lor.lhs.false273
  br label %cond.end354

cond.false280:                                    ; preds = %lor.lhs.false273, %lor.lhs.false267, %cond.false262
  %call281 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_flags282 = getelementptr inbounds %struct.sv, %struct.sv* %call281, i32 0, i32 2
  %193 = load i32, i32* %sv_flags282, align 4
  %and283 = and i32 %193, 1024
  %tobool284 = icmp ne i32 %and283, 0
  br i1 %tobool284, label %cond.true285, label %cond.false307

cond.true285:                                     ; preds = %cond.false280
  %call286 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_any287 = getelementptr inbounds %struct.sv, %struct.sv* %call286, i32 0, i32 0
  %194 = load i8*, i8** %sv_any287, align 8
  %195 = bitcast i8* %194 to %struct.xpv*
  %tobool288 = icmp ne %struct.xpv* %195, null
  br i1 %tobool288, label %land.rhs289, label %land.end306

land.rhs289:                                      ; preds = %cond.true285
  %call290 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_any291 = getelementptr inbounds %struct.sv, %struct.sv* %call290, i32 0, i32 0
  %196 = load i8*, i8** %sv_any291, align 8
  %197 = bitcast i8* %196 to %struct.xpv*
  %xpv_cur292 = getelementptr inbounds %struct.xpv, %struct.xpv* %197, i32 0, i32 2
  %198 = load i64, i64* %xpv_cur292, align 8
  %cmp293 = icmp ugt i64 %198, 1
  br i1 %cmp293, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs289
  %call295 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_any296 = getelementptr inbounds %struct.sv, %struct.sv* %call295, i32 0, i32 0
  %199 = load i8*, i8** %sv_any296, align 8
  %200 = bitcast i8* %199 to %struct.xpv*
  %xpv_cur297 = getelementptr inbounds %struct.xpv, %struct.xpv* %200, i32 0, i32 2
  %201 = load i64, i64* %xpv_cur297, align 8
  %tobool298 = icmp ne i64 %201, 0
  br i1 %tobool298, label %land.rhs299, label %land.end

land.rhs299:                                      ; preds = %lor.rhs
  %call300 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_u301 = getelementptr inbounds %struct.sv, %struct.sv* %call300, i32 0, i32 3
  %svu_pv302 = bitcast %union.anon* %sv_u301 to i8**
  %202 = load i8*, i8** %svu_pv302, align 8
  %203 = load i8, i8* %202, align 1
  %conv303 = sext i8 %203 to i32
  %cmp304 = icmp ne i32 %conv303, 48
  br label %land.end

land.end:                                         ; preds = %land.rhs299, %lor.rhs
  %204 = phi i1 [ false, %lor.rhs ], [ %cmp304, %land.rhs299 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.rhs289
  %205 = phi i1 [ true, %land.rhs289 ], [ %204, %land.end ]
  br label %land.end306

land.end306:                                      ; preds = %lor.end, %cond.true285
  %206 = phi i1 [ false, %cond.true285 ], [ %205, %lor.end ]
  %land.ext = zext i1 %206 to i32
  br label %cond.end352

cond.false307:                                    ; preds = %cond.false280
  %call308 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_flags309 = getelementptr inbounds %struct.sv, %struct.sv* %call308, i32 0, i32 2
  %207 = load i32, i32* %sv_flags309, align 4
  %and310 = and i32 %207, 768
  %tobool311 = icmp ne i32 %and310, 0
  br i1 %tobool311, label %cond.true312, label %cond.false346

cond.true312:                                     ; preds = %cond.false307
  %call313 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_flags314 = getelementptr inbounds %struct.sv, %struct.sv* %call313, i32 0, i32 2
  %208 = load i32, i32* %sv_flags314, align 4
  %and315 = and i32 %208, 256
  %tobool316 = icmp ne i32 %and315, 0
  br i1 %tobool316, label %land.lhs.true317, label %lor.rhs324

land.lhs.true317:                                 ; preds = %cond.true312
  %call318 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_any319 = getelementptr inbounds %struct.sv, %struct.sv* %call318, i32 0, i32 0
  %209 = load i8*, i8** %sv_any319, align 8
  %210 = bitcast i8* %209 to %struct.xpviv*
  %xiv_u320 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %210, i32 0, i32 4
  %xivu_iv321 = bitcast %union._xivu* %xiv_u320 to i64*
  %211 = load i64, i64* %xivu_iv321, align 8
  %cmp322 = icmp ne i64 %211, 0
  br i1 %cmp322, label %lor.end345, label %lor.rhs324

lor.rhs324:                                       ; preds = %land.lhs.true317, %cond.true312
  %call325 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_flags326 = getelementptr inbounds %struct.sv, %struct.sv* %call325, i32 0, i32 2
  %212 = load i32, i32* %sv_flags326, align 4
  %and327 = and i32 %212, 512
  %tobool328 = icmp ne i32 %and327, 0
  br i1 %tobool328, label %land.rhs329, label %land.end343

land.rhs329:                                      ; preds = %lor.rhs324
  %call330 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_any331 = getelementptr inbounds %struct.sv, %struct.sv* %call330, i32 0, i32 0
  %213 = load i8*, i8** %sv_any331, align 8
  %214 = bitcast i8* %213 to %struct.xpvnv*
  %xnv_u332 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %214, i32 0, i32 5
  %xnv_nv333 = bitcast %union._xnvu* %xnv_u332 to double*
  %215 = load double, double* %xnv_nv333, align 8
  %cmp334 = fcmp uno double %215, %215
  br i1 %cmp334, label %lor.end342, label %lor.rhs335

lor.rhs335:                                       ; preds = %land.rhs329
  %call336 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %sv_any337 = getelementptr inbounds %struct.sv, %struct.sv* %call336, i32 0, i32 0
  %216 = load i8*, i8** %sv_any337, align 8
  %217 = bitcast i8* %216 to %struct.xpvnv*
  %xnv_u338 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %217, i32 0, i32 5
  %xnv_nv339 = bitcast %union._xnvu* %xnv_u338 to double*
  %218 = load double, double* %xnv_nv339, align 8
  %cmp340 = fcmp une double %218, 0.000000e+00
  br label %lor.end342

lor.end342:                                       ; preds = %lor.rhs335, %land.rhs329
  %219 = phi i1 [ true, %land.rhs329 ], [ %cmp340, %lor.rhs335 ]
  br label %land.end343

land.end343:                                      ; preds = %lor.end342, %lor.rhs324
  %220 = phi i1 [ false, %lor.rhs324 ], [ %219, %lor.end342 ]
  br label %lor.end345

lor.end345:                                       ; preds = %land.end343, %land.lhs.true317
  %221 = phi i1 [ true, %land.lhs.true317 ], [ %220, %land.end343 ]
  %lor.ext = zext i1 %221 to i32
  br label %cond.end350

cond.false346:                                    ; preds = %cond.false307
  %call347 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 1)
  %call348 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %call347, i32 0)
  %conv349 = zext i1 %call348 to i32
  br label %cond.end350

cond.end350:                                      ; preds = %cond.false346, %lor.end345
  %cond351 = phi i32 [ %lor.ext, %lor.end345 ], [ %conv349, %cond.false346 ]
  br label %cond.end352

cond.end352:                                      ; preds = %cond.end350, %land.end306
  %cond353 = phi i32 [ %land.ext, %land.end306 ], [ %cond351, %cond.end350 ]
  br label %cond.end354

cond.end354:                                      ; preds = %cond.end352, %cond.true279
  %cond355 = phi i32 [ 0, %cond.true279 ], [ %cond353, %cond.end352 ]
  br label %cond.end356

cond.end356:                                      ; preds = %cond.end354, %cond.true258
  %cond357 = phi i32 [ %conv261, %cond.true258 ], [ %cond355, %cond.end354 ]
  %tobool358 = icmp ne i32 %cond357, 0
  br label %land.end359

land.end359:                                      ; preds = %cond.end356, %cond.false251, %cond.true250
  %222 = phi i1 [ false, %cond.false251 ], [ false, %cond.true250 ], [ %tobool358, %cond.end356 ]
  %223 = zext i1 %222 to i64
  %cond361 = select i1 %222, i32 1, i32 0
  %224 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %forgive_me362 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %224, i32 0, i32 14
  store i32 %cond361, i32* %forgive_me362, align 8
  %tobool363 = icmp ne i32 %cond361, 0
  br i1 %tobool363, label %if.else368, label %if.then364

if.then364:                                       ; preds = %land.end359, %if.then240
  br label %do.body365

do.body365:                                       ; preds = %if.then364
  %225 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty366 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %225, i32 0, i32 19
  store i32 1, i32* %s_dirty366, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.80, i64 0, i64 0))
  br label %do.end367

do.end367:                                        ; preds = %do.body365
  br label %if.end374

if.else368:                                       ; preds = %land.end359, %lor.lhs.false243
  %226 = load %struct.sv*, %struct.sv** %sub, align 8
  %call369 = call %struct.sv* @Perl_newSVsv(%struct.sv* %226)
  store %struct.sv* %call369, %struct.sv** %sv, align 8
  %227 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen370 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %227, i32 0, i32 5
  %228 = load %struct.av*, %struct.av** %aseen370, align 8
  %229 = load i32, i32* %tagnum, align 4
  %conv371 = sext i32 %229 to i64
  %230 = load %struct.sv*, %struct.sv** %sv, align 8
  %231 = bitcast %struct.sv* %230 to i8*
  %232 = bitcast i8* %231 to %struct.sv*
  %call372 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %232)
  %call373 = call %struct.sv** @Perl_av_store(%struct.av* %228, i64 %conv371, %struct.sv* %call372)
  %233 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %233, %struct.sv** %retval, align 8
  br label %return

if.end374:                                        ; preds = %do.end367
  br label %if.end375

if.end375:                                        ; preds = %if.end374, %cond.false236, %lor.lhs.false229, %land.lhs.true225, %land.lhs.true215, %land.lhs.true198, %land.lhs.true188, %cond.true178, %cond.true158
  call void @Perl_push_scope()
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %234 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %234, i64* @PL_tmps_floor, align 8
  %call376 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.81, i64 0, i64 0), i32 1)
  store %struct.sv* %call376, %struct.sv** %errsv, align 8
  %235 = load %struct.sv*, %struct.sv** %errsv, align 8
  call void @Perl_sv_setpvn(%struct.sv* %235, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i64 0)
  %236 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval377 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %236, i32 0, i32 16
  %237 = load %struct.sv*, %struct.sv** %eval377, align 8
  %sv_flags378 = getelementptr inbounds %struct.sv, %struct.sv* %237, i32 0, i32 2
  %238 = load i32, i32* %sv_flags378, align 4
  %and379 = and i32 %238, 2048
  %tobool380 = icmp ne i32 %and379, 0
  br i1 %tobool380, label %land.lhs.true381, label %if.else428

land.lhs.true381:                                 ; preds = %if.end375
  %239 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval382 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %239, i32 0, i32 16
  %240 = load %struct.sv*, %struct.sv** %eval382, align 8
  %sv_u383 = getelementptr inbounds %struct.sv, %struct.sv* %240, i32 0, i32 3
  %svu_rv384 = bitcast %union.anon* %sv_u383 to %struct.sv**
  %241 = load %struct.sv*, %struct.sv** %svu_rv384, align 8
  %sv_flags385 = getelementptr inbounds %struct.sv, %struct.sv* %241, i32 0, i32 2
  %242 = load i32, i32* %sv_flags385, align 4
  %and386 = and i32 %242, 255
  %cmp387 = icmp eq i32 %and386, 13
  br i1 %cmp387, label %if.then389, label %if.else428

if.then389:                                       ; preds = %land.lhs.true381
  br label %do.body390

do.body390:                                       ; preds = %if.then389
  %243 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr391 = getelementptr inbounds i32, i32* %243, i32 1
  store i32* %incdec.ptr391, i32** @PL_markstack_ptr, align 8
  store i32* %incdec.ptr391, i32** %mark_stack_entry, align 8
  %244 = load i32*, i32** @PL_markstack_max, align 8
  %cmp392 = icmp eq i32* %incdec.ptr391, %244
  br i1 %cmp392, label %cond.true394, label %cond.false395

cond.true394:                                     ; preds = %do.body390
  br i1 true, label %if.then396, label %if.end398

cond.false395:                                    ; preds = %do.body390
  br i1 false, label %if.then396, label %if.end398

if.then396:                                       ; preds = %cond.false395, %cond.true394
  %call397 = call i32* @Perl_markstack_grow()
  store i32* %call397, i32** %mark_stack_entry, align 8
  br label %if.end398

if.end398:                                        ; preds = %if.then396, %cond.false395, %cond.true394
  %245 = load %struct.sv**, %struct.sv*** %sp, align 8
  %246 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %245 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %246 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv399 = trunc i64 %sub.ptr.div to i32
  %247 = load i32*, i32** %mark_stack_entry, align 8
  store i32 %conv399, i32* %247, align 4
  br label %do.end400

do.end400:                                        ; preds = %if.end398
  br label %do.body401

do.body401:                                       ; preds = %do.end400
  br label %do.body402

do.body402:                                       ; preds = %do.body401
  %248 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %249 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast403 = ptrtoint %struct.sv** %248 to i64
  %sub.ptr.rhs.cast404 = ptrtoint %struct.sv** %249 to i64
  %sub.ptr.sub405 = sub i64 %sub.ptr.lhs.cast403, %sub.ptr.rhs.cast404
  %sub.ptr.div406 = sdiv exact i64 %sub.ptr.sub405, 8
  %cmp407 = icmp slt i64 %sub.ptr.div406, 1
  br i1 %cmp407, label %cond.true409, label %cond.false410

cond.true409:                                     ; preds = %do.body402
  br i1 true, label %if.then411, label %if.end413

cond.false410:                                    ; preds = %do.body402
  br i1 false, label %if.then411, label %if.end413

if.then411:                                       ; preds = %cond.false410, %cond.true409
  %250 = load %struct.sv**, %struct.sv*** %sp, align 8
  %251 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call412 = call %struct.sv** @Perl_stack_grow(%struct.sv** %250, %struct.sv** %251, i64 1)
  store %struct.sv** %call412, %struct.sv*** %sp, align 8
  %252 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end413

if.end413:                                        ; preds = %if.then411, %cond.false410, %cond.true409
  br label %do.end414

do.end414:                                        ; preds = %if.end413
  %253 = load %struct.sv*, %struct.sv** %sub, align 8
  %call415 = call %struct.sv* @Perl_newSVsv(%struct.sv* %253)
  %call416 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call415)
  %254 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr417 = getelementptr inbounds %struct.sv*, %struct.sv** %254, i32 1
  store %struct.sv** %incdec.ptr417, %struct.sv*** %sp, align 8
  store %struct.sv* %call416, %struct.sv** %incdec.ptr417, align 8
  br label %do.end418

do.end418:                                        ; preds = %do.end414
  %255 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %255, %struct.sv*** @PL_stack_sp, align 8
  %256 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval419 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %256, i32 0, i32 16
  %257 = load %struct.sv*, %struct.sv** %eval419, align 8
  %call420 = call i32 @Perl_call_sv(%struct.sv* %257, i32 2)
  store i32 %call420, i32* %count, align 4
  %258 = load i32, i32* %count, align 4
  %cmp421 = icmp ne i32 %258, 1
  br i1 %cmp421, label %if.then423, label %if.end427

if.then423:                                       ; preds = %do.end418
  br label %do.body424

do.body424:                                       ; preds = %if.then423
  %259 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty425 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %259, i32 0, i32 19
  store i32 1, i32* %s_dirty425, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.82, i64 0, i64 0))
  br label %do.end426

do.end426:                                        ; preds = %do.body424
  br label %if.end427

if.end427:                                        ; preds = %do.end426, %do.end418
  br label %if.end430

if.else428:                                       ; preds = %land.lhs.true381, %if.end375
  %260 = load %struct.sv*, %struct.sv** %sub, align 8
  %call429 = call i32 @Perl_eval_sv(%struct.sv* %260, i32 2)
  br label %if.end430

if.end430:                                        ; preds = %if.else428, %if.end427
  %261 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %261, %struct.sv*** %sp, align 8
  %262 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr431 = getelementptr inbounds %struct.sv*, %struct.sv** %262, i32 -1
  store %struct.sv** %incdec.ptr431, %struct.sv*** %sp, align 8
  %263 = load %struct.sv*, %struct.sv** %262, align 8
  store %struct.sv* %263, %struct.sv** %cv, align 8
  %264 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %264, %struct.sv*** @PL_stack_sp, align 8
  %265 = load %struct.sv*, %struct.sv** %errsv, align 8
  %tobool432 = icmp ne %struct.sv* %265, null
  br i1 %tobool432, label %cond.true433, label %cond.false434

cond.true433:                                     ; preds = %if.end430
  br i1 true, label %land.lhs.true435, label %if.end539

cond.false434:                                    ; preds = %if.end430
  br i1 false, label %land.lhs.true435, label %if.end539

land.lhs.true435:                                 ; preds = %cond.false434, %cond.true433
  %266 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags436 = getelementptr inbounds %struct.sv, %struct.sv* %266, i32 0, i32 2
  %267 = load i32, i32* %sv_flags436, align 4
  %and437 = and i32 %267, 2097152
  %tobool438 = icmp ne i32 %and437, 0
  br i1 %tobool438, label %cond.true439, label %cond.false440

cond.true439:                                     ; preds = %land.lhs.true435
  br i1 true, label %cond.true441, label %cond.false444

cond.false440:                                    ; preds = %land.lhs.true435
  br i1 false, label %cond.true441, label %cond.false444

cond.true441:                                     ; preds = %cond.false440, %cond.true439
  %268 = load %struct.sv*, %struct.sv** %errsv, align 8
  %call442 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %268, i32 2)
  br i1 %call442, label %if.then513, label %if.end539

cond.false444:                                    ; preds = %cond.false440, %cond.true439
  %269 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags445 = getelementptr inbounds %struct.sv, %struct.sv* %269, i32 0, i32 2
  %270 = load i32, i32* %sv_flags445, align 4
  %and446 = and i32 %270, 65280
  %tobool447 = icmp ne i32 %and446, 0
  br i1 %tobool447, label %cond.false459, label %lor.lhs.false448

lor.lhs.false448:                                 ; preds = %cond.false444
  %271 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags449 = getelementptr inbounds %struct.sv, %struct.sv* %271, i32 0, i32 2
  %272 = load i32, i32* %sv_flags449, align 4
  %and450 = and i32 %272, 255
  %cmp451 = icmp eq i32 %and450, 8
  br i1 %cmp451, label %cond.false459, label %lor.lhs.false453

lor.lhs.false453:                                 ; preds = %lor.lhs.false448
  %273 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags454 = getelementptr inbounds %struct.sv, %struct.sv* %273, i32 0, i32 2
  %274 = load i32, i32* %sv_flags454, align 4
  %and455 = and i32 %274, 16826623
  %cmp456 = icmp eq i32 %and455, 16777226
  br i1 %cmp456, label %cond.false459, label %cond.true458

cond.true458:                                     ; preds = %lor.lhs.false453
  br i1 false, label %if.then513, label %if.end539

cond.false459:                                    ; preds = %lor.lhs.false453, %lor.lhs.false448, %cond.false444
  %275 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags460 = getelementptr inbounds %struct.sv, %struct.sv* %275, i32 0, i32 2
  %276 = load i32, i32* %sv_flags460, align 4
  %and461 = and i32 %276, 1024
  %tobool462 = icmp ne i32 %and461, 0
  br i1 %tobool462, label %cond.true463, label %cond.false481

cond.true463:                                     ; preds = %cond.false459
  %277 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_any464 = getelementptr inbounds %struct.sv, %struct.sv* %277, i32 0, i32 0
  %278 = load i8*, i8** %sv_any464, align 8
  %279 = bitcast i8* %278 to %struct.xpv*
  %tobool465 = icmp ne %struct.xpv* %279, null
  br i1 %tobool465, label %land.lhs.true466, label %if.end539

land.lhs.true466:                                 ; preds = %cond.true463
  %280 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_any467 = getelementptr inbounds %struct.sv, %struct.sv* %280, i32 0, i32 0
  %281 = load i8*, i8** %sv_any467, align 8
  %282 = bitcast i8* %281 to %struct.xpv*
  %xpv_cur468 = getelementptr inbounds %struct.xpv, %struct.xpv* %282, i32 0, i32 2
  %283 = load i64, i64* %xpv_cur468, align 8
  %cmp469 = icmp ugt i64 %283, 1
  br i1 %cmp469, label %if.then513, label %lor.lhs.false471

lor.lhs.false471:                                 ; preds = %land.lhs.true466
  %284 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_any472 = getelementptr inbounds %struct.sv, %struct.sv* %284, i32 0, i32 0
  %285 = load i8*, i8** %sv_any472, align 8
  %286 = bitcast i8* %285 to %struct.xpv*
  %xpv_cur473 = getelementptr inbounds %struct.xpv, %struct.xpv* %286, i32 0, i32 2
  %287 = load i64, i64* %xpv_cur473, align 8
  %tobool474 = icmp ne i64 %287, 0
  br i1 %tobool474, label %land.lhs.true475, label %if.end539

land.lhs.true475:                                 ; preds = %lor.lhs.false471
  %288 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_u476 = getelementptr inbounds %struct.sv, %struct.sv* %288, i32 0, i32 3
  %svu_pv477 = bitcast %union.anon* %sv_u476 to i8**
  %289 = load i8*, i8** %svu_pv477, align 8
  %290 = load i8, i8* %289, align 1
  %conv478 = sext i8 %290 to i32
  %cmp479 = icmp ne i32 %conv478, 48
  br i1 %cmp479, label %if.then513, label %if.end539

cond.false481:                                    ; preds = %cond.false459
  %291 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags482 = getelementptr inbounds %struct.sv, %struct.sv* %291, i32 0, i32 2
  %292 = load i32, i32* %sv_flags482, align 4
  %and483 = and i32 %292, 768
  %tobool484 = icmp ne i32 %and483, 0
  br i1 %tobool484, label %cond.true485, label %cond.false510

cond.true485:                                     ; preds = %cond.false481
  %293 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags486 = getelementptr inbounds %struct.sv, %struct.sv* %293, i32 0, i32 2
  %294 = load i32, i32* %sv_flags486, align 4
  %and487 = and i32 %294, 256
  %tobool488 = icmp ne i32 %and487, 0
  br i1 %tobool488, label %land.lhs.true489, label %lor.lhs.false495

land.lhs.true489:                                 ; preds = %cond.true485
  %295 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_any490 = getelementptr inbounds %struct.sv, %struct.sv* %295, i32 0, i32 0
  %296 = load i8*, i8** %sv_any490, align 8
  %297 = bitcast i8* %296 to %struct.xpviv*
  %xiv_u491 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %297, i32 0, i32 4
  %xivu_iv492 = bitcast %union._xivu* %xiv_u491 to i64*
  %298 = load i64, i64* %xivu_iv492, align 8
  %cmp493 = icmp ne i64 %298, 0
  br i1 %cmp493, label %if.then513, label %lor.lhs.false495

lor.lhs.false495:                                 ; preds = %land.lhs.true489, %cond.true485
  %299 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags496 = getelementptr inbounds %struct.sv, %struct.sv* %299, i32 0, i32 2
  %300 = load i32, i32* %sv_flags496, align 4
  %and497 = and i32 %300, 512
  %tobool498 = icmp ne i32 %and497, 0
  br i1 %tobool498, label %land.lhs.true499, label %if.end539

land.lhs.true499:                                 ; preds = %lor.lhs.false495
  %301 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_any500 = getelementptr inbounds %struct.sv, %struct.sv* %301, i32 0, i32 0
  %302 = load i8*, i8** %sv_any500, align 8
  %303 = bitcast i8* %302 to %struct.xpvnv*
  %xnv_u501 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %303, i32 0, i32 5
  %xnv_nv502 = bitcast %union._xnvu* %xnv_u501 to double*
  %304 = load double, double* %xnv_nv502, align 8
  %cmp503 = fcmp uno double %304, %304
  br i1 %cmp503, label %if.then513, label %lor.lhs.false504

lor.lhs.false504:                                 ; preds = %land.lhs.true499
  %305 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_any505 = getelementptr inbounds %struct.sv, %struct.sv* %305, i32 0, i32 0
  %306 = load i8*, i8** %sv_any505, align 8
  %307 = bitcast i8* %306 to %struct.xpvnv*
  %xnv_u506 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %307, i32 0, i32 5
  %xnv_nv507 = bitcast %union._xnvu* %xnv_u506 to double*
  %308 = load double, double* %xnv_nv507, align 8
  %cmp508 = fcmp une double %308, 0.000000e+00
  br i1 %cmp508, label %if.then513, label %if.end539

cond.false510:                                    ; preds = %cond.false481
  %309 = load %struct.sv*, %struct.sv** %errsv, align 8
  %call511 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %309, i32 0)
  br i1 %call511, label %if.then513, label %if.end539

if.then513:                                       ; preds = %cond.false510, %lor.lhs.false504, %land.lhs.true499, %land.lhs.true489, %land.lhs.true475, %land.lhs.true466, %cond.true458, %cond.true441
  br label %do.body514

do.body514:                                       ; preds = %if.then513
  %310 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty515 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %310, i32 0, i32 19
  store i32 1, i32* %s_dirty515, align 8
  %311 = load %struct.sv*, %struct.sv** %sub, align 8
  %sv_flags516 = getelementptr inbounds %struct.sv, %struct.sv* %311, i32 0, i32 2
  %312 = load i32, i32* %sv_flags516, align 4
  %and517 = and i32 %312, 2098176
  %cmp518 = icmp eq i32 %and517, 1024
  br i1 %cmp518, label %cond.true520, label %cond.false523

cond.true520:                                     ; preds = %do.body514
  %313 = load %struct.sv*, %struct.sv** %sub, align 8
  %sv_u521 = getelementptr inbounds %struct.sv, %struct.sv* %313, i32 0, i32 3
  %svu_pv522 = bitcast %union.anon* %sv_u521 to i8**
  %314 = load i8*, i8** %svu_pv522, align 8
  br label %cond.end525

cond.false523:                                    ; preds = %do.body514
  %315 = load %struct.sv*, %struct.sv** %sub, align 8
  %call524 = call i8* @Perl_sv_2pv_flags(%struct.sv* %315, i64* null, i32 2)
  br label %cond.end525

cond.end525:                                      ; preds = %cond.false523, %cond.true520
  %cond526 = phi i8* [ %314, %cond.true520 ], [ %call524, %cond.false523 ]
  %316 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags527 = getelementptr inbounds %struct.sv, %struct.sv* %316, i32 0, i32 2
  %317 = load i32, i32* %sv_flags527, align 4
  %and528 = and i32 %317, 2098176
  %cmp529 = icmp eq i32 %and528, 1024
  br i1 %cmp529, label %cond.true531, label %cond.false534

cond.true531:                                     ; preds = %cond.end525
  %318 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_u532 = getelementptr inbounds %struct.sv, %struct.sv* %318, i32 0, i32 3
  %svu_pv533 = bitcast %union.anon* %sv_u532 to i8**
  %319 = load i8*, i8** %svu_pv533, align 8
  br label %cond.end536

cond.false534:                                    ; preds = %cond.end525
  %320 = load %struct.sv*, %struct.sv** %errsv, align 8
  %call535 = call i8* @Perl_sv_2pv_flags(%struct.sv* %320, i64* null, i32 2)
  br label %cond.end536

cond.end536:                                      ; preds = %cond.false534, %cond.true531
  %cond537 = phi i8* [ %319, %cond.true531 ], [ %call535, %cond.false534 ]
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.83, i64 0, i64 0), i8* %cond526, i8* %cond537)
  br label %do.end538

do.end538:                                        ; preds = %cond.end536
  br label %if.end539

if.end539:                                        ; preds = %do.end538, %cond.false510, %lor.lhs.false504, %lor.lhs.false495, %land.lhs.true475, %lor.lhs.false471, %cond.true463, %cond.true458, %cond.true441, %cond.false434, %cond.true433
  %321 = load %struct.sv*, %struct.sv** %cv, align 8
  %tobool540 = icmp ne %struct.sv* %321, null
  br i1 %tobool540, label %land.lhs.true541, label %if.else555

land.lhs.true541:                                 ; preds = %if.end539
  %322 = load %struct.sv*, %struct.sv** %cv, align 8
  %sv_flags542 = getelementptr inbounds %struct.sv, %struct.sv* %322, i32 0, i32 2
  %323 = load i32, i32* %sv_flags542, align 4
  %and543 = and i32 %323, 2048
  %tobool544 = icmp ne i32 %and543, 0
  br i1 %tobool544, label %land.lhs.true545, label %if.else555

land.lhs.true545:                                 ; preds = %land.lhs.true541
  %324 = load %struct.sv*, %struct.sv** %cv, align 8
  %sv_u546 = getelementptr inbounds %struct.sv, %struct.sv* %324, i32 0, i32 3
  %svu_rv547 = bitcast %union.anon* %sv_u546 to %struct.sv**
  %325 = load %struct.sv*, %struct.sv** %svu_rv547, align 8
  %sv_flags548 = getelementptr inbounds %struct.sv, %struct.sv* %325, i32 0, i32 2
  %326 = load i32, i32* %sv_flags548, align 4
  %and549 = and i32 %326, 255
  %cmp550 = icmp eq i32 %and549, 13
  br i1 %cmp550, label %if.then552, label %if.else555

if.then552:                                       ; preds = %land.lhs.true545
  %327 = load %struct.sv*, %struct.sv** %cv, align 8
  %sv_u553 = getelementptr inbounds %struct.sv, %struct.sv* %327, i32 0, i32 3
  %svu_rv554 = bitcast %union.anon* %sv_u553 to %struct.sv**
  %328 = load %struct.sv*, %struct.sv** %svu_rv554, align 8
  store %struct.sv* %328, %struct.sv** %sv, align 8
  br label %if.end570

if.else555:                                       ; preds = %land.lhs.true545, %land.lhs.true541, %if.end539
  br label %do.body556

do.body556:                                       ; preds = %if.else555
  %329 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty557 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %329, i32 0, i32 19
  store i32 1, i32* %s_dirty557, align 8
  %330 = load %struct.sv*, %struct.sv** %sub, align 8
  %sv_flags558 = getelementptr inbounds %struct.sv, %struct.sv* %330, i32 0, i32 2
  %331 = load i32, i32* %sv_flags558, align 4
  %and559 = and i32 %331, 2098176
  %cmp560 = icmp eq i32 %and559, 1024
  br i1 %cmp560, label %cond.true562, label %cond.false565

cond.true562:                                     ; preds = %do.body556
  %332 = load %struct.sv*, %struct.sv** %sub, align 8
  %sv_u563 = getelementptr inbounds %struct.sv, %struct.sv* %332, i32 0, i32 3
  %svu_pv564 = bitcast %union.anon* %sv_u563 to i8**
  %333 = load i8*, i8** %svu_pv564, align 8
  br label %cond.end567

cond.false565:                                    ; preds = %do.body556
  %334 = load %struct.sv*, %struct.sv** %sub, align 8
  %call566 = call i8* @Perl_sv_2pv_flags(%struct.sv* %334, i64* null, i32 2)
  br label %cond.end567

cond.end567:                                      ; preds = %cond.false565, %cond.true562
  %cond568 = phi i8* [ %333, %cond.true562 ], [ %call566, %cond.false565 ]
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.84, i64 0, i64 0), i8* %cond568)
  br label %do.end569

do.end569:                                        ; preds = %cond.end567
  br label %if.end570

if.end570:                                        ; preds = %do.end569, %if.then552
  %335 = load %struct.sv*, %struct.sv** %sv, align 8
  %336 = bitcast %struct.sv* %335 to i8*
  %337 = bitcast i8* %336 to %struct.sv*
  %call571 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %337)
  %338 = load %struct.sv*, %struct.sv** %sub, align 8
  %339 = bitcast %struct.sv* %338 to i8*
  %340 = bitcast i8* %339 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %340)
  %341 = load i64, i64* @PL_tmps_ix, align 8
  %342 = load i64, i64* @PL_tmps_floor, align 8
  %cmp572 = icmp sgt i64 %341, %342
  br i1 %cmp572, label %if.then574, label %if.end575

if.then574:                                       ; preds = %if.end570
  call void @Perl_free_tmps()
  br label %if.end575

if.end575:                                        ; preds = %if.then574, %if.end570
  call void @Perl_pop_scope()
  %343 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen576 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %343, i32 0, i32 5
  %344 = load %struct.av*, %struct.av** %aseen576, align 8
  %345 = load i32, i32* %tagnum, align 4
  %conv577 = sext i32 %345 to i64
  %346 = load %struct.sv*, %struct.sv** %sv, align 8
  %347 = bitcast %struct.sv* %346 to i8*
  %348 = bitcast i8* %347 to %struct.sv*
  %call578 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %348)
  %call579 = call %struct.sv** @Perl_av_store(%struct.av* %344, i64 %conv577, %struct.sv* %call578)
  %349 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %349, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %if.end575, %if.else368, %if.then109, %if.else, %if.then
  %350 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %350
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_weakref(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %1 = load i8*, i8** %cname.addr, align 8
  %call = call %struct.sv* @retrieve_ref(%struct.stcxt* %0, i8* %1)
  store %struct.sv* %call, %struct.sv** %sv, align 8
  %2 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool = icmp ne %struct.sv* %2, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct.sv*, %struct.sv** %sv, align 8
  %call1 = call %struct.sv* @Perl_sv_rvweaken(%struct.sv* %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.sv*, %struct.sv** %sv, align 8
  ret %struct.sv* %4
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_weakoverloaded(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %1 = load i8*, i8** %cname.addr, align 8
  %call = call %struct.sv* @retrieve_overloaded(%struct.stcxt* %0, i8* %1)
  store %struct.sv* %call, %struct.sv** %sv, align 8
  %2 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool = icmp ne %struct.sv* %2, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct.sv*, %struct.sv** %sv, align 8
  %call1 = call %struct.sv* @Perl_sv_rvweaken(%struct.sv* %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.sv*, %struct.sv** %sv, align 8
  ret %struct.sv* %4
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_vstring(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %s = alloca [256 x i8], align 16
  %len = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 24
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else6, label %if.then

if.then:                                          ; preds = %do.body
  br label %do.body1

do.body1:                                         ; preds = %if.then
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %3, %5
  br i1 %cmp, label %if.then3, label %if.else

if.then3:                                         ; preds = %do.body1
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 22
  %aptr5 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf4, i32 0, i32 2
  %7 = load i8*, i8** %aptr5, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %aptr5, align 8
  %8 = load i8, i8* %7, align 1
  %conv = zext i8 %8 to i32
  store i32 %conv, i32* %len, align 4
  br label %if.end

if.else:                                          ; preds = %do.body1
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then3
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end12

if.else6:                                         ; preds = %do.body
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio7 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 24
  %10 = load %struct._PerlIO**, %struct._PerlIO*** %fio7, align 8
  %call = call i32 @PerlIO_getc(%struct._PerlIO** %10)
  store i32 %call, i32* %len, align 4
  %cmp8 = icmp eq i32 %call, -1
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.else6
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end11:                                         ; preds = %if.else6
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %do.end
  br label %do.end13

do.end13:                                         ; preds = %if.end12
  br label %do.body14

do.body14:                                        ; preds = %do.end13
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio15 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 24
  %12 = load %struct._PerlIO**, %struct._PerlIO*** %fio15, align 8
  %tobool16 = icmp ne %struct._PerlIO** %12, null
  br i1 %tobool16, label %if.else36, label %if.then17

if.then17:                                        ; preds = %do.body14
  br label %do.body18

do.body18:                                        ; preds = %if.then17
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 22
  %aptr20 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf19, i32 0, i32 2
  %14 = load i8*, i8** %aptr20, align 8
  %15 = load i32, i32* %len, align 4
  %idx.ext = sext i32 %15 to i64
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %idx.ext
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf21 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 22
  %aend22 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf21, i32 0, i32 3
  %17 = load i8*, i8** %aend22, align 8
  %cmp23 = icmp ule i8* %add.ptr, %17
  br i1 %cmp23, label %if.then25, label %if.else33

if.then25:                                        ; preds = %do.body18
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %s, i64 0, i64 0
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 22
  %aptr27 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 2
  %19 = load i8*, i8** %aptr27, align 8
  %20 = load i32, i32* %len, align 4
  %conv28 = sext i32 %20 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %arraydecay, i8* align 1 %19, i64 %conv28, i1 false)
  %21 = load i32, i32* %len, align 4
  %22 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf29 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %22, i32 0, i32 22
  %aptr30 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf29, i32 0, i32 2
  %23 = load i8*, i8** %aptr30, align 8
  %idx.ext31 = sext i32 %21 to i64
  %add.ptr32 = getelementptr inbounds i8, i8* %23, i64 %idx.ext31
  store i8* %add.ptr32, i8** %aptr30, align 8
  br label %if.end34

if.else33:                                        ; preds = %do.body18
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end34:                                         ; preds = %if.then25
  br label %do.end35

do.end35:                                         ; preds = %if.end34
  br label %if.end46

if.else36:                                        ; preds = %do.body14
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio37 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 24
  %25 = load %struct._PerlIO**, %struct._PerlIO*** %fio37, align 8
  %arraydecay38 = getelementptr inbounds [256 x i8], [256 x i8]* %s, i64 0, i64 0
  %26 = load i32, i32* %len, align 4
  %conv39 = sext i32 %26 to i64
  %call40 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %25, i8* %arraydecay38, i64 %conv39)
  %27 = load i32, i32* %len, align 4
  %conv41 = sext i32 %27 to i64
  %cmp42 = icmp ne i64 %call40, %conv41
  br i1 %cmp42, label %if.then44, label %if.end45

if.then44:                                        ; preds = %if.else36
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end45:                                         ; preds = %if.else36
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %do.end35
  br label %do.end47

do.end47:                                         ; preds = %if.end46
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %29 = load i8*, i8** %cname.addr, align 8
  %call48 = call %struct.sv* @retrieve(%struct.stcxt* %28, i8* %29)
  store %struct.sv* %call48, %struct.sv** %sv, align 8
  %30 = load %struct.sv*, %struct.sv** %sv, align 8
  %arraydecay49 = getelementptr inbounds [256 x i8], [256 x i8]* %s, i64 0, i64 0
  %31 = load i32, i32* %len, align 4
  call void @Perl_sv_magic(%struct.sv* %30, %struct.sv* null, i32 86, i8* %arraydecay49, i32 %31)
  %32 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %32, i32 0, i32 2
  %33 = load i32, i32* %sv_flags, align 4
  %or = or i32 %33, 8388608
  store i32 %or, i32* %sv_flags, align 4
  %34 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %34, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %do.end47, %if.then44, %if.else33, %if.then10, %if.else
  %35 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %35
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_lvstring(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %s = alloca i8*, align 8
  %len = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 24
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else19, label %if.then

if.then:                                          ; preds = %do.body
  br label %do.body1

do.body1:                                         ; preds = %if.then
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 4
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %5
  br i1 %cmp, label %if.then3, label %if.else17

if.then3:                                         ; preds = %do.body1
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 22
  %aptr5 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf4, i32 0, i32 2
  %7 = load i8*, i8** %aptr5, align 8
  %8 = ptrtoint i8* %7 to i64
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 22
  %aptr7 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf6, i32 0, i32 2
  %10 = load i8*, i8** %aptr7, align 8
  %11 = ptrtoint i8* %10 to i64
  %and = and i64 %11, -4
  %cmp8 = icmp eq i64 %8, %and
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.then3
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf10 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 22
  %aptr11 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf10, i32 0, i32 2
  %13 = load i8*, i8** %aptr11, align 8
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %len, align 4
  br label %if.end

if.else:                                          ; preds = %if.then3
  %16 = bitcast i32* %len to i8*
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf12 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 22
  %aptr13 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf12, i32 0, i32 2
  %18 = load i8*, i8** %aptr13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 1 %18, i64 4, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 22
  %aptr15 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf14, i32 0, i32 2
  %20 = load i8*, i8** %aptr15, align 8
  %add.ptr16 = getelementptr inbounds i8, i8* %20, i64 4
  store i8* %add.ptr16, i8** %aptr15, align 8
  br label %if.end18

if.else17:                                        ; preds = %do.body1
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end18:                                         ; preds = %if.end
  br label %do.end

do.end:                                           ; preds = %if.end18
  br label %if.end24

if.else19:                                        ; preds = %do.body
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio20 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 24
  %22 = load %struct._PerlIO**, %struct._PerlIO*** %fio20, align 8
  %23 = bitcast i32* %len to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %22, i8* %23, i64 4)
  %cmp21 = icmp ne i64 %call, 4
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.else19
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end23:                                         ; preds = %if.else19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %do.end
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 12
  %25 = load i32, i32* %netorder, align 8
  %tobool25 = icmp ne i32 %25, 0
  br i1 %tobool25, label %if.then26, label %if.end28

if.then26:                                        ; preds = %if.end24
  %26 = load i32, i32* %len, align 4
  %call27 = call i32 @my_swap32(i32 %26)
  store i32 %call27, i32* %len, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.end24
  br label %do.end29

do.end29:                                         ; preds = %if.end28
  %27 = load i32, i32* %len, align 4
  %add = add nsw i32 %27, 1
  %conv = sext i32 %add to i64
  %mul = mul i64 %conv, 1
  %call30 = call i8* @Perl_safesysmalloc(i64 %mul)
  store i8* %call30, i8** %s, align 8
  br label %do.body31

do.body31:                                        ; preds = %do.end29
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio32 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 24
  %29 = load %struct._PerlIO**, %struct._PerlIO*** %fio32, align 8
  %tobool33 = icmp ne %struct._PerlIO** %29, null
  br i1 %tobool33, label %if.else54, label %if.then34

if.then34:                                        ; preds = %do.body31
  br label %do.body35

do.body35:                                        ; preds = %if.then34
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf36 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 22
  %aptr37 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf36, i32 0, i32 2
  %31 = load i8*, i8** %aptr37, align 8
  %32 = load i32, i32* %len, align 4
  %idx.ext = sext i32 %32 to i64
  %add.ptr38 = getelementptr inbounds i8, i8* %31, i64 %idx.ext
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf39 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 22
  %aend40 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf39, i32 0, i32 3
  %34 = load i8*, i8** %aend40, align 8
  %cmp41 = icmp ule i8* %add.ptr38, %34
  br i1 %cmp41, label %if.then43, label %if.else51

if.then43:                                        ; preds = %do.body35
  %35 = load i8*, i8** %s, align 8
  %36 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf44 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %36, i32 0, i32 22
  %aptr45 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf44, i32 0, i32 2
  %37 = load i8*, i8** %aptr45, align 8
  %38 = load i32, i32* %len, align 4
  %conv46 = sext i32 %38 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %35, i8* align 1 %37, i64 %conv46, i1 false)
  %39 = load i32, i32* %len, align 4
  %40 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf47 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %40, i32 0, i32 22
  %aptr48 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf47, i32 0, i32 2
  %41 = load i8*, i8** %aptr48, align 8
  %idx.ext49 = sext i32 %39 to i64
  %add.ptr50 = getelementptr inbounds i8, i8* %41, i64 %idx.ext49
  store i8* %add.ptr50, i8** %aptr48, align 8
  br label %if.end52

if.else51:                                        ; preds = %do.body35
  %42 = load i8*, i8** %s, align 8
  call void @Perl_safesysfree(i8* %42)
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end52:                                         ; preds = %if.then43
  br label %do.end53

do.end53:                                         ; preds = %if.end52
  br label %if.end63

if.else54:                                        ; preds = %do.body31
  %43 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio55 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %43, i32 0, i32 24
  %44 = load %struct._PerlIO**, %struct._PerlIO*** %fio55, align 8
  %45 = load i8*, i8** %s, align 8
  %46 = load i32, i32* %len, align 4
  %conv56 = sext i32 %46 to i64
  %call57 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %44, i8* %45, i64 %conv56)
  %47 = load i32, i32* %len, align 4
  %conv58 = sext i32 %47 to i64
  %cmp59 = icmp ne i64 %call57, %conv58
  br i1 %cmp59, label %if.then61, label %if.end62

if.then61:                                        ; preds = %if.else54
  %48 = load i8*, i8** %s, align 8
  call void @Perl_safesysfree(i8* %48)
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end62:                                         ; preds = %if.else54
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %do.end53
  br label %do.end64

do.end64:                                         ; preds = %if.end63
  %49 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %50 = load i8*, i8** %cname.addr, align 8
  %call65 = call %struct.sv* @retrieve(%struct.stcxt* %49, i8* %50)
  store %struct.sv* %call65, %struct.sv** %sv, align 8
  %51 = load %struct.sv*, %struct.sv** %sv, align 8
  %52 = load i8*, i8** %s, align 8
  %53 = load i32, i32* %len, align 4
  call void @Perl_sv_magic(%struct.sv* %51, %struct.sv* null, i32 86, i8* %52, i32 %53)
  %54 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %54, i32 0, i32 2
  %55 = load i32, i32* %sv_flags, align 4
  %or = or i32 %55, 8388608
  store i32 %or, i32* %sv_flags, align 4
  %56 = load i8*, i8** %s, align 8
  call void @Perl_safesysfree(i8* %56)
  %57 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %57, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %do.end64, %if.then61, %if.else51, %if.then22, %if.else17
  %58 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %58
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_svundef_elem(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %ref = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.body1

do.body1:                                         ; preds = %do.body
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 5
  %1 = load %struct.av*, %struct.av** %aseen, align 8
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 10
  %3 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %3, 1
  store i64 %inc, i64* %tagnum, align 8
  %call = call %struct.sv** @Perl_av_store(%struct.av* %1, i64 %3, %struct.sv* @PL_sv_undef)
  %cmp = icmp eq %struct.sv** %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body1
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end:                                           ; preds = %do.body1
  br label %do.end

do.end:                                           ; preds = %if.end
  %4 = load i8*, i8** %cname.addr, align 8
  %tobool = icmp ne i8* %4, null
  br i1 %tobool, label %if.then2, label %if.end78

if.then2:                                         ; preds = %do.end
  br label %do.body3

do.body3:                                         ; preds = %if.then2
  %call4 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* @PL_sv_undef)
  store %struct.sv* %call4, %struct.sv** %ref, align 8
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 30
  %6 = load i32, i32* %in_retrieve_overloaded, align 8
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %land.lhs.true, label %if.end72

land.lhs.true:                                    ; preds = %do.body3
  %7 = load i8*, i8** %cname.addr, align 8
  %8 = bitcast i8* %7 to %struct.hv*
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %8, i32 0, i32 2
  %9 = load i32, i32* %sv_flags, align 4
  %and = and i32 %9, 33554432
  %tobool6 = icmp ne i32 %and, 0
  br i1 %tobool6, label %land.lhs.true7, label %cond.false62

land.lhs.true7:                                   ; preds = %land.lhs.true
  %10 = load i8*, i8** %cname.addr, align 8
  %11 = bitcast i8* %10 to %struct.hv*
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %11, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %12 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %13 = load i8*, i8** %cname.addr, align 8
  %14 = bitcast i8* %13 to %struct.hv*
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %14, i32 0, i32 0
  %15 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %15, i32 0, i32 3
  %16 = load i64, i64* %xhv_max, align 8
  %add = add i64 %16, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %12, i64 %add
  %17 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %17, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %18 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool8 = icmp ne %struct.hek* %18, null
  br i1 %tobool8, label %land.lhs.true9, label %cond.false62

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %19 = load i8*, i8** %cname.addr, align 8
  %20 = bitcast i8* %19 to %struct.hv*
  %sv_u10 = getelementptr inbounds %struct.hv, %struct.hv* %20, i32 0, i32 3
  %svu_hash11 = bitcast %union.anon.4* %sv_u10 to %struct.he***
  %21 = load %struct.he**, %struct.he*** %svu_hash11, align 8
  %22 = load i8*, i8** %cname.addr, align 8
  %23 = bitcast i8* %22 to %struct.hv*
  %sv_any12 = getelementptr inbounds %struct.hv, %struct.hv* %23, i32 0, i32 0
  %24 = load %struct.xpvhv*, %struct.xpvhv** %sv_any12, align 8
  %xhv_max13 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %24, i32 0, i32 3
  %25 = load i64, i64* %xhv_max13, align 8
  %add14 = add i64 %25, 1
  %arrayidx15 = getelementptr inbounds %struct.he*, %struct.he** %21, i64 %add14
  %26 = bitcast %struct.he** %arrayidx15 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %26, i32 0, i32 4
  %27 = load i32, i32* %xhv_name_count, align 4
  %tobool16 = icmp ne i32 %27, 0
  br i1 %tobool16, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true9
  %28 = load i8*, i8** %cname.addr, align 8
  %29 = bitcast i8* %28 to %struct.hv*
  %sv_u17 = getelementptr inbounds %struct.hv, %struct.hv* %29, i32 0, i32 3
  %svu_hash18 = bitcast %union.anon.4* %sv_u17 to %struct.he***
  %30 = load %struct.he**, %struct.he*** %svu_hash18, align 8
  %31 = load i8*, i8** %cname.addr, align 8
  %32 = bitcast i8* %31 to %struct.hv*
  %sv_any19 = getelementptr inbounds %struct.hv, %struct.hv* %32, i32 0, i32 0
  %33 = load %struct.xpvhv*, %struct.xpvhv** %sv_any19, align 8
  %xhv_max20 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %33, i32 0, i32 3
  %34 = load i64, i64* %xhv_max20, align 8
  %add21 = add i64 %34, 1
  %arrayidx22 = getelementptr inbounds %struct.he*, %struct.he** %30, i64 %add21
  %35 = bitcast %struct.he** %arrayidx22 to %struct.xpvhv_aux*
  %xhv_name_u23 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %35, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u23 to %struct.hek***
  %36 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %37 = load %struct.hek*, %struct.hek** %36, align 8
  %tobool24 = icmp ne %struct.hek* %37, null
  br i1 %tobool24, label %cond.true34, label %cond.false62

cond.false:                                       ; preds = %land.lhs.true9
  %38 = load i8*, i8** %cname.addr, align 8
  %39 = bitcast i8* %38 to %struct.hv*
  %sv_u25 = getelementptr inbounds %struct.hv, %struct.hv* %39, i32 0, i32 3
  %svu_hash26 = bitcast %union.anon.4* %sv_u25 to %struct.he***
  %40 = load %struct.he**, %struct.he*** %svu_hash26, align 8
  %41 = load i8*, i8** %cname.addr, align 8
  %42 = bitcast i8* %41 to %struct.hv*
  %sv_any27 = getelementptr inbounds %struct.hv, %struct.hv* %42, i32 0, i32 0
  %43 = load %struct.xpvhv*, %struct.xpvhv** %sv_any27, align 8
  %xhv_max28 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %43, i32 0, i32 3
  %44 = load i64, i64* %xhv_max28, align 8
  %add29 = add i64 %44, 1
  %arrayidx30 = getelementptr inbounds %struct.he*, %struct.he** %40, i64 %add29
  %45 = bitcast %struct.he** %arrayidx30 to %struct.xpvhv_aux*
  %xhv_name_u31 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %45, i32 0, i32 0
  %xhvnameu_name32 = bitcast %union._xhvnameu* %xhv_name_u31 to %struct.hek**
  %46 = load %struct.hek*, %struct.hek** %xhvnameu_name32, align 8
  %tobool33 = icmp ne %struct.hek* %46, null
  br i1 %tobool33, label %cond.true34, label %cond.false62

cond.true34:                                      ; preds = %cond.false, %cond.true
  %47 = load i8*, i8** %cname.addr, align 8
  %48 = bitcast i8* %47 to %struct.hv*
  %sv_u35 = getelementptr inbounds %struct.hv, %struct.hv* %48, i32 0, i32 3
  %svu_hash36 = bitcast %union.anon.4* %sv_u35 to %struct.he***
  %49 = load %struct.he**, %struct.he*** %svu_hash36, align 8
  %50 = load i8*, i8** %cname.addr, align 8
  %51 = bitcast i8* %50 to %struct.hv*
  %sv_any37 = getelementptr inbounds %struct.hv, %struct.hv* %51, i32 0, i32 0
  %52 = load %struct.xpvhv*, %struct.xpvhv** %sv_any37, align 8
  %xhv_max38 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %52, i32 0, i32 3
  %53 = load i64, i64* %xhv_max38, align 8
  %add39 = add i64 %53, 1
  %arrayidx40 = getelementptr inbounds %struct.he*, %struct.he** %49, i64 %add39
  %54 = bitcast %struct.he** %arrayidx40 to %struct.xpvhv_aux*
  %xhv_name_count41 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %54, i32 0, i32 4
  %55 = load i32, i32* %xhv_name_count41, align 4
  %tobool42 = icmp ne i32 %55, 0
  br i1 %tobool42, label %cond.true43, label %cond.false52

cond.true43:                                      ; preds = %cond.true34
  %56 = load i8*, i8** %cname.addr, align 8
  %57 = bitcast i8* %56 to %struct.hv*
  %sv_u44 = getelementptr inbounds %struct.hv, %struct.hv* %57, i32 0, i32 3
  %svu_hash45 = bitcast %union.anon.4* %sv_u44 to %struct.he***
  %58 = load %struct.he**, %struct.he*** %svu_hash45, align 8
  %59 = load i8*, i8** %cname.addr, align 8
  %60 = bitcast i8* %59 to %struct.hv*
  %sv_any46 = getelementptr inbounds %struct.hv, %struct.hv* %60, i32 0, i32 0
  %61 = load %struct.xpvhv*, %struct.xpvhv** %sv_any46, align 8
  %xhv_max47 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %61, i32 0, i32 3
  %62 = load i64, i64* %xhv_max47, align 8
  %add48 = add i64 %62, 1
  %arrayidx49 = getelementptr inbounds %struct.he*, %struct.he** %58, i64 %add48
  %63 = bitcast %struct.he** %arrayidx49 to %struct.xpvhv_aux*
  %xhv_name_u50 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %63, i32 0, i32 0
  %xhvnameu_names51 = bitcast %union._xhvnameu* %xhv_name_u50 to %struct.hek***
  %64 = load %struct.hek**, %struct.hek*** %xhvnameu_names51, align 8
  %65 = load %struct.hek*, %struct.hek** %64, align 8
  br label %cond.end

cond.false52:                                     ; preds = %cond.true34
  %66 = load i8*, i8** %cname.addr, align 8
  %67 = bitcast i8* %66 to %struct.hv*
  %sv_u53 = getelementptr inbounds %struct.hv, %struct.hv* %67, i32 0, i32 3
  %svu_hash54 = bitcast %union.anon.4* %sv_u53 to %struct.he***
  %68 = load %struct.he**, %struct.he*** %svu_hash54, align 8
  %69 = load i8*, i8** %cname.addr, align 8
  %70 = bitcast i8* %69 to %struct.hv*
  %sv_any55 = getelementptr inbounds %struct.hv, %struct.hv* %70, i32 0, i32 0
  %71 = load %struct.xpvhv*, %struct.xpvhv** %sv_any55, align 8
  %xhv_max56 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %71, i32 0, i32 3
  %72 = load i64, i64* %xhv_max56, align 8
  %add57 = add i64 %72, 1
  %arrayidx58 = getelementptr inbounds %struct.he*, %struct.he** %68, i64 %add57
  %73 = bitcast %struct.he** %arrayidx58 to %struct.xpvhv_aux*
  %xhv_name_u59 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %73, i32 0, i32 0
  %xhvnameu_name60 = bitcast %union._xhvnameu* %xhv_name_u59 to %struct.hek**
  %74 = load %struct.hek*, %struct.hek** %xhvnameu_name60, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false52, %cond.true43
  %cond = phi %struct.hek* [ %65, %cond.true43 ], [ %74, %cond.false52 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  %tobool61 = icmp ne i8* %arraydecay, null
  br i1 %tobool61, label %land.lhs.true63, label %cond.false67

cond.false62:                                     ; preds = %cond.false, %cond.true, %land.lhs.true7, %land.lhs.true
  br i1 false, label %land.lhs.true63, label %cond.false67

land.lhs.true63:                                  ; preds = %cond.false62, %cond.end
  %75 = load i8*, i8** %cname.addr, align 8
  %76 = bitcast i8* %75 to %struct.hv*
  %call64 = call i32 @Perl_Gv_AMupdate(%struct.hv* %76, i1 zeroext false)
  %tobool65 = icmp ne i32 %call64, 0
  br i1 %tobool65, label %cond.true66, label %cond.false67

cond.true66:                                      ; preds = %land.lhs.true63
  br i1 true, label %if.then70, label %if.end72

cond.false67:                                     ; preds = %land.lhs.true63, %cond.false62, %cond.end
  %77 = load i8*, i8** %cname.addr, align 8
  %78 = bitcast i8* %77 to %struct.hv*
  %sv_flags68 = getelementptr inbounds %struct.hv, %struct.hv* %78, i32 0, i32 2
  %79 = load i32, i32* %sv_flags68, align 4
  %and69 = and i32 %79, -268435457
  store i32 %and69, i32* %sv_flags68, align 4
  br i1 false, label %if.then70, label %if.end72

if.then70:                                        ; preds = %cond.false67, %cond.true66
  %80 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %in_retrieve_overloaded71 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %80, i32 0, i32 30
  store i32 0, i32* %in_retrieve_overloaded71, align 8
  %81 = load %struct.sv*, %struct.sv** %ref, align 8
  call void @SvAMAGIC_on(%struct.sv* %81)
  br label %if.end72

if.end72:                                         ; preds = %if.then70, %cond.false67, %cond.true66, %do.body3
  %82 = load %struct.sv*, %struct.sv** %ref, align 8
  %83 = load i8*, i8** %cname.addr, align 8
  %84 = bitcast i8* %83 to %struct.hv*
  %call73 = call %struct.sv* @Perl_sv_bless(%struct.sv* %82, %struct.hv* %84)
  br label %do.body74

do.body74:                                        ; preds = %if.end72
  %85 = load %struct.sv*, %struct.sv** %ref, align 8
  %sv_u75 = getelementptr inbounds %struct.sv, %struct.sv* %85, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u75 to %struct.sv**
  store %struct.sv* null, %struct.sv** %svu_rv, align 8
  br label %do.end76

do.end76:                                         ; preds = %do.body74
  %86 = load %struct.sv*, %struct.sv** %ref, align 8
  %87 = bitcast %struct.sv* %86 to i8*
  %88 = bitcast i8* %87 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %88)
  br label %do.end77

do.end77:                                         ; preds = %do.end76
  br label %if.end78

if.end78:                                         ; preds = %do.end77, %do.end
  br label %do.end79

do.end79:                                         ; preds = %if.end78
  store %struct.sv* @PL_sv_placeholder, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %do.end79, %if.then
  %89 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %89
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @retrieve_other(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load i8*, i8** %cname.addr, align 8
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_major = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 25
  %2 = load i32, i32* %ver_major, align 8
  %cmp = icmp ne i32 %2, 2
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_minor = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 26
  %4 = load i32, i32* %ver_minor, align 4
  %cmp1 = icmp ne i32 %4, 10
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  br label %do.body

do.body:                                          ; preds = %if.then
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 19
  store i32 1, i32* %s_dirty, align 8
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 24
  %7 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %7, null
  %8 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.59, i64 0, i64 0)
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_major2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 25
  %10 = load i32, i32* %ver_major2, align 8
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_minor3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 26
  %12 = load i32, i32* %ver_minor3, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.85, i64 0, i64 0), i8* %cond, i32 %10, i32 %12, i32 2, i32 10)
  br label %do.end

do.end:                                           ; preds = %do.body
  br label %if.end

if.else:                                          ; preds = %land.lhs.true, %entry
  br label %do.body4

do.body4:                                         ; preds = %if.else
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 19
  store i32 1, i32* %s_dirty5, align 8
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 24
  %15 = load %struct._PerlIO**, %struct._PerlIO*** %fio6, align 8
  %tobool7 = icmp ne %struct._PerlIO** %15, null
  %16 = zext i1 %tobool7 to i64
  %cond8 = select i1 %tobool7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.59, i64 0, i64 0)
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_major9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 25
  %18 = load i32, i32* %ver_major9, align 8
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_minor10 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 26
  %20 = load i32, i32* %ver_minor10, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.86, i64 0, i64 0), i8* %cond8, i32 %18, i32 %20)
  br label %do.end11

do.end11:                                         ; preds = %do.body4
  br label %if.end

if.end:                                           ; preds = %do.end11, %do.end
  ret %struct.sv* null
}

declare dso_local %struct.hv* @Perl_gv_stashpv(i8*, i32) #1

declare dso_local %struct.sv* @Perl_sv_bless(%struct.sv*, %struct.hv*) #1

declare dso_local void @Perl_sv_setpvn(%struct.sv*, i8*, i64) #1

declare dso_local void @Perl_sv_magic(%struct.sv*, %struct.sv*, i32, i8*, i32) #1

declare dso_local void @Perl_av_extend(%struct.av*, i64) #1

declare dso_local void @Perl_av_fill(%struct.av*, i64) #1

declare dso_local void @Perl_hv_ksplit(%struct.hv*, i64) #1

declare dso_local i8* @Perl_sv_grow(%struct.sv*, i64) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @scalar_call(%struct.sv* %obj, %struct.sv* %hook, i32 %cloning, %struct.av* %av, i32 %flags) #0 {
entry:
  %obj.addr = alloca %struct.sv*, align 8
  %hook.addr = alloca %struct.sv*, align 8
  %cloning.addr = alloca i32, align 4
  %av.addr = alloca %struct.av*, align 8
  %flags.addr = alloca i32, align 4
  %sp = alloca %struct.sv**, align 8
  %count = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  %mark_stack_entry = alloca i32*, align 8
  %ary = alloca %struct.sv**, align 8
  %cnt = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.sv* %obj, %struct.sv** %obj.addr, align 8
  store %struct.sv* %hook, %struct.sv** %hook.addr, align 8
  store i32 %cloning, i32* %cloning.addr, align 4
  store %struct.av* %av, %struct.av** %av.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  store %struct.sv* null, %struct.sv** %sv, align 8
  call void @Perl_push_scope()
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %1 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %1, i64* @PL_tmps_floor, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  store i32* %incdec.ptr, i32** %mark_stack_entry, align 8
  %3 = load i32*, i32** @PL_markstack_max, align 8
  %cmp = icmp eq i32* %incdec.ptr, %3
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.body
  br i1 true, label %if.then, label %if.end

cond.false:                                       ; preds = %do.body
  br i1 false, label %if.then, label %if.end

if.then:                                          ; preds = %cond.false, %cond.true
  %call = call i32* @Perl_markstack_grow()
  store i32* %call, i32** %mark_stack_entry, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false, %cond.true
  %4 = load %struct.sv**, %struct.sv*** %sp, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv = trunc i64 %sub.ptr.div to i32
  %6 = load i32*, i32** %mark_stack_entry, align 8
  store i32 %conv, i32* %6, align 4
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %do.body1

do.body1:                                         ; preds = %do.end
  br label %do.body2

do.body2:                                         ; preds = %do.body1
  %7 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %8 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast3 = ptrtoint %struct.sv** %7 to i64
  %sub.ptr.rhs.cast4 = ptrtoint %struct.sv** %8 to i64
  %sub.ptr.sub5 = sub i64 %sub.ptr.lhs.cast3, %sub.ptr.rhs.cast4
  %sub.ptr.div6 = sdiv exact i64 %sub.ptr.sub5, 8
  %cmp7 = icmp slt i64 %sub.ptr.div6, 1
  br i1 %cmp7, label %cond.true9, label %cond.false10

cond.true9:                                       ; preds = %do.body2
  br i1 true, label %if.then11, label %if.end13

cond.false10:                                     ; preds = %do.body2
  br i1 false, label %if.then11, label %if.end13

if.then11:                                        ; preds = %cond.false10, %cond.true9
  %9 = load %struct.sv**, %struct.sv*** %sp, align 8
  %10 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call12 = call %struct.sv** @Perl_stack_grow(%struct.sv** %9, %struct.sv** %10, i64 1)
  store %struct.sv** %call12, %struct.sv*** %sp, align 8
  %11 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %cond.false10, %cond.true9
  br label %do.end14

do.end14:                                         ; preds = %if.end13
  %12 = load %struct.sv*, %struct.sv** %obj.addr, align 8
  %13 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr15 = getelementptr inbounds %struct.sv*, %struct.sv** %13, i32 1
  store %struct.sv** %incdec.ptr15, %struct.sv*** %sp, align 8
  store %struct.sv* %12, %struct.sv** %incdec.ptr15, align 8
  br label %do.end16

do.end16:                                         ; preds = %do.end14
  br label %do.body17

do.body17:                                        ; preds = %do.end16
  br label %do.body18

do.body18:                                        ; preds = %do.body17
  %14 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %15 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast19 = ptrtoint %struct.sv** %14 to i64
  %sub.ptr.rhs.cast20 = ptrtoint %struct.sv** %15 to i64
  %sub.ptr.sub21 = sub i64 %sub.ptr.lhs.cast19, %sub.ptr.rhs.cast20
  %sub.ptr.div22 = sdiv exact i64 %sub.ptr.sub21, 8
  %cmp23 = icmp slt i64 %sub.ptr.div22, 1
  br i1 %cmp23, label %cond.true25, label %cond.false26

cond.true25:                                      ; preds = %do.body18
  br i1 true, label %if.then27, label %if.end29

cond.false26:                                     ; preds = %do.body18
  br i1 false, label %if.then27, label %if.end29

if.then27:                                        ; preds = %cond.false26, %cond.true25
  %16 = load %struct.sv**, %struct.sv*** %sp, align 8
  %17 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call28 = call %struct.sv** @Perl_stack_grow(%struct.sv** %16, %struct.sv** %17, i64 1)
  store %struct.sv** %call28, %struct.sv*** %sp, align 8
  %18 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %cond.false26, %cond.true25
  br label %do.end30

do.end30:                                         ; preds = %if.end29
  %19 = load i32, i32* %cloning.addr, align 4
  %conv31 = sext i32 %19 to i64
  %call32 = call %struct.sv* @Perl_newSViv(i64 %conv31)
  %call33 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call32)
  %20 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr34 = getelementptr inbounds %struct.sv*, %struct.sv** %20, i32 1
  store %struct.sv** %incdec.ptr34, %struct.sv*** %sp, align 8
  store %struct.sv* %call33, %struct.sv** %incdec.ptr34, align 8
  br label %do.end35

do.end35:                                         ; preds = %do.end30
  %21 = load %struct.av*, %struct.av** %av.addr, align 8
  %tobool = icmp ne %struct.av* %21, null
  br i1 %tobool, label %if.then36, label %if.end75

if.then36:                                        ; preds = %do.end35
  %22 = load %struct.av*, %struct.av** %av.addr, align 8
  %sv_u = getelementptr inbounds %struct.av, %struct.av* %22, i32 0, i32 3
  %svu_array = bitcast %union.anon.2* %sv_u to %struct.sv***
  %23 = load %struct.sv**, %struct.sv*** %svu_array, align 8
  store %struct.sv** %23, %struct.sv*** %ary, align 8
  %24 = load %struct.av*, %struct.av** %av.addr, align 8
  %sv_any = getelementptr inbounds %struct.av, %struct.av* %24, i32 0, i32 0
  %25 = load %struct.xpvav*, %struct.xpvav** %sv_any, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %25, i32 0, i32 2
  %26 = load i64, i64* %xav_fill, align 8
  %add = add nsw i64 %26, 1
  %conv37 = trunc i64 %add to i32
  store i32 %conv37, i32* %cnt, align 4
  br label %do.body38

do.body38:                                        ; preds = %if.then36
  br label %do.body39

do.body39:                                        ; preds = %do.body38
  %27 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %28 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast40 = ptrtoint %struct.sv** %27 to i64
  %sub.ptr.rhs.cast41 = ptrtoint %struct.sv** %28 to i64
  %sub.ptr.sub42 = sub i64 %sub.ptr.lhs.cast40, %sub.ptr.rhs.cast41
  %sub.ptr.div43 = sdiv exact i64 %sub.ptr.sub42, 8
  %cmp44 = icmp slt i64 %sub.ptr.div43, 1
  br i1 %cmp44, label %cond.true46, label %cond.false47

cond.true46:                                      ; preds = %do.body39
  br i1 true, label %if.then48, label %if.end50

cond.false47:                                     ; preds = %do.body39
  br i1 false, label %if.then48, label %if.end50

if.then48:                                        ; preds = %cond.false47, %cond.true46
  %29 = load %struct.sv**, %struct.sv*** %sp, align 8
  %30 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call49 = call %struct.sv** @Perl_stack_grow(%struct.sv** %29, %struct.sv** %30, i64 1)
  store %struct.sv** %call49, %struct.sv*** %sp, align 8
  %31 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end50

if.end50:                                         ; preds = %if.then48, %cond.false47, %cond.true46
  br label %do.end51

do.end51:                                         ; preds = %if.end50
  %32 = load %struct.sv**, %struct.sv*** %ary, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %32, i64 0
  %33 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  %34 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr52 = getelementptr inbounds %struct.sv*, %struct.sv** %34, i32 1
  store %struct.sv** %incdec.ptr52, %struct.sv*** %sp, align 8
  store %struct.sv* %33, %struct.sv** %incdec.ptr52, align 8
  br label %do.end53

do.end53:                                         ; preds = %do.end51
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end53
  %35 = load i32, i32* %i, align 4
  %36 = load i32, i32* %cnt, align 4
  %cmp54 = icmp slt i32 %35, %36
  br i1 %cmp54, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %do.body56

do.body56:                                        ; preds = %for.body
  br label %do.body57

do.body57:                                        ; preds = %do.body56
  %37 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %38 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast58 = ptrtoint %struct.sv** %37 to i64
  %sub.ptr.rhs.cast59 = ptrtoint %struct.sv** %38 to i64
  %sub.ptr.sub60 = sub i64 %sub.ptr.lhs.cast58, %sub.ptr.rhs.cast59
  %sub.ptr.div61 = sdiv exact i64 %sub.ptr.sub60, 8
  %cmp62 = icmp slt i64 %sub.ptr.div61, 1
  br i1 %cmp62, label %cond.true64, label %cond.false65

cond.true64:                                      ; preds = %do.body57
  br i1 true, label %if.then66, label %if.end68

cond.false65:                                     ; preds = %do.body57
  br i1 false, label %if.then66, label %if.end68

if.then66:                                        ; preds = %cond.false65, %cond.true64
  %39 = load %struct.sv**, %struct.sv*** %sp, align 8
  %40 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call67 = call %struct.sv** @Perl_stack_grow(%struct.sv** %39, %struct.sv** %40, i64 1)
  store %struct.sv** %call67, %struct.sv*** %sp, align 8
  %41 = load %struct.sv**, %struct.sv*** %sp, align 8
  br label %if.end68

if.end68:                                         ; preds = %if.then66, %cond.false65, %cond.true64
  br label %do.end69

do.end69:                                         ; preds = %if.end68
  %42 = load %struct.sv**, %struct.sv*** %ary, align 8
  %43 = load i32, i32* %i, align 4
  %idxprom = sext i32 %43 to i64
  %arrayidx70 = getelementptr inbounds %struct.sv*, %struct.sv** %42, i64 %idxprom
  %44 = load %struct.sv*, %struct.sv** %arrayidx70, align 8
  %call71 = call %struct.sv* @Perl_newRV(%struct.sv* %44)
  %call72 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call71)
  %45 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr73 = getelementptr inbounds %struct.sv*, %struct.sv** %45, i32 1
  store %struct.sv** %incdec.ptr73, %struct.sv*** %sp, align 8
  store %struct.sv* %call72, %struct.sv** %incdec.ptr73, align 8
  br label %do.end74

do.end74:                                         ; preds = %do.end69
  br label %for.inc

for.inc:                                          ; preds = %do.end74
  %46 = load i32, i32* %i, align 4
  %inc = add nsw i32 %46, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end75

if.end75:                                         ; preds = %for.end, %do.end35
  %47 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %47, %struct.sv*** @PL_stack_sp, align 8
  %48 = load %struct.sv*, %struct.sv** %hook.addr, align 8
  %49 = load i32, i32* %flags.addr, align 4
  %call76 = call i32 @Perl_call_sv(%struct.sv* %48, i32 %49)
  store i32 %call76, i32* %count, align 4
  %50 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %50, %struct.sv*** %sp, align 8
  %51 = load i32, i32* %count, align 4
  %tobool77 = icmp ne i32 %51, 0
  br i1 %tobool77, label %if.then78, label %if.end81

if.then78:                                        ; preds = %if.end75
  %52 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr79 = getelementptr inbounds %struct.sv*, %struct.sv** %52, i32 -1
  store %struct.sv** %incdec.ptr79, %struct.sv*** %sp, align 8
  %53 = load %struct.sv*, %struct.sv** %52, align 8
  store %struct.sv* %53, %struct.sv** %sv, align 8
  %54 = load %struct.sv*, %struct.sv** %sv, align 8
  %55 = bitcast %struct.sv* %54 to i8*
  %56 = bitcast i8* %55 to %struct.sv*
  %call80 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %56)
  br label %if.end81

if.end81:                                         ; preds = %if.then78, %if.end75
  %57 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %57, %struct.sv*** @PL_stack_sp, align 8
  %58 = load i64, i64* @PL_tmps_ix, align 8
  %59 = load i64, i64* @PL_tmps_floor, align 8
  %cmp82 = icmp sgt i64 %58, %59
  br i1 %cmp82, label %if.then84, label %if.end85

if.then84:                                        ; preds = %if.end81
  call void @Perl_free_tmps()
  br label %if.end85

if.end85:                                         ; preds = %if.then84, %if.end81
  call void @Perl_pop_scope()
  %60 = load %struct.sv*, %struct.sv** %sv, align 8
  ret %struct.sv* %60
}

declare dso_local zeroext i1 @Perl_sv_derived_from(%struct.sv*, i8*) #1

declare dso_local %struct.sv* @Perl_av_pop(%struct.av*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @pkg_uncache(%struct.hv* %cache, %struct.hv* %pkg, i8* %method) #0 {
entry:
  %cache.addr = alloca %struct.hv*, align 8
  %pkg.addr = alloca %struct.hv*, align 8
  %method.addr = alloca i8*, align 8
  %hvname = alloca i8*, align 8
  store %struct.hv* %cache, %struct.hv** %cache.addr, align 8
  store %struct.hv* %pkg, %struct.hv** %pkg.addr, align 8
  store i8* %method, i8** %method.addr, align 8
  %0 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 33554432
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %cond.false54

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u = getelementptr inbounds %struct.hv, %struct.hv* %2, i32 0, i32 3
  %svu_hash = bitcast %union.anon.4* %sv_u to %struct.he***
  %3 = load %struct.he**, %struct.he*** %svu_hash, align 8
  %4 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %4, i32 0, i32 0
  %5 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %5, i32 0, i32 3
  %6 = load i64, i64* %xhv_max, align 8
  %add = add i64 %6, 1
  %arrayidx = getelementptr inbounds %struct.he*, %struct.he** %3, i64 %add
  %7 = bitcast %struct.he** %arrayidx to %struct.xpvhv_aux*
  %xhv_name_u = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %7, i32 0, i32 0
  %xhvnameu_name = bitcast %union._xhvnameu* %xhv_name_u to %struct.hek**
  %8 = load %struct.hek*, %struct.hek** %xhvnameu_name, align 8
  %tobool1 = icmp ne %struct.hek* %8, null
  br i1 %tobool1, label %land.lhs.true2, label %cond.false54

land.lhs.true2:                                   ; preds = %land.lhs.true
  %9 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u3 = getelementptr inbounds %struct.hv, %struct.hv* %9, i32 0, i32 3
  %svu_hash4 = bitcast %union.anon.4* %sv_u3 to %struct.he***
  %10 = load %struct.he**, %struct.he*** %svu_hash4, align 8
  %11 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any5 = getelementptr inbounds %struct.hv, %struct.hv* %11, i32 0, i32 0
  %12 = load %struct.xpvhv*, %struct.xpvhv** %sv_any5, align 8
  %xhv_max6 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %12, i32 0, i32 3
  %13 = load i64, i64* %xhv_max6, align 8
  %add7 = add i64 %13, 1
  %arrayidx8 = getelementptr inbounds %struct.he*, %struct.he** %10, i64 %add7
  %14 = bitcast %struct.he** %arrayidx8 to %struct.xpvhv_aux*
  %xhv_name_count = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %14, i32 0, i32 4
  %15 = load i32, i32* %xhv_name_count, align 4
  %tobool9 = icmp ne i32 %15, 0
  br i1 %tobool9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  %16 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u10 = getelementptr inbounds %struct.hv, %struct.hv* %16, i32 0, i32 3
  %svu_hash11 = bitcast %union.anon.4* %sv_u10 to %struct.he***
  %17 = load %struct.he**, %struct.he*** %svu_hash11, align 8
  %18 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any12 = getelementptr inbounds %struct.hv, %struct.hv* %18, i32 0, i32 0
  %19 = load %struct.xpvhv*, %struct.xpvhv** %sv_any12, align 8
  %xhv_max13 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %19, i32 0, i32 3
  %20 = load i64, i64* %xhv_max13, align 8
  %add14 = add i64 %20, 1
  %arrayidx15 = getelementptr inbounds %struct.he*, %struct.he** %17, i64 %add14
  %21 = bitcast %struct.he** %arrayidx15 to %struct.xpvhv_aux*
  %xhv_name_u16 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %21, i32 0, i32 0
  %xhvnameu_names = bitcast %union._xhvnameu* %xhv_name_u16 to %struct.hek***
  %22 = load %struct.hek**, %struct.hek*** %xhvnameu_names, align 8
  %23 = load %struct.hek*, %struct.hek** %22, align 8
  %tobool17 = icmp ne %struct.hek* %23, null
  br i1 %tobool17, label %cond.true27, label %cond.false54

cond.false:                                       ; preds = %land.lhs.true2
  %24 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u18 = getelementptr inbounds %struct.hv, %struct.hv* %24, i32 0, i32 3
  %svu_hash19 = bitcast %union.anon.4* %sv_u18 to %struct.he***
  %25 = load %struct.he**, %struct.he*** %svu_hash19, align 8
  %26 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any20 = getelementptr inbounds %struct.hv, %struct.hv* %26, i32 0, i32 0
  %27 = load %struct.xpvhv*, %struct.xpvhv** %sv_any20, align 8
  %xhv_max21 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %27, i32 0, i32 3
  %28 = load i64, i64* %xhv_max21, align 8
  %add22 = add i64 %28, 1
  %arrayidx23 = getelementptr inbounds %struct.he*, %struct.he** %25, i64 %add22
  %29 = bitcast %struct.he** %arrayidx23 to %struct.xpvhv_aux*
  %xhv_name_u24 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %29, i32 0, i32 0
  %xhvnameu_name25 = bitcast %union._xhvnameu* %xhv_name_u24 to %struct.hek**
  %30 = load %struct.hek*, %struct.hek** %xhvnameu_name25, align 8
  %tobool26 = icmp ne %struct.hek* %30, null
  br i1 %tobool26, label %cond.true27, label %cond.false54

cond.true27:                                      ; preds = %cond.false, %cond.true
  %31 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u28 = getelementptr inbounds %struct.hv, %struct.hv* %31, i32 0, i32 3
  %svu_hash29 = bitcast %union.anon.4* %sv_u28 to %struct.he***
  %32 = load %struct.he**, %struct.he*** %svu_hash29, align 8
  %33 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any30 = getelementptr inbounds %struct.hv, %struct.hv* %33, i32 0, i32 0
  %34 = load %struct.xpvhv*, %struct.xpvhv** %sv_any30, align 8
  %xhv_max31 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %34, i32 0, i32 3
  %35 = load i64, i64* %xhv_max31, align 8
  %add32 = add i64 %35, 1
  %arrayidx33 = getelementptr inbounds %struct.he*, %struct.he** %32, i64 %add32
  %36 = bitcast %struct.he** %arrayidx33 to %struct.xpvhv_aux*
  %xhv_name_count34 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %36, i32 0, i32 4
  %37 = load i32, i32* %xhv_name_count34, align 4
  %tobool35 = icmp ne i32 %37, 0
  br i1 %tobool35, label %cond.true36, label %cond.false45

cond.true36:                                      ; preds = %cond.true27
  %38 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u37 = getelementptr inbounds %struct.hv, %struct.hv* %38, i32 0, i32 3
  %svu_hash38 = bitcast %union.anon.4* %sv_u37 to %struct.he***
  %39 = load %struct.he**, %struct.he*** %svu_hash38, align 8
  %40 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any39 = getelementptr inbounds %struct.hv, %struct.hv* %40, i32 0, i32 0
  %41 = load %struct.xpvhv*, %struct.xpvhv** %sv_any39, align 8
  %xhv_max40 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %41, i32 0, i32 3
  %42 = load i64, i64* %xhv_max40, align 8
  %add41 = add i64 %42, 1
  %arrayidx42 = getelementptr inbounds %struct.he*, %struct.he** %39, i64 %add41
  %43 = bitcast %struct.he** %arrayidx42 to %struct.xpvhv_aux*
  %xhv_name_u43 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %43, i32 0, i32 0
  %xhvnameu_names44 = bitcast %union._xhvnameu* %xhv_name_u43 to %struct.hek***
  %44 = load %struct.hek**, %struct.hek*** %xhvnameu_names44, align 8
  %45 = load %struct.hek*, %struct.hek** %44, align 8
  br label %cond.end

cond.false45:                                     ; preds = %cond.true27
  %46 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_u46 = getelementptr inbounds %struct.hv, %struct.hv* %46, i32 0, i32 3
  %svu_hash47 = bitcast %union.anon.4* %sv_u46 to %struct.he***
  %47 = load %struct.he**, %struct.he*** %svu_hash47, align 8
  %48 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any48 = getelementptr inbounds %struct.hv, %struct.hv* %48, i32 0, i32 0
  %49 = load %struct.xpvhv*, %struct.xpvhv** %sv_any48, align 8
  %xhv_max49 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %49, i32 0, i32 3
  %50 = load i64, i64* %xhv_max49, align 8
  %add50 = add i64 %50, 1
  %arrayidx51 = getelementptr inbounds %struct.he*, %struct.he** %47, i64 %add50
  %51 = bitcast %struct.he** %arrayidx51 to %struct.xpvhv_aux*
  %xhv_name_u52 = getelementptr inbounds %struct.xpvhv_aux, %struct.xpvhv_aux* %51, i32 0, i32 0
  %xhvnameu_name53 = bitcast %union._xhvnameu* %xhv_name_u52 to %struct.hek**
  %52 = load %struct.hek*, %struct.hek** %xhvnameu_name53, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false45, %cond.true36
  %cond = phi %struct.hek* [ %45, %cond.true36 ], [ %52, %cond.false45 ]
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %cond, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i64 0, i64 0
  br label %cond.end55

cond.false54:                                     ; preds = %cond.false, %cond.true, %land.lhs.true, %entry
  br label %cond.end55

cond.end55:                                       ; preds = %cond.false54, %cond.end
  %cond56 = phi i8* [ %arraydecay, %cond.end ], [ null, %cond.false54 ]
  store i8* %cond56, i8** %hvname, align 8
  %53 = load i8*, i8** %method.addr, align 8
  %54 = load %struct.hv*, %struct.hv** %cache.addr, align 8
  %55 = load i8*, i8** %hvname, align 8
  %56 = load i8*, i8** %hvname, align 8
  %call = call i64 @strlen(i8* %56) #5
  %conv = trunc i64 %call to i32
  %call57 = call i8* @Perl_hv_common_key_len(%struct.hv* %54, i8* %55, i32 %conv, i32 68, %struct.sv* null, i32 0)
  %57 = bitcast i8* %call57 to %struct.sv*
  ret void
}

declare dso_local void @Perl_sv_catpv(%struct.sv*, i8*) #1

declare dso_local i32 @Perl_eval_sv(%struct.sv*, i32) #1

declare dso_local %struct.sv* @Perl_sv_rvweaken(%struct.sv*) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @old_retrieve_array(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %av = alloca %struct.av*, align 8
  %sv = alloca %struct.sv*, align 8
  %c = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load i8*, i8** %cname.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 24
  %2 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %2, null
  br i1 %tobool, label %if.else19, label %if.then

if.then:                                          ; preds = %do.body
  br label %do.body1

do.body1:                                         ; preds = %if.then
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %4 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 4
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2, i32 0, i32 3
  %6 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %6
  br i1 %cmp, label %if.then3, label %if.else17

if.then3:                                         ; preds = %do.body1
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 22
  %aptr5 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf4, i32 0, i32 2
  %8 = load i8*, i8** %aptr5, align 8
  %9 = ptrtoint i8* %8 to i64
  %10 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %10, i32 0, i32 22
  %aptr7 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf6, i32 0, i32 2
  %11 = load i8*, i8** %aptr7, align 8
  %12 = ptrtoint i8* %11 to i64
  %and = and i64 %12, -4
  %cmp8 = icmp eq i64 %9, %and
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.then3
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf10 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 22
  %aptr11 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf10, i32 0, i32 2
  %14 = load i8*, i8** %aptr11, align 8
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %len, align 4
  br label %if.end

if.else:                                          ; preds = %if.then3
  %17 = bitcast i32* %len to i8*
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf12 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 22
  %aptr13 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf12, i32 0, i32 2
  %19 = load i8*, i8** %aptr13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 1 %19, i64 4, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %20, i32 0, i32 22
  %aptr15 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf14, i32 0, i32 2
  %21 = load i8*, i8** %aptr15, align 8
  %add.ptr16 = getelementptr inbounds i8, i8* %21, i64 4
  store i8* %add.ptr16, i8** %aptr15, align 8
  br label %if.end18

if.else17:                                        ; preds = %do.body1
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end18:                                         ; preds = %if.end
  br label %do.end

do.end:                                           ; preds = %if.end18
  br label %if.end24

if.else19:                                        ; preds = %do.body
  %22 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio20 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %22, i32 0, i32 24
  %23 = load %struct._PerlIO**, %struct._PerlIO*** %fio20, align 8
  %24 = bitcast i32* %len to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %23, i8* %24, i64 4)
  %cmp21 = icmp ne i64 %call, 4
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.else19
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end23:                                         ; preds = %if.else19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %do.end
  %25 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %25, i32 0, i32 12
  %26 = load i32, i32* %netorder, align 8
  %tobool25 = icmp ne i32 %26, 0
  br i1 %tobool25, label %if.then26, label %if.end28

if.then26:                                        ; preds = %if.end24
  %27 = load i32, i32* %len, align 4
  %call27 = call i32 @my_swap32(i32 %27)
  store i32 %call27, i32* %len, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.end24
  br label %do.end29

do.end29:                                         ; preds = %if.end28
  %call30 = call %struct.sv* @Perl_newSV_type(i32 11)
  %28 = bitcast %struct.sv* %call30 to i8*
  %29 = bitcast i8* %28 to %struct.av*
  store %struct.av* %29, %struct.av** %av, align 8
  br label %do.body31

do.body31:                                        ; preds = %do.end29
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 5
  %31 = load %struct.av*, %struct.av** %aseen, align 8
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %32, i32 0, i32 10
  %33 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %33, 1
  store i64 %inc, i64* %tagnum, align 8
  %34 = load %struct.av*, %struct.av** %av, align 8
  %35 = bitcast %struct.av* %34 to i8*
  %36 = bitcast i8* %35 to %struct.sv*
  %call32 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %36)
  %call33 = call %struct.sv** @Perl_av_store(%struct.av* %31, i64 %33, %struct.sv* %call32)
  %cmp34 = icmp eq %struct.sv** %call33, null
  br i1 %cmp34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %do.body31
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end36:                                         ; preds = %do.body31
  br label %do.end37

do.end37:                                         ; preds = %if.end36
  %37 = load i32, i32* %len, align 4
  %tobool38 = icmp ne i32 %37, 0
  br i1 %tobool38, label %if.then39, label %if.else40

if.then39:                                        ; preds = %do.end37
  %38 = load %struct.av*, %struct.av** %av, align 8
  %39 = load i32, i32* %len, align 4
  %conv = sext i32 %39 to i64
  call void @Perl_av_extend(%struct.av* %38, i64 %conv)
  br label %if.end41

if.else40:                                        ; preds = %do.end37
  %40 = load %struct.av*, %struct.av** %av, align 8
  %41 = bitcast %struct.av* %40 to %struct.sv*
  store %struct.sv* %41, %struct.sv** %retval, align 8
  br label %return

if.end41:                                         ; preds = %if.then39
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end41
  %42 = load i32, i32* %i, align 4
  %43 = load i32, i32* %len, align 4
  %cmp42 = icmp slt i32 %42, %43
  br i1 %cmp42, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %do.body44

do.body44:                                        ; preds = %for.body
  %44 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio45 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %44, i32 0, i32 24
  %45 = load %struct._PerlIO**, %struct._PerlIO*** %fio45, align 8
  %tobool46 = icmp ne %struct._PerlIO** %45, null
  br i1 %tobool46, label %if.else62, label %if.then47

if.then47:                                        ; preds = %do.body44
  br label %do.body48

do.body48:                                        ; preds = %if.then47
  %46 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf49 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %46, i32 0, i32 22
  %aptr50 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf49, i32 0, i32 2
  %47 = load i8*, i8** %aptr50, align 8
  %48 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf51 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %48, i32 0, i32 22
  %aend52 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf51, i32 0, i32 3
  %49 = load i8*, i8** %aend52, align 8
  %cmp53 = icmp ult i8* %47, %49
  br i1 %cmp53, label %if.then55, label %if.else59

if.then55:                                        ; preds = %do.body48
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf56 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %50, i32 0, i32 22
  %aptr57 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf56, i32 0, i32 2
  %51 = load i8*, i8** %aptr57, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %51, i32 1
  store i8* %incdec.ptr, i8** %aptr57, align 8
  %52 = load i8, i8* %51, align 1
  %conv58 = zext i8 %52 to i32
  store i32 %conv58, i32* %c, align 4
  br label %if.end60

if.else59:                                        ; preds = %do.body48
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end60:                                         ; preds = %if.then55
  br label %do.end61

do.end61:                                         ; preds = %if.end60
  br label %if.end69

if.else62:                                        ; preds = %do.body44
  %53 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio63 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %53, i32 0, i32 24
  %54 = load %struct._PerlIO**, %struct._PerlIO*** %fio63, align 8
  %call64 = call i32 @PerlIO_getc(%struct._PerlIO** %54)
  store i32 %call64, i32* %c, align 4
  %cmp65 = icmp eq i32 %call64, -1
  br i1 %cmp65, label %if.then67, label %if.end68

if.then67:                                        ; preds = %if.else62
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end68:                                         ; preds = %if.else62
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %do.end61
  br label %do.end70

do.end70:                                         ; preds = %if.end69
  %55 = load i32, i32* %c, align 4
  %cmp71 = icmp eq i32 %55, 73
  br i1 %cmp71, label %if.then73, label %if.end74

if.then73:                                        ; preds = %do.end70
  br label %for.inc

if.end74:                                         ; preds = %do.end70
  %56 = load i32, i32* %c, align 4
  %cmp75 = icmp ne i32 %56, 105
  br i1 %cmp75, label %if.then77, label %if.end79

if.then77:                                        ; preds = %if.end74
  %call78 = call %struct.sv* @retrieve_other(%struct.stcxt* null, i8* null)
  br label %if.end79

if.end79:                                         ; preds = %if.then77, %if.end74
  %57 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call80 = call %struct.sv* @retrieve(%struct.stcxt* %57, i8* null)
  store %struct.sv* %call80, %struct.sv** %sv, align 8
  %58 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool81 = icmp ne %struct.sv* %58, null
  br i1 %tobool81, label %if.end83, label %if.then82

if.then82:                                        ; preds = %if.end79
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end83:                                         ; preds = %if.end79
  %59 = load %struct.av*, %struct.av** %av, align 8
  %60 = load i32, i32* %i, align 4
  %conv84 = sext i32 %60 to i64
  %61 = load %struct.sv*, %struct.sv** %sv, align 8
  %call85 = call %struct.sv** @Perl_av_store(%struct.av* %59, i64 %conv84, %struct.sv* %61)
  %cmp86 = icmp eq %struct.sv** %call85, null
  br i1 %cmp86, label %if.then88, label %if.end89

if.then88:                                        ; preds = %if.end83
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end89:                                         ; preds = %if.end83
  br label %for.inc

for.inc:                                          ; preds = %if.end89, %if.then73
  %62 = load i32, i32* %i, align 4
  %inc90 = add nsw i32 %62, 1
  store i32 %inc90, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %63 = load %struct.av*, %struct.av** %av, align 8
  %64 = bitcast %struct.av* %63 to %struct.sv*
  store %struct.sv* %64, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %for.end, %if.then88, %if.then82, %if.then67, %if.else59, %if.else40, %if.then35, %if.then22, %if.else17
  %65 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %65
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @old_retrieve_hash(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %size = alloca i32, align 4
  %i = alloca i32, align 4
  %hv = alloca %struct.hv*, align 8
  %sv = alloca %struct.sv*, align 8
  %c = alloca i32, align 4
  %sv_h_undef = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  store %struct.sv* null, %struct.sv** %sv, align 8
  store %struct.sv* null, %struct.sv** %sv_h_undef, align 8
  %0 = load i8*, i8** %cname.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 24
  %2 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %2, null
  br i1 %tobool, label %if.else19, label %if.then

if.then:                                          ; preds = %do.body
  br label %do.body1

do.body1:                                         ; preds = %if.then
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %4 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 4
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2, i32 0, i32 3
  %6 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %6
  br i1 %cmp, label %if.then3, label %if.else17

if.then3:                                         ; preds = %do.body1
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 22
  %aptr5 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf4, i32 0, i32 2
  %8 = load i8*, i8** %aptr5, align 8
  %9 = ptrtoint i8* %8 to i64
  %10 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %10, i32 0, i32 22
  %aptr7 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf6, i32 0, i32 2
  %11 = load i8*, i8** %aptr7, align 8
  %12 = ptrtoint i8* %11 to i64
  %and = and i64 %12, -4
  %cmp8 = icmp eq i64 %9, %and
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.then3
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf10 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 22
  %aptr11 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf10, i32 0, i32 2
  %14 = load i8*, i8** %aptr11, align 8
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %len, align 4
  br label %if.end

if.else:                                          ; preds = %if.then3
  %17 = bitcast i32* %len to i8*
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf12 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 22
  %aptr13 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf12, i32 0, i32 2
  %19 = load i8*, i8** %aptr13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 1 %19, i64 4, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %20, i32 0, i32 22
  %aptr15 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf14, i32 0, i32 2
  %21 = load i8*, i8** %aptr15, align 8
  %add.ptr16 = getelementptr inbounds i8, i8* %21, i64 4
  store i8* %add.ptr16, i8** %aptr15, align 8
  br label %if.end18

if.else17:                                        ; preds = %do.body1
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end18:                                         ; preds = %if.end
  br label %do.end

do.end:                                           ; preds = %if.end18
  br label %if.end24

if.else19:                                        ; preds = %do.body
  %22 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio20 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %22, i32 0, i32 24
  %23 = load %struct._PerlIO**, %struct._PerlIO*** %fio20, align 8
  %24 = bitcast i32* %len to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %23, i8* %24, i64 4)
  %cmp21 = icmp ne i64 %call, 4
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.else19
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end23:                                         ; preds = %if.else19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %do.end
  %25 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %25, i32 0, i32 12
  %26 = load i32, i32* %netorder, align 8
  %tobool25 = icmp ne i32 %26, 0
  br i1 %tobool25, label %if.then26, label %if.end28

if.then26:                                        ; preds = %if.end24
  %27 = load i32, i32* %len, align 4
  %call27 = call i32 @my_swap32(i32 %27)
  store i32 %call27, i32* %len, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.end24
  br label %do.end29

do.end29:                                         ; preds = %if.end28
  %call30 = call %struct.sv* @Perl_newSV_type(i32 12)
  %28 = bitcast %struct.sv* %call30 to i8*
  %29 = bitcast i8* %28 to %struct.hv*
  store %struct.hv* %29, %struct.hv** %hv, align 8
  br label %do.body31

do.body31:                                        ; preds = %do.end29
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 5
  %31 = load %struct.av*, %struct.av** %aseen, align 8
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %32, i32 0, i32 10
  %33 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %33, 1
  store i64 %inc, i64* %tagnum, align 8
  %34 = load %struct.hv*, %struct.hv** %hv, align 8
  %35 = bitcast %struct.hv* %34 to i8*
  %36 = bitcast i8* %35 to %struct.sv*
  %call32 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %36)
  %call33 = call %struct.sv** @Perl_av_store(%struct.av* %31, i64 %33, %struct.sv* %call32)
  %cmp34 = icmp eq %struct.sv** %call33, null
  br i1 %cmp34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %do.body31
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end36:                                         ; preds = %do.body31
  br label %do.end37

do.end37:                                         ; preds = %if.end36
  %37 = load i32, i32* %len, align 4
  %cmp38 = icmp eq i32 %37, 0
  br i1 %cmp38, label %if.then39, label %if.end40

if.then39:                                        ; preds = %do.end37
  %38 = load %struct.hv*, %struct.hv** %hv, align 8
  %39 = bitcast %struct.hv* %38 to %struct.sv*
  store %struct.sv* %39, %struct.sv** %retval, align 8
  br label %return

if.end40:                                         ; preds = %do.end37
  %40 = load %struct.hv*, %struct.hv** %hv, align 8
  %41 = load i32, i32* %len, align 4
  %add = add nsw i32 %41, 1
  %conv = sext i32 %add to i64
  call void @Perl_hv_ksplit(%struct.hv* %40, i64 %conv)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end40
  %42 = load i32, i32* %i, align 4
  %43 = load i32, i32* %len, align 4
  %cmp41 = icmp slt i32 %42, %43
  br i1 %cmp41, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %do.body43

do.body43:                                        ; preds = %for.body
  %44 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio44 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %44, i32 0, i32 24
  %45 = load %struct._PerlIO**, %struct._PerlIO*** %fio44, align 8
  %tobool45 = icmp ne %struct._PerlIO** %45, null
  br i1 %tobool45, label %if.else61, label %if.then46

if.then46:                                        ; preds = %do.body43
  br label %do.body47

do.body47:                                        ; preds = %if.then46
  %46 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf48 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %46, i32 0, i32 22
  %aptr49 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf48, i32 0, i32 2
  %47 = load i8*, i8** %aptr49, align 8
  %48 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf50 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %48, i32 0, i32 22
  %aend51 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf50, i32 0, i32 3
  %49 = load i8*, i8** %aend51, align 8
  %cmp52 = icmp ult i8* %47, %49
  br i1 %cmp52, label %if.then54, label %if.else58

if.then54:                                        ; preds = %do.body47
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf55 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %50, i32 0, i32 22
  %aptr56 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf55, i32 0, i32 2
  %51 = load i8*, i8** %aptr56, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %51, i32 1
  store i8* %incdec.ptr, i8** %aptr56, align 8
  %52 = load i8, i8* %51, align 1
  %conv57 = zext i8 %52 to i32
  store i32 %conv57, i32* %c, align 4
  br label %if.end59

if.else58:                                        ; preds = %do.body47
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end59:                                         ; preds = %if.then54
  br label %do.end60

do.end60:                                         ; preds = %if.end59
  br label %if.end68

if.else61:                                        ; preds = %do.body43
  %53 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio62 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %53, i32 0, i32 24
  %54 = load %struct._PerlIO**, %struct._PerlIO*** %fio62, align 8
  %call63 = call i32 @PerlIO_getc(%struct._PerlIO** %54)
  store i32 %call63, i32* %c, align 4
  %cmp64 = icmp eq i32 %call63, -1
  br i1 %cmp64, label %if.then66, label %if.end67

if.then66:                                        ; preds = %if.else61
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end67:                                         ; preds = %if.else61
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %do.end60
  br label %do.end69

do.end69:                                         ; preds = %if.end68
  %55 = load i32, i32* %c, align 4
  %cmp70 = icmp eq i32 %55, 86
  br i1 %cmp70, label %if.then72, label %if.else78

if.then72:                                        ; preds = %do.end69
  %56 = load %struct.sv*, %struct.sv** %sv_h_undef, align 8
  %tobool73 = icmp ne %struct.sv* %56, null
  br i1 %tobool73, label %if.end76, label %if.then74

if.then74:                                        ; preds = %if.then72
  %call75 = call %struct.sv* @Perl_newSVsv(%struct.sv* @PL_sv_undef)
  store %struct.sv* %call75, %struct.sv** %sv_h_undef, align 8
  br label %if.end76

if.end76:                                         ; preds = %if.then74, %if.then72
  %57 = load %struct.sv*, %struct.sv** %sv_h_undef, align 8
  %58 = bitcast %struct.sv* %57 to i8*
  %59 = bitcast i8* %58 to %struct.sv*
  %call77 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %59)
  store %struct.sv* %call77, %struct.sv** %sv, align 8
  br label %if.end89

if.else78:                                        ; preds = %do.end69
  %60 = load i32, i32* %c, align 4
  %cmp79 = icmp eq i32 %60, 118
  br i1 %cmp79, label %if.then81, label %if.else86

if.then81:                                        ; preds = %if.else78
  %61 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call82 = call %struct.sv* @retrieve(%struct.stcxt* %61, i8* null)
  store %struct.sv* %call82, %struct.sv** %sv, align 8
  %62 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool83 = icmp ne %struct.sv* %62, null
  br i1 %tobool83, label %if.end85, label %if.then84

if.then84:                                        ; preds = %if.then81
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end85:                                         ; preds = %if.then81
  br label %if.end88

if.else86:                                        ; preds = %if.else78
  %call87 = call %struct.sv* @retrieve_other(%struct.stcxt* null, i8* null)
  br label %if.end88

if.end88:                                         ; preds = %if.else86, %if.end85
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.end76
  br label %do.body90

do.body90:                                        ; preds = %if.end89
  %63 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio91 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %63, i32 0, i32 24
  %64 = load %struct._PerlIO**, %struct._PerlIO*** %fio91, align 8
  %tobool92 = icmp ne %struct._PerlIO** %64, null
  br i1 %tobool92, label %if.else109, label %if.then93

if.then93:                                        ; preds = %do.body90
  br label %do.body94

do.body94:                                        ; preds = %if.then93
  %65 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf95 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %65, i32 0, i32 22
  %aptr96 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf95, i32 0, i32 2
  %66 = load i8*, i8** %aptr96, align 8
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf97 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %67, i32 0, i32 22
  %aend98 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf97, i32 0, i32 3
  %68 = load i8*, i8** %aend98, align 8
  %cmp99 = icmp ult i8* %66, %68
  br i1 %cmp99, label %if.then101, label %if.else106

if.then101:                                       ; preds = %do.body94
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf102 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 22
  %aptr103 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf102, i32 0, i32 2
  %70 = load i8*, i8** %aptr103, align 8
  %incdec.ptr104 = getelementptr inbounds i8, i8* %70, i32 1
  store i8* %incdec.ptr104, i8** %aptr103, align 8
  %71 = load i8, i8* %70, align 1
  %conv105 = zext i8 %71 to i32
  store i32 %conv105, i32* %c, align 4
  br label %if.end107

if.else106:                                       ; preds = %do.body94
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end107:                                        ; preds = %if.then101
  br label %do.end108

do.end108:                                        ; preds = %if.end107
  br label %if.end116

if.else109:                                       ; preds = %do.body90
  %72 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio110 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %72, i32 0, i32 24
  %73 = load %struct._PerlIO**, %struct._PerlIO*** %fio110, align 8
  %call111 = call i32 @PerlIO_getc(%struct._PerlIO** %73)
  store i32 %call111, i32* %c, align 4
  %cmp112 = icmp eq i32 %call111, -1
  br i1 %cmp112, label %if.then114, label %if.end115

if.then114:                                       ; preds = %if.else109
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end115:                                        ; preds = %if.else109
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %do.end108
  br label %do.end117

do.end117:                                        ; preds = %if.end116
  %74 = load i32, i32* %c, align 4
  %cmp118 = icmp ne i32 %74, 107
  br i1 %cmp118, label %if.then120, label %if.end122

if.then120:                                       ; preds = %do.end117
  %call121 = call %struct.sv* @retrieve_other(%struct.stcxt* null, i8* null)
  br label %if.end122

if.end122:                                        ; preds = %if.then120, %do.end117
  br label %do.body123

do.body123:                                       ; preds = %if.end122
  %75 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio124 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %75, i32 0, i32 24
  %76 = load %struct._PerlIO**, %struct._PerlIO*** %fio124, align 8
  %tobool125 = icmp ne %struct._PerlIO** %76, null
  br i1 %tobool125, label %if.else156, label %if.then126

if.then126:                                       ; preds = %do.body123
  br label %do.body127

do.body127:                                       ; preds = %if.then126
  %77 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf128 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %77, i32 0, i32 22
  %aptr129 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf128, i32 0, i32 2
  %78 = load i8*, i8** %aptr129, align 8
  %add.ptr130 = getelementptr inbounds i8, i8* %78, i64 4
  %79 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf131 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %79, i32 0, i32 22
  %aend132 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf131, i32 0, i32 3
  %80 = load i8*, i8** %aend132, align 8
  %cmp133 = icmp ule i8* %add.ptr130, %80
  br i1 %cmp133, label %if.then135, label %if.else153

if.then135:                                       ; preds = %do.body127
  %81 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf136 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %81, i32 0, i32 22
  %aptr137 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf136, i32 0, i32 2
  %82 = load i8*, i8** %aptr137, align 8
  %83 = ptrtoint i8* %82 to i64
  %84 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf138 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %84, i32 0, i32 22
  %aptr139 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf138, i32 0, i32 2
  %85 = load i8*, i8** %aptr139, align 8
  %86 = ptrtoint i8* %85 to i64
  %and140 = and i64 %86, -4
  %cmp141 = icmp eq i64 %83, %and140
  br i1 %cmp141, label %if.then143, label %if.else146

if.then143:                                       ; preds = %if.then135
  %87 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf144 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %87, i32 0, i32 22
  %aptr145 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf144, i32 0, i32 2
  %88 = load i8*, i8** %aptr145, align 8
  %89 = bitcast i8* %88 to i32*
  %90 = load i32, i32* %89, align 4
  store i32 %90, i32* %size, align 4
  br label %if.end149

if.else146:                                       ; preds = %if.then135
  %91 = bitcast i32* %size to i8*
  %92 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf147 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %92, i32 0, i32 22
  %aptr148 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf147, i32 0, i32 2
  %93 = load i8*, i8** %aptr148, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 1 %93, i64 4, i1 false)
  br label %if.end149

if.end149:                                        ; preds = %if.else146, %if.then143
  %94 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf150 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %94, i32 0, i32 22
  %aptr151 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf150, i32 0, i32 2
  %95 = load i8*, i8** %aptr151, align 8
  %add.ptr152 = getelementptr inbounds i8, i8* %95, i64 4
  store i8* %add.ptr152, i8** %aptr151, align 8
  br label %if.end154

if.else153:                                       ; preds = %do.body127
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end154:                                        ; preds = %if.end149
  br label %do.end155

do.end155:                                        ; preds = %if.end154
  br label %if.end163

if.else156:                                       ; preds = %do.body123
  %96 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio157 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %96, i32 0, i32 24
  %97 = load %struct._PerlIO**, %struct._PerlIO*** %fio157, align 8
  %98 = bitcast i32* %size to i8*
  %call158 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %97, i8* %98, i64 4)
  %cmp159 = icmp ne i64 %call158, 4
  br i1 %cmp159, label %if.then161, label %if.end162

if.then161:                                       ; preds = %if.else156
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end162:                                        ; preds = %if.else156
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %do.end155
  %99 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder164 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %99, i32 0, i32 12
  %100 = load i32, i32* %netorder164, align 8
  %tobool165 = icmp ne i32 %100, 0
  br i1 %tobool165, label %if.then166, label %if.end168

if.then166:                                       ; preds = %if.end163
  %101 = load i32, i32* %size, align 4
  %call167 = call i32 @my_swap32(i32 %101)
  store i32 %call167, i32* %size, align 4
  br label %if.end168

if.end168:                                        ; preds = %if.then166, %if.end163
  br label %do.end169

do.end169:                                        ; preds = %if.end168
  br label %do.body170

do.body170:                                       ; preds = %do.end169
  %102 = load i32, i32* %size, align 4
  %conv171 = sext i32 %102 to i64
  %103 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %103, i32 0, i32 21
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf, i32 0, i32 1
  %104 = load i64, i64* %asiz, align 8
  %cmp172 = icmp uge i64 %conv171, %104
  br i1 %cmp172, label %if.then174, label %if.end185

if.then174:                                       ; preds = %do.body170
  %105 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf175 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %105, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf175, i32 0, i32 0
  %106 = load i8*, i8** %arena, align 8
  %107 = load i32, i32* %size, align 4
  %conv176 = sext i32 %107 to i64
  %add177 = add i64 %conv176, 1
  %mul = mul i64 %add177, 1
  %call178 = call i8* @Perl_safesysrealloc(i8* %106, i64 %mul)
  %108 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf179 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %108, i32 0, i32 21
  %arena180 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf179, i32 0, i32 0
  store i8* %call178, i8** %arena180, align 8
  %109 = load i32, i32* %size, align 4
  %conv181 = sext i32 %109 to i64
  %add182 = add i64 %conv181, 1
  %110 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf183 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %110, i32 0, i32 21
  %asiz184 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf183, i32 0, i32 1
  store i64 %add182, i64* %asiz184, align 8
  br label %if.end185

if.end185:                                        ; preds = %if.then174, %do.body170
  br label %do.end186

do.end186:                                        ; preds = %if.end185
  %111 = load i32, i32* %size, align 4
  %tobool187 = icmp ne i32 %111, 0
  br i1 %tobool187, label %if.then188, label %if.end227

if.then188:                                       ; preds = %do.end186
  br label %do.body189

do.body189:                                       ; preds = %if.then188
  %112 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio190 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %112, i32 0, i32 24
  %113 = load %struct._PerlIO**, %struct._PerlIO*** %fio190, align 8
  %tobool191 = icmp ne %struct._PerlIO** %113, null
  br i1 %tobool191, label %if.else214, label %if.then192

if.then192:                                       ; preds = %do.body189
  br label %do.body193

do.body193:                                       ; preds = %if.then192
  %114 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf194 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %114, i32 0, i32 22
  %aptr195 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf194, i32 0, i32 2
  %115 = load i8*, i8** %aptr195, align 8
  %116 = load i32, i32* %size, align 4
  %idx.ext = sext i32 %116 to i64
  %add.ptr196 = getelementptr inbounds i8, i8* %115, i64 %idx.ext
  %117 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf197 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %117, i32 0, i32 22
  %aend198 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf197, i32 0, i32 3
  %118 = load i8*, i8** %aend198, align 8
  %cmp199 = icmp ule i8* %add.ptr196, %118
  br i1 %cmp199, label %if.then201, label %if.else211

if.then201:                                       ; preds = %do.body193
  %119 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf202 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %119, i32 0, i32 21
  %arena203 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf202, i32 0, i32 0
  %120 = load i8*, i8** %arena203, align 8
  %121 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf204 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %121, i32 0, i32 22
  %aptr205 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf204, i32 0, i32 2
  %122 = load i8*, i8** %aptr205, align 8
  %123 = load i32, i32* %size, align 4
  %conv206 = sext i32 %123 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %120, i8* align 1 %122, i64 %conv206, i1 false)
  %124 = load i32, i32* %size, align 4
  %125 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf207 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %125, i32 0, i32 22
  %aptr208 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf207, i32 0, i32 2
  %126 = load i8*, i8** %aptr208, align 8
  %idx.ext209 = sext i32 %124 to i64
  %add.ptr210 = getelementptr inbounds i8, i8* %126, i64 %idx.ext209
  store i8* %add.ptr210, i8** %aptr208, align 8
  br label %if.end212

if.else211:                                       ; preds = %do.body193
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end212:                                        ; preds = %if.then201
  br label %do.end213

do.end213:                                        ; preds = %if.end212
  br label %if.end225

if.else214:                                       ; preds = %do.body189
  %127 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio215 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %127, i32 0, i32 24
  %128 = load %struct._PerlIO**, %struct._PerlIO*** %fio215, align 8
  %129 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf216 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %129, i32 0, i32 21
  %arena217 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf216, i32 0, i32 0
  %130 = load i8*, i8** %arena217, align 8
  %131 = load i32, i32* %size, align 4
  %conv218 = sext i32 %131 to i64
  %call219 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %128, i8* %130, i64 %conv218)
  %132 = load i32, i32* %size, align 4
  %conv220 = sext i32 %132 to i64
  %cmp221 = icmp ne i64 %call219, %conv220
  br i1 %cmp221, label %if.then223, label %if.end224

if.then223:                                       ; preds = %if.else214
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end224:                                        ; preds = %if.else214
  br label %if.end225

if.end225:                                        ; preds = %if.end224, %do.end213
  br label %do.end226

do.end226:                                        ; preds = %if.end225
  br label %if.end227

if.end227:                                        ; preds = %do.end226, %do.end186
  %133 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf228 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %133, i32 0, i32 21
  %arena229 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf228, i32 0, i32 0
  %134 = load i8*, i8** %arena229, align 8
  %135 = load i32, i32* %size, align 4
  %idxprom = sext i32 %135 to i64
  %arrayidx = getelementptr inbounds i8, i8* %134, i64 %idxprom
  store i8 0, i8* %arrayidx, align 1
  %136 = load %struct.hv*, %struct.hv** %hv, align 8
  %137 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf230 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %137, i32 0, i32 21
  %arena231 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf230, i32 0, i32 0
  %138 = load i8*, i8** %arena231, align 8
  %139 = load i32, i32* %size, align 4
  %140 = load %struct.sv*, %struct.sv** %sv, align 8
  %call232 = call i8* @Perl_hv_common_key_len(%struct.hv* %136, i8* %138, i32 %139, i32 36, %struct.sv* %140, i32 0)
  %141 = bitcast i8* %call232 to %struct.sv**
  %cmp233 = icmp eq %struct.sv** %141, null
  br i1 %cmp233, label %if.then235, label %if.end236

if.then235:                                       ; preds = %if.end227
  store %struct.sv* null, %struct.sv** %retval, align 8
  br label %return

if.end236:                                        ; preds = %if.end227
  br label %for.inc

for.inc:                                          ; preds = %if.end236
  %142 = load i32, i32* %i, align 4
  %inc237 = add nsw i32 %142, 1
  store i32 %inc237, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %143 = load %struct.hv*, %struct.hv** %hv, align 8
  %144 = bitcast %struct.hv* %143 to %struct.sv*
  store %struct.sv* %144, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %for.end, %if.then235, %if.then223, %if.else211, %if.then161, %if.else153, %if.then114, %if.else106, %if.then84, %if.then66, %if.else58, %if.then39, %if.then35, %if.then22, %if.else17
  %145 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %145
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @mretrieve(%struct.sv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call = call %struct.sv* @do_retrieve(%struct._PerlIO** null, %struct.sv* %0, i32 0)
  ret %struct.sv* %call
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @dclone(%struct.sv* %sv) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %cxt = alloca %struct.stcxt*, align 8
  %size = alloca i32, align 4
  %real_context = alloca %struct.stcxt*, align 8
  %out = alloca %struct.sv*, align 8
  %cxt13 = alloca %struct.stcxt*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** @Context_ptr, align 8
  store %struct.stcxt* %0, %struct.stcxt** %cxt, align 8
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 19
  %2 = load i32, i32* %s_dirty, align 8
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  call void @clean_context(%struct.stcxt* %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %4, i32 0, i32 2
  %5 = load i32, i32* %sv_flags, align 4
  %and = and i32 %5, 255
  %cmp = icmp eq i32 %and, 10
  br i1 %cmp, label %land.lhs.true, label %if.end8

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags1 = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 2
  %7 = load i32, i32* %sv_flags1, align 4
  %and2 = and i32 %7, 14680064
  %cmp3 = icmp eq i32 %and2, 14680064
  br i1 %cmp3, label %land.lhs.true4, label %if.end8

land.lhs.true4:                                   ; preds = %land.lhs.true
  %8 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call = call %struct.magic* @Perl_mg_find(%struct.sv* %8, i32 112)
  %tobool5 = icmp ne %struct.magic* %call, null
  br i1 %tobool5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %land.lhs.true4
  %9 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call7 = call i32 @Perl_mg_get(%struct.sv* %9)
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %land.lhs.true4, %land.lhs.true, %if.end
  %10 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call9 = call i32 @do_store(%struct._PerlIO** null, %struct.sv* %10, i32 4, i32 0, %struct.sv** null)
  %tobool10 = icmp ne i32 %call9, 0
  br i1 %tobool10, label %if.end12, label %if.then11

if.then11:                                        ; preds = %if.end8
  store %struct.sv* @PL_sv_undef, %struct.sv** %retval, align 8
  br label %return

if.end12:                                         ; preds = %if.end8
  %11 = load %struct.stcxt*, %struct.stcxt** @Context_ptr, align 8
  store %struct.stcxt* %11, %struct.stcxt** %cxt13, align 8
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt13, align 8
  store %struct.stcxt* %12, %struct.stcxt** %real_context, align 8
  %13 = load %struct.stcxt*, %struct.stcxt** %real_context, align 8
  store %struct.stcxt* %13, %struct.stcxt** %cxt, align 8
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 22
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %15 = load i8*, i8** %aptr, align 8
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 22
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf14, i32 0, i32 0
  %17 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %15 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %17 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  store i32 %conv, i32* %size, align 4
  br label %do.body

do.body:                                          ; preds = %if.end12
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf15 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 22
  %arena16 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf15, i32 0, i32 0
  %19 = load i8*, i8** %arena16, align 8
  %tobool17 = icmp ne i8* %19, null
  br i1 %tobool17, label %if.end23, label %if.then18

if.then18:                                        ; preds = %do.body
  %call19 = call i8* @Perl_safesysmalloc(i64 8192)
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf20 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %20, i32 0, i32 22
  %arena21 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf20, i32 0, i32 0
  store i8* %call19, i8** %arena21, align 8
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 22
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf22, i32 0, i32 1
  store i64 8192, i64* %asiz, align 8
  br label %if.end23

if.end23:                                         ; preds = %if.then18, %do.body
  %22 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf24 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %22, i32 0, i32 22
  %arena25 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf24, i32 0, i32 0
  %23 = load i8*, i8** %arena25, align 8
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 22
  %aptr27 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 2
  store i8* %23, i8** %aptr27, align 8
  %25 = load i32, i32* %size, align 4
  %tobool28 = icmp ne i32 %25, 0
  br i1 %tobool28, label %if.then29, label %if.else

if.then29:                                        ; preds = %if.end23
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf30 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 22
  %arena31 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf30, i32 0, i32 0
  %27 = load i8*, i8** %arena31, align 8
  %28 = load i32, i32* %size, align 4
  %idx.ext = sext i32 %28 to i64
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 %idx.ext
  %29 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf32 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %29, i32 0, i32 22
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf32, i32 0, i32 3
  store i8* %add.ptr, i8** %aend, align 8
  br label %if.end40

if.else:                                          ; preds = %if.end23
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf33 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 22
  %arena34 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf33, i32 0, i32 0
  %31 = load i8*, i8** %arena34, align 8
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf35 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %32, i32 0, i32 22
  %asiz36 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf35, i32 0, i32 1
  %33 = load i64, i64* %asiz36, align 8
  %add.ptr37 = getelementptr inbounds i8, i8* %31, i64 %33
  %34 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf38 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %34, i32 0, i32 22
  %aend39 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf38, i32 0, i32 3
  store i8* %add.ptr37, i8** %aend39, align 8
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.then29
  br label %do.end

do.end:                                           ; preds = %if.end40
  %35 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags41 = getelementptr inbounds %struct.sv, %struct.sv* %35, i32 0, i32 2
  %36 = load i32, i32* %sv_flags41, align 4
  %and42 = and i32 %36, 14680064
  %tobool43 = icmp ne i32 %and42, 0
  br i1 %tobool43, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %do.end
  %37 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call44 = call zeroext i1 @Perl_sv_tainted(%struct.sv* %37)
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.end
  %38 = phi i1 [ false, %do.end ], [ %call44, %land.rhs ]
  %land.ext = zext i1 %38 to i32
  %39 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %s_tainted = getelementptr inbounds %struct.stcxt, %struct.stcxt* %39, i32 0, i32 13
  store i32 %land.ext, i32* %s_tainted, align 4
  %call46 = call %struct.sv* @do_retrieve(%struct._PerlIO** null, %struct.sv* null, i32 4)
  store %struct.sv* %call46, %struct.sv** %out, align 8
  %40 = load %struct.sv*, %struct.sv** %out, align 8
  store %struct.sv* %40, %struct.sv** %retval, align 8
  br label %return

return:                                           ; preds = %land.end, %if.then11
  %41 = load %struct.sv*, %struct.sv** %retval, align 8
  ret %struct.sv* %41
}

declare dso_local i32 @Perl_mg_get(%struct.sv*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @last_op_in_netorder() #0 {
entry:
  %cxt = alloca %struct.stcxt*, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** @Context_ptr, align 8
  store %struct.stcxt* %0, %struct.stcxt** %cxt, align 8
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 12
  %2 = load i32, i32* %netorder, align 8
  ret i32 %2
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
