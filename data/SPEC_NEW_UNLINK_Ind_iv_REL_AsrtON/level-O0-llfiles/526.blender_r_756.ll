; ModuleID = 'blender/source/blender/editors/sculpt_paint/paint_image_proj.c'
source_filename = "blender/source/blender/editors/sculpt_paint/paint_image_proj.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.ListBase = type { i8*, i8* }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.bContext = type opaque
%struct.ProjPaintState = type { %struct.View3D*, %struct.RegionView3D*, %struct.ARegion*, %struct.Scene*, i32, [3 x float], [3 x float], %struct.Brush*, i16, i16, i16, i32, float, %struct.Object*, %struct.DerivedMesh*, i32, i32, i32, %struct.MVert*, %struct.MFace*, %struct.MTFace**, %struct.MTFace**, %struct.MTFace*, %struct.Image*, %struct.Image*, %struct.Image*, float, [1 x %struct.MemArena*], %struct.LinkNode**, %struct.LinkNode**, i8*, i8*, i8*, [4 x [2 x float]]*, %struct.LinkNode**, i8*, i32, i32, %struct.ProjPaintImage*, i32, i32, [4 x float]*, [2 x float], [2 x float], float, float, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, i8, i8, i8, i8, i8, float, [2 x float], [4 x [4 x float]], [3 x float], [3 x float], float, float, %struct.Image*, %struct.ImBuf*, i32, [2 x i32], [2 x i32], i32, i32, i8, %struct.BlurKernel*, i32* }
%struct.View3D = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], [4 x float], float, float, i8, [3 x i8], i32, i32, i16, i16, %struct.Object*, %struct.Object*, %struct.rctf, %struct.ListBase, %struct.BGpic*, %struct.View3D*, [64 x i8], i32, i32, i16, i16, i16, i16, i16, i16, float, float, float, float, [3 x float], [3 x float], i16, i16, i16, i8, i8, i8, i8, [2 x i8], %struct.ListBase, %struct.ListBase, %struct.ListBase, i8, i8, i8, [5 x i8], i8*, %struct.Material*, %struct.bGPdata* }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.rctf = type { float, float, float, float }
%struct.BGpic = type { %struct.BGpic*, %struct.BGpic*, %struct.Image*, %struct.ImageUser, %struct.MovieClip*, %struct.MovieClipUser, float, float, float, float, i16, i16, i16, i16 }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type opaque
%struct.anim = type opaque
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.MovieClipUser = type { i32, i16, i16 }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type { i32, [64 x i8], [64 x i8], [256 x i8], i32, void (%struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.Scene*, i8*, void (i8*, i32, i8*)*)*, i32 (%struct.bContext*, %struct.bNodeTreeType*)*, void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*)*, i32 (%struct.bNodeTree*, %struct.bNodeLink*)*, void (%struct.bNodeTree*, %struct.bNode*)*, %struct.ExtensionRNA }
%struct.bNodeLink = type { %struct.bNodeLink*, %struct.bNodeLink*, %struct.bNode*, %struct.bNode*, %struct.bNodeSocket*, %struct.bNodeSocket*, i32, i32 }
%struct.bNode = type { %struct.bNode*, %struct.bNode*, %struct.bNode*, %struct.IDProperty*, %struct.bNodeType*, [64 x i8], [64 x i8], i32, i16, i16, i16, i16, i16, i16, i16, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.bNode*, %struct.ID*, i8*, %struct.bNode*, %struct.ListBase, float, float, float, float, float, float, float, i32, [64 x i8], i16, i16, float, float, i16, i16, i8*, %struct.rctf, %struct.rctf, %struct.rctf, i16, i16, i32, %struct.uiBlock* }
%struct.bNodeType = type { i8*, i8*, i16, [64 x i8], i32, [64 x i8], [256 x i8], i32, float, float, float, float, float, float, i16, i16, i16, %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate*, [64 x i8], void (%struct.bContext*, %struct.ARegion*, %struct.SpaceNode*, %struct.bNodeTree*, %struct.bNode*, i32)*, void (%struct.bContext*, %struct.bNodeTree*, %struct.bNode*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.SpaceNode*, %struct.ImBuf*, %struct.bNode*, i32, i32)*, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, {}*, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, {}*, void (%struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, void (%struct.bContext*, %struct.PointerRNA*)*, void (%struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.bNode*)*, i32 (%struct.bNodeType*, %struct.bNodeTree*)*, i32 (%struct.bNode*, %struct.bNodeTree*)*, {}*, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)*, void (i8*)*, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)*, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)*, %struct.ExtensionRNA }
%struct.bNodeSocketTemplate = type { i32, i32, [64 x i8], float, float, float, float, float, float, i32, i32, %struct.bNodeSocket*, [64 x i8] }
%struct.SpaceNode = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, %struct.ID*, %struct.ID*, i16, i16, float, float, float, float, float, [2 x float], %struct.ListBase, %struct.bNodeTree*, %struct.bNodeTree*, [64 x i8], i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.bGPdata* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.SmoothView2DStore = type opaque
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.uiLayout = type opaque
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.bNodeExecContext = type opaque
%struct.bNodeExecData = type opaque
%struct.bNodeStack = type { [4 x float], float, float, i8*, i16, i16, i16, i16, i16, i16, [2 x i16] }
%struct.GPUMaterial = type opaque
%struct.GPUNodeStack = type opaque
%struct.uiBlock = type opaque
%struct.bNodeSocket = type { %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.IDProperty*, [64 x i8], [64 x i8], i8*, i16, i16, i16, i16, %struct.bNodeSocketType*, [64 x i8], float, float, i8*, i16, i16, i32, i8*, i32, i32, %struct.bNodeSocket*, %struct.bNodeLink*, %struct.bNodeStack }
%struct.bNodeSocketType = type { [64 x i8], void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*, %struct.PointerRNA*, i8*)*, void (%struct.bContext*, %struct.PointerRNA*, %struct.PointerRNA*, float*)*, void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PointerRNA*, float*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, %struct.ExtensionRNA, %struct.ExtensionRNA, i32, i32 }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type { %struct.GHash* }
%struct.GHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Ipo = type opaque
%struct.Group = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.GPUTexture = type opaque
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.bGPdata = type opaque
%struct.RegionView3D = type { [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [6 x [4 x float]], [6 x [4 x float]], %struct.BoundBox*, %struct.RegionView3D*, %struct.RenderEngine*, %struct.ViewDepths*, i8*, %struct.SmoothView3DStore*, %struct.wmTimer*, [4 x [4 x float]], [4 x float], float, float, float, float, [3 x float], float, i8, i8, i8, i8, i8, [3 x i8], [2 x float], i16, i16, [4 x float], i16, i16, float, [3 x float], float, [3 x float] }
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.RenderEngine = type opaque
%struct.ViewDepths = type { i16, i16, i16, i16, float*, [2 x double], i8 }
%struct.SmoothView3DStore = type opaque
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.ARegionType = type opaque
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Palette = type { %struct.ID, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.Brush = type { %struct.ID, %struct.BrushClone, %struct.CurveMapping*, %struct.MTex, %struct.MTex, %struct.Brush*, %struct.ImBuf*, %struct.PreviewImage*, %struct.ColorBand*, %struct.PaintCurve*, [1024 x i8], float, i16, i16, float, i32, i32, i32, float, i32, i32, i32, i32, float, float, [3 x float], float, [3 x float], i32, float, float, i32, i32, i32, i8, i8, i8, i8, float, float, float, float, float, i32, i32, i32, float, float, i32, i32, float, [3 x float], [3 x float], [2 x float], [2 x float], [2 x float], [2 x float] }
%struct.BrushClone = type { %struct.Image*, [2 x float], float, float }
%struct.PaintCurve = type { %struct.ID, %struct.PaintCurvePoint*, i32, i32 }
%struct.PaintCurvePoint = type { %struct.BezTriple, float }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type { %struct.MultiresModifierData*, %struct.MVert*, %struct.MPoly*, %struct.MLoop*, i32, i32, [3 x float]*, %struct.KeyBlock*, float*, %struct.MeshElemMap*, %struct.BMesh*, i32, i32, i8, %struct.BMLog*, %struct.PBVH*, i8, i8, [3 x float]*, [3 x float]*, [3 x [3 x float]]*, i8, i32, i32*, i32, %struct.ImagePool*, [3 x float]*, %struct.SculptStroke*, %struct.StrokeCache*, i8, [3 x float], [3 x float], i32 }
%struct.MultiresModifierData = type opaque
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.KeyBlock = type opaque
%struct.MeshElemMap = type { i32*, i32 }
%struct.BMesh = type opaque
%struct.BMLog = type opaque
%struct.PBVH = type opaque
%struct.ImagePool = type opaque
%struct.SculptStroke = type opaque
%struct.StrokeCache = type opaque
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.LinkNode = type { %struct.LinkNode*, i8* }
%struct.GPUDrawObject = type { %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, i32*, %struct.GPUVertPointLink*, i32, %struct.GPUBufferMaterial*, i32, i32, i32, i32, i32, i8 }
%struct.GPUBuffer = type { i32, i8*, i32 }
%struct.GPUVertPointLink = type opaque
%struct.GPUBufferMaterial = type { i32, i32, i16 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type opaque
%struct.DMFlagMat = type { i16, i8 }
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MemArena = type opaque
%struct.ProjPaintImage = type { %struct.Image*, %struct.ImBuf*, %struct.ImagePaintPartialRedraw*, i8**, i16**, i8**, i32 }
%struct.ImagePaintPartialRedraw = type { i32, i32, i32, i32, i32 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.ImBuf = type { %struct.ImBuf*, %struct.ImBuf*, i32, i32, i8, i32, i32, i32, i32*, float*, [2 x double], i32, i32, i32, i32, i32**, i32*, float*, float, [20 x %struct.ImBuf*], i32, i32, i32, i32, %struct.ImMetaData*, i8*, i32, [1024 x i8], [1024 x i8], %struct.MEM_CacheLimiterHandle_s*, i32, i8*, i32, i32, %struct.ColorSpace*, %struct.ColorSpace*, i32*, %struct.ColormanageCache*, i32, %struct.rcti, %struct.DDSData }
%struct.ImMetaData = type opaque
%struct.MEM_CacheLimiterHandle_s = type opaque
%struct.ColormanageCache = type opaque
%struct.DDSData = type { i32, i32, i8*, i32 }
%struct.BlurKernel = type { float*, i32, i32, i32 }
%struct.ColorManagedDisplay = type opaque
%struct.ProjectHandle = type { %struct.ProjPaintState*, [2 x float], [2 x float], %struct.ProjPaintImage*, i32, %struct.ImagePool* }
%struct.CameraParams = type { i8, float, float, float, float, float, float, float, float, float, i32, float, float, i32, i32, i32, float, float, float, %struct.rctf, [4 x [4 x float]] }
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.Key = type opaque
%struct.MSelect = type { i32, i32 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.BMEditMesh = type opaque
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.SpaceImage = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, i32, %struct.Image*, %struct.ImageUser, %struct.CurveMapping*, %struct.Scopes, %struct.Histogram, %struct.bGPdata*, [2 x float], float, float, float, float, float, i8, i8, i16, i16, i16, i8, i8, i8, i8, %struct.MaskSpaceInfo }
%struct.Scopes = type { i32, i32, i32, float, i32, float, float, i32, float, i32, [3 x [2 x float]], %struct.Histogram, float*, float*, float*, float*, i32, i32 }
%struct.Histogram = type { i32, i32, [256 x float], [256 x float], [256 x float], [256 x float], [256 x float], float, float, i16, i16, i32, [2 x [2 x float]] }
%struct.MaskSpaceInfo = type { %struct.Mask*, i8, i8, i8, [5 x i8] }
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.PropertyRNA = type opaque
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%union.IDPropertyTemplate = type { %struct.anon.0 }
%struct.anon.0 = type { i8*, i16, i8 }
%struct.anon.1 = type { i16, i16 }
%struct.ProjPixel = type { [2 x float], [3 x float], i16*, i16, i16, i16, i8*, %union.pixelPointer, %union.pixelStore, %union.pixelPointer, i16, i8 }
%union.pixelStore = type { [4 x float] }
%union.pixelPointer = type { float* }
%struct.ProjPixelClone = type { %struct.ProjPixel, %union.pixelStore }
%struct.TileInfo = type { i32*, i8, i16, %struct.ImBuf**, %struct.ProjPaintImage* }
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.SpaceType = type opaque

@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [21 x i8] c"ProjectionPaintState\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.1 = private unnamed_addr constant [14 x i8] c"Project Image\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"PAINT_OT_project_image\00", align 1
@.str.3 = private unnamed_addr constant [69 x i8] c"Project an edited render from the active camera back onto the object\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"image\00", align 1
@DummyRNA_NULL_items = external dso_local global [0 x %struct.EnumPropertyItem], align 8
@.str.5 = private unnamed_addr constant [6 x i8] c"Image\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"Image from View\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"PAINT_OT_image_from_view\00", align 1
@.str.9 = private unnamed_addr constant [57 x i8] c"Make an image from the current 3D view for re-projection\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"filepath\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"File Path\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"Name of the file\00", align 1
@.str.13 = private unnamed_addr constant [26 x i8] c"Missing%s%s%s%s detected!\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c" UVs,\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c" Materials,\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c" Textures,\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c" Stencil,\00", align 1
@PAINT_OT_add_texture_paint_slot.default_color = internal global [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 16, !dbg !0
@.str.18 = private unnamed_addr constant [23 x i8] c"Add Texture Paint Slot\00", align 1
@.str.19 = private unnamed_addr constant [25 x i8] c"Add a texture paint slot\00", align 1
@.str.20 = private unnamed_addr constant [32 x i8] c"PAINT_OT_add_texture_paint_slot\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@layer_type_items = internal global [15 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.72, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.74, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1024, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.77, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.79, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 32, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.81, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 256, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.83, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2048, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.85, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.89, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 512, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.91, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.93, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 8192, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 4096, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.97, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !4143
@.str.22 = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c"Merge method to use\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"Untitled\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"Name\00", align 1
@.str.27 = private unnamed_addr constant [21 x i8] c"Image datablock name\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"Width\00", align 1
@.str.30 = private unnamed_addr constant [12 x i8] c"Image width\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"Height\00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"Image height\00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c"Color\00", align 1
@.str.36 = private unnamed_addr constant [19 x i8] c"Default fill color\00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"alpha\00", align 1
@.str.38 = private unnamed_addr constant [6 x i8] c"Alpha\00", align 1
@.str.39 = private unnamed_addr constant [38 x i8] c"Create an image with an alpha channel\00", align 1
@.str.40 = private unnamed_addr constant [15 x i8] c"generated_type\00", align 1
@image_generated_type_items = external dso_local global [0 x %struct.EnumPropertyItem], align 8
@.str.41 = private unnamed_addr constant [15 x i8] c"Generated Type\00", align 1
@.str.42 = private unnamed_addr constant [46 x i8] c"Fill the image with a grid for UV map testing\00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.44 = private unnamed_addr constant [13 x i8] c"32 bit Float\00", align 1
@.str.45 = private unnamed_addr constant [50 x i8] c"Create image with 32 bit floating point bit depth\00", align 1
@.str.46 = private unnamed_addr constant [26 x i8] c"Delete Texture Paint Slot\00", align 1
@.str.47 = private unnamed_addr constant [35 x i8] c"Delete selected texture paint slot\00", align 1
@.str.48 = private unnamed_addr constant [35 x i8] c"PAINT_OT_delete_texture_paint_slot\00", align 1
@.str.49 = private unnamed_addr constant [18 x i8] c"paint smear arena\00", align 1
@.str.50 = private unnamed_addr constant [19 x i8] c"paint soften arena\00", align 1
@BLI_color_from_srgb_table = external dso_local global [256 x float], align 16
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.51 = private unnamed_addr constant [19 x i8] c"proj_paint_mtfaces\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@.str.52 = private unnamed_addr constant [10 x i8] c"view_data\00", align 1
@.str.53 = private unnamed_addr constant [25 x i8] c"ProjectPaint ScreenVerts\00", align 1
@.str.54 = private unnamed_addr constant [17 x i8] c"paint-bucketRect\00", align 1
@.str.55 = private unnamed_addr constant [18 x i8] c"paint-bucketFaces\00", align 1
@.str.56 = private unnamed_addr constant [16 x i8] c"paint-vertFaces\00", align 1
@.str.57 = private unnamed_addr constant [20 x i8] c"paint-faceSeamFlags\00", align 1
@.str.58 = private unnamed_addr constant [23 x i8] c"paint-faceWindindFlags\00", align 1
@.str.59 = private unnamed_addr constant [18 x i8] c"paint-faceSeamUVs\00", align 1
@.str.60 = private unnamed_addr constant [20 x i8] c"projpaint_tile_lock\00", align 1
@.str.61 = private unnamed_addr constant [20 x i8] c"project paint arena\00", align 1
@.str.62 = private unnamed_addr constant [16 x i8] c"paint-vertFlags\00", align 1
@.str.63 = private unnamed_addr constant [22 x i8] c"No active mesh object\00", align 1
@.str.64 = private unnamed_addr constant [25 x i8] c"Image could not be found\00", align 1
@.str.65 = private unnamed_addr constant [30 x i8] c"Image data could not be found\00", align 1
@.str.66 = private unnamed_addr constant [27 x i8] c"Image project data invalid\00", align 1
@.str.67 = private unnamed_addr constant [21 x i8] c"No active camera set\00", align 1
@__const.texture_paint_image_from_view_exec.err_out = private unnamed_addr constant [256 x i8] c"unknownalign 16
@.str.68 = private unnamed_addr constant [46 x i8] c"Failed to create OpenGL off-screen buffer: %s\00", align 1
@.str.69 = private unnamed_addr constant [11 x i8] c"image_view\00", align 1
@.str.70 = private unnamed_addr constant [9 x i8] c"Material\00", align 1
@.str.71 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@U = external dso_local global %struct.UserDef, align 8
@__const.proj_paint_image_create.color = private unnamed_addr constant [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 16
@__const.proj_paint_image_create.imagename = private unnamed_addr constant [64 x i8] c"Material Diffuse Color\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 16
@.str.72 = private unnamed_addr constant [14 x i8] c"DIFFUSE_COLOR\00", align 1
@.str.73 = private unnamed_addr constant [14 x i8] c"Diffuse Color\00", align 1
@.str.74 = private unnamed_addr constant [18 x i8] c"DIFFUSE_INTENSITY\00", align 1
@.str.75 = private unnamed_addr constant [18 x i8] c"Diffuse Intensity\00", align 1
@.str.76 = private unnamed_addr constant [6 x i8] c"ALPHA\00", align 1
@.str.77 = private unnamed_addr constant [13 x i8] c"TRANSLUCENCY\00", align 1
@.str.78 = private unnamed_addr constant [13 x i8] c"Translucency\00", align 1
@.str.79 = private unnamed_addr constant [15 x i8] c"SPECULAR_COLOR\00", align 1
@.str.80 = private unnamed_addr constant [15 x i8] c"Specular Color\00", align 1
@.str.81 = private unnamed_addr constant [19 x i8] c"SPECULAR_INTENSITY\00", align 1
@.str.82 = private unnamed_addr constant [19 x i8] c"Specular Intensity\00", align 1
@.str.83 = private unnamed_addr constant [18 x i8] c"SPECULAR_HARDNESS\00", align 1
@.str.84 = private unnamed_addr constant [18 x i8] c"Specular Hardness\00", align 1
@.str.85 = private unnamed_addr constant [8 x i8] c"AMBIENT\00", align 1
@.str.86 = private unnamed_addr constant [8 x i8] c"Ambient\00", align 1
@.str.87 = private unnamed_addr constant [5 x i8] c"EMIT\00", align 1
@.str.88 = private unnamed_addr constant [5 x i8] c"Emit\00", align 1
@.str.89 = private unnamed_addr constant [13 x i8] c"MIRROR_COLOR\00", align 1
@.str.90 = private unnamed_addr constant [13 x i8] c"Mirror Color\00", align 1
@.str.91 = private unnamed_addr constant [10 x i8] c"RAYMIRROR\00", align 1
@.str.92 = private unnamed_addr constant [11 x i8] c"Ray Mirror\00", align 1
@.str.93 = private unnamed_addr constant [7 x i8] c"NORMAL\00", align 1
@.str.94 = private unnamed_addr constant [7 x i8] c"Normal\00", align 1
@.str.95 = private unnamed_addr constant [5 x i8] c"WARP\00", align 1
@.str.96 = private unnamed_addr constant [5 x i8] c"Warp\00", align 1
@.str.97 = private unnamed_addr constant [9 x i8] c"DISPLACE\00", align 1
@.str.98 = private unnamed_addr constant [9 x i8] c"Displace\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @paint_proj_stroke(%struct.bContext* %C, i8* %pps, float* %prev_pos, float* %pos, i8 zeroext %eraser, float %pressure, float %distance, float %size) #0 !dbg !4161 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %pps.addr = alloca i8*, align 8
  %prev_pos.addr = alloca float*, align 8
  %pos.addr = alloca float*, align 8
  %eraser.addr = alloca i8, align 1
  %pressure.addr = alloca float, align 4
  %distance.addr = alloca float, align 4
  %size.addr = alloca float, align 4
  %ps = alloca %struct.ProjPaintState*, align 8
  %brush = alloca %struct.Brush*, align 8
  %scene = alloca %struct.Scene*, align 8
  %a = alloca i32, align 4
  %v3d = alloca %struct.View3D*, align 8
  %cursor = alloca float*, align 8
  %mval_i = alloca [2 x i32], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4167, metadata !DIExpression()), !dbg !4168
  store i8* %pps, i8** %pps.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pps.addr, metadata !4169, metadata !DIExpression()), !dbg !4170
  store float* %prev_pos, float** %prev_pos.addr, align 8
  call void @llvm.dbg.declare(metadata float** %prev_pos.addr, metadata !4171, metadata !DIExpression()), !dbg !4172
  store float* %pos, float** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pos.addr, metadata !4173, metadata !DIExpression()), !dbg !4174
  store i8 %eraser, i8* %eraser.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %eraser.addr, metadata !4175, metadata !DIExpression()), !dbg !4176
  store float %pressure, float* %pressure.addr, align 4
  call void @llvm.dbg.declare(metadata float* %pressure.addr, metadata !4177, metadata !DIExpression()), !dbg !4178
  store float %distance, float* %distance.addr, align 4
  call void @llvm.dbg.declare(metadata float* %distance.addr, metadata !4179, metadata !DIExpression()), !dbg !4180
  store float %size, float* %size.addr, align 4
  call void @llvm.dbg.declare(metadata float* %size.addr, metadata !4181, metadata !DIExpression()), !dbg !4182
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps, metadata !4183, metadata !DIExpression()), !dbg !4184
  %0 = load i8*, i8** %pps.addr, align 8, !dbg !4185
  %1 = bitcast i8* %0 to %struct.ProjPaintState*, !dbg !4185
  store %struct.ProjPaintState* %1, %struct.ProjPaintState** %ps, align 8, !dbg !4184
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !4186, metadata !DIExpression()), !dbg !4187
  %2 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4188
  %brush1 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %2, i32 0, i32 7, !dbg !4189
  %3 = load %struct.Brush*, %struct.Brush** %brush1, align 8, !dbg !4189
  store %struct.Brush* %3, %struct.Brush** %brush, align 8, !dbg !4187
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !4190, metadata !DIExpression()), !dbg !4191
  %4 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4192
  %scene2 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %4, i32 0, i32 3, !dbg !4193
  %5 = load %struct.Scene*, %struct.Scene** %scene2, align 8, !dbg !4193
  store %struct.Scene* %5, %struct.Scene** %scene, align 8, !dbg !4191
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4194, metadata !DIExpression()), !dbg !4195
  %6 = load float, float* %size.addr, align 4, !dbg !4196
  %7 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4197
  %brush_size = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %7, i32 0, i32 12, !dbg !4198
  store float %6, float* %brush_size, align 4, !dbg !4199
  %8 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !4200
  %blend = getelementptr inbounds %struct.Brush, %struct.Brush* %8, i32 0, i32 12, !dbg !4201
  %9 = load i16, i16* %blend, align 4, !dbg !4201
  %10 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4202
  %blend3 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %10, i32 0, i32 9, !dbg !4203
  store i16 %9, i16* %blend3, align 2, !dbg !4204
  %11 = load i8, i8* %eraser.addr, align 1, !dbg !4205
  %tobool = icmp ne i8 %11, 0, !dbg !4205
  br i1 %tobool, label %if.then, label %if.end, !dbg !4207

if.then:                                          ; preds = %entry
  %12 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4208
  %blend4 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %12, i32 0, i32 9, !dbg !4209
  store i16 6, i16* %blend4, align 2, !dbg !4210
  br label %if.end, !dbg !4208

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4211
  %tool = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %13, i32 0, i32 8, !dbg !4213
  %14 = load i16, i16* %tool, align 8, !dbg !4213
  %conv = sext i16 %14 to i32, !dbg !4211
  %cmp = icmp eq i32 %conv, 3, !dbg !4214
  br i1 %cmp, label %land.lhs.true, label %if.end19, !dbg !4215

land.lhs.true:                                    ; preds = %if.end
  %15 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4216
  %mode = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %15, i32 0, i32 10, !dbg !4217
  %16 = load i16, i16* %mode, align 4, !dbg !4217
  %conv6 = sext i16 %16 to i32, !dbg !4216
  %cmp7 = icmp eq i32 %conv6, 1, !dbg !4218
  br i1 %cmp7, label %if.then9, label %if.end19, !dbg !4219

if.then9:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d, metadata !4220, metadata !DIExpression()), !dbg !4222
  %17 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4223
  %v3d10 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %17, i32 0, i32 0, !dbg !4224
  %18 = load %struct.View3D*, %struct.View3D** %v3d10, align 8, !dbg !4224
  store %struct.View3D* %18, %struct.View3D** %v3d, align 8, !dbg !4222
  call void @llvm.dbg.declare(metadata float** %cursor, metadata !4225, metadata !DIExpression()), !dbg !4226
  %19 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4227
  %20 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !4228
  %call = call float* @ED_view3d_cursor3d_get(%struct.Scene* %19, %struct.View3D* %20), !dbg !4229
  store float* %call, float** %cursor, align 8, !dbg !4226
  call void @llvm.dbg.declare(metadata [2 x i32]* %mval_i, metadata !4230, metadata !DIExpression()), !dbg !4231
  %arrayinit.begin = getelementptr inbounds [2 x i32], [2 x i32]* %mval_i, i64 0, i64 0, !dbg !4232
  %21 = load float*, float** %pos.addr, align 8, !dbg !4233
  %arrayidx = getelementptr inbounds float, float* %21, i64 0, !dbg !4233
  %22 = load float, float* %arrayidx, align 4, !dbg !4233
  %conv11 = fptosi float %22 to i32, !dbg !4234
  store i32 %conv11, i32* %arrayinit.begin, align 4, !dbg !4232
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !4232
  %23 = load float*, float** %pos.addr, align 8, !dbg !4235
  %arrayidx12 = getelementptr inbounds float, float* %23, i64 1, !dbg !4235
  %24 = load float, float* %arrayidx12, align 4, !dbg !4235
  %conv13 = fptosi float %24 to i32, !dbg !4236
  store i32 %conv13, i32* %arrayinit.element, align 4, !dbg !4232
  %25 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4237
  call void @view3d_operator_needs_opengl(%struct.bContext* %25), !dbg !4238
  %26 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4239
  %27 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4241
  %ar = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %27, i32 0, i32 2, !dbg !4242
  %28 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4242
  %29 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !4243
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval_i, i64 0, i64 0, !dbg !4244
  %30 = load float*, float** %cursor, align 8, !dbg !4245
  %call14 = call zeroext i8 @ED_view3d_autodist(%struct.Scene* %26, %struct.ARegion* %28, %struct.View3D* %29, i32* %arraydecay, float* %30, i8 zeroext 0, float* null), !dbg !4246
  %tobool15 = icmp ne i8 %call14, 0, !dbg !4246
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !4247

if.then16:                                        ; preds = %if.then9
  br label %if.end77, !dbg !4248

if.end17:                                         ; preds = %if.then9
  %31 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4249
  %ar18 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %31, i32 0, i32 2, !dbg !4250
  %32 = load %struct.ARegion*, %struct.ARegion** %ar18, align 8, !dbg !4250
  call void @ED_region_tag_redraw(%struct.ARegion* %32), !dbg !4251
  br label %if.end77, !dbg !4252

if.end19:                                         ; preds = %land.lhs.true, %if.end
  %33 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4253
  %tool20 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %33, i32 0, i32 8, !dbg !4255
  %34 = load i16, i16* %tool20, align 8, !dbg !4255
  %conv21 = sext i16 %34 to i32, !dbg !4253
  %cmp22 = icmp eq i32 %conv21, 0, !dbg !4256
  br i1 %cmp22, label %if.then24, label %if.else, !dbg !4257

if.then24:                                        ; preds = %if.end19
  %35 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4258
  %36 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !4260
  %37 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4261
  %mode25 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %37, i32 0, i32 10, !dbg !4262
  %38 = load i16, i16* %mode25, align 4, !dbg !4262
  %conv26 = sext i16 %38 to i32, !dbg !4261
  %cmp27 = icmp eq i32 %conv26, 1, !dbg !4263
  %conv28 = zext i1 %cmp27 to i32, !dbg !4263
  %conv29 = trunc i32 %conv28 to i8, !dbg !4261
  %39 = load float, float* %distance.addr, align 4, !dbg !4264
  %40 = load float, float* %pressure.addr, align 4, !dbg !4265
  %41 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4266
  %paint_color = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %41, i32 0, i32 5, !dbg !4267
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %paint_color, i64 0, i64 0, !dbg !4266
  call void @paint_brush_color_get(%struct.Scene* %35, %struct.Brush* %36, i8 zeroext 0, i8 zeroext %conv29, float %39, float %40, float* %arraydecay30, %struct.ColorManagedDisplay* null), !dbg !4268
  %42 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4269
  %paint_color_linear = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %42, i32 0, i32 6, !dbg !4270
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %paint_color_linear, i64 0, i64 0, !dbg !4269
  %43 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4271
  %paint_color32 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %43, i32 0, i32 5, !dbg !4272
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %paint_color32, i64 0, i64 0, !dbg !4271
  call void @srgb_to_linearrgb_v3_v3(float* %arraydecay31, float* %arraydecay33), !dbg !4273
  br label %if.end66, !dbg !4274

if.else:                                          ; preds = %if.end19
  %44 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4275
  %tool34 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %44, i32 0, i32 8, !dbg !4277
  %45 = load i16, i16* %tool34, align 8, !dbg !4277
  %conv35 = sext i16 %45 to i32, !dbg !4275
  %cmp36 = icmp eq i32 %conv35, 4, !dbg !4278
  br i1 %cmp36, label %if.then38, label %if.else46, !dbg !4279

if.then38:                                        ; preds = %if.else
  %46 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4280
  %paint_color39 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %46, i32 0, i32 5, !dbg !4282
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %paint_color39, i64 0, i64 0, !dbg !4280
  %47 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4283
  %48 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !4284
  %call41 = call float* @BKE_brush_color_get(%struct.Scene* %47, %struct.Brush* %48), !dbg !4285
  call void @copy_v3_v3(float* %arraydecay40, float* %call41), !dbg !4286
  %49 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4287
  %paint_color_linear42 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %49, i32 0, i32 6, !dbg !4288
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %paint_color_linear42, i64 0, i64 0, !dbg !4287
  %50 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4289
  %paint_color44 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %50, i32 0, i32 5, !dbg !4290
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %paint_color44, i64 0, i64 0, !dbg !4289
  call void @srgb_to_linearrgb_v3_v3(float* %arraydecay43, float* %arraydecay45), !dbg !4291
  br label %if.end65, !dbg !4292

if.else46:                                        ; preds = %if.else
  %51 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4293
  %tool47 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %51, i32 0, i32 8, !dbg !4295
  %52 = load i16, i16* %tool47, align 8, !dbg !4295
  %conv48 = sext i16 %52 to i32, !dbg !4293
  %cmp49 = icmp eq i32 %conv48, 5, !dbg !4296
  br i1 %cmp49, label %if.then51, label %if.end64, !dbg !4297

if.then51:                                        ; preds = %if.else46
  %53 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !4298
  %weight = getelementptr inbounds %struct.Brush, %struct.Brush* %53, i32 0, i32 14, !dbg !4300
  %54 = load float, float* %weight, align 8, !dbg !4300
  %55 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4301
  %stencil_value = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %55, i32 0, i32 26, !dbg !4302
  store float %54, float* %stencil_value, align 8, !dbg !4303
  %56 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4304
  %mode52 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %56, i32 0, i32 10, !dbg !4306
  %57 = load i16, i16* %mode52, align 4, !dbg !4306
  %conv53 = sext i16 %57 to i32, !dbg !4304
  %cmp54 = icmp eq i32 %conv53, 1, !dbg !4307
  %conv55 = zext i1 %cmp54 to i32, !dbg !4307
  %58 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4308
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %58, i32 0, i32 20, !dbg !4309
  %59 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !4309
  %imapaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %59, i32 0, i32 17, !dbg !4310
  %flag = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint, i32 0, i32 1, !dbg !4311
  %60 = load i16, i16* %flag, align 8, !dbg !4311
  %conv56 = sext i16 %60 to i32, !dbg !4308
  %and = and i32 %conv56, 512, !dbg !4312
  %cmp57 = icmp ne i32 %and, 0, !dbg !4313
  %conv58 = zext i1 %cmp57 to i32, !dbg !4313
  %xor = xor i32 %conv55, %conv58, !dbg !4314
  %tobool59 = icmp ne i32 %xor, 0, !dbg !4314
  br i1 %tobool59, label %if.then60, label %if.end63, !dbg !4315

if.then60:                                        ; preds = %if.then51
  %61 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4316
  %stencil_value61 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %61, i32 0, i32 26, !dbg !4318
  %62 = load float, float* %stencil_value61, align 8, !dbg !4318
  %sub = fsub float 1.000000e+00, %62, !dbg !4319
  %63 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4320
  %stencil_value62 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %63, i32 0, i32 26, !dbg !4321
  store float %sub, float* %stencil_value62, align 8, !dbg !4322
  br label %if.end63, !dbg !4323

if.end63:                                         ; preds = %if.then60, %if.then51
  br label %if.end64, !dbg !4324

if.end64:                                         ; preds = %if.end63, %if.else46
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then38
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then24
  %64 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4325
  %need_redraw = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %64, i32 0, i32 79, !dbg !4327
  %65 = load i8, i8* %need_redraw, align 4, !dbg !4327
  %tobool67 = icmp ne i8 %65, 0, !dbg !4325
  br i1 %tobool67, label %if.end72, label %if.then68, !dbg !4328

if.then68:                                        ; preds = %if.end66
  store i32 0, i32* %a, align 4, !dbg !4329
  br label %for.cond, !dbg !4332

for.cond:                                         ; preds = %for.inc, %if.then68
  %66 = load i32, i32* %a, align 4, !dbg !4333
  %67 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4335
  %image_tot = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %67, i32 0, i32 40, !dbg !4336
  %68 = load i32, i32* %image_tot, align 4, !dbg !4336
  %cmp69 = icmp slt i32 %66, %68, !dbg !4337
  br i1 %cmp69, label %for.body, label %for.end, !dbg !4338

for.body:                                         ; preds = %for.cond
  %69 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4339
  %projImages = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %69, i32 0, i32 38, !dbg !4340
  %70 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages, align 8, !dbg !4340
  %71 = load i32, i32* %a, align 4, !dbg !4341
  %idxprom = sext i32 %71 to i64, !dbg !4339
  %arrayidx71 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %70, i64 %idxprom, !dbg !4339
  %partRedrawRect = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %arrayidx71, i32 0, i32 2, !dbg !4342
  %72 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %partRedrawRect, align 8, !dbg !4342
  call void @partial_redraw_array_init(%struct.ImagePaintPartialRedraw* %72), !dbg !4343
  br label %for.inc, !dbg !4343

for.inc:                                          ; preds = %for.body
  %73 = load i32, i32* %a, align 4, !dbg !4344
  %inc = add nsw i32 %73, 1, !dbg !4344
  store i32 %inc, i32* %a, align 4, !dbg !4344
  br label %for.cond, !dbg !4345, !llvm.loop !4346

for.end:                                          ; preds = %for.cond
  br label %if.end72, !dbg !4348

if.end72:                                         ; preds = %for.end, %if.end66
  %74 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4349
  %75 = bitcast %struct.ProjPaintState* %74 to i8*, !dbg !4349
  %76 = load float*, float** %prev_pos.addr, align 8, !dbg !4351
  %77 = load float*, float** %pos.addr, align 8, !dbg !4352
  %call73 = call zeroext i8 @project_paint_op(i8* %75, float* %76, float* %77), !dbg !4353
  %tobool74 = icmp ne i8 %call73, 0, !dbg !4353
  br i1 %tobool74, label %if.then75, label %if.end77, !dbg !4354

if.then75:                                        ; preds = %if.end72
  %78 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4355
  %need_redraw76 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %78, i32 0, i32 79, !dbg !4356
  store i8 1, i8* %need_redraw76, align 4, !dbg !4357
  br label %if.end77, !dbg !4355

if.end77:                                         ; preds = %if.then16, %if.end17, %if.then75, %if.end72
  ret void, !dbg !4358
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local float* @ED_view3d_cursor3d_get(%struct.Scene*, %struct.View3D*) #2

declare dso_local void @view3d_operator_needs_opengl(%struct.bContext*) #2

declare dso_local zeroext i8 @ED_view3d_autodist(%struct.Scene*, %struct.ARegion*, %struct.View3D*, i32*, float*, i8 zeroext, float*) #2

declare dso_local void @ED_region_tag_redraw(%struct.ARegion*) #2

declare dso_local void @paint_brush_color_get(%struct.Scene*, %struct.Brush*, i8 zeroext, i8 zeroext, float, float, float*, %struct.ColorManagedDisplay*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @srgb_to_linearrgb_v3_v3(float* %linear, float* %srgb) #0 !dbg !4359 {
entry:
  %linear.addr = alloca float*, align 8
  %srgb.addr = alloca float*, align 8
  store float* %linear, float** %linear.addr, align 8
  call void @llvm.dbg.declare(metadata float** %linear.addr, metadata !4363, metadata !DIExpression()), !dbg !4364
  store float* %srgb, float** %srgb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %srgb.addr, metadata !4365, metadata !DIExpression()), !dbg !4366
  %0 = load float*, float** %srgb.addr, align 8, !dbg !4367
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4367
  %1 = load float, float* %arrayidx, align 4, !dbg !4367
  %call = call float @srgb_to_linearrgb(float %1), !dbg !4368
  %2 = load float*, float** %linear.addr, align 8, !dbg !4369
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4369
  store float %call, float* %arrayidx1, align 4, !dbg !4370
  %3 = load float*, float** %srgb.addr, align 8, !dbg !4371
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !4371
  %4 = load float, float* %arrayidx2, align 4, !dbg !4371
  %call3 = call float @srgb_to_linearrgb(float %4), !dbg !4372
  %5 = load float*, float** %linear.addr, align 8, !dbg !4373
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !4373
  store float %call3, float* %arrayidx4, align 4, !dbg !4374
  %6 = load float*, float** %srgb.addr, align 8, !dbg !4375
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !4375
  %7 = load float, float* %arrayidx5, align 4, !dbg !4375
  %call6 = call float @srgb_to_linearrgb(float %7), !dbg !4376
  %8 = load float*, float** %linear.addr, align 8, !dbg !4377
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !4377
  store float %call6, float* %arrayidx7, align 4, !dbg !4378
  ret void, !dbg !4379
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !4380 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4382, metadata !DIExpression()), !dbg !4383
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4384, metadata !DIExpression()), !dbg !4385
  %0 = load float*, float** %a.addr, align 8, !dbg !4386
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4386
  %1 = load float, float* %arrayidx, align 4, !dbg !4386
  %2 = load float*, float** %r.addr, align 8, !dbg !4387
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4387
  store float %1, float* %arrayidx1, align 4, !dbg !4388
  %3 = load float*, float** %a.addr, align 8, !dbg !4389
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !4389
  %4 = load float, float* %arrayidx2, align 4, !dbg !4389
  %5 = load float*, float** %r.addr, align 8, !dbg !4390
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !4390
  store float %4, float* %arrayidx3, align 4, !dbg !4391
  %6 = load float*, float** %a.addr, align 8, !dbg !4392
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !4392
  %7 = load float, float* %arrayidx4, align 4, !dbg !4392
  %8 = load float*, float** %r.addr, align 8, !dbg !4393
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !4393
  store float %7, float* %arrayidx5, align 4, !dbg !4394
  ret void, !dbg !4395
}

declare dso_local float* @BKE_brush_color_get(%struct.Scene*, %struct.Brush*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @partial_redraw_array_init(%struct.ImagePaintPartialRedraw* %pr) #0 !dbg !4396 {
entry:
  %pr.addr = alloca %struct.ImagePaintPartialRedraw*, align 8
  %tot = alloca i32, align 4
  store %struct.ImagePaintPartialRedraw* %pr, %struct.ImagePaintPartialRedraw** %pr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePaintPartialRedraw** %pr.addr, metadata !4399, metadata !DIExpression()), !dbg !4400
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !4401, metadata !DIExpression()), !dbg !4402
  store i32 64, i32* %tot, align 4, !dbg !4402
  br label %while.cond, !dbg !4403

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %tot, align 4, !dbg !4404
  %dec = add nsw i32 %0, -1, !dbg !4404
  store i32 %dec, i32* %tot, align 4, !dbg !4404
  %tobool = icmp ne i32 %0, 0, !dbg !4403
  br i1 %tobool, label %while.body, label %while.end, !dbg !4403

while.body:                                       ; preds = %while.cond
  %1 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr.addr, align 8, !dbg !4405
  %x1 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %1, i32 0, i32 0, !dbg !4407
  store i32 10000000, i32* %x1, align 4, !dbg !4408
  %2 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr.addr, align 8, !dbg !4409
  %y1 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %2, i32 0, i32 1, !dbg !4410
  store i32 10000000, i32* %y1, align 4, !dbg !4411
  %3 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr.addr, align 8, !dbg !4412
  %x2 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %3, i32 0, i32 2, !dbg !4413
  store i32 -1, i32* %x2, align 4, !dbg !4414
  %4 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr.addr, align 8, !dbg !4415
  %y2 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %4, i32 0, i32 3, !dbg !4416
  store i32 -1, i32* %y2, align 4, !dbg !4417
  %5 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr.addr, align 8, !dbg !4418
  %enabled = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %5, i32 0, i32 4, !dbg !4419
  store i32 1, i32* %enabled, align 4, !dbg !4420
  %6 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr.addr, align 8, !dbg !4421
  %incdec.ptr = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %6, i32 1, !dbg !4421
  store %struct.ImagePaintPartialRedraw* %incdec.ptr, %struct.ImagePaintPartialRedraw** %pr.addr, align 8, !dbg !4421
  br label %while.cond, !dbg !4403, !llvm.loop !4422

while.end:                                        ; preds = %while.cond
  ret void, !dbg !4424
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @project_paint_op(i8* %state, float* %lastpos, float* %pos) #0 !dbg !4425 {
entry:
  %retval = alloca i8, align 1
  %state.addr = alloca i8*, align 8
  %lastpos.addr = alloca float*, align 8
  %pos.addr = alloca float*, align 8
  %ps = alloca %struct.ProjPaintState*, align 8
  %touch_any = alloca i8, align 1
  %handles = alloca [1 x %struct.ProjectHandle], align 16
  %threads = alloca %struct.ListBase, align 8
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  %pool = alloca %struct.ImagePool*, align 8
  %touch = alloca i32, align 4
  store i8* %state, i8** %state.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %state.addr, metadata !4428, metadata !DIExpression()), !dbg !4429
  store float* %lastpos, float** %lastpos.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lastpos.addr, metadata !4430, metadata !DIExpression()), !dbg !4431
  store float* %pos, float** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pos.addr, metadata !4432, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps, metadata !4434, metadata !DIExpression()), !dbg !4435
  %0 = load i8*, i8** %state.addr, align 8, !dbg !4436
  %1 = bitcast i8* %0 to %struct.ProjPaintState*, !dbg !4437
  store %struct.ProjPaintState* %1, %struct.ProjPaintState** %ps, align 8, !dbg !4435
  call void @llvm.dbg.declare(metadata i8* %touch_any, metadata !4438, metadata !DIExpression()), !dbg !4439
  store i8 0, i8* %touch_any, align 1, !dbg !4439
  call void @llvm.dbg.declare(metadata [1 x %struct.ProjectHandle]* %handles, metadata !4440, metadata !DIExpression()), !dbg !4442
  call void @llvm.dbg.declare(metadata %struct.ListBase* %threads, metadata !4443, metadata !DIExpression()), !dbg !4444
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4445, metadata !DIExpression()), !dbg !4446
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4447, metadata !DIExpression()), !dbg !4448
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool, metadata !4449, metadata !DIExpression()), !dbg !4450
  %2 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4451
  %3 = load float*, float** %pos.addr, align 8, !dbg !4453
  %call = call zeroext i8 @project_bucket_iter_init(%struct.ProjPaintState* %2, float* %3), !dbg !4454
  %tobool = icmp ne i8 %call, 0, !dbg !4454
  br i1 %tobool, label %if.end, label %if.then, !dbg !4455

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !4456
  br label %return, !dbg !4456

if.end:                                           ; preds = %entry
  %4 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4458
  %thread_tot = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %4, i32 0, i32 74, !dbg !4460
  %5 = load i32, i32* %thread_tot, align 8, !dbg !4460
  %cmp = icmp sgt i32 %5, 1, !dbg !4461
  br i1 %cmp, label %if.then1, label %if.end3, !dbg !4462

if.then1:                                         ; preds = %if.end
  %6 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4463
  %thread_tot2 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %6, i32 0, i32 74, !dbg !4464
  %7 = load i32, i32* %thread_tot2, align 8, !dbg !4464
  call void @BLI_init_threads(%struct.ListBase* %threads, i8* (i8*)* @do_projectpaint_thread, i32 %7), !dbg !4465
  br label %if.end3, !dbg !4465

if.end3:                                          ; preds = %if.then1, %if.end
  %call4 = call %struct.ImagePool* @BKE_image_pool_new(), !dbg !4466
  store %struct.ImagePool* %call4, %struct.ImagePool** %pool, align 8, !dbg !4467
  store i32 0, i32* %a, align 4, !dbg !4468
  br label %for.cond, !dbg !4470

for.cond:                                         ; preds = %for.inc61, %if.end3
  %8 = load i32, i32* %a, align 4, !dbg !4471
  %9 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4473
  %thread_tot5 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %9, i32 0, i32 74, !dbg !4474
  %10 = load i32, i32* %thread_tot5, align 8, !dbg !4474
  %cmp6 = icmp slt i32 %8, %10, !dbg !4475
  br i1 %cmp6, label %for.body, label %for.end63, !dbg !4476

for.body:                                         ; preds = %for.cond
  %11 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4477
  %12 = load i32, i32* %a, align 4, !dbg !4479
  %idxprom = sext i32 %12 to i64, !dbg !4480
  %arrayidx = getelementptr inbounds [1 x %struct.ProjectHandle], [1 x %struct.ProjectHandle]* %handles, i64 0, i64 %idxprom, !dbg !4480
  %ps7 = getelementptr inbounds %struct.ProjectHandle, %struct.ProjectHandle* %arrayidx, i32 0, i32 0, !dbg !4481
  store %struct.ProjPaintState* %11, %struct.ProjPaintState** %ps7, align 16, !dbg !4482
  %13 = load i32, i32* %a, align 4, !dbg !4483
  %idxprom8 = sext i32 %13 to i64, !dbg !4484
  %arrayidx9 = getelementptr inbounds [1 x %struct.ProjectHandle], [1 x %struct.ProjectHandle]* %handles, i64 0, i64 %idxprom8, !dbg !4484
  %mval = getelementptr inbounds %struct.ProjectHandle, %struct.ProjectHandle* %arrayidx9, i32 0, i32 2, !dbg !4485
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !4484
  %14 = load float*, float** %pos.addr, align 8, !dbg !4486
  call void @copy_v2_v2(float* %arraydecay, float* %14), !dbg !4487
  %15 = load i32, i32* %a, align 4, !dbg !4488
  %idxprom10 = sext i32 %15 to i64, !dbg !4489
  %arrayidx11 = getelementptr inbounds [1 x %struct.ProjectHandle], [1 x %struct.ProjectHandle]* %handles, i64 0, i64 %idxprom10, !dbg !4489
  %prevmval = getelementptr inbounds %struct.ProjectHandle, %struct.ProjectHandle* %arrayidx11, i32 0, i32 1, !dbg !4490
  %arraydecay12 = getelementptr inbounds [2 x float], [2 x float]* %prevmval, i64 0, i64 0, !dbg !4489
  %16 = load float*, float** %lastpos.addr, align 8, !dbg !4491
  call void @copy_v2_v2(float* %arraydecay12, float* %16), !dbg !4492
  %17 = load i32, i32* %a, align 4, !dbg !4493
  %18 = load i32, i32* %a, align 4, !dbg !4494
  %idxprom13 = sext i32 %18 to i64, !dbg !4495
  %arrayidx14 = getelementptr inbounds [1 x %struct.ProjectHandle], [1 x %struct.ProjectHandle]* %handles, i64 0, i64 %idxprom13, !dbg !4495
  %thread_index = getelementptr inbounds %struct.ProjectHandle, %struct.ProjectHandle* %arrayidx14, i32 0, i32 4, !dbg !4496
  store i32 %17, i32* %thread_index, align 16, !dbg !4497
  %19 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4498
  %arena_mt = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %19, i32 0, i32 27, !dbg !4499
  %20 = load i32, i32* %a, align 4, !dbg !4500
  %idxprom15 = sext i32 %20 to i64, !dbg !4498
  %arrayidx16 = getelementptr inbounds [1 x %struct.MemArena*], [1 x %struct.MemArena*]* %arena_mt, i64 0, i64 %idxprom15, !dbg !4498
  %21 = load %struct.MemArena*, %struct.MemArena** %arrayidx16, align 8, !dbg !4498
  %22 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4501
  %image_tot = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %22, i32 0, i32 40, !dbg !4502
  %23 = load i32, i32* %image_tot, align 4, !dbg !4502
  %conv = sext i32 %23 to i64, !dbg !4501
  %mul = mul i64 %conv, 56, !dbg !4503
  %call17 = call i8* @BLI_memarena_alloc(%struct.MemArena* %21, i64 %mul), !dbg !4504
  %24 = bitcast i8* %call17 to %struct.ProjPaintImage*, !dbg !4505
  %25 = load i32, i32* %a, align 4, !dbg !4506
  %idxprom18 = sext i32 %25 to i64, !dbg !4507
  %arrayidx19 = getelementptr inbounds [1 x %struct.ProjectHandle], [1 x %struct.ProjectHandle]* %handles, i64 0, i64 %idxprom18, !dbg !4507
  %projImages = getelementptr inbounds %struct.ProjectHandle, %struct.ProjectHandle* %arrayidx19, i32 0, i32 3, !dbg !4508
  store %struct.ProjPaintImage* %24, %struct.ProjPaintImage** %projImages, align 8, !dbg !4509
  %26 = load i32, i32* %a, align 4, !dbg !4510
  %idxprom20 = sext i32 %26 to i64, !dbg !4511
  %arrayidx21 = getelementptr inbounds [1 x %struct.ProjectHandle], [1 x %struct.ProjectHandle]* %handles, i64 0, i64 %idxprom20, !dbg !4511
  %projImages22 = getelementptr inbounds %struct.ProjectHandle, %struct.ProjectHandle* %arrayidx21, i32 0, i32 3, !dbg !4512
  %27 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages22, align 8, !dbg !4512
  %28 = bitcast %struct.ProjPaintImage* %27 to i8*, !dbg !4513
  %29 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4514
  %projImages23 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %29, i32 0, i32 38, !dbg !4515
  %30 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages23, align 8, !dbg !4515
  %31 = bitcast %struct.ProjPaintImage* %30 to i8*, !dbg !4513
  %32 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4516
  %image_tot24 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %32, i32 0, i32 40, !dbg !4517
  %33 = load i32, i32* %image_tot24, align 4, !dbg !4517
  %conv25 = sext i32 %33 to i64, !dbg !4516
  %mul26 = mul i64 %conv25, 56, !dbg !4518
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %31, i64 %mul26, i1 false), !dbg !4513
  store i32 0, i32* %i, align 4, !dbg !4519
  br label %for.cond27, !dbg !4521

for.cond27:                                       ; preds = %for.inc, %for.body
  %34 = load i32, i32* %i, align 4, !dbg !4522
  %35 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4524
  %image_tot28 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %35, i32 0, i32 40, !dbg !4525
  %36 = load i32, i32* %image_tot28, align 4, !dbg !4525
  %cmp29 = icmp slt i32 %34, %36, !dbg !4526
  br i1 %cmp29, label %for.body31, label %for.end, !dbg !4527

for.body31:                                       ; preds = %for.cond27
  %37 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4528
  %arena_mt32 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %37, i32 0, i32 27, !dbg !4530
  %38 = load i32, i32* %a, align 4, !dbg !4531
  %idxprom33 = sext i32 %38 to i64, !dbg !4528
  %arrayidx34 = getelementptr inbounds [1 x %struct.MemArena*], [1 x %struct.MemArena*]* %arena_mt32, i64 0, i64 %idxprom33, !dbg !4528
  %39 = load %struct.MemArena*, %struct.MemArena** %arrayidx34, align 8, !dbg !4528
  %call35 = call i8* @BLI_memarena_alloc(%struct.MemArena* %39, i64 1280), !dbg !4532
  %40 = bitcast i8* %call35 to %struct.ImagePaintPartialRedraw*, !dbg !4533
  %41 = load i32, i32* %a, align 4, !dbg !4534
  %idxprom36 = sext i32 %41 to i64, !dbg !4535
  %arrayidx37 = getelementptr inbounds [1 x %struct.ProjectHandle], [1 x %struct.ProjectHandle]* %handles, i64 0, i64 %idxprom36, !dbg !4535
  %projImages38 = getelementptr inbounds %struct.ProjectHandle, %struct.ProjectHandle* %arrayidx37, i32 0, i32 3, !dbg !4536
  %42 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages38, align 8, !dbg !4536
  %43 = load i32, i32* %i, align 4, !dbg !4537
  %idxprom39 = sext i32 %43 to i64, !dbg !4535
  %arrayidx40 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %42, i64 %idxprom39, !dbg !4535
  %partRedrawRect = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %arrayidx40, i32 0, i32 2, !dbg !4538
  store %struct.ImagePaintPartialRedraw* %40, %struct.ImagePaintPartialRedraw** %partRedrawRect, align 8, !dbg !4539
  %44 = load i32, i32* %a, align 4, !dbg !4540
  %idxprom41 = sext i32 %44 to i64, !dbg !4541
  %arrayidx42 = getelementptr inbounds [1 x %struct.ProjectHandle], [1 x %struct.ProjectHandle]* %handles, i64 0, i64 %idxprom41, !dbg !4541
  %projImages43 = getelementptr inbounds %struct.ProjectHandle, %struct.ProjectHandle* %arrayidx42, i32 0, i32 3, !dbg !4542
  %45 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages43, align 8, !dbg !4542
  %46 = load i32, i32* %i, align 4, !dbg !4543
  %idxprom44 = sext i32 %46 to i64, !dbg !4541
  %arrayidx45 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %45, i64 %idxprom44, !dbg !4541
  %partRedrawRect46 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %arrayidx45, i32 0, i32 2, !dbg !4544
  %47 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %partRedrawRect46, align 8, !dbg !4544
  %48 = bitcast %struct.ImagePaintPartialRedraw* %47 to i8*, !dbg !4545
  %49 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4546
  %projImages47 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %49, i32 0, i32 38, !dbg !4547
  %50 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages47, align 8, !dbg !4547
  %51 = load i32, i32* %i, align 4, !dbg !4548
  %idxprom48 = sext i32 %51 to i64, !dbg !4546
  %arrayidx49 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %50, i64 %idxprom48, !dbg !4546
  %partRedrawRect50 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %arrayidx49, i32 0, i32 2, !dbg !4549
  %52 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %partRedrawRect50, align 8, !dbg !4549
  %53 = bitcast %struct.ImagePaintPartialRedraw* %52 to i8*, !dbg !4545
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* align 4 %53, i64 1280, i1 false), !dbg !4545
  br label %for.inc, !dbg !4550

for.inc:                                          ; preds = %for.body31
  %54 = load i32, i32* %i, align 4, !dbg !4551
  %inc = add nsw i32 %54, 1, !dbg !4551
  store i32 %inc, i32* %i, align 4, !dbg !4551
  br label %for.cond27, !dbg !4552, !llvm.loop !4553

for.end:                                          ; preds = %for.cond27
  %55 = load %struct.ImagePool*, %struct.ImagePool** %pool, align 8, !dbg !4555
  %56 = load i32, i32* %a, align 4, !dbg !4556
  %idxprom51 = sext i32 %56 to i64, !dbg !4557
  %arrayidx52 = getelementptr inbounds [1 x %struct.ProjectHandle], [1 x %struct.ProjectHandle]* %handles, i64 0, i64 %idxprom51, !dbg !4557
  %pool53 = getelementptr inbounds %struct.ProjectHandle, %struct.ProjectHandle* %arrayidx52, i32 0, i32 5, !dbg !4558
  store %struct.ImagePool* %55, %struct.ImagePool** %pool53, align 8, !dbg !4559
  %57 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4560
  %thread_tot54 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %57, i32 0, i32 74, !dbg !4562
  %58 = load i32, i32* %thread_tot54, align 8, !dbg !4562
  %cmp55 = icmp sgt i32 %58, 1, !dbg !4563
  br i1 %cmp55, label %if.then57, label %if.end60, !dbg !4564

if.then57:                                        ; preds = %for.end
  %59 = load i32, i32* %a, align 4, !dbg !4565
  %idxprom58 = sext i32 %59 to i64, !dbg !4566
  %arrayidx59 = getelementptr inbounds [1 x %struct.ProjectHandle], [1 x %struct.ProjectHandle]* %handles, i64 0, i64 %idxprom58, !dbg !4566
  %60 = bitcast %struct.ProjectHandle* %arrayidx59 to i8*, !dbg !4567
  call void @BLI_insert_thread(%struct.ListBase* %threads, i8* %60), !dbg !4568
  br label %if.end60, !dbg !4568

if.end60:                                         ; preds = %if.then57, %for.end
  br label %for.inc61, !dbg !4569

for.inc61:                                        ; preds = %if.end60
  %61 = load i32, i32* %a, align 4, !dbg !4570
  %inc62 = add nsw i32 %61, 1, !dbg !4570
  store i32 %inc62, i32* %a, align 4, !dbg !4570
  br label %for.cond, !dbg !4571, !llvm.loop !4572

for.end63:                                        ; preds = %for.cond
  %62 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4574
  %thread_tot64 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %62, i32 0, i32 74, !dbg !4576
  %63 = load i32, i32* %thread_tot64, align 8, !dbg !4576
  %cmp65 = icmp sgt i32 %63, 1, !dbg !4577
  br i1 %cmp65, label %if.then67, label %if.else, !dbg !4578

if.then67:                                        ; preds = %for.end63
  call void @BLI_end_threads(%struct.ListBase* %threads), !dbg !4579
  br label %if.end70, !dbg !4579

if.else:                                          ; preds = %for.end63
  %arrayidx68 = getelementptr inbounds [1 x %struct.ProjectHandle], [1 x %struct.ProjectHandle]* %handles, i64 0, i64 0, !dbg !4580
  %64 = bitcast %struct.ProjectHandle* %arrayidx68 to i8*, !dbg !4581
  %call69 = call i8* @do_projectpaint_thread(i8* %64), !dbg !4582
  br label %if.end70

if.end70:                                         ; preds = %if.else, %if.then67
  %65 = load %struct.ImagePool*, %struct.ImagePool** %pool, align 8, !dbg !4583
  call void @BKE_image_pool_free(%struct.ImagePool* %65), !dbg !4584
  store i32 0, i32* %i, align 4, !dbg !4585
  br label %for.cond71, !dbg !4587

for.cond71:                                       ; preds = %for.inc103, %if.end70
  %66 = load i32, i32* %i, align 4, !dbg !4588
  %67 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4590
  %image_tot72 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %67, i32 0, i32 40, !dbg !4591
  %68 = load i32, i32* %image_tot72, align 4, !dbg !4591
  %cmp73 = icmp slt i32 %66, %68, !dbg !4592
  br i1 %cmp73, label %for.body75, label %for.end105, !dbg !4593

for.body75:                                       ; preds = %for.cond71
  call void @llvm.dbg.declare(metadata i32* %touch, metadata !4594, metadata !DIExpression()), !dbg !4596
  store i32 0, i32* %touch, align 4, !dbg !4596
  store i32 0, i32* %a, align 4, !dbg !4597
  br label %for.cond76, !dbg !4599

for.cond76:                                       ; preds = %for.inc93, %for.body75
  %69 = load i32, i32* %a, align 4, !dbg !4600
  %70 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4602
  %thread_tot77 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %70, i32 0, i32 74, !dbg !4603
  %71 = load i32, i32* %thread_tot77, align 8, !dbg !4603
  %cmp78 = icmp slt i32 %69, %71, !dbg !4604
  br i1 %cmp78, label %for.body80, label %for.end95, !dbg !4605

for.body80:                                       ; preds = %for.cond76
  %72 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4606
  %projImages81 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %72, i32 0, i32 38, !dbg !4608
  %73 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages81, align 8, !dbg !4608
  %74 = load i32, i32* %i, align 4, !dbg !4609
  %idxprom82 = sext i32 %74 to i64, !dbg !4606
  %arrayidx83 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %73, i64 %idxprom82, !dbg !4606
  %partRedrawRect84 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %arrayidx83, i32 0, i32 2, !dbg !4610
  %75 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %partRedrawRect84, align 8, !dbg !4610
  %76 = load i32, i32* %a, align 4, !dbg !4611
  %idxprom85 = sext i32 %76 to i64, !dbg !4612
  %arrayidx86 = getelementptr inbounds [1 x %struct.ProjectHandle], [1 x %struct.ProjectHandle]* %handles, i64 0, i64 %idxprom85, !dbg !4612
  %projImages87 = getelementptr inbounds %struct.ProjectHandle, %struct.ProjectHandle* %arrayidx86, i32 0, i32 3, !dbg !4613
  %77 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages87, align 8, !dbg !4613
  %78 = load i32, i32* %i, align 4, !dbg !4614
  %idxprom88 = sext i32 %78 to i64, !dbg !4612
  %arrayidx89 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %77, i64 %idxprom88, !dbg !4612
  %partRedrawRect90 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %arrayidx89, i32 0, i32 2, !dbg !4615
  %79 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %partRedrawRect90, align 8, !dbg !4615
  %call91 = call zeroext i8 @partial_redraw_array_merge(%struct.ImagePaintPartialRedraw* %75, %struct.ImagePaintPartialRedraw* %79, i32 64), !dbg !4616
  %conv92 = zext i8 %call91 to i32, !dbg !4616
  %80 = load i32, i32* %touch, align 4, !dbg !4617
  %or = or i32 %80, %conv92, !dbg !4617
  store i32 %or, i32* %touch, align 4, !dbg !4617
  br label %for.inc93, !dbg !4618

for.inc93:                                        ; preds = %for.body80
  %81 = load i32, i32* %a, align 4, !dbg !4619
  %inc94 = add nsw i32 %81, 1, !dbg !4619
  store i32 %inc94, i32* %a, align 4, !dbg !4619
  br label %for.cond76, !dbg !4620, !llvm.loop !4621

for.end95:                                        ; preds = %for.cond76
  %82 = load i32, i32* %touch, align 4, !dbg !4623
  %tobool96 = icmp ne i32 %82, 0, !dbg !4623
  br i1 %tobool96, label %if.then97, label %if.end102, !dbg !4625

if.then97:                                        ; preds = %for.end95
  %83 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4626
  %projImages98 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %83, i32 0, i32 38, !dbg !4628
  %84 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages98, align 8, !dbg !4628
  %85 = load i32, i32* %i, align 4, !dbg !4629
  %idxprom99 = sext i32 %85 to i64, !dbg !4626
  %arrayidx100 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %84, i64 %idxprom99, !dbg !4626
  %touch101 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %arrayidx100, i32 0, i32 6, !dbg !4630
  store i32 1, i32* %touch101, align 8, !dbg !4631
  store i8 1, i8* %touch_any, align 1, !dbg !4632
  br label %if.end102, !dbg !4633

if.end102:                                        ; preds = %if.then97, %for.end95
  br label %for.inc103, !dbg !4634

for.inc103:                                       ; preds = %if.end102
  %86 = load i32, i32* %i, align 4, !dbg !4635
  %inc104 = add nsw i32 %86, 1, !dbg !4635
  store i32 %inc104, i32* %i, align 4, !dbg !4635
  br label %for.cond71, !dbg !4636, !llvm.loop !4637

for.end105:                                       ; preds = %for.cond71
  %87 = load i8, i8* %touch_any, align 1, !dbg !4639
  store i8 %87, i8* %retval, align 1, !dbg !4640
  br label %return, !dbg !4640

return:                                           ; preds = %for.end105, %if.then
  %88 = load i8, i8* %retval, align 1, !dbg !4641
  ret i8 %88, !dbg !4641
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @paint_proj_new_stroke(%struct.bContext* %C, %struct.Object* %ob, float* %mouse, i32 %mode) #0 !dbg !4642 {
entry:
  %retval = alloca i8*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %mouse.addr = alloca float*, align 8
  %mode.addr = alloca i32, align 4
  %ps = alloca %struct.ProjPaintState*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4646, metadata !DIExpression()), !dbg !4647
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4648, metadata !DIExpression()), !dbg !4649
  store float* %mouse, float** %mouse.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mouse.addr, metadata !4650, metadata !DIExpression()), !dbg !4651
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4652, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps, metadata !4654, metadata !DIExpression()), !dbg !4655
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4656
  %call = call i8* %0(i64 536, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)), !dbg !4656
  %1 = bitcast i8* %call to %struct.ProjPaintState*, !dbg !4656
  store %struct.ProjPaintState* %1, %struct.ProjPaintState** %ps, align 8, !dbg !4655
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4657
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4658
  %4 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4659
  %5 = load i32, i32* %mode.addr, align 4, !dbg !4660
  call void @project_state_init(%struct.bContext* %2, %struct.Object* %3, %struct.ProjPaintState* %4, i32 %5), !dbg !4661
  %6 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4662
  %tool = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %6, i32 0, i32 8, !dbg !4664
  %7 = load i16, i16* %tool, align 8, !dbg !4664
  %conv = sext i16 %7 to i32, !dbg !4662
  %cmp = icmp eq i32 %conv, 3, !dbg !4665
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4666

land.lhs.true:                                    ; preds = %entry
  %8 = load i32, i32* %mode.addr, align 4, !dbg !4667
  %cmp2 = icmp eq i32 %8, 1, !dbg !4668
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4669

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4670
  call void @view3d_operator_needs_opengl(%struct.bContext* %9), !dbg !4672
  %10 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4673
  %11 = bitcast %struct.ProjPaintState* %10 to i8*, !dbg !4673
  store i8* %11, i8** %retval, align 8, !dbg !4674
  br label %return, !dbg !4674

if.end:                                           ; preds = %land.lhs.true, %entry
  %12 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4675
  %brush = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %12, i32 0, i32 7, !dbg !4676
  %13 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !4676
  call void @paint_brush_init_tex(%struct.Brush* %13), !dbg !4677
  %14 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4678
  %source = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %14, i32 0, i32 4, !dbg !4679
  store i32 1, i32* %source, align 8, !dbg !4680
  %15 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4681
  %ob4 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %15, i32 0, i32 13, !dbg !4683
  %16 = load %struct.Object*, %struct.Object** %ob4, align 8, !dbg !4683
  %cmp5 = icmp eq %struct.Object* %16, null, !dbg !4684
  br i1 %cmp5, label %if.then9, label %lor.lhs.false, !dbg !4685

lor.lhs.false:                                    ; preds = %if.end
  %17 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4686
  %ob7 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %17, i32 0, i32 13, !dbg !4687
  %18 = load %struct.Object*, %struct.Object** %ob7, align 8, !dbg !4687
  %lay = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 52, !dbg !4688
  %19 = load i32, i32* %lay, align 8, !dbg !4688
  %20 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4689
  %v3d = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %20, i32 0, i32 0, !dbg !4690
  %21 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !4690
  %lay8 = getelementptr inbounds %struct.View3D, %struct.View3D* %21, i32 0, i32 22, !dbg !4691
  %22 = load i32, i32* %lay8, align 8, !dbg !4691
  %and = and i32 %19, %22, !dbg !4692
  %tobool = icmp ne i32 %and, 0, !dbg !4692
  br i1 %tobool, label %if.end10, label %if.then9, !dbg !4693

if.then9:                                         ; preds = %lor.lhs.false, %if.end
  %23 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4694
  %24 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4696
  %25 = bitcast %struct.ProjPaintState* %24 to i8*, !dbg !4696
  call void %23(i8* %25), !dbg !4694
  store i8* null, i8** %retval, align 8, !dbg !4697
  br label %return, !dbg !4697

if.end10:                                         ; preds = %lor.lhs.false
  %26 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4698
  %scene = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %26, i32 0, i32 3, !dbg !4699
  %27 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4699
  %28 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4700
  %brush11 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %28, i32 0, i32 7, !dbg !4701
  %29 = load %struct.Brush*, %struct.Brush** %brush11, align 8, !dbg !4701
  %call12 = call i32 @BKE_brush_size_get(%struct.Scene* %27, %struct.Brush* %29), !dbg !4702
  %30 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4703
  %orig_brush_size = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %30, i32 0, i32 11, !dbg !4704
  store i32 %call12, i32* %orig_brush_size, align 8, !dbg !4705
  %31 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4706
  %scene13 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %31, i32 0, i32 3, !dbg !4708
  %32 = load %struct.Scene*, %struct.Scene** %scene13, align 8, !dbg !4708
  %33 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4709
  %brush14 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %33, i32 0, i32 7, !dbg !4710
  %34 = load %struct.Brush*, %struct.Brush** %brush14, align 8, !dbg !4710
  %call15 = call i32 @BKE_brush_size_get(%struct.Scene* %32, %struct.Brush* %34), !dbg !4711
  %cmp16 = icmp slt i32 %call15, 2, !dbg !4712
  br i1 %cmp16, label %if.then18, label %if.end21, !dbg !4713

if.then18:                                        ; preds = %if.end10
  %35 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4714
  %scene19 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %35, i32 0, i32 3, !dbg !4715
  %36 = load %struct.Scene*, %struct.Scene** %scene19, align 8, !dbg !4715
  %37 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4716
  %brush20 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %37, i32 0, i32 7, !dbg !4717
  %38 = load %struct.Brush*, %struct.Brush** %brush20, align 8, !dbg !4717
  call void @BKE_brush_size_set(%struct.Scene* %36, %struct.Brush* %38, i32 2), !dbg !4718
  br label %if.end21, !dbg !4718

if.end21:                                         ; preds = %if.then18, %if.end10
  %39 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4719
  call void @project_paint_begin(%struct.ProjPaintState* %39), !dbg !4720
  %40 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4721
  %dm = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %40, i32 0, i32 14, !dbg !4723
  %41 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4723
  %cmp22 = icmp eq %struct.DerivedMesh* %41, null, !dbg !4724
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !4725

if.then24:                                        ; preds = %if.end21
  %42 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4726
  %43 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4728
  %44 = bitcast %struct.ProjPaintState* %43 to i8*, !dbg !4728
  call void %42(i8* %44), !dbg !4726
  store i8* null, i8** %retval, align 8, !dbg !4729
  br label %return, !dbg !4729

if.end25:                                         ; preds = %if.end21
  %45 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4730
  %46 = load float*, float** %mouse.addr, align 8, !dbg !4731
  call void @paint_proj_begin_clone(%struct.ProjPaintState* %45, float* %46), !dbg !4732
  %47 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4733
  %tool26 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %47, i32 0, i32 8, !dbg !4735
  %48 = load i16, i16* %tool26, align 8, !dbg !4735
  %conv27 = sext i16 %48 to i32, !dbg !4733
  %cmp28 = icmp eq i32 %conv27, 4, !dbg !4736
  br i1 %cmp28, label %if.then30, label %if.end32, !dbg !4737

if.then30:                                        ; preds = %if.end25
  %49 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4738
  %source31 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %49, i32 0, i32 4, !dbg !4739
  store i32 4, i32* %source31, align 8, !dbg !4740
  br label %if.end32, !dbg !4738

if.end32:                                         ; preds = %if.then30, %if.end25
  %50 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !4741
  %51 = bitcast %struct.ProjPaintState* %50 to i8*, !dbg !4741
  store i8* %51, i8** %retval, align 8, !dbg !4742
  br label %return, !dbg !4742

return:                                           ; preds = %if.end32, %if.then24, %if.then9, %if.then
  %52 = load i8*, i8** %retval, align 8, !dbg !4743
  ret i8* %52, !dbg !4743
}

; Function Attrs: noinline nounwind uwtable
define internal void @project_state_init(%struct.bContext* %C, %struct.Object* %ob, %struct.ProjPaintState* %ps, i32 %mode) #0 !dbg !4744 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %mode.addr = alloca i32, align 4
  %scene = alloca %struct.Scene*, align 8
  %settings = alloca %struct.ToolSettings*, align 8
  %brush4 = alloca %struct.Brush*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4747, metadata !DIExpression()), !dbg !4748
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4749, metadata !DIExpression()), !dbg !4750
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !4751, metadata !DIExpression()), !dbg !4752
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4753, metadata !DIExpression()), !dbg !4754
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !4755, metadata !DIExpression()), !dbg !4756
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4757
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !4758
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !4756
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %settings, metadata !4759, metadata !DIExpression()), !dbg !4762
  %1 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4763
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %1, i32 0, i32 20, !dbg !4764
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !4764
  store %struct.ToolSettings* %2, %struct.ToolSettings** %settings, align 8, !dbg !4762
  %3 = load i32, i32* %mode.addr, align 4, !dbg !4765
  %conv = trunc i32 %3 to i16, !dbg !4765
  %4 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4766
  %mode1 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %4, i32 0, i32 10, !dbg !4767
  store i16 %conv, i16* %mode1, align 4, !dbg !4768
  %5 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !4769
  %imapaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %5, i32 0, i32 17, !dbg !4770
  %paint = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint, i32 0, i32 0, !dbg !4771
  %call2 = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !4772
  %6 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4773
  %brush = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %6, i32 0, i32 7, !dbg !4774
  store %struct.Brush* %call2, %struct.Brush** %brush, align 8, !dbg !4775
  %7 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4776
  %brush3 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %7, i32 0, i32 7, !dbg !4778
  %8 = load %struct.Brush*, %struct.Brush** %brush3, align 8, !dbg !4778
  %tobool = icmp ne %struct.Brush* %8, null, !dbg !4776
  br i1 %tobool, label %if.then, label %if.else, !dbg !4779

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush4, metadata !4780, metadata !DIExpression()), !dbg !4782
  %9 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4783
  %brush5 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %9, i32 0, i32 7, !dbg !4784
  %10 = load %struct.Brush*, %struct.Brush** %brush5, align 8, !dbg !4784
  store %struct.Brush* %10, %struct.Brush** %brush4, align 8, !dbg !4782
  %11 = load %struct.Brush*, %struct.Brush** %brush4, align 8, !dbg !4785
  %imagepaint_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %11, i32 0, i32 36, !dbg !4786
  %12 = load i8, i8* %imagepaint_tool, align 2, !dbg !4786
  %conv6 = zext i8 %12 to i16, !dbg !4785
  %13 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4787
  %tool = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %13, i32 0, i32 8, !dbg !4788
  store i16 %conv6, i16* %tool, align 8, !dbg !4789
  %14 = load %struct.Brush*, %struct.Brush** %brush4, align 8, !dbg !4790
  %blend = getelementptr inbounds %struct.Brush, %struct.Brush* %14, i32 0, i32 12, !dbg !4791
  %15 = load i16, i16* %blend, align 4, !dbg !4791
  %16 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4792
  %blend7 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %16, i32 0, i32 9, !dbg !4793
  store i16 %15, i16* %blend7, align 2, !dbg !4794
  %17 = load %struct.Brush*, %struct.Brush** %brush4, align 8, !dbg !4795
  %imagepaint_tool8 = getelementptr inbounds %struct.Brush, %struct.Brush* %17, i32 0, i32 36, !dbg !4797
  %18 = load i8, i8* %imagepaint_tool8, align 2, !dbg !4797
  %conv9 = zext i8 %18 to i32, !dbg !4795
  %cmp = icmp eq i32 %conv9, 1, !dbg !4798
  br i1 %cmp, label %if.then11, label %if.end, !dbg !4799

if.then11:                                        ; preds = %if.then
  %19 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4800
  %mode12 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %19, i32 0, i32 10, !dbg !4802
  %20 = load i16, i16* %mode12, align 4, !dbg !4802
  %conv13 = sext i16 %20 to i32, !dbg !4800
  %cmp14 = icmp eq i32 %conv13, 1, !dbg !4803
  %conv15 = zext i1 %cmp14 to i32, !dbg !4803
  %21 = load %struct.Brush*, %struct.Brush** %brush4, align 8, !dbg !4804
  %flag = getelementptr inbounds %struct.Brush, %struct.Brush* %21, i32 0, i32 16, !dbg !4805
  %22 = load i32, i32* %flag, align 8, !dbg !4805
  %and = and i32 %22, 512, !dbg !4806
  %cmp16 = icmp ne i32 %and, 0, !dbg !4807
  %conv17 = zext i1 %cmp16 to i32, !dbg !4807
  %xor = xor i32 %conv15, %conv17, !dbg !4808
  %tobool18 = icmp ne i32 %xor, 0, !dbg !4809
  %23 = zext i1 %tobool18 to i64, !dbg !4809
  %cond = select i1 %tobool18, i32 1, i32 0, !dbg !4809
  %conv19 = trunc i32 %cond to i16, !dbg !4810
  %24 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4811
  %mode20 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %24, i32 0, i32 10, !dbg !4812
  store i16 %conv19, i16* %mode20, align 4, !dbg !4813
  %25 = load %struct.Brush*, %struct.Brush** %brush4, align 8, !dbg !4814
  %call21 = call %struct.BlurKernel* @paint_new_blur_kernel(%struct.Brush* %25, i8 zeroext 1), !dbg !4815
  %26 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4816
  %blurkernel = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %26, i32 0, i32 80, !dbg !4817
  store %struct.BlurKernel* %call21, %struct.BlurKernel** %blurkernel, align 8, !dbg !4818
  br label %if.end, !dbg !4819

if.end:                                           ; preds = %if.then11, %if.then
  %27 = load %struct.Brush*, %struct.Brush** %brush4, align 8, !dbg !4820
  %call22 = call zeroext i8 @paint_use_opacity_masking(%struct.Brush* %27), !dbg !4821
  %28 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4822
  %do_masking = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %28, i32 0, i32 62, !dbg !4823
  store i8 %call22, i8* %do_masking, align 2, !dbg !4824
  %29 = load %struct.Brush*, %struct.Brush** %brush4, align 8, !dbg !4825
  %mtex = getelementptr inbounds %struct.Brush, %struct.Brush* %29, i32 0, i32 3, !dbg !4826
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %mtex, i32 0, i32 5, !dbg !4827
  %30 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !4827
  %tobool23 = icmp ne %struct.Tex* %30, null, !dbg !4825
  br i1 %tobool23, label %land.rhs, label %land.end, !dbg !4828

land.rhs:                                         ; preds = %if.end
  %31 = load %struct.Brush*, %struct.Brush** %brush4, align 8, !dbg !4829
  %imagepaint_tool24 = getelementptr inbounds %struct.Brush, %struct.Brush* %31, i32 0, i32 36, !dbg !4830
  %32 = load i8, i8* %imagepaint_tool24, align 2, !dbg !4830
  %conv25 = zext i8 %32 to i32, !dbg !4829
  %cmp26 = icmp eq i32 %conv25, 0, !dbg !4831
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %33 = phi i1 [ false, %if.end ], [ %cmp26, %land.rhs ], !dbg !4832
  %34 = zext i1 %33 to i64, !dbg !4833
  %cond28 = select i1 %33, i32 1, i32 0, !dbg !4833
  %conv29 = trunc i32 %cond28 to i8, !dbg !4833
  %35 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4834
  %is_texbrush = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %35, i32 0, i32 63, !dbg !4835
  store i8 %conv29, i8* %is_texbrush, align 1, !dbg !4836
  %36 = load %struct.Brush*, %struct.Brush** %brush4, align 8, !dbg !4837
  %mask_mtex = getelementptr inbounds %struct.Brush, %struct.Brush* %36, i32 0, i32 4, !dbg !4838
  %tex30 = getelementptr inbounds %struct.MTex, %struct.MTex* %mask_mtex, i32 0, i32 5, !dbg !4839
  %37 = load %struct.Tex*, %struct.Tex** %tex30, align 8, !dbg !4839
  %tobool31 = icmp ne %struct.Tex* %37, null, !dbg !4840
  %38 = zext i1 %tobool31 to i64, !dbg !4840
  %cond32 = select i1 %tobool31, i32 1, i32 0, !dbg !4840
  %conv33 = trunc i32 %cond32 to i8, !dbg !4840
  %39 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4841
  %is_maskbrush = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %39, i32 0, i32 64, !dbg !4842
  store i8 %conv33, i8* %is_maskbrush, align 4, !dbg !4843
  br label %if.end37, !dbg !4844

if.else:                                          ; preds = %entry
  %40 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4845
  %do_masking34 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %40, i32 0, i32 62, !dbg !4847
  store i8 0, i8* %do_masking34, align 2, !dbg !4848
  %41 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4849
  %is_texbrush35 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %41, i32 0, i32 63, !dbg !4850
  store i8 0, i8* %is_texbrush35, align 1, !dbg !4851
  %42 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4852
  %is_maskbrush36 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %42, i32 0, i32 64, !dbg !4853
  store i8 0, i8* %is_maskbrush36, align 4, !dbg !4854
  br label %if.end37

if.end37:                                         ; preds = %if.else, %land.end
  %43 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4855
  %tool38 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %43, i32 0, i32 8, !dbg !4856
  %44 = load i16, i16* %tool38, align 8, !dbg !4856
  %call39 = call i32 @project_paint_pixel_sizeof(i16 signext %44), !dbg !4857
  %45 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4858
  %pixel_sizeof = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %45, i32 0, i32 39, !dbg !4859
  store i32 %call39, i32* %pixel_sizeof, align 8, !dbg !4860
  %46 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4861
  %call40 = call %struct.View3D* @CTX_wm_view3d(%struct.bContext* %46), !dbg !4862
  %47 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4863
  %v3d = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %47, i32 0, i32 0, !dbg !4864
  store %struct.View3D* %call40, %struct.View3D** %v3d, align 8, !dbg !4865
  %48 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4866
  %call41 = call %struct.RegionView3D* @CTX_wm_region_view3d(%struct.bContext* %48), !dbg !4867
  %49 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4868
  %rv3d = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %49, i32 0, i32 1, !dbg !4869
  store %struct.RegionView3D* %call41, %struct.RegionView3D** %rv3d, align 8, !dbg !4870
  %50 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4871
  %call42 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %50), !dbg !4872
  %51 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4873
  %ar = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %51, i32 0, i32 2, !dbg !4874
  store %struct.ARegion* %call42, %struct.ARegion** %ar, align 8, !dbg !4875
  %52 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4876
  %53 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4877
  %scene43 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %53, i32 0, i32 3, !dbg !4878
  store %struct.Scene* %52, %struct.Scene** %scene43, align 8, !dbg !4879
  %54 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4880
  %55 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4881
  %ob44 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %55, i32 0, i32 13, !dbg !4882
  store %struct.Object* %54, %struct.Object** %ob44, align 8, !dbg !4883
  %56 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !4884
  %imapaint45 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %56, i32 0, i32 17, !dbg !4885
  %mode46 = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint45, i32 0, i32 6, !dbg !4886
  %57 = load i32, i32* %mode46, align 4, !dbg !4886
  %cmp47 = icmp eq i32 %57, 0, !dbg !4887
  %conv48 = zext i1 %cmp47 to i32, !dbg !4887
  %conv49 = trunc i32 %conv48 to i8, !dbg !4888
  %58 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4889
  %do_material_slots = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %58, i32 0, i32 52, !dbg !4890
  store i8 %conv49, i8* %do_material_slots, align 4, !dbg !4891
  %59 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !4892
  %imapaint50 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %59, i32 0, i32 17, !dbg !4893
  %stencil = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint50, i32 0, i32 8, !dbg !4894
  %60 = load %struct.Image*, %struct.Image** %stencil, align 8, !dbg !4894
  %61 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4895
  %stencil_ima = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %61, i32 0, i32 23, !dbg !4896
  store %struct.Image* %60, %struct.Image** %stencil_ima, align 8, !dbg !4897
  %62 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4898
  %do_material_slots51 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %62, i32 0, i32 52, !dbg !4899
  %63 = load i8, i8* %do_material_slots51, align 4, !dbg !4899
  %tobool52 = icmp ne i8 %63, 0, !dbg !4898
  br i1 %tobool52, label %cond.false, label %cond.true, !dbg !4900

cond.true:                                        ; preds = %if.end37
  %64 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !4901
  %imapaint53 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %64, i32 0, i32 17, !dbg !4902
  %canvas = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint53, i32 0, i32 10, !dbg !4903
  %65 = load %struct.Image*, %struct.Image** %canvas, align 8, !dbg !4903
  br label %cond.end, !dbg !4900

cond.false:                                       ; preds = %if.end37
  br label %cond.end, !dbg !4900

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond54 = phi %struct.Image* [ %65, %cond.true ], [ null, %cond.false ], !dbg !4900
  %66 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4904
  %canvas_ima = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %66, i32 0, i32 24, !dbg !4905
  store %struct.Image* %cond54, %struct.Image** %canvas_ima, align 8, !dbg !4906
  %67 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4907
  %do_material_slots55 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %67, i32 0, i32 52, !dbg !4908
  %68 = load i8, i8* %do_material_slots55, align 4, !dbg !4908
  %tobool56 = icmp ne i8 %68, 0, !dbg !4907
  br i1 %tobool56, label %cond.false59, label %cond.true57, !dbg !4909

cond.true57:                                      ; preds = %cond.end
  %69 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !4910
  %imapaint58 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %69, i32 0, i32 17, !dbg !4911
  %clone = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint58, i32 0, i32 9, !dbg !4912
  %70 = load %struct.Image*, %struct.Image** %clone, align 8, !dbg !4912
  br label %cond.end60, !dbg !4909

cond.false59:                                     ; preds = %cond.end
  br label %cond.end60, !dbg !4909

cond.end60:                                       ; preds = %cond.false59, %cond.true57
  %cond61 = phi %struct.Image* [ %70, %cond.true57 ], [ null, %cond.false59 ], !dbg !4909
  %71 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4913
  %clone_ima = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %71, i32 0, i32 25, !dbg !4914
  store %struct.Image* %cond61, %struct.Image** %clone_ima, align 8, !dbg !4915
  %72 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4916
  %tool62 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %72, i32 0, i32 8, !dbg !4918
  %73 = load i16, i16* %tool62, align 8, !dbg !4918
  %conv63 = sext i16 %73 to i32, !dbg !4916
  %cmp64 = icmp ne i32 %conv63, 4, !dbg !4919
  br i1 %cmp64, label %if.then66, label %if.else88, !dbg !4920

if.then66:                                        ; preds = %cond.end60
  %74 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !4921
  %imapaint67 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %74, i32 0, i32 17, !dbg !4923
  %flag68 = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint67, i32 0, i32 1, !dbg !4924
  %75 = load i16, i16* %flag68, align 8, !dbg !4924
  %conv69 = sext i16 %75 to i32, !dbg !4921
  %and70 = and i32 %conv69, 32, !dbg !4925
  %tobool71 = icmp ne i32 %and70, 0, !dbg !4926
  %76 = zext i1 %tobool71 to i64, !dbg !4926
  %cond72 = select i1 %tobool71, i32 0, i32 1, !dbg !4926
  %conv73 = trunc i32 %cond72 to i8, !dbg !4926
  %77 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4927
  %do_backfacecull = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %77, i32 0, i32 54, !dbg !4928
  store i8 %conv73, i8* %do_backfacecull, align 2, !dbg !4929
  %78 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !4930
  %imapaint74 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %78, i32 0, i32 17, !dbg !4931
  %flag75 = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint74, i32 0, i32 1, !dbg !4932
  %79 = load i16, i16* %flag75, align 8, !dbg !4932
  %conv76 = sext i16 %79 to i32, !dbg !4930
  %and77 = and i32 %conv76, 16, !dbg !4933
  %tobool78 = icmp ne i32 %and77, 0, !dbg !4934
  %80 = zext i1 %tobool78 to i64, !dbg !4934
  %cond79 = select i1 %tobool78, i32 0, i32 1, !dbg !4934
  %conv80 = trunc i32 %cond79 to i8, !dbg !4934
  %81 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4935
  %do_occlude = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %81, i32 0, i32 53, !dbg !4936
  store i8 %conv80, i8* %do_occlude, align 1, !dbg !4937
  %82 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !4938
  %imapaint81 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %82, i32 0, i32 17, !dbg !4939
  %flag82 = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint81, i32 0, i32 1, !dbg !4940
  %83 = load i16, i16* %flag82, align 8, !dbg !4940
  %conv83 = sext i16 %83 to i32, !dbg !4938
  %and84 = and i32 %conv83, 64, !dbg !4941
  %tobool85 = icmp ne i32 %and84, 0, !dbg !4942
  %84 = zext i1 %tobool85 to i64, !dbg !4942
  %cond86 = select i1 %tobool85, i32 0, i32 1, !dbg !4942
  %conv87 = trunc i32 %cond86 to i8, !dbg !4942
  %85 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4943
  %do_mask_normal = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %85, i32 0, i32 55, !dbg !4944
  store i8 %conv87, i8* %do_mask_normal, align 1, !dbg !4945
  br label %if.end92, !dbg !4946

if.else88:                                        ; preds = %cond.end60
  %86 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4947
  %do_mask_normal89 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %86, i32 0, i32 55, !dbg !4949
  store i8 0, i8* %do_mask_normal89, align 1, !dbg !4950
  %87 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4951
  %do_occlude90 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %87, i32 0, i32 53, !dbg !4952
  store i8 0, i8* %do_occlude90, align 1, !dbg !4953
  %88 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4954
  %do_backfacecull91 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %88, i32 0, i32 54, !dbg !4955
  store i8 0, i8* %do_backfacecull91, align 2, !dbg !4956
  br label %if.end92

if.end92:                                         ; preds = %if.else88, %if.then66
  %89 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4957
  %call93 = call zeroext i8 @BKE_scene_use_new_shading_nodes(%struct.Scene* %89), !dbg !4958
  %90 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4959
  %do_new_shading_nodes = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %90, i32 0, i32 56, !dbg !4960
  store i8 %call93, i8* %do_new_shading_nodes, align 8, !dbg !4961
  %91 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4962
  %tool94 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %91, i32 0, i32 8, !dbg !4964
  %92 = load i16, i16* %tool94, align 8, !dbg !4964
  %conv95 = sext i16 %92 to i32, !dbg !4962
  %cmp96 = icmp eq i32 %conv95, 3, !dbg !4965
  br i1 %cmp96, label %if.then98, label %if.end106, !dbg !4966

if.then98:                                        ; preds = %if.end92
  %93 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !4967
  %imapaint99 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %93, i32 0, i32 17, !dbg !4968
  %flag100 = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint99, i32 0, i32 1, !dbg !4969
  %94 = load i16, i16* %flag100, align 8, !dbg !4969
  %conv101 = sext i16 %94 to i32, !dbg !4967
  %and102 = and i32 %conv101, 128, !dbg !4970
  %tobool103 = icmp ne i32 %and102, 0, !dbg !4971
  %95 = zext i1 %tobool103 to i64, !dbg !4971
  %cond104 = select i1 %tobool103, i32 1, i32 0, !dbg !4971
  %conv105 = trunc i32 %cond104 to i8, !dbg !4971
  %96 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4972
  %do_layer_clone = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %96, i32 0, i32 48, !dbg !4973
  store i8 %conv105, i8* %do_layer_clone, align 8, !dbg !4974
  br label %if.end106, !dbg !4972

if.end106:                                        ; preds = %if.then98, %if.end92
  %97 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4975
  %brush107 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %97, i32 0, i32 7, !dbg !4976
  %98 = load %struct.Brush*, %struct.Brush** %brush107, align 8, !dbg !4976
  %tobool108 = icmp ne %struct.Brush* %98, null, !dbg !4975
  br i1 %tobool108, label %land.rhs109, label %land.end115, !dbg !4977

land.rhs109:                                      ; preds = %if.end106
  %99 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4978
  %brush110 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %99, i32 0, i32 7, !dbg !4979
  %100 = load %struct.Brush*, %struct.Brush** %brush110, align 8, !dbg !4979
  %imagepaint_tool111 = getelementptr inbounds %struct.Brush, %struct.Brush* %100, i32 0, i32 36, !dbg !4980
  %101 = load i8, i8* %imagepaint_tool111, align 2, !dbg !4980
  %conv112 = zext i8 %101 to i32, !dbg !4978
  %cmp113 = icmp eq i32 %conv112, 5, !dbg !4981
  br label %land.end115

land.end115:                                      ; preds = %land.rhs109, %if.end106
  %102 = phi i1 [ false, %if.end106 ], [ %cmp113, %land.rhs109 ], !dbg !4982
  %land.ext = zext i1 %102 to i32, !dbg !4977
  %conv116 = trunc i32 %land.ext to i8, !dbg !4983
  %103 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4984
  %do_stencil_brush = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %103, i32 0, i32 51, !dbg !4985
  store i8 %conv116, i8* %do_stencil_brush, align 1, !dbg !4986
  %104 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !4987
  %imapaint117 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %104, i32 0, i32 17, !dbg !4988
  %flag118 = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint117, i32 0, i32 1, !dbg !4989
  %105 = load i16, i16* %flag118, align 8, !dbg !4989
  %conv119 = sext i16 %105 to i32, !dbg !4987
  %and120 = and i32 %conv119, 256, !dbg !4990
  %tobool121 = icmp ne i32 %and120, 0, !dbg !4990
  br i1 %tobool121, label %land.lhs.true, label %land.end127, !dbg !4991

land.lhs.true:                                    ; preds = %land.end115
  %106 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4992
  %do_stencil_brush122 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %106, i32 0, i32 51, !dbg !4993
  %107 = load i8, i8* %do_stencil_brush122, align 1, !dbg !4993
  %tobool123 = icmp ne i8 %107, 0, !dbg !4994
  br i1 %tobool123, label %land.end127, label %land.rhs124, !dbg !4995

land.rhs124:                                      ; preds = %land.lhs.true
  %108 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4996
  %stencil_ima125 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %108, i32 0, i32 23, !dbg !4997
  %109 = load %struct.Image*, %struct.Image** %stencil_ima125, align 8, !dbg !4997
  %tobool126 = icmp ne %struct.Image* %109, null, !dbg !4995
  br label %land.end127

land.end127:                                      ; preds = %land.rhs124, %land.lhs.true, %land.end115
  %110 = phi i1 [ false, %land.lhs.true ], [ false, %land.end115 ], [ %tobool126, %land.rhs124 ], !dbg !4982
  %land.ext128 = zext i1 %110 to i32, !dbg !4995
  %conv129 = trunc i32 %land.ext128 to i8, !dbg !4998
  %111 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !4999
  %do_layer_stencil = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %111, i32 0, i32 49, !dbg !5000
  store i8 %conv129, i8* %do_layer_stencil, align 1, !dbg !5001
  %112 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !5002
  %imapaint130 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %112, i32 0, i32 17, !dbg !5003
  %flag131 = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint130, i32 0, i32 1, !dbg !5004
  %113 = load i16, i16* %flag131, align 8, !dbg !5004
  %conv132 = sext i16 %113 to i32, !dbg !5002
  %and133 = and i32 %conv132, 512, !dbg !5005
  %cmp134 = icmp ne i32 %and133, 0, !dbg !5006
  %conv135 = zext i1 %cmp134 to i32, !dbg !5006
  %conv136 = trunc i32 %conv135 to i8, !dbg !5007
  %114 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5008
  %do_layer_stencil_inv = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %114, i32 0, i32 50, !dbg !5009
  store i8 %conv136, i8* %do_layer_stencil_inv, align 2, !dbg !5010
  %115 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !5011
  %imapaint137 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %115, i32 0, i32 17, !dbg !5012
  %seam_bleed = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint137, i32 0, i32 3, !dbg !5013
  %116 = load i16, i16* %seam_bleed, align 4, !dbg !5013
  %conv138 = sitofp i16 %116 to float, !dbg !5011
  %117 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5014
  %seam_bleed_px = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %117, i32 0, i32 65, !dbg !5015
  store float %conv138, float* %seam_bleed_px, align 8, !dbg !5016
  %118 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5017
  %do_mask_normal139 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %118, i32 0, i32 55, !dbg !5019
  %119 = load i8, i8* %do_mask_normal139, align 1, !dbg !5019
  %tobool140 = icmp ne i8 %119, 0, !dbg !5017
  br i1 %tobool140, label %if.then141, label %if.else146, !dbg !5020

if.then141:                                       ; preds = %land.end127
  %120 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !5021
  %imapaint142 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %120, i32 0, i32 17, !dbg !5023
  %normal_angle = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint142, i32 0, i32 4, !dbg !5024
  %121 = load i16, i16* %normal_angle, align 2, !dbg !5024
  %conv143 = sitofp i16 %121 to float, !dbg !5021
  %122 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5025
  %normal_angle_inner = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %122, i32 0, i32 58, !dbg !5026
  store float %conv143, float* %normal_angle_inner, align 8, !dbg !5027
  %123 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5028
  %normal_angle_inner144 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %123, i32 0, i32 58, !dbg !5029
  %124 = load float, float* %normal_angle_inner144, align 8, !dbg !5029
  %add = fadd float %124, 9.000000e+01, !dbg !5030
  %mul = fmul float %add, 5.000000e-01, !dbg !5031
  %125 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5032
  %normal_angle145 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %125, i32 0, i32 57, !dbg !5033
  store float %mul, float* %normal_angle145, align 4, !dbg !5034
  br label %if.end152, !dbg !5035

if.else146:                                       ; preds = %land.end127
  %126 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !5036
  %imapaint147 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %126, i32 0, i32 17, !dbg !5038
  %normal_angle148 = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint147, i32 0, i32 4, !dbg !5039
  %127 = load i16, i16* %normal_angle148, align 2, !dbg !5039
  %conv149 = sitofp i16 %127 to float, !dbg !5036
  %128 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5040
  %normal_angle150 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %128, i32 0, i32 57, !dbg !5041
  store float %conv149, float* %normal_angle150, align 4, !dbg !5042
  %129 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5043
  %normal_angle_inner151 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %129, i32 0, i32 58, !dbg !5044
  store float %conv149, float* %normal_angle_inner151, align 8, !dbg !5045
  br label %if.end152

if.end152:                                        ; preds = %if.else146, %if.then141
  %130 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5046
  %normal_angle_inner153 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %130, i32 0, i32 58, !dbg !5047
  %131 = load float, float* %normal_angle_inner153, align 8, !dbg !5048
  %mul154 = fmul float %131, 0x3F91DF46A0000000, !dbg !5048
  store float %mul154, float* %normal_angle_inner153, align 8, !dbg !5048
  %132 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5049
  %normal_angle155 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %132, i32 0, i32 57, !dbg !5050
  %133 = load float, float* %normal_angle155, align 4, !dbg !5051
  %mul156 = fmul float %133, 0x3F91DF46A0000000, !dbg !5051
  store float %mul156, float* %normal_angle155, align 4, !dbg !5051
  %134 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5052
  %normal_angle157 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %134, i32 0, i32 57, !dbg !5053
  %135 = load float, float* %normal_angle157, align 4, !dbg !5053
  %136 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5054
  %normal_angle_inner158 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %136, i32 0, i32 58, !dbg !5055
  %137 = load float, float* %normal_angle_inner158, align 8, !dbg !5055
  %sub = fsub float %135, %137, !dbg !5056
  %138 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5057
  %normal_angle_range = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %138, i32 0, i32 59, !dbg !5058
  store float %sub, float* %normal_angle_range, align 4, !dbg !5059
  %139 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5060
  %normal_angle_range159 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %139, i32 0, i32 59, !dbg !5062
  %140 = load float, float* %normal_angle_range159, align 4, !dbg !5062
  %cmp160 = fcmp ole float %140, 0.000000e+00, !dbg !5063
  br i1 %cmp160, label %if.then162, label %if.end164, !dbg !5064

if.then162:                                       ; preds = %if.end152
  %141 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5065
  %do_mask_normal163 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %141, i32 0, i32 55, !dbg !5066
  store i8 0, i8* %do_mask_normal163, align 1, !dbg !5067
  br label %if.end164, !dbg !5065

if.end164:                                        ; preds = %if.then162, %if.end152
  ret void, !dbg !5068
}

declare dso_local void @paint_brush_init_tex(%struct.Brush*) #2

declare dso_local i32 @BKE_brush_size_get(%struct.Scene*, %struct.Brush*) #2

declare dso_local void @BKE_brush_size_set(%struct.Scene*, %struct.Brush*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @project_paint_begin(%struct.ProjPaintState* %ps) #0 !dbg !5069 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %mat = alloca [3 x [3 x float]], align 16
  %no = alloca [3 x float], align 4
  %projScreenCo = alloca float*, align 8
  %projMargin = alloca float, align 4
  %image_LinkList = alloca %struct.LinkNode*, align 8
  %node = alloca %struct.LinkNode*, align 8
  %projIma = alloca %struct.ProjPaintImage*, align 8
  %tpage_last = alloca %struct.Image*, align 8
  %tpage = alloca %struct.Image*, align 8
  %slot_last = alloca %struct.TexPaintSlot*, align 8
  %slot = alloca %struct.TexPaintSlot*, align 8
  %slot_last_clone = alloca %struct.TexPaintSlot*, align 8
  %slot_clone = alloca %struct.TexPaintSlot*, align 8
  %mpoly_orig = alloca %struct.MPoly*, align 8
  %mf = alloca %struct.MFace*, align 8
  %tf = alloca %struct.MTFace**, align 8
  %tf_base = alloca %struct.MTFace*, align 8
  %tf_clone = alloca %struct.MTFace**, align 8
  %tf_clone_base = alloca %struct.MTFace*, align 8
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  %image_index = alloca i32, align 4
  %face_index = alloca i32, align 4
  %index_mf_to_mpoly = alloca i32*, align 8
  %index_mp_to_orig = alloca i32*, align 8
  %mv = alloca %struct.MVert*, align 8
  %arena = alloca %struct.MemArena*, align 8
  %diameter = alloca i32, align 4
  %reset_threads = alloca i8, align 1
  %layer_num = alloca i32, align 4
  %layer_num140 = alloca i32, align 4
  %viewmat = alloca [4 x [4 x float]], align 16
  %viewinv = alloca [4 x [4 x float]], align 16
  %winmat = alloca [4 x [4 x float]], align 16
  %vmat = alloca [4 x [4 x float]], align 16
  %idgroup = alloca %struct.IDProperty*, align 8
  %view_data = alloca %struct.IDProperty*, align 8
  %array = alloca float*, align 8
  %cam_ob = alloca %struct.Object*, align 8
  %params = alloca %struct.CameraParams, align 4
  %viewDirPersp = alloca [3 x float], align 4
  %is_face_sel = alloca i8, align 1
  %orig_index = alloca i32, align 4
  %mp = alloca %struct.MPoly*, align 8
  %v1coSS = alloca float*, align 8
  %v2coSS = alloca float*, align 8
  %v3coSS = alloca float*, align 8
  %v4coSS = alloca float*, align 8
  %size = alloca i32, align 4
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !5072, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !5074, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.declare(metadata [3 x float]* %no, metadata !5076, metadata !DIExpression()), !dbg !5077
  call void @llvm.dbg.declare(metadata float** %projScreenCo, metadata !5078, metadata !DIExpression()), !dbg !5079
  call void @llvm.dbg.declare(metadata float* %projMargin, metadata !5080, metadata !DIExpression()), !dbg !5081
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %image_LinkList, metadata !5082, metadata !DIExpression()), !dbg !5083
  store %struct.LinkNode* null, %struct.LinkNode** %image_LinkList, align 8, !dbg !5083
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %node, metadata !5084, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.declare(metadata %struct.ProjPaintImage** %projIma, metadata !5086, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.declare(metadata %struct.Image** %tpage_last, metadata !5088, metadata !DIExpression()), !dbg !5089
  store %struct.Image* null, %struct.Image** %tpage_last, align 8, !dbg !5089
  call void @llvm.dbg.declare(metadata %struct.Image** %tpage, metadata !5090, metadata !DIExpression()), !dbg !5091
  call void @llvm.dbg.declare(metadata %struct.TexPaintSlot** %slot_last, metadata !5092, metadata !DIExpression()), !dbg !5095
  store %struct.TexPaintSlot* null, %struct.TexPaintSlot** %slot_last, align 8, !dbg !5095
  call void @llvm.dbg.declare(metadata %struct.TexPaintSlot** %slot, metadata !5096, metadata !DIExpression()), !dbg !5097
  store %struct.TexPaintSlot* null, %struct.TexPaintSlot** %slot, align 8, !dbg !5097
  call void @llvm.dbg.declare(metadata %struct.TexPaintSlot** %slot_last_clone, metadata !5098, metadata !DIExpression()), !dbg !5099
  store %struct.TexPaintSlot* null, %struct.TexPaintSlot** %slot_last_clone, align 8, !dbg !5099
  call void @llvm.dbg.declare(metadata %struct.TexPaintSlot** %slot_clone, metadata !5100, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly_orig, metadata !5102, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !5106, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.declare(metadata %struct.MTFace*** %tf, metadata !5108, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf_base, metadata !5110, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.declare(metadata %struct.MTFace*** %tf_clone, metadata !5112, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf_clone_base, metadata !5114, metadata !DIExpression()), !dbg !5115
  store %struct.MTFace* null, %struct.MTFace** %tf_clone_base, align 8, !dbg !5115
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5116, metadata !DIExpression()), !dbg !5117
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5118, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.declare(metadata i32* %image_index, metadata !5120, metadata !DIExpression()), !dbg !5121
  store i32 -1, i32* %image_index, align 4, !dbg !5121
  call void @llvm.dbg.declare(metadata i32* %face_index, metadata !5122, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.declare(metadata i32** %index_mf_to_mpoly, metadata !5124, metadata !DIExpression()), !dbg !5127
  store i32* null, i32** %index_mf_to_mpoly, align 8, !dbg !5127
  call void @llvm.dbg.declare(metadata i32** %index_mp_to_orig, metadata !5128, metadata !DIExpression()), !dbg !5129
  store i32* null, i32** %index_mp_to_orig, align 8, !dbg !5129
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !5130, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.declare(metadata %struct.MemArena** %arena, metadata !5132, metadata !DIExpression()), !dbg !5133
  call void @llvm.dbg.declare(metadata i32* %diameter, metadata !5134, metadata !DIExpression()), !dbg !5135
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5136
  %scene = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 3, !dbg !5137
  %1 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5137
  %2 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5138
  %brush = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %2, i32 0, i32 7, !dbg !5139
  %3 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !5139
  %call = call i32 @BKE_brush_size_get(%struct.Scene* %1, %struct.Brush* %3), !dbg !5140
  %mul = mul nsw i32 2, %call, !dbg !5141
  store i32 %mul, i32* %diameter, align 4, !dbg !5135
  call void @llvm.dbg.declare(metadata i8* %reset_threads, metadata !5142, metadata !DIExpression()), !dbg !5143
  store i8 0, i8* %reset_threads, align 1, !dbg !5143
  %4 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5144
  %source = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %4, i32 0, i32 4, !dbg !5146
  %5 = load i32, i32* %source, align 8, !dbg !5146
  %cmp = icmp eq i32 %5, 1, !dbg !5147
  br i1 %cmp, label %if.then, label %if.end, !dbg !5148

if.then:                                          ; preds = %entry
  %6 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5149
  %rv3d = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %6, i32 0, i32 1, !dbg !5150
  %7 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !5150
  %8 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5151
  %ob = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %8, i32 0, i32 13, !dbg !5152
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5152
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 47, !dbg !5153
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !5151
  call void @ED_view3d_clipping_local(%struct.RegionView3D* %7, [4 x float]* %arraydecay), !dbg !5154
  br label %if.end, !dbg !5154

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5155
  %ob1 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %10, i32 0, i32 13, !dbg !5156
  %11 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !5156
  %data = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 19, !dbg !5157
  %12 = load i8*, i8** %data, align 8, !dbg !5157
  %13 = bitcast i8* %12 to %struct.Mesh*, !dbg !5158
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %13, i32 0, i32 46, !dbg !5159
  %14 = load i8, i8* %editflag, align 1, !dbg !5159
  %conv = zext i8 %14 to i32, !dbg !5160
  %and = and i32 %conv, 8, !dbg !5161
  %cmp2 = icmp ne i32 %and, 0, !dbg !5162
  %conv3 = zext i1 %cmp2 to i32, !dbg !5162
  %conv4 = trunc i32 %conv3 to i8, !dbg !5163
  %15 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5164
  %do_face_sel = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %15, i32 0, i32 60, !dbg !5165
  store i8 %conv4, i8* %do_face_sel, align 8, !dbg !5166
  %16 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5167
  %source5 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %16, i32 0, i32 4, !dbg !5169
  %17 = load i32, i32* %source5, align 8, !dbg !5169
  %cmp6 = icmp eq i32 %17, 2, !dbg !5170
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !5171

if.then8:                                         ; preds = %if.end
  %18 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5172
  %scene9 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %18, i32 0, i32 3, !dbg !5174
  %19 = load %struct.Scene*, %struct.Scene** %scene9, align 8, !dbg !5174
  %20 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5175
  %ob10 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %20, i32 0, i32 13, !dbg !5176
  %21 = load %struct.Object*, %struct.Object** %ob10, align 8, !dbg !5176
  %22 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5177
  %scene11 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %22, i32 0, i32 3, !dbg !5178
  %23 = load %struct.Scene*, %struct.Scene** %scene11, align 8, !dbg !5178
  %customdata_mask = getelementptr inbounds %struct.Scene, %struct.Scene* %23, i32 0, i32 42, !dbg !5179
  %24 = load i64, i64* %customdata_mask, align 8, !dbg !5179
  %or = or i64 %24, 32, !dbg !5180
  %call12 = call %struct.DerivedMesh* @mesh_create_derived_render(%struct.Scene* %19, %struct.Object* %21, i64 %or), !dbg !5181
  %25 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5182
  %dm = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %25, i32 0, i32 14, !dbg !5183
  store %struct.DerivedMesh* %call12, %struct.DerivedMesh** %dm, align 8, !dbg !5184
  %26 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5185
  %dm_release = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %26, i32 0, i32 17, !dbg !5186
  store i32 1, i32* %dm_release, align 8, !dbg !5187
  br label %if.end49, !dbg !5188

if.else:                                          ; preds = %if.end
  %27 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5189
  %ob13 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %27, i32 0, i32 13, !dbg !5191
  %28 = load %struct.Object*, %struct.Object** %ob13, align 8, !dbg !5191
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 120, !dbg !5192
  %29 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !5192
  %tobool = icmp ne %struct.DerivedMesh* %29, null, !dbg !5189
  br i1 %tobool, label %land.lhs.true, label %if.else34, !dbg !5193

land.lhs.true:                                    ; preds = %if.else
  %30 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5194
  %ob14 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %30, i32 0, i32 13, !dbg !5195
  %31 = load %struct.Object*, %struct.Object** %ob14, align 8, !dbg !5195
  %derivedFinal15 = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 120, !dbg !5196
  %32 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal15, align 8, !dbg !5196
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %32, i32 0, i32 2, !dbg !5197
  %call16 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %faceData, i32 5), !dbg !5198
  %conv17 = zext i8 %call16 to i32, !dbg !5198
  %tobool18 = icmp ne i32 %conv17, 0, !dbg !5198
  br i1 %tobool18, label %land.lhs.true19, label %if.else34, !dbg !5199

land.lhs.true19:                                  ; preds = %land.lhs.true
  %33 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5200
  %do_face_sel20 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %33, i32 0, i32 60, !dbg !5201
  %34 = load i8, i8* %do_face_sel20, align 8, !dbg !5201
  %conv21 = zext i8 %34 to i32, !dbg !5200
  %cmp22 = icmp eq i32 %conv21, 0, !dbg !5202
  br i1 %cmp22, label %if.then29, label %lor.lhs.false, !dbg !5203

lor.lhs.false:                                    ; preds = %land.lhs.true19
  %35 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5204
  %ob24 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %35, i32 0, i32 13, !dbg !5205
  %36 = load %struct.Object*, %struct.Object** %ob24, align 8, !dbg !5205
  %derivedFinal25 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 120, !dbg !5206
  %37 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal25, align 8, !dbg !5206
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %37, i32 0, i32 4, !dbg !5207
  %call26 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %polyData, i32 7), !dbg !5208
  %conv27 = zext i8 %call26 to i32, !dbg !5208
  %tobool28 = icmp ne i32 %conv27, 0, !dbg !5208
  br i1 %tobool28, label %if.then29, label %if.else34, !dbg !5209

if.then29:                                        ; preds = %lor.lhs.false, %land.lhs.true19
  %38 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5210
  %ob30 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %38, i32 0, i32 13, !dbg !5212
  %39 = load %struct.Object*, %struct.Object** %ob30, align 8, !dbg !5212
  %derivedFinal31 = getelementptr inbounds %struct.Object, %struct.Object* %39, i32 0, i32 120, !dbg !5213
  %40 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal31, align 8, !dbg !5213
  %41 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5214
  %dm32 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %41, i32 0, i32 14, !dbg !5215
  store %struct.DerivedMesh* %40, %struct.DerivedMesh** %dm32, align 8, !dbg !5216
  %42 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5217
  %dm_release33 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %42, i32 0, i32 17, !dbg !5218
  store i32 0, i32* %dm_release33, align 8, !dbg !5219
  br label %if.end48, !dbg !5220

if.else34:                                        ; preds = %lor.lhs.false, %land.lhs.true, %if.else
  %43 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5221
  %scene35 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %43, i32 0, i32 3, !dbg !5223
  %44 = load %struct.Scene*, %struct.Scene** %scene35, align 8, !dbg !5223
  %45 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5224
  %ob36 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %45, i32 0, i32 13, !dbg !5225
  %46 = load %struct.Object*, %struct.Object** %ob36, align 8, !dbg !5225
  %47 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5226
  %scene37 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %47, i32 0, i32 3, !dbg !5227
  %48 = load %struct.Scene*, %struct.Scene** %scene37, align 8, !dbg !5227
  %customdata_mask38 = getelementptr inbounds %struct.Scene, %struct.Scene* %48, i32 0, i32 42, !dbg !5228
  %49 = load i64, i64* %customdata_mask38, align 8, !dbg !5228
  %or39 = or i64 %49, 32, !dbg !5229
  %50 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5230
  %do_face_sel40 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %50, i32 0, i32 60, !dbg !5231
  %51 = load i8, i8* %do_face_sel40, align 8, !dbg !5231
  %conv41 = zext i8 %51 to i32, !dbg !5230
  %tobool42 = icmp ne i32 %conv41, 0, !dbg !5230
  %52 = zext i1 %tobool42 to i64, !dbg !5230
  %cond = select i1 %tobool42, i32 7, i32 0, !dbg !5230
  %conv43 = sext i32 %cond to i64, !dbg !5232
  %or44 = or i64 %or39, %conv43, !dbg !5233
  %call45 = call %struct.DerivedMesh* @mesh_get_derived_final(%struct.Scene* %44, %struct.Object* %46, i64 %or44), !dbg !5234
  %53 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5235
  %dm46 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %53, i32 0, i32 14, !dbg !5236
  store %struct.DerivedMesh* %call45, %struct.DerivedMesh** %dm46, align 8, !dbg !5237
  %54 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5238
  %dm_release47 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %54, i32 0, i32 17, !dbg !5239
  store i32 1, i32* %dm_release47, align 8, !dbg !5240
  br label %if.end48

if.end48:                                         ; preds = %if.else34, %if.then29
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then8
  %55 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5241
  %dm50 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %55, i32 0, i32 14, !dbg !5243
  %56 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm50, align 8, !dbg !5243
  %faceData51 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %56, i32 0, i32 2, !dbg !5244
  %call52 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %faceData51, i32 5), !dbg !5245
  %tobool53 = icmp ne i8 %call52, 0, !dbg !5245
  br i1 %tobool53, label %if.end62, label %if.then54, !dbg !5246

if.then54:                                        ; preds = %if.end49
  %57 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5247
  %dm_release55 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %57, i32 0, i32 17, !dbg !5250
  %58 = load i32, i32* %dm_release55, align 8, !dbg !5250
  %tobool56 = icmp ne i32 %58, 0, !dbg !5247
  br i1 %tobool56, label %if.then57, label %if.end60, !dbg !5251

if.then57:                                        ; preds = %if.then54
  %59 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5252
  %dm58 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %59, i32 0, i32 14, !dbg !5253
  %60 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm58, align 8, !dbg !5253
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %60, i32 0, i32 95, !dbg !5254
  %61 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !5254
  %62 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5255
  %dm59 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %62, i32 0, i32 14, !dbg !5256
  %63 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm59, align 8, !dbg !5256
  call void %61(%struct.DerivedMesh* %63), !dbg !5252
  br label %if.end60, !dbg !5252

if.end60:                                         ; preds = %if.then57, %if.then54
  %64 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5257
  %dm61 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %64, i32 0, i32 14, !dbg !5258
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %dm61, align 8, !dbg !5259
  br label %return, !dbg !5260

if.end62:                                         ; preds = %if.end49
  %65 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5261
  %dm63 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %65, i32 0, i32 14, !dbg !5262
  %66 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm63, align 8, !dbg !5262
  %67 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5263
  %ob64 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %67, i32 0, i32 13, !dbg !5264
  %68 = load %struct.Object*, %struct.Object** %ob64, align 8, !dbg !5264
  call void @DM_update_materials(%struct.DerivedMesh* %66, %struct.Object* %68), !dbg !5265
  %69 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5266
  %dm65 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %69, i32 0, i32 14, !dbg !5267
  %70 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm65, align 8, !dbg !5267
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %70, i32 0, i32 23, !dbg !5268
  %71 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !5268
  %72 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5269
  %dm66 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %72, i32 0, i32 14, !dbg !5270
  %73 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm66, align 8, !dbg !5270
  %call67 = call i32 %71(%struct.DerivedMesh* %73), !dbg !5266
  %74 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5271
  %dm_totvert = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %74, i32 0, i32 16, !dbg !5272
  store i32 %call67, i32* %dm_totvert, align 4, !dbg !5273
  %75 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5274
  %dm68 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %75, i32 0, i32 14, !dbg !5275
  %76 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm68, align 8, !dbg !5275
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %76, i32 0, i32 25, !dbg !5276
  %77 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !5276
  %78 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5277
  %dm69 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %78, i32 0, i32 14, !dbg !5278
  %79 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm69, align 8, !dbg !5278
  %call70 = call i32 %77(%struct.DerivedMesh* %79), !dbg !5274
  %80 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5279
  %dm_totface = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %80, i32 0, i32 15, !dbg !5280
  store i32 %call70, i32* %dm_totface, align 8, !dbg !5281
  %81 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5282
  %dm71 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %81, i32 0, i32 14, !dbg !5283
  %82 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm71, align 8, !dbg !5283
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %82, i32 0, i32 31, !dbg !5284
  %83 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !5284
  %84 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5285
  %dm72 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %84, i32 0, i32 14, !dbg !5286
  %85 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm72, align 8, !dbg !5286
  %call73 = call %struct.MVert* %83(%struct.DerivedMesh* %85), !dbg !5282
  %86 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5287
  %dm_mvert = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %86, i32 0, i32 18, !dbg !5288
  store %struct.MVert* %call73, %struct.MVert** %dm_mvert, align 8, !dbg !5289
  %87 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5290
  %dm74 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %87, i32 0, i32 14, !dbg !5291
  %88 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm74, align 8, !dbg !5291
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %88, i32 0, i32 33, !dbg !5292
  %89 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !5292
  %90 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5293
  %dm75 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %90, i32 0, i32 14, !dbg !5294
  %91 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm75, align 8, !dbg !5294
  %call76 = call %struct.MFace* %89(%struct.DerivedMesh* %91), !dbg !5290
  %92 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5295
  %dm_mface = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %92, i32 0, i32 19, !dbg !5296
  store %struct.MFace* %call76, %struct.MFace** %dm_mface, align 8, !dbg !5297
  %93 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5298
  %94 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5299
  %dm_totface77 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %94, i32 0, i32 15, !dbg !5300
  %95 = load i32, i32* %dm_totface77, align 8, !dbg !5300
  %conv78 = sext i32 %95 to i64, !dbg !5299
  %mul79 = mul i64 %conv78, 8, !dbg !5301
  %call80 = call i8* %93(i64 %mul79, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.51, i64 0, i64 0)), !dbg !5298
  %96 = bitcast i8* %call80 to %struct.MTFace**, !dbg !5298
  %97 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5302
  %dm_mtface = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %97, i32 0, i32 20, !dbg !5303
  store %struct.MTFace** %96, %struct.MTFace*** %dm_mtface, align 8, !dbg !5304
  %98 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5305
  %do_face_sel81 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %98, i32 0, i32 60, !dbg !5307
  %99 = load i8, i8* %do_face_sel81, align 8, !dbg !5307
  %tobool82 = icmp ne i8 %99, 0, !dbg !5305
  br i1 %tobool82, label %if.then83, label %if.else97, !dbg !5308

if.then83:                                        ; preds = %if.end62
  %100 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5309
  %dm84 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %100, i32 0, i32 14, !dbg !5311
  %101 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm84, align 8, !dbg !5311
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %101, i32 0, i32 52, !dbg !5312
  %102 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !5312
  %103 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5313
  %dm85 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %103, i32 0, i32 14, !dbg !5314
  %104 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm85, align 8, !dbg !5314
  %call86 = call i8* %102(%struct.DerivedMesh* %104, i32 7), !dbg !5309
  %105 = bitcast i8* %call86 to i32*, !dbg !5309
  store i32* %105, i32** %index_mf_to_mpoly, align 8, !dbg !5315
  %106 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5316
  %dm87 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %106, i32 0, i32 14, !dbg !5317
  %107 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm87, align 8, !dbg !5317
  %getPolyDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %107, i32 0, i32 54, !dbg !5318
  %108 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getPolyDataArray, align 8, !dbg !5318
  %109 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5319
  %dm88 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %109, i32 0, i32 14, !dbg !5320
  %110 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm88, align 8, !dbg !5320
  %call89 = call i8* %108(%struct.DerivedMesh* %110, i32 7), !dbg !5316
  %111 = bitcast i8* %call89 to i32*, !dbg !5316
  store i32* %111, i32** %index_mp_to_orig, align 8, !dbg !5321
  %112 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !5322
  %cmp90 = icmp eq i32* %112, null, !dbg !5324
  br i1 %cmp90, label %if.then92, label %if.else93, !dbg !5325

if.then92:                                        ; preds = %if.then83
  store i32* null, i32** %index_mp_to_orig, align 8, !dbg !5326
  br label %if.end96, !dbg !5328

if.else93:                                        ; preds = %if.then83
  %113 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5329
  %ob94 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %113, i32 0, i32 13, !dbg !5331
  %114 = load %struct.Object*, %struct.Object** %ob94, align 8, !dbg !5331
  %data95 = getelementptr inbounds %struct.Object, %struct.Object* %114, i32 0, i32 19, !dbg !5332
  %115 = load i8*, i8** %data95, align 8, !dbg !5332
  %116 = bitcast i8* %115 to %struct.Mesh*, !dbg !5333
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %116, i32 0, i32 7, !dbg !5334
  %117 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !5334
  store %struct.MPoly* %117, %struct.MPoly** %mpoly_orig, align 8, !dbg !5335
  br label %if.end96

if.end96:                                         ; preds = %if.else93, %if.then92
  br label %if.end98, !dbg !5336

if.else97:                                        ; preds = %if.end62
  store %struct.MPoly* null, %struct.MPoly** %mpoly_orig, align 8, !dbg !5337
  br label %if.end98

if.end98:                                         ; preds = %if.else97, %if.end96
  %118 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5339
  %do_layer_clone = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %118, i32 0, i32 48, !dbg !5341
  %119 = load i8, i8* %do_layer_clone, align 8, !dbg !5341
  %tobool99 = icmp ne i8 %119, 0, !dbg !5339
  br i1 %tobool99, label %if.then100, label %if.end105, !dbg !5342

if.then100:                                       ; preds = %if.end98
  %120 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5343
  %121 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5345
  %dm_totface101 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %121, i32 0, i32 15, !dbg !5346
  %122 = load i32, i32* %dm_totface101, align 8, !dbg !5346
  %conv102 = sext i32 %122 to i64, !dbg !5345
  %mul103 = mul i64 %conv102, 8, !dbg !5347
  %call104 = call i8* %120(i64 %mul103, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.51, i64 0, i64 0)), !dbg !5343
  %123 = bitcast i8* %call104 to %struct.MTFace**, !dbg !5343
  %124 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5348
  %dm_mtface_clone = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %124, i32 0, i32 21, !dbg !5349
  store %struct.MTFace** %123, %struct.MTFace*** %dm_mtface_clone, align 8, !dbg !5350
  br label %if.end105, !dbg !5351

if.end105:                                        ; preds = %if.then100, %if.end98
  %125 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5352
  %do_layer_stencil = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %125, i32 0, i32 49, !dbg !5354
  %126 = load i8, i8* %do_layer_stencil, align 1, !dbg !5354
  %conv106 = zext i8 %126 to i32, !dbg !5352
  %tobool107 = icmp ne i32 %conv106, 0, !dbg !5352
  br i1 %tobool107, label %if.then111, label %lor.lhs.false108, !dbg !5355

lor.lhs.false108:                                 ; preds = %if.end105
  %127 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5356
  %do_stencil_brush = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %127, i32 0, i32 51, !dbg !5357
  %128 = load i8, i8* %do_stencil_brush, align 1, !dbg !5357
  %conv109 = zext i8 %128 to i32, !dbg !5356
  %tobool110 = icmp ne i32 %conv109, 0, !dbg !5356
  br i1 %tobool110, label %if.then111, label %if.end136, !dbg !5358

if.then111:                                       ; preds = %lor.lhs.false108, %if.end105
  call void @llvm.dbg.declare(metadata i32* %layer_num, metadata !5359, metadata !DIExpression()), !dbg !5361
  %129 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5362
  %ob112 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %129, i32 0, i32 13, !dbg !5363
  %130 = load %struct.Object*, %struct.Object** %ob112, align 8, !dbg !5363
  %data113 = getelementptr inbounds %struct.Object, %struct.Object* %130, i32 0, i32 19, !dbg !5364
  %131 = load i8*, i8** %data113, align 8, !dbg !5364
  %132 = bitcast i8* %131 to %struct.Mesh*, !dbg !5365
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %132, i32 0, i32 24, !dbg !5366
  %call114 = call i32 @CustomData_get_stencil_layer(%struct.CustomData* %pdata, i32 15), !dbg !5367
  store i32 %call114, i32* %layer_num, align 4, !dbg !5361
  %133 = load i32, i32* %layer_num, align 4, !dbg !5368
  %cmp115 = icmp ne i32 %133, -1, !dbg !5370
  br i1 %cmp115, label %if.then117, label %if.end121, !dbg !5371

if.then117:                                       ; preds = %if.then111
  %134 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5372
  %dm118 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %134, i32 0, i32 14, !dbg !5373
  %135 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm118, align 8, !dbg !5373
  %faceData119 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %135, i32 0, i32 2, !dbg !5374
  %136 = load i32, i32* %layer_num, align 4, !dbg !5375
  %call120 = call i8* @CustomData_get_layer_n(%struct.CustomData* %faceData119, i32 5, i32 %136), !dbg !5376
  %137 = bitcast i8* %call120 to %struct.MTFace*, !dbg !5376
  %138 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5377
  %dm_mtface_stencil = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %138, i32 0, i32 22, !dbg !5378
  store %struct.MTFace* %137, %struct.MTFace** %dm_mtface_stencil, align 8, !dbg !5379
  br label %if.end121, !dbg !5377

if.end121:                                        ; preds = %if.then117, %if.then111
  %139 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5380
  %dm_mtface_stencil122 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %139, i32 0, i32 22, !dbg !5382
  %140 = load %struct.MTFace*, %struct.MTFace** %dm_mtface_stencil122, align 8, !dbg !5382
  %cmp123 = icmp eq %struct.MTFace* %140, null, !dbg !5383
  br i1 %cmp123, label %if.then125, label %if.end130, !dbg !5384

if.then125:                                       ; preds = %if.end121
  %141 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5385
  %dm126 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %141, i32 0, i32 14, !dbg !5387
  %142 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm126, align 8, !dbg !5387
  %faceData127 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %142, i32 0, i32 2, !dbg !5388
  %call128 = call i8* @CustomData_get_layer(%struct.CustomData* %faceData127, i32 5), !dbg !5389
  %143 = bitcast i8* %call128 to %struct.MTFace*, !dbg !5389
  %144 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5390
  %dm_mtface_stencil129 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %144, i32 0, i32 22, !dbg !5391
  store %struct.MTFace* %143, %struct.MTFace** %dm_mtface_stencil129, align 8, !dbg !5392
  br label %if.end130, !dbg !5393

if.end130:                                        ; preds = %if.then125, %if.end121
  %145 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5394
  %do_stencil_brush131 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %145, i32 0, i32 51, !dbg !5396
  %146 = load i8, i8* %do_stencil_brush131, align 1, !dbg !5396
  %tobool132 = icmp ne i8 %146, 0, !dbg !5394
  br i1 %tobool132, label %if.then133, label %if.end135, !dbg !5397

if.then133:                                       ; preds = %if.end130
  %147 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5398
  %dm_mtface_stencil134 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %147, i32 0, i32 22, !dbg !5399
  %148 = load %struct.MTFace*, %struct.MTFace** %dm_mtface_stencil134, align 8, !dbg !5399
  store %struct.MTFace* %148, %struct.MTFace** %tf_base, align 8, !dbg !5400
  br label %if.end135, !dbg !5401

if.end135:                                        ; preds = %if.then133, %if.end130
  br label %if.end136, !dbg !5402

if.end136:                                        ; preds = %if.end135, %lor.lhs.false108
  %149 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5403
  %do_layer_clone137 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %149, i32 0, i32 48, !dbg !5405
  %150 = load i8, i8* %do_layer_clone137, align 8, !dbg !5405
  %tobool138 = icmp ne i8 %150, 0, !dbg !5403
  br i1 %tobool138, label %if.then139, label %if.end159, !dbg !5406

if.then139:                                       ; preds = %if.end136
  call void @llvm.dbg.declare(metadata i32* %layer_num140, metadata !5407, metadata !DIExpression()), !dbg !5409
  %151 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5410
  %ob141 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %151, i32 0, i32 13, !dbg !5411
  %152 = load %struct.Object*, %struct.Object** %ob141, align 8, !dbg !5411
  %data142 = getelementptr inbounds %struct.Object, %struct.Object* %152, i32 0, i32 19, !dbg !5412
  %153 = load i8*, i8** %data142, align 8, !dbg !5412
  %154 = bitcast i8* %153 to %struct.Mesh*, !dbg !5413
  %pdata143 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %154, i32 0, i32 24, !dbg !5414
  %call144 = call i32 @CustomData_get_clone_layer(%struct.CustomData* %pdata143, i32 15), !dbg !5415
  store i32 %call144, i32* %layer_num140, align 4, !dbg !5409
  %155 = load i32, i32* %layer_num140, align 4, !dbg !5416
  %cmp145 = icmp ne i32 %155, -1, !dbg !5418
  br i1 %cmp145, label %if.then147, label %if.end151, !dbg !5419

if.then147:                                       ; preds = %if.then139
  %156 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5420
  %dm148 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %156, i32 0, i32 14, !dbg !5421
  %157 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm148, align 8, !dbg !5421
  %faceData149 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %157, i32 0, i32 2, !dbg !5422
  %158 = load i32, i32* %layer_num140, align 4, !dbg !5423
  %call150 = call i8* @CustomData_get_layer_n(%struct.CustomData* %faceData149, i32 5, i32 %158), !dbg !5424
  %159 = bitcast i8* %call150 to %struct.MTFace*, !dbg !5424
  store %struct.MTFace* %159, %struct.MTFace** %tf_clone_base, align 8, !dbg !5425
  br label %if.end151, !dbg !5426

if.end151:                                        ; preds = %if.then147, %if.then139
  %160 = load %struct.MTFace*, %struct.MTFace** %tf_clone_base, align 8, !dbg !5427
  %cmp152 = icmp eq %struct.MTFace* %160, null, !dbg !5429
  br i1 %cmp152, label %if.then154, label %if.end158, !dbg !5430

if.then154:                                       ; preds = %if.end151
  %161 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5431
  %dm155 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %161, i32 0, i32 14, !dbg !5433
  %162 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm155, align 8, !dbg !5433
  %faceData156 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %162, i32 0, i32 2, !dbg !5434
  %call157 = call i8* @CustomData_get_layer(%struct.CustomData* %faceData156, i32 5), !dbg !5435
  %163 = bitcast i8* %call157 to %struct.MTFace*, !dbg !5435
  store %struct.MTFace* %163, %struct.MTFace** %tf_clone_base, align 8, !dbg !5436
  br label %if.end158, !dbg !5437

if.end158:                                        ; preds = %if.then154, %if.end151
  br label %if.end159, !dbg !5438

if.end159:                                        ; preds = %if.end158, %if.end136
  %164 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5439
  %dm160 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %164, i32 0, i32 14, !dbg !5441
  %165 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm160, align 8, !dbg !5441
  %type = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %165, i32 0, i32 14, !dbg !5442
  %166 = load i32, i32* %type, align 8, !dbg !5442
  %cmp161 = icmp ne i32 %166, 0, !dbg !5443
  br i1 %cmp161, label %if.then163, label %if.end170, !dbg !5444

if.then163:                                       ; preds = %if.end159
  %167 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !5445
  %168 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5447
  %dm_mvert164 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %168, i32 0, i32 18, !dbg !5448
  %169 = load %struct.MVert*, %struct.MVert** %dm_mvert164, align 8, !dbg !5448
  %170 = bitcast %struct.MVert* %169 to i8*, !dbg !5447
  %call165 = call i8* %167(i8* %170), !dbg !5445
  %171 = bitcast i8* %call165 to %struct.MVert*, !dbg !5445
  %172 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5449
  %dm_mvert166 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %172, i32 0, i32 18, !dbg !5450
  store %struct.MVert* %171, %struct.MVert** %dm_mvert166, align 8, !dbg !5451
  %173 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !5452
  %174 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5453
  %dm_mface167 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %174, i32 0, i32 19, !dbg !5454
  %175 = load %struct.MFace*, %struct.MFace** %dm_mface167, align 8, !dbg !5454
  %176 = bitcast %struct.MFace* %175 to i8*, !dbg !5453
  %call168 = call i8* %173(i8* %176), !dbg !5452
  %177 = bitcast i8* %call168 to %struct.MFace*, !dbg !5452
  %178 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5455
  %dm_mface169 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %178, i32 0, i32 19, !dbg !5456
  store %struct.MFace* %177, %struct.MFace** %dm_mface169, align 8, !dbg !5457
  br label %if.end170, !dbg !5458

if.end170:                                        ; preds = %if.then163, %if.end159
  %179 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5459
  %viewDir = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %179, i32 0, i32 68, !dbg !5460
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %viewDir, i64 0, i64 0, !dbg !5459
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !5461
  %180 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5462
  %viewDir171 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %180, i32 0, i32 68, !dbg !5463
  %arrayidx172 = getelementptr inbounds [3 x float], [3 x float]* %viewDir171, i64 0, i64 1, !dbg !5462
  store float 0.000000e+00, float* %arrayidx172, align 4, !dbg !5464
  %181 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5465
  %viewDir173 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %181, i32 0, i32 68, !dbg !5466
  %arrayidx174 = getelementptr inbounds [3 x float], [3 x float]* %viewDir173, i64 0, i64 2, !dbg !5465
  store float 1.000000e+00, float* %arrayidx174, align 4, !dbg !5467
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %viewmat, metadata !5468, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %viewinv, metadata !5471, metadata !DIExpression()), !dbg !5472
  %182 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5473
  %ob175 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %182, i32 0, i32 13, !dbg !5474
  %183 = load %struct.Object*, %struct.Object** %ob175, align 8, !dbg !5474
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %183, i32 0, i32 50, !dbg !5475
  %arraydecay176 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !5473
  %184 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5476
  %ob177 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %184, i32 0, i32 13, !dbg !5477
  %185 = load %struct.Object*, %struct.Object** %ob177, align 8, !dbg !5477
  %obmat178 = getelementptr inbounds %struct.Object, %struct.Object* %185, i32 0, i32 47, !dbg !5478
  %arraydecay179 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat178, i64 0, i64 0, !dbg !5476
  %call180 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay176, [4 x float]* %arraydecay179), !dbg !5479
  %186 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5480
  %source181 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %186, i32 0, i32 4, !dbg !5482
  %187 = load i32, i32* %source181, align 8, !dbg !5482
  %cmp182 = icmp eq i32 %187, 1, !dbg !5483
  br i1 %cmp182, label %if.then184, label %if.else203, !dbg !5484

if.then184:                                       ; preds = %if.end170
  %188 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5485
  %ar = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %188, i32 0, i32 2, !dbg !5487
  %189 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5487
  %winx = getelementptr inbounds %struct.ARegion, %struct.ARegion* %189, i32 0, i32 5, !dbg !5488
  %190 = load i16, i16* %winx, align 8, !dbg !5488
  %conv185 = sext i16 %190 to i32, !dbg !5485
  %191 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5489
  %winx186 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %191, i32 0, i32 46, !dbg !5490
  store i32 %conv185, i32* %winx186, align 8, !dbg !5491
  %192 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5492
  %ar187 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %192, i32 0, i32 2, !dbg !5493
  %193 = load %struct.ARegion*, %struct.ARegion** %ar187, align 8, !dbg !5493
  %winy = getelementptr inbounds %struct.ARegion, %struct.ARegion* %193, i32 0, i32 6, !dbg !5494
  %194 = load i16, i16* %winy, align 2, !dbg !5494
  %conv188 = sext i16 %194 to i32, !dbg !5492
  %195 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5495
  %winy189 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %195, i32 0, i32 47, !dbg !5496
  store i32 %conv188, i32* %winy189, align 4, !dbg !5497
  %arraydecay190 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !5498
  %196 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5499
  %rv3d191 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %196, i32 0, i32 1, !dbg !5500
  %197 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d191, align 8, !dbg !5500
  %viewmat192 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %197, i32 0, i32 1, !dbg !5501
  %arraydecay193 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat192, i64 0, i64 0, !dbg !5499
  call void @copy_m4_m4([4 x float]* %arraydecay190, [4 x float]* %arraydecay193), !dbg !5502
  %arraydecay194 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 0, !dbg !5503
  %198 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5504
  %rv3d195 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %198, i32 0, i32 1, !dbg !5505
  %199 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d195, align 8, !dbg !5505
  %viewinv196 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %199, i32 0, i32 2, !dbg !5506
  %arraydecay197 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv196, i64 0, i64 0, !dbg !5504
  call void @copy_m4_m4([4 x float]* %arraydecay194, [4 x float]* %arraydecay197), !dbg !5507
  %200 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5508
  %rv3d198 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %200, i32 0, i32 1, !dbg !5509
  %201 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d198, align 8, !dbg !5509
  %202 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5510
  %ob199 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %202, i32 0, i32 13, !dbg !5511
  %203 = load %struct.Object*, %struct.Object** %ob199, align 8, !dbg !5511
  %204 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5512
  %projectMat = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %204, i32 0, i32 67, !dbg !5513
  %arraydecay200 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projectMat, i64 0, i64 0, !dbg !5512
  call void @ED_view3d_ob_project_mat_get(%struct.RegionView3D* %201, %struct.Object* %203, [4 x float]* %arraydecay200), !dbg !5514
  %205 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5515
  %v3d = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %205, i32 0, i32 0, !dbg !5516
  %206 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !5516
  %207 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5517
  %rv3d201 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %207, i32 0, i32 1, !dbg !5518
  %208 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d201, align 8, !dbg !5518
  %209 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5519
  %clipsta = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %209, i32 0, i32 70, !dbg !5520
  %210 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5521
  %clipend = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %210, i32 0, i32 71, !dbg !5522
  %call202 = call zeroext i8 @ED_view3d_clip_range_get(%struct.View3D* %206, %struct.RegionView3D* %208, float* %clipsta, float* %clipend, i8 zeroext 1), !dbg !5523
  %211 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5524
  %is_ortho = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %211, i32 0, i32 61, !dbg !5525
  store i8 %call202, i8* %is_ortho, align 1, !dbg !5526
  br label %if.end264, !dbg !5527

if.else203:                                       ; preds = %if.end170
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %winmat, metadata !5528, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %vmat, metadata !5531, metadata !DIExpression()), !dbg !5532
  %212 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5533
  %reproject_ibuf = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %212, i32 0, i32 73, !dbg !5534
  %213 = load %struct.ImBuf*, %struct.ImBuf** %reproject_ibuf, align 8, !dbg !5534
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %213, i32 0, i32 2, !dbg !5535
  %214 = load i32, i32* %x, align 8, !dbg !5535
  %215 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5536
  %winx204 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %215, i32 0, i32 46, !dbg !5537
  store i32 %214, i32* %winx204, align 8, !dbg !5538
  %216 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5539
  %reproject_ibuf205 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %216, i32 0, i32 73, !dbg !5540
  %217 = load %struct.ImBuf*, %struct.ImBuf** %reproject_ibuf205, align 8, !dbg !5540
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %217, i32 0, i32 3, !dbg !5541
  %218 = load i32, i32* %y, align 4, !dbg !5541
  %219 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5542
  %winy206 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %219, i32 0, i32 47, !dbg !5543
  store i32 %218, i32* %winy206, align 4, !dbg !5544
  %220 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5545
  %source207 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %220, i32 0, i32 4, !dbg !5547
  %221 = load i32, i32* %source207, align 8, !dbg !5547
  %cmp208 = icmp eq i32 %221, 3, !dbg !5548
  br i1 %cmp208, label %if.then210, label %if.else229, !dbg !5549

if.then210:                                       ; preds = %if.else203
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idgroup, metadata !5550, metadata !DIExpression()), !dbg !5552
  %222 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5553
  %reproject_image = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %222, i32 0, i32 72, !dbg !5554
  %223 = load %struct.Image*, %struct.Image** %reproject_image, align 8, !dbg !5554
  %id = getelementptr inbounds %struct.Image, %struct.Image* %223, i32 0, i32 0, !dbg !5555
  %call211 = call %struct.IDProperty* @IDP_GetProperties(%struct.ID* %id, i8 zeroext 0), !dbg !5556
  store %struct.IDProperty* %call211, %struct.IDProperty** %idgroup, align 8, !dbg !5552
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %view_data, metadata !5557, metadata !DIExpression()), !dbg !5558
  %224 = load %struct.IDProperty*, %struct.IDProperty** %idgroup, align 8, !dbg !5559
  %call212 = call %struct.IDProperty* @IDP_GetPropertyFromGroup(%struct.IDProperty* %224, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i64 0, i64 0)), !dbg !5560
  store %struct.IDProperty* %call212, %struct.IDProperty** %view_data, align 8, !dbg !5558
  call void @llvm.dbg.declare(metadata float** %array, metadata !5561, metadata !DIExpression()), !dbg !5562
  %225 = load %struct.IDProperty*, %struct.IDProperty** %view_data, align 8, !dbg !5563
  %data213 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %225, i32 0, i32 7, !dbg !5563
  %pointer = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data213, i32 0, i32 0, !dbg !5563
  %226 = load i8*, i8** %pointer, align 8, !dbg !5563
  %227 = bitcast i8* %226 to float*, !dbg !5564
  store float* %227, float** %array, align 8, !dbg !5562
  %arraydecay214 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !5565
  %228 = bitcast [4 x float]* %arraydecay214 to i8*, !dbg !5565
  %229 = load float*, float** %array, align 8, !dbg !5566
  %230 = bitcast float* %229 to i8*, !dbg !5565
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %228, i8* align 4 %230, i64 64, i1 false), !dbg !5565
  %231 = load float*, float** %array, align 8, !dbg !5567
  %add.ptr = getelementptr inbounds float, float* %231, i64 16, !dbg !5567
  store float* %add.ptr, float** %array, align 8, !dbg !5567
  %arraydecay215 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !5568
  %232 = bitcast [4 x float]* %arraydecay215 to i8*, !dbg !5568
  %233 = load float*, float** %array, align 8, !dbg !5569
  %234 = bitcast float* %233 to i8*, !dbg !5568
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %232, i8* align 4 %234, i64 64, i1 false), !dbg !5568
  %235 = load float*, float** %array, align 8, !dbg !5570
  %add.ptr216 = getelementptr inbounds float, float* %235, i64 16, !dbg !5570
  store float* %add.ptr216, float** %array, align 8, !dbg !5570
  %236 = load float*, float** %array, align 8, !dbg !5571
  %arrayidx217 = getelementptr inbounds float, float* %236, i64 0, !dbg !5571
  %237 = load float, float* %arrayidx217, align 4, !dbg !5571
  %238 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5572
  %clipsta218 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %238, i32 0, i32 70, !dbg !5573
  store float %237, float* %clipsta218, align 4, !dbg !5574
  %239 = load float*, float** %array, align 8, !dbg !5575
  %arrayidx219 = getelementptr inbounds float, float* %239, i64 1, !dbg !5575
  %240 = load float, float* %arrayidx219, align 4, !dbg !5575
  %241 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5576
  %clipend220 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %241, i32 0, i32 71, !dbg !5577
  store float %240, float* %clipend220, align 8, !dbg !5578
  %242 = load float*, float** %array, align 8, !dbg !5579
  %arrayidx221 = getelementptr inbounds float, float* %242, i64 2, !dbg !5579
  %243 = load float, float* %arrayidx221, align 4, !dbg !5579
  %tobool222 = fcmp une float %243, 0.000000e+00, !dbg !5579
  %244 = zext i1 %tobool222 to i64, !dbg !5579
  %cond223 = select i1 %tobool222, i32 1, i32 0, !dbg !5579
  %conv224 = trunc i32 %cond223 to i8, !dbg !5579
  %245 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5580
  %is_ortho225 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %245, i32 0, i32 61, !dbg !5581
  store i8 %conv224, i8* %is_ortho225, align 1, !dbg !5582
  %arraydecay226 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 0, !dbg !5583
  %arraydecay227 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !5584
  %call228 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay226, [4 x float]* %arraydecay227), !dbg !5585
  br label %if.end254, !dbg !5586

if.else229:                                       ; preds = %if.else203
  %246 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5587
  %source230 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %246, i32 0, i32 4, !dbg !5589
  %247 = load i32, i32* %source230, align 8, !dbg !5589
  %cmp231 = icmp eq i32 %247, 2, !dbg !5590
  br i1 %cmp231, label %if.then233, label %if.end253, !dbg !5591

if.then233:                                       ; preds = %if.else229
  call void @llvm.dbg.declare(metadata %struct.Object** %cam_ob, metadata !5592, metadata !DIExpression()), !dbg !5594
  %248 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5595
  %scene234 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %248, i32 0, i32 3, !dbg !5596
  %249 = load %struct.Scene*, %struct.Scene** %scene234, align 8, !dbg !5596
  %camera = getelementptr inbounds %struct.Scene, %struct.Scene* %249, i32 0, i32 2, !dbg !5597
  %250 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !5597
  store %struct.Object* %250, %struct.Object** %cam_ob, align 8, !dbg !5594
  call void @llvm.dbg.declare(metadata %struct.CameraParams* %params, metadata !5598, metadata !DIExpression()), !dbg !5624
  %arraydecay235 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 0, !dbg !5625
  %251 = load %struct.Object*, %struct.Object** %cam_ob, align 8, !dbg !5626
  %obmat236 = getelementptr inbounds %struct.Object, %struct.Object* %251, i32 0, i32 47, !dbg !5627
  %arraydecay237 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat236, i64 0, i64 0, !dbg !5626
  call void @copy_m4_m4([4 x float]* %arraydecay235, [4 x float]* %arraydecay237), !dbg !5628
  %arraydecay238 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 0, !dbg !5629
  call void @normalize_m4([4 x float]* %arraydecay238), !dbg !5630
  %arraydecay239 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !5631
  %arraydecay240 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 0, !dbg !5632
  %call241 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay239, [4 x float]* %arraydecay240), !dbg !5633
  call void @BKE_camera_params_init(%struct.CameraParams* %params), !dbg !5634
  %252 = load %struct.Object*, %struct.Object** %cam_ob, align 8, !dbg !5635
  call void @BKE_camera_params_from_object(%struct.CameraParams* %params, %struct.Object* %252), !dbg !5636
  %253 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5637
  %winx242 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %253, i32 0, i32 46, !dbg !5638
  %254 = load i32, i32* %winx242, align 8, !dbg !5638
  %255 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5639
  %winy243 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %255, i32 0, i32 47, !dbg !5640
  %256 = load i32, i32* %winy243, align 4, !dbg !5640
  call void @BKE_camera_params_compute_viewplane(%struct.CameraParams* %params, i32 %254, i32 %256, float 1.000000e+00, float 1.000000e+00), !dbg !5641
  call void @BKE_camera_params_compute_matrix(%struct.CameraParams* %params), !dbg !5642
  %arraydecay244 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !5643
  %winmat245 = getelementptr inbounds %struct.CameraParams, %struct.CameraParams* %params, i32 0, i32 20, !dbg !5644
  %arraydecay246 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat245, i64 0, i64 0, !dbg !5645
  call void @copy_m4_m4([4 x float]* %arraydecay244, [4 x float]* %arraydecay246), !dbg !5646
  %clipsta247 = getelementptr inbounds %struct.CameraParams, %struct.CameraParams* %params, i32 0, i32 11, !dbg !5647
  %257 = load float, float* %clipsta247, align 4, !dbg !5647
  %258 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5648
  %clipsta248 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %258, i32 0, i32 70, !dbg !5649
  store float %257, float* %clipsta248, align 4, !dbg !5650
  %clipend249 = getelementptr inbounds %struct.CameraParams, %struct.CameraParams* %params, i32 0, i32 12, !dbg !5651
  %259 = load float, float* %clipend249, align 4, !dbg !5651
  %260 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5652
  %clipend250 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %260, i32 0, i32 71, !dbg !5653
  store float %259, float* %clipend250, align 8, !dbg !5654
  %is_ortho251 = getelementptr inbounds %struct.CameraParams, %struct.CameraParams* %params, i32 0, i32 0, !dbg !5655
  %261 = load i8, i8* %is_ortho251, align 4, !dbg !5655
  %262 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5656
  %is_ortho252 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %262, i32 0, i32 61, !dbg !5657
  store i8 %261, i8* %is_ortho252, align 1, !dbg !5658
  br label %if.end253, !dbg !5659

if.end253:                                        ; preds = %if.then233, %if.else229
  br label %if.end254

if.end254:                                        ; preds = %if.end253, %if.then210
  %arraydecay255 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %vmat, i64 0, i64 0, !dbg !5660
  %arraydecay256 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !5661
  %263 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5662
  %ob257 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %263, i32 0, i32 13, !dbg !5663
  %264 = load %struct.Object*, %struct.Object** %ob257, align 8, !dbg !5663
  %obmat258 = getelementptr inbounds %struct.Object, %struct.Object* %264, i32 0, i32 47, !dbg !5664
  %arraydecay259 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat258, i64 0, i64 0, !dbg !5662
  call void @mul_m4_m4m4([4 x float]* %arraydecay255, [4 x float]* %arraydecay256, [4 x float]* %arraydecay259), !dbg !5665
  %265 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5666
  %projectMat260 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %265, i32 0, i32 67, !dbg !5667
  %arraydecay261 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projectMat260, i64 0, i64 0, !dbg !5666
  %arraydecay262 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !5668
  %arraydecay263 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %vmat, i64 0, i64 0, !dbg !5669
  call void @mul_m4_m4m4([4 x float]* %arraydecay261, [4 x float]* %arraydecay262, [4 x float]* %arraydecay263), !dbg !5670
  br label %if.end264

if.end264:                                        ; preds = %if.end254, %if.then184
  %266 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5671
  %ob265 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %266, i32 0, i32 13, !dbg !5672
  %267 = load %struct.Object*, %struct.Object** %ob265, align 8, !dbg !5672
  %imat266 = getelementptr inbounds %struct.Object, %struct.Object* %267, i32 0, i32 50, !dbg !5673
  %arraydecay267 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat266, i64 0, i64 0, !dbg !5671
  %268 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5674
  %ob268 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %268, i32 0, i32 13, !dbg !5675
  %269 = load %struct.Object*, %struct.Object** %ob268, align 8, !dbg !5675
  %obmat269 = getelementptr inbounds %struct.Object, %struct.Object* %269, i32 0, i32 47, !dbg !5676
  %arraydecay270 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat269, i64 0, i64 0, !dbg !5674
  %call271 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay267, [4 x float]* %arraydecay270), !dbg !5677
  %arraydecay272 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !5678
  %arraydecay273 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 0, !dbg !5679
  call void @copy_m3_m4([3 x float]* %arraydecay272, [4 x float]* %arraydecay273), !dbg !5680
  %arraydecay274 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !5681
  %270 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5682
  %viewDir275 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %270, i32 0, i32 68, !dbg !5683
  %arraydecay276 = getelementptr inbounds [3 x float], [3 x float]* %viewDir275, i64 0, i64 0, !dbg !5682
  call void @mul_m3_v3([3 x float]* %arraydecay274, float* %arraydecay276), !dbg !5684
  %arraydecay277 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !5685
  %271 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5686
  %ob278 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %271, i32 0, i32 13, !dbg !5687
  %272 = load %struct.Object*, %struct.Object** %ob278, align 8, !dbg !5687
  %imat279 = getelementptr inbounds %struct.Object, %struct.Object* %272, i32 0, i32 50, !dbg !5688
  %arraydecay280 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat279, i64 0, i64 0, !dbg !5686
  call void @copy_m3_m4([3 x float]* %arraydecay277, [4 x float]* %arraydecay280), !dbg !5689
  %arraydecay281 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !5690
  %273 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5691
  %viewDir282 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %273, i32 0, i32 68, !dbg !5692
  %arraydecay283 = getelementptr inbounds [3 x float], [3 x float]* %viewDir282, i64 0, i64 0, !dbg !5691
  call void @mul_m3_v3([3 x float]* %arraydecay281, float* %arraydecay283), !dbg !5693
  %274 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5694
  %viewDir284 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %274, i32 0, i32 68, !dbg !5695
  %arraydecay285 = getelementptr inbounds [3 x float], [3 x float]* %viewDir284, i64 0, i64 0, !dbg !5694
  %call286 = call float @normalize_v3(float* %arraydecay285), !dbg !5696
  %275 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5697
  %viewPos = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %275, i32 0, i32 69, !dbg !5698
  %arraydecay287 = getelementptr inbounds [3 x float], [3 x float]* %viewPos, i64 0, i64 0, !dbg !5697
  %arrayidx288 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 3, !dbg !5699
  %arraydecay289 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx288, i64 0, i64 0, !dbg !5699
  call void @copy_v3_v3(float* %arraydecay287, float* %arraydecay289), !dbg !5700
  %arraydecay290 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !5701
  %276 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5702
  %ob291 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %276, i32 0, i32 13, !dbg !5703
  %277 = load %struct.Object*, %struct.Object** %ob291, align 8, !dbg !5703
  %imat292 = getelementptr inbounds %struct.Object, %struct.Object* %277, i32 0, i32 50, !dbg !5704
  %arraydecay293 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat292, i64 0, i64 0, !dbg !5702
  call void @copy_m3_m4([3 x float]* %arraydecay290, [4 x float]* %arraydecay293), !dbg !5705
  %arraydecay294 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !5706
  %278 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5707
  %viewPos295 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %278, i32 0, i32 69, !dbg !5708
  %arraydecay296 = getelementptr inbounds [3 x float], [3 x float]* %viewPos295, i64 0, i64 0, !dbg !5707
  call void @mul_m3_v3([3 x float]* %arraydecay294, float* %arraydecay296), !dbg !5709
  %279 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5710
  %viewPos297 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %279, i32 0, i32 69, !dbg !5711
  %arraydecay298 = getelementptr inbounds [3 x float], [3 x float]* %viewPos297, i64 0, i64 0, !dbg !5710
  %280 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5712
  %ob299 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %280, i32 0, i32 13, !dbg !5713
  %281 = load %struct.Object*, %struct.Object** %ob299, align 8, !dbg !5713
  %imat300 = getelementptr inbounds %struct.Object, %struct.Object* %281, i32 0, i32 50, !dbg !5714
  %arrayidx301 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat300, i64 0, i64 3, !dbg !5712
  %arraydecay302 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx301, i64 0, i64 0, !dbg !5712
  call void @add_v3_v3(float* %arraydecay298, float* %arraydecay302), !dbg !5715
  %282 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5716
  %screenMin = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %282, i32 0, i32 42, !dbg !5716
  %arrayidx303 = getelementptr inbounds [2 x float], [2 x float]* %screenMin, i64 0, i64 1, !dbg !5716
  store float 0x46293E5940000000, float* %arrayidx303, align 4, !dbg !5716
  %283 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5716
  %screenMin304 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %283, i32 0, i32 42, !dbg !5716
  %arrayidx305 = getelementptr inbounds [2 x float], [2 x float]* %screenMin304, i64 0, i64 0, !dbg !5716
  store float 0x46293E5940000000, float* %arrayidx305, align 8, !dbg !5716
  %284 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5716
  %screenMax = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %284, i32 0, i32 43, !dbg !5716
  %arrayidx306 = getelementptr inbounds [2 x float], [2 x float]* %screenMax, i64 0, i64 1, !dbg !5716
  store float 0xC6293E5940000000, float* %arrayidx306, align 4, !dbg !5716
  %285 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5716
  %screenMax307 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %285, i32 0, i32 43, !dbg !5716
  %arrayidx308 = getelementptr inbounds [2 x float], [2 x float]* %screenMax307, i64 0, i64 0, !dbg !5716
  store float 0xC6293E5940000000, float* %arrayidx308, align 8, !dbg !5716
  %286 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5718
  %287 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5719
  %dm_totvert309 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %287, i32 0, i32 16, !dbg !5720
  %288 = load i32, i32* %dm_totvert309, align 4, !dbg !5720
  %conv310 = sext i32 %288 to i64, !dbg !5719
  %mul311 = mul i64 4, %conv310, !dbg !5721
  %mul312 = mul i64 %mul311, 4, !dbg !5722
  %call313 = call i8* %286(i64 %mul312, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.53, i64 0, i64 0)), !dbg !5718
  %289 = bitcast i8* %call313 to [4 x float]*, !dbg !5718
  %290 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5723
  %screenCoords = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %290, i32 0, i32 41, !dbg !5724
  store [4 x float]* %289, [4 x float]** %screenCoords, align 8, !dbg !5725
  %291 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5726
  %screenCoords314 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %291, i32 0, i32 41, !dbg !5727
  %292 = load [4 x float]*, [4 x float]** %screenCoords314, align 8, !dbg !5727
  %arraydecay315 = getelementptr inbounds [4 x float], [4 x float]* %292, i64 0, i64 0, !dbg !5728
  store float* %arraydecay315, float** %projScreenCo, align 8, !dbg !5729
  %293 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5730
  %is_ortho316 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %293, i32 0, i32 61, !dbg !5732
  %294 = load i8, i8* %is_ortho316, align 1, !dbg !5732
  %tobool317 = icmp ne i8 %294, 0, !dbg !5730
  br i1 %tobool317, label %if.then318, label %if.else350, !dbg !5733

if.then318:                                       ; preds = %if.end264
  store i32 0, i32* %a, align 4, !dbg !5734
  %295 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5737
  %dm_mvert319 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %295, i32 0, i32 18, !dbg !5738
  %296 = load %struct.MVert*, %struct.MVert** %dm_mvert319, align 8, !dbg !5738
  store %struct.MVert* %296, %struct.MVert** %mv, align 8, !dbg !5739
  br label %for.cond, !dbg !5740

for.cond:                                         ; preds = %for.inc, %if.then318
  %297 = load i32, i32* %a, align 4, !dbg !5741
  %298 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5743
  %dm_totvert320 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %298, i32 0, i32 16, !dbg !5744
  %299 = load i32, i32* %dm_totvert320, align 4, !dbg !5744
  %cmp321 = icmp slt i32 %297, %299, !dbg !5745
  br i1 %cmp321, label %for.body, label %for.end, !dbg !5746

for.body:                                         ; preds = %for.cond
  %300 = load float*, float** %projScreenCo, align 8, !dbg !5747
  %301 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5749
  %projectMat323 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %301, i32 0, i32 67, !dbg !5750
  %arraydecay324 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projectMat323, i64 0, i64 0, !dbg !5749
  %302 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !5751
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %302, i32 0, i32 0, !dbg !5752
  %arraydecay325 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5751
  call void @mul_v3_m4v3(float* %300, [4 x float]* %arraydecay324, float* %arraydecay325), !dbg !5753
  %303 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5754
  %winx326 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %303, i32 0, i32 46, !dbg !5755
  %304 = load i32, i32* %winx326, align 8, !dbg !5755
  %conv327 = sitofp i32 %304 to float, !dbg !5754
  %mul328 = fmul float %conv327, 5.000000e-01, !dbg !5756
  %305 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5757
  %winx329 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %305, i32 0, i32 46, !dbg !5758
  %306 = load i32, i32* %winx329, align 8, !dbg !5758
  %conv330 = sitofp i32 %306 to float, !dbg !5757
  %mul331 = fmul float %conv330, 5.000000e-01, !dbg !5759
  %307 = load float*, float** %projScreenCo, align 8, !dbg !5760
  %arrayidx332 = getelementptr inbounds float, float* %307, i64 0, !dbg !5760
  %308 = load float, float* %arrayidx332, align 4, !dbg !5760
  %mul333 = fmul float %mul331, %308, !dbg !5761
  %add = fadd float %mul328, %mul333, !dbg !5762
  %309 = load float*, float** %projScreenCo, align 8, !dbg !5763
  %arrayidx334 = getelementptr inbounds float, float* %309, i64 0, !dbg !5763
  store float %add, float* %arrayidx334, align 4, !dbg !5764
  %310 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5765
  %winy335 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %310, i32 0, i32 47, !dbg !5766
  %311 = load i32, i32* %winy335, align 4, !dbg !5766
  %conv336 = sitofp i32 %311 to float, !dbg !5765
  %mul337 = fmul float %conv336, 5.000000e-01, !dbg !5767
  %312 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5768
  %winy338 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %312, i32 0, i32 47, !dbg !5769
  %313 = load i32, i32* %winy338, align 4, !dbg !5769
  %conv339 = sitofp i32 %313 to float, !dbg !5768
  %mul340 = fmul float %conv339, 5.000000e-01, !dbg !5770
  %314 = load float*, float** %projScreenCo, align 8, !dbg !5771
  %arrayidx341 = getelementptr inbounds float, float* %314, i64 1, !dbg !5771
  %315 = load float, float* %arrayidx341, align 4, !dbg !5771
  %mul342 = fmul float %mul340, %315, !dbg !5772
  %add343 = fadd float %mul337, %mul342, !dbg !5773
  %316 = load float*, float** %projScreenCo, align 8, !dbg !5774
  %arrayidx344 = getelementptr inbounds float, float* %316, i64 1, !dbg !5774
  store float %add343, float* %arrayidx344, align 4, !dbg !5775
  %317 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5776
  %screenMin345 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %317, i32 0, i32 42, !dbg !5777
  %arraydecay346 = getelementptr inbounds [2 x float], [2 x float]* %screenMin345, i64 0, i64 0, !dbg !5776
  %318 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5778
  %screenMax347 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %318, i32 0, i32 43, !dbg !5779
  %arraydecay348 = getelementptr inbounds [2 x float], [2 x float]* %screenMax347, i64 0, i64 0, !dbg !5778
  %319 = load float*, float** %projScreenCo, align 8, !dbg !5780
  call void @minmax_v2v2_v2(float* %arraydecay346, float* %arraydecay348, float* %319), !dbg !5781
  br label %for.inc, !dbg !5782

for.inc:                                          ; preds = %for.body
  %320 = load i32, i32* %a, align 4, !dbg !5783
  %inc = add nsw i32 %320, 1, !dbg !5783
  store i32 %inc, i32* %a, align 4, !dbg !5783
  %321 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !5784
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %321, i32 1, !dbg !5784
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mv, align 8, !dbg !5784
  %322 = load float*, float** %projScreenCo, align 8, !dbg !5785
  %add.ptr349 = getelementptr inbounds float, float* %322, i64 4, !dbg !5785
  store float* %add.ptr349, float** %projScreenCo, align 8, !dbg !5785
  br label %for.cond, !dbg !5786, !llvm.loop !5787

for.end:                                          ; preds = %for.cond
  br label %if.end406, !dbg !5789

if.else350:                                       ; preds = %if.end264
  store i32 0, i32* %a, align 4, !dbg !5790
  %323 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5793
  %dm_mvert351 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %323, i32 0, i32 18, !dbg !5794
  %324 = load %struct.MVert*, %struct.MVert** %dm_mvert351, align 8, !dbg !5794
  store %struct.MVert* %324, %struct.MVert** %mv, align 8, !dbg !5795
  br label %for.cond352, !dbg !5796

for.cond352:                                      ; preds = %for.inc401, %if.else350
  %325 = load i32, i32* %a, align 4, !dbg !5797
  %326 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5799
  %dm_totvert353 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %326, i32 0, i32 16, !dbg !5800
  %327 = load i32, i32* %dm_totvert353, align 4, !dbg !5800
  %cmp354 = icmp slt i32 %325, %327, !dbg !5801
  br i1 %cmp354, label %for.body356, label %for.end405, !dbg !5802

for.body356:                                      ; preds = %for.cond352
  %328 = load float*, float** %projScreenCo, align 8, !dbg !5803
  %329 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !5805
  %co357 = getelementptr inbounds %struct.MVert, %struct.MVert* %329, i32 0, i32 0, !dbg !5806
  %arraydecay358 = getelementptr inbounds [3 x float], [3 x float]* %co357, i64 0, i64 0, !dbg !5805
  call void @copy_v3_v3(float* %328, float* %arraydecay358), !dbg !5807
  %330 = load float*, float** %projScreenCo, align 8, !dbg !5808
  %arrayidx359 = getelementptr inbounds float, float* %330, i64 3, !dbg !5808
  store float 1.000000e+00, float* %arrayidx359, align 4, !dbg !5809
  %331 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5810
  %projectMat360 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %331, i32 0, i32 67, !dbg !5811
  %arraydecay361 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projectMat360, i64 0, i64 0, !dbg !5810
  %332 = load float*, float** %projScreenCo, align 8, !dbg !5812
  call void @mul_m4_v4([4 x float]* %arraydecay361, float* %332), !dbg !5813
  %333 = load float*, float** %projScreenCo, align 8, !dbg !5814
  %arrayidx362 = getelementptr inbounds float, float* %333, i64 3, !dbg !5814
  %334 = load float, float* %arrayidx362, align 4, !dbg !5814
  %335 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5816
  %clipsta363 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %335, i32 0, i32 70, !dbg !5817
  %336 = load float, float* %clipsta363, align 4, !dbg !5817
  %cmp364 = fcmp ogt float %334, %336, !dbg !5818
  br i1 %cmp364, label %if.then366, label %if.else398, !dbg !5819

if.then366:                                       ; preds = %for.body356
  %337 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5820
  %winx367 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %337, i32 0, i32 46, !dbg !5822
  %338 = load i32, i32* %winx367, align 8, !dbg !5822
  %conv368 = sitofp i32 %338 to float, !dbg !5820
  %mul369 = fmul float %conv368, 5.000000e-01, !dbg !5823
  %339 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5824
  %winx370 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %339, i32 0, i32 46, !dbg !5825
  %340 = load i32, i32* %winx370, align 8, !dbg !5825
  %conv371 = sitofp i32 %340 to float, !dbg !5824
  %mul372 = fmul float %conv371, 5.000000e-01, !dbg !5826
  %341 = load float*, float** %projScreenCo, align 8, !dbg !5827
  %arrayidx373 = getelementptr inbounds float, float* %341, i64 0, !dbg !5827
  %342 = load float, float* %arrayidx373, align 4, !dbg !5827
  %mul374 = fmul float %mul372, %342, !dbg !5828
  %343 = load float*, float** %projScreenCo, align 8, !dbg !5829
  %arrayidx375 = getelementptr inbounds float, float* %343, i64 3, !dbg !5829
  %344 = load float, float* %arrayidx375, align 4, !dbg !5829
  %div = fdiv float %mul374, %344, !dbg !5830
  %add376 = fadd float %mul369, %div, !dbg !5831
  %345 = load float*, float** %projScreenCo, align 8, !dbg !5832
  %arrayidx377 = getelementptr inbounds float, float* %345, i64 0, !dbg !5832
  store float %add376, float* %arrayidx377, align 4, !dbg !5833
  %346 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5834
  %winy378 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %346, i32 0, i32 47, !dbg !5835
  %347 = load i32, i32* %winy378, align 4, !dbg !5835
  %conv379 = sitofp i32 %347 to float, !dbg !5834
  %mul380 = fmul float %conv379, 5.000000e-01, !dbg !5836
  %348 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5837
  %winy381 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %348, i32 0, i32 47, !dbg !5838
  %349 = load i32, i32* %winy381, align 4, !dbg !5838
  %conv382 = sitofp i32 %349 to float, !dbg !5837
  %mul383 = fmul float %conv382, 5.000000e-01, !dbg !5839
  %350 = load float*, float** %projScreenCo, align 8, !dbg !5840
  %arrayidx384 = getelementptr inbounds float, float* %350, i64 1, !dbg !5840
  %351 = load float, float* %arrayidx384, align 4, !dbg !5840
  %mul385 = fmul float %mul383, %351, !dbg !5841
  %352 = load float*, float** %projScreenCo, align 8, !dbg !5842
  %arrayidx386 = getelementptr inbounds float, float* %352, i64 3, !dbg !5842
  %353 = load float, float* %arrayidx386, align 4, !dbg !5842
  %div387 = fdiv float %mul385, %353, !dbg !5843
  %add388 = fadd float %mul380, %div387, !dbg !5844
  %354 = load float*, float** %projScreenCo, align 8, !dbg !5845
  %arrayidx389 = getelementptr inbounds float, float* %354, i64 1, !dbg !5845
  store float %add388, float* %arrayidx389, align 4, !dbg !5846
  %355 = load float*, float** %projScreenCo, align 8, !dbg !5847
  %arrayidx390 = getelementptr inbounds float, float* %355, i64 2, !dbg !5847
  %356 = load float, float* %arrayidx390, align 4, !dbg !5847
  %357 = load float*, float** %projScreenCo, align 8, !dbg !5848
  %arrayidx391 = getelementptr inbounds float, float* %357, i64 3, !dbg !5848
  %358 = load float, float* %arrayidx391, align 4, !dbg !5848
  %div392 = fdiv float %356, %358, !dbg !5849
  %359 = load float*, float** %projScreenCo, align 8, !dbg !5850
  %arrayidx393 = getelementptr inbounds float, float* %359, i64 2, !dbg !5850
  store float %div392, float* %arrayidx393, align 4, !dbg !5851
  %360 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5852
  %screenMin394 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %360, i32 0, i32 42, !dbg !5853
  %arraydecay395 = getelementptr inbounds [2 x float], [2 x float]* %screenMin394, i64 0, i64 0, !dbg !5852
  %361 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5854
  %screenMax396 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %361, i32 0, i32 43, !dbg !5855
  %arraydecay397 = getelementptr inbounds [2 x float], [2 x float]* %screenMax396, i64 0, i64 0, !dbg !5854
  %362 = load float*, float** %projScreenCo, align 8, !dbg !5856
  call void @minmax_v2v2_v2(float* %arraydecay395, float* %arraydecay397, float* %362), !dbg !5857
  br label %if.end400, !dbg !5858

if.else398:                                       ; preds = %for.body356
  %363 = load float*, float** %projScreenCo, align 8, !dbg !5859
  %arrayidx399 = getelementptr inbounds float, float* %363, i64 0, !dbg !5859
  store float 0x47EFFFFFE0000000, float* %arrayidx399, align 4, !dbg !5861
  br label %if.end400

if.end400:                                        ; preds = %if.else398, %if.then366
  br label %for.inc401, !dbg !5862

for.inc401:                                       ; preds = %if.end400
  %364 = load i32, i32* %a, align 4, !dbg !5863
  %inc402 = add nsw i32 %364, 1, !dbg !5863
  store i32 %inc402, i32* %a, align 4, !dbg !5863
  %365 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !5864
  %incdec.ptr403 = getelementptr inbounds %struct.MVert, %struct.MVert* %365, i32 1, !dbg !5864
  store %struct.MVert* %incdec.ptr403, %struct.MVert** %mv, align 8, !dbg !5864
  %366 = load float*, float** %projScreenCo, align 8, !dbg !5865
  %add.ptr404 = getelementptr inbounds float, float* %366, i64 4, !dbg !5865
  store float* %add.ptr404, float** %projScreenCo, align 8, !dbg !5865
  br label %for.cond352, !dbg !5866, !llvm.loop !5867

for.end405:                                       ; preds = %for.cond352
  br label %if.end406

if.end406:                                        ; preds = %for.end405, %for.end
  %367 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5869
  %screenMax407 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %367, i32 0, i32 43, !dbg !5870
  %arrayidx408 = getelementptr inbounds [2 x float], [2 x float]* %screenMax407, i64 0, i64 0, !dbg !5869
  %368 = load float, float* %arrayidx408, align 8, !dbg !5869
  %369 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5871
  %screenMin409 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %369, i32 0, i32 42, !dbg !5872
  %arrayidx410 = getelementptr inbounds [2 x float], [2 x float]* %screenMin409, i64 0, i64 0, !dbg !5871
  %370 = load float, float* %arrayidx410, align 8, !dbg !5871
  %sub = fsub float %368, %370, !dbg !5873
  %mul411 = fmul float %sub, 0x3EB0C6F7A0000000, !dbg !5874
  store float %mul411, float* %projMargin, align 4, !dbg !5875
  %371 = load float, float* %projMargin, align 4, !dbg !5876
  %372 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5877
  %screenMax412 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %372, i32 0, i32 43, !dbg !5878
  %arrayidx413 = getelementptr inbounds [2 x float], [2 x float]* %screenMax412, i64 0, i64 0, !dbg !5877
  %373 = load float, float* %arrayidx413, align 8, !dbg !5879
  %add414 = fadd float %373, %371, !dbg !5879
  store float %add414, float* %arrayidx413, align 8, !dbg !5879
  %374 = load float, float* %projMargin, align 4, !dbg !5880
  %375 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5881
  %screenMin415 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %375, i32 0, i32 42, !dbg !5882
  %arrayidx416 = getelementptr inbounds [2 x float], [2 x float]* %screenMin415, i64 0, i64 0, !dbg !5881
  %376 = load float, float* %arrayidx416, align 8, !dbg !5883
  %sub417 = fsub float %376, %374, !dbg !5883
  store float %sub417, float* %arrayidx416, align 8, !dbg !5883
  %377 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5884
  %screenMax418 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %377, i32 0, i32 43, !dbg !5885
  %arrayidx419 = getelementptr inbounds [2 x float], [2 x float]* %screenMax418, i64 0, i64 1, !dbg !5884
  %378 = load float, float* %arrayidx419, align 4, !dbg !5884
  %379 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5886
  %screenMin420 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %379, i32 0, i32 42, !dbg !5887
  %arrayidx421 = getelementptr inbounds [2 x float], [2 x float]* %screenMin420, i64 0, i64 1, !dbg !5886
  %380 = load float, float* %arrayidx421, align 4, !dbg !5886
  %sub422 = fsub float %378, %380, !dbg !5888
  %mul423 = fmul float %sub422, 0x3EB0C6F7A0000000, !dbg !5889
  store float %mul423, float* %projMargin, align 4, !dbg !5890
  %381 = load float, float* %projMargin, align 4, !dbg !5891
  %382 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5892
  %screenMax424 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %382, i32 0, i32 43, !dbg !5893
  %arrayidx425 = getelementptr inbounds [2 x float], [2 x float]* %screenMax424, i64 0, i64 1, !dbg !5892
  %383 = load float, float* %arrayidx425, align 4, !dbg !5894
  %add426 = fadd float %383, %381, !dbg !5894
  store float %add426, float* %arrayidx425, align 4, !dbg !5894
  %384 = load float, float* %projMargin, align 4, !dbg !5895
  %385 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5896
  %screenMin427 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %385, i32 0, i32 42, !dbg !5897
  %arrayidx428 = getelementptr inbounds [2 x float], [2 x float]* %screenMin427, i64 0, i64 1, !dbg !5896
  %386 = load float, float* %arrayidx428, align 4, !dbg !5898
  %sub429 = fsub float %386, %384, !dbg !5898
  store float %sub429, float* %arrayidx428, align 4, !dbg !5898
  %387 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5899
  %source430 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %387, i32 0, i32 4, !dbg !5901
  %388 = load i32, i32* %source430, align 8, !dbg !5901
  %cmp431 = icmp eq i32 %388, 1, !dbg !5902
  br i1 %cmp431, label %if.then433, label %if.else542, !dbg !5903

if.then433:                                       ; preds = %if.end406
  %389 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5904
  %screenMin434 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %389, i32 0, i32 42, !dbg !5904
  %arrayidx435 = getelementptr inbounds [2 x float], [2 x float]* %screenMin434, i64 0, i64 0, !dbg !5904
  %390 = load float, float* %arrayidx435, align 8, !dbg !5904
  %391 = load i32, i32* %diameter, align 4, !dbg !5904
  %sub436 = sub nsw i32 0, %391, !dbg !5904
  %conv437 = sitofp i32 %sub436 to float, !dbg !5904
  %cmp438 = fcmp olt float %390, %conv437, !dbg !5904
  br i1 %cmp438, label %if.then440, label %if.else445, !dbg !5908

if.then440:                                       ; preds = %if.then433
  %392 = load i32, i32* %diameter, align 4, !dbg !5904
  %sub441 = sub nsw i32 0, %392, !dbg !5904
  %conv442 = sitofp i32 %sub441 to float, !dbg !5904
  %393 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5904
  %screenMin443 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %393, i32 0, i32 42, !dbg !5904
  %arrayidx444 = getelementptr inbounds [2 x float], [2 x float]* %screenMin443, i64 0, i64 0, !dbg !5904
  store float %conv442, float* %arrayidx444, align 8, !dbg !5904
  br label %if.end460, !dbg !5904

if.else445:                                       ; preds = %if.then433
  %394 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5909
  %screenMin446 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %394, i32 0, i32 42, !dbg !5909
  %arrayidx447 = getelementptr inbounds [2 x float], [2 x float]* %screenMin446, i64 0, i64 0, !dbg !5909
  %395 = load float, float* %arrayidx447, align 8, !dbg !5909
  %396 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5909
  %winx448 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %396, i32 0, i32 46, !dbg !5909
  %397 = load i32, i32* %winx448, align 8, !dbg !5909
  %398 = load i32, i32* %diameter, align 4, !dbg !5909
  %add449 = add nsw i32 %397, %398, !dbg !5909
  %conv450 = sitofp i32 %add449 to float, !dbg !5909
  %cmp451 = fcmp ogt float %395, %conv450, !dbg !5909
  br i1 %cmp451, label %if.then453, label %if.end459, !dbg !5904

if.then453:                                       ; preds = %if.else445
  %399 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5909
  %winx454 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %399, i32 0, i32 46, !dbg !5909
  %400 = load i32, i32* %winx454, align 8, !dbg !5909
  %401 = load i32, i32* %diameter, align 4, !dbg !5909
  %add455 = add nsw i32 %400, %401, !dbg !5909
  %conv456 = sitofp i32 %add455 to float, !dbg !5909
  %402 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5909
  %screenMin457 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %402, i32 0, i32 42, !dbg !5909
  %arrayidx458 = getelementptr inbounds [2 x float], [2 x float]* %screenMin457, i64 0, i64 0, !dbg !5909
  store float %conv456, float* %arrayidx458, align 8, !dbg !5909
  br label %if.end459, !dbg !5909

if.end459:                                        ; preds = %if.then453, %if.else445
  br label %if.end460

if.end460:                                        ; preds = %if.end459, %if.then440
  %403 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5911
  %screenMax461 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %403, i32 0, i32 43, !dbg !5911
  %arrayidx462 = getelementptr inbounds [2 x float], [2 x float]* %screenMax461, i64 0, i64 0, !dbg !5911
  %404 = load float, float* %arrayidx462, align 8, !dbg !5911
  %405 = load i32, i32* %diameter, align 4, !dbg !5911
  %sub463 = sub nsw i32 0, %405, !dbg !5911
  %conv464 = sitofp i32 %sub463 to float, !dbg !5911
  %cmp465 = fcmp olt float %404, %conv464, !dbg !5911
  br i1 %cmp465, label %if.then467, label %if.else472, !dbg !5914

if.then467:                                       ; preds = %if.end460
  %406 = load i32, i32* %diameter, align 4, !dbg !5911
  %sub468 = sub nsw i32 0, %406, !dbg !5911
  %conv469 = sitofp i32 %sub468 to float, !dbg !5911
  %407 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5911
  %screenMax470 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %407, i32 0, i32 43, !dbg !5911
  %arrayidx471 = getelementptr inbounds [2 x float], [2 x float]* %screenMax470, i64 0, i64 0, !dbg !5911
  store float %conv469, float* %arrayidx471, align 8, !dbg !5911
  br label %if.end487, !dbg !5911

if.else472:                                       ; preds = %if.end460
  %408 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5915
  %screenMax473 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %408, i32 0, i32 43, !dbg !5915
  %arrayidx474 = getelementptr inbounds [2 x float], [2 x float]* %screenMax473, i64 0, i64 0, !dbg !5915
  %409 = load float, float* %arrayidx474, align 8, !dbg !5915
  %410 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5915
  %winx475 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %410, i32 0, i32 46, !dbg !5915
  %411 = load i32, i32* %winx475, align 8, !dbg !5915
  %412 = load i32, i32* %diameter, align 4, !dbg !5915
  %add476 = add nsw i32 %411, %412, !dbg !5915
  %conv477 = sitofp i32 %add476 to float, !dbg !5915
  %cmp478 = fcmp ogt float %409, %conv477, !dbg !5915
  br i1 %cmp478, label %if.then480, label %if.end486, !dbg !5911

if.then480:                                       ; preds = %if.else472
  %413 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5915
  %winx481 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %413, i32 0, i32 46, !dbg !5915
  %414 = load i32, i32* %winx481, align 8, !dbg !5915
  %415 = load i32, i32* %diameter, align 4, !dbg !5915
  %add482 = add nsw i32 %414, %415, !dbg !5915
  %conv483 = sitofp i32 %add482 to float, !dbg !5915
  %416 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5915
  %screenMax484 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %416, i32 0, i32 43, !dbg !5915
  %arrayidx485 = getelementptr inbounds [2 x float], [2 x float]* %screenMax484, i64 0, i64 0, !dbg !5915
  store float %conv483, float* %arrayidx485, align 8, !dbg !5915
  br label %if.end486, !dbg !5915

if.end486:                                        ; preds = %if.then480, %if.else472
  br label %if.end487

if.end487:                                        ; preds = %if.end486, %if.then467
  %417 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5917
  %screenMin488 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %417, i32 0, i32 42, !dbg !5917
  %arrayidx489 = getelementptr inbounds [2 x float], [2 x float]* %screenMin488, i64 0, i64 1, !dbg !5917
  %418 = load float, float* %arrayidx489, align 4, !dbg !5917
  %419 = load i32, i32* %diameter, align 4, !dbg !5917
  %sub490 = sub nsw i32 0, %419, !dbg !5917
  %conv491 = sitofp i32 %sub490 to float, !dbg !5917
  %cmp492 = fcmp olt float %418, %conv491, !dbg !5917
  br i1 %cmp492, label %if.then494, label %if.else499, !dbg !5920

if.then494:                                       ; preds = %if.end487
  %420 = load i32, i32* %diameter, align 4, !dbg !5917
  %sub495 = sub nsw i32 0, %420, !dbg !5917
  %conv496 = sitofp i32 %sub495 to float, !dbg !5917
  %421 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5917
  %screenMin497 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %421, i32 0, i32 42, !dbg !5917
  %arrayidx498 = getelementptr inbounds [2 x float], [2 x float]* %screenMin497, i64 0, i64 1, !dbg !5917
  store float %conv496, float* %arrayidx498, align 4, !dbg !5917
  br label %if.end514, !dbg !5917

if.else499:                                       ; preds = %if.end487
  %422 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5921
  %screenMin500 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %422, i32 0, i32 42, !dbg !5921
  %arrayidx501 = getelementptr inbounds [2 x float], [2 x float]* %screenMin500, i64 0, i64 1, !dbg !5921
  %423 = load float, float* %arrayidx501, align 4, !dbg !5921
  %424 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5921
  %winy502 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %424, i32 0, i32 47, !dbg !5921
  %425 = load i32, i32* %winy502, align 4, !dbg !5921
  %426 = load i32, i32* %diameter, align 4, !dbg !5921
  %add503 = add nsw i32 %425, %426, !dbg !5921
  %conv504 = sitofp i32 %add503 to float, !dbg !5921
  %cmp505 = fcmp ogt float %423, %conv504, !dbg !5921
  br i1 %cmp505, label %if.then507, label %if.end513, !dbg !5917

if.then507:                                       ; preds = %if.else499
  %427 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5921
  %winy508 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %427, i32 0, i32 47, !dbg !5921
  %428 = load i32, i32* %winy508, align 4, !dbg !5921
  %429 = load i32, i32* %diameter, align 4, !dbg !5921
  %add509 = add nsw i32 %428, %429, !dbg !5921
  %conv510 = sitofp i32 %add509 to float, !dbg !5921
  %430 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5921
  %screenMin511 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %430, i32 0, i32 42, !dbg !5921
  %arrayidx512 = getelementptr inbounds [2 x float], [2 x float]* %screenMin511, i64 0, i64 1, !dbg !5921
  store float %conv510, float* %arrayidx512, align 4, !dbg !5921
  br label %if.end513, !dbg !5921

if.end513:                                        ; preds = %if.then507, %if.else499
  br label %if.end514

if.end514:                                        ; preds = %if.end513, %if.then494
  %431 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5923
  %screenMax515 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %431, i32 0, i32 43, !dbg !5923
  %arrayidx516 = getelementptr inbounds [2 x float], [2 x float]* %screenMax515, i64 0, i64 1, !dbg !5923
  %432 = load float, float* %arrayidx516, align 4, !dbg !5923
  %433 = load i32, i32* %diameter, align 4, !dbg !5923
  %sub517 = sub nsw i32 0, %433, !dbg !5923
  %conv518 = sitofp i32 %sub517 to float, !dbg !5923
  %cmp519 = fcmp olt float %432, %conv518, !dbg !5923
  br i1 %cmp519, label %if.then521, label %if.else526, !dbg !5926

if.then521:                                       ; preds = %if.end514
  %434 = load i32, i32* %diameter, align 4, !dbg !5923
  %sub522 = sub nsw i32 0, %434, !dbg !5923
  %conv523 = sitofp i32 %sub522 to float, !dbg !5923
  %435 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5923
  %screenMax524 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %435, i32 0, i32 43, !dbg !5923
  %arrayidx525 = getelementptr inbounds [2 x float], [2 x float]* %screenMax524, i64 0, i64 1, !dbg !5923
  store float %conv523, float* %arrayidx525, align 4, !dbg !5923
  br label %if.end541, !dbg !5923

if.else526:                                       ; preds = %if.end514
  %436 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5927
  %screenMax527 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %436, i32 0, i32 43, !dbg !5927
  %arrayidx528 = getelementptr inbounds [2 x float], [2 x float]* %screenMax527, i64 0, i64 1, !dbg !5927
  %437 = load float, float* %arrayidx528, align 4, !dbg !5927
  %438 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5927
  %winy529 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %438, i32 0, i32 47, !dbg !5927
  %439 = load i32, i32* %winy529, align 4, !dbg !5927
  %440 = load i32, i32* %diameter, align 4, !dbg !5927
  %add530 = add nsw i32 %439, %440, !dbg !5927
  %conv531 = sitofp i32 %add530 to float, !dbg !5927
  %cmp532 = fcmp ogt float %437, %conv531, !dbg !5927
  br i1 %cmp532, label %if.then534, label %if.end540, !dbg !5923

if.then534:                                       ; preds = %if.else526
  %441 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5927
  %winy535 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %441, i32 0, i32 47, !dbg !5927
  %442 = load i32, i32* %winy535, align 4, !dbg !5927
  %443 = load i32, i32* %diameter, align 4, !dbg !5927
  %add536 = add nsw i32 %442, %443, !dbg !5927
  %conv537 = sitofp i32 %add536 to float, !dbg !5927
  %444 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5927
  %screenMax538 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %444, i32 0, i32 43, !dbg !5927
  %arrayidx539 = getelementptr inbounds [2 x float], [2 x float]* %screenMax538, i64 0, i64 1, !dbg !5927
  store float %conv537, float* %arrayidx539, align 4, !dbg !5927
  br label %if.end540, !dbg !5927

if.end540:                                        ; preds = %if.then534, %if.else526
  br label %if.end541

if.end541:                                        ; preds = %if.end540, %if.then521
  br label %if.end555, !dbg !5929

if.else542:                                       ; preds = %if.end406
  %445 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5930
  %screenMin543 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %445, i32 0, i32 42, !dbg !5932
  %arrayidx544 = getelementptr inbounds [2 x float], [2 x float]* %screenMin543, i64 0, i64 0, !dbg !5930
  store float 0.000000e+00, float* %arrayidx544, align 8, !dbg !5933
  %446 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5934
  %winx545 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %446, i32 0, i32 46, !dbg !5935
  %447 = load i32, i32* %winx545, align 8, !dbg !5935
  %conv546 = sitofp i32 %447 to float, !dbg !5936
  %448 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5937
  %screenMax547 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %448, i32 0, i32 43, !dbg !5938
  %arrayidx548 = getelementptr inbounds [2 x float], [2 x float]* %screenMax547, i64 0, i64 0, !dbg !5937
  store float %conv546, float* %arrayidx548, align 8, !dbg !5939
  %449 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5940
  %screenMin549 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %449, i32 0, i32 42, !dbg !5941
  %arrayidx550 = getelementptr inbounds [2 x float], [2 x float]* %screenMin549, i64 0, i64 1, !dbg !5940
  store float 0.000000e+00, float* %arrayidx550, align 4, !dbg !5942
  %450 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5943
  %winy551 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %450, i32 0, i32 47, !dbg !5944
  %451 = load i32, i32* %winy551, align 4, !dbg !5944
  %conv552 = sitofp i32 %451 to float, !dbg !5945
  %452 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5946
  %screenMax553 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %452, i32 0, i32 43, !dbg !5947
  %arrayidx554 = getelementptr inbounds [2 x float], [2 x float]* %screenMax553, i64 0, i64 1, !dbg !5946
  store float %conv552, float* %arrayidx554, align 4, !dbg !5948
  br label %if.end555

if.end555:                                        ; preds = %if.else542, %if.end541
  %453 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5949
  %screenMax556 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %453, i32 0, i32 43, !dbg !5950
  %arrayidx557 = getelementptr inbounds [2 x float], [2 x float]* %screenMax556, i64 0, i64 0, !dbg !5949
  %454 = load float, float* %arrayidx557, align 8, !dbg !5949
  %455 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5951
  %screenMin558 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %455, i32 0, i32 42, !dbg !5952
  %arrayidx559 = getelementptr inbounds [2 x float], [2 x float]* %screenMin558, i64 0, i64 0, !dbg !5951
  %456 = load float, float* %arrayidx559, align 8, !dbg !5951
  %sub560 = fsub float %454, %456, !dbg !5953
  %457 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5954
  %screen_width = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %457, i32 0, i32 44, !dbg !5955
  store float %sub560, float* %screen_width, align 8, !dbg !5956
  %458 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5957
  %screenMax561 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %458, i32 0, i32 43, !dbg !5958
  %arrayidx562 = getelementptr inbounds [2 x float], [2 x float]* %screenMax561, i64 0, i64 1, !dbg !5957
  %459 = load float, float* %arrayidx562, align 4, !dbg !5957
  %460 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5959
  %screenMin563 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %460, i32 0, i32 42, !dbg !5960
  %arrayidx564 = getelementptr inbounds [2 x float], [2 x float]* %screenMin563, i64 0, i64 1, !dbg !5959
  %461 = load float, float* %arrayidx564, align 4, !dbg !5959
  %sub565 = fsub float %459, %461, !dbg !5961
  %462 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5962
  %screen_height = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %462, i32 0, i32 45, !dbg !5963
  store float %sub565, float* %screen_height, align 4, !dbg !5964
  %463 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5965
  %screen_width566 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %463, i32 0, i32 44, !dbg !5966
  %464 = load float, float* %screen_width566, align 8, !dbg !5966
  %465 = load i32, i32* %diameter, align 4, !dbg !5967
  %conv567 = sitofp i32 %465 to float, !dbg !5968
  %div568 = fdiv float %conv567, 4.000000e+00, !dbg !5969
  %div569 = fdiv float %464, %div568, !dbg !5970
  %conv570 = fptosi float %div569 to i32, !dbg !5971
  %466 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5972
  %buckets_x = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %466, i32 0, i32 36, !dbg !5973
  store i32 %conv570, i32* %buckets_x, align 8, !dbg !5974
  %467 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5975
  %screen_height571 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %467, i32 0, i32 45, !dbg !5976
  %468 = load float, float* %screen_height571, align 4, !dbg !5976
  %469 = load i32, i32* %diameter, align 4, !dbg !5977
  %conv572 = sitofp i32 %469 to float, !dbg !5978
  %div573 = fdiv float %conv572, 4.000000e+00, !dbg !5979
  %div574 = fdiv float %468, %div573, !dbg !5980
  %conv575 = fptosi float %div574 to i32, !dbg !5981
  %470 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5982
  %buckets_y = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %470, i32 0, i32 37, !dbg !5983
  store i32 %conv575, i32* %buckets_y, align 4, !dbg !5984
  %471 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5985
  %buckets_x576 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %471, i32 0, i32 36, !dbg !5987
  %472 = load i32, i32* %buckets_x576, align 8, !dbg !5987
  %cmp577 = icmp sgt i32 %472, 256, !dbg !5988
  br i1 %cmp577, label %if.then583, label %lor.lhs.false579, !dbg !5989

lor.lhs.false579:                                 ; preds = %if.end555
  %473 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5990
  %buckets_y580 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %473, i32 0, i32 37, !dbg !5991
  %474 = load i32, i32* %buckets_y580, align 4, !dbg !5991
  %cmp581 = icmp sgt i32 %474, 256, !dbg !5992
  br i1 %cmp581, label %if.then583, label %if.end584, !dbg !5993

if.then583:                                       ; preds = %lor.lhs.false579, %if.end555
  store i8 1, i8* %reset_threads, align 1, !dbg !5994
  br label %if.end584, !dbg !5996

if.end584:                                        ; preds = %if.then583, %lor.lhs.false579
  %475 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5997
  %buckets_x585 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %475, i32 0, i32 36, !dbg !5997
  %476 = load i32, i32* %buckets_x585, align 8, !dbg !5997
  %cmp586 = icmp slt i32 %476, 4, !dbg !5997
  br i1 %cmp586, label %if.then588, label %if.else590, !dbg !6000

if.then588:                                       ; preds = %if.end584
  %477 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !5997
  %buckets_x589 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %477, i32 0, i32 36, !dbg !5997
  store i32 4, i32* %buckets_x589, align 8, !dbg !5997
  br label %if.end597, !dbg !5997

if.else590:                                       ; preds = %if.end584
  %478 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6001
  %buckets_x591 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %478, i32 0, i32 36, !dbg !6001
  %479 = load i32, i32* %buckets_x591, align 8, !dbg !6001
  %cmp592 = icmp sgt i32 %479, 256, !dbg !6001
  br i1 %cmp592, label %if.then594, label %if.end596, !dbg !5997

if.then594:                                       ; preds = %if.else590
  %480 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6001
  %buckets_x595 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %480, i32 0, i32 36, !dbg !6001
  store i32 256, i32* %buckets_x595, align 8, !dbg !6001
  br label %if.end596, !dbg !6001

if.end596:                                        ; preds = %if.then594, %if.else590
  br label %if.end597

if.end597:                                        ; preds = %if.end596, %if.then588
  %481 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6003
  %buckets_y598 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %481, i32 0, i32 37, !dbg !6003
  %482 = load i32, i32* %buckets_y598, align 4, !dbg !6003
  %cmp599 = icmp slt i32 %482, 4, !dbg !6003
  br i1 %cmp599, label %if.then601, label %if.else603, !dbg !6006

if.then601:                                       ; preds = %if.end597
  %483 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6003
  %buckets_y602 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %483, i32 0, i32 37, !dbg !6003
  store i32 4, i32* %buckets_y602, align 4, !dbg !6003
  br label %if.end610, !dbg !6003

if.else603:                                       ; preds = %if.end597
  %484 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6007
  %buckets_y604 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %484, i32 0, i32 37, !dbg !6007
  %485 = load i32, i32* %buckets_y604, align 4, !dbg !6007
  %cmp605 = icmp sgt i32 %485, 256, !dbg !6007
  br i1 %cmp605, label %if.then607, label %if.end609, !dbg !6003

if.then607:                                       ; preds = %if.else603
  %486 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6007
  %buckets_y608 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %486, i32 0, i32 37, !dbg !6007
  store i32 256, i32* %buckets_y608, align 4, !dbg !6007
  br label %if.end609, !dbg !6007

if.end609:                                        ; preds = %if.then607, %if.else603
  br label %if.end610

if.end610:                                        ; preds = %if.end609, %if.then601
  %487 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6009
  %488 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6010
  %buckets_x611 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %488, i32 0, i32 36, !dbg !6011
  %489 = load i32, i32* %buckets_x611, align 8, !dbg !6011
  %conv612 = sext i32 %489 to i64, !dbg !6010
  %mul613 = mul i64 8, %conv612, !dbg !6012
  %490 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6013
  %buckets_y614 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %490, i32 0, i32 37, !dbg !6014
  %491 = load i32, i32* %buckets_y614, align 4, !dbg !6014
  %conv615 = sext i32 %491 to i64, !dbg !6013
  %mul616 = mul i64 %mul613, %conv615, !dbg !6015
  %call617 = call i8* %487(i64 %mul616, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.54, i64 0, i64 0)), !dbg !6009
  %492 = bitcast i8* %call617 to %struct.LinkNode**, !dbg !6016
  %493 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6017
  %bucketRect = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %493, i32 0, i32 28, !dbg !6018
  store %struct.LinkNode** %492, %struct.LinkNode*** %bucketRect, align 8, !dbg !6019
  %494 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6020
  %495 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6021
  %buckets_x618 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %495, i32 0, i32 36, !dbg !6022
  %496 = load i32, i32* %buckets_x618, align 8, !dbg !6022
  %conv619 = sext i32 %496 to i64, !dbg !6021
  %mul620 = mul i64 8, %conv619, !dbg !6023
  %497 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6024
  %buckets_y621 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %497, i32 0, i32 37, !dbg !6025
  %498 = load i32, i32* %buckets_y621, align 4, !dbg !6025
  %conv622 = sext i32 %498 to i64, !dbg !6024
  %mul623 = mul i64 %mul620, %conv622, !dbg !6026
  %call624 = call i8* %494(i64 %mul623, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.55, i64 0, i64 0)), !dbg !6020
  %499 = bitcast i8* %call624 to %struct.LinkNode**, !dbg !6027
  %500 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6028
  %bucketFaces = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %500, i32 0, i32 29, !dbg !6029
  store %struct.LinkNode** %499, %struct.LinkNode*** %bucketFaces, align 8, !dbg !6030
  %501 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6031
  %502 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6032
  %buckets_x625 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %502, i32 0, i32 36, !dbg !6033
  %503 = load i32, i32* %buckets_x625, align 8, !dbg !6033
  %conv626 = sext i32 %503 to i64, !dbg !6032
  %mul627 = mul i64 1, %conv626, !dbg !6034
  %504 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6035
  %buckets_y628 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %504, i32 0, i32 37, !dbg !6036
  %505 = load i32, i32* %buckets_y628, align 4, !dbg !6036
  %conv629 = sext i32 %505 to i64, !dbg !6035
  %mul630 = mul i64 %mul627, %conv629, !dbg !6037
  %call631 = call i8* %501(i64 %mul630, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.55, i64 0, i64 0)), !dbg !6031
  %506 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6038
  %bucketFlags = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %506, i32 0, i32 30, !dbg !6039
  store i8* %call631, i8** %bucketFlags, align 8, !dbg !6040
  %507 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6041
  %seam_bleed_px = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %507, i32 0, i32 65, !dbg !6043
  %508 = load float, float* %seam_bleed_px, align 8, !dbg !6043
  %cmp632 = fcmp ogt float %508, 0.000000e+00, !dbg !6044
  br i1 %cmp632, label %if.then634, label %if.end652, !dbg !6045

if.then634:                                       ; preds = %if.end610
  %509 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6046
  %510 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6048
  %dm_totvert635 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %510, i32 0, i32 16, !dbg !6049
  %511 = load i32, i32* %dm_totvert635, align 4, !dbg !6049
  %conv636 = sext i32 %511 to i64, !dbg !6048
  %mul637 = mul i64 8, %conv636, !dbg !6050
  %call638 = call i8* %509(i64 %mul637, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56, i64 0, i64 0)), !dbg !6046
  %512 = bitcast i8* %call638 to %struct.LinkNode**, !dbg !6051
  %513 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6052
  %vertFaces = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %513, i32 0, i32 34, !dbg !6053
  store %struct.LinkNode** %512, %struct.LinkNode*** %vertFaces, align 8, !dbg !6054
  %514 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6055
  %515 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6056
  %dm_totface639 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %515, i32 0, i32 15, !dbg !6057
  %516 = load i32, i32* %dm_totface639, align 8, !dbg !6057
  %conv640 = sext i32 %516 to i64, !dbg !6056
  %mul641 = mul i64 1, %conv640, !dbg !6058
  %call642 = call i8* %514(i64 %mul641, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.57, i64 0, i64 0)), !dbg !6055
  %517 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6059
  %faceSeamFlags = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %517, i32 0, i32 31, !dbg !6060
  store i8* %call642, i8** %faceSeamFlags, align 8, !dbg !6061
  %518 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6062
  %519 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6063
  %dm_totface643 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %519, i32 0, i32 15, !dbg !6064
  %520 = load i32, i32* %dm_totface643, align 8, !dbg !6064
  %conv644 = sext i32 %520 to i64, !dbg !6063
  %mul645 = mul i64 1, %conv644, !dbg !6065
  %call646 = call i8* %518(i64 %mul645, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.58, i64 0, i64 0)), !dbg !6062
  %521 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6066
  %faceWindingFlags = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %521, i32 0, i32 32, !dbg !6067
  store i8* %call646, i8** %faceWindingFlags, align 8, !dbg !6068
  %522 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6069
  %523 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6070
  %dm_totface647 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %523, i32 0, i32 15, !dbg !6071
  %524 = load i32, i32* %dm_totface647, align 8, !dbg !6071
  %conv648 = sext i32 %524 to i64, !dbg !6070
  %mul649 = mul i64 4, %conv648, !dbg !6072
  %mul650 = mul i64 %mul649, 8, !dbg !6073
  %call651 = call i8* %522(i64 %mul650, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.59, i64 0, i64 0)), !dbg !6069
  %525 = bitcast i8* %call651 to [4 x [2 x float]]*, !dbg !6069
  %526 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6074
  %faceSeamUVs = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %526, i32 0, i32 33, !dbg !6075
  store [4 x [2 x float]]* %525, [4 x [2 x float]]** %faceSeamUVs, align 8, !dbg !6076
  br label %if.end652, !dbg !6077

if.end652:                                        ; preds = %if.then634, %if.end610
  %527 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6078
  %scene653 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %527, i32 0, i32 3, !dbg !6079
  %528 = load %struct.Scene*, %struct.Scene** %scene653, align 8, !dbg !6079
  %call654 = call i32 @BKE_scene_num_threads(%struct.Scene* %528), !dbg !6080
  %529 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6081
  %thread_tot = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %529, i32 0, i32 74, !dbg !6082
  store i32 %call654, i32* %thread_tot, align 8, !dbg !6083
  %530 = load i8, i8* %reset_threads, align 1, !dbg !6084
  %tobool655 = icmp ne i8 %530, 0, !dbg !6084
  br i1 %tobool655, label %if.then656, label %if.end658, !dbg !6086

if.then656:                                       ; preds = %if.end652
  %531 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6087
  %thread_tot657 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %531, i32 0, i32 74, !dbg !6088
  store i32 1, i32* %thread_tot657, align 8, !dbg !6089
  br label %if.end658, !dbg !6087

if.end658:                                        ; preds = %if.then656, %if.end652
  %532 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6090
  %thread_tot659 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %532, i32 0, i32 74, !dbg !6092
  %533 = load i32, i32* %thread_tot659, align 8, !dbg !6092
  %cmp660 = icmp sgt i32 %533, 1, !dbg !6093
  br i1 %cmp660, label %if.then662, label %if.end665, !dbg !6094

if.then662:                                       ; preds = %if.end658
  %534 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6095
  %call663 = call i8* %534(i64 4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.60, i64 0, i64 0)), !dbg !6095
  %535 = bitcast i8* %call663 to i32*, !dbg !6095
  %536 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6097
  %tile_lock = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %536, i32 0, i32 81, !dbg !6098
  store i32* %535, i32** %tile_lock, align 8, !dbg !6099
  %537 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6100
  %tile_lock664 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %537, i32 0, i32 81, !dbg !6101
  %538 = load i32*, i32** %tile_lock664, align 8, !dbg !6101
  call void @BLI_spin_init(i32* %538), !dbg !6102
  br label %if.end665, !dbg !6103

if.end665:                                        ; preds = %if.then662, %if.end658
  call void @image_undo_init_locks(), !dbg !6104
  store i32 0, i32* %a, align 4, !dbg !6105
  br label %for.cond666, !dbg !6107

for.cond666:                                      ; preds = %for.inc673, %if.end665
  %539 = load i32, i32* %a, align 4, !dbg !6108
  %540 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6110
  %thread_tot667 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %540, i32 0, i32 74, !dbg !6111
  %541 = load i32, i32* %thread_tot667, align 8, !dbg !6111
  %cmp668 = icmp slt i32 %539, %541, !dbg !6112
  br i1 %cmp668, label %for.body670, label %for.end675, !dbg !6113

for.body670:                                      ; preds = %for.cond666
  %call671 = call %struct.MemArena* @BLI_memarena_new(i64 65528, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.61, i64 0, i64 0)), !dbg !6114
  %542 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6116
  %arena_mt = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %542, i32 0, i32 27, !dbg !6117
  %543 = load i32, i32* %a, align 4, !dbg !6118
  %idxprom = sext i32 %543 to i64, !dbg !6116
  %arrayidx672 = getelementptr inbounds [1 x %struct.MemArena*], [1 x %struct.MemArena*]* %arena_mt, i64 0, i64 %idxprom, !dbg !6116
  store %struct.MemArena* %call671, %struct.MemArena** %arrayidx672, align 8, !dbg !6119
  br label %for.inc673, !dbg !6120

for.inc673:                                       ; preds = %for.body670
  %544 = load i32, i32* %a, align 4, !dbg !6121
  %inc674 = add nsw i32 %544, 1, !dbg !6121
  store i32 %inc674, i32* %a, align 4, !dbg !6121
  br label %for.cond666, !dbg !6122, !llvm.loop !6123

for.end675:                                       ; preds = %for.cond666
  %545 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6125
  %arena_mt676 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %545, i32 0, i32 27, !dbg !6126
  %arrayidx677 = getelementptr inbounds [1 x %struct.MemArena*], [1 x %struct.MemArena*]* %arena_mt676, i64 0, i64 0, !dbg !6125
  %546 = load %struct.MemArena*, %struct.MemArena** %arrayidx677, align 8, !dbg !6125
  store %struct.MemArena* %546, %struct.MemArena** %arena, align 8, !dbg !6127
  %547 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6128
  %do_backfacecull = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %547, i32 0, i32 54, !dbg !6130
  %548 = load i8, i8* %do_backfacecull, align 2, !dbg !6130
  %conv678 = zext i8 %548 to i32, !dbg !6128
  %tobool679 = icmp ne i32 %conv678, 0, !dbg !6128
  br i1 %tobool679, label %land.lhs.true680, label %if.end741, !dbg !6131

land.lhs.true680:                                 ; preds = %for.end675
  %549 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6132
  %do_mask_normal = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %549, i32 0, i32 55, !dbg !6133
  %550 = load i8, i8* %do_mask_normal, align 1, !dbg !6133
  %conv681 = zext i8 %550 to i32, !dbg !6132
  %tobool682 = icmp ne i32 %conv681, 0, !dbg !6132
  br i1 %tobool682, label %if.then683, label %if.end741, !dbg !6134

if.then683:                                       ; preds = %land.lhs.true680
  call void @llvm.dbg.declare(metadata [3 x float]* %viewDirPersp, metadata !6135, metadata !DIExpression()), !dbg !6137
  %551 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6138
  %552 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6139
  %dm_totvert684 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %552, i32 0, i32 16, !dbg !6140
  %553 = load i32, i32* %dm_totvert684, align 4, !dbg !6140
  %conv685 = sext i32 %553 to i64, !dbg !6139
  %mul686 = mul i64 1, %conv685, !dbg !6141
  %call687 = call i8* %551(i64 %mul686, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i64 0, i64 0)), !dbg !6138
  %554 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6142
  %vertFlags = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %554, i32 0, i32 35, !dbg !6143
  store i8* %call687, i8** %vertFlags, align 8, !dbg !6144
  store i32 0, i32* %a, align 4, !dbg !6145
  %555 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6147
  %dm_mvert688 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %555, i32 0, i32 18, !dbg !6148
  %556 = load %struct.MVert*, %struct.MVert** %dm_mvert688, align 8, !dbg !6148
  store %struct.MVert* %556, %struct.MVert** %mv, align 8, !dbg !6149
  br label %for.cond689, !dbg !6150

for.cond689:                                      ; preds = %for.inc737, %if.then683
  %557 = load i32, i32* %a, align 4, !dbg !6151
  %558 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6153
  %dm_totvert690 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %558, i32 0, i32 16, !dbg !6154
  %559 = load i32, i32* %dm_totvert690, align 4, !dbg !6154
  %cmp691 = icmp slt i32 %557, %559, !dbg !6155
  br i1 %cmp691, label %for.body693, label %for.end740, !dbg !6156

for.body693:                                      ; preds = %for.cond689
  %arraydecay694 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !6157
  %560 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !6159
  %no695 = getelementptr inbounds %struct.MVert, %struct.MVert* %560, i32 0, i32 1, !dbg !6160
  %arraydecay696 = getelementptr inbounds [3 x i16], [3 x i16]* %no695, i64 0, i64 0, !dbg !6159
  call void @normal_short_to_float_v3(float* %arraydecay694, i16* %arraydecay696), !dbg !6161
  %561 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6162
  %is_ortho697 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %561, i32 0, i32 61, !dbg !6164
  %562 = load i8, i8* %is_ortho697, align 1, !dbg !6164
  %tobool698 = icmp ne i8 %562, 0, !dbg !6162
  br i1 %tobool698, label %if.then699, label %if.else714, !dbg !6165

if.then699:                                       ; preds = %for.body693
  %563 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6166
  %viewDir700 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %563, i32 0, i32 68, !dbg !6169
  %arraydecay701 = getelementptr inbounds [3 x float], [3 x float]* %viewDir700, i64 0, i64 0, !dbg !6166
  %arraydecay702 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !6170
  %call703 = call float @angle_normalized_v3v3(float* %arraydecay701, float* %arraydecay702), !dbg !6171
  %564 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6172
  %normal_angle = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %564, i32 0, i32 57, !dbg !6173
  %565 = load float, float* %normal_angle, align 4, !dbg !6173
  %cmp704 = fcmp oge float %call703, %565, !dbg !6174
  br i1 %cmp704, label %if.then706, label %if.end713, !dbg !6175

if.then706:                                       ; preds = %if.then699
  %566 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6176
  %vertFlags707 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %566, i32 0, i32 35, !dbg !6178
  %567 = load i8*, i8** %vertFlags707, align 8, !dbg !6178
  %568 = load i32, i32* %a, align 4, !dbg !6179
  %idxprom708 = sext i32 %568 to i64, !dbg !6176
  %arrayidx709 = getelementptr inbounds i8, i8* %567, i64 %idxprom708, !dbg !6176
  %569 = load i8, i8* %arrayidx709, align 1, !dbg !6180
  %conv710 = zext i8 %569 to i32, !dbg !6180
  %or711 = or i32 %conv710, 1, !dbg !6180
  %conv712 = trunc i32 %or711 to i8, !dbg !6180
  store i8 %conv712, i8* %arrayidx709, align 1, !dbg !6180
  br label %if.end713, !dbg !6181

if.end713:                                        ; preds = %if.then706, %if.then699
  br label %if.end736, !dbg !6182

if.else714:                                       ; preds = %for.body693
  %arraydecay715 = getelementptr inbounds [3 x float], [3 x float]* %viewDirPersp, i64 0, i64 0, !dbg !6183
  %570 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6185
  %viewPos716 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %570, i32 0, i32 69, !dbg !6186
  %arraydecay717 = getelementptr inbounds [3 x float], [3 x float]* %viewPos716, i64 0, i64 0, !dbg !6185
  %571 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !6187
  %co718 = getelementptr inbounds %struct.MVert, %struct.MVert* %571, i32 0, i32 0, !dbg !6188
  %arraydecay719 = getelementptr inbounds [3 x float], [3 x float]* %co718, i64 0, i64 0, !dbg !6187
  call void @sub_v3_v3v3(float* %arraydecay715, float* %arraydecay717, float* %arraydecay719), !dbg !6189
  %arraydecay720 = getelementptr inbounds [3 x float], [3 x float]* %viewDirPersp, i64 0, i64 0, !dbg !6190
  %call721 = call float @normalize_v3(float* %arraydecay720), !dbg !6191
  %arraydecay722 = getelementptr inbounds [3 x float], [3 x float]* %viewDirPersp, i64 0, i64 0, !dbg !6192
  %arraydecay723 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !6194
  %call724 = call float @angle_normalized_v3v3(float* %arraydecay722, float* %arraydecay723), !dbg !6195
  %572 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6196
  %normal_angle725 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %572, i32 0, i32 57, !dbg !6197
  %573 = load float, float* %normal_angle725, align 4, !dbg !6197
  %cmp726 = fcmp oge float %call724, %573, !dbg !6198
  br i1 %cmp726, label %if.then728, label %if.end735, !dbg !6199

if.then728:                                       ; preds = %if.else714
  %574 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6200
  %vertFlags729 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %574, i32 0, i32 35, !dbg !6202
  %575 = load i8*, i8** %vertFlags729, align 8, !dbg !6202
  %576 = load i32, i32* %a, align 4, !dbg !6203
  %idxprom730 = sext i32 %576 to i64, !dbg !6200
  %arrayidx731 = getelementptr inbounds i8, i8* %575, i64 %idxprom730, !dbg !6200
  %577 = load i8, i8* %arrayidx731, align 1, !dbg !6204
  %conv732 = zext i8 %577 to i32, !dbg !6204
  %or733 = or i32 %conv732, 1, !dbg !6204
  %conv734 = trunc i32 %or733 to i8, !dbg !6204
  store i8 %conv734, i8* %arrayidx731, align 1, !dbg !6204
  br label %if.end735, !dbg !6205

if.end735:                                        ; preds = %if.then728, %if.else714
  br label %if.end736

if.end736:                                        ; preds = %if.end735, %if.end713
  br label %for.inc737, !dbg !6206

for.inc737:                                       ; preds = %if.end736
  %578 = load i32, i32* %a, align 4, !dbg !6207
  %inc738 = add nsw i32 %578, 1, !dbg !6207
  store i32 %inc738, i32* %a, align 4, !dbg !6207
  %579 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !6208
  %incdec.ptr739 = getelementptr inbounds %struct.MVert, %struct.MVert* %579, i32 1, !dbg !6208
  store %struct.MVert* %incdec.ptr739, %struct.MVert** %mv, align 8, !dbg !6208
  br label %for.cond689, !dbg !6209, !llvm.loop !6210

for.end740:                                       ; preds = %for.cond689
  br label %if.end741, !dbg !6212

if.end741:                                        ; preds = %for.end740, %land.lhs.true680, %for.end675
  store i32 0, i32* %face_index, align 4, !dbg !6213
  %580 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6215
  %dm_mtface742 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %580, i32 0, i32 20, !dbg !6216
  %581 = load %struct.MTFace**, %struct.MTFace*** %dm_mtface742, align 8, !dbg !6216
  store %struct.MTFace** %581, %struct.MTFace*** %tf, align 8, !dbg !6217
  %582 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6218
  %dm_mface743 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %582, i32 0, i32 19, !dbg !6219
  %583 = load %struct.MFace*, %struct.MFace** %dm_mface743, align 8, !dbg !6219
  store %struct.MFace* %583, %struct.MFace** %mf, align 8, !dbg !6220
  br label %for.cond744, !dbg !6221

for.cond744:                                      ; preds = %for.inc1117, %if.end741
  %584 = load i32, i32* %face_index, align 4, !dbg !6222
  %585 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6224
  %dm_totface745 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %585, i32 0, i32 15, !dbg !6225
  %586 = load i32, i32* %dm_totface745, align 8, !dbg !6225
  %cmp746 = icmp slt i32 %584, %586, !dbg !6226
  br i1 %cmp746, label %for.body748, label %for.end1121, !dbg !6227

for.body748:                                      ; preds = %for.cond744
  call void @llvm.dbg.declare(metadata i8* %is_face_sel, metadata !6228, metadata !DIExpression()), !dbg !6230
  %587 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6231
  %seam_bleed_px749 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %587, i32 0, i32 65, !dbg !6233
  %588 = load float, float* %seam_bleed_px749, align 8, !dbg !6233
  %cmp750 = fcmp ogt float %588, 0.000000e+00, !dbg !6234
  br i1 %cmp750, label %if.then752, label %if.end773, !dbg !6235

if.then752:                                       ; preds = %for.body748
  %589 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6236
  %vertFaces753 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %589, i32 0, i32 34, !dbg !6238
  %590 = load %struct.LinkNode**, %struct.LinkNode*** %vertFaces753, align 8, !dbg !6238
  %591 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6239
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %591, i32 0, i32 0, !dbg !6240
  %592 = load i32, i32* %v1, align 4, !dbg !6240
  %idxprom754 = zext i32 %592 to i64, !dbg !6236
  %arrayidx755 = getelementptr inbounds %struct.LinkNode*, %struct.LinkNode** %590, i64 %idxprom754, !dbg !6236
  %593 = load i32, i32* %face_index, align 4, !dbg !6241
  %conv756 = sext i32 %593 to i64, !dbg !6241
  %594 = inttoptr i64 %conv756 to i8*, !dbg !6241
  %595 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !6242
  call void @BLI_linklist_prepend_arena(%struct.LinkNode** %arrayidx755, i8* %594, %struct.MemArena* %595), !dbg !6243
  %596 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6244
  %vertFaces757 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %596, i32 0, i32 34, !dbg !6245
  %597 = load %struct.LinkNode**, %struct.LinkNode*** %vertFaces757, align 8, !dbg !6245
  %598 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6246
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %598, i32 0, i32 1, !dbg !6247
  %599 = load i32, i32* %v2, align 4, !dbg !6247
  %idxprom758 = zext i32 %599 to i64, !dbg !6244
  %arrayidx759 = getelementptr inbounds %struct.LinkNode*, %struct.LinkNode** %597, i64 %idxprom758, !dbg !6244
  %600 = load i32, i32* %face_index, align 4, !dbg !6248
  %conv760 = sext i32 %600 to i64, !dbg !6248
  %601 = inttoptr i64 %conv760 to i8*, !dbg !6248
  %602 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !6249
  call void @BLI_linklist_prepend_arena(%struct.LinkNode** %arrayidx759, i8* %601, %struct.MemArena* %602), !dbg !6250
  %603 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6251
  %vertFaces761 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %603, i32 0, i32 34, !dbg !6252
  %604 = load %struct.LinkNode**, %struct.LinkNode*** %vertFaces761, align 8, !dbg !6252
  %605 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6253
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %605, i32 0, i32 2, !dbg !6254
  %606 = load i32, i32* %v3, align 4, !dbg !6254
  %idxprom762 = zext i32 %606 to i64, !dbg !6251
  %arrayidx763 = getelementptr inbounds %struct.LinkNode*, %struct.LinkNode** %604, i64 %idxprom762, !dbg !6251
  %607 = load i32, i32* %face_index, align 4, !dbg !6255
  %conv764 = sext i32 %607 to i64, !dbg !6255
  %608 = inttoptr i64 %conv764 to i8*, !dbg !6255
  %609 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !6256
  call void @BLI_linklist_prepend_arena(%struct.LinkNode** %arrayidx763, i8* %608, %struct.MemArena* %609), !dbg !6257
  %610 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6258
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %610, i32 0, i32 3, !dbg !6260
  %611 = load i32, i32* %v4, align 4, !dbg !6260
  %tobool765 = icmp ne i32 %611, 0, !dbg !6258
  br i1 %tobool765, label %if.then766, label %if.end772, !dbg !6261

if.then766:                                       ; preds = %if.then752
  %612 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6262
  %vertFaces767 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %612, i32 0, i32 34, !dbg !6264
  %613 = load %struct.LinkNode**, %struct.LinkNode*** %vertFaces767, align 8, !dbg !6264
  %614 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6265
  %v4768 = getelementptr inbounds %struct.MFace, %struct.MFace* %614, i32 0, i32 3, !dbg !6266
  %615 = load i32, i32* %v4768, align 4, !dbg !6266
  %idxprom769 = zext i32 %615 to i64, !dbg !6262
  %arrayidx770 = getelementptr inbounds %struct.LinkNode*, %struct.LinkNode** %613, i64 %idxprom769, !dbg !6262
  %616 = load i32, i32* %face_index, align 4, !dbg !6267
  %conv771 = sext i32 %616 to i64, !dbg !6267
  %617 = inttoptr i64 %conv771 to i8*, !dbg !6267
  %618 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !6268
  call void @BLI_linklist_prepend_arena(%struct.LinkNode** %arrayidx770, i8* %617, %struct.MemArena* %618), !dbg !6269
  br label %if.end772, !dbg !6270

if.end772:                                        ; preds = %if.then766, %if.then752
  br label %if.end773, !dbg !6271

if.end773:                                        ; preds = %if.end772, %for.body748
  %619 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6272
  %do_face_sel774 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %619, i32 0, i32 60, !dbg !6274
  %620 = load i8, i8* %do_face_sel774, align 8, !dbg !6274
  %tobool775 = icmp ne i8 %620, 0, !dbg !6272
  br i1 %tobool775, label %if.then776, label %if.else798, !dbg !6275

if.then776:                                       ; preds = %if.end773
  call void @llvm.dbg.declare(metadata i32* %orig_index, metadata !6276, metadata !DIExpression()), !dbg !6278
  %621 = load i32*, i32** %index_mp_to_orig, align 8, !dbg !6279
  %tobool777 = icmp ne i32* %621, null, !dbg !6279
  br i1 %tobool777, label %land.lhs.true778, label %if.else790, !dbg !6281

land.lhs.true778:                                 ; preds = %if.then776
  %622 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !6282
  %623 = load i32*, i32** %index_mp_to_orig, align 8, !dbg !6283
  %624 = load i32, i32* %face_index, align 4, !dbg !6284
  %call779 = call i32 @DM_origindex_mface_mpoly(i32* %622, i32* %623, i32 %624), !dbg !6285
  store i32 %call779, i32* %orig_index, align 4, !dbg !6286
  %cmp780 = icmp ne i32 %call779, -1, !dbg !6287
  br i1 %cmp780, label %if.then782, label %if.else790, !dbg !6288

if.then782:                                       ; preds = %land.lhs.true778
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !6289, metadata !DIExpression()), !dbg !6291
  %625 = load %struct.MPoly*, %struct.MPoly** %mpoly_orig, align 8, !dbg !6292
  %626 = load i32, i32* %orig_index, align 4, !dbg !6293
  %idxprom783 = sext i32 %626 to i64, !dbg !6292
  %arrayidx784 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %625, i64 %idxprom783, !dbg !6292
  store %struct.MPoly* %arrayidx784, %struct.MPoly** %mp, align 8, !dbg !6291
  %627 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6294
  %flag = getelementptr inbounds %struct.MPoly, %struct.MPoly* %627, i32 0, i32 3, !dbg !6295
  %628 = load i8, i8* %flag, align 2, !dbg !6295
  %conv785 = zext i8 %628 to i32, !dbg !6294
  %and786 = and i32 %conv785, 2, !dbg !6296
  %cmp787 = icmp ne i32 %and786, 0, !dbg !6297
  %conv788 = zext i1 %cmp787 to i32, !dbg !6297
  %conv789 = trunc i32 %conv788 to i8, !dbg !6298
  store i8 %conv789, i8* %is_face_sel, align 1, !dbg !6299
  br label %if.end797, !dbg !6300

if.else790:                                       ; preds = %land.lhs.true778, %if.then776
  %629 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6301
  %flag791 = getelementptr inbounds %struct.MFace, %struct.MFace* %629, i32 0, i32 6, !dbg !6303
  %630 = load i8, i8* %flag791, align 1, !dbg !6303
  %conv792 = zext i8 %630 to i32, !dbg !6301
  %and793 = and i32 %conv792, 2, !dbg !6304
  %cmp794 = icmp ne i32 %and793, 0, !dbg !6305
  %conv795 = zext i1 %cmp794 to i32, !dbg !6305
  %conv796 = trunc i32 %conv795 to i8, !dbg !6306
  store i8 %conv796, i8* %is_face_sel, align 1, !dbg !6307
  br label %if.end797

if.end797:                                        ; preds = %if.else790, %if.then782
  br label %if.end799, !dbg !6308

if.else798:                                       ; preds = %if.end773
  store i8 1, i8* %is_face_sel, align 1, !dbg !6309
  br label %if.end799

if.end799:                                        ; preds = %if.else798, %if.end797
  %631 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6311
  %do_stencil_brush800 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %631, i32 0, i32 51, !dbg !6313
  %632 = load i8, i8* %do_stencil_brush800, align 1, !dbg !6313
  %tobool801 = icmp ne i8 %632, 0, !dbg !6311
  br i1 %tobool801, label %if.else833, label %if.then802, !dbg !6314

if.then802:                                       ; preds = %if.end799
  %633 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6315
  %634 = load i32, i32* %face_index, align 4, !dbg !6317
  %call803 = call %struct.TexPaintSlot* @project_paint_face_paint_slot(%struct.ProjPaintState* %633, i32 %634), !dbg !6318
  store %struct.TexPaintSlot* %call803, %struct.TexPaintSlot** %slot, align 8, !dbg !6319
  %635 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot, align 8, !dbg !6320
  %cmp804 = icmp eq %struct.TexPaintSlot* %635, null, !dbg !6322
  br i1 %cmp804, label %if.then806, label %if.else810, !dbg !6323

if.then806:                                       ; preds = %if.then802
  %636 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6324
  %dm807 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %636, i32 0, i32 14, !dbg !6326
  %637 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm807, align 8, !dbg !6326
  %faceData808 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %637, i32 0, i32 2, !dbg !6327
  %call809 = call i8* @CustomData_get_layer(%struct.CustomData* %faceData808, i32 5), !dbg !6328
  %638 = bitcast i8* %call809 to %struct.MTFace*, !dbg !6328
  store %struct.MTFace* %638, %struct.MTFace** %tf_base, align 8, !dbg !6329
  %639 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6330
  %canvas_ima = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %639, i32 0, i32 24, !dbg !6331
  %640 = load %struct.Image*, %struct.Image** %canvas_ima, align 8, !dbg !6331
  store %struct.Image* %640, %struct.Image** %tpage, align 8, !dbg !6332
  br label %if.end832, !dbg !6333

if.else810:                                       ; preds = %if.then802
  %641 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot, align 8, !dbg !6334
  %642 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot_last, align 8, !dbg !6337
  %cmp811 = icmp ne %struct.TexPaintSlot* %641, %642, !dbg !6338
  br i1 %cmp811, label %if.then813, label %if.end826, !dbg !6339

if.then813:                                       ; preds = %if.else810
  %643 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot, align 8, !dbg !6340
  %uvname = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %643, i32 0, i32 1, !dbg !6343
  %644 = load i8*, i8** %uvname, align 8, !dbg !6343
  %tobool814 = icmp ne i8* %644, null, !dbg !6340
  br i1 %tobool814, label %lor.lhs.false815, label %if.then821, !dbg !6344

lor.lhs.false815:                                 ; preds = %if.then813
  %645 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6345
  %dm816 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %645, i32 0, i32 14, !dbg !6346
  %646 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm816, align 8, !dbg !6346
  %faceData817 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %646, i32 0, i32 2, !dbg !6347
  %647 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot, align 8, !dbg !6348
  %uvname818 = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %647, i32 0, i32 1, !dbg !6349
  %648 = load i8*, i8** %uvname818, align 8, !dbg !6349
  %call819 = call i8* @CustomData_get_layer_named(%struct.CustomData* %faceData817, i32 5, i8* %648), !dbg !6350
  %649 = bitcast i8* %call819 to %struct.MTFace*, !dbg !6350
  store %struct.MTFace* %649, %struct.MTFace** %tf_base, align 8, !dbg !6351
  %tobool820 = icmp ne %struct.MTFace* %649, null, !dbg !6351
  br i1 %tobool820, label %if.end825, label %if.then821, !dbg !6352

if.then821:                                       ; preds = %lor.lhs.false815, %if.then813
  %650 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6353
  %dm822 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %650, i32 0, i32 14, !dbg !6354
  %651 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm822, align 8, !dbg !6354
  %faceData823 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %651, i32 0, i32 2, !dbg !6355
  %call824 = call i8* @CustomData_get_layer(%struct.CustomData* %faceData823, i32 5), !dbg !6356
  %652 = bitcast i8* %call824 to %struct.MTFace*, !dbg !6356
  store %struct.MTFace* %652, %struct.MTFace** %tf_base, align 8, !dbg !6357
  br label %if.end825, !dbg !6358

if.end825:                                        ; preds = %if.then821, %lor.lhs.false815
  %653 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot, align 8, !dbg !6359
  store %struct.TexPaintSlot* %653, %struct.TexPaintSlot** %slot_last, align 8, !dbg !6360
  br label %if.end826, !dbg !6361

if.end826:                                        ; preds = %if.end825, %if.else810
  %654 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot, align 8, !dbg !6362
  %ima = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %654, i32 0, i32 0, !dbg !6364
  %655 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !6364
  %656 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6365
  %stencil_ima = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %656, i32 0, i32 23, !dbg !6366
  %657 = load %struct.Image*, %struct.Image** %stencil_ima, align 8, !dbg !6366
  %cmp827 = icmp eq %struct.Image* %655, %657, !dbg !6367
  br i1 %cmp827, label %if.then829, label %if.end830, !dbg !6368

if.then829:                                       ; preds = %if.end826
  br label %for.inc1117, !dbg !6369

if.end830:                                        ; preds = %if.end826
  %658 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot, align 8, !dbg !6370
  %ima831 = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %658, i32 0, i32 0, !dbg !6371
  %659 = load %struct.Image*, %struct.Image** %ima831, align 8, !dbg !6371
  store %struct.Image* %659, %struct.Image** %tpage, align 8, !dbg !6372
  br label %if.end832

if.end832:                                        ; preds = %if.end830, %if.then806
  br label %if.end835, !dbg !6373

if.else833:                                       ; preds = %if.end799
  %660 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6374
  %stencil_ima834 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %660, i32 0, i32 23, !dbg !6376
  %661 = load %struct.Image*, %struct.Image** %stencil_ima834, align 8, !dbg !6376
  store %struct.Image* %661, %struct.Image** %tpage, align 8, !dbg !6377
  br label %if.end835

if.end835:                                        ; preds = %if.else833, %if.end832
  %662 = load %struct.MTFace*, %struct.MTFace** %tf_base, align 8, !dbg !6378
  %663 = load i32, i32* %face_index, align 4, !dbg !6379
  %idx.ext = sext i32 %663 to i64, !dbg !6380
  %add.ptr836 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %662, i64 %idx.ext, !dbg !6380
  %664 = load %struct.MTFace**, %struct.MTFace*** %tf, align 8, !dbg !6381
  store %struct.MTFace* %add.ptr836, %struct.MTFace** %664, align 8, !dbg !6382
  %665 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6383
  %do_layer_clone837 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %665, i32 0, i32 48, !dbg !6385
  %666 = load i8, i8* %do_layer_clone837, align 8, !dbg !6385
  %tobool838 = icmp ne i8 %666, 0, !dbg !6383
  br i1 %tobool838, label %if.then839, label %if.end883, !dbg !6386

if.then839:                                       ; preds = %if.end835
  %667 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6387
  %do_material_slots = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %667, i32 0, i32 52, !dbg !6390
  %668 = load i8, i8* %do_material_slots, align 4, !dbg !6390
  %tobool840 = icmp ne i8 %668, 0, !dbg !6387
  br i1 %tobool840, label %if.then841, label %if.else850, !dbg !6391

if.then841:                                       ; preds = %if.then839
  %669 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6392
  %670 = load i32, i32* %face_index, align 4, !dbg !6394
  %call842 = call %struct.TexPaintSlot* @project_paint_face_clone_slot(%struct.ProjPaintState* %669, i32 %670), !dbg !6395
  store %struct.TexPaintSlot* %call842, %struct.TexPaintSlot** %slot_clone, align 8, !dbg !6396
  %671 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot_clone, align 8, !dbg !6397
  %cmp843 = icmp eq %struct.TexPaintSlot* %671, null, !dbg !6397
  br i1 %cmp843, label %if.then848, label %lor.lhs.false845, !dbg !6397

lor.lhs.false845:                                 ; preds = %if.then841
  %672 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot_clone, align 8, !dbg !6397
  %673 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot, align 8, !dbg !6397
  %cmp846 = icmp eq %struct.TexPaintSlot* %672, %673, !dbg !6397
  br i1 %cmp846, label %if.then848, label %if.end849, !dbg !6399

if.then848:                                       ; preds = %lor.lhs.false845, %if.then841
  br label %for.inc1117, !dbg !6400

if.end849:                                        ; preds = %lor.lhs.false845
  br label %if.end856, !dbg !6401

if.else850:                                       ; preds = %if.then839
  %674 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6402
  %clone_ima = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %674, i32 0, i32 25, !dbg !6404
  %675 = load %struct.Image*, %struct.Image** %clone_ima, align 8, !dbg !6404
  %676 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6405
  %canvas_ima851 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %676, i32 0, i32 24, !dbg !6406
  %677 = load %struct.Image*, %struct.Image** %canvas_ima851, align 8, !dbg !6406
  %cmp852 = icmp eq %struct.Image* %675, %677, !dbg !6407
  br i1 %cmp852, label %if.then854, label %if.end855, !dbg !6408

if.then854:                                       ; preds = %if.else850
  br label %for.inc1117, !dbg !6409

if.end855:                                        ; preds = %if.else850
  br label %if.end856

if.end856:                                        ; preds = %if.end855, %if.end849
  %678 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6410
  %dm_mtface_clone857 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %678, i32 0, i32 21, !dbg !6411
  %679 = load %struct.MTFace**, %struct.MTFace*** %dm_mtface_clone857, align 8, !dbg !6411
  %680 = load i32, i32* %face_index, align 4, !dbg !6412
  %idx.ext858 = sext i32 %680 to i64, !dbg !6413
  %add.ptr859 = getelementptr inbounds %struct.MTFace*, %struct.MTFace** %679, i64 %idx.ext858, !dbg !6413
  store %struct.MTFace** %add.ptr859, %struct.MTFace*** %tf_clone, align 8, !dbg !6414
  %681 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6415
  %do_material_slots860 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %681, i32 0, i32 52, !dbg !6417
  %682 = load i8, i8* %do_material_slots860, align 4, !dbg !6417
  %tobool861 = icmp ne i8 %682, 0, !dbg !6415
  br i1 %tobool861, label %if.then862, label %if.end880, !dbg !6418

if.then862:                                       ; preds = %if.end856
  %683 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot_clone, align 8, !dbg !6419
  %684 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot_last_clone, align 8, !dbg !6422
  %cmp863 = icmp ne %struct.TexPaintSlot* %683, %684, !dbg !6423
  br i1 %cmp863, label %if.then865, label %if.end879, !dbg !6424

if.then865:                                       ; preds = %if.then862
  %685 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot, align 8, !dbg !6425
  %uvname866 = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %685, i32 0, i32 1, !dbg !6428
  %686 = load i8*, i8** %uvname866, align 8, !dbg !6428
  %tobool867 = icmp ne i8* %686, null, !dbg !6425
  br i1 %tobool867, label %lor.lhs.false868, label %if.then874, !dbg !6429

lor.lhs.false868:                                 ; preds = %if.then865
  %687 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6430
  %dm869 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %687, i32 0, i32 14, !dbg !6431
  %688 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm869, align 8, !dbg !6431
  %faceData870 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %688, i32 0, i32 2, !dbg !6432
  %689 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot_clone, align 8, !dbg !6433
  %uvname871 = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %689, i32 0, i32 1, !dbg !6434
  %690 = load i8*, i8** %uvname871, align 8, !dbg !6434
  %call872 = call i8* @CustomData_get_layer_named(%struct.CustomData* %faceData870, i32 5, i8* %690), !dbg !6435
  %691 = bitcast i8* %call872 to %struct.MTFace*, !dbg !6435
  store %struct.MTFace* %691, %struct.MTFace** %tf_clone_base, align 8, !dbg !6436
  %tobool873 = icmp ne %struct.MTFace* %691, null, !dbg !6436
  br i1 %tobool873, label %if.end878, label %if.then874, !dbg !6437

if.then874:                                       ; preds = %lor.lhs.false868, %if.then865
  %692 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6438
  %dm875 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %692, i32 0, i32 14, !dbg !6439
  %693 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm875, align 8, !dbg !6439
  %faceData876 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %693, i32 0, i32 2, !dbg !6440
  %call877 = call i8* @CustomData_get_layer(%struct.CustomData* %faceData876, i32 5), !dbg !6441
  %694 = bitcast i8* %call877 to %struct.MTFace*, !dbg !6441
  store %struct.MTFace* %694, %struct.MTFace** %tf_clone_base, align 8, !dbg !6442
  br label %if.end878, !dbg !6443

if.end878:                                        ; preds = %if.then874, %lor.lhs.false868
  %695 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot_clone, align 8, !dbg !6444
  store %struct.TexPaintSlot* %695, %struct.TexPaintSlot** %slot_last_clone, align 8, !dbg !6445
  br label %if.end879, !dbg !6446

if.end879:                                        ; preds = %if.end878, %if.then862
  br label %if.end880, !dbg !6447

if.end880:                                        ; preds = %if.end879, %if.end856
  %696 = load %struct.MTFace*, %struct.MTFace** %tf_clone_base, align 8, !dbg !6448
  %697 = load i32, i32* %face_index, align 4, !dbg !6449
  %idx.ext881 = sext i32 %697 to i64, !dbg !6450
  %add.ptr882 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %696, i64 %idx.ext881, !dbg !6450
  %698 = load %struct.MTFace**, %struct.MTFace*** %tf_clone, align 8, !dbg !6451
  store %struct.MTFace* %add.ptr882, %struct.MTFace** %698, align 8, !dbg !6452
  br label %if.end883, !dbg !6453

if.end883:                                        ; preds = %if.end880, %if.end835
  %699 = load i8, i8* %is_face_sel, align 1, !dbg !6454
  %conv884 = zext i8 %699 to i32, !dbg !6454
  %tobool885 = icmp ne i32 %conv884, 0, !dbg !6454
  br i1 %tobool885, label %land.lhs.true886, label %if.end1116, !dbg !6456

land.lhs.true886:                                 ; preds = %if.end883
  %700 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !6457
  %tobool887 = icmp ne %struct.Image* %700, null, !dbg !6457
  br i1 %tobool887, label %if.then888, label %if.end1116, !dbg !6458

if.then888:                                       ; preds = %land.lhs.true886
  call void @llvm.dbg.declare(metadata float** %v1coSS, metadata !6459, metadata !DIExpression()), !dbg !6461
  call void @llvm.dbg.declare(metadata float** %v2coSS, metadata !6462, metadata !DIExpression()), !dbg !6463
  call void @llvm.dbg.declare(metadata float** %v3coSS, metadata !6464, metadata !DIExpression()), !dbg !6465
  call void @llvm.dbg.declare(metadata float** %v4coSS, metadata !6466, metadata !DIExpression()), !dbg !6467
  store float* null, float** %v4coSS, align 8, !dbg !6467
  %701 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6468
  %screenCoords889 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %701, i32 0, i32 41, !dbg !6469
  %702 = load [4 x float]*, [4 x float]** %screenCoords889, align 8, !dbg !6469
  %703 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6470
  %v1890 = getelementptr inbounds %struct.MFace, %struct.MFace* %703, i32 0, i32 0, !dbg !6471
  %704 = load i32, i32* %v1890, align 4, !dbg !6471
  %idxprom891 = zext i32 %704 to i64, !dbg !6468
  %arrayidx892 = getelementptr inbounds [4 x float], [4 x float]* %702, i64 %idxprom891, !dbg !6468
  %arraydecay893 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx892, i64 0, i64 0, !dbg !6468
  store float* %arraydecay893, float** %v1coSS, align 8, !dbg !6472
  %705 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6473
  %screenCoords894 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %705, i32 0, i32 41, !dbg !6474
  %706 = load [4 x float]*, [4 x float]** %screenCoords894, align 8, !dbg !6474
  %707 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6475
  %v2895 = getelementptr inbounds %struct.MFace, %struct.MFace* %707, i32 0, i32 1, !dbg !6476
  %708 = load i32, i32* %v2895, align 4, !dbg !6476
  %idxprom896 = zext i32 %708 to i64, !dbg !6473
  %arrayidx897 = getelementptr inbounds [4 x float], [4 x float]* %706, i64 %idxprom896, !dbg !6473
  %arraydecay898 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx897, i64 0, i64 0, !dbg !6473
  store float* %arraydecay898, float** %v2coSS, align 8, !dbg !6477
  %709 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6478
  %screenCoords899 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %709, i32 0, i32 41, !dbg !6479
  %710 = load [4 x float]*, [4 x float]** %screenCoords899, align 8, !dbg !6479
  %711 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6480
  %v3900 = getelementptr inbounds %struct.MFace, %struct.MFace* %711, i32 0, i32 2, !dbg !6481
  %712 = load i32, i32* %v3900, align 4, !dbg !6481
  %idxprom901 = zext i32 %712 to i64, !dbg !6478
  %arrayidx902 = getelementptr inbounds [4 x float], [4 x float]* %710, i64 %idxprom901, !dbg !6478
  %arraydecay903 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx902, i64 0, i64 0, !dbg !6478
  store float* %arraydecay903, float** %v3coSS, align 8, !dbg !6482
  %713 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6483
  %v4904 = getelementptr inbounds %struct.MFace, %struct.MFace* %713, i32 0, i32 3, !dbg !6485
  %714 = load i32, i32* %v4904, align 4, !dbg !6485
  %tobool905 = icmp ne i32 %714, 0, !dbg !6483
  br i1 %tobool905, label %if.then906, label %if.end912, !dbg !6486

if.then906:                                       ; preds = %if.then888
  %715 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6487
  %screenCoords907 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %715, i32 0, i32 41, !dbg !6489
  %716 = load [4 x float]*, [4 x float]** %screenCoords907, align 8, !dbg !6489
  %717 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6490
  %v4908 = getelementptr inbounds %struct.MFace, %struct.MFace* %717, i32 0, i32 3, !dbg !6491
  %718 = load i32, i32* %v4908, align 4, !dbg !6491
  %idxprom909 = zext i32 %718 to i64, !dbg !6487
  %arrayidx910 = getelementptr inbounds [4 x float], [4 x float]* %716, i64 %idxprom909, !dbg !6487
  %arraydecay911 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx910, i64 0, i64 0, !dbg !6487
  store float* %arraydecay911, float** %v4coSS, align 8, !dbg !6492
  br label %if.end912, !dbg !6493

if.end912:                                        ; preds = %if.then906, %if.then888
  %719 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6494
  %is_ortho913 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %719, i32 0, i32 61, !dbg !6496
  %720 = load i8, i8* %is_ortho913, align 1, !dbg !6496
  %tobool914 = icmp ne i8 %720, 0, !dbg !6494
  br i1 %tobool914, label %if.end936, label %if.then915, !dbg !6497

if.then915:                                       ; preds = %if.end912
  %721 = load float*, float** %v1coSS, align 8, !dbg !6498
  %arrayidx916 = getelementptr inbounds float, float* %721, i64 0, !dbg !6498
  %722 = load float, float* %arrayidx916, align 4, !dbg !6498
  %cmp917 = fcmp oeq float %722, 0x47EFFFFFE0000000, !dbg !6501
  br i1 %cmp917, label %if.then934, label %lor.lhs.false919, !dbg !6502

lor.lhs.false919:                                 ; preds = %if.then915
  %723 = load float*, float** %v2coSS, align 8, !dbg !6503
  %arrayidx920 = getelementptr inbounds float, float* %723, i64 0, !dbg !6503
  %724 = load float, float* %arrayidx920, align 4, !dbg !6503
  %cmp921 = fcmp oeq float %724, 0x47EFFFFFE0000000, !dbg !6504
  br i1 %cmp921, label %if.then934, label %lor.lhs.false923, !dbg !6505

lor.lhs.false923:                                 ; preds = %lor.lhs.false919
  %725 = load float*, float** %v3coSS, align 8, !dbg !6506
  %arrayidx924 = getelementptr inbounds float, float* %725, i64 0, !dbg !6506
  %726 = load float, float* %arrayidx924, align 4, !dbg !6506
  %cmp925 = fcmp oeq float %726, 0x47EFFFFFE0000000, !dbg !6507
  br i1 %cmp925, label %if.then934, label %lor.lhs.false927, !dbg !6508

lor.lhs.false927:                                 ; preds = %lor.lhs.false923
  %727 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6509
  %v4928 = getelementptr inbounds %struct.MFace, %struct.MFace* %727, i32 0, i32 3, !dbg !6510
  %728 = load i32, i32* %v4928, align 4, !dbg !6510
  %tobool929 = icmp ne i32 %728, 0, !dbg !6509
  br i1 %tobool929, label %land.lhs.true930, label %if.end935, !dbg !6511

land.lhs.true930:                                 ; preds = %lor.lhs.false927
  %729 = load float*, float** %v4coSS, align 8, !dbg !6512
  %arrayidx931 = getelementptr inbounds float, float* %729, i64 0, !dbg !6512
  %730 = load float, float* %arrayidx931, align 4, !dbg !6512
  %cmp932 = fcmp oeq float %730, 0x47EFFFFFE0000000, !dbg !6513
  br i1 %cmp932, label %if.then934, label %if.end935, !dbg !6514

if.then934:                                       ; preds = %land.lhs.true930, %lor.lhs.false923, %lor.lhs.false919, %if.then915
  br label %for.inc1117, !dbg !6515

if.end935:                                        ; preds = %land.lhs.true930, %lor.lhs.false927
  br label %if.end936, !dbg !6517

if.end936:                                        ; preds = %if.end935, %if.end912
  %731 = load float*, float** %v1coSS, align 8, !dbg !6518
  %arrayidx937 = getelementptr inbounds float, float* %731, i64 0, !dbg !6518
  %732 = load float, float* %arrayidx937, align 4, !dbg !6518
  %733 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6520
  %screenMin938 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %733, i32 0, i32 42, !dbg !6521
  %arrayidx939 = getelementptr inbounds [2 x float], [2 x float]* %screenMin938, i64 0, i64 0, !dbg !6520
  %734 = load float, float* %arrayidx939, align 8, !dbg !6520
  %cmp940 = fcmp olt float %732, %734, !dbg !6522
  br i1 %cmp940, label %land.lhs.true942, label %lor.lhs.false963, !dbg !6523

land.lhs.true942:                                 ; preds = %if.end936
  %735 = load float*, float** %v2coSS, align 8, !dbg !6524
  %arrayidx943 = getelementptr inbounds float, float* %735, i64 0, !dbg !6524
  %736 = load float, float* %arrayidx943, align 4, !dbg !6524
  %737 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6525
  %screenMin944 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %737, i32 0, i32 42, !dbg !6526
  %arrayidx945 = getelementptr inbounds [2 x float], [2 x float]* %screenMin944, i64 0, i64 0, !dbg !6525
  %738 = load float, float* %arrayidx945, align 8, !dbg !6525
  %cmp946 = fcmp olt float %736, %738, !dbg !6527
  br i1 %cmp946, label %land.lhs.true948, label %lor.lhs.false963, !dbg !6528

land.lhs.true948:                                 ; preds = %land.lhs.true942
  %739 = load float*, float** %v3coSS, align 8, !dbg !6529
  %arrayidx949 = getelementptr inbounds float, float* %739, i64 0, !dbg !6529
  %740 = load float, float* %arrayidx949, align 4, !dbg !6529
  %741 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6530
  %screenMin950 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %741, i32 0, i32 42, !dbg !6531
  %arrayidx951 = getelementptr inbounds [2 x float], [2 x float]* %screenMin950, i64 0, i64 0, !dbg !6530
  %742 = load float, float* %arrayidx951, align 8, !dbg !6530
  %cmp952 = fcmp olt float %740, %742, !dbg !6532
  br i1 %cmp952, label %land.lhs.true954, label %lor.lhs.false963, !dbg !6533

land.lhs.true954:                                 ; preds = %land.lhs.true948
  %743 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6534
  %v4955 = getelementptr inbounds %struct.MFace, %struct.MFace* %743, i32 0, i32 3, !dbg !6535
  %744 = load i32, i32* %v4955, align 4, !dbg !6535
  %tobool956 = icmp ne i32 %744, 0, !dbg !6534
  br i1 %tobool956, label %land.lhs.true957, label %lor.lhs.false963, !dbg !6536

land.lhs.true957:                                 ; preds = %land.lhs.true954
  %745 = load float*, float** %v4coSS, align 8, !dbg !6537
  %arrayidx958 = getelementptr inbounds float, float* %745, i64 0, !dbg !6537
  %746 = load float, float* %arrayidx958, align 4, !dbg !6537
  %747 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6538
  %screenMin959 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %747, i32 0, i32 42, !dbg !6539
  %arrayidx960 = getelementptr inbounds [2 x float], [2 x float]* %screenMin959, i64 0, i64 0, !dbg !6538
  %748 = load float, float* %arrayidx960, align 8, !dbg !6538
  %cmp961 = fcmp olt float %746, %748, !dbg !6540
  br i1 %cmp961, label %if.then1044, label %lor.lhs.false963, !dbg !6541

lor.lhs.false963:                                 ; preds = %land.lhs.true957, %land.lhs.true954, %land.lhs.true948, %land.lhs.true942, %if.end936
  %749 = load float*, float** %v1coSS, align 8, !dbg !6542
  %arrayidx964 = getelementptr inbounds float, float* %749, i64 0, !dbg !6542
  %750 = load float, float* %arrayidx964, align 4, !dbg !6542
  %751 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6543
  %screenMax965 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %751, i32 0, i32 43, !dbg !6544
  %arrayidx966 = getelementptr inbounds [2 x float], [2 x float]* %screenMax965, i64 0, i64 0, !dbg !6543
  %752 = load float, float* %arrayidx966, align 8, !dbg !6543
  %cmp967 = fcmp ogt float %750, %752, !dbg !6545
  br i1 %cmp967, label %land.lhs.true969, label %lor.lhs.false990, !dbg !6546

land.lhs.true969:                                 ; preds = %lor.lhs.false963
  %753 = load float*, float** %v2coSS, align 8, !dbg !6547
  %arrayidx970 = getelementptr inbounds float, float* %753, i64 0, !dbg !6547
  %754 = load float, float* %arrayidx970, align 4, !dbg !6547
  %755 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6548
  %screenMax971 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %755, i32 0, i32 43, !dbg !6549
  %arrayidx972 = getelementptr inbounds [2 x float], [2 x float]* %screenMax971, i64 0, i64 0, !dbg !6548
  %756 = load float, float* %arrayidx972, align 8, !dbg !6548
  %cmp973 = fcmp ogt float %754, %756, !dbg !6550
  br i1 %cmp973, label %land.lhs.true975, label %lor.lhs.false990, !dbg !6551

land.lhs.true975:                                 ; preds = %land.lhs.true969
  %757 = load float*, float** %v3coSS, align 8, !dbg !6552
  %arrayidx976 = getelementptr inbounds float, float* %757, i64 0, !dbg !6552
  %758 = load float, float* %arrayidx976, align 4, !dbg !6552
  %759 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6553
  %screenMax977 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %759, i32 0, i32 43, !dbg !6554
  %arrayidx978 = getelementptr inbounds [2 x float], [2 x float]* %screenMax977, i64 0, i64 0, !dbg !6553
  %760 = load float, float* %arrayidx978, align 8, !dbg !6553
  %cmp979 = fcmp ogt float %758, %760, !dbg !6555
  br i1 %cmp979, label %land.lhs.true981, label %lor.lhs.false990, !dbg !6556

land.lhs.true981:                                 ; preds = %land.lhs.true975
  %761 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6557
  %v4982 = getelementptr inbounds %struct.MFace, %struct.MFace* %761, i32 0, i32 3, !dbg !6558
  %762 = load i32, i32* %v4982, align 4, !dbg !6558
  %tobool983 = icmp ne i32 %762, 0, !dbg !6557
  br i1 %tobool983, label %land.lhs.true984, label %lor.lhs.false990, !dbg !6559

land.lhs.true984:                                 ; preds = %land.lhs.true981
  %763 = load float*, float** %v4coSS, align 8, !dbg !6560
  %arrayidx985 = getelementptr inbounds float, float* %763, i64 0, !dbg !6560
  %764 = load float, float* %arrayidx985, align 4, !dbg !6560
  %765 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6561
  %screenMax986 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %765, i32 0, i32 43, !dbg !6562
  %arrayidx987 = getelementptr inbounds [2 x float], [2 x float]* %screenMax986, i64 0, i64 0, !dbg !6561
  %766 = load float, float* %arrayidx987, align 8, !dbg !6561
  %cmp988 = fcmp ogt float %764, %766, !dbg !6563
  br i1 %cmp988, label %if.then1044, label %lor.lhs.false990, !dbg !6564

lor.lhs.false990:                                 ; preds = %land.lhs.true984, %land.lhs.true981, %land.lhs.true975, %land.lhs.true969, %lor.lhs.false963
  %767 = load float*, float** %v1coSS, align 8, !dbg !6565
  %arrayidx991 = getelementptr inbounds float, float* %767, i64 1, !dbg !6565
  %768 = load float, float* %arrayidx991, align 4, !dbg !6565
  %769 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6566
  %screenMin992 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %769, i32 0, i32 42, !dbg !6567
  %arrayidx993 = getelementptr inbounds [2 x float], [2 x float]* %screenMin992, i64 0, i64 1, !dbg !6566
  %770 = load float, float* %arrayidx993, align 4, !dbg !6566
  %cmp994 = fcmp olt float %768, %770, !dbg !6568
  br i1 %cmp994, label %land.lhs.true996, label %lor.lhs.false1017, !dbg !6569

land.lhs.true996:                                 ; preds = %lor.lhs.false990
  %771 = load float*, float** %v2coSS, align 8, !dbg !6570
  %arrayidx997 = getelementptr inbounds float, float* %771, i64 1, !dbg !6570
  %772 = load float, float* %arrayidx997, align 4, !dbg !6570
  %773 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6571
  %screenMin998 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %773, i32 0, i32 42, !dbg !6572
  %arrayidx999 = getelementptr inbounds [2 x float], [2 x float]* %screenMin998, i64 0, i64 1, !dbg !6571
  %774 = load float, float* %arrayidx999, align 4, !dbg !6571
  %cmp1000 = fcmp olt float %772, %774, !dbg !6573
  br i1 %cmp1000, label %land.lhs.true1002, label %lor.lhs.false1017, !dbg !6574

land.lhs.true1002:                                ; preds = %land.lhs.true996
  %775 = load float*, float** %v3coSS, align 8, !dbg !6575
  %arrayidx1003 = getelementptr inbounds float, float* %775, i64 1, !dbg !6575
  %776 = load float, float* %arrayidx1003, align 4, !dbg !6575
  %777 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6576
  %screenMin1004 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %777, i32 0, i32 42, !dbg !6577
  %arrayidx1005 = getelementptr inbounds [2 x float], [2 x float]* %screenMin1004, i64 0, i64 1, !dbg !6576
  %778 = load float, float* %arrayidx1005, align 4, !dbg !6576
  %cmp1006 = fcmp olt float %776, %778, !dbg !6578
  br i1 %cmp1006, label %land.lhs.true1008, label %lor.lhs.false1017, !dbg !6579

land.lhs.true1008:                                ; preds = %land.lhs.true1002
  %779 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6580
  %v41009 = getelementptr inbounds %struct.MFace, %struct.MFace* %779, i32 0, i32 3, !dbg !6581
  %780 = load i32, i32* %v41009, align 4, !dbg !6581
  %tobool1010 = icmp ne i32 %780, 0, !dbg !6580
  br i1 %tobool1010, label %land.lhs.true1011, label %lor.lhs.false1017, !dbg !6582

land.lhs.true1011:                                ; preds = %land.lhs.true1008
  %781 = load float*, float** %v4coSS, align 8, !dbg !6583
  %arrayidx1012 = getelementptr inbounds float, float* %781, i64 1, !dbg !6583
  %782 = load float, float* %arrayidx1012, align 4, !dbg !6583
  %783 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6584
  %screenMin1013 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %783, i32 0, i32 42, !dbg !6585
  %arrayidx1014 = getelementptr inbounds [2 x float], [2 x float]* %screenMin1013, i64 0, i64 1, !dbg !6584
  %784 = load float, float* %arrayidx1014, align 4, !dbg !6584
  %cmp1015 = fcmp olt float %782, %784, !dbg !6586
  br i1 %cmp1015, label %if.then1044, label %lor.lhs.false1017, !dbg !6587

lor.lhs.false1017:                                ; preds = %land.lhs.true1011, %land.lhs.true1008, %land.lhs.true1002, %land.lhs.true996, %lor.lhs.false990
  %785 = load float*, float** %v1coSS, align 8, !dbg !6588
  %arrayidx1018 = getelementptr inbounds float, float* %785, i64 1, !dbg !6588
  %786 = load float, float* %arrayidx1018, align 4, !dbg !6588
  %787 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6589
  %screenMax1019 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %787, i32 0, i32 43, !dbg !6590
  %arrayidx1020 = getelementptr inbounds [2 x float], [2 x float]* %screenMax1019, i64 0, i64 1, !dbg !6589
  %788 = load float, float* %arrayidx1020, align 4, !dbg !6589
  %cmp1021 = fcmp ogt float %786, %788, !dbg !6591
  br i1 %cmp1021, label %land.lhs.true1023, label %if.end1045, !dbg !6592

land.lhs.true1023:                                ; preds = %lor.lhs.false1017
  %789 = load float*, float** %v2coSS, align 8, !dbg !6593
  %arrayidx1024 = getelementptr inbounds float, float* %789, i64 1, !dbg !6593
  %790 = load float, float* %arrayidx1024, align 4, !dbg !6593
  %791 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6594
  %screenMax1025 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %791, i32 0, i32 43, !dbg !6595
  %arrayidx1026 = getelementptr inbounds [2 x float], [2 x float]* %screenMax1025, i64 0, i64 1, !dbg !6594
  %792 = load float, float* %arrayidx1026, align 4, !dbg !6594
  %cmp1027 = fcmp ogt float %790, %792, !dbg !6596
  br i1 %cmp1027, label %land.lhs.true1029, label %if.end1045, !dbg !6597

land.lhs.true1029:                                ; preds = %land.lhs.true1023
  %793 = load float*, float** %v3coSS, align 8, !dbg !6598
  %arrayidx1030 = getelementptr inbounds float, float* %793, i64 1, !dbg !6598
  %794 = load float, float* %arrayidx1030, align 4, !dbg !6598
  %795 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6599
  %screenMax1031 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %795, i32 0, i32 43, !dbg !6600
  %arrayidx1032 = getelementptr inbounds [2 x float], [2 x float]* %screenMax1031, i64 0, i64 1, !dbg !6599
  %796 = load float, float* %arrayidx1032, align 4, !dbg !6599
  %cmp1033 = fcmp ogt float %794, %796, !dbg !6601
  br i1 %cmp1033, label %land.lhs.true1035, label %if.end1045, !dbg !6602

land.lhs.true1035:                                ; preds = %land.lhs.true1029
  %797 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6603
  %v41036 = getelementptr inbounds %struct.MFace, %struct.MFace* %797, i32 0, i32 3, !dbg !6604
  %798 = load i32, i32* %v41036, align 4, !dbg !6604
  %tobool1037 = icmp ne i32 %798, 0, !dbg !6603
  br i1 %tobool1037, label %land.lhs.true1038, label %if.end1045, !dbg !6605

land.lhs.true1038:                                ; preds = %land.lhs.true1035
  %799 = load float*, float** %v4coSS, align 8, !dbg !6606
  %arrayidx1039 = getelementptr inbounds float, float* %799, i64 1, !dbg !6606
  %800 = load float, float* %arrayidx1039, align 4, !dbg !6606
  %801 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6607
  %screenMax1040 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %801, i32 0, i32 43, !dbg !6608
  %arrayidx1041 = getelementptr inbounds [2 x float], [2 x float]* %screenMax1040, i64 0, i64 1, !dbg !6607
  %802 = load float, float* %arrayidx1041, align 4, !dbg !6607
  %cmp1042 = fcmp ogt float %800, %802, !dbg !6609
  br i1 %cmp1042, label %if.then1044, label %if.end1045, !dbg !6610

if.then1044:                                      ; preds = %land.lhs.true1038, %land.lhs.true1011, %land.lhs.true984, %land.lhs.true957
  br label %for.inc1117, !dbg !6611

if.end1045:                                       ; preds = %land.lhs.true1038, %land.lhs.true1035, %land.lhs.true1029, %land.lhs.true1023, %lor.lhs.false1017
  %803 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6613
  %do_backfacecull1046 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %803, i32 0, i32 54, !dbg !6615
  %804 = load i8, i8* %do_backfacecull1046, align 2, !dbg !6615
  %tobool1047 = icmp ne i8 %804, 0, !dbg !6613
  br i1 %tobool1047, label %if.then1048, label %if.end1096, !dbg !6616

if.then1048:                                      ; preds = %if.end1045
  %805 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6617
  %do_mask_normal1049 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %805, i32 0, i32 55, !dbg !6620
  %806 = load i8, i8* %do_mask_normal1049, align 1, !dbg !6620
  %tobool1050 = icmp ne i8 %806, 0, !dbg !6617
  br i1 %tobool1050, label %if.then1051, label %if.else1089, !dbg !6621

if.then1051:                                      ; preds = %if.then1048
  %807 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6622
  %vertFlags1052 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %807, i32 0, i32 35, !dbg !6625
  %808 = load i8*, i8** %vertFlags1052, align 8, !dbg !6625
  %809 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6626
  %v11053 = getelementptr inbounds %struct.MFace, %struct.MFace* %809, i32 0, i32 0, !dbg !6627
  %810 = load i32, i32* %v11053, align 4, !dbg !6627
  %idxprom1054 = zext i32 %810 to i64, !dbg !6622
  %arrayidx1055 = getelementptr inbounds i8, i8* %808, i64 %idxprom1054, !dbg !6622
  %811 = load i8, i8* %arrayidx1055, align 1, !dbg !6622
  %conv1056 = zext i8 %811 to i32, !dbg !6622
  %and1057 = and i32 %conv1056, 1, !dbg !6628
  %tobool1058 = icmp ne i32 %and1057, 0, !dbg !6628
  br i1 %tobool1058, label %land.lhs.true1059, label %if.end1088, !dbg !6629

land.lhs.true1059:                                ; preds = %if.then1051
  %812 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6630
  %vertFlags1060 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %812, i32 0, i32 35, !dbg !6631
  %813 = load i8*, i8** %vertFlags1060, align 8, !dbg !6631
  %814 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6632
  %v21061 = getelementptr inbounds %struct.MFace, %struct.MFace* %814, i32 0, i32 1, !dbg !6633
  %815 = load i32, i32* %v21061, align 4, !dbg !6633
  %idxprom1062 = zext i32 %815 to i64, !dbg !6630
  %arrayidx1063 = getelementptr inbounds i8, i8* %813, i64 %idxprom1062, !dbg !6630
  %816 = load i8, i8* %arrayidx1063, align 1, !dbg !6630
  %conv1064 = zext i8 %816 to i32, !dbg !6630
  %and1065 = and i32 %conv1064, 1, !dbg !6634
  %tobool1066 = icmp ne i32 %and1065, 0, !dbg !6634
  br i1 %tobool1066, label %land.lhs.true1067, label %if.end1088, !dbg !6635

land.lhs.true1067:                                ; preds = %land.lhs.true1059
  %817 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6636
  %vertFlags1068 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %817, i32 0, i32 35, !dbg !6637
  %818 = load i8*, i8** %vertFlags1068, align 8, !dbg !6637
  %819 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6638
  %v31069 = getelementptr inbounds %struct.MFace, %struct.MFace* %819, i32 0, i32 2, !dbg !6639
  %820 = load i32, i32* %v31069, align 4, !dbg !6639
  %idxprom1070 = zext i32 %820 to i64, !dbg !6636
  %arrayidx1071 = getelementptr inbounds i8, i8* %818, i64 %idxprom1070, !dbg !6636
  %821 = load i8, i8* %arrayidx1071, align 1, !dbg !6636
  %conv1072 = zext i8 %821 to i32, !dbg !6636
  %and1073 = and i32 %conv1072, 1, !dbg !6640
  %tobool1074 = icmp ne i32 %and1073, 0, !dbg !6640
  br i1 %tobool1074, label %land.lhs.true1075, label %if.end1088, !dbg !6641

land.lhs.true1075:                                ; preds = %land.lhs.true1067
  %822 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6642
  %v41076 = getelementptr inbounds %struct.MFace, %struct.MFace* %822, i32 0, i32 3, !dbg !6643
  %823 = load i32, i32* %v41076, align 4, !dbg !6643
  %cmp1077 = icmp eq i32 %823, 0, !dbg !6644
  br i1 %cmp1077, label %if.then1087, label %lor.lhs.false1079, !dbg !6645

lor.lhs.false1079:                                ; preds = %land.lhs.true1075
  %824 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6646
  %vertFlags1080 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %824, i32 0, i32 35, !dbg !6647
  %825 = load i8*, i8** %vertFlags1080, align 8, !dbg !6647
  %826 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6648
  %v41081 = getelementptr inbounds %struct.MFace, %struct.MFace* %826, i32 0, i32 3, !dbg !6649
  %827 = load i32, i32* %v41081, align 4, !dbg !6649
  %idxprom1082 = zext i32 %827 to i64, !dbg !6646
  %arrayidx1083 = getelementptr inbounds i8, i8* %825, i64 %idxprom1082, !dbg !6646
  %828 = load i8, i8* %arrayidx1083, align 1, !dbg !6646
  %conv1084 = zext i8 %828 to i32, !dbg !6646
  %and1085 = and i32 %conv1084, 1, !dbg !6650
  %tobool1086 = icmp ne i32 %and1085, 0, !dbg !6650
  br i1 %tobool1086, label %if.then1087, label %if.end1088, !dbg !6651

if.then1087:                                      ; preds = %lor.lhs.false1079, %land.lhs.true1075
  br label %for.inc1117, !dbg !6652

if.end1088:                                       ; preds = %lor.lhs.false1079, %land.lhs.true1067, %land.lhs.true1059, %if.then1051
  br label %if.end1095, !dbg !6654

if.else1089:                                      ; preds = %if.then1048
  %829 = load float*, float** %v1coSS, align 8, !dbg !6655
  %830 = load float*, float** %v2coSS, align 8, !dbg !6658
  %831 = load float*, float** %v3coSS, align 8, !dbg !6659
  %call1090 = call float @line_point_side_v2(float* %829, float* %830, float* %831), !dbg !6660
  %cmp1091 = fcmp olt float %call1090, 0.000000e+00, !dbg !6661
  br i1 %cmp1091, label %if.then1093, label %if.end1094, !dbg !6662

if.then1093:                                      ; preds = %if.else1089
  br label %for.inc1117, !dbg !6663

if.end1094:                                       ; preds = %if.else1089
  br label %if.end1095

if.end1095:                                       ; preds = %if.end1094, %if.end1088
  br label %if.end1096, !dbg !6665

if.end1096:                                       ; preds = %if.end1095, %if.end1045
  %832 = load %struct.Image*, %struct.Image** %tpage_last, align 8, !dbg !6666
  %833 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !6668
  %cmp1097 = icmp ne %struct.Image* %832, %833, !dbg !6669
  br i1 %cmp1097, label %if.then1099, label %if.end1111, !dbg !6670

if.then1099:                                      ; preds = %if.end1096
  %834 = load %struct.LinkNode*, %struct.LinkNode** %image_LinkList, align 8, !dbg !6671
  %835 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !6673
  %836 = bitcast %struct.Image* %835 to i8*, !dbg !6673
  %call1100 = call i32 @BLI_linklist_index(%struct.LinkNode* %834, i8* %836), !dbg !6674
  store i32 %call1100, i32* %image_index, align 4, !dbg !6675
  %837 = load i32, i32* %image_index, align 4, !dbg !6676
  %cmp1101 = icmp eq i32 %837, -1, !dbg !6678
  br i1 %cmp1101, label %land.lhs.true1103, label %if.end1110, !dbg !6679

land.lhs.true1103:                                ; preds = %if.then1099
  %838 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !6680
  %call1104 = call zeroext i8 @BKE_image_has_ibuf(%struct.Image* %838, %struct.ImageUser* null), !dbg !6681
  %conv1105 = zext i8 %call1104 to i32, !dbg !6681
  %tobool1106 = icmp ne i32 %conv1105, 0, !dbg !6681
  br i1 %tobool1106, label %if.then1107, label %if.end1110, !dbg !6682

if.then1107:                                      ; preds = %land.lhs.true1103
  %839 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !6683
  %840 = bitcast %struct.Image* %839 to i8*, !dbg !6683
  call void @BLI_linklist_append(%struct.LinkNode** %image_LinkList, i8* %840), !dbg !6685
  %841 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6686
  %image_tot = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %841, i32 0, i32 40, !dbg !6687
  %842 = load i32, i32* %image_tot, align 4, !dbg !6687
  store i32 %842, i32* %image_index, align 4, !dbg !6688
  %843 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6689
  %image_tot1108 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %843, i32 0, i32 40, !dbg !6690
  %844 = load i32, i32* %image_tot1108, align 4, !dbg !6691
  %inc1109 = add nsw i32 %844, 1, !dbg !6691
  store i32 %inc1109, i32* %image_tot1108, align 4, !dbg !6691
  br label %if.end1110, !dbg !6692

if.end1110:                                       ; preds = %if.then1107, %land.lhs.true1103, %if.then1099
  %845 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !6693
  store %struct.Image* %845, %struct.Image** %tpage_last, align 8, !dbg !6694
  br label %if.end1111, !dbg !6695

if.end1111:                                       ; preds = %if.end1110, %if.end1096
  %846 = load i32, i32* %image_index, align 4, !dbg !6696
  %cmp1112 = icmp ne i32 %846, -1, !dbg !6698
  br i1 %cmp1112, label %if.then1114, label %if.end1115, !dbg !6699

if.then1114:                                      ; preds = %if.end1111
  %847 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6700
  %848 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6702
  %849 = load i32, i32* %face_index, align 4, !dbg !6703
  call void @project_paint_delayed_face_init(%struct.ProjPaintState* %847, %struct.MFace* %848, i32 %849), !dbg !6704
  br label %if.end1115, !dbg !6705

if.end1115:                                       ; preds = %if.then1114, %if.end1111
  br label %if.end1116, !dbg !6706

if.end1116:                                       ; preds = %if.end1115, %land.lhs.true886, %if.end883
  br label %for.inc1117, !dbg !6707

for.inc1117:                                      ; preds = %if.end1116, %if.then1093, %if.then1087, %if.then1044, %if.then934, %if.then854, %if.then848, %if.then829
  %850 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6708
  %incdec.ptr1118 = getelementptr inbounds %struct.MFace, %struct.MFace* %850, i32 1, !dbg !6708
  store %struct.MFace* %incdec.ptr1118, %struct.MFace** %mf, align 8, !dbg !6708
  %851 = load %struct.MTFace**, %struct.MTFace*** %tf, align 8, !dbg !6709
  %incdec.ptr1119 = getelementptr inbounds %struct.MTFace*, %struct.MTFace** %851, i32 1, !dbg !6709
  store %struct.MTFace** %incdec.ptr1119, %struct.MTFace*** %tf, align 8, !dbg !6709
  %852 = load i32, i32* %face_index, align 4, !dbg !6710
  %inc1120 = add nsw i32 %852, 1, !dbg !6710
  store i32 %inc1120, i32* %face_index, align 4, !dbg !6710
  br label %for.cond744, !dbg !6711, !llvm.loop !6712

for.end1121:                                      ; preds = %for.cond744
  %853 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !6714
  %854 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6715
  %image_tot1122 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %854, i32 0, i32 40, !dbg !6716
  %855 = load i32, i32* %image_tot1122, align 4, !dbg !6716
  %conv1123 = sext i32 %855 to i64, !dbg !6715
  %mul1124 = mul i64 56, %conv1123, !dbg !6717
  %call1125 = call i8* @BLI_memarena_alloc(%struct.MemArena* %853, i64 %mul1124), !dbg !6718
  %856 = bitcast i8* %call1125 to %struct.ProjPaintImage*, !dbg !6719
  %857 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6720
  %projImages = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %857, i32 0, i32 38, !dbg !6721
  store %struct.ProjPaintImage* %856, %struct.ProjPaintImage** %projImages, align 8, !dbg !6722
  store %struct.ProjPaintImage* %856, %struct.ProjPaintImage** %projIma, align 8, !dbg !6723
  %858 = load %struct.LinkNode*, %struct.LinkNode** %image_LinkList, align 8, !dbg !6724
  store %struct.LinkNode* %858, %struct.LinkNode** %node, align 8, !dbg !6726
  store i32 0, i32* %i, align 4, !dbg !6727
  br label %for.cond1126, !dbg !6728

for.cond1126:                                     ; preds = %for.inc1160, %for.end1121
  %859 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !6729
  %tobool1127 = icmp ne %struct.LinkNode* %859, null, !dbg !6731
  br i1 %tobool1127, label %for.body1128, label %for.end1163, !dbg !6731

for.body1128:                                     ; preds = %for.cond1126
  call void @llvm.dbg.declare(metadata i32* %size, metadata !6732, metadata !DIExpression()), !dbg !6734
  %860 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !6735
  %link = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %860, i32 0, i32 1, !dbg !6736
  %861 = load i8*, i8** %link, align 8, !dbg !6736
  %862 = bitcast i8* %861 to %struct.Image*, !dbg !6735
  %863 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6737
  %ima1129 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %863, i32 0, i32 0, !dbg !6738
  store %struct.Image* %862, %struct.Image** %ima1129, align 8, !dbg !6739
  %864 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6740
  %touch = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %864, i32 0, i32 6, !dbg !6741
  store i32 0, i32* %touch, align 8, !dbg !6742
  %865 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6743
  %ima1130 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %865, i32 0, i32 0, !dbg !6744
  %866 = load %struct.Image*, %struct.Image** %ima1130, align 8, !dbg !6744
  %call1131 = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %866, %struct.ImageUser* null, i8** null), !dbg !6745
  %867 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6746
  %ibuf = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %867, i32 0, i32 1, !dbg !6747
  store %struct.ImBuf* %call1131, %struct.ImBuf** %ibuf, align 8, !dbg !6748
  %868 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6749
  %ibuf1132 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %868, i32 0, i32 1, !dbg !6749
  %869 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1132, align 8, !dbg !6749
  %x1133 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %869, i32 0, i32 2, !dbg !6749
  %870 = load i32, i32* %x1133, align 8, !dbg !6749
  %add1134 = add nsw i32 %870, 64, !dbg !6749
  %sub1135 = sub nsw i32 %add1134, 1, !dbg !6749
  %shr = ashr i32 %sub1135, 6, !dbg !6749
  %conv1136 = sext i32 %shr to i64, !dbg !6749
  %mul1137 = mul i64 8, %conv1136, !dbg !6750
  %871 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6751
  %ibuf1138 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %871, i32 0, i32 1, !dbg !6751
  %872 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1138, align 8, !dbg !6751
  %y1139 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %872, i32 0, i32 3, !dbg !6751
  %873 = load i32, i32* %y1139, align 4, !dbg !6751
  %add1140 = add nsw i32 %873, 64, !dbg !6751
  %sub1141 = sub nsw i32 %add1140, 1, !dbg !6751
  %shr1142 = ashr i32 %sub1141, 6, !dbg !6751
  %conv1143 = sext i32 %shr1142 to i64, !dbg !6751
  %mul1144 = mul i64 %mul1137, %conv1143, !dbg !6752
  %conv1145 = trunc i64 %mul1144 to i32, !dbg !6753
  store i32 %conv1145, i32* %size, align 4, !dbg !6754
  %874 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !6755
  %call1146 = call i8* @BLI_memarena_alloc(%struct.MemArena* %874, i64 1280), !dbg !6756
  %875 = bitcast i8* %call1146 to %struct.ImagePaintPartialRedraw*, !dbg !6756
  %876 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6757
  %partRedrawRect = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %876, i32 0, i32 2, !dbg !6758
  store %struct.ImagePaintPartialRedraw* %875, %struct.ImagePaintPartialRedraw** %partRedrawRect, align 8, !dbg !6759
  %877 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6760
  %partRedrawRect1147 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %877, i32 0, i32 2, !dbg !6761
  %878 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %partRedrawRect1147, align 8, !dbg !6761
  %879 = bitcast %struct.ImagePaintPartialRedraw* %878 to i8*, !dbg !6762
  call void @llvm.memset.p0i8.i64(i8* align 4 %879, i8 0, i64 1280, i1 false), !dbg !6762
  %880 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !6763
  %881 = load i32, i32* %size, align 4, !dbg !6764
  %conv1148 = sext i32 %881 to i64, !dbg !6764
  %call1149 = call i8* @BLI_memarena_alloc(%struct.MemArena* %880, i64 %conv1148), !dbg !6765
  %882 = bitcast i8* %call1149 to i8**, !dbg !6766
  %883 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6767
  %undoRect = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %883, i32 0, i32 3, !dbg !6768
  store i8** %882, i8*** %undoRect, align 8, !dbg !6769
  %884 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6770
  %undoRect1150 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %884, i32 0, i32 3, !dbg !6771
  %885 = load i8**, i8*** %undoRect1150, align 8, !dbg !6771
  %886 = bitcast i8** %885 to i8*, !dbg !6772
  %887 = load i32, i32* %size, align 4, !dbg !6773
  %conv1151 = sext i32 %887 to i64, !dbg !6773
  call void @llvm.memset.p0i8.i64(i8* align 8 %886, i8 0, i64 %conv1151, i1 false), !dbg !6772
  %888 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !6774
  %889 = load i32, i32* %size, align 4, !dbg !6775
  %conv1152 = sext i32 %889 to i64, !dbg !6775
  %call1153 = call i8* @BLI_memarena_alloc(%struct.MemArena* %888, i64 %conv1152), !dbg !6776
  %890 = bitcast i8* %call1153 to i16**, !dbg !6777
  %891 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6778
  %maskRect = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %891, i32 0, i32 4, !dbg !6779
  store i16** %890, i16*** %maskRect, align 8, !dbg !6780
  %892 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6781
  %maskRect1154 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %892, i32 0, i32 4, !dbg !6782
  %893 = load i16**, i16*** %maskRect1154, align 8, !dbg !6782
  %894 = bitcast i16** %893 to i8*, !dbg !6783
  %895 = load i32, i32* %size, align 4, !dbg !6784
  %conv1155 = sext i32 %895 to i64, !dbg !6784
  call void @llvm.memset.p0i8.i64(i8* align 8 %894, i8 0, i64 %conv1155, i1 false), !dbg !6783
  %896 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !6785
  %897 = load i32, i32* %size, align 4, !dbg !6786
  %conv1156 = sext i32 %897 to i64, !dbg !6786
  %call1157 = call i8* @BLI_memarena_alloc(%struct.MemArena* %896, i64 %conv1156), !dbg !6787
  %898 = bitcast i8* %call1157 to i8**, !dbg !6788
  %899 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6789
  %valid = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %899, i32 0, i32 5, !dbg !6790
  store i8** %898, i8*** %valid, align 8, !dbg !6791
  %900 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6792
  %valid1158 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %900, i32 0, i32 5, !dbg !6793
  %901 = load i8**, i8*** %valid1158, align 8, !dbg !6793
  %902 = bitcast i8** %901 to i8*, !dbg !6794
  %903 = load i32, i32* %size, align 4, !dbg !6795
  %conv1159 = sext i32 %903 to i64, !dbg !6795
  call void @llvm.memset.p0i8.i64(i8* align 8 %902, i8 0, i64 %conv1159, i1 false), !dbg !6794
  br label %for.inc1160, !dbg !6796

for.inc1160:                                      ; preds = %for.body1128
  %904 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !6797
  %next = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %904, i32 0, i32 0, !dbg !6798
  %905 = load %struct.LinkNode*, %struct.LinkNode** %next, align 8, !dbg !6798
  store %struct.LinkNode* %905, %struct.LinkNode** %node, align 8, !dbg !6799
  %906 = load i32, i32* %i, align 4, !dbg !6800
  %inc1161 = add nsw i32 %906, 1, !dbg !6800
  store i32 %inc1161, i32* %i, align 4, !dbg !6800
  %907 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6801
  %incdec.ptr1162 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %907, i32 1, !dbg !6801
  store %struct.ProjPaintImage* %incdec.ptr1162, %struct.ProjPaintImage** %projIma, align 8, !dbg !6801
  br label %for.cond1126, !dbg !6802, !llvm.loop !6803

for.end1163:                                      ; preds = %for.cond1126
  %908 = load %struct.LinkNode*, %struct.LinkNode** %image_LinkList, align 8, !dbg !6805
  call void @BLI_linklist_free(%struct.LinkNode* %908, void (i8*)* null), !dbg !6806
  br label %return, !dbg !6807

return:                                           ; preds = %for.end1163, %if.end60
  ret void, !dbg !6807
}

; Function Attrs: noinline nounwind uwtable
define internal void @paint_proj_begin_clone(%struct.ProjPaintState* %ps, float* %mouse) #0 !dbg !6808 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %mouse.addr = alloca float*, align 8
  %projCo = alloca [4 x float], align 16
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !6811, metadata !DIExpression()), !dbg !6812
  store float* %mouse, float** %mouse.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mouse.addr, metadata !6813, metadata !DIExpression()), !dbg !6814
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6815
  %tool = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 8, !dbg !6817
  %1 = load i16, i16* %tool, align 8, !dbg !6817
  %conv = sext i16 %1 to i32, !dbg !6815
  %cmp = icmp eq i32 %conv, 3, !dbg !6818
  br i1 %cmp, label %if.then, label %if.end, !dbg !6819

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x float]* %projCo, metadata !6820, metadata !DIExpression()), !dbg !6822
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %projCo, i64 0, i64 0, !dbg !6823
  %2 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6824
  %scene = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %2, i32 0, i32 3, !dbg !6825
  %3 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6825
  %4 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6826
  %v3d = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %4, i32 0, i32 0, !dbg !6827
  %5 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !6827
  %call = call float* @ED_view3d_cursor3d_get(%struct.Scene* %3, %struct.View3D* %5), !dbg !6828
  call void @copy_v3_v3(float* %arraydecay, float* %call), !dbg !6829
  %6 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6830
  %ob = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %6, i32 0, i32 13, !dbg !6831
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6831
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 50, !dbg !6832
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !6830
  %arraydecay3 = getelementptr inbounds [4 x float], [4 x float]* %projCo, i64 0, i64 0, !dbg !6833
  call void @mul_m4_v3([4 x float]* %arraydecay2, float* %arraydecay3), !dbg !6834
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %projCo, i64 0, i64 3, !dbg !6835
  store float 1.000000e+00, float* %arrayidx, align 4, !dbg !6836
  %8 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6837
  %projectMat = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %8, i32 0, i32 67, !dbg !6838
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projectMat, i64 0, i64 0, !dbg !6837
  %arraydecay5 = getelementptr inbounds [4 x float], [4 x float]* %projCo, i64 0, i64 0, !dbg !6839
  call void @mul_m4_v4([4 x float]* %arraydecay4, float* %arraydecay5), !dbg !6840
  %9 = load float*, float** %mouse.addr, align 8, !dbg !6841
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 0, !dbg !6841
  %10 = load float, float* %arrayidx6, align 4, !dbg !6841
  %11 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6842
  %winx = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %11, i32 0, i32 46, !dbg !6843
  %12 = load i32, i32* %winx, align 8, !dbg !6843
  %conv7 = sitofp i32 %12 to float, !dbg !6842
  %mul = fmul float %conv7, 5.000000e-01, !dbg !6844
  %13 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6845
  %winx8 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %13, i32 0, i32 46, !dbg !6846
  %14 = load i32, i32* %winx8, align 8, !dbg !6846
  %conv9 = sitofp i32 %14 to float, !dbg !6845
  %mul10 = fmul float %conv9, 5.000000e-01, !dbg !6847
  %arrayidx11 = getelementptr inbounds [4 x float], [4 x float]* %projCo, i64 0, i64 0, !dbg !6848
  %15 = load float, float* %arrayidx11, align 16, !dbg !6848
  %mul12 = fmul float %mul10, %15, !dbg !6849
  %arrayidx13 = getelementptr inbounds [4 x float], [4 x float]* %projCo, i64 0, i64 3, !dbg !6850
  %16 = load float, float* %arrayidx13, align 4, !dbg !6850
  %div = fdiv float %mul12, %16, !dbg !6851
  %add = fadd float %mul, %div, !dbg !6852
  %sub = fsub float %10, %add, !dbg !6853
  %17 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6854
  %cloneOffset = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %17, i32 0, i32 66, !dbg !6855
  %arrayidx14 = getelementptr inbounds [2 x float], [2 x float]* %cloneOffset, i64 0, i64 0, !dbg !6854
  store float %sub, float* %arrayidx14, align 4, !dbg !6856
  %18 = load float*, float** %mouse.addr, align 8, !dbg !6857
  %arrayidx15 = getelementptr inbounds float, float* %18, i64 1, !dbg !6857
  %19 = load float, float* %arrayidx15, align 4, !dbg !6857
  %20 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6858
  %winy = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %20, i32 0, i32 47, !dbg !6859
  %21 = load i32, i32* %winy, align 4, !dbg !6859
  %conv16 = sitofp i32 %21 to float, !dbg !6858
  %mul17 = fmul float %conv16, 5.000000e-01, !dbg !6860
  %22 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6861
  %winy18 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %22, i32 0, i32 47, !dbg !6862
  %23 = load i32, i32* %winy18, align 4, !dbg !6862
  %conv19 = sitofp i32 %23 to float, !dbg !6861
  %mul20 = fmul float %conv19, 5.000000e-01, !dbg !6863
  %arrayidx21 = getelementptr inbounds [4 x float], [4 x float]* %projCo, i64 0, i64 1, !dbg !6864
  %24 = load float, float* %arrayidx21, align 4, !dbg !6864
  %mul22 = fmul float %mul20, %24, !dbg !6865
  %arrayidx23 = getelementptr inbounds [4 x float], [4 x float]* %projCo, i64 0, i64 3, !dbg !6866
  %25 = load float, float* %arrayidx23, align 4, !dbg !6866
  %div24 = fdiv float %mul22, %25, !dbg !6867
  %add25 = fadd float %mul17, %div24, !dbg !6868
  %sub26 = fsub float %19, %add25, !dbg !6869
  %26 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6870
  %cloneOffset27 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %26, i32 0, i32 66, !dbg !6871
  %arrayidx28 = getelementptr inbounds [2 x float], [2 x float]* %cloneOffset27, i64 0, i64 1, !dbg !6870
  store float %sub26, float* %arrayidx28, align 4, !dbg !6872
  br label %if.end, !dbg !6873

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6874
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @paint_proj_redraw(%struct.bContext* %C, i8* %pps, i8 zeroext %final) #0 !dbg !6875 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %pps.addr = alloca i8*, align 8
  %final.addr = alloca i8, align 1
  %ps = alloca %struct.ProjPaintState*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6878, metadata !DIExpression()), !dbg !6879
  store i8* %pps, i8** %pps.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pps.addr, metadata !6880, metadata !DIExpression()), !dbg !6881
  store i8 %final, i8* %final.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %final.addr, metadata !6882, metadata !DIExpression()), !dbg !6883
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps, metadata !6884, metadata !DIExpression()), !dbg !6885
  %0 = load i8*, i8** %pps.addr, align 8, !dbg !6886
  %1 = bitcast i8* %0 to %struct.ProjPaintState*, !dbg !6886
  store %struct.ProjPaintState* %1, %struct.ProjPaintState** %ps, align 8, !dbg !6885
  %2 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !6887
  %need_redraw = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %2, i32 0, i32 79, !dbg !6889
  %3 = load i8, i8* %need_redraw, align 4, !dbg !6889
  %tobool = icmp ne i8 %3, 0, !dbg !6887
  br i1 %tobool, label %if.then, label %if.else, !dbg !6890

if.then:                                          ; preds = %entry
  %4 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !6891
  %call = call zeroext i8 @project_image_refresh_tagged(%struct.ProjPaintState* %4), !dbg !6893
  %5 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !6894
  %need_redraw1 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %5, i32 0, i32 79, !dbg !6895
  store i8 0, i8* %need_redraw1, align 4, !dbg !6896
  br label %if.end4, !dbg !6897

if.else:                                          ; preds = %entry
  %6 = load i8, i8* %final.addr, align 1, !dbg !6898
  %tobool2 = icmp ne i8 %6, 0, !dbg !6898
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !6900

if.then3:                                         ; preds = %if.else
  br label %if.end9, !dbg !6901

if.end:                                           ; preds = %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  %7 = load i8, i8* %final.addr, align 1, !dbg !6903
  %tobool5 = icmp ne i8 %7, 0, !dbg !6903
  br i1 %tobool5, label %if.then6, label %if.else7, !dbg !6905

if.then6:                                         ; preds = %if.end4
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6906
  call void @WM_event_add_notifier(%struct.bContext* %8, i32 167772161, i8* null), !dbg !6908
  br label %if.end9, !dbg !6909

if.else7:                                         ; preds = %if.end4
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6910
  %call8 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %9), !dbg !6912
  call void @ED_region_tag_redraw(%struct.ARegion* %call8), !dbg !6913
  br label %if.end9

if.end9:                                          ; preds = %if.then3, %if.else7, %if.then6
  ret void, !dbg !6914
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @project_image_refresh_tagged(%struct.ProjPaintState* %ps) #0 !dbg !6915 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %pr = alloca %struct.ImagePaintPartialRedraw*, align 8
  %projIma = alloca %struct.ProjPaintImage*, align 8
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  %redraw = alloca i8, align 1
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !6918, metadata !DIExpression()), !dbg !6919
  call void @llvm.dbg.declare(metadata %struct.ImagePaintPartialRedraw** %pr, metadata !6920, metadata !DIExpression()), !dbg !6921
  call void @llvm.dbg.declare(metadata %struct.ProjPaintImage** %projIma, metadata !6922, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6924, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6926, metadata !DIExpression()), !dbg !6927
  call void @llvm.dbg.declare(metadata i8* %redraw, metadata !6928, metadata !DIExpression()), !dbg !6929
  store i8 0, i8* %redraw, align 1, !dbg !6929
  store i32 0, i32* %a, align 4, !dbg !6930
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6932
  %projImages = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 38, !dbg !6933
  %1 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages, align 8, !dbg !6933
  store %struct.ProjPaintImage* %1, %struct.ProjPaintImage** %projIma, align 8, !dbg !6934
  br label %for.cond, !dbg !6935

for.cond:                                         ; preds = %for.inc8, %entry
  %2 = load i32, i32* %a, align 4, !dbg !6936
  %3 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !6938
  %image_tot = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %3, i32 0, i32 40, !dbg !6939
  %4 = load i32, i32* %image_tot, align 4, !dbg !6939
  %cmp = icmp slt i32 %2, %4, !dbg !6940
  br i1 %cmp, label %for.body, label %for.end10, !dbg !6941

for.body:                                         ; preds = %for.cond
  %5 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6942
  %touch = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %5, i32 0, i32 6, !dbg !6945
  %6 = load i32, i32* %touch, align 8, !dbg !6945
  %tobool = icmp ne i32 %6, 0, !dbg !6942
  br i1 %tobool, label %if.then, label %if.end7, !dbg !6946

if.then:                                          ; preds = %for.body
  store i32 0, i32* %i, align 4, !dbg !6947
  br label %for.cond1, !dbg !6950

for.cond1:                                        ; preds = %for.inc, %if.then
  %7 = load i32, i32* %i, align 4, !dbg !6951
  %cmp2 = icmp slt i32 %7, 64, !dbg !6953
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !6954

for.body3:                                        ; preds = %for.cond1
  %8 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6955
  %partRedrawRect = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %8, i32 0, i32 2, !dbg !6957
  %9 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %partRedrawRect, align 8, !dbg !6957
  %10 = load i32, i32* %i, align 4, !dbg !6958
  %idxprom = sext i32 %10 to i64, !dbg !6955
  %arrayidx = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %9, i64 %idxprom, !dbg !6955
  store %struct.ImagePaintPartialRedraw* %arrayidx, %struct.ImagePaintPartialRedraw** %pr, align 8, !dbg !6959
  %11 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr, align 8, !dbg !6960
  %x2 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %11, i32 0, i32 2, !dbg !6962
  %12 = load i32, i32* %x2, align 4, !dbg !6962
  %cmp4 = icmp ne i32 %12, -1, !dbg !6963
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !6964

if.then5:                                         ; preds = %for.body3
  %13 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr, align 8, !dbg !6965
  call void @set_imapaintpartial(%struct.ImagePaintPartialRedraw* %13), !dbg !6967
  %14 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6968
  %ima = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %14, i32 0, i32 0, !dbg !6969
  %15 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !6969
  %16 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6970
  %ibuf = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %16, i32 0, i32 1, !dbg !6971
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6971
  call void @imapaint_image_update(%struct.SpaceImage* null, %struct.Image* %15, %struct.ImBuf* %17, i16 signext 1), !dbg !6972
  store i8 1, i8* %redraw, align 1, !dbg !6973
  br label %if.end, !dbg !6974

if.end:                                           ; preds = %if.then5, %for.body3
  br label %for.inc, !dbg !6975

for.inc:                                          ; preds = %if.end
  %18 = load i32, i32* %i, align 4, !dbg !6976
  %inc = add nsw i32 %18, 1, !dbg !6976
  store i32 %inc, i32* %i, align 4, !dbg !6976
  br label %for.cond1, !dbg !6977, !llvm.loop !6978

for.end:                                          ; preds = %for.cond1
  %19 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6980
  %touch6 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %19, i32 0, i32 6, !dbg !6981
  store i32 0, i32* %touch6, align 8, !dbg !6982
  br label %if.end7, !dbg !6983

if.end7:                                          ; preds = %for.end, %for.body
  br label %for.inc8, !dbg !6984

for.inc8:                                         ; preds = %if.end7
  %20 = load i32, i32* %a, align 4, !dbg !6985
  %inc9 = add nsw i32 %20, 1, !dbg !6985
  store i32 %inc9, i32* %a, align 4, !dbg !6985
  %21 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !6986
  %incdec.ptr = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %21, i32 1, !dbg !6986
  store %struct.ProjPaintImage* %incdec.ptr, %struct.ProjPaintImage** %projIma, align 8, !dbg !6986
  br label %for.cond, !dbg !6987, !llvm.loop !6988

for.end10:                                        ; preds = %for.cond
  %22 = load i8, i8* %redraw, align 1, !dbg !6990
  ret i8 %22, !dbg !6991
}

declare dso_local void @WM_event_add_notifier(%struct.bContext*, i32, i8*) #2

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @paint_proj_stroke_done(i8* %pps) #0 !dbg !6992 {
entry:
  %pps.addr = alloca i8*, align 8
  %ps = alloca %struct.ProjPaintState*, align 8
  store i8* %pps, i8** %pps.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pps.addr, metadata !6993, metadata !DIExpression()), !dbg !6994
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps, metadata !6995, metadata !DIExpression()), !dbg !6996
  %0 = load i8*, i8** %pps.addr, align 8, !dbg !6997
  %1 = bitcast i8* %0 to %struct.ProjPaintState*, !dbg !6997
  store %struct.ProjPaintState* %1, %struct.ProjPaintState** %ps, align 8, !dbg !6996
  %2 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !6998
  %tool = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %2, i32 0, i32 8, !dbg !7000
  %3 = load i16, i16* %tool, align 8, !dbg !7000
  %conv = sext i16 %3 to i32, !dbg !6998
  %cmp = icmp eq i32 %conv, 3, !dbg !7001
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7002

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !7003
  %mode = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %4, i32 0, i32 10, !dbg !7004
  %5 = load i16, i16* %mode, align 4, !dbg !7004
  %conv2 = sext i16 %5 to i32, !dbg !7003
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !7005
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7006

if.then:                                          ; preds = %land.lhs.true
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7007
  %7 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !7009
  %8 = bitcast %struct.ProjPaintState* %7 to i8*, !dbg !7009
  call void %6(i8* %8), !dbg !7007
  br label %return, !dbg !7010

if.end:                                           ; preds = %land.lhs.true, %entry
  %9 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !7011
  %scene = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %9, i32 0, i32 3, !dbg !7012
  %10 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7012
  %11 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !7013
  %brush = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %11, i32 0, i32 7, !dbg !7014
  %12 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7014
  %13 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !7015
  %orig_brush_size = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %13, i32 0, i32 11, !dbg !7016
  %14 = load i32, i32* %orig_brush_size, align 8, !dbg !7016
  call void @BKE_brush_size_set(%struct.Scene* %10, %struct.Brush* %12, i32 %14), !dbg !7017
  %15 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !7018
  %brush5 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %15, i32 0, i32 7, !dbg !7019
  %16 = load %struct.Brush*, %struct.Brush** %brush5, align 8, !dbg !7019
  call void @paint_brush_exit_tex(%struct.Brush* %16), !dbg !7020
  %17 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !7021
  call void @project_paint_end(%struct.ProjPaintState* %17), !dbg !7022
  %18 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7023
  %19 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !7024
  %20 = bitcast %struct.ProjPaintState* %19 to i8*, !dbg !7024
  call void %18(i8* %20), !dbg !7023
  br label %return, !dbg !7025

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7025
}

declare dso_local void @paint_brush_exit_tex(%struct.Brush*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @project_paint_end(%struct.ProjPaintState* %ps) #0 !dbg !7026 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %a = alloca i32, align 4
  %projIma = alloca %struct.ProjPaintImage*, align 8
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !7027, metadata !DIExpression()), !dbg !7028
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7029, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.declare(metadata %struct.ProjPaintImage** %projIma, metadata !7031, metadata !DIExpression()), !dbg !7032
  call void @image_undo_remove_masks(), !dbg !7033
  store i32 0, i32* %a, align 4, !dbg !7034
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7036
  %projImages = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 38, !dbg !7037
  %1 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages, align 8, !dbg !7037
  store %struct.ProjPaintImage* %1, %struct.ProjPaintImage** %projIma, align 8, !dbg !7038
  br label %for.cond, !dbg !7039

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %a, align 4, !dbg !7040
  %3 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7042
  %image_tot = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %3, i32 0, i32 40, !dbg !7043
  %4 = load i32, i32* %image_tot, align 4, !dbg !7043
  %cmp = icmp slt i32 %2, %4, !dbg !7044
  br i1 %cmp, label %for.body, label %for.end, !dbg !7045

for.body:                                         ; preds = %for.cond
  %5 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !7046
  %ima = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %5, i32 0, i32 0, !dbg !7048
  %6 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7048
  %7 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !7049
  %ibuf = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %7, i32 0, i32 1, !dbg !7050
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7050
  call void @BKE_image_release_ibuf(%struct.Image* %6, %struct.ImBuf* %8, i8* null), !dbg !7051
  %9 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !7052
  %ima1 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %9, i32 0, i32 0, !dbg !7053
  %10 = load %struct.Image*, %struct.Image** %ima1, align 8, !dbg !7053
  %id = getelementptr inbounds %struct.Image, %struct.Image* %10, i32 0, i32 0, !dbg !7054
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 0), !dbg !7055
  br label %for.inc, !dbg !7056

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %a, align 4, !dbg !7057
  %inc = add nsw i32 %11, 1, !dbg !7057
  store i32 %inc, i32* %a, align 4, !dbg !7057
  %12 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projIma, align 8, !dbg !7058
  %incdec.ptr = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %12, i32 1, !dbg !7058
  store %struct.ProjPaintImage* %incdec.ptr, %struct.ProjPaintImage** %projIma, align 8, !dbg !7058
  br label %for.cond, !dbg !7059, !llvm.loop !7060

for.end:                                          ; preds = %for.cond
  %13 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7062
  %reproject_image = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %13, i32 0, i32 72, !dbg !7063
  %14 = load %struct.Image*, %struct.Image** %reproject_image, align 8, !dbg !7063
  %15 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7064
  %reproject_ibuf = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %15, i32 0, i32 73, !dbg !7065
  %16 = load %struct.ImBuf*, %struct.ImBuf** %reproject_ibuf, align 8, !dbg !7065
  call void @BKE_image_release_ibuf(%struct.Image* %14, %struct.ImBuf* %16, i8* null), !dbg !7066
  %17 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7067
  %18 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7068
  %screenCoords = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %18, i32 0, i32 41, !dbg !7069
  %19 = load [4 x float]*, [4 x float]** %screenCoords, align 8, !dbg !7069
  %20 = bitcast [4 x float]* %19 to i8*, !dbg !7068
  call void %17(i8* %20), !dbg !7067
  %21 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7070
  %22 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7071
  %bucketRect = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %22, i32 0, i32 28, !dbg !7072
  %23 = load %struct.LinkNode**, %struct.LinkNode*** %bucketRect, align 8, !dbg !7072
  %24 = bitcast %struct.LinkNode** %23 to i8*, !dbg !7071
  call void %21(i8* %24), !dbg !7070
  %25 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7073
  %26 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7074
  %bucketFaces = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %26, i32 0, i32 29, !dbg !7075
  %27 = load %struct.LinkNode**, %struct.LinkNode*** %bucketFaces, align 8, !dbg !7075
  %28 = bitcast %struct.LinkNode** %27 to i8*, !dbg !7074
  call void %25(i8* %28), !dbg !7073
  %29 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7076
  %30 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7077
  %bucketFlags = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %30, i32 0, i32 30, !dbg !7078
  %31 = load i8*, i8** %bucketFlags, align 8, !dbg !7078
  call void %29(i8* %31), !dbg !7076
  %32 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7079
  %33 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7080
  %dm_mtface = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %33, i32 0, i32 20, !dbg !7081
  %34 = load %struct.MTFace**, %struct.MTFace*** %dm_mtface, align 8, !dbg !7081
  %35 = bitcast %struct.MTFace** %34 to i8*, !dbg !7080
  call void %32(i8* %35), !dbg !7079
  %36 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7082
  %do_layer_clone = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %36, i32 0, i32 48, !dbg !7084
  %37 = load i8, i8* %do_layer_clone, align 8, !dbg !7084
  %tobool = icmp ne i8 %37, 0, !dbg !7082
  br i1 %tobool, label %if.then, label %if.end, !dbg !7085

if.then:                                          ; preds = %for.end
  %38 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7086
  %39 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7087
  %dm_mtface_clone = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %39, i32 0, i32 21, !dbg !7088
  %40 = load %struct.MTFace**, %struct.MTFace*** %dm_mtface_clone, align 8, !dbg !7088
  %41 = bitcast %struct.MTFace** %40 to i8*, !dbg !7087
  call void %38(i8* %41), !dbg !7086
  br label %if.end, !dbg !7086

if.end:                                           ; preds = %if.then, %for.end
  %42 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7089
  %thread_tot = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %42, i32 0, i32 74, !dbg !7091
  %43 = load i32, i32* %thread_tot, align 8, !dbg !7091
  %cmp2 = icmp sgt i32 %43, 1, !dbg !7092
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !7093

if.then3:                                         ; preds = %if.end
  %44 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7094
  %tile_lock = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %44, i32 0, i32 81, !dbg !7096
  %45 = load i32*, i32** %tile_lock, align 8, !dbg !7096
  call void @BLI_spin_end(i32* %45), !dbg !7097
  %46 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7098
  %47 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7099
  %tile_lock4 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %47, i32 0, i32 81, !dbg !7100
  %48 = load i32*, i32** %tile_lock4, align 8, !dbg !7100
  %49 = bitcast i32* %48 to i8*, !dbg !7101
  call void %46(i8* %49), !dbg !7098
  br label %if.end5, !dbg !7102

if.end5:                                          ; preds = %if.then3, %if.end
  call void @image_undo_end_locks(), !dbg !7103
  %50 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7104
  %seam_bleed_px = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %50, i32 0, i32 65, !dbg !7106
  %51 = load float, float* %seam_bleed_px, align 8, !dbg !7106
  %cmp6 = fcmp ogt float %51, 0.000000e+00, !dbg !7107
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !7108

if.then7:                                         ; preds = %if.end5
  %52 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7109
  %53 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7111
  %vertFaces = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %53, i32 0, i32 34, !dbg !7112
  %54 = load %struct.LinkNode**, %struct.LinkNode*** %vertFaces, align 8, !dbg !7112
  %55 = bitcast %struct.LinkNode** %54 to i8*, !dbg !7111
  call void %52(i8* %55), !dbg !7109
  %56 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7113
  %57 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7114
  %faceSeamFlags = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %57, i32 0, i32 31, !dbg !7115
  %58 = load i8*, i8** %faceSeamFlags, align 8, !dbg !7115
  call void %56(i8* %58), !dbg !7113
  %59 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7116
  %60 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7117
  %faceWindingFlags = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %60, i32 0, i32 32, !dbg !7118
  %61 = load i8*, i8** %faceWindingFlags, align 8, !dbg !7118
  call void %59(i8* %61), !dbg !7116
  %62 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7119
  %63 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7120
  %faceSeamUVs = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %63, i32 0, i32 33, !dbg !7121
  %64 = load [4 x [2 x float]]*, [4 x [2 x float]]** %faceSeamUVs, align 8, !dbg !7121
  %65 = bitcast [4 x [2 x float]]* %64 to i8*, !dbg !7120
  call void %62(i8* %65), !dbg !7119
  br label %if.end8, !dbg !7122

if.end8:                                          ; preds = %if.then7, %if.end5
  %66 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7123
  %blurkernel = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %66, i32 0, i32 80, !dbg !7125
  %67 = load %struct.BlurKernel*, %struct.BlurKernel** %blurkernel, align 8, !dbg !7125
  %tobool9 = icmp ne %struct.BlurKernel* %67, null, !dbg !7123
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !7126

if.then10:                                        ; preds = %if.end8
  %68 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7127
  %blurkernel11 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %68, i32 0, i32 80, !dbg !7129
  %69 = load %struct.BlurKernel*, %struct.BlurKernel** %blurkernel11, align 8, !dbg !7129
  call void @paint_delete_blur_kernel(%struct.BlurKernel* %69), !dbg !7130
  %70 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7131
  %71 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7132
  %blurkernel12 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %71, i32 0, i32 80, !dbg !7133
  %72 = load %struct.BlurKernel*, %struct.BlurKernel** %blurkernel12, align 8, !dbg !7133
  %73 = bitcast %struct.BlurKernel* %72 to i8*, !dbg !7132
  call void %70(i8* %73), !dbg !7131
  br label %if.end13, !dbg !7134

if.end13:                                         ; preds = %if.then10, %if.end8
  %74 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7135
  %vertFlags = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %74, i32 0, i32 35, !dbg !7137
  %75 = load i8*, i8** %vertFlags, align 8, !dbg !7137
  %tobool14 = icmp ne i8* %75, null, !dbg !7135
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !7138

if.then15:                                        ; preds = %if.end13
  %76 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7139
  %77 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7140
  %vertFlags16 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %77, i32 0, i32 35, !dbg !7141
  %78 = load i8*, i8** %vertFlags16, align 8, !dbg !7141
  call void %76(i8* %78), !dbg !7139
  br label %if.end17, !dbg !7139

if.end17:                                         ; preds = %if.then15, %if.end13
  store i32 0, i32* %a, align 4, !dbg !7142
  br label %for.cond18, !dbg !7144

for.cond18:                                       ; preds = %for.inc22, %if.end17
  %79 = load i32, i32* %a, align 4, !dbg !7145
  %80 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7147
  %thread_tot19 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %80, i32 0, i32 74, !dbg !7148
  %81 = load i32, i32* %thread_tot19, align 8, !dbg !7148
  %cmp20 = icmp slt i32 %79, %81, !dbg !7149
  br i1 %cmp20, label %for.body21, label %for.end24, !dbg !7150

for.body21:                                       ; preds = %for.cond18
  %82 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7151
  %arena_mt = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %82, i32 0, i32 27, !dbg !7153
  %83 = load i32, i32* %a, align 4, !dbg !7154
  %idxprom = sext i32 %83 to i64, !dbg !7151
  %arrayidx = getelementptr inbounds [1 x %struct.MemArena*], [1 x %struct.MemArena*]* %arena_mt, i64 0, i64 %idxprom, !dbg !7151
  %84 = load %struct.MemArena*, %struct.MemArena** %arrayidx, align 8, !dbg !7151
  call void @BLI_memarena_free(%struct.MemArena* %84), !dbg !7155
  br label %for.inc22, !dbg !7156

for.inc22:                                        ; preds = %for.body21
  %85 = load i32, i32* %a, align 4, !dbg !7157
  %inc23 = add nsw i32 %85, 1, !dbg !7157
  store i32 %inc23, i32* %a, align 4, !dbg !7157
  br label %for.cond18, !dbg !7158, !llvm.loop !7159

for.end24:                                        ; preds = %for.cond18
  %86 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7161
  %dm = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %86, i32 0, i32 14, !dbg !7163
  %87 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7163
  %type = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %87, i32 0, i32 14, !dbg !7164
  %88 = load i32, i32* %type, align 8, !dbg !7164
  %cmp25 = icmp ne i32 %88, 0, !dbg !7165
  br i1 %cmp25, label %if.then26, label %if.end35, !dbg !7166

if.then26:                                        ; preds = %for.end24
  %89 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7167
  %dm_mvert = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %89, i32 0, i32 18, !dbg !7170
  %90 = load %struct.MVert*, %struct.MVert** %dm_mvert, align 8, !dbg !7170
  %tobool27 = icmp ne %struct.MVert* %90, null, !dbg !7167
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !7171

if.then28:                                        ; preds = %if.then26
  %91 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7172
  %92 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7173
  %dm_mvert29 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %92, i32 0, i32 18, !dbg !7174
  %93 = load %struct.MVert*, %struct.MVert** %dm_mvert29, align 8, !dbg !7174
  %94 = bitcast %struct.MVert* %93 to i8*, !dbg !7173
  call void %91(i8* %94), !dbg !7172
  br label %if.end30, !dbg !7172

if.end30:                                         ; preds = %if.then28, %if.then26
  %95 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7175
  %dm_mface = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %95, i32 0, i32 19, !dbg !7177
  %96 = load %struct.MFace*, %struct.MFace** %dm_mface, align 8, !dbg !7177
  %tobool31 = icmp ne %struct.MFace* %96, null, !dbg !7175
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !7178

if.then32:                                        ; preds = %if.end30
  %97 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7179
  %98 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7180
  %dm_mface33 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %98, i32 0, i32 19, !dbg !7181
  %99 = load %struct.MFace*, %struct.MFace** %dm_mface33, align 8, !dbg !7181
  %100 = bitcast %struct.MFace* %99 to i8*, !dbg !7180
  call void %97(i8* %100), !dbg !7179
  br label %if.end34, !dbg !7179

if.end34:                                         ; preds = %if.then32, %if.end30
  br label %if.end35, !dbg !7182

if.end35:                                         ; preds = %if.end34, %for.end24
  %101 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7183
  %dm_release = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %101, i32 0, i32 17, !dbg !7185
  %102 = load i32, i32* %dm_release, align 8, !dbg !7185
  %tobool36 = icmp ne i32 %102, 0, !dbg !7183
  br i1 %tobool36, label %if.then37, label %if.end40, !dbg !7186

if.then37:                                        ; preds = %if.end35
  %103 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7187
  %dm38 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %103, i32 0, i32 14, !dbg !7188
  %104 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm38, align 8, !dbg !7188
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %104, i32 0, i32 95, !dbg !7189
  %105 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !7189
  %106 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !7190
  %dm39 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %106, i32 0, i32 14, !dbg !7191
  %107 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm39, align 8, !dbg !7191
  call void %105(%struct.DerivedMesh* %107), !dbg !7187
  br label %if.end40, !dbg !7187

if.end40:                                         ; preds = %if.then37, %if.end35
  ret void, !dbg !7192
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @PAINT_OT_project_image(%struct.wmOperatorType* %ot) #0 !dbg !7193 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7194, metadata !DIExpression()), !dbg !7195
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !7196, metadata !DIExpression()), !dbg !7197
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7198
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7199
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i8** %name, align 8, !dbg !7200
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7201
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !7202
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8** %idname, align 8, !dbg !7203
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7204
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !7205
  store i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.3, i64 0, i64 0), i8** %description, align 8, !dbg !7206
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7207
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !7208
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_enum_search_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !7209
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7210
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !7211
  store i32 (%struct.bContext*, %struct.wmOperator*)* @texture_paint_camera_project_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7212
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7213
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7214
  store i16 3, i16* %flag, align 8, !dbg !7215
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7216
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !7217
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7217
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !7216
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @DummyRNA_NULL_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0)), !dbg !7218
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !7219
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7220
  call void @RNA_def_enum_funcs(%struct.PropertyRNA* %9, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)* @RNA_image_itemf), !dbg !7221
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7222
  call void @RNA_def_property_flag(%struct.PropertyRNA* %10, i32 536870912), !dbg !7223
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7224
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7225
  %prop1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 13, !dbg !7226
  store %struct.PropertyRNA* %11, %struct.PropertyRNA** %prop1, align 8, !dbg !7227
  ret void, !dbg !7228
}

declare dso_local i32 @WM_enum_search_invoke(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @texture_paint_camera_project_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7229 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %image = alloca %struct.Image*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ps = alloca %struct.ProjPaintState, align 8
  %orig_brush_size = alloca i32, align 4
  %idgroup = alloca %struct.IDProperty*, align 8
  %view_data = alloca %struct.IDProperty*, align 8
  %ob = alloca %struct.Object*, align 8
  %uvs = alloca i8, align 1
  %mat = alloca i8, align 1
  %tex = alloca i8, align 1
  %pos = alloca [2 x float], align 4
  %lastpos = alloca [2 x float], align 4
  %a = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7234, metadata !DIExpression()), !dbg !7235
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7236, metadata !DIExpression()), !dbg !7237
  call void @llvm.dbg.declare(metadata %struct.Image** %image, metadata !7238, metadata !DIExpression()), !dbg !7239
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7240
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !7241
  %image1 = getelementptr inbounds %struct.Main, %struct.Main* %call, i32 0, i32 19, !dbg !7242
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7243
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !7244
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7244
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)), !dbg !7245
  %call3 = call i8* @BLI_findlink(%struct.ListBase* %image1, i32 %call2), !dbg !7246
  %3 = bitcast i8* %call3 to %struct.Image*, !dbg !7246
  store %struct.Image* %3, %struct.Image** %image, align 8, !dbg !7239
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !7247, metadata !DIExpression()), !dbg !7248
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7249
  %call4 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %4), !dbg !7250
  store %struct.Scene* %call4, %struct.Scene** %scene, align 8, !dbg !7248
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState* %ps, metadata !7251, metadata !DIExpression()), !dbg !7252
  %5 = bitcast %struct.ProjPaintState* %ps to i8*, !dbg !7252
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 536, i1 false), !dbg !7252
  call void @llvm.dbg.declare(metadata i32* %orig_brush_size, metadata !7253, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idgroup, metadata !7255, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %view_data, metadata !7257, metadata !DIExpression()), !dbg !7258
  store %struct.IDProperty* null, %struct.IDProperty** %view_data, align 8, !dbg !7258
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7259, metadata !DIExpression()), !dbg !7260
  %6 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7261
  %basact = getelementptr inbounds %struct.Scene, %struct.Scene* %6, i32 0, i32 6, !dbg !7261
  %7 = load %struct.Base*, %struct.Base** %basact, align 8, !dbg !7261
  %tobool = icmp ne %struct.Base* %7, null, !dbg !7261
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7261

cond.true:                                        ; preds = %entry
  %8 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7261
  %basact5 = getelementptr inbounds %struct.Scene, %struct.Scene* %8, i32 0, i32 6, !dbg !7261
  %9 = load %struct.Base*, %struct.Base** %basact5, align 8, !dbg !7261
  %object = getelementptr inbounds %struct.Base, %struct.Base* %9, i32 0, i32 7, !dbg !7261
  %10 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !7261
  br label %cond.end, !dbg !7261

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7261

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Object* [ %10, %cond.true ], [ null, %cond.false ], !dbg !7261
  store %struct.Object* %cond, %struct.Object** %ob, align 8, !dbg !7260
  call void @llvm.dbg.declare(metadata i8* %uvs, metadata !7262, metadata !DIExpression()), !dbg !7263
  call void @llvm.dbg.declare(metadata i8* %mat, metadata !7264, metadata !DIExpression()), !dbg !7265
  call void @llvm.dbg.declare(metadata i8* %tex, metadata !7266, metadata !DIExpression()), !dbg !7267
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7268
  %cmp = icmp eq %struct.Object* %11, null, !dbg !7270
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7271

lor.lhs.false:                                    ; preds = %cond.end
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7272
  %type = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 3, !dbg !7273
  %13 = load i16, i16* %type, align 8, !dbg !7273
  %conv = sext i16 %13 to i32, !dbg !7272
  %cmp6 = icmp ne i32 %conv, 1, !dbg !7274
  br i1 %cmp6, label %if.then, label %if.end, !dbg !7275

if.then:                                          ; preds = %lor.lhs.false, %cond.end
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7276
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 8, !dbg !7278
  %15 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !7278
  call void @BKE_report(%struct.ReportList* %15, i32 32, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.63, i64 0, i64 0)), !dbg !7279
  store i32 2, i32* %retval, align 4, !dbg !7280
  br label %return, !dbg !7280

if.end:                                           ; preds = %lor.lhs.false
  %16 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7281
  %17 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7283
  %call8 = call zeroext i8 @BKE_paint_proj_mesh_data_check(%struct.Scene* %16, %struct.Object* %17, i8* %uvs, i8* %mat, i8* %tex, i8* null), !dbg !7284
  %tobool9 = icmp ne i8 %call8, 0, !dbg !7284
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !7285

if.then10:                                        ; preds = %if.end
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7286
  %reports11 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %18, i32 0, i32 8, !dbg !7288
  %19 = load %struct.ReportList*, %struct.ReportList** %reports11, align 8, !dbg !7288
  %20 = load i8, i8* %uvs, align 1, !dbg !7289
  %21 = load i8, i8* %mat, align 1, !dbg !7290
  %22 = load i8, i8* %tex, align 1, !dbg !7291
  call void @BKE_paint_data_warning(%struct.ReportList* %19, i8 zeroext %20, i8 zeroext %21, i8 zeroext %22, i8 zeroext 1), !dbg !7292
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7293
  call void @WM_event_add_notifier(%struct.bContext* %23, i32 68091904, i8* null), !dbg !7294
  store i32 2, i32* %retval, align 4, !dbg !7295
  br label %return, !dbg !7295

if.end12:                                         ; preds = %if.end
  %24 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7296
  %25 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7297
  call void @project_state_init(%struct.bContext* %24, %struct.Object* %25, %struct.ProjPaintState* %ps, i32 0), !dbg !7298
  %26 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !7299
  %cmp13 = icmp eq %struct.Image* %26, null, !dbg !7301
  br i1 %cmp13, label %if.then15, label %if.end17, !dbg !7302

if.then15:                                        ; preds = %if.end12
  %27 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7303
  %reports16 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %27, i32 0, i32 8, !dbg !7305
  %28 = load %struct.ReportList*, %struct.ReportList** %reports16, align 8, !dbg !7305
  call void @BKE_report(%struct.ReportList* %28, i32 32, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.64, i64 0, i64 0)), !dbg !7306
  store i32 2, i32* %retval, align 4, !dbg !7307
  br label %return, !dbg !7307

if.end17:                                         ; preds = %if.end12
  %29 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !7308
  %reproject_image = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %ps, i32 0, i32 72, !dbg !7309
  store %struct.Image* %29, %struct.Image** %reproject_image, align 8, !dbg !7310
  %30 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !7311
  %call18 = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %30, %struct.ImageUser* null, i8** null), !dbg !7312
  %reproject_ibuf = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %ps, i32 0, i32 73, !dbg !7313
  store %struct.ImBuf* %call18, %struct.ImBuf** %reproject_ibuf, align 8, !dbg !7314
  %reproject_ibuf19 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %ps, i32 0, i32 73, !dbg !7315
  %31 = load %struct.ImBuf*, %struct.ImBuf** %reproject_ibuf19, align 8, !dbg !7315
  %cmp20 = icmp eq %struct.ImBuf* %31, null, !dbg !7317
  br i1 %cmp20, label %if.then26, label %lor.lhs.false22, !dbg !7318

lor.lhs.false22:                                  ; preds = %if.end17
  %reproject_ibuf23 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %ps, i32 0, i32 73, !dbg !7319
  %32 = load %struct.ImBuf*, %struct.ImBuf** %reproject_ibuf23, align 8, !dbg !7319
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %32, i32 0, i32 8, !dbg !7320
  %33 = load i32*, i32** %rect, align 8, !dbg !7320
  %cmp24 = icmp eq i32* %33, null, !dbg !7321
  br i1 %cmp24, label %if.then26, label %if.end28, !dbg !7322

if.then26:                                        ; preds = %lor.lhs.false22, %if.end17
  %34 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7323
  %reports27 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %34, i32 0, i32 8, !dbg !7325
  %35 = load %struct.ReportList*, %struct.ReportList** %reports27, align 8, !dbg !7325
  call void @BKE_report(%struct.ReportList* %35, i32 32, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.65, i64 0, i64 0)), !dbg !7326
  store i32 2, i32* %retval, align 4, !dbg !7327
  br label %return, !dbg !7327

if.end28:                                         ; preds = %lor.lhs.false22
  %36 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !7328
  %id = getelementptr inbounds %struct.Image, %struct.Image* %36, i32 0, i32 0, !dbg !7329
  %call29 = call %struct.IDProperty* @IDP_GetProperties(%struct.ID* %id, i8 zeroext 0), !dbg !7330
  store %struct.IDProperty* %call29, %struct.IDProperty** %idgroup, align 8, !dbg !7331
  %37 = load %struct.IDProperty*, %struct.IDProperty** %idgroup, align 8, !dbg !7332
  %tobool30 = icmp ne %struct.IDProperty* %37, null, !dbg !7332
  br i1 %tobool30, label %if.then31, label %if.end42, !dbg !7334

if.then31:                                        ; preds = %if.end28
  %38 = load %struct.IDProperty*, %struct.IDProperty** %idgroup, align 8, !dbg !7335
  %call32 = call %struct.IDProperty* @IDP_GetPropertyTypeFromGroup(%struct.IDProperty* %38, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i64 0, i64 0), i8 zeroext 5), !dbg !7337
  store %struct.IDProperty* %call32, %struct.IDProperty** %view_data, align 8, !dbg !7338
  %39 = load %struct.IDProperty*, %struct.IDProperty** %view_data, align 8, !dbg !7339
  %len = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %39, i32 0, i32 8, !dbg !7341
  %40 = load i32, i32* %len, align 8, !dbg !7341
  %cmp33 = icmp ne i32 %40, 35, !dbg !7342
  br i1 %cmp33, label %if.then39, label %lor.lhs.false35, !dbg !7343

lor.lhs.false35:                                  ; preds = %if.then31
  %41 = load %struct.IDProperty*, %struct.IDProperty** %view_data, align 8, !dbg !7344
  %subtype = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %41, i32 0, i32 3, !dbg !7345
  %42 = load i8, i8* %subtype, align 1, !dbg !7345
  %conv36 = zext i8 %42 to i32, !dbg !7344
  %cmp37 = icmp ne i32 %conv36, 2, !dbg !7346
  br i1 %cmp37, label %if.then39, label %if.end41, !dbg !7347

if.then39:                                        ; preds = %lor.lhs.false35, %if.then31
  %43 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7348
  %reports40 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %43, i32 0, i32 8, !dbg !7350
  %44 = load %struct.ReportList*, %struct.ReportList** %reports40, align 8, !dbg !7350
  call void @BKE_report(%struct.ReportList* %44, i32 32, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.66, i64 0, i64 0)), !dbg !7351
  store i32 2, i32* %retval, align 4, !dbg !7352
  br label %return, !dbg !7352

if.end41:                                         ; preds = %lor.lhs.false35
  br label %if.end42, !dbg !7353

if.end42:                                         ; preds = %if.end41, %if.end28
  %45 = load %struct.IDProperty*, %struct.IDProperty** %view_data, align 8, !dbg !7354
  %tobool43 = icmp ne %struct.IDProperty* %45, null, !dbg !7354
  br i1 %tobool43, label %if.then44, label %if.else, !dbg !7356

if.then44:                                        ; preds = %if.end42
  %source = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %ps, i32 0, i32 4, !dbg !7357
  store i32 3, i32* %source, align 8, !dbg !7359
  br label %if.end51, !dbg !7360

if.else:                                          ; preds = %if.end42
  %source45 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %ps, i32 0, i32 4, !dbg !7361
  store i32 2, i32* %source45, align 8, !dbg !7363
  %46 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7364
  %camera = getelementptr inbounds %struct.Scene, %struct.Scene* %46, i32 0, i32 2, !dbg !7366
  %47 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !7366
  %cmp46 = icmp eq %struct.Object* %47, null, !dbg !7367
  br i1 %cmp46, label %if.then48, label %if.end50, !dbg !7368

if.then48:                                        ; preds = %if.else
  %48 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7369
  %reports49 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %48, i32 0, i32 8, !dbg !7371
  %49 = load %struct.ReportList*, %struct.ReportList** %reports49, align 8, !dbg !7371
  call void @BKE_report(%struct.ReportList* %49, i32 32, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.67, i64 0, i64 0)), !dbg !7372
  store i32 2, i32* %retval, align 4, !dbg !7373
  br label %return, !dbg !7373

if.end50:                                         ; preds = %if.else
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then44
  %is_texbrush = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %ps, i32 0, i32 63, !dbg !7374
  store i8 0, i8* %is_texbrush, align 1, !dbg !7375
  %is_maskbrush = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %ps, i32 0, i32 64, !dbg !7376
  store i8 0, i8* %is_maskbrush, align 4, !dbg !7377
  %do_masking = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %ps, i32 0, i32 62, !dbg !7378
  store i8 0, i8* %do_masking, align 2, !dbg !7379
  %50 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7380
  %brush = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %ps, i32 0, i32 7, !dbg !7381
  %51 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7381
  %call52 = call i32 @BKE_brush_size_get(%struct.Scene* %50, %struct.Brush* %51), !dbg !7382
  store i32 %call52, i32* %orig_brush_size, align 4, !dbg !7383
  %52 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7384
  %brush53 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %ps, i32 0, i32 7, !dbg !7385
  %53 = load %struct.Brush*, %struct.Brush** %brush53, align 8, !dbg !7385
  call void @BKE_brush_size_set(%struct.Scene* %52, %struct.Brush* %53, i32 32), !dbg !7386
  %tool = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %ps, i32 0, i32 8, !dbg !7387
  store i16 0, i16* %tool, align 8, !dbg !7388
  %54 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7389
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %54, i32 0, i32 20, !dbg !7390
  %55 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !7390
  %imapaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %55, i32 0, i32 17, !dbg !7391
  %flag = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint, i32 0, i32 1, !dbg !7392
  %56 = load i16, i16* %flag, align 8, !dbg !7393
  %conv54 = sext i16 %56 to i32, !dbg !7393
  %or = or i32 %conv54, 1, !dbg !7393
  %conv55 = trunc i32 %or to i16, !dbg !7393
  store i16 %conv55, i16* %flag, align 8, !dbg !7393
  %57 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7394
  %type56 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %57, i32 0, i32 4, !dbg !7395
  %58 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type56, align 8, !dbg !7395
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %58, i32 0, i32 0, !dbg !7396
  %59 = load i8*, i8** %name, align 8, !dbg !7396
  call void @ED_undo_paint_push_begin(i32 0, i8* %59, void (%struct.bContext*, %struct.ListBase*)* @ED_image_undo_restore, void (%struct.ListBase*)* @ED_image_undo_free, i8 (%struct.bContext*, %struct.ListBase*)* null), !dbg !7397
  call void @project_paint_begin(%struct.ProjPaintState* %ps), !dbg !7398
  %dm = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %ps, i32 0, i32 14, !dbg !7399
  %60 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7399
  %cmp57 = icmp eq %struct.DerivedMesh* %60, null, !dbg !7401
  br i1 %cmp57, label %if.then59, label %if.else61, !dbg !7402

if.then59:                                        ; preds = %if.end51
  %61 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7403
  %brush60 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %ps, i32 0, i32 7, !dbg !7405
  %62 = load %struct.Brush*, %struct.Brush** %brush60, align 8, !dbg !7405
  %63 = load i32, i32* %orig_brush_size, align 4, !dbg !7406
  call void @BKE_brush_size_set(%struct.Scene* %61, %struct.Brush* %62, i32 %63), !dbg !7407
  store i32 2, i32* %retval, align 4, !dbg !7408
  br label %return, !dbg !7408

if.else61:                                        ; preds = %if.end51
  call void @llvm.dbg.declare(metadata [2 x float]* %pos, metadata !7409, metadata !DIExpression()), !dbg !7411
  %64 = bitcast [2 x float]* %pos to i8*, !dbg !7411
  call void @llvm.memset.p0i8.i64(i8* align 4 %64, i8 0, i64 8, i1 false), !dbg !7411
  call void @llvm.dbg.declare(metadata [2 x float]* %lastpos, metadata !7412, metadata !DIExpression()), !dbg !7413
  %65 = bitcast [2 x float]* %lastpos to i8*, !dbg !7413
  call void @llvm.memset.p0i8.i64(i8* align 4 %65, i8 0, i64 8, i1 false), !dbg !7413
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7414, metadata !DIExpression()), !dbg !7415
  store i32 0, i32* %a, align 4, !dbg !7416
  br label %for.cond, !dbg !7418

for.cond:                                         ; preds = %for.inc, %if.else61
  %66 = load i32, i32* %a, align 4, !dbg !7419
  %image_tot = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %ps, i32 0, i32 40, !dbg !7421
  %67 = load i32, i32* %image_tot, align 4, !dbg !7421
  %cmp62 = icmp slt i32 %66, %67, !dbg !7422
  br i1 %cmp62, label %for.body, label %for.end, !dbg !7423

for.body:                                         ; preds = %for.cond
  %projImages = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %ps, i32 0, i32 38, !dbg !7424
  %68 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages, align 8, !dbg !7424
  %69 = load i32, i32* %a, align 4, !dbg !7425
  %idxprom = sext i32 %69 to i64, !dbg !7426
  %arrayidx = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %68, i64 %idxprom, !dbg !7426
  %partRedrawRect = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %arrayidx, i32 0, i32 2, !dbg !7427
  %70 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %partRedrawRect, align 8, !dbg !7427
  call void @partial_redraw_array_init(%struct.ImagePaintPartialRedraw* %70), !dbg !7428
  br label %for.inc, !dbg !7428

for.inc:                                          ; preds = %for.body
  %71 = load i32, i32* %a, align 4, !dbg !7429
  %inc = add nsw i32 %71, 1, !dbg !7429
  store i32 %inc, i32* %a, align 4, !dbg !7429
  br label %for.cond, !dbg !7430, !llvm.loop !7431

for.end:                                          ; preds = %for.cond
  %72 = bitcast %struct.ProjPaintState* %ps to i8*, !dbg !7433
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %lastpos, i64 0, i64 0, !dbg !7434
  %arraydecay64 = getelementptr inbounds [2 x float], [2 x float]* %pos, i64 0, i64 0, !dbg !7435
  %call65 = call zeroext i8 @project_paint_op(i8* %72, float* %arraydecay, float* %arraydecay64), !dbg !7436
  %call66 = call zeroext i8 @project_image_refresh_tagged(%struct.ProjPaintState* %ps), !dbg !7437
  store i32 0, i32* %a, align 4, !dbg !7438
  br label %for.cond67, !dbg !7440

for.cond67:                                       ; preds = %for.inc79, %for.end
  %73 = load i32, i32* %a, align 4, !dbg !7441
  %image_tot68 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %ps, i32 0, i32 40, !dbg !7443
  %74 = load i32, i32* %image_tot68, align 4, !dbg !7443
  %cmp69 = icmp slt i32 %73, %74, !dbg !7444
  br i1 %cmp69, label %for.body71, label %for.end81, !dbg !7445

for.body71:                                       ; preds = %for.cond67
  %projImages72 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %ps, i32 0, i32 38, !dbg !7446
  %75 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages72, align 8, !dbg !7446
  %76 = load i32, i32* %a, align 4, !dbg !7448
  %idxprom73 = sext i32 %76 to i64, !dbg !7449
  %arrayidx74 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %75, i64 %idxprom73, !dbg !7449
  %ima = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %arrayidx74, i32 0, i32 0, !dbg !7450
  %77 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7450
  call void @GPU_free_image(%struct.Image* %77), !dbg !7451
  %78 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7452
  %projImages75 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %ps, i32 0, i32 38, !dbg !7453
  %79 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages75, align 8, !dbg !7453
  %80 = load i32, i32* %a, align 4, !dbg !7454
  %idxprom76 = sext i32 %80 to i64, !dbg !7455
  %arrayidx77 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %79, i64 %idxprom76, !dbg !7455
  %ima78 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %arrayidx77, i32 0, i32 0, !dbg !7456
  %81 = load %struct.Image*, %struct.Image** %ima78, align 8, !dbg !7456
  %82 = bitcast %struct.Image* %81 to i8*, !dbg !7455
  call void @WM_event_add_notifier(%struct.bContext* %78, i32 167772161, i8* %82), !dbg !7457
  br label %for.inc79, !dbg !7458

for.inc79:                                        ; preds = %for.body71
  %83 = load i32, i32* %a, align 4, !dbg !7459
  %inc80 = add nsw i32 %83, 1, !dbg !7459
  store i32 %inc80, i32* %a, align 4, !dbg !7459
  br label %for.cond67, !dbg !7460, !llvm.loop !7461

for.end81:                                        ; preds = %for.cond67
  br label %if.end82

if.end82:                                         ; preds = %for.end81
  call void @project_paint_end(%struct.ProjPaintState* %ps), !dbg !7463
  %84 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7464
  %toolsettings83 = getelementptr inbounds %struct.Scene, %struct.Scene* %84, i32 0, i32 20, !dbg !7465
  %85 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings83, align 8, !dbg !7465
  %imapaint84 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %85, i32 0, i32 17, !dbg !7466
  %flag85 = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint84, i32 0, i32 1, !dbg !7467
  %86 = load i16, i16* %flag85, align 8, !dbg !7468
  %conv86 = sext i16 %86 to i32, !dbg !7468
  %and = and i32 %conv86, -2, !dbg !7468
  %conv87 = trunc i32 %and to i16, !dbg !7468
  store i16 %conv87, i16* %flag85, align 8, !dbg !7468
  %87 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7469
  %brush88 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %ps, i32 0, i32 7, !dbg !7470
  %88 = load %struct.Brush*, %struct.Brush** %brush88, align 8, !dbg !7470
  %89 = load i32, i32* %orig_brush_size, align 4, !dbg !7471
  call void @BKE_brush_size_set(%struct.Scene* %87, %struct.Brush* %88, i32 %89), !dbg !7472
  store i32 4, i32* %retval, align 4, !dbg !7473
  br label %return, !dbg !7473

return:                                           ; preds = %if.end82, %if.then59, %if.then48, %if.then39, %if.then26, %if.then15, %if.then10, %if.then
  %90 = load i32, i32* %retval, align 4, !dbg !7474
  ret i32 %90, !dbg !7474
}

declare dso_local %struct.PropertyRNA* @RNA_def_enum(i8*, i8*, %struct.EnumPropertyItem*, i32, i8*, i8*) #2

declare dso_local void @RNA_def_enum_funcs(%struct.PropertyRNA*, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)*) #2

declare dso_local %struct.EnumPropertyItem* @RNA_image_itemf(%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*) #2

declare dso_local void @RNA_def_property_flag(%struct.PropertyRNA*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @PAINT_OT_image_from_view(%struct.wmOperatorType* %ot) #0 !dbg !7475 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7476, metadata !DIExpression()), !dbg !7477
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7478
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7479
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i8** %name, align 8, !dbg !7480
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7481
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !7482
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i8** %idname, align 8, !dbg !7483
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7484
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !7485
  store i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.9, i64 0, i64 0), i8** %description, align 8, !dbg !7486
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7487
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7488
  store i32 (%struct.bContext*, %struct.wmOperator*)* @texture_paint_image_from_view_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7489
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7490
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7491
  store i32 (%struct.bContext*)* @ED_operator_region_view3d_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !7492
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7493
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7494
  store i16 1, i16* %flag, align 8, !dbg !7495
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7496
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !7497
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7497
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !7496
  %call = call %struct.PropertyRNA* @RNA_def_string_file_name(i8* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i8* null, i32 1024, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)), !dbg !7498
  ret void, !dbg !7499
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @texture_paint_image_from_view_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7500 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %image = alloca %struct.Image*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %filename = alloca [1024 x i8], align 16
  %scene = alloca %struct.Scene*, align 8
  %settings = alloca %struct.ToolSettings*, align 8
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %maxsize = alloca i32, align 4
  %err_out = alloca [256 x i8], align 16
  %v3d = alloca %struct.View3D*, align 8
  %rv3d = alloca %struct.RegionView3D*, align 8
  %val = alloca %union.IDPropertyTemplate, align 8
  %idgroup = alloca %struct.IDProperty*, align 8
  %view_data = alloca %struct.IDProperty*, align 8
  %is_ortho = alloca i8, align 1
  %array = alloca float*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7501, metadata !DIExpression()), !dbg !7502
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7503, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.declare(metadata %struct.Image** %image, metadata !7505, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !7507, metadata !DIExpression()), !dbg !7508
  call void @llvm.dbg.declare(metadata [1024 x i8]* %filename, metadata !7509, metadata !DIExpression()), !dbg !7510
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !7511, metadata !DIExpression()), !dbg !7512
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7513
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !7514
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !7512
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %settings, metadata !7515, metadata !DIExpression()), !dbg !7516
  %1 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7517
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %1, i32 0, i32 20, !dbg !7518
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !7518
  store %struct.ToolSettings* %2, %struct.ToolSettings** %settings, align 8, !dbg !7516
  call void @llvm.dbg.declare(metadata i32* %w, metadata !7519, metadata !DIExpression()), !dbg !7520
  %3 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !7521
  %imapaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %3, i32 0, i32 17, !dbg !7522
  %screen_grab_size = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint, i32 0, i32 5, !dbg !7523
  %arrayidx = getelementptr inbounds [2 x i16], [2 x i16]* %screen_grab_size, i64 0, i64 0, !dbg !7521
  %4 = load i16, i16* %arrayidx, align 8, !dbg !7521
  %conv = sext i16 %4 to i32, !dbg !7521
  store i32 %conv, i32* %w, align 4, !dbg !7520
  call void @llvm.dbg.declare(metadata i32* %h, metadata !7524, metadata !DIExpression()), !dbg !7525
  %5 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !7526
  %imapaint1 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %5, i32 0, i32 17, !dbg !7527
  %screen_grab_size2 = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint1, i32 0, i32 5, !dbg !7528
  %arrayidx3 = getelementptr inbounds [2 x i16], [2 x i16]* %screen_grab_size2, i64 0, i64 1, !dbg !7526
  %6 = load i16, i16* %arrayidx3, align 2, !dbg !7526
  %conv4 = sext i16 %6 to i32, !dbg !7526
  store i32 %conv4, i32* %h, align 4, !dbg !7525
  call void @llvm.dbg.declare(metadata i32* %maxsize, metadata !7529, metadata !DIExpression()), !dbg !7530
  call void @llvm.dbg.declare(metadata [256 x i8]* %err_out, metadata !7531, metadata !DIExpression()), !dbg !7532
  %7 = bitcast [256 x i8]* %err_out to i8*, !dbg !7532
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 16 getelementptr inbounds ([256 x i8], [256 x i8]* @__const.texture_paint_image_from_view_exec.err_out, i32 0, i32 0), i64 256, i1 false), !dbg !7532
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7533
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !7534
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7534
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %filename, i64 0, i64 0, !dbg !7535
  call void @RNA_string_get(%struct.PointerRNA* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i8* %arraydecay), !dbg !7536
  %call5 = call i32 @GPU_max_texture_size(), !dbg !7537
  store i32 %call5, i32* %maxsize, align 4, !dbg !7538
  %10 = load i32, i32* %w, align 4, !dbg !7539
  %11 = load i32, i32* %maxsize, align 4, !dbg !7541
  %cmp = icmp sgt i32 %10, %11, !dbg !7542
  br i1 %cmp, label %if.then, label %if.end, !dbg !7543

if.then:                                          ; preds = %entry
  %12 = load i32, i32* %maxsize, align 4, !dbg !7544
  store i32 %12, i32* %w, align 4, !dbg !7545
  br label %if.end, !dbg !7546

if.end:                                           ; preds = %if.then, %entry
  %13 = load i32, i32* %h, align 4, !dbg !7547
  %14 = load i32, i32* %maxsize, align 4, !dbg !7549
  %cmp7 = icmp sgt i32 %13, %14, !dbg !7550
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !7551

if.then9:                                         ; preds = %if.end
  %15 = load i32, i32* %maxsize, align 4, !dbg !7552
  store i32 %15, i32* %h, align 4, !dbg !7553
  br label %if.end10, !dbg !7554

if.end10:                                         ; preds = %if.then9, %if.end
  %16 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7555
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7556
  %call11 = call %struct.View3D* @CTX_wm_view3d(%struct.bContext* %17), !dbg !7557
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7558
  %call12 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %18), !dbg !7559
  %19 = load i32, i32* %w, align 4, !dbg !7560
  %20 = load i32, i32* %h, align 4, !dbg !7561
  %arraydecay13 = getelementptr inbounds [256 x i8], [256 x i8]* %err_out, i64 0, i64 0, !dbg !7562
  %call14 = call %struct.ImBuf* @ED_view3d_draw_offscreen_imbuf(%struct.Scene* %16, %struct.View3D* %call11, %struct.ARegion* %call12, i32 %19, i32 %20, i32 1, i8 zeroext 0, i32 1, i8* %arraydecay13), !dbg !7563
  store %struct.ImBuf* %call14, %struct.ImBuf** %ibuf, align 8, !dbg !7564
  %21 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7565
  %tobool = icmp ne %struct.ImBuf* %21, null, !dbg !7565
  br i1 %tobool, label %if.end17, label %if.then15, !dbg !7567

if.then15:                                        ; preds = %if.end10
  %22 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7568
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %22, i32 0, i32 8, !dbg !7570
  %23 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !7570
  %arraydecay16 = getelementptr inbounds [256 x i8], [256 x i8]* %err_out, i64 0, i64 0, !dbg !7571
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %23, i32 32, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.68, i64 0, i64 0), i8* %arraydecay16), !dbg !7572
  store i32 2, i32* %retval, align 4, !dbg !7573
  br label %return, !dbg !7573

if.end17:                                         ; preds = %if.end10
  %24 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7574
  %call18 = call %struct.Image* @BKE_image_add_from_imbuf(%struct.ImBuf* %24), !dbg !7575
  store %struct.Image* %call18, %struct.Image** %image, align 8, !dbg !7576
  %25 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !7577
  %tobool19 = icmp ne %struct.Image* %25, null, !dbg !7577
  br i1 %tobool19, label %if.then20, label %if.end38, !dbg !7579

if.then20:                                        ; preds = %if.end17
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d, metadata !7580, metadata !DIExpression()), !dbg !7582
  %26 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7583
  %call21 = call %struct.View3D* @CTX_wm_view3d(%struct.bContext* %26), !dbg !7584
  store %struct.View3D* %call21, %struct.View3D** %v3d, align 8, !dbg !7582
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !7585, metadata !DIExpression()), !dbg !7586
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7587
  %call22 = call %struct.RegionView3D* @CTX_wm_region_view3d(%struct.bContext* %27), !dbg !7588
  store %struct.RegionView3D* %call22, %struct.RegionView3D** %rv3d, align 8, !dbg !7586
  call void @llvm.dbg.declare(metadata %union.IDPropertyTemplate* %val, metadata !7589, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idgroup, metadata !7615, metadata !DIExpression()), !dbg !7616
  %28 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !7617
  %id = getelementptr inbounds %struct.Image, %struct.Image* %28, i32 0, i32 0, !dbg !7618
  %call23 = call %struct.IDProperty* @IDP_GetProperties(%struct.ID* %id, i8 zeroext 1), !dbg !7619
  store %struct.IDProperty* %call23, %struct.IDProperty** %idgroup, align 8, !dbg !7616
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %view_data, metadata !7620, metadata !DIExpression()), !dbg !7621
  call void @llvm.dbg.declare(metadata i8* %is_ortho, metadata !7622, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.declare(metadata float** %array, metadata !7624, metadata !DIExpression()), !dbg !7625
  %array24 = bitcast %union.IDPropertyTemplate* %val to %struct.anon.1*, !dbg !7626
  %len = getelementptr inbounds %struct.anon.1, %struct.anon.1* %array24, i32 0, i32 1, !dbg !7627
  store i16 35, i16* %len, align 2, !dbg !7628
  %array25 = bitcast %union.IDPropertyTemplate* %val to %struct.anon.1*, !dbg !7629
  %type = getelementptr inbounds %struct.anon.1, %struct.anon.1* %array25, i32 0, i32 0, !dbg !7630
  store i16 2, i16* %type, align 8, !dbg !7631
  %call26 = call %struct.IDProperty* @IDP_New(i32 5, %union.IDPropertyTemplate* %val, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i64 0, i64 0)), !dbg !7632
  store %struct.IDProperty* %call26, %struct.IDProperty** %view_data, align 8, !dbg !7633
  %29 = load %struct.IDProperty*, %struct.IDProperty** %view_data, align 8, !dbg !7634
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %29, i32 0, i32 7, !dbg !7634
  %pointer = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 0, !dbg !7634
  %30 = load i8*, i8** %pointer, align 8, !dbg !7634
  %31 = bitcast i8* %30 to float*, !dbg !7635
  store float* %31, float** %array, align 8, !dbg !7636
  %32 = load float*, float** %array, align 8, !dbg !7637
  %33 = bitcast float* %32 to i8*, !dbg !7638
  %34 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !7639
  %winmat = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %34, i32 0, i32 0, !dbg !7640
  %arraydecay27 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !7638
  %35 = bitcast [4 x float]* %arraydecay27 to i8*, !dbg !7638
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 8 %35, i64 64, i1 false), !dbg !7638
  %36 = load float*, float** %array, align 8, !dbg !7641
  %add.ptr = getelementptr inbounds float, float* %36, i64 16, !dbg !7641
  store float* %add.ptr, float** %array, align 8, !dbg !7641
  %37 = load float*, float** %array, align 8, !dbg !7642
  %38 = bitcast float* %37 to i8*, !dbg !7643
  %39 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !7644
  %viewmat = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %39, i32 0, i32 1, !dbg !7645
  %arraydecay28 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !7643
  %40 = bitcast [4 x float]* %arraydecay28 to i8*, !dbg !7643
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 8 %40, i64 64, i1 false), !dbg !7643
  %41 = load float*, float** %array, align 8, !dbg !7646
  %add.ptr29 = getelementptr inbounds float, float* %41, i64 16, !dbg !7646
  store float* %add.ptr29, float** %array, align 8, !dbg !7646
  %42 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7647
  %43 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !7648
  %44 = load float*, float** %array, align 8, !dbg !7649
  %arrayidx30 = getelementptr inbounds float, float* %44, i64 0, !dbg !7649
  %45 = load float*, float** %array, align 8, !dbg !7650
  %arrayidx31 = getelementptr inbounds float, float* %45, i64 1, !dbg !7650
  %call32 = call zeroext i8 @ED_view3d_clip_range_get(%struct.View3D* %42, %struct.RegionView3D* %43, float* %arrayidx30, float* %arrayidx31, i8 zeroext 1), !dbg !7651
  store i8 %call32, i8* %is_ortho, align 1, !dbg !7652
  %46 = load i8, i8* %is_ortho, align 1, !dbg !7653
  %conv33 = zext i8 %46 to i32, !dbg !7653
  %tobool34 = icmp ne i32 %conv33, 0, !dbg !7653
  %47 = zext i1 %tobool34 to i64, !dbg !7653
  %cond = select i1 %tobool34, float 1.000000e+00, float 0.000000e+00, !dbg !7653
  %48 = load float*, float** %array, align 8, !dbg !7654
  %arrayidx35 = getelementptr inbounds float, float* %48, i64 2, !dbg !7654
  store float %cond, float* %arrayidx35, align 4, !dbg !7655
  %49 = load %struct.IDProperty*, %struct.IDProperty** %idgroup, align 8, !dbg !7656
  %50 = load %struct.IDProperty*, %struct.IDProperty** %view_data, align 8, !dbg !7657
  %call36 = call zeroext i8 @IDP_AddToGroup(%struct.IDProperty* %49, %struct.IDProperty* %50), !dbg !7658
  %51 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !7659
  %id37 = getelementptr inbounds %struct.Image, %struct.Image* %51, i32 0, i32 0, !dbg !7660
  call void @rename_id(%struct.ID* %id37, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.69, i64 0, i64 0)), !dbg !7661
  br label %if.end38, !dbg !7662

if.end38:                                         ; preds = %if.then20, %if.end17
  store i32 4, i32* %retval, align 4, !dbg !7663
  br label %return, !dbg !7663

return:                                           ; preds = %if.end38, %if.then15
  %52 = load i32, i32* %retval, align 4, !dbg !7664
  ret i32 %52, !dbg !7664
}

declare dso_local i32 @ED_operator_region_view3d_active(%struct.bContext*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_string_file_name(i8*, i8*, i8*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_paint_data_warning(%struct.ReportList* %reports, i8 zeroext %uvs, i8 zeroext %mat, i8 zeroext %tex, i8 zeroext %stencil) #0 !dbg !7665 {
entry:
  %reports.addr = alloca %struct.ReportList*, align 8
  %uvs.addr = alloca i8, align 1
  %mat.addr = alloca i8, align 1
  %tex.addr = alloca i8, align 1
  %stencil.addr = alloca i8, align 1
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !7668, metadata !DIExpression()), !dbg !7669
  store i8 %uvs, i8* %uvs.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %uvs.addr, metadata !7670, metadata !DIExpression()), !dbg !7671
  store i8 %mat, i8* %mat.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %mat.addr, metadata !7672, metadata !DIExpression()), !dbg !7673
  store i8 %tex, i8* %tex.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %tex.addr, metadata !7674, metadata !DIExpression()), !dbg !7675
  store i8 %stencil, i8* %stencil.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %stencil.addr, metadata !7676, metadata !DIExpression()), !dbg !7677
  %0 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !7678
  %1 = load i8, i8* %uvs.addr, align 1, !dbg !7679
  %tobool = icmp ne i8 %1, 0, !dbg !7680
  %lnot = xor i1 %tobool, true, !dbg !7680
  %2 = zext i1 %lnot to i64, !dbg !7680
  %cond = select i1 %lnot, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), !dbg !7680
  %3 = load i8, i8* %mat.addr, align 1, !dbg !7681
  %tobool1 = icmp ne i8 %3, 0, !dbg !7682
  %lnot2 = xor i1 %tobool1, true, !dbg !7682
  %4 = zext i1 %lnot2 to i64, !dbg !7682
  %cond3 = select i1 %lnot2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), !dbg !7682
  %5 = load i8, i8* %tex.addr, align 1, !dbg !7683
  %tobool4 = icmp ne i8 %5, 0, !dbg !7684
  %lnot5 = xor i1 %tobool4, true, !dbg !7684
  %6 = zext i1 %lnot5 to i64, !dbg !7684
  %cond6 = select i1 %lnot5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), !dbg !7684
  %7 = load i8, i8* %stencil.addr, align 1, !dbg !7685
  %tobool7 = icmp ne i8 %7, 0, !dbg !7686
  %lnot8 = xor i1 %tobool7, true, !dbg !7686
  %8 = zext i1 %lnot8 to i64, !dbg !7686
  %cond9 = select i1 %lnot8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), !dbg !7686
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %0, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0), i8* %cond, i8* %cond3, i8* %cond6, i8* %cond9), !dbg !7687
  ret void, !dbg !7688
}

declare dso_local void @BKE_reportf(%struct.ReportList*, i32, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_paint_proj_mesh_data_check(%struct.Scene* %scene, %struct.Object* %ob, i8* %uvs, i8* %mat, i8* %tex, i8* %stencil) #0 !dbg !7689 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %uvs.addr = alloca i8*, align 8
  %mat.addr = alloca i8*, align 8
  %tex.addr = alloca i8*, align 8
  %stencil.addr = alloca i8*, align 8
  %me = alloca %struct.Mesh*, align 8
  %layernum = alloca i32, align 4
  %imapaint = alloca %struct.ImagePaintSettings*, align 8
  %br = alloca %struct.Brush*, align 8
  %hasmat = alloca i8, align 1
  %hastex = alloca i8, align 1
  %hasstencil = alloca i8, align 1
  %hasuvs = alloca i8, align 1
  %i = alloca i32, align 4
  %ma = alloca %struct.Material*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7692, metadata !DIExpression()), !dbg !7693
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7694, metadata !DIExpression()), !dbg !7695
  store i8* %uvs, i8** %uvs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uvs.addr, metadata !7696, metadata !DIExpression()), !dbg !7697
  store i8* %mat, i8** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mat.addr, metadata !7698, metadata !DIExpression()), !dbg !7699
  store i8* %tex, i8** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tex.addr, metadata !7700, metadata !DIExpression()), !dbg !7701
  store i8* %stencil, i8** %stencil.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stencil.addr, metadata !7702, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !7704, metadata !DIExpression()), !dbg !7705
  call void @llvm.dbg.declare(metadata i32* %layernum, metadata !7706, metadata !DIExpression()), !dbg !7707
  call void @llvm.dbg.declare(metadata %struct.ImagePaintSettings** %imapaint, metadata !7708, metadata !DIExpression()), !dbg !7711
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7712
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 20, !dbg !7713
  %1 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !7713
  %imapaint1 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %1, i32 0, i32 17, !dbg !7714
  store %struct.ImagePaintSettings* %imapaint1, %struct.ImagePaintSettings** %imapaint, align 8, !dbg !7711
  call void @llvm.dbg.declare(metadata %struct.Brush** %br, metadata !7715, metadata !DIExpression()), !dbg !7716
  %2 = load %struct.ImagePaintSettings*, %struct.ImagePaintSettings** %imapaint, align 8, !dbg !7717
  %paint = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %2, i32 0, i32 0, !dbg !7718
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !7719
  store %struct.Brush* %call, %struct.Brush** %br, align 8, !dbg !7716
  call void @llvm.dbg.declare(metadata i8* %hasmat, metadata !7720, metadata !DIExpression()), !dbg !7721
  store i8 1, i8* %hasmat, align 1, !dbg !7721
  call void @llvm.dbg.declare(metadata i8* %hastex, metadata !7722, metadata !DIExpression()), !dbg !7723
  store i8 1, i8* %hastex, align 1, !dbg !7723
  call void @llvm.dbg.declare(metadata i8* %hasstencil, metadata !7724, metadata !DIExpression()), !dbg !7725
  store i8 1, i8* %hasstencil, align 1, !dbg !7725
  call void @llvm.dbg.declare(metadata i8* %hasuvs, metadata !7726, metadata !DIExpression()), !dbg !7727
  store i8 1, i8* %hasuvs, align 1, !dbg !7727
  %3 = load %struct.ImagePaintSettings*, %struct.ImagePaintSettings** %imapaint, align 8, !dbg !7728
  %missing_data = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %3, i32 0, i32 2, !dbg !7729
  store i16 0, i16* %missing_data, align 2, !dbg !7730
  %4 = load %struct.ImagePaintSettings*, %struct.ImagePaintSettings** %imapaint, align 8, !dbg !7731
  %mode = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %4, i32 0, i32 6, !dbg !7733
  %5 = load i32, i32* %mode, align 4, !dbg !7733
  %cmp = icmp eq i32 %5, 0, !dbg !7734
  br i1 %cmp, label %if.then, label %if.else17, !dbg !7735

if.then:                                          ; preds = %entry
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7736
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 31, !dbg !7739
  %7 = load i32, i32* %totcol, align 8, !dbg !7739
  %cmp2 = icmp eq i32 %7, 0, !dbg !7740
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !7741

if.then3:                                         ; preds = %if.then
  store i8 0, i8* %hasmat, align 1, !dbg !7742
  store i8 0, i8* %hastex, align 1, !dbg !7744
  br label %if.end16, !dbg !7745

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7746, metadata !DIExpression()), !dbg !7748
  store i8 0, i8* %hasmat, align 1, !dbg !7749
  store i8 0, i8* %hastex, align 1, !dbg !7750
  store i32 1, i32* %i, align 4, !dbg !7751
  br label %for.cond, !dbg !7753

for.cond:                                         ; preds = %for.inc, %if.else
  %8 = load i32, i32* %i, align 4, !dbg !7754
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7756
  %totcol4 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 31, !dbg !7757
  %10 = load i32, i32* %totcol4, align 8, !dbg !7757
  %add = add nsw i32 %10, 1, !dbg !7758
  %cmp5 = icmp slt i32 %8, %add, !dbg !7759
  br i1 %cmp5, label %for.body, label %for.end, !dbg !7760

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !7761, metadata !DIExpression()), !dbg !7765
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7766
  %12 = load i32, i32* %i, align 4, !dbg !7767
  %conv = trunc i32 %12 to i16, !dbg !7767
  %call6 = call %struct.Material* @give_current_material(%struct.Object* %11, i16 signext %conv), !dbg !7768
  store %struct.Material* %call6, %struct.Material** %ma, align 8, !dbg !7765
  %13 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7769
  %tobool = icmp ne %struct.Material* %13, null, !dbg !7769
  br i1 %tobool, label %if.then7, label %if.end15, !dbg !7771

if.then7:                                         ; preds = %for.body
  store i8 1, i8* %hasmat, align 1, !dbg !7772
  %14 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7774
  %texpaintslot = getelementptr inbounds %struct.Material, %struct.Material* %14, i32 0, i32 135, !dbg !7776
  %15 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %texpaintslot, align 8, !dbg !7776
  %tobool8 = icmp ne %struct.TexPaintSlot* %15, null, !dbg !7774
  br i1 %tobool8, label %if.else13, label %if.then9, !dbg !7777

if.then9:                                         ; preds = %if.then7
  %16 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7778
  %17 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7780
  call void @BKE_texpaint_slot_refresh_cache(%struct.Scene* %16, %struct.Material* %17), !dbg !7781
  %18 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7782
  %texpaintslot10 = getelementptr inbounds %struct.Material, %struct.Material* %18, i32 0, i32 135, !dbg !7784
  %19 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %texpaintslot10, align 8, !dbg !7784
  %tobool11 = icmp ne %struct.TexPaintSlot* %19, null, !dbg !7782
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !7785

if.then12:                                        ; preds = %if.then9
  store i8 1, i8* %hastex, align 1, !dbg !7786
  br label %for.end, !dbg !7788

if.end:                                           ; preds = %if.then9
  br label %if.end14, !dbg !7789

if.else13:                                        ; preds = %if.then7
  store i8 1, i8* %hastex, align 1, !dbg !7790
  br label %for.end, !dbg !7792

if.end14:                                         ; preds = %if.end
  br label %if.end15, !dbg !7793

if.end15:                                         ; preds = %if.end14, %for.body
  br label %for.inc, !dbg !7794

for.inc:                                          ; preds = %if.end15
  %20 = load i32, i32* %i, align 4, !dbg !7795
  %inc = add nsw i32 %20, 1, !dbg !7795
  store i32 %inc, i32* %i, align 4, !dbg !7795
  br label %for.cond, !dbg !7796, !llvm.loop !7797

for.end:                                          ; preds = %if.else13, %if.then12, %for.cond
  br label %if.end16

if.end16:                                         ; preds = %for.end, %if.then3
  br label %if.end27, !dbg !7799

if.else17:                                        ; preds = %entry
  %21 = load %struct.ImagePaintSettings*, %struct.ImagePaintSettings** %imapaint, align 8, !dbg !7800
  %mode18 = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %21, i32 0, i32 6, !dbg !7802
  %22 = load i32, i32* %mode18, align 4, !dbg !7802
  %cmp19 = icmp eq i32 %22, 1, !dbg !7803
  br i1 %cmp19, label %if.then21, label %if.end26, !dbg !7804

if.then21:                                        ; preds = %if.else17
  %23 = load %struct.ImagePaintSettings*, %struct.ImagePaintSettings** %imapaint, align 8, !dbg !7805
  %canvas = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %23, i32 0, i32 10, !dbg !7808
  %24 = load %struct.Image*, %struct.Image** %canvas, align 8, !dbg !7808
  %cmp22 = icmp eq %struct.Image* %24, null, !dbg !7809
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !7810

if.then24:                                        ; preds = %if.then21
  store i8 0, i8* %hastex, align 1, !dbg !7811
  br label %if.end25, !dbg !7813

if.end25:                                         ; preds = %if.then24, %if.then21
  br label %if.end26, !dbg !7814

if.end26:                                         ; preds = %if.end25, %if.else17
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end16
  %25 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7815
  %call28 = call %struct.Mesh* @BKE_mesh_from_object(%struct.Object* %25), !dbg !7816
  store %struct.Mesh* %call28, %struct.Mesh** %me, align 8, !dbg !7817
  %26 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7818
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %26, i32 0, i32 24, !dbg !7819
  %call29 = call i32 @CustomData_number_of_layers(%struct.CustomData* %pdata, i32 15), !dbg !7820
  store i32 %call29, i32* %layernum, align 4, !dbg !7821
  %27 = load i32, i32* %layernum, align 4, !dbg !7822
  %cmp30 = icmp eq i32 %27, 0, !dbg !7824
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !7825

if.then32:                                        ; preds = %if.end27
  store i8 0, i8* %hasuvs, align 1, !dbg !7826
  br label %if.end33, !dbg !7828

if.end33:                                         ; preds = %if.then32, %if.end27
  %28 = load %struct.Brush*, %struct.Brush** %br, align 8, !dbg !7829
  %tobool34 = icmp ne %struct.Brush* %28, null, !dbg !7829
  br i1 %tobool34, label %land.lhs.true, label %if.end46, !dbg !7831

land.lhs.true:                                    ; preds = %if.end33
  %29 = load %struct.Brush*, %struct.Brush** %br, align 8, !dbg !7832
  %imagepaint_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %29, i32 0, i32 36, !dbg !7833
  %30 = load i8, i8* %imagepaint_tool, align 2, !dbg !7833
  %conv35 = zext i8 %30 to i32, !dbg !7832
  %cmp36 = icmp eq i32 %conv35, 5, !dbg !7834
  br i1 %cmp36, label %if.then38, label %if.end46, !dbg !7835

if.then38:                                        ; preds = %land.lhs.true
  %31 = load %struct.ImagePaintSettings*, %struct.ImagePaintSettings** %imapaint, align 8, !dbg !7836
  %flag = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %31, i32 0, i32 1, !dbg !7838
  %32 = load i16, i16* %flag, align 8, !dbg !7839
  %conv39 = sext i16 %32 to i32, !dbg !7839
  %or = or i32 %conv39, 256, !dbg !7839
  %conv40 = trunc i32 %or to i16, !dbg !7839
  store i16 %conv40, i16* %flag, align 8, !dbg !7839
  %33 = load %struct.ImagePaintSettings*, %struct.ImagePaintSettings** %imapaint, align 8, !dbg !7840
  %stencil41 = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %33, i32 0, i32 8, !dbg !7842
  %34 = load %struct.Image*, %struct.Image** %stencil41, align 8, !dbg !7842
  %cmp42 = icmp eq %struct.Image* %34, null, !dbg !7843
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !7844

if.then44:                                        ; preds = %if.then38
  store i8 0, i8* %hasstencil, align 1, !dbg !7845
  br label %if.end45, !dbg !7847

if.end45:                                         ; preds = %if.then44, %if.then38
  br label %if.end46, !dbg !7848

if.end46:                                         ; preds = %if.end45, %land.lhs.true, %if.end33
  %35 = load i8, i8* %hasuvs, align 1, !dbg !7849
  %tobool47 = icmp ne i8 %35, 0, !dbg !7849
  br i1 %tobool47, label %if.end53, label %if.then48, !dbg !7851

if.then48:                                        ; preds = %if.end46
  %36 = load %struct.ImagePaintSettings*, %struct.ImagePaintSettings** %imapaint, align 8, !dbg !7852
  %missing_data49 = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %36, i32 0, i32 2, !dbg !7853
  %37 = load i16, i16* %missing_data49, align 2, !dbg !7854
  %conv50 = sext i16 %37 to i32, !dbg !7854
  %or51 = or i32 %conv50, 1, !dbg !7854
  %conv52 = trunc i32 %or51 to i16, !dbg !7854
  store i16 %conv52, i16* %missing_data49, align 2, !dbg !7854
  br label %if.end53, !dbg !7852

if.end53:                                         ; preds = %if.then48, %if.end46
  %38 = load i8, i8* %hasmat, align 1, !dbg !7855
  %tobool54 = icmp ne i8 %38, 0, !dbg !7855
  br i1 %tobool54, label %if.end60, label %if.then55, !dbg !7857

if.then55:                                        ; preds = %if.end53
  %39 = load %struct.ImagePaintSettings*, %struct.ImagePaintSettings** %imapaint, align 8, !dbg !7858
  %missing_data56 = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %39, i32 0, i32 2, !dbg !7859
  %40 = load i16, i16* %missing_data56, align 2, !dbg !7860
  %conv57 = sext i16 %40 to i32, !dbg !7860
  %or58 = or i32 %conv57, 2, !dbg !7860
  %conv59 = trunc i32 %or58 to i16, !dbg !7860
  store i16 %conv59, i16* %missing_data56, align 2, !dbg !7860
  br label %if.end60, !dbg !7858

if.end60:                                         ; preds = %if.then55, %if.end53
  %41 = load i8, i8* %hastex, align 1, !dbg !7861
  %tobool61 = icmp ne i8 %41, 0, !dbg !7861
  br i1 %tobool61, label %if.end67, label %if.then62, !dbg !7863

if.then62:                                        ; preds = %if.end60
  %42 = load %struct.ImagePaintSettings*, %struct.ImagePaintSettings** %imapaint, align 8, !dbg !7864
  %missing_data63 = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %42, i32 0, i32 2, !dbg !7865
  %43 = load i16, i16* %missing_data63, align 2, !dbg !7866
  %conv64 = sext i16 %43 to i32, !dbg !7866
  %or65 = or i32 %conv64, 4, !dbg !7866
  %conv66 = trunc i32 %or65 to i16, !dbg !7866
  store i16 %conv66, i16* %missing_data63, align 2, !dbg !7866
  br label %if.end67, !dbg !7864

if.end67:                                         ; preds = %if.then62, %if.end60
  %44 = load i8, i8* %hasstencil, align 1, !dbg !7867
  %tobool68 = icmp ne i8 %44, 0, !dbg !7867
  br i1 %tobool68, label %if.end74, label %if.then69, !dbg !7869

if.then69:                                        ; preds = %if.end67
  %45 = load %struct.ImagePaintSettings*, %struct.ImagePaintSettings** %imapaint, align 8, !dbg !7870
  %missing_data70 = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %45, i32 0, i32 2, !dbg !7871
  %46 = load i16, i16* %missing_data70, align 2, !dbg !7872
  %conv71 = sext i16 %46 to i32, !dbg !7872
  %or72 = or i32 %conv71, 8, !dbg !7872
  %conv73 = trunc i32 %or72 to i16, !dbg !7872
  store i16 %conv73, i16* %missing_data70, align 2, !dbg !7872
  br label %if.end74, !dbg !7870

if.end74:                                         ; preds = %if.then69, %if.end67
  %47 = load i8*, i8** %uvs.addr, align 8, !dbg !7873
  %tobool75 = icmp ne i8* %47, null, !dbg !7873
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !7875

if.then76:                                        ; preds = %if.end74
  %48 = load i8, i8* %hasuvs, align 1, !dbg !7876
  %49 = load i8*, i8** %uvs.addr, align 8, !dbg !7878
  store i8 %48, i8* %49, align 1, !dbg !7879
  br label %if.end77, !dbg !7880

if.end77:                                         ; preds = %if.then76, %if.end74
  %50 = load i8*, i8** %mat.addr, align 8, !dbg !7881
  %tobool78 = icmp ne i8* %50, null, !dbg !7881
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !7883

if.then79:                                        ; preds = %if.end77
  %51 = load i8, i8* %hasmat, align 1, !dbg !7884
  %52 = load i8*, i8** %mat.addr, align 8, !dbg !7886
  store i8 %51, i8* %52, align 1, !dbg !7887
  br label %if.end80, !dbg !7888

if.end80:                                         ; preds = %if.then79, %if.end77
  %53 = load i8*, i8** %tex.addr, align 8, !dbg !7889
  %tobool81 = icmp ne i8* %53, null, !dbg !7889
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !7891

if.then82:                                        ; preds = %if.end80
  %54 = load i8, i8* %hastex, align 1, !dbg !7892
  %55 = load i8*, i8** %tex.addr, align 8, !dbg !7894
  store i8 %54, i8* %55, align 1, !dbg !7895
  br label %if.end83, !dbg !7896

if.end83:                                         ; preds = %if.then82, %if.end80
  %56 = load i8*, i8** %stencil.addr, align 8, !dbg !7897
  %tobool84 = icmp ne i8* %56, null, !dbg !7897
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !7899

if.then85:                                        ; preds = %if.end83
  %57 = load i8, i8* %hasstencil, align 1, !dbg !7900
  %58 = load i8*, i8** %stencil.addr, align 8, !dbg !7902
  store i8 %57, i8* %58, align 1, !dbg !7903
  br label %if.end86, !dbg !7904

if.end86:                                         ; preds = %if.then85, %if.end83
  %59 = load i8, i8* %hasuvs, align 1, !dbg !7905
  %conv87 = zext i8 %59 to i32, !dbg !7905
  %tobool88 = icmp ne i32 %conv87, 0, !dbg !7905
  br i1 %tobool88, label %land.lhs.true89, label %land.end, !dbg !7906

land.lhs.true89:                                  ; preds = %if.end86
  %60 = load i8, i8* %hasmat, align 1, !dbg !7907
  %conv90 = zext i8 %60 to i32, !dbg !7907
  %tobool91 = icmp ne i32 %conv90, 0, !dbg !7907
  br i1 %tobool91, label %land.lhs.true92, label %land.end, !dbg !7908

land.lhs.true92:                                  ; preds = %land.lhs.true89
  %61 = load i8, i8* %hastex, align 1, !dbg !7909
  %conv93 = zext i8 %61 to i32, !dbg !7909
  %tobool94 = icmp ne i32 %conv93, 0, !dbg !7909
  br i1 %tobool94, label %land.rhs, label %land.end, !dbg !7910

land.rhs:                                         ; preds = %land.lhs.true92
  %62 = load i8, i8* %hasstencil, align 1, !dbg !7911
  %conv95 = zext i8 %62 to i32, !dbg !7911
  %tobool96 = icmp ne i32 %conv95, 0, !dbg !7910
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true92, %land.lhs.true89, %if.end86
  %63 = phi i1 [ false, %land.lhs.true92 ], [ false, %land.lhs.true89 ], [ false, %if.end86 ], [ %tobool96, %land.rhs ], !dbg !7912
  %land.ext = zext i1 %63 to i32, !dbg !7910
  %conv97 = trunc i32 %land.ext to i8, !dbg !7905
  ret i8 %conv97, !dbg !7913
}

declare dso_local %struct.Brush* @BKE_paint_brush(%struct.Paint*) #2

declare dso_local %struct.Material* @give_current_material(%struct.Object*, i16 signext) #2

declare dso_local void @BKE_texpaint_slot_refresh_cache(%struct.Scene*, %struct.Material*) #2

declare dso_local %struct.Mesh* @BKE_mesh_from_object(%struct.Object*) #2

declare dso_local i32 @CustomData_number_of_layers(%struct.CustomData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @PAINT_OT_add_texture_paint_slot(%struct.wmOperatorType* %ot) #0 !dbg !2 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7914, metadata !DIExpression()), !dbg !7915
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !7916, metadata !DIExpression()), !dbg !7917
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7918
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7919
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8** %name, align 8, !dbg !7920
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7921
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !7922
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.19, i64 0, i64 0), i8** %description, align 8, !dbg !7923
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7924
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !7925
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.20, i64 0, i64 0), i8** %idname, align 8, !dbg !7926
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7927
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !7928
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @texture_paint_add_texture_paint_slot_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !7929
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7930
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !7931
  store i32 (%struct.bContext*, %struct.wmOperator*)* @texture_paint_add_texture_paint_slot_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7932
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7933
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !7934
  store i32 (%struct.bContext*)* @ED_operator_region_view3d_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !7935
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7936
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !7937
  store i16 2, i16* %flag, align 8, !dbg !7938
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7939
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !7940
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7940
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !7939
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([15 x %struct.EnumPropertyItem], [15 x %struct.EnumPropertyItem]* @layer_type_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i64 0, i64 0)), !dbg !7941
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !7942
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7943
  call void @RNA_def_property_flag(%struct.PropertyRNA* %10, i32 524288), !dbg !7944
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7945
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %11, i32 0, i32 11, !dbg !7946
  %12 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !7946
  %13 = bitcast %struct.StructRNA* %12 to i8*, !dbg !7945
  %call2 = call %struct.PropertyRNA* @RNA_def_string(i8* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), i32 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27, i64 0, i64 0)), !dbg !7947
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7948
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %14, i32 0, i32 11, !dbg !7949
  %15 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !7949
  %16 = bitcast %struct.StructRNA* %15 to i8*, !dbg !7948
  %call4 = call %struct.PropertyRNA* @RNA_def_int(i8* %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), i32 1024, i32 1, i32 2147483647, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.30, i64 0, i64 0), i32 1, i32 16384), !dbg !7950
  store %struct.PropertyRNA* %call4, %struct.PropertyRNA** %prop, align 8, !dbg !7951
  %17 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7952
  call void @RNA_def_property_subtype(%struct.PropertyRNA* %17, i32 12), !dbg !7953
  %18 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7954
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %18, i32 0, i32 11, !dbg !7955
  %19 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !7955
  %20 = bitcast %struct.StructRNA* %19 to i8*, !dbg !7954
  %call6 = call %struct.PropertyRNA* @RNA_def_int(i8* %20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0), i32 1024, i32 1, i32 2147483647, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0), i32 1, i32 16384), !dbg !7956
  store %struct.PropertyRNA* %call6, %struct.PropertyRNA** %prop, align 8, !dbg !7957
  %21 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7958
  call void @RNA_def_property_subtype(%struct.PropertyRNA* %21, i32 12), !dbg !7959
  %22 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7960
  %srna7 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %22, i32 0, i32 11, !dbg !7961
  %23 = load %struct.StructRNA*, %struct.StructRNA** %srna7, align 8, !dbg !7961
  %24 = bitcast %struct.StructRNA* %23 to i8*, !dbg !7960
  %call8 = call %struct.PropertyRNA* @RNA_def_float_color(i8* %24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0), i32 4, float* null, float 0.000000e+00, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.36, i64 0, i64 0), float 0.000000e+00, float 1.000000e+00), !dbg !7962
  store %struct.PropertyRNA* %call8, %struct.PropertyRNA** %prop, align 8, !dbg !7963
  %25 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7964
  call void @RNA_def_property_subtype(%struct.PropertyRNA* %25, i32 30), !dbg !7965
  %26 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7966
  call void @RNA_def_property_float_array_default(%struct.PropertyRNA* %26, float* getelementptr inbounds ([4 x float], [4 x float]* @PAINT_OT_add_texture_paint_slot.default_color, i64 0, i64 0)), !dbg !7967
  %27 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7968
  %srna9 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %27, i32 0, i32 11, !dbg !7969
  %28 = load %struct.StructRNA*, %struct.StructRNA** %srna9, align 8, !dbg !7969
  %29 = bitcast %struct.StructRNA* %28 to i8*, !dbg !7968
  %call10 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %29, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.39, i64 0, i64 0)), !dbg !7970
  %30 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7971
  %srna11 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %30, i32 0, i32 11, !dbg !7972
  %31 = load %struct.StructRNA*, %struct.StructRNA** %srna11, align 8, !dbg !7972
  %32 = bitcast %struct.StructRNA* %31 to i8*, !dbg !7971
  %call12 = call %struct.PropertyRNA* @RNA_def_enum(i8* %32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @image_generated_type_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.42, i64 0, i64 0)), !dbg !7973
  %33 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7974
  %srna13 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %33, i32 0, i32 11, !dbg !7975
  %34 = load %struct.StructRNA*, %struct.StructRNA** %srna13, align 8, !dbg !7975
  %35 = bitcast %struct.StructRNA* %34 to i8*, !dbg !7974
  %call14 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %35, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.45, i64 0, i64 0)), !dbg !7976
  ret void, !dbg !7977
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @texture_paint_add_texture_paint_slot_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !7978 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %imagename = alloca [64 x i8], align 16
  %ob = alloca %struct.Object*, align 8
  %ma = alloca %struct.Material*, align 8
  %type = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7984, metadata !DIExpression()), !dbg !7985
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7986, metadata !DIExpression()), !dbg !7987
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !7988, metadata !DIExpression()), !dbg !7989
  call void @llvm.dbg.declare(metadata [64 x i8]* %imagename, metadata !7990, metadata !DIExpression()), !dbg !7991
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7992, metadata !DIExpression()), !dbg !7993
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7994
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !7995
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !7993
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !7996, metadata !DIExpression()), !dbg !7997
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7998
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7999
  %actcol = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 32, !dbg !8000
  %3 = load i32, i32* %actcol, align 4, !dbg !8000
  %conv = trunc i32 %3 to i16, !dbg !7999
  %call1 = call %struct.Material* @give_current_material(%struct.Object* %1, i16 signext %conv), !dbg !8001
  store %struct.Material* %call1, %struct.Material** %ma, align 8, !dbg !7997
  call void @llvm.dbg.declare(metadata i32* %type, metadata !8002, metadata !DIExpression()), !dbg !8003
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8004
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !8005
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8005
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0)), !dbg !8006
  store i32 %call2, i32* %type, align 4, !dbg !8003
  %6 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8007
  %tobool = icmp ne %struct.Material* %6, null, !dbg !8007
  br i1 %tobool, label %if.end, label %if.then, !dbg !8009

if.then:                                          ; preds = %entry
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8010
  %call3 = call %struct.Main* @CTX_data_main(%struct.bContext* %7), !dbg !8012
  %call4 = call %struct.Material* @BKE_material_add(%struct.Main* %call3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.70, i64 0, i64 0)), !dbg !8013
  store %struct.Material* %call4, %struct.Material** %ma, align 8, !dbg !8014
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8015
  %9 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8016
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8017
  %actcol5 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 32, !dbg !8018
  %11 = load i32, i32* %actcol5, align 4, !dbg !8018
  %conv6 = trunc i32 %11 to i16, !dbg !8017
  call void @assign_material(%struct.Object* %8, %struct.Material* %9, i16 signext %conv6, i32 0), !dbg !8019
  br label %if.end, !dbg !8020

if.end:                                           ; preds = %if.then, %entry
  %12 = load i32, i32* %type, align 4, !dbg !8021
  %call7 = call i32 @RNA_enum_from_value(%struct.EnumPropertyItem* getelementptr inbounds ([15 x %struct.EnumPropertyItem], [15 x %struct.EnumPropertyItem]* @layer_type_items, i64 0, i64 0), i32 %12), !dbg !8022
  store i32 %call7, i32* %type, align 4, !dbg !8023
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %imagename, i64 0, i64 0, !dbg !8024
  %13 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8025
  %id = getelementptr inbounds %struct.Material, %struct.Material* %13, i32 0, i32 0, !dbg !8026
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !8027
  %arrayidx = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 2, !dbg !8025
  %14 = load i32, i32* %type, align 4, !dbg !8028
  %idxprom = sext i32 %14 to i64, !dbg !8029
  %arrayidx8 = getelementptr inbounds [15 x %struct.EnumPropertyItem], [15 x %struct.EnumPropertyItem]* @layer_type_items, i64 0, i64 %idxprom, !dbg !8029
  %name9 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx8, i32 0, i32 3, !dbg !8030
  %15 = load i8*, i8** %name9, align 8, !dbg !8030
  %call10 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay, i64 1024, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.71, i64 0, i64 0), i8* %arrayidx, i8* %15), !dbg !8031
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8032
  %ptr11 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %16, i32 0, i32 7, !dbg !8033
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr11, align 8, !dbg !8033
  %arraydecay12 = getelementptr inbounds [64 x i8], [64 x i8]* %imagename, i64 0, i64 0, !dbg !8034
  call void @RNA_string_set(%struct.PointerRNA* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i8* %arraydecay12), !dbg !8035
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8036
  %19 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8037
  %20 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !8038
  %conv13 = sext i16 %20 to i32, !dbg !8038
  %mul = mul nsw i32 15, %conv13, !dbg !8039
  %21 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !8040
  %conv14 = sext i16 %21 to i32, !dbg !8040
  %mul15 = mul nsw i32 5, %conv14, !dbg !8041
  %call16 = call i32 @WM_operator_props_dialog_popup(%struct.bContext* %18, %struct.wmOperator* %19, i32 %mul, i32 %mul15), !dbg !8042
  ret i32 %call16, !dbg !8043
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @texture_paint_add_texture_paint_slot_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8044 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8045, metadata !DIExpression()), !dbg !8046
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8047, metadata !DIExpression()), !dbg !8048
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8049
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8051
  %call = call zeroext i8 @proj_paint_add_slot(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !8052
  %tobool = icmp ne i8 %call, 0, !dbg !8052
  br i1 %tobool, label %if.then, label %if.else, !dbg !8053

if.then:                                          ; preds = %entry
  store i32 4, i32* %retval, align 4, !dbg !8054
  br label %return, !dbg !8054

if.else:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !8056
  br label %return, !dbg !8056

return:                                           ; preds = %if.else, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !8058
  ret i32 %2, !dbg !8058
}

declare dso_local %struct.PropertyRNA* @RNA_def_string(i8*, i8*, i8*, i32, i8*, i8*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_int(i8*, i8*, i32, i32, i32, i8*, i8*, i32, i32) #2

declare dso_local void @RNA_def_property_subtype(%struct.PropertyRNA*, i32) #2

declare dso_local %struct.PropertyRNA* @RNA_def_float_color(i8*, i8*, i32, float*, float, float, i8*, i8*, float, float) #2

declare dso_local void @RNA_def_property_float_array_default(%struct.PropertyRNA*, float*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_boolean(i8*, i8*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @PAINT_OT_delete_texture_paint_slot(%struct.wmOperatorType* %ot) #0 !dbg !8059 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8060, metadata !DIExpression()), !dbg !8061
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8062
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8063
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.46, i64 0, i64 0), i8** %name, align 8, !dbg !8064
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8065
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !8066
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.47, i64 0, i64 0), i8** %description, align 8, !dbg !8067
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8068
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !8069
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.48, i64 0, i64 0), i8** %idname, align 8, !dbg !8070
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8071
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8072
  store i32 (%struct.bContext*, %struct.wmOperator*)* @texture_paint_delete_texture_paint_slot_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8073
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8074
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8075
  store i32 (%struct.bContext*)* @ED_operator_region_view3d_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !8076
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8077
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8078
  store i16 3, i16* %flag, align 8, !dbg !8079
  ret void, !dbg !8080
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @texture_paint_delete_texture_paint_slot_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !8081 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ma = alloca %struct.Material*, align 8
  %is_bi = alloca i8, align 1
  %slot = alloca %struct.TexPaintSlot*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8082, metadata !DIExpression()), !dbg !8083
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !8084, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8086, metadata !DIExpression()), !dbg !8087
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8088
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !8089
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !8087
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !8090, metadata !DIExpression()), !dbg !8091
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8092
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !8093
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !8091
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !8094, metadata !DIExpression()), !dbg !8095
  call void @llvm.dbg.declare(metadata i8* %is_bi, metadata !8096, metadata !DIExpression()), !dbg !8097
  %2 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8098
  %call2 = call zeroext i8 @BKE_scene_uses_blender_internal(%struct.Scene* %2), !dbg !8099
  %conv = zext i8 %call2 to i32, !dbg !8099
  %tobool = icmp ne i32 %conv, 0, !dbg !8099
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !8100

lor.rhs:                                          ; preds = %entry
  %3 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8101
  %call3 = call zeroext i8 @BKE_scene_uses_blender_game(%struct.Scene* %3), !dbg !8102
  %conv4 = zext i8 %call3 to i32, !dbg !8102
  %tobool5 = icmp ne i32 %conv4, 0, !dbg !8100
  br label %lor.end, !dbg !8100

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool5, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32, !dbg !8100
  %conv6 = trunc i32 %lor.ext to i8, !dbg !8099
  store i8 %conv6, i8* %is_bi, align 1, !dbg !8097
  call void @llvm.dbg.declare(metadata %struct.TexPaintSlot** %slot, metadata !8103, metadata !DIExpression()), !dbg !8104
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8105
  %tobool7 = icmp ne %struct.Object* %5, null, !dbg !8105
  br i1 %tobool7, label %lor.lhs.false, label %if.then, !dbg !8107

lor.lhs.false:                                    ; preds = %lor.end
  %6 = load i8, i8* %is_bi, align 1, !dbg !8108
  %tobool8 = icmp ne i8 %6, 0, !dbg !8108
  br i1 %tobool8, label %if.end, label %if.then, !dbg !8109

if.then:                                          ; preds = %lor.lhs.false, %lor.end
  store i32 2, i32* %retval, align 4, !dbg !8110
  br label %return, !dbg !8110

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8111
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8112
  %actcol = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 32, !dbg !8113
  %9 = load i32, i32* %actcol, align 4, !dbg !8113
  %conv9 = trunc i32 %9 to i16, !dbg !8112
  %call10 = call %struct.Material* @give_current_material(%struct.Object* %7, i16 signext %conv9), !dbg !8114
  store %struct.Material* %call10, %struct.Material** %ma, align 8, !dbg !8115
  %10 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8116
  %texpaintslot = getelementptr inbounds %struct.Material, %struct.Material* %10, i32 0, i32 135, !dbg !8118
  %11 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %texpaintslot, align 8, !dbg !8118
  %tobool11 = icmp ne %struct.TexPaintSlot* %11, null, !dbg !8116
  br i1 %tobool11, label %lor.lhs.false12, label %if.then15, !dbg !8119

lor.lhs.false12:                                  ; preds = %if.end
  %12 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8120
  %use_nodes = getelementptr inbounds %struct.Material, %struct.Material* %12, i32 0, i32 77, !dbg !8121
  %13 = load i8, i8* %use_nodes, align 1, !dbg !8121
  %conv13 = zext i8 %13 to i32, !dbg !8120
  %tobool14 = icmp ne i32 %conv13, 0, !dbg !8120
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !8122

if.then15:                                        ; preds = %lor.lhs.false12, %if.end
  store i32 2, i32* %retval, align 4, !dbg !8123
  br label %return, !dbg !8123

if.end16:                                         ; preds = %lor.lhs.false12
  %14 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8124
  %texpaintslot17 = getelementptr inbounds %struct.Material, %struct.Material* %14, i32 0, i32 135, !dbg !8125
  %15 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %texpaintslot17, align 8, !dbg !8125
  %16 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8126
  %paint_active_slot = getelementptr inbounds %struct.Material, %struct.Material* %16, i32 0, i32 131, !dbg !8127
  %17 = load i16, i16* %paint_active_slot, align 4, !dbg !8127
  %conv18 = sext i16 %17 to i32, !dbg !8126
  %idx.ext = sext i32 %conv18 to i64, !dbg !8128
  %add.ptr = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %15, i64 %idx.ext, !dbg !8128
  store %struct.TexPaintSlot* %add.ptr, %struct.TexPaintSlot** %slot, align 8, !dbg !8129
  %18 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8130
  %mtex = getelementptr inbounds %struct.Material, %struct.Material* %18, i32 0, i32 102, !dbg !8132
  %19 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot, align 8, !dbg !8133
  %index = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %19, i32 0, i32 2, !dbg !8134
  %20 = load i32, i32* %index, align 8, !dbg !8134
  %idxprom = sext i32 %20 to i64, !dbg !8130
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex, i64 0, i64 %idxprom, !dbg !8130
  %21 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !8130
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %21, i32 0, i32 5, !dbg !8135
  %22 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !8135
  %tobool19 = icmp ne %struct.Tex* %22, null, !dbg !8130
  br i1 %tobool19, label %if.then20, label %if.end26, !dbg !8136

if.then20:                                        ; preds = %if.end16
  %23 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8137
  %mtex21 = getelementptr inbounds %struct.Material, %struct.Material* %23, i32 0, i32 102, !dbg !8138
  %24 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot, align 8, !dbg !8139
  %index22 = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %24, i32 0, i32 2, !dbg !8140
  %25 = load i32, i32* %index22, align 8, !dbg !8140
  %idxprom23 = sext i32 %25 to i64, !dbg !8137
  %arrayidx24 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex21, i64 0, i64 %idxprom23, !dbg !8137
  %26 = load %struct.MTex*, %struct.MTex** %arrayidx24, align 8, !dbg !8137
  %tex25 = getelementptr inbounds %struct.MTex, %struct.MTex* %26, i32 0, i32 5, !dbg !8141
  %27 = load %struct.Tex*, %struct.Tex** %tex25, align 8, !dbg !8141
  %id = getelementptr inbounds %struct.Tex, %struct.Tex* %27, i32 0, i32 0, !dbg !8142
  call void @id_us_min(%struct.ID* %id), !dbg !8143
  br label %if.end26, !dbg !8143

if.end26:                                         ; preds = %if.then20, %if.end16
  %28 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8144
  %29 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8145
  %mtex27 = getelementptr inbounds %struct.Material, %struct.Material* %29, i32 0, i32 102, !dbg !8146
  %30 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot, align 8, !dbg !8147
  %index28 = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %30, i32 0, i32 2, !dbg !8148
  %31 = load i32, i32* %index28, align 8, !dbg !8148
  %idxprom29 = sext i32 %31 to i64, !dbg !8145
  %arrayidx30 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex27, i64 0, i64 %idxprom29, !dbg !8145
  %32 = load %struct.MTex*, %struct.MTex** %arrayidx30, align 8, !dbg !8145
  %33 = bitcast %struct.MTex* %32 to i8*, !dbg !8145
  call void %28(i8* %33), !dbg !8144
  %34 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8149
  %mtex31 = getelementptr inbounds %struct.Material, %struct.Material* %34, i32 0, i32 102, !dbg !8150
  %35 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot, align 8, !dbg !8151
  %index32 = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %35, i32 0, i32 2, !dbg !8152
  %36 = load i32, i32* %index32, align 8, !dbg !8152
  %idxprom33 = sext i32 %36 to i64, !dbg !8149
  %arrayidx34 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex31, i64 0, i64 %idxprom33, !dbg !8149
  store %struct.MTex* null, %struct.MTex** %arrayidx34, align 8, !dbg !8153
  %37 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8154
  %38 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8155
  call void @BKE_texpaint_slot_refresh_cache(%struct.Scene* %37, %struct.Material* %38), !dbg !8156
  %39 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8157
  %id35 = getelementptr inbounds %struct.Material, %struct.Material* %39, i32 0, i32 0, !dbg !8158
  call void @DAG_id_tag_update(%struct.ID* %id35, i16 signext 0), !dbg !8159
  %40 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8160
  %41 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8161
  %call36 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %41), !dbg !8162
  %42 = bitcast %struct.Scene* %call36 to i8*, !dbg !8162
  call void @WM_event_add_notifier(%struct.bContext* %40, i32 100663296, i8* %42), !dbg !8163
  %43 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8164
  %44 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8165
  %data = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 19, !dbg !8166
  %45 = load i8*, i8** %data, align 8, !dbg !8166
  call void @WM_event_add_notifier(%struct.bContext* %43, i32 274399232, i8* %45), !dbg !8167
  store i32 4, i32* %retval, align 4, !dbg !8168
  br label %return, !dbg !8168

return:                                           ; preds = %if.end26, %if.then15, %if.then
  %46 = load i32, i32* %retval, align 4, !dbg !8169
  ret i32 %46, !dbg !8169
}

declare dso_local float @srgb_to_linearrgb(float) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @project_bucket_iter_init(%struct.ProjPaintState* %ps, float* %mval_f) #0 !dbg !8170 {
entry:
  %retval = alloca i8, align 1
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %mval_f.addr = alloca float*, align 8
  %min_brush = alloca [2 x float], align 4
  %max_brush = alloca [2 x float], align 4
  %radius = alloca float, align 4
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !8173, metadata !DIExpression()), !dbg !8174
  store float* %mval_f, float** %mval_f.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mval_f.addr, metadata !8175, metadata !DIExpression()), !dbg !8176
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8177
  %source = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 4, !dbg !8179
  %1 = load i32, i32* %source, align 8, !dbg !8179
  %cmp = icmp eq i32 %1, 1, !dbg !8180
  br i1 %cmp, label %if.then, label %if.else, !dbg !8181

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [2 x float]* %min_brush, metadata !8182, metadata !DIExpression()), !dbg !8184
  call void @llvm.dbg.declare(metadata [2 x float]* %max_brush, metadata !8185, metadata !DIExpression()), !dbg !8186
  call void @llvm.dbg.declare(metadata float* %radius, metadata !8187, metadata !DIExpression()), !dbg !8188
  %2 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8189
  %brush_size = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %2, i32 0, i32 12, !dbg !8190
  %3 = load float, float* %brush_size, align 4, !dbg !8190
  store float %3, float* %radius, align 4, !dbg !8188
  %4 = load float*, float** %mval_f.addr, align 8, !dbg !8191
  %arrayidx = getelementptr inbounds float, float* %4, i64 0, !dbg !8191
  %5 = load float, float* %arrayidx, align 4, !dbg !8191
  %6 = load float, float* %radius, align 4, !dbg !8192
  %sub = fsub float %5, %6, !dbg !8193
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %min_brush, i64 0, i64 0, !dbg !8194
  store float %sub, float* %arrayidx1, align 4, !dbg !8195
  %7 = load float*, float** %mval_f.addr, align 8, !dbg !8196
  %arrayidx2 = getelementptr inbounds float, float* %7, i64 1, !dbg !8196
  %8 = load float, float* %arrayidx2, align 4, !dbg !8196
  %9 = load float, float* %radius, align 4, !dbg !8197
  %sub3 = fsub float %8, %9, !dbg !8198
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %min_brush, i64 0, i64 1, !dbg !8199
  store float %sub3, float* %arrayidx4, align 4, !dbg !8200
  %10 = load float*, float** %mval_f.addr, align 8, !dbg !8201
  %arrayidx5 = getelementptr inbounds float, float* %10, i64 0, !dbg !8201
  %11 = load float, float* %arrayidx5, align 4, !dbg !8201
  %12 = load float, float* %radius, align 4, !dbg !8202
  %add = fadd float %11, %12, !dbg !8203
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %max_brush, i64 0, i64 0, !dbg !8204
  store float %add, float* %arrayidx6, align 4, !dbg !8205
  %13 = load float*, float** %mval_f.addr, align 8, !dbg !8206
  %arrayidx7 = getelementptr inbounds float, float* %13, i64 1, !dbg !8206
  %14 = load float, float* %arrayidx7, align 4, !dbg !8206
  %15 = load float, float* %radius, align 4, !dbg !8207
  %add8 = fadd float %14, %15, !dbg !8208
  %arrayidx9 = getelementptr inbounds [2 x float], [2 x float]* %max_brush, i64 0, i64 1, !dbg !8209
  store float %add8, float* %arrayidx9, align 4, !dbg !8210
  %16 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8211
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %min_brush, i64 0, i64 0, !dbg !8212
  %arraydecay10 = getelementptr inbounds [2 x float], [2 x float]* %max_brush, i64 0, i64 0, !dbg !8213
  %17 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8214
  %bucketMin = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %17, i32 0, i32 75, !dbg !8215
  %arraydecay11 = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMin, i64 0, i64 0, !dbg !8214
  %18 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8216
  %bucketMax = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %18, i32 0, i32 76, !dbg !8217
  %arraydecay12 = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMax, i64 0, i64 0, !dbg !8216
  call void @project_paint_bucket_bounds(%struct.ProjPaintState* %16, float* %arraydecay, float* %arraydecay10, i32* %arraydecay11, i32* %arraydecay12), !dbg !8218
  %19 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8219
  %bucketMin13 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %19, i32 0, i32 75, !dbg !8221
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMin13, i64 0, i64 0, !dbg !8219
  %20 = load i32, i32* %arrayidx14, align 4, !dbg !8219
  %21 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8222
  %bucketMax15 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %21, i32 0, i32 76, !dbg !8223
  %arrayidx16 = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMax15, i64 0, i64 0, !dbg !8222
  %22 = load i32, i32* %arrayidx16, align 4, !dbg !8222
  %cmp17 = icmp eq i32 %20, %22, !dbg !8224
  br i1 %cmp17, label %if.then23, label %lor.lhs.false, !dbg !8225

lor.lhs.false:                                    ; preds = %if.then
  %23 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8226
  %bucketMin18 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %23, i32 0, i32 75, !dbg !8227
  %arrayidx19 = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMin18, i64 0, i64 1, !dbg !8226
  %24 = load i32, i32* %arrayidx19, align 4, !dbg !8226
  %25 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8228
  %bucketMax20 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %25, i32 0, i32 76, !dbg !8229
  %arrayidx21 = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMax20, i64 0, i64 1, !dbg !8228
  %26 = load i32, i32* %arrayidx21, align 4, !dbg !8228
  %cmp22 = icmp eq i32 %24, %26, !dbg !8230
  br i1 %cmp22, label %if.then23, label %if.end, !dbg !8231

if.then23:                                        ; preds = %lor.lhs.false, %if.then
  store i8 0, i8* %retval, align 1, !dbg !8232
  br label %return, !dbg !8232

if.end:                                           ; preds = %lor.lhs.false
  %27 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8234
  %bucketMin24 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %27, i32 0, i32 75, !dbg !8235
  %arrayidx25 = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMin24, i64 0, i64 0, !dbg !8234
  %28 = load i32, i32* %arrayidx25, align 4, !dbg !8234
  %29 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8236
  %context_bucket_x = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %29, i32 0, i32 77, !dbg !8237
  store i32 %28, i32* %context_bucket_x, align 4, !dbg !8238
  %30 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8239
  %bucketMin26 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %30, i32 0, i32 75, !dbg !8240
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMin26, i64 0, i64 1, !dbg !8239
  %31 = load i32, i32* %arrayidx27, align 4, !dbg !8239
  %32 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8241
  %context_bucket_y = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %32, i32 0, i32 78, !dbg !8242
  store i32 %31, i32* %context_bucket_y, align 8, !dbg !8243
  br label %if.end38, !dbg !8244

if.else:                                          ; preds = %entry
  %33 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8245
  %bucketMin28 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %33, i32 0, i32 75, !dbg !8247
  %arrayidx29 = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMin28, i64 0, i64 0, !dbg !8245
  store i32 0, i32* %arrayidx29, align 4, !dbg !8248
  %34 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8249
  %bucketMin30 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %34, i32 0, i32 75, !dbg !8250
  %arrayidx31 = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMin30, i64 0, i64 1, !dbg !8249
  store i32 0, i32* %arrayidx31, align 4, !dbg !8251
  %35 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8252
  %buckets_x = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %35, i32 0, i32 36, !dbg !8253
  %36 = load i32, i32* %buckets_x, align 8, !dbg !8253
  %37 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8254
  %bucketMax32 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %37, i32 0, i32 76, !dbg !8255
  %arrayidx33 = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMax32, i64 0, i64 0, !dbg !8254
  store i32 %36, i32* %arrayidx33, align 4, !dbg !8256
  %38 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8257
  %buckets_y = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %38, i32 0, i32 37, !dbg !8258
  %39 = load i32, i32* %buckets_y, align 4, !dbg !8258
  %40 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8259
  %bucketMax34 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %40, i32 0, i32 76, !dbg !8260
  %arrayidx35 = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMax34, i64 0, i64 1, !dbg !8259
  store i32 %39, i32* %arrayidx35, align 4, !dbg !8261
  %41 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8262
  %context_bucket_x36 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %41, i32 0, i32 77, !dbg !8263
  store i32 0, i32* %context_bucket_x36, align 4, !dbg !8264
  %42 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !8265
  %context_bucket_y37 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %42, i32 0, i32 78, !dbg !8266
  store i32 0, i32* %context_bucket_y37, align 8, !dbg !8267
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.end
  store i8 1, i8* %retval, align 1, !dbg !8268
  br label %return, !dbg !8268

return:                                           ; preds = %if.end38, %if.then23
  %43 = load i8, i8* %retval, align 1, !dbg !8269
  ret i8 %43, !dbg !8269
}

declare dso_local void @BLI_init_threads(%struct.ListBase*, i8* (i8*)*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @do_projectpaint_thread(i8* %ph_v) #0 !dbg !8270 {
entry:
  %ph_v.addr = alloca i8*, align 8
  %ps = alloca %struct.ProjPaintState*, align 8
  %projImages = alloca %struct.ProjPaintImage*, align 8
  %lastpos = alloca float*, align 8
  %pos = alloca float*, align 8
  %thread_index = alloca i32, align 4
  %pool = alloca %struct.ImagePool*, align 8
  %node = alloca %struct.LinkNode*, align 8
  %projPixel = alloca %struct.ProjPixel*, align 8
  %brush = alloca %struct.Brush*, align 8
  %last_index = alloca i32, align 4
  %last_projIma = alloca %struct.ProjPaintImage*, align 8
  %last_partial_redraw_cell = alloca %struct.ImagePaintPartialRedraw*, align 8
  %dist_sq = alloca float, align 4
  %dist = alloca float, align 4
  %falloff = alloca float, align 4
  %bucket_index = alloca i32, align 4
  %is_floatbuf = alloca i8, align 1
  %tool = alloca i16, align 2
  %bucket_bounds = alloca %struct.rctf, align 4
  %pos_ofs = alloca [2 x float], align 4
  %co = alloca [2 x float], align 4
  %mask_short = alloca i16, align 2
  %brush_alpha = alloca float, align 4
  %brush_radius = alloca float, align 4
  %brush_radius_sq = alloca float, align 4
  %lock_alpha = alloca i16, align 2
  %smearPixels = alloca %struct.LinkNode*, align 8
  %smearPixels_f = alloca %struct.LinkNode*, align 8
  %smearArena = alloca %struct.MemArena*, align 8
  %softenPixels = alloca %struct.LinkNode*, align 8
  %softenPixels_f = alloca %struct.LinkNode*, align 8
  %softenArena = alloca %struct.MemArena*, align 8
  %tangent = alloca [2 x float], align 4
  %line_len_sq_inv = alloca float, align 4
  %line_len = alloca float, align 4
  %f = alloca float, align 4
  %color_f = alloca [4 x float], align 16
  %p = alloca [2 x float], align 4
  %newColor_f = alloca [4 x float], align 16
  %mask128 = alloca float, align 4
  %newColor_f206 = alloca [4 x float], align 16
  %mask207 = alloca float, align 4
  %mask239 = alloca float, align 4
  %texrgb = alloca [3 x float], align 4
  %mask279 = alloca float, align 4
  %mask_accum = alloca float, align 4
  %max_mask = alloca float, align 4
  %texmask = alloca float, align 4
  %texmask324 = alloca float, align 4
  %mtex = alloca %struct.MTex*, align 8
  %samplecos = alloca [3 x float], align 4
  %texrgba = alloca [4 x float], align 16
  store i8* %ph_v, i8** %ph_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ph_v.addr, metadata !8273, metadata !DIExpression()), !dbg !8274
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps, metadata !8275, metadata !DIExpression()), !dbg !8276
  %0 = load i8*, i8** %ph_v.addr, align 8, !dbg !8277
  %1 = bitcast i8* %0 to %struct.ProjectHandle*, !dbg !8278
  %ps1 = getelementptr inbounds %struct.ProjectHandle, %struct.ProjectHandle* %1, i32 0, i32 0, !dbg !8279
  %2 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps1, align 8, !dbg !8279
  store %struct.ProjPaintState* %2, %struct.ProjPaintState** %ps, align 8, !dbg !8276
  call void @llvm.dbg.declare(metadata %struct.ProjPaintImage** %projImages, metadata !8280, metadata !DIExpression()), !dbg !8281
  %3 = load i8*, i8** %ph_v.addr, align 8, !dbg !8282
  %4 = bitcast i8* %3 to %struct.ProjectHandle*, !dbg !8283
  %projImages2 = getelementptr inbounds %struct.ProjectHandle, %struct.ProjectHandle* %4, i32 0, i32 3, !dbg !8284
  %5 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages2, align 8, !dbg !8284
  store %struct.ProjPaintImage* %5, %struct.ProjPaintImage** %projImages, align 8, !dbg !8281
  call void @llvm.dbg.declare(metadata float** %lastpos, metadata !8285, metadata !DIExpression()), !dbg !8286
  %6 = load i8*, i8** %ph_v.addr, align 8, !dbg !8287
  %7 = bitcast i8* %6 to %struct.ProjectHandle*, !dbg !8288
  %prevmval = getelementptr inbounds %struct.ProjectHandle, %struct.ProjectHandle* %7, i32 0, i32 1, !dbg !8289
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %prevmval, i64 0, i64 0, !dbg !8290
  store float* %arraydecay, float** %lastpos, align 8, !dbg !8286
  call void @llvm.dbg.declare(metadata float** %pos, metadata !8291, metadata !DIExpression()), !dbg !8292
  %8 = load i8*, i8** %ph_v.addr, align 8, !dbg !8293
  %9 = bitcast i8* %8 to %struct.ProjectHandle*, !dbg !8294
  %mval = getelementptr inbounds %struct.ProjectHandle, %struct.ProjectHandle* %9, i32 0, i32 2, !dbg !8295
  %arraydecay3 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !8296
  store float* %arraydecay3, float** %pos, align 8, !dbg !8292
  call void @llvm.dbg.declare(metadata i32* %thread_index, metadata !8297, metadata !DIExpression()), !dbg !8298
  %10 = load i8*, i8** %ph_v.addr, align 8, !dbg !8299
  %11 = bitcast i8* %10 to %struct.ProjectHandle*, !dbg !8300
  %thread_index4 = getelementptr inbounds %struct.ProjectHandle, %struct.ProjectHandle* %11, i32 0, i32 4, !dbg !8301
  %12 = load i32, i32* %thread_index4, align 8, !dbg !8301
  store i32 %12, i32* %thread_index, align 4, !dbg !8298
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool, metadata !8302, metadata !DIExpression()), !dbg !8303
  %13 = load i8*, i8** %ph_v.addr, align 8, !dbg !8304
  %14 = bitcast i8* %13 to %struct.ProjectHandle*, !dbg !8305
  %pool5 = getelementptr inbounds %struct.ProjectHandle, %struct.ProjectHandle* %14, i32 0, i32 5, !dbg !8306
  %15 = load %struct.ImagePool*, %struct.ImagePool** %pool5, align 8, !dbg !8306
  store %struct.ImagePool* %15, %struct.ImagePool** %pool, align 8, !dbg !8303
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %node, metadata !8307, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.declare(metadata %struct.ProjPixel** %projPixel, metadata !8309, metadata !DIExpression()), !dbg !8310
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !8311, metadata !DIExpression()), !dbg !8312
  %16 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8313
  %brush6 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %16, i32 0, i32 7, !dbg !8314
  %17 = load %struct.Brush*, %struct.Brush** %brush6, align 8, !dbg !8314
  store %struct.Brush* %17, %struct.Brush** %brush, align 8, !dbg !8312
  call void @llvm.dbg.declare(metadata i32* %last_index, metadata !8315, metadata !DIExpression()), !dbg !8316
  store i32 -1, i32* %last_index, align 4, !dbg !8316
  call void @llvm.dbg.declare(metadata %struct.ProjPaintImage** %last_projIma, metadata !8317, metadata !DIExpression()), !dbg !8318
  store %struct.ProjPaintImage* null, %struct.ProjPaintImage** %last_projIma, align 8, !dbg !8318
  call void @llvm.dbg.declare(metadata %struct.ImagePaintPartialRedraw** %last_partial_redraw_cell, metadata !8319, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.declare(metadata float* %dist_sq, metadata !8321, metadata !DIExpression()), !dbg !8322
  call void @llvm.dbg.declare(metadata float* %dist, metadata !8323, metadata !DIExpression()), !dbg !8324
  call void @llvm.dbg.declare(metadata float* %falloff, metadata !8325, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.declare(metadata i32* %bucket_index, metadata !8327, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.declare(metadata i8* %is_floatbuf, metadata !8329, metadata !DIExpression()), !dbg !8330
  store i8 0, i8* %is_floatbuf, align 1, !dbg !8330
  call void @llvm.dbg.declare(metadata i16* %tool, metadata !8331, metadata !DIExpression()), !dbg !8332
  %18 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8333
  %tool7 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %18, i32 0, i32 8, !dbg !8334
  %19 = load i16, i16* %tool7, align 8, !dbg !8334
  store i16 %19, i16* %tool, align 2, !dbg !8332
  call void @llvm.dbg.declare(metadata %struct.rctf* %bucket_bounds, metadata !8335, metadata !DIExpression()), !dbg !8336
  call void @llvm.dbg.declare(metadata [2 x float]* %pos_ofs, metadata !8337, metadata !DIExpression()), !dbg !8338
  %20 = bitcast [2 x float]* %pos_ofs to i8*, !dbg !8338
  call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 8, i1 false), !dbg !8338
  call void @llvm.dbg.declare(metadata [2 x float]* %co, metadata !8339, metadata !DIExpression()), !dbg !8340
  call void @llvm.dbg.declare(metadata i16* %mask_short, metadata !8341, metadata !DIExpression()), !dbg !8342
  call void @llvm.dbg.declare(metadata float* %brush_alpha, metadata !8343, metadata !DIExpression()), !dbg !8344
  %21 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8345
  %scene = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %21, i32 0, i32 3, !dbg !8346
  %22 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8346
  %23 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8347
  %call = call float @BKE_brush_alpha_get(%struct.Scene* %22, %struct.Brush* %23), !dbg !8348
  store float %call, float* %brush_alpha, align 4, !dbg !8344
  call void @llvm.dbg.declare(metadata float* %brush_radius, metadata !8349, metadata !DIExpression()), !dbg !8350
  %24 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8351
  %brush_size = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %24, i32 0, i32 12, !dbg !8352
  %25 = load float, float* %brush_size, align 4, !dbg !8352
  store float %25, float* %brush_radius, align 4, !dbg !8350
  call void @llvm.dbg.declare(metadata float* %brush_radius_sq, metadata !8353, metadata !DIExpression()), !dbg !8354
  %26 = load float, float* %brush_radius, align 4, !dbg !8355
  %27 = load float, float* %brush_radius, align 4, !dbg !8356
  %mul = fmul float %26, %27, !dbg !8357
  store float %mul, float* %brush_radius_sq, align 4, !dbg !8354
  call void @llvm.dbg.declare(metadata i16* %lock_alpha, metadata !8358, metadata !DIExpression()), !dbg !8359
  %28 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8360
  %blend = getelementptr inbounds %struct.Brush, %struct.Brush* %28, i32 0, i32 12, !dbg !8360
  %29 = load i16, i16* %blend, align 4, !dbg !8360
  %conv = sext i16 %29 to i32, !dbg !8360
  %cmp = icmp eq i32 %conv, 6, !dbg !8360
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !8360

lor.lhs.false:                                    ; preds = %entry
  %30 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8360
  %blend9 = getelementptr inbounds %struct.Brush, %struct.Brush* %30, i32 0, i32 12, !dbg !8360
  %31 = load i16, i16* %blend9, align 4, !dbg !8360
  %conv10 = sext i16 %31 to i32, !dbg !8360
  %cmp11 = icmp eq i32 %conv10, 7, !dbg !8360
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !8360

cond.true:                                        ; preds = %lor.lhs.false, %entry
  br label %cond.end, !dbg !8360

cond.false:                                       ; preds = %lor.lhs.false
  %32 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8361
  %flag = getelementptr inbounds %struct.Brush, %struct.Brush* %32, i32 0, i32 16, !dbg !8362
  %33 = load i32, i32* %flag, align 8, !dbg !8362
  %and = and i32 %33, 16384, !dbg !8363
  br label %cond.end, !dbg !8360

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %and, %cond.false ], !dbg !8360
  %conv13 = trunc i32 %cond to i16, !dbg !8360
  store i16 %conv13, i16* %lock_alpha, align 2, !dbg !8359
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %smearPixels, metadata !8364, metadata !DIExpression()), !dbg !8365
  store %struct.LinkNode* null, %struct.LinkNode** %smearPixels, align 8, !dbg !8365
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %smearPixels_f, metadata !8366, metadata !DIExpression()), !dbg !8367
  store %struct.LinkNode* null, %struct.LinkNode** %smearPixels_f, align 8, !dbg !8367
  call void @llvm.dbg.declare(metadata %struct.MemArena** %smearArena, metadata !8368, metadata !DIExpression()), !dbg !8369
  store %struct.MemArena* null, %struct.MemArena** %smearArena, align 8, !dbg !8369
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %softenPixels, metadata !8370, metadata !DIExpression()), !dbg !8371
  store %struct.LinkNode* null, %struct.LinkNode** %softenPixels, align 8, !dbg !8371
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %softenPixels_f, metadata !8372, metadata !DIExpression()), !dbg !8373
  store %struct.LinkNode* null, %struct.LinkNode** %softenPixels_f, align 8, !dbg !8373
  call void @llvm.dbg.declare(metadata %struct.MemArena** %softenArena, metadata !8374, metadata !DIExpression()), !dbg !8375
  store %struct.MemArena* null, %struct.MemArena** %softenArena, align 8, !dbg !8375
  %34 = load i16, i16* %tool, align 2, !dbg !8376
  %conv14 = sext i16 %34 to i32, !dbg !8376
  %cmp15 = icmp eq i32 %conv14, 2, !dbg !8378
  br i1 %cmp15, label %if.then, label %if.else, !dbg !8379

if.then:                                          ; preds = %cond.end
  %35 = load float*, float** %pos, align 8, !dbg !8380
  %arrayidx = getelementptr inbounds float, float* %35, i64 0, !dbg !8380
  %36 = load float, float* %arrayidx, align 4, !dbg !8380
  %37 = load float*, float** %lastpos, align 8, !dbg !8382
  %arrayidx17 = getelementptr inbounds float, float* %37, i64 0, !dbg !8382
  %38 = load float, float* %arrayidx17, align 4, !dbg !8382
  %sub = fsub float %36, %38, !dbg !8383
  %arrayidx18 = getelementptr inbounds [2 x float], [2 x float]* %pos_ofs, i64 0, i64 0, !dbg !8384
  store float %sub, float* %arrayidx18, align 4, !dbg !8385
  %39 = load float*, float** %pos, align 8, !dbg !8386
  %arrayidx19 = getelementptr inbounds float, float* %39, i64 1, !dbg !8386
  %40 = load float, float* %arrayidx19, align 4, !dbg !8386
  %41 = load float*, float** %lastpos, align 8, !dbg !8387
  %arrayidx20 = getelementptr inbounds float, float* %41, i64 1, !dbg !8387
  %42 = load float, float* %arrayidx20, align 4, !dbg !8387
  %sub21 = fsub float %40, %42, !dbg !8388
  %arrayidx22 = getelementptr inbounds [2 x float], [2 x float]* %pos_ofs, i64 0, i64 1, !dbg !8389
  store float %sub21, float* %arrayidx22, align 4, !dbg !8390
  %call23 = call %struct.MemArena* @BLI_memarena_new(i64 65528, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.49, i64 0, i64 0)), !dbg !8391
  store %struct.MemArena* %call23, %struct.MemArena** %smearArena, align 8, !dbg !8392
  br label %if.end29, !dbg !8393

if.else:                                          ; preds = %cond.end
  %43 = load i16, i16* %tool, align 2, !dbg !8394
  %conv24 = sext i16 %43 to i32, !dbg !8394
  %cmp25 = icmp eq i32 %conv24, 1, !dbg !8396
  br i1 %cmp25, label %if.then27, label %if.end, !dbg !8397

if.then27:                                        ; preds = %if.else
  %call28 = call %struct.MemArena* @BLI_memarena_new(i64 65528, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.50, i64 0, i64 0)), !dbg !8398
  store %struct.MemArena* %call28, %struct.MemArena** %softenArena, align 8, !dbg !8400
  br label %if.end, !dbg !8401

if.end:                                           ; preds = %if.then27, %if.else
  br label %if.end29

if.end29:                                         ; preds = %if.end, %if.then
  br label %while.cond, !dbg !8402

while.cond:                                       ; preds = %if.end475, %if.end29
  %44 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8403
  %45 = load float*, float** %pos, align 8, !dbg !8404
  %call30 = call zeroext i8 @project_bucket_iter_next(%struct.ProjPaintState* %44, i32* %bucket_index, %struct.rctf* %bucket_bounds, float* %45), !dbg !8405
  %tobool = icmp ne i8 %call30, 0, !dbg !8402
  br i1 %tobool, label %while.body, label %while.end, !dbg !8402

while.body:                                       ; preds = %while.cond
  %46 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8406
  %bucketFlags = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %46, i32 0, i32 30, !dbg !8409
  %47 = load i8*, i8** %bucketFlags, align 8, !dbg !8409
  %48 = load i32, i32* %bucket_index, align 4, !dbg !8410
  %idxprom = sext i32 %48 to i64, !dbg !8406
  %arrayidx31 = getelementptr inbounds i8, i8* %47, i64 %idxprom, !dbg !8406
  %49 = load i8, i8* %arrayidx31, align 1, !dbg !8406
  %conv32 = zext i8 %49 to i32, !dbg !8406
  %cmp33 = icmp eq i32 %conv32, 0, !dbg !8411
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !8412

if.then35:                                        ; preds = %while.body
  %50 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8413
  %51 = load i32, i32* %thread_index, align 4, !dbg !8415
  %52 = load i32, i32* %bucket_index, align 4, !dbg !8416
  call void @project_bucket_init(%struct.ProjPaintState* %50, i32 %51, i32 %52, %struct.rctf* %bucket_bounds), !dbg !8417
  br label %if.end36, !dbg !8418

if.end36:                                         ; preds = %if.then35, %while.body
  %53 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8419
  %source = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %53, i32 0, i32 4, !dbg !8421
  %54 = load i32, i32* %source, align 8, !dbg !8421
  %cmp37 = icmp ne i32 %54, 1, !dbg !8422
  br i1 %cmp37, label %if.then39, label %if.else259, !dbg !8423

if.then39:                                        ; preds = %if.end36
  %55 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8424
  %bucketRect = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %55, i32 0, i32 28, !dbg !8427
  %56 = load %struct.LinkNode**, %struct.LinkNode*** %bucketRect, align 8, !dbg !8427
  %57 = load i32, i32* %bucket_index, align 4, !dbg !8428
  %idxprom40 = sext i32 %57 to i64, !dbg !8424
  %arrayidx41 = getelementptr inbounds %struct.LinkNode*, %struct.LinkNode** %56, i64 %idxprom40, !dbg !8424
  %58 = load %struct.LinkNode*, %struct.LinkNode** %arrayidx41, align 8, !dbg !8424
  store %struct.LinkNode* %58, %struct.LinkNode** %node, align 8, !dbg !8429
  br label %for.cond, !dbg !8430

for.cond:                                         ; preds = %for.inc, %if.then39
  %59 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !8431
  %tobool42 = icmp ne %struct.LinkNode* %59, null, !dbg !8433
  br i1 %tobool42, label %for.body, label %for.end, !dbg !8433

for.body:                                         ; preds = %for.cond
  %60 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !8434
  %link = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %60, i32 0, i32 1, !dbg !8436
  %61 = load i8*, i8** %link, align 8, !dbg !8436
  %62 = bitcast i8* %61 to %struct.ProjPixel*, !dbg !8437
  store %struct.ProjPixel* %62, %struct.ProjPixel** %projPixel, align 8, !dbg !8438
  %63 = load i32, i32* %last_index, align 4, !dbg !8439
  %64 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8441
  %image_index = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %64, i32 0, i32 10, !dbg !8442
  %65 = load i16, i16* %image_index, align 8, !dbg !8442
  %conv43 = sext i16 %65 to i32, !dbg !8441
  %cmp44 = icmp ne i32 %63, %conv43, !dbg !8443
  br i1 %cmp44, label %if.then46, label %if.end52, !dbg !8444

if.then46:                                        ; preds = %for.body
  %66 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8445
  %image_index47 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %66, i32 0, i32 10, !dbg !8447
  %67 = load i16, i16* %image_index47, align 8, !dbg !8447
  %conv48 = sext i16 %67 to i32, !dbg !8445
  store i32 %conv48, i32* %last_index, align 4, !dbg !8448
  %68 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages, align 8, !dbg !8449
  %69 = load i32, i32* %last_index, align 4, !dbg !8450
  %idx.ext = sext i32 %69 to i64, !dbg !8451
  %add.ptr = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %68, i64 %idx.ext, !dbg !8451
  store %struct.ProjPaintImage* %add.ptr, %struct.ProjPaintImage** %last_projIma, align 8, !dbg !8452
  %70 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %last_projIma, align 8, !dbg !8453
  %touch = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %70, i32 0, i32 6, !dbg !8454
  store i32 1, i32* %touch, align 8, !dbg !8455
  %71 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %last_projIma, align 8, !dbg !8456
  %ibuf = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %71, i32 0, i32 1, !dbg !8457
  %72 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8457
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %72, i32 0, i32 9, !dbg !8458
  %73 = load float*, float** %rect_float, align 8, !dbg !8458
  %cmp49 = icmp ne float* %73, null, !dbg !8459
  %conv50 = zext i1 %cmp49 to i32, !dbg !8459
  %conv51 = trunc i32 %conv50 to i8, !dbg !8460
  store i8 %conv51, i8* %is_floatbuf, align 1, !dbg !8461
  br label %if.end52, !dbg !8462

if.end52:                                         ; preds = %if.then46, %for.body
  %74 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8463
  %source53 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %74, i32 0, i32 4, !dbg !8465
  %75 = load i32, i32* %source53, align 8, !dbg !8465
  %cmp54 = icmp eq i32 %75, 4, !dbg !8466
  br i1 %cmp54, label %if.then56, label %if.else191, !dbg !8467

if.then56:                                        ; preds = %if.end52
  %76 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8468
  %flag57 = getelementptr inbounds %struct.Brush, %struct.Brush* %76, i32 0, i32 16, !dbg !8471
  %77 = load i32, i32* %flag57, align 8, !dbg !8471
  %and58 = and i32 %77, 2097152, !dbg !8472
  %tobool59 = icmp ne i32 %and58, 0, !dbg !8472
  br i1 %tobool59, label %if.then60, label %if.else109, !dbg !8473

if.then60:                                        ; preds = %if.then56
  call void @llvm.dbg.declare(metadata [2 x float]* %tangent, metadata !8474, metadata !DIExpression()), !dbg !8476
  call void @llvm.dbg.declare(metadata float* %line_len_sq_inv, metadata !8477, metadata !DIExpression()), !dbg !8478
  call void @llvm.dbg.declare(metadata float* %line_len, metadata !8479, metadata !DIExpression()), !dbg !8480
  call void @llvm.dbg.declare(metadata float* %f, metadata !8481, metadata !DIExpression()), !dbg !8482
  call void @llvm.dbg.declare(metadata [4 x float]* %color_f, metadata !8483, metadata !DIExpression()), !dbg !8484
  call void @llvm.dbg.declare(metadata [2 x float]* %p, metadata !8485, metadata !DIExpression()), !dbg !8486
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %p, i64 0, i64 0, !dbg !8487
  %78 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8488
  %projCoSS = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %78, i32 0, i32 0, !dbg !8489
  %arrayidx61 = getelementptr inbounds [2 x float], [2 x float]* %projCoSS, i64 0, i64 0, !dbg !8488
  %79 = load float, float* %arrayidx61, align 8, !dbg !8488
  %80 = load float*, float** %lastpos, align 8, !dbg !8490
  %arrayidx62 = getelementptr inbounds float, float* %80, i64 0, !dbg !8490
  %81 = load float, float* %arrayidx62, align 4, !dbg !8490
  %sub63 = fsub float %79, %81, !dbg !8491
  store float %sub63, float* %arrayinit.begin, align 4, !dbg !8487
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !8487
  %82 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8492
  %projCoSS64 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %82, i32 0, i32 0, !dbg !8493
  %arrayidx65 = getelementptr inbounds [2 x float], [2 x float]* %projCoSS64, i64 0, i64 1, !dbg !8492
  %83 = load float, float* %arrayidx65, align 4, !dbg !8492
  %84 = load float*, float** %lastpos, align 8, !dbg !8494
  %arrayidx66 = getelementptr inbounds float, float* %84, i64 1, !dbg !8494
  %85 = load float, float* %arrayidx66, align 4, !dbg !8494
  %sub67 = fsub float %83, %85, !dbg !8495
  store float %sub67, float* %arrayinit.element, align 4, !dbg !8487
  %arraydecay68 = getelementptr inbounds [2 x float], [2 x float]* %tangent, i64 0, i64 0, !dbg !8496
  %86 = load float*, float** %pos, align 8, !dbg !8497
  %87 = load float*, float** %lastpos, align 8, !dbg !8498
  call void @sub_v2_v2v2(float* %arraydecay68, float* %86, float* %87), !dbg !8499
  %arraydecay69 = getelementptr inbounds [2 x float], [2 x float]* %tangent, i64 0, i64 0, !dbg !8500
  %call70 = call float @len_squared_v2(float* %arraydecay69), !dbg !8501
  store float %call70, float* %line_len, align 4, !dbg !8502
  %88 = load float, float* %line_len, align 4, !dbg !8503
  %div = fdiv float 1.000000e+00, %88, !dbg !8504
  store float %div, float* %line_len_sq_inv, align 4, !dbg !8505
  %89 = load float, float* %line_len, align 4, !dbg !8506
  %call71 = call float @sqrtf(float %89) #5, !dbg !8507
  store float %call71, float* %line_len, align 4, !dbg !8508
  %90 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8509
  %gradient_fill_mode = getelementptr inbounds %struct.Brush, %struct.Brush* %90, i32 0, i32 33, !dbg !8510
  %91 = load i32, i32* %gradient_fill_mode, align 4, !dbg !8510
  switch i32 %91, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb76
  ], !dbg !8511

sw.bb:                                            ; preds = %if.then60
  %arraydecay72 = getelementptr inbounds [2 x float], [2 x float]* %p, i64 0, i64 0, !dbg !8512
  %arraydecay73 = getelementptr inbounds [2 x float], [2 x float]* %tangent, i64 0, i64 0, !dbg !8515
  %call74 = call float @dot_v2v2(float* %arraydecay72, float* %arraydecay73), !dbg !8516
  %92 = load float, float* %line_len_sq_inv, align 4, !dbg !8517
  %mul75 = fmul float %call74, %92, !dbg !8518
  store float %mul75, float* %f, align 4, !dbg !8519
  br label %sw.epilog, !dbg !8520

sw.bb76:                                          ; preds = %if.then60
  %arraydecay77 = getelementptr inbounds [2 x float], [2 x float]* %p, i64 0, i64 0, !dbg !8521
  %call78 = call float @len_v2(float* %arraydecay77), !dbg !8523
  %93 = load float, float* %line_len, align 4, !dbg !8524
  %div79 = fdiv float %call78, %93, !dbg !8525
  store float %div79, float* %f, align 4, !dbg !8526
  br label %sw.epilog, !dbg !8527

sw.epilog:                                        ; preds = %if.then60, %sw.bb76, %sw.bb
  %94 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8528
  %gradient = getelementptr inbounds %struct.Brush, %struct.Brush* %94, i32 0, i32 8, !dbg !8529
  %95 = load %struct.ColorBand*, %struct.ColorBand** %gradient, align 8, !dbg !8529
  %96 = load float, float* %f, align 4, !dbg !8530
  %arraydecay80 = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 0, !dbg !8531
  %call81 = call zeroext i8 @do_colorband(%struct.ColorBand* %95, float %96, float* %arraydecay80), !dbg !8532
  %97 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8533
  %mask = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %97, i32 0, i32 3, !dbg !8534
  %98 = load i16, i16* %mask, align 8, !dbg !8534
  %conv82 = uitofp i16 %98 to float, !dbg !8535
  %mul83 = fmul float %conv82, 0x3EF0001000000000, !dbg !8536
  %99 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8537
  %alpha = getelementptr inbounds %struct.Brush, %struct.Brush* %99, i32 0, i32 26, !dbg !8538
  %100 = load float, float* %alpha, align 8, !dbg !8538
  %mul84 = fmul float %mul83, %100, !dbg !8539
  %arrayidx85 = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 3, !dbg !8540
  %101 = load float, float* %arrayidx85, align 4, !dbg !8541
  %mul86 = fmul float %101, %mul84, !dbg !8541
  store float %mul86, float* %arrayidx85, align 4, !dbg !8541
  %102 = load i8, i8* %is_floatbuf, align 1, !dbg !8542
  %tobool87 = icmp ne i8 %102, 0, !dbg !8542
  br i1 %tobool87, label %if.then88, label %if.else95, !dbg !8544

if.then88:                                        ; preds = %sw.epilog
  %arraydecay89 = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 0, !dbg !8545
  %arrayidx90 = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 3, !dbg !8547
  %103 = load float, float* %arrayidx90, align 4, !dbg !8547
  call void @mul_v3_fl(float* %arraydecay89, float %103), !dbg !8548
  %104 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8549
  %pixel = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %104, i32 0, i32 9, !dbg !8550
  %f_pt = bitcast %union.pixelPointer* %pixel to float**, !dbg !8551
  %105 = load float*, float** %f_pt, align 8, !dbg !8551
  %106 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8552
  %origColor = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %106, i32 0, i32 7, !dbg !8553
  %f_pt91 = bitcast %union.pixelPointer* %origColor to float**, !dbg !8554
  %107 = load float*, float** %f_pt91, align 8, !dbg !8554
  %arraydecay92 = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 0, !dbg !8555
  %108 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8556
  %blend93 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %108, i32 0, i32 9, !dbg !8557
  %109 = load i16, i16* %blend93, align 2, !dbg !8557
  %conv94 = sext i16 %109 to i32, !dbg !8556
  call void @IMB_blend_color_float(float* %105, float* %107, float* %arraydecay92, i32 %conv94), !dbg !8558
  br label %if.end108, !dbg !8559

if.else95:                                        ; preds = %sw.epilog
  %arraydecay96 = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 0, !dbg !8560
  %arraydecay97 = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 0, !dbg !8562
  call void @linearrgb_to_srgb_v3_v3(float* %arraydecay96, float* %arraydecay97), !dbg !8563
  %110 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8564
  %newColor = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %110, i32 0, i32 8, !dbg !8565
  %ch = bitcast %union.pixelStore* %newColor to [4 x i8]*, !dbg !8566
  %arraydecay98 = getelementptr inbounds [4 x i8], [4 x i8]* %ch, i64 0, i64 0, !dbg !8564
  %arraydecay99 = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 0, !dbg !8567
  call void @rgba_float_to_uchar(i8* %arraydecay98, float* %arraydecay99), !dbg !8568
  %111 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8569
  %pixel100 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %111, i32 0, i32 9, !dbg !8570
  %ch_pt = bitcast %union.pixelPointer* %pixel100 to i8**, !dbg !8571
  %112 = load i8*, i8** %ch_pt, align 8, !dbg !8571
  %113 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8572
  %origColor101 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %113, i32 0, i32 7, !dbg !8573
  %ch_pt102 = bitcast %union.pixelPointer* %origColor101 to i8**, !dbg !8574
  %114 = load i8*, i8** %ch_pt102, align 8, !dbg !8574
  %115 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8575
  %newColor103 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %115, i32 0, i32 8, !dbg !8576
  %ch104 = bitcast %union.pixelStore* %newColor103 to [4 x i8]*, !dbg !8577
  %arraydecay105 = getelementptr inbounds [4 x i8], [4 x i8]* %ch104, i64 0, i64 0, !dbg !8575
  %116 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8578
  %blend106 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %116, i32 0, i32 9, !dbg !8579
  %117 = load i16, i16* %blend106, align 2, !dbg !8579
  %conv107 = sext i16 %117 to i32, !dbg !8578
  call void @IMB_blend_color_byte(i8* %112, i8* %114, i8* %arraydecay105, i32 %conv107), !dbg !8580
  br label %if.end108

if.end108:                                        ; preds = %if.else95, %if.then88
  br label %if.end153, !dbg !8581

if.else109:                                       ; preds = %if.then56
  %118 = load i8, i8* %is_floatbuf, align 1, !dbg !8582
  %tobool110 = icmp ne i8 %118, 0, !dbg !8582
  br i1 %tobool110, label %if.then111, label %if.else127, !dbg !8585

if.then111:                                       ; preds = %if.else109
  call void @llvm.dbg.declare(metadata [4 x float]* %newColor_f, metadata !8586, metadata !DIExpression()), !dbg !8588
  %119 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8589
  %mask112 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %119, i32 0, i32 3, !dbg !8590
  %120 = load i16, i16* %mask112, align 8, !dbg !8590
  %conv113 = uitofp i16 %120 to float, !dbg !8591
  %mul114 = fmul float %conv113, 0x3EF0001000000000, !dbg !8592
  %121 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8593
  %alpha115 = getelementptr inbounds %struct.Brush, %struct.Brush* %121, i32 0, i32 26, !dbg !8594
  %122 = load float, float* %alpha115, align 8, !dbg !8594
  %mul116 = fmul float %mul114, %122, !dbg !8595
  %arrayidx117 = getelementptr inbounds [4 x float], [4 x float]* %newColor_f, i64 0, i64 3, !dbg !8596
  store float %mul116, float* %arrayidx117, align 4, !dbg !8597
  %arraydecay118 = getelementptr inbounds [4 x float], [4 x float]* %newColor_f, i64 0, i64 0, !dbg !8598
  %123 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8599
  %paint_color_linear = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %123, i32 0, i32 6, !dbg !8600
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %paint_color_linear, i64 0, i64 0, !dbg !8599
  call void @copy_v3_v3(float* %arraydecay118, float* %arraydecay119), !dbg !8601
  %124 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8602
  %pixel120 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %124, i32 0, i32 9, !dbg !8603
  %f_pt121 = bitcast %union.pixelPointer* %pixel120 to float**, !dbg !8604
  %125 = load float*, float** %f_pt121, align 8, !dbg !8604
  %126 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8605
  %origColor122 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %126, i32 0, i32 7, !dbg !8606
  %f_pt123 = bitcast %union.pixelPointer* %origColor122 to float**, !dbg !8607
  %127 = load float*, float** %f_pt123, align 8, !dbg !8607
  %arraydecay124 = getelementptr inbounds [4 x float], [4 x float]* %newColor_f, i64 0, i64 0, !dbg !8608
  %128 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8609
  %blend125 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %128, i32 0, i32 9, !dbg !8610
  %129 = load i16, i16* %blend125, align 2, !dbg !8610
  %conv126 = sext i16 %129 to i32, !dbg !8609
  call void @IMB_blend_color_float(float* %125, float* %127, float* %arraydecay124, i32 %conv126), !dbg !8611
  br label %if.end152, !dbg !8612

if.else127:                                       ; preds = %if.else109
  call void @llvm.dbg.declare(metadata float* %mask128, metadata !8613, metadata !DIExpression()), !dbg !8615
  %130 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8616
  %mask129 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %130, i32 0, i32 3, !dbg !8617
  %131 = load i16, i16* %mask129, align 8, !dbg !8617
  %conv130 = uitofp i16 %131 to float, !dbg !8618
  %mul131 = fmul float %conv130, 0x3EF0001000000000, !dbg !8619
  store float %mul131, float* %mask128, align 4, !dbg !8615
  %132 = load float, float* %mask128, align 4, !dbg !8620
  %mul132 = fmul float %132, 2.550000e+02, !dbg !8621
  %133 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8622
  %alpha133 = getelementptr inbounds %struct.Brush, %struct.Brush* %133, i32 0, i32 26, !dbg !8623
  %134 = load float, float* %alpha133, align 8, !dbg !8623
  %mul134 = fmul float %mul132, %134, !dbg !8624
  %conv135 = fptoui float %mul134 to i8, !dbg !8620
  %135 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8625
  %newColor136 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %135, i32 0, i32 8, !dbg !8626
  %ch137 = bitcast %union.pixelStore* %newColor136 to [4 x i8]*, !dbg !8627
  %arrayidx138 = getelementptr inbounds [4 x i8], [4 x i8]* %ch137, i64 0, i64 3, !dbg !8625
  store i8 %conv135, i8* %arrayidx138, align 1, !dbg !8628
  %136 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8629
  %newColor139 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %136, i32 0, i32 8, !dbg !8630
  %ch140 = bitcast %union.pixelStore* %newColor139 to [4 x i8]*, !dbg !8631
  %arraydecay141 = getelementptr inbounds [4 x i8], [4 x i8]* %ch140, i64 0, i64 0, !dbg !8629
  %137 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8632
  %paint_color = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %137, i32 0, i32 5, !dbg !8633
  %arraydecay142 = getelementptr inbounds [3 x float], [3 x float]* %paint_color, i64 0, i64 0, !dbg !8632
  call void @rgb_float_to_uchar(i8* %arraydecay141, float* %arraydecay142), !dbg !8634
  %138 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8635
  %pixel143 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %138, i32 0, i32 9, !dbg !8636
  %ch_pt144 = bitcast %union.pixelPointer* %pixel143 to i8**, !dbg !8637
  %139 = load i8*, i8** %ch_pt144, align 8, !dbg !8637
  %140 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8638
  %origColor145 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %140, i32 0, i32 7, !dbg !8639
  %ch_pt146 = bitcast %union.pixelPointer* %origColor145 to i8**, !dbg !8640
  %141 = load i8*, i8** %ch_pt146, align 8, !dbg !8640
  %142 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8641
  %newColor147 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %142, i32 0, i32 8, !dbg !8642
  %ch148 = bitcast %union.pixelStore* %newColor147 to [4 x i8]*, !dbg !8643
  %arraydecay149 = getelementptr inbounds [4 x i8], [4 x i8]* %ch148, i64 0, i64 0, !dbg !8641
  %143 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8644
  %blend150 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %143, i32 0, i32 9, !dbg !8645
  %144 = load i16, i16* %blend150, align 2, !dbg !8645
  %conv151 = sext i16 %144 to i32, !dbg !8644
  call void @IMB_blend_color_byte(i8* %139, i8* %141, i8* %arraydecay149, i32 %conv151), !dbg !8646
  br label %if.end152

if.end152:                                        ; preds = %if.else127, %if.then111
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.end108
  %145 = load i16, i16* %lock_alpha, align 2, !dbg !8647
  %tobool154 = icmp ne i16 %145, 0, !dbg !8647
  br i1 %tobool154, label %if.then155, label %if.end172, !dbg !8649

if.then155:                                       ; preds = %if.end153
  %146 = load i8, i8* %is_floatbuf, align 1, !dbg !8650
  %tobool156 = icmp ne i8 %146, 0, !dbg !8650
  br i1 %tobool156, label %if.then157, label %if.else164, !dbg !8653

if.then157:                                       ; preds = %if.then155
  %147 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8654
  %origColor158 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %147, i32 0, i32 7, !dbg !8655
  %f_pt159 = bitcast %union.pixelPointer* %origColor158 to float**, !dbg !8656
  %148 = load float*, float** %f_pt159, align 8, !dbg !8656
  %arrayidx160 = getelementptr inbounds float, float* %148, i64 3, !dbg !8654
  %149 = load float, float* %arrayidx160, align 4, !dbg !8654
  %150 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8657
  %pixel161 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %150, i32 0, i32 9, !dbg !8658
  %f_pt162 = bitcast %union.pixelPointer* %pixel161 to float**, !dbg !8659
  %151 = load float*, float** %f_pt162, align 8, !dbg !8659
  %arrayidx163 = getelementptr inbounds float, float* %151, i64 3, !dbg !8657
  store float %149, float* %arrayidx163, align 4, !dbg !8660
  br label %if.end171, !dbg !8657

if.else164:                                       ; preds = %if.then155
  %152 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8661
  %origColor165 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %152, i32 0, i32 7, !dbg !8662
  %ch_pt166 = bitcast %union.pixelPointer* %origColor165 to i8**, !dbg !8663
  %153 = load i8*, i8** %ch_pt166, align 8, !dbg !8663
  %arrayidx167 = getelementptr inbounds i8, i8* %153, i64 3, !dbg !8661
  %154 = load i8, i8* %arrayidx167, align 1, !dbg !8661
  %155 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8664
  %pixel168 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %155, i32 0, i32 9, !dbg !8665
  %ch_pt169 = bitcast %union.pixelPointer* %pixel168 to i8**, !dbg !8666
  %156 = load i8*, i8** %ch_pt169, align 8, !dbg !8666
  %arrayidx170 = getelementptr inbounds i8, i8* %156, i64 3, !dbg !8664
  store i8 %154, i8* %arrayidx170, align 1, !dbg !8667
  br label %if.end171

if.end171:                                        ; preds = %if.else164, %if.then157
  br label %if.end172, !dbg !8668

if.end172:                                        ; preds = %if.end171, %if.end153
  %157 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %last_projIma, align 8, !dbg !8669
  %partRedrawRect = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %157, i32 0, i32 2, !dbg !8670
  %158 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %partRedrawRect, align 8, !dbg !8670
  %159 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8671
  %bb_cell_index = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %159, i32 0, i32 11, !dbg !8672
  %160 = load i8, i8* %bb_cell_index, align 2, !dbg !8672
  %conv173 = zext i8 %160 to i32, !dbg !8671
  %idx.ext174 = sext i32 %conv173 to i64, !dbg !8673
  %add.ptr175 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %158, i64 %idx.ext174, !dbg !8673
  store %struct.ImagePaintPartialRedraw* %add.ptr175, %struct.ImagePaintPartialRedraw** %last_partial_redraw_cell, align 8, !dbg !8674
  %161 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %last_partial_redraw_cell, align 8, !dbg !8675
  %x1 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %161, i32 0, i32 0, !dbg !8676
  %162 = load i32, i32* %x1, align 4, !dbg !8676
  %163 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8677
  %x_px = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %163, i32 0, i32 4, !dbg !8678
  %164 = load i16, i16* %x_px, align 2, !dbg !8678
  %conv176 = sext i16 %164 to i32, !dbg !8679
  %call177 = call i32 @min_ii(i32 %162, i32 %conv176), !dbg !8680
  %165 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %last_partial_redraw_cell, align 8, !dbg !8681
  %x1178 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %165, i32 0, i32 0, !dbg !8682
  store i32 %call177, i32* %x1178, align 4, !dbg !8683
  %166 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %last_partial_redraw_cell, align 8, !dbg !8684
  %y1 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %166, i32 0, i32 1, !dbg !8685
  %167 = load i32, i32* %y1, align 4, !dbg !8685
  %168 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8686
  %y_px = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %168, i32 0, i32 5, !dbg !8687
  %169 = load i16, i16* %y_px, align 4, !dbg !8687
  %conv179 = sext i16 %169 to i32, !dbg !8688
  %call180 = call i32 @min_ii(i32 %167, i32 %conv179), !dbg !8689
  %170 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %last_partial_redraw_cell, align 8, !dbg !8690
  %y1181 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %170, i32 0, i32 1, !dbg !8691
  store i32 %call180, i32* %y1181, align 4, !dbg !8692
  %171 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %last_partial_redraw_cell, align 8, !dbg !8693
  %x2 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %171, i32 0, i32 2, !dbg !8694
  %172 = load i32, i32* %x2, align 4, !dbg !8694
  %173 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8695
  %x_px182 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %173, i32 0, i32 4, !dbg !8696
  %174 = load i16, i16* %x_px182, align 2, !dbg !8696
  %conv183 = sext i16 %174 to i32, !dbg !8697
  %add = add nsw i32 %conv183, 1, !dbg !8698
  %call184 = call i32 @max_ii(i32 %172, i32 %add), !dbg !8699
  %175 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %last_partial_redraw_cell, align 8, !dbg !8700
  %x2185 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %175, i32 0, i32 2, !dbg !8701
  store i32 %call184, i32* %x2185, align 4, !dbg !8702
  %176 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %last_partial_redraw_cell, align 8, !dbg !8703
  %y2 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %176, i32 0, i32 3, !dbg !8704
  %177 = load i32, i32* %y2, align 4, !dbg !8704
  %178 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8705
  %y_px186 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %178, i32 0, i32 5, !dbg !8706
  %179 = load i16, i16* %y_px186, align 4, !dbg !8706
  %conv187 = sext i16 %179 to i32, !dbg !8707
  %add188 = add nsw i32 %conv187, 1, !dbg !8708
  %call189 = call i32 @max_ii(i32 %177, i32 %add188), !dbg !8709
  %180 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %last_partial_redraw_cell, align 8, !dbg !8710
  %y2190 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %180, i32 0, i32 3, !dbg !8711
  store i32 %call189, i32* %y2190, align 4, !dbg !8712
  br label %if.end258, !dbg !8713

if.else191:                                       ; preds = %if.end52
  %181 = load i8, i8* %is_floatbuf, align 1, !dbg !8714
  %tobool192 = icmp ne i8 %181, 0, !dbg !8714
  br i1 %tobool192, label %if.then193, label %if.else225, !dbg !8717

if.then193:                                       ; preds = %if.else191
  %182 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8718
  %reproject_ibuf = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %182, i32 0, i32 73, !dbg !8720
  %183 = load %struct.ImBuf*, %struct.ImBuf** %reproject_ibuf, align 8, !dbg !8720
  %184 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8721
  %newColor194 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %184, i32 0, i32 8, !dbg !8722
  %ch195 = bitcast %union.pixelStore* %newColor194 to [4 x i8]*, !dbg !8723
  %arraydecay196 = getelementptr inbounds [4 x i8], [4 x i8]* %ch195, i64 0, i64 0, !dbg !8721
  %185 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8724
  %projCoSS197 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %185, i32 0, i32 0, !dbg !8725
  %arrayidx198 = getelementptr inbounds [2 x float], [2 x float]* %projCoSS197, i64 0, i64 0, !dbg !8724
  %186 = load float, float* %arrayidx198, align 8, !dbg !8724
  %187 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8726
  %projCoSS199 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %187, i32 0, i32 0, !dbg !8727
  %arrayidx200 = getelementptr inbounds [2 x float], [2 x float]* %projCoSS199, i64 0, i64 1, !dbg !8726
  %188 = load float, float* %arrayidx200, align 4, !dbg !8726
  call void @bicubic_interpolation_color(%struct.ImBuf* %183, i8* %arraydecay196, float* null, float %186, float %188), !dbg !8728
  %189 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8729
  %newColor201 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %189, i32 0, i32 8, !dbg !8731
  %ch202 = bitcast %union.pixelStore* %newColor201 to [4 x i8]*, !dbg !8732
  %arrayidx203 = getelementptr inbounds [4 x i8], [4 x i8]* %ch202, i64 0, i64 3, !dbg !8729
  %190 = load i8, i8* %arrayidx203, align 1, !dbg !8729
  %tobool204 = icmp ne i8 %190, 0, !dbg !8729
  br i1 %tobool204, label %if.then205, label %if.end224, !dbg !8733

if.then205:                                       ; preds = %if.then193
  call void @llvm.dbg.declare(metadata [4 x float]* %newColor_f206, metadata !8734, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.declare(metadata float* %mask207, metadata !8737, metadata !DIExpression()), !dbg !8738
  %191 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8739
  %mask208 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %191, i32 0, i32 3, !dbg !8740
  %192 = load i16, i16* %mask208, align 8, !dbg !8740
  %conv209 = uitofp i16 %192 to float, !dbg !8741
  %mul210 = fmul float %conv209, 0x3EF0001000000000, !dbg !8742
  store float %mul210, float* %mask207, align 4, !dbg !8738
  %arraydecay211 = getelementptr inbounds [4 x float], [4 x float]* %newColor_f206, i64 0, i64 0, !dbg !8743
  %193 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8744
  %newColor212 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %193, i32 0, i32 8, !dbg !8745
  %ch213 = bitcast %union.pixelStore* %newColor212 to [4 x i8]*, !dbg !8746
  %arraydecay214 = getelementptr inbounds [4 x i8], [4 x i8]* %ch213, i64 0, i64 0, !dbg !8744
  call void @straight_uchar_to_premul_float(float* %arraydecay211, i8* %arraydecay214), !dbg !8747
  %arraydecay215 = getelementptr inbounds [4 x float], [4 x float]* %newColor_f206, i64 0, i64 0, !dbg !8748
  %194 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8749
  %reproject_ibuf216 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %194, i32 0, i32 73, !dbg !8750
  %195 = load %struct.ImBuf*, %struct.ImBuf** %reproject_ibuf216, align 8, !dbg !8750
  %rect_colorspace = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %195, i32 0, i32 34, !dbg !8751
  %196 = load %struct.ColorSpace*, %struct.ColorSpace** %rect_colorspace, align 8, !dbg !8751
  call void @IMB_colormanagement_colorspace_to_scene_linear_v4(float* %arraydecay215, i8 zeroext 1, %struct.ColorSpace* %196), !dbg !8752
  %arraydecay217 = getelementptr inbounds [4 x float], [4 x float]* %newColor_f206, i64 0, i64 0, !dbg !8753
  %arraydecay218 = getelementptr inbounds [4 x float], [4 x float]* %newColor_f206, i64 0, i64 0, !dbg !8754
  %197 = load float, float* %mask207, align 4, !dbg !8755
  call void @mul_v4_v4fl(float* %arraydecay217, float* %arraydecay218, float %197), !dbg !8756
  %198 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8757
  %pixel219 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %198, i32 0, i32 9, !dbg !8758
  %f_pt220 = bitcast %union.pixelPointer* %pixel219 to float**, !dbg !8759
  %199 = load float*, float** %f_pt220, align 8, !dbg !8759
  %200 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8760
  %origColor221 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %200, i32 0, i32 7, !dbg !8761
  %f_pt222 = bitcast %union.pixelPointer* %origColor221 to float**, !dbg !8762
  %201 = load float*, float** %f_pt222, align 8, !dbg !8762
  %arraydecay223 = getelementptr inbounds [4 x float], [4 x float]* %newColor_f206, i64 0, i64 0, !dbg !8763
  call void @blend_color_mix_float(float* %199, float* %201, float* %arraydecay223), !dbg !8764
  br label %if.end224, !dbg !8765

if.end224:                                        ; preds = %if.then205, %if.then193
  br label %if.end257, !dbg !8766

if.else225:                                       ; preds = %if.else191
  %202 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8767
  %reproject_ibuf226 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %202, i32 0, i32 73, !dbg !8769
  %203 = load %struct.ImBuf*, %struct.ImBuf** %reproject_ibuf226, align 8, !dbg !8769
  %204 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8770
  %newColor227 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %204, i32 0, i32 8, !dbg !8771
  %ch228 = bitcast %union.pixelStore* %newColor227 to [4 x i8]*, !dbg !8772
  %arraydecay229 = getelementptr inbounds [4 x i8], [4 x i8]* %ch228, i64 0, i64 0, !dbg !8770
  %205 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8773
  %projCoSS230 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %205, i32 0, i32 0, !dbg !8774
  %arrayidx231 = getelementptr inbounds [2 x float], [2 x float]* %projCoSS230, i64 0, i64 0, !dbg !8773
  %206 = load float, float* %arrayidx231, align 8, !dbg !8773
  %207 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8775
  %projCoSS232 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %207, i32 0, i32 0, !dbg !8776
  %arrayidx233 = getelementptr inbounds [2 x float], [2 x float]* %projCoSS232, i64 0, i64 1, !dbg !8775
  %208 = load float, float* %arrayidx233, align 4, !dbg !8775
  call void @bicubic_interpolation_color(%struct.ImBuf* %203, i8* %arraydecay229, float* null, float %206, float %208), !dbg !8777
  %209 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8778
  %newColor234 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %209, i32 0, i32 8, !dbg !8780
  %ch235 = bitcast %union.pixelStore* %newColor234 to [4 x i8]*, !dbg !8781
  %arrayidx236 = getelementptr inbounds [4 x i8], [4 x i8]* %ch235, i64 0, i64 3, !dbg !8778
  %210 = load i8, i8* %arrayidx236, align 1, !dbg !8778
  %tobool237 = icmp ne i8 %210, 0, !dbg !8778
  br i1 %tobool237, label %if.then238, label %if.end256, !dbg !8782

if.then238:                                       ; preds = %if.else225
  call void @llvm.dbg.declare(metadata float* %mask239, metadata !8783, metadata !DIExpression()), !dbg !8785
  %211 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8786
  %mask240 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %211, i32 0, i32 3, !dbg !8787
  %212 = load i16, i16* %mask240, align 8, !dbg !8787
  %conv241 = uitofp i16 %212 to float, !dbg !8788
  %mul242 = fmul float %conv241, 0x3EF0001000000000, !dbg !8789
  store float %mul242, float* %mask239, align 4, !dbg !8785
  %213 = load float, float* %mask239, align 4, !dbg !8790
  %214 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8791
  %newColor243 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %214, i32 0, i32 8, !dbg !8792
  %ch244 = bitcast %union.pixelStore* %newColor243 to [4 x i8]*, !dbg !8793
  %arrayidx245 = getelementptr inbounds [4 x i8], [4 x i8]* %ch244, i64 0, i64 3, !dbg !8791
  %215 = load i8, i8* %arrayidx245, align 1, !dbg !8794
  %conv246 = uitofp i8 %215 to float, !dbg !8794
  %mul247 = fmul float %conv246, %213, !dbg !8794
  %conv248 = fptoui float %mul247 to i8, !dbg !8794
  store i8 %conv248, i8* %arrayidx245, align 1, !dbg !8794
  %216 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8795
  %pixel249 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %216, i32 0, i32 9, !dbg !8796
  %ch_pt250 = bitcast %union.pixelPointer* %pixel249 to i8**, !dbg !8797
  %217 = load i8*, i8** %ch_pt250, align 8, !dbg !8797
  %218 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8798
  %origColor251 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %218, i32 0, i32 7, !dbg !8799
  %ch_pt252 = bitcast %union.pixelPointer* %origColor251 to i8**, !dbg !8800
  %219 = load i8*, i8** %ch_pt252, align 8, !dbg !8800
  %220 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8801
  %newColor253 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %220, i32 0, i32 8, !dbg !8802
  %ch254 = bitcast %union.pixelStore* %newColor253 to [4 x i8]*, !dbg !8803
  %arraydecay255 = getelementptr inbounds [4 x i8], [4 x i8]* %ch254, i64 0, i64 0, !dbg !8801
  call void @blend_color_mix_byte(i8* %217, i8* %219, i8* %arraydecay255), !dbg !8804
  br label %if.end256, !dbg !8805

if.end256:                                        ; preds = %if.then238, %if.else225
  br label %if.end257

if.end257:                                        ; preds = %if.end256, %if.end224
  br label %if.end258

if.end258:                                        ; preds = %if.end257, %if.end172
  br label %for.inc, !dbg !8806

for.inc:                                          ; preds = %if.end258
  %221 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !8807
  %next = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %221, i32 0, i32 0, !dbg !8808
  %222 = load %struct.LinkNode*, %struct.LinkNode** %next, align 8, !dbg !8808
  store %struct.LinkNode* %222, %struct.LinkNode** %node, align 8, !dbg !8809
  br label %for.cond, !dbg !8810, !llvm.loop !8811

for.end:                                          ; preds = %for.cond
  br label %if.end475, !dbg !8813

if.else259:                                       ; preds = %if.end36
  %223 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8814
  %bucketRect260 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %223, i32 0, i32 28, !dbg !8817
  %224 = load %struct.LinkNode**, %struct.LinkNode*** %bucketRect260, align 8, !dbg !8817
  %225 = load i32, i32* %bucket_index, align 4, !dbg !8818
  %idxprom261 = sext i32 %225 to i64, !dbg !8814
  %arrayidx262 = getelementptr inbounds %struct.LinkNode*, %struct.LinkNode** %224, i64 %idxprom261, !dbg !8814
  %226 = load %struct.LinkNode*, %struct.LinkNode** %arrayidx262, align 8, !dbg !8814
  store %struct.LinkNode* %226, %struct.LinkNode** %node, align 8, !dbg !8819
  br label %for.cond263, !dbg !8820

for.cond263:                                      ; preds = %for.inc472, %if.else259
  %227 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !8821
  %tobool264 = icmp ne %struct.LinkNode* %227, null, !dbg !8823
  br i1 %tobool264, label %for.body265, label %for.end474, !dbg !8823

for.body265:                                      ; preds = %for.cond263
  %228 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !8824
  %link266 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %228, i32 0, i32 1, !dbg !8826
  %229 = load i8*, i8** %link266, align 8, !dbg !8826
  %230 = bitcast i8* %229 to %struct.ProjPixel*, !dbg !8827
  store %struct.ProjPixel* %230, %struct.ProjPixel** %projPixel, align 8, !dbg !8828
  %231 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8829
  %projCoSS267 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %231, i32 0, i32 0, !dbg !8830
  %arraydecay268 = getelementptr inbounds [2 x float], [2 x float]* %projCoSS267, i64 0, i64 0, !dbg !8829
  %232 = load float*, float** %pos, align 8, !dbg !8831
  %call269 = call float @len_squared_v2v2(float* %arraydecay268, float* %232), !dbg !8832
  store float %call269, float* %dist_sq, align 4, !dbg !8833
  %233 = load float, float* %dist_sq, align 4, !dbg !8834
  %234 = load float, float* %brush_radius_sq, align 4, !dbg !8836
  %cmp270 = fcmp ole float %233, %234, !dbg !8837
  br i1 %cmp270, label %if.then272, label %if.end471, !dbg !8838

if.then272:                                       ; preds = %for.body265
  %235 = load float, float* %dist_sq, align 4, !dbg !8839
  %call273 = call float @sqrtf(float %235) #5, !dbg !8841
  store float %call273, float* %dist, align 4, !dbg !8842
  %236 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8843
  %brush274 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %236, i32 0, i32 7, !dbg !8844
  %237 = load %struct.Brush*, %struct.Brush** %brush274, align 8, !dbg !8844
  %238 = load float, float* %dist, align 4, !dbg !8845
  %239 = load float, float* %brush_radius, align 4, !dbg !8846
  %call275 = call float @BKE_brush_curve_strength_clamp(%struct.Brush* %237, float %238, float %239), !dbg !8847
  store float %call275, float* %falloff, align 4, !dbg !8848
  %240 = load float, float* %falloff, align 4, !dbg !8849
  %cmp276 = fcmp ogt float %240, 0.000000e+00, !dbg !8851
  br i1 %cmp276, label %if.then278, label %if.end470, !dbg !8852

if.then278:                                       ; preds = %if.then272
  call void @llvm.dbg.declare(metadata [3 x float]* %texrgb, metadata !8853, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.declare(metadata float* %mask279, metadata !8856, metadata !DIExpression()), !dbg !8857
  %241 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8858
  %do_masking = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %241, i32 0, i32 62, !dbg !8860
  %242 = load i8, i8* %do_masking, align 2, !dbg !8860
  %tobool280 = icmp ne i8 %242, 0, !dbg !8858
  br i1 %tobool280, label %if.then281, label %if.else319, !dbg !8861

if.then281:                                       ; preds = %if.then278
  call void @llvm.dbg.declare(metadata float* %mask_accum, metadata !8862, metadata !DIExpression()), !dbg !8864
  %243 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8865
  %mask_accum282 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %243, i32 0, i32 2, !dbg !8866
  %244 = load i16*, i16** %mask_accum282, align 8, !dbg !8866
  %245 = load i16, i16* %244, align 2, !dbg !8867
  %conv283 = uitofp i16 %245 to float, !dbg !8867
  store float %conv283, float* %mask_accum, align 4, !dbg !8864
  call void @llvm.dbg.declare(metadata float* %max_mask, metadata !8868, metadata !DIExpression()), !dbg !8869
  %246 = load float, float* %brush_alpha, align 4, !dbg !8870
  %247 = load float, float* %falloff, align 4, !dbg !8871
  %mul284 = fmul float %246, %247, !dbg !8872
  %mul285 = fmul float %mul284, 6.553500e+04, !dbg !8873
  store float %mul285, float* %max_mask, align 4, !dbg !8869
  %248 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8874
  %is_maskbrush = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %248, i32 0, i32 64, !dbg !8876
  %249 = load i8, i8* %is_maskbrush, align 4, !dbg !8876
  %tobool286 = icmp ne i8 %249, 0, !dbg !8874
  br i1 %tobool286, label %if.then287, label %if.end294, !dbg !8877

if.then287:                                       ; preds = %if.then281
  call void @llvm.dbg.declare(metadata float* %texmask, metadata !8878, metadata !DIExpression()), !dbg !8880
  %250 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8881
  %scene288 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %250, i32 0, i32 3, !dbg !8882
  %251 = load %struct.Scene*, %struct.Scene** %scene288, align 8, !dbg !8882
  %252 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8883
  %brush289 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %252, i32 0, i32 7, !dbg !8884
  %253 = load %struct.Brush*, %struct.Brush** %brush289, align 8, !dbg !8884
  %254 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8885
  %projCoSS290 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %254, i32 0, i32 0, !dbg !8886
  %arraydecay291 = getelementptr inbounds [2 x float], [2 x float]* %projCoSS290, i64 0, i64 0, !dbg !8885
  %255 = load i32, i32* %thread_index, align 4, !dbg !8887
  %256 = load %struct.ImagePool*, %struct.ImagePool** %pool, align 8, !dbg !8888
  %call292 = call float @BKE_brush_sample_masktex(%struct.Scene* %251, %struct.Brush* %253, float* %arraydecay291, i32 %255, %struct.ImagePool* %256), !dbg !8889
  store float %call292, float* %texmask, align 4, !dbg !8880
  %257 = load float, float* %texmask, align 4, !dbg !8890
  %258 = load float, float* %max_mask, align 4, !dbg !8891
  %mul293 = fmul float %258, %257, !dbg !8891
  store float %mul293, float* %max_mask, align 4, !dbg !8891
  br label %if.end294, !dbg !8892

if.end294:                                        ; preds = %if.then287, %if.then281
  %259 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8893
  %flag295 = getelementptr inbounds %struct.Brush, %struct.Brush* %259, i32 0, i32 16, !dbg !8895
  %260 = load i32, i32* %flag295, align 8, !dbg !8895
  %and296 = and i32 %260, 8192, !dbg !8896
  %tobool297 = icmp ne i32 %and296, 0, !dbg !8896
  br i1 %tobool297, label %if.then298, label %if.else300, !dbg !8897

if.then298:                                       ; preds = %if.end294
  %261 = load float, float* %mask_accum, align 4, !dbg !8898
  %262 = load float, float* %max_mask, align 4, !dbg !8899
  %add299 = fadd float %261, %262, !dbg !8900
  store float %add299, float* %mask279, align 4, !dbg !8901
  br label %if.end304, !dbg !8902

if.else300:                                       ; preds = %if.end294
  %263 = load float, float* %mask_accum, align 4, !dbg !8903
  %264 = load float, float* %max_mask, align 4, !dbg !8904
  %265 = load float, float* %mask_accum, align 4, !dbg !8905
  %266 = load float, float* %falloff, align 4, !dbg !8906
  %mul301 = fmul float %265, %266, !dbg !8907
  %sub302 = fsub float %264, %mul301, !dbg !8908
  %add303 = fadd float %263, %sub302, !dbg !8909
  store float %add303, float* %mask279, align 4, !dbg !8910
  br label %if.end304

if.end304:                                        ; preds = %if.else300, %if.then298
  %267 = load float, float* %mask279, align 4, !dbg !8911
  %call305 = call float @min_ff(float %267, float 6.553500e+04), !dbg !8912
  store float %call305, float* %mask279, align 4, !dbg !8913
  %268 = load float, float* %mask279, align 4, !dbg !8914
  %conv306 = fptoui float %268 to i16, !dbg !8915
  store i16 %conv306, i16* %mask_short, align 2, !dbg !8916
  %269 = load i16, i16* %mask_short, align 2, !dbg !8917
  %conv307 = zext i16 %269 to i32, !dbg !8917
  %270 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8919
  %mask_accum308 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %270, i32 0, i32 2, !dbg !8920
  %271 = load i16*, i16** %mask_accum308, align 8, !dbg !8920
  %272 = load i16, i16* %271, align 2, !dbg !8921
  %conv309 = zext i16 %272 to i32, !dbg !8921
  %cmp310 = icmp sgt i32 %conv307, %conv309, !dbg !8922
  br i1 %cmp310, label %if.then312, label %if.else317, !dbg !8923

if.then312:                                       ; preds = %if.end304
  %273 = load i16, i16* %mask_short, align 2, !dbg !8924
  %274 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8926
  %mask_accum313 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %274, i32 0, i32 2, !dbg !8927
  %275 = load i16*, i16** %mask_accum313, align 8, !dbg !8927
  store i16 %273, i16* %275, align 2, !dbg !8928
  %276 = load i16, i16* %mask_short, align 2, !dbg !8929
  %conv314 = zext i16 %276 to i32, !dbg !8929
  %conv315 = sitofp i32 %conv314 to float, !dbg !8929
  %mul316 = fmul float %conv315, 0x3EF0001000000000, !dbg !8930
  store float %mul316, float* %mask279, align 4, !dbg !8931
  br label %if.end318, !dbg !8932

if.else317:                                       ; preds = %if.end304
  br label %for.inc472, !dbg !8933

if.end318:                                        ; preds = %if.then312
  br label %if.end341, !dbg !8935

if.else319:                                       ; preds = %if.then278
  %277 = load float, float* %brush_alpha, align 4, !dbg !8936
  %278 = load float, float* %falloff, align 4, !dbg !8938
  %mul320 = fmul float %277, %278, !dbg !8939
  store float %mul320, float* %mask279, align 4, !dbg !8940
  %279 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8941
  %is_maskbrush321 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %279, i32 0, i32 64, !dbg !8943
  %280 = load i8, i8* %is_maskbrush321, align 4, !dbg !8943
  %tobool322 = icmp ne i8 %280, 0, !dbg !8941
  br i1 %tobool322, label %if.then323, label %if.end340, !dbg !8944

if.then323:                                       ; preds = %if.else319
  call void @llvm.dbg.declare(metadata float* %texmask324, metadata !8945, metadata !DIExpression()), !dbg !8947
  %281 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8948
  %scene325 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %281, i32 0, i32 3, !dbg !8949
  %282 = load %struct.Scene*, %struct.Scene** %scene325, align 8, !dbg !8949
  %283 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8950
  %brush326 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %283, i32 0, i32 7, !dbg !8951
  %284 = load %struct.Brush*, %struct.Brush** %brush326, align 8, !dbg !8951
  %285 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8952
  %projCoSS327 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %285, i32 0, i32 0, !dbg !8953
  %arraydecay328 = getelementptr inbounds [2 x float], [2 x float]* %projCoSS327, i64 0, i64 0, !dbg !8952
  %286 = load i32, i32* %thread_index, align 4, !dbg !8954
  %287 = load %struct.ImagePool*, %struct.ImagePool** %pool, align 8, !dbg !8955
  %call329 = call float @BKE_brush_sample_masktex(%struct.Scene* %282, %struct.Brush* %284, float* %arraydecay328, i32 %286, %struct.ImagePool* %287), !dbg !8956
  store float %call329, float* %texmask324, align 4, !dbg !8947
  %288 = load float, float* %texmask324, align 4, !dbg !8957
  %cmp330 = fcmp olt float %288, 0.000000e+00, !dbg !8957
  br i1 %cmp330, label %if.then332, label %if.else333, !dbg !8960

if.then332:                                       ; preds = %if.then323
  store float 0.000000e+00, float* %texmask324, align 4, !dbg !8957
  br label %if.end338, !dbg !8957

if.else333:                                       ; preds = %if.then323
  %289 = load float, float* %texmask324, align 4, !dbg !8961
  %cmp334 = fcmp ogt float %289, 1.000000e+00, !dbg !8961
  br i1 %cmp334, label %if.then336, label %if.end337, !dbg !8957

if.then336:                                       ; preds = %if.else333
  store float 1.000000e+00, float* %texmask324, align 4, !dbg !8961
  br label %if.end337, !dbg !8961

if.end337:                                        ; preds = %if.then336, %if.else333
  br label %if.end338

if.end338:                                        ; preds = %if.end337, %if.then332
  %290 = load float, float* %texmask324, align 4, !dbg !8963
  %291 = load float, float* %mask279, align 4, !dbg !8964
  %mul339 = fmul float %291, %290, !dbg !8964
  store float %mul339, float* %mask279, align 4, !dbg !8964
  br label %if.end340, !dbg !8965

if.end340:                                        ; preds = %if.end338, %if.else319
  br label %if.end341

if.end341:                                        ; preds = %if.end340, %if.end318
  %292 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8966
  %is_texbrush = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %292, i32 0, i32 63, !dbg !8968
  %293 = load i8, i8* %is_texbrush, align 1, !dbg !8968
  %tobool342 = icmp ne i8 %293, 0, !dbg !8966
  br i1 %tobool342, label %if.then343, label %if.end365, !dbg !8969

if.then343:                                       ; preds = %if.end341
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex, metadata !8970, metadata !DIExpression()), !dbg !8974
  %294 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8975
  %mtex344 = getelementptr inbounds %struct.Brush, %struct.Brush* %294, i32 0, i32 3, !dbg !8976
  store %struct.MTex* %mtex344, %struct.MTex** %mtex, align 8, !dbg !8974
  call void @llvm.dbg.declare(metadata [3 x float]* %samplecos, metadata !8977, metadata !DIExpression()), !dbg !8978
  call void @llvm.dbg.declare(metadata [4 x float]* %texrgba, metadata !8979, metadata !DIExpression()), !dbg !8980
  %295 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !8981
  %brush_map_mode = getelementptr inbounds %struct.MTex, %struct.MTex* %295, i32 0, i32 20, !dbg !8983
  %296 = load i8, i8* %brush_map_mode, align 4, !dbg !8983
  %conv345 = zext i8 %296 to i32, !dbg !8981
  %cmp346 = icmp eq i32 %conv345, 2, !dbg !8984
  br i1 %cmp346, label %if.then348, label %if.else351, !dbg !8985

if.then348:                                       ; preds = %if.then343
  %arraydecay349 = getelementptr inbounds [3 x float], [3 x float]* %samplecos, i64 0, i64 0, !dbg !8986
  %297 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8988
  %worldCoSS = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %297, i32 0, i32 1, !dbg !8989
  %arraydecay350 = getelementptr inbounds [3 x float], [3 x float]* %worldCoSS, i64 0, i64 0, !dbg !8988
  call void @copy_v3_v3(float* %arraydecay349, float* %arraydecay350), !dbg !8990
  br label %if.end356, !dbg !8991

if.else351:                                       ; preds = %if.then343
  %arraydecay352 = getelementptr inbounds [3 x float], [3 x float]* %samplecos, i64 0, i64 0, !dbg !8992
  %298 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !8994
  %projCoSS353 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %298, i32 0, i32 0, !dbg !8995
  %arraydecay354 = getelementptr inbounds [2 x float], [2 x float]* %projCoSS353, i64 0, i64 0, !dbg !8994
  call void @copy_v2_v2(float* %arraydecay352, float* %arraydecay354), !dbg !8996
  %arrayidx355 = getelementptr inbounds [3 x float], [3 x float]* %samplecos, i64 0, i64 2, !dbg !8997
  store float 0.000000e+00, float* %arrayidx355, align 4, !dbg !8998
  br label %if.end356

if.end356:                                        ; preds = %if.else351, %if.then348
  %299 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !8999
  %scene357 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %299, i32 0, i32 3, !dbg !9000
  %300 = load %struct.Scene*, %struct.Scene** %scene357, align 8, !dbg !9000
  %301 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !9001
  %arraydecay358 = getelementptr inbounds [3 x float], [3 x float]* %samplecos, i64 0, i64 0, !dbg !9002
  %arraydecay359 = getelementptr inbounds [4 x float], [4 x float]* %texrgba, i64 0, i64 0, !dbg !9003
  %302 = load i32, i32* %thread_index, align 4, !dbg !9004
  %303 = load %struct.ImagePool*, %struct.ImagePool** %pool, align 8, !dbg !9005
  %call360 = call float @BKE_brush_sample_tex_3D(%struct.Scene* %300, %struct.Brush* %301, float* %arraydecay358, float* %arraydecay359, i32 %302, %struct.ImagePool* %303), !dbg !9006
  %arraydecay361 = getelementptr inbounds [3 x float], [3 x float]* %texrgb, i64 0, i64 0, !dbg !9007
  %arraydecay362 = getelementptr inbounds [4 x float], [4 x float]* %texrgba, i64 0, i64 0, !dbg !9008
  call void @copy_v3_v3(float* %arraydecay361, float* %arraydecay362), !dbg !9009
  %arrayidx363 = getelementptr inbounds [4 x float], [4 x float]* %texrgba, i64 0, i64 3, !dbg !9010
  %304 = load float, float* %arrayidx363, align 4, !dbg !9010
  %305 = load float, float* %mask279, align 4, !dbg !9011
  %mul364 = fmul float %305, %304, !dbg !9011
  store float %mul364, float* %mask279, align 4, !dbg !9011
  br label %if.end365, !dbg !9012

if.end365:                                        ; preds = %if.end356, %if.end341
  %306 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9013
  %mask366 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %306, i32 0, i32 3, !dbg !9014
  %307 = load i16, i16* %mask366, align 8, !dbg !9014
  %conv367 = uitofp i16 %307 to float, !dbg !9015
  %mul368 = fmul float %conv367, 0x3EF0001000000000, !dbg !9016
  %308 = load float, float* %mask279, align 4, !dbg !9017
  %mul369 = fmul float %308, %mul368, !dbg !9017
  store float %mul369, float* %mask279, align 4, !dbg !9017
  %309 = load float, float* %mask279, align 4, !dbg !9018
  %cmp370 = fcmp ogt float %309, 0.000000e+00, !dbg !9020
  br i1 %cmp370, label %if.then372, label %if.end450, !dbg !9021

if.then372:                                       ; preds = %if.end365
  %310 = load i32, i32* %last_index, align 4, !dbg !9022
  %311 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9025
  %image_index373 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %311, i32 0, i32 10, !dbg !9026
  %312 = load i16, i16* %image_index373, align 8, !dbg !9026
  %conv374 = sext i16 %312 to i32, !dbg !9025
  %cmp375 = icmp ne i32 %310, %conv374, !dbg !9027
  br i1 %cmp375, label %if.then377, label %if.end388, !dbg !9028

if.then377:                                       ; preds = %if.then372
  %313 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9029
  %image_index378 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %313, i32 0, i32 10, !dbg !9031
  %314 = load i16, i16* %image_index378, align 8, !dbg !9031
  %conv379 = sext i16 %314 to i32, !dbg !9029
  store i32 %conv379, i32* %last_index, align 4, !dbg !9032
  %315 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages, align 8, !dbg !9033
  %316 = load i32, i32* %last_index, align 4, !dbg !9034
  %idx.ext380 = sext i32 %316 to i64, !dbg !9035
  %add.ptr381 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %315, i64 %idx.ext380, !dbg !9035
  store %struct.ProjPaintImage* %add.ptr381, %struct.ProjPaintImage** %last_projIma, align 8, !dbg !9036
  %317 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %last_projIma, align 8, !dbg !9037
  %touch382 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %317, i32 0, i32 6, !dbg !9038
  store i32 1, i32* %touch382, align 8, !dbg !9039
  %318 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %last_projIma, align 8, !dbg !9040
  %ibuf383 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %318, i32 0, i32 1, !dbg !9041
  %319 = load %struct.ImBuf*, %struct.ImBuf** %ibuf383, align 8, !dbg !9041
  %rect_float384 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %319, i32 0, i32 9, !dbg !9042
  %320 = load float*, float** %rect_float384, align 8, !dbg !9042
  %cmp385 = icmp ne float* %320, null, !dbg !9043
  %conv386 = zext i1 %cmp385 to i32, !dbg !9043
  %conv387 = trunc i32 %conv386 to i8, !dbg !9044
  store i8 %conv387, i8* %is_floatbuf, align 1, !dbg !9045
  br label %if.end388, !dbg !9046

if.end388:                                        ; preds = %if.then377, %if.then372
  %321 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9047
  %valid = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %321, i32 0, i32 6, !dbg !9048
  %322 = load i8*, i8** %valid, align 8, !dbg !9048
  store i8 1, i8* %322, align 1, !dbg !9049
  %323 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %last_projIma, align 8, !dbg !9050
  %partRedrawRect389 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %323, i32 0, i32 2, !dbg !9051
  %324 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %partRedrawRect389, align 8, !dbg !9051
  %325 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9052
  %bb_cell_index390 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %325, i32 0, i32 11, !dbg !9053
  %326 = load i8, i8* %bb_cell_index390, align 2, !dbg !9053
  %conv391 = zext i8 %326 to i32, !dbg !9052
  %idx.ext392 = sext i32 %conv391 to i64, !dbg !9054
  %add.ptr393 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %324, i64 %idx.ext392, !dbg !9054
  store %struct.ImagePaintPartialRedraw* %add.ptr393, %struct.ImagePaintPartialRedraw** %last_partial_redraw_cell, align 8, !dbg !9055
  %327 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %last_partial_redraw_cell, align 8, !dbg !9056
  %x1394 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %327, i32 0, i32 0, !dbg !9057
  %328 = load i32, i32* %x1394, align 4, !dbg !9057
  %329 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9058
  %x_px395 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %329, i32 0, i32 4, !dbg !9059
  %330 = load i16, i16* %x_px395, align 2, !dbg !9059
  %conv396 = sext i16 %330 to i32, !dbg !9060
  %call397 = call i32 @min_ii(i32 %328, i32 %conv396), !dbg !9061
  %331 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %last_partial_redraw_cell, align 8, !dbg !9062
  %x1398 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %331, i32 0, i32 0, !dbg !9063
  store i32 %call397, i32* %x1398, align 4, !dbg !9064
  %332 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %last_partial_redraw_cell, align 8, !dbg !9065
  %y1399 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %332, i32 0, i32 1, !dbg !9066
  %333 = load i32, i32* %y1399, align 4, !dbg !9066
  %334 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9067
  %y_px400 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %334, i32 0, i32 5, !dbg !9068
  %335 = load i16, i16* %y_px400, align 4, !dbg !9068
  %conv401 = sext i16 %335 to i32, !dbg !9069
  %call402 = call i32 @min_ii(i32 %333, i32 %conv401), !dbg !9070
  %336 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %last_partial_redraw_cell, align 8, !dbg !9071
  %y1403 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %336, i32 0, i32 1, !dbg !9072
  store i32 %call402, i32* %y1403, align 4, !dbg !9073
  %337 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %last_partial_redraw_cell, align 8, !dbg !9074
  %x2404 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %337, i32 0, i32 2, !dbg !9075
  %338 = load i32, i32* %x2404, align 4, !dbg !9075
  %339 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9076
  %x_px405 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %339, i32 0, i32 4, !dbg !9077
  %340 = load i16, i16* %x_px405, align 2, !dbg !9077
  %conv406 = sext i16 %340 to i32, !dbg !9078
  %add407 = add nsw i32 %conv406, 1, !dbg !9079
  %call408 = call i32 @max_ii(i32 %338, i32 %add407), !dbg !9080
  %341 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %last_partial_redraw_cell, align 8, !dbg !9081
  %x2409 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %341, i32 0, i32 2, !dbg !9082
  store i32 %call408, i32* %x2409, align 4, !dbg !9083
  %342 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %last_partial_redraw_cell, align 8, !dbg !9084
  %y2410 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %342, i32 0, i32 3, !dbg !9085
  %343 = load i32, i32* %y2410, align 4, !dbg !9085
  %344 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9086
  %y_px411 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %344, i32 0, i32 5, !dbg !9087
  %345 = load i16, i16* %y_px411, align 4, !dbg !9087
  %conv412 = sext i16 %345 to i32, !dbg !9088
  %add413 = add nsw i32 %conv412, 1, !dbg !9089
  %call414 = call i32 @max_ii(i32 %343, i32 %add413), !dbg !9090
  %346 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %last_partial_redraw_cell, align 8, !dbg !9091
  %y2415 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %346, i32 0, i32 3, !dbg !9092
  store i32 %call414, i32* %y2415, align 4, !dbg !9093
  %347 = load i16, i16* %tool, align 2, !dbg !9094
  %conv416 = sext i16 %347 to i32, !dbg !9094
  switch i32 %conv416, label %sw.default [
    i32 3, label %sw.bb417
    i32 2, label %sw.bb422
    i32 1, label %sw.bb433
    i32 5, label %sw.bb438
  ], !dbg !9095

sw.bb417:                                         ; preds = %if.end388
  %348 = load i8, i8* %is_floatbuf, align 1, !dbg !9096
  %tobool418 = icmp ne i8 %348, 0, !dbg !9096
  br i1 %tobool418, label %if.then419, label %if.else420, !dbg !9099

if.then419:                                       ; preds = %sw.bb417
  %349 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !9100
  %350 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9101
  %351 = load float, float* %mask279, align 4, !dbg !9102
  call void @do_projectpaint_clone_f(%struct.ProjPaintState* %349, %struct.ProjPixel* %350, float %351), !dbg !9103
  br label %if.end421, !dbg !9103

if.else420:                                       ; preds = %sw.bb417
  %352 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !9104
  %353 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9105
  %354 = load float, float* %mask279, align 4, !dbg !9106
  call void @do_projectpaint_clone(%struct.ProjPaintState* %352, %struct.ProjPixel* %353, float %354), !dbg !9107
  br label %if.end421

if.end421:                                        ; preds = %if.else420, %if.then419
  br label %sw.epilog449, !dbg !9108

sw.bb422:                                         ; preds = %if.end388
  %arraydecay423 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !9109
  %355 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9110
  %projCoSS424 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %355, i32 0, i32 0, !dbg !9111
  %arraydecay425 = getelementptr inbounds [2 x float], [2 x float]* %projCoSS424, i64 0, i64 0, !dbg !9110
  %arraydecay426 = getelementptr inbounds [2 x float], [2 x float]* %pos_ofs, i64 0, i64 0, !dbg !9112
  call void @sub_v2_v2v2(float* %arraydecay423, float* %arraydecay425, float* %arraydecay426), !dbg !9113
  %356 = load i8, i8* %is_floatbuf, align 1, !dbg !9114
  %tobool427 = icmp ne i8 %356, 0, !dbg !9114
  br i1 %tobool427, label %if.then428, label %if.else430, !dbg !9116

if.then428:                                       ; preds = %sw.bb422
  %357 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !9117
  %358 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9118
  %359 = load float, float* %mask279, align 4, !dbg !9119
  %360 = load %struct.MemArena*, %struct.MemArena** %smearArena, align 8, !dbg !9120
  %arraydecay429 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !9121
  call void @do_projectpaint_smear_f(%struct.ProjPaintState* %357, %struct.ProjPixel* %358, float %359, %struct.MemArena* %360, %struct.LinkNode** %smearPixels_f, float* %arraydecay429), !dbg !9122
  br label %if.end432, !dbg !9122

if.else430:                                       ; preds = %sw.bb422
  %361 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !9123
  %362 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9124
  %363 = load float, float* %mask279, align 4, !dbg !9125
  %364 = load %struct.MemArena*, %struct.MemArena** %smearArena, align 8, !dbg !9126
  %arraydecay431 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !9127
  call void @do_projectpaint_smear(%struct.ProjPaintState* %361, %struct.ProjPixel* %362, float %363, %struct.MemArena* %364, %struct.LinkNode** %smearPixels, float* %arraydecay431), !dbg !9128
  br label %if.end432

if.end432:                                        ; preds = %if.else430, %if.then428
  br label %sw.epilog449, !dbg !9129

sw.bb433:                                         ; preds = %if.end388
  %365 = load i8, i8* %is_floatbuf, align 1, !dbg !9130
  %tobool434 = icmp ne i8 %365, 0, !dbg !9130
  br i1 %tobool434, label %if.then435, label %if.else436, !dbg !9132

if.then435:                                       ; preds = %sw.bb433
  %366 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !9133
  %367 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9134
  %368 = load float, float* %mask279, align 4, !dbg !9135
  %369 = load %struct.MemArena*, %struct.MemArena** %softenArena, align 8, !dbg !9136
  call void @do_projectpaint_soften_f(%struct.ProjPaintState* %366, %struct.ProjPixel* %367, float %368, %struct.MemArena* %369, %struct.LinkNode** %softenPixels_f), !dbg !9137
  br label %if.end437, !dbg !9137

if.else436:                                       ; preds = %sw.bb433
  %370 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !9138
  %371 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9139
  %372 = load float, float* %mask279, align 4, !dbg !9140
  %373 = load %struct.MemArena*, %struct.MemArena** %softenArena, align 8, !dbg !9141
  call void @do_projectpaint_soften(%struct.ProjPaintState* %370, %struct.ProjPixel* %371, float %372, %struct.MemArena* %373, %struct.LinkNode** %softenPixels), !dbg !9142
  br label %if.end437

if.end437:                                        ; preds = %if.else436, %if.then435
  br label %sw.epilog449, !dbg !9143

sw.bb438:                                         ; preds = %if.end388
  %374 = load i8, i8* %is_floatbuf, align 1, !dbg !9144
  %tobool439 = icmp ne i8 %374, 0, !dbg !9144
  br i1 %tobool439, label %if.then440, label %if.else441, !dbg !9146

if.then440:                                       ; preds = %sw.bb438
  %375 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !9147
  %376 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9148
  %377 = load float, float* %mask279, align 4, !dbg !9149
  call void @do_projectpaint_mask_f(%struct.ProjPaintState* %375, %struct.ProjPixel* %376, float %377), !dbg !9150
  br label %if.end442, !dbg !9150

if.else441:                                       ; preds = %sw.bb438
  %378 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !9151
  %379 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9152
  %380 = load float, float* %mask279, align 4, !dbg !9153
  call void @do_projectpaint_mask(%struct.ProjPaintState* %378, %struct.ProjPixel* %379, float %380), !dbg !9154
  br label %if.end442

if.end442:                                        ; preds = %if.else441, %if.then440
  br label %sw.epilog449, !dbg !9155

sw.default:                                       ; preds = %if.end388
  %381 = load i8, i8* %is_floatbuf, align 1, !dbg !9156
  %tobool443 = icmp ne i8 %381, 0, !dbg !9156
  br i1 %tobool443, label %if.then444, label %if.else446, !dbg !9158

if.then444:                                       ; preds = %sw.default
  %382 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !9159
  %383 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9160
  %arraydecay445 = getelementptr inbounds [3 x float], [3 x float]* %texrgb, i64 0, i64 0, !dbg !9161
  %384 = load float, float* %mask279, align 4, !dbg !9162
  call void @do_projectpaint_draw_f(%struct.ProjPaintState* %382, %struct.ProjPixel* %383, float* %arraydecay445, float %384), !dbg !9163
  br label %if.end448, !dbg !9163

if.else446:                                       ; preds = %sw.default
  %385 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps, align 8, !dbg !9164
  %386 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9165
  %arraydecay447 = getelementptr inbounds [3 x float], [3 x float]* %texrgb, i64 0, i64 0, !dbg !9166
  %387 = load float, float* %mask279, align 4, !dbg !9167
  call void @do_projectpaint_draw(%struct.ProjPaintState* %385, %struct.ProjPixel* %386, float* %arraydecay447, float %387), !dbg !9168
  br label %if.end448

if.end448:                                        ; preds = %if.else446, %if.then444
  br label %sw.epilog449, !dbg !9169

sw.epilog449:                                     ; preds = %if.end448, %if.end442, %if.end437, %if.end432, %if.end421
  br label %if.end450, !dbg !9170

if.end450:                                        ; preds = %sw.epilog449, %if.end365
  %388 = load i16, i16* %lock_alpha, align 2, !dbg !9171
  %tobool451 = icmp ne i16 %388, 0, !dbg !9171
  br i1 %tobool451, label %if.then452, label %if.end469, !dbg !9173

if.then452:                                       ; preds = %if.end450
  %389 = load i8, i8* %is_floatbuf, align 1, !dbg !9174
  %tobool453 = icmp ne i8 %389, 0, !dbg !9174
  br i1 %tobool453, label %if.then454, label %if.else461, !dbg !9177

if.then454:                                       ; preds = %if.then452
  %390 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9178
  %origColor455 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %390, i32 0, i32 7, !dbg !9179
  %f_pt456 = bitcast %union.pixelPointer* %origColor455 to float**, !dbg !9180
  %391 = load float*, float** %f_pt456, align 8, !dbg !9180
  %arrayidx457 = getelementptr inbounds float, float* %391, i64 3, !dbg !9178
  %392 = load float, float* %arrayidx457, align 4, !dbg !9178
  %393 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9181
  %pixel458 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %393, i32 0, i32 9, !dbg !9182
  %f_pt459 = bitcast %union.pixelPointer* %pixel458 to float**, !dbg !9183
  %394 = load float*, float** %f_pt459, align 8, !dbg !9183
  %arrayidx460 = getelementptr inbounds float, float* %394, i64 3, !dbg !9181
  store float %392, float* %arrayidx460, align 4, !dbg !9184
  br label %if.end468, !dbg !9181

if.else461:                                       ; preds = %if.then452
  %395 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9185
  %origColor462 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %395, i32 0, i32 7, !dbg !9186
  %ch_pt463 = bitcast %union.pixelPointer* %origColor462 to i8**, !dbg !9187
  %396 = load i8*, i8** %ch_pt463, align 8, !dbg !9187
  %arrayidx464 = getelementptr inbounds i8, i8* %396, i64 3, !dbg !9185
  %397 = load i8, i8* %arrayidx464, align 1, !dbg !9185
  %398 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9188
  %pixel465 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %398, i32 0, i32 9, !dbg !9189
  %ch_pt466 = bitcast %union.pixelPointer* %pixel465 to i8**, !dbg !9190
  %399 = load i8*, i8** %ch_pt466, align 8, !dbg !9190
  %arrayidx467 = getelementptr inbounds i8, i8* %399, i64 3, !dbg !9188
  store i8 %397, i8* %arrayidx467, align 1, !dbg !9191
  br label %if.end468

if.end468:                                        ; preds = %if.else461, %if.then454
  br label %if.end469, !dbg !9192

if.end469:                                        ; preds = %if.end468, %if.end450
  br label %if.end470, !dbg !9193

if.end470:                                        ; preds = %if.end469, %if.then272
  br label %if.end471, !dbg !9194

if.end471:                                        ; preds = %if.end470, %for.body265
  br label %for.inc472, !dbg !9195

for.inc472:                                       ; preds = %if.end471, %if.else317
  %400 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !9196
  %next473 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %400, i32 0, i32 0, !dbg !9197
  %401 = load %struct.LinkNode*, %struct.LinkNode** %next473, align 8, !dbg !9197
  store %struct.LinkNode* %401, %struct.LinkNode** %node, align 8, !dbg !9198
  br label %for.cond263, !dbg !9199, !llvm.loop !9200

for.end474:                                       ; preds = %for.cond263
  br label %if.end475

if.end475:                                        ; preds = %for.end474, %for.end
  br label %while.cond, !dbg !8402, !llvm.loop !9202

while.end:                                        ; preds = %while.cond
  %402 = load i16, i16* %tool, align 2, !dbg !9204
  %conv476 = sext i16 %402 to i32, !dbg !9204
  %cmp477 = icmp eq i32 %conv476, 2, !dbg !9206
  br i1 %cmp477, label %if.then479, label %if.else500, !dbg !9207

if.then479:                                       ; preds = %while.end
  %403 = load %struct.LinkNode*, %struct.LinkNode** %smearPixels, align 8, !dbg !9208
  store %struct.LinkNode* %403, %struct.LinkNode** %node, align 8, !dbg !9211
  br label %for.cond480, !dbg !9212

for.cond480:                                      ; preds = %for.inc485, %if.then479
  %404 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !9213
  %tobool481 = icmp ne %struct.LinkNode* %404, null, !dbg !9215
  br i1 %tobool481, label %for.body482, label %for.end487, !dbg !9215

for.body482:                                      ; preds = %for.cond480
  %405 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !9216
  %link483 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %405, i32 0, i32 1, !dbg !9218
  %406 = load i8*, i8** %link483, align 8, !dbg !9218
  %407 = bitcast i8* %406 to %struct.ProjPixel*, !dbg !9216
  store %struct.ProjPixel* %407, %struct.ProjPixel** %projPixel, align 8, !dbg !9219
  %408 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9220
  %409 = bitcast %struct.ProjPixel* %408 to %struct.ProjPixelClone*, !dbg !9221
  %clonepx = getelementptr inbounds %struct.ProjPixelClone, %struct.ProjPixelClone* %409, i32 0, i32 1, !dbg !9221
  %uint = bitcast %union.pixelStore* %clonepx to i32*, !dbg !9222
  %410 = load i32, i32* %uint, align 8, !dbg !9222
  %411 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9223
  %pixel484 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %411, i32 0, i32 9, !dbg !9224
  %uint_pt = bitcast %union.pixelPointer* %pixel484 to i32**, !dbg !9225
  %412 = load i32*, i32** %uint_pt, align 8, !dbg !9225
  store i32 %410, i32* %412, align 4, !dbg !9226
  br label %for.inc485, !dbg !9227

for.inc485:                                       ; preds = %for.body482
  %413 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !9228
  %next486 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %413, i32 0, i32 0, !dbg !9229
  %414 = load %struct.LinkNode*, %struct.LinkNode** %next486, align 8, !dbg !9229
  store %struct.LinkNode* %414, %struct.LinkNode** %node, align 8, !dbg !9230
  br label %for.cond480, !dbg !9231, !llvm.loop !9232

for.end487:                                       ; preds = %for.cond480
  %415 = load %struct.LinkNode*, %struct.LinkNode** %smearPixels_f, align 8, !dbg !9234
  store %struct.LinkNode* %415, %struct.LinkNode** %node, align 8, !dbg !9236
  br label %for.cond488, !dbg !9237

for.cond488:                                      ; preds = %for.inc497, %for.end487
  %416 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !9238
  %tobool489 = icmp ne %struct.LinkNode* %416, null, !dbg !9240
  br i1 %tobool489, label %for.body490, label %for.end499, !dbg !9240

for.body490:                                      ; preds = %for.cond488
  %417 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !9241
  %link491 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %417, i32 0, i32 1, !dbg !9243
  %418 = load i8*, i8** %link491, align 8, !dbg !9243
  %419 = bitcast i8* %418 to %struct.ProjPixel*, !dbg !9241
  store %struct.ProjPixel* %419, %struct.ProjPixel** %projPixel, align 8, !dbg !9244
  %420 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9245
  %pixel492 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %420, i32 0, i32 9, !dbg !9246
  %f_pt493 = bitcast %union.pixelPointer* %pixel492 to float**, !dbg !9247
  %421 = load float*, float** %f_pt493, align 8, !dbg !9247
  %422 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9248
  %423 = bitcast %struct.ProjPixel* %422 to %struct.ProjPixelClone*, !dbg !9249
  %clonepx494 = getelementptr inbounds %struct.ProjPixelClone, %struct.ProjPixelClone* %423, i32 0, i32 1, !dbg !9249
  %f495 = bitcast %union.pixelStore* %clonepx494 to [4 x float]*, !dbg !9250
  %arraydecay496 = getelementptr inbounds [4 x float], [4 x float]* %f495, i64 0, i64 0, !dbg !9251
  call void @copy_v4_v4(float* %421, float* %arraydecay496), !dbg !9252
  br label %for.inc497, !dbg !9253

for.inc497:                                       ; preds = %for.body490
  %424 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !9254
  %next498 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %424, i32 0, i32 0, !dbg !9255
  %425 = load %struct.LinkNode*, %struct.LinkNode** %next498, align 8, !dbg !9255
  store %struct.LinkNode* %425, %struct.LinkNode** %node, align 8, !dbg !9256
  br label %for.cond488, !dbg !9257, !llvm.loop !9258

for.end499:                                       ; preds = %for.cond488
  %426 = load %struct.MemArena*, %struct.MemArena** %smearArena, align 8, !dbg !9260
  call void @BLI_memarena_free(%struct.MemArena* %426), !dbg !9261
  br label %if.end529, !dbg !9262

if.else500:                                       ; preds = %while.end
  %427 = load i16, i16* %tool, align 2, !dbg !9263
  %conv501 = sext i16 %427 to i32, !dbg !9263
  %cmp502 = icmp eq i32 %conv501, 1, !dbg !9265
  br i1 %cmp502, label %if.then504, label %if.end528, !dbg !9266

if.then504:                                       ; preds = %if.else500
  %428 = load %struct.LinkNode*, %struct.LinkNode** %softenPixels, align 8, !dbg !9267
  store %struct.LinkNode* %428, %struct.LinkNode** %node, align 8, !dbg !9270
  br label %for.cond505, !dbg !9271

for.cond505:                                      ; preds = %for.inc513, %if.then504
  %429 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !9272
  %tobool506 = icmp ne %struct.LinkNode* %429, null, !dbg !9274
  br i1 %tobool506, label %for.body507, label %for.end515, !dbg !9274

for.body507:                                      ; preds = %for.cond505
  %430 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !9275
  %link508 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %430, i32 0, i32 1, !dbg !9277
  %431 = load i8*, i8** %link508, align 8, !dbg !9277
  %432 = bitcast i8* %431 to %struct.ProjPixel*, !dbg !9275
  store %struct.ProjPixel* %432, %struct.ProjPixel** %projPixel, align 8, !dbg !9278
  %433 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9279
  %newColor509 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %433, i32 0, i32 8, !dbg !9280
  %uint510 = bitcast %union.pixelStore* %newColor509 to i32*, !dbg !9281
  %434 = load i32, i32* %uint510, align 8, !dbg !9281
  %435 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9282
  %pixel511 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %435, i32 0, i32 9, !dbg !9283
  %uint_pt512 = bitcast %union.pixelPointer* %pixel511 to i32**, !dbg !9284
  %436 = load i32*, i32** %uint_pt512, align 8, !dbg !9284
  store i32 %434, i32* %436, align 4, !dbg !9285
  br label %for.inc513, !dbg !9286

for.inc513:                                       ; preds = %for.body507
  %437 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !9287
  %next514 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %437, i32 0, i32 0, !dbg !9288
  %438 = load %struct.LinkNode*, %struct.LinkNode** %next514, align 8, !dbg !9288
  store %struct.LinkNode* %438, %struct.LinkNode** %node, align 8, !dbg !9289
  br label %for.cond505, !dbg !9290, !llvm.loop !9291

for.end515:                                       ; preds = %for.cond505
  %439 = load %struct.LinkNode*, %struct.LinkNode** %softenPixels_f, align 8, !dbg !9293
  store %struct.LinkNode* %439, %struct.LinkNode** %node, align 8, !dbg !9295
  br label %for.cond516, !dbg !9296

for.cond516:                                      ; preds = %for.inc525, %for.end515
  %440 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !9297
  %tobool517 = icmp ne %struct.LinkNode* %440, null, !dbg !9299
  br i1 %tobool517, label %for.body518, label %for.end527, !dbg !9299

for.body518:                                      ; preds = %for.cond516
  %441 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !9300
  %link519 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %441, i32 0, i32 1, !dbg !9302
  %442 = load i8*, i8** %link519, align 8, !dbg !9302
  %443 = bitcast i8* %442 to %struct.ProjPixel*, !dbg !9300
  store %struct.ProjPixel* %443, %struct.ProjPixel** %projPixel, align 8, !dbg !9303
  %444 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9304
  %pixel520 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %444, i32 0, i32 9, !dbg !9305
  %f_pt521 = bitcast %union.pixelPointer* %pixel520 to float**, !dbg !9306
  %445 = load float*, float** %f_pt521, align 8, !dbg !9306
  %446 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !9307
  %newColor522 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %446, i32 0, i32 8, !dbg !9308
  %f523 = bitcast %union.pixelStore* %newColor522 to [4 x float]*, !dbg !9309
  %arraydecay524 = getelementptr inbounds [4 x float], [4 x float]* %f523, i64 0, i64 0, !dbg !9307
  call void @copy_v4_v4(float* %445, float* %arraydecay524), !dbg !9310
  br label %for.inc525, !dbg !9311

for.inc525:                                       ; preds = %for.body518
  %447 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !9312
  %next526 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %447, i32 0, i32 0, !dbg !9313
  %448 = load %struct.LinkNode*, %struct.LinkNode** %next526, align 8, !dbg !9313
  store %struct.LinkNode* %448, %struct.LinkNode** %node, align 8, !dbg !9314
  br label %for.cond516, !dbg !9315, !llvm.loop !9316

for.end527:                                       ; preds = %for.cond516
  %449 = load %struct.MemArena*, %struct.MemArena** %softenArena, align 8, !dbg !9318
  call void @BLI_memarena_free(%struct.MemArena* %449), !dbg !9319
  br label %if.end528, !dbg !9320

if.end528:                                        ; preds = %for.end527, %if.else500
  br label %if.end529

if.end529:                                        ; preds = %if.end528, %for.end499
  ret i8* null, !dbg !9321
}

declare dso_local %struct.ImagePool* @BKE_image_pool_new() #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !9322 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9323, metadata !DIExpression()), !dbg !9324
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9325, metadata !DIExpression()), !dbg !9326
  %0 = load float*, float** %a.addr, align 8, !dbg !9327
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9327
  %1 = load float, float* %arrayidx, align 4, !dbg !9327
  %2 = load float*, float** %r.addr, align 8, !dbg !9328
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9328
  store float %1, float* %arrayidx1, align 4, !dbg !9329
  %3 = load float*, float** %a.addr, align 8, !dbg !9330
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !9330
  %4 = load float, float* %arrayidx2, align 4, !dbg !9330
  %5 = load float*, float** %r.addr, align 8, !dbg !9331
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !9331
  store float %4, float* %arrayidx3, align 4, !dbg !9332
  ret void, !dbg !9333
}

declare dso_local i8* @BLI_memarena_alloc(%struct.MemArena*, i64) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local void @BLI_insert_thread(%struct.ListBase*, i8*) #2

declare dso_local void @BLI_end_threads(%struct.ListBase*) #2

declare dso_local void @BKE_image_pool_free(%struct.ImagePool*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @partial_redraw_array_merge(%struct.ImagePaintPartialRedraw* %pr, %struct.ImagePaintPartialRedraw* %pr_other, i32 %tot) #0 !dbg !9334 {
entry:
  %pr.addr = alloca %struct.ImagePaintPartialRedraw*, align 8
  %pr_other.addr = alloca %struct.ImagePaintPartialRedraw*, align 8
  %tot.addr = alloca i32, align 4
  %touch = alloca i8, align 1
  store %struct.ImagePaintPartialRedraw* %pr, %struct.ImagePaintPartialRedraw** %pr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePaintPartialRedraw** %pr.addr, metadata !9337, metadata !DIExpression()), !dbg !9338
  store %struct.ImagePaintPartialRedraw* %pr_other, %struct.ImagePaintPartialRedraw** %pr_other.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePaintPartialRedraw** %pr_other.addr, metadata !9339, metadata !DIExpression()), !dbg !9340
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !9341, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.declare(metadata i8* %touch, metadata !9343, metadata !DIExpression()), !dbg !9344
  store i8 0, i8* %touch, align 1, !dbg !9344
  br label %while.cond, !dbg !9345

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i32, i32* %tot.addr, align 4, !dbg !9346
  %dec = add nsw i32 %0, -1, !dbg !9346
  store i32 %dec, i32* %tot.addr, align 4, !dbg !9346
  %tobool = icmp ne i32 %0, 0, !dbg !9345
  br i1 %tobool, label %while.body, label %while.end, !dbg !9345

while.body:                                       ; preds = %while.cond
  %1 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr.addr, align 8, !dbg !9347
  %x1 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %1, i32 0, i32 0, !dbg !9349
  %2 = load i32, i32* %x1, align 4, !dbg !9349
  %3 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr_other.addr, align 8, !dbg !9350
  %x11 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %3, i32 0, i32 0, !dbg !9351
  %4 = load i32, i32* %x11, align 4, !dbg !9351
  %call = call i32 @min_ii(i32 %2, i32 %4), !dbg !9352
  %5 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr.addr, align 8, !dbg !9353
  %x12 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %5, i32 0, i32 0, !dbg !9354
  store i32 %call, i32* %x12, align 4, !dbg !9355
  %6 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr.addr, align 8, !dbg !9356
  %y1 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %6, i32 0, i32 1, !dbg !9357
  %7 = load i32, i32* %y1, align 4, !dbg !9357
  %8 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr_other.addr, align 8, !dbg !9358
  %y13 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %8, i32 0, i32 1, !dbg !9359
  %9 = load i32, i32* %y13, align 4, !dbg !9359
  %call4 = call i32 @min_ii(i32 %7, i32 %9), !dbg !9360
  %10 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr.addr, align 8, !dbg !9361
  %y15 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %10, i32 0, i32 1, !dbg !9362
  store i32 %call4, i32* %y15, align 4, !dbg !9363
  %11 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr.addr, align 8, !dbg !9364
  %x2 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %11, i32 0, i32 2, !dbg !9365
  %12 = load i32, i32* %x2, align 4, !dbg !9365
  %13 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr_other.addr, align 8, !dbg !9366
  %x26 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %13, i32 0, i32 2, !dbg !9367
  %14 = load i32, i32* %x26, align 4, !dbg !9367
  %call7 = call i32 @max_ii(i32 %12, i32 %14), !dbg !9368
  %15 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr.addr, align 8, !dbg !9369
  %x28 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %15, i32 0, i32 2, !dbg !9370
  store i32 %call7, i32* %x28, align 4, !dbg !9371
  %16 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr.addr, align 8, !dbg !9372
  %y2 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %16, i32 0, i32 3, !dbg !9373
  %17 = load i32, i32* %y2, align 4, !dbg !9373
  %18 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr_other.addr, align 8, !dbg !9374
  %y29 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %18, i32 0, i32 3, !dbg !9375
  %19 = load i32, i32* %y29, align 4, !dbg !9375
  %call10 = call i32 @max_ii(i32 %17, i32 %19), !dbg !9376
  %20 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr.addr, align 8, !dbg !9377
  %y211 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %20, i32 0, i32 3, !dbg !9378
  store i32 %call10, i32* %y211, align 4, !dbg !9379
  %21 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr.addr, align 8, !dbg !9380
  %x212 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %21, i32 0, i32 2, !dbg !9382
  %22 = load i32, i32* %x212, align 4, !dbg !9382
  %cmp = icmp ne i32 %22, -1, !dbg !9383
  br i1 %cmp, label %if.then, label %if.end, !dbg !9384

if.then:                                          ; preds = %while.body
  store i8 1, i8* %touch, align 1, !dbg !9385
  br label %if.end, !dbg !9386

if.end:                                           ; preds = %if.then, %while.body
  %23 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr.addr, align 8, !dbg !9387
  %incdec.ptr = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %23, i32 1, !dbg !9387
  store %struct.ImagePaintPartialRedraw* %incdec.ptr, %struct.ImagePaintPartialRedraw** %pr.addr, align 8, !dbg !9387
  %24 = load %struct.ImagePaintPartialRedraw*, %struct.ImagePaintPartialRedraw** %pr_other.addr, align 8, !dbg !9388
  %incdec.ptr13 = getelementptr inbounds %struct.ImagePaintPartialRedraw, %struct.ImagePaintPartialRedraw* %24, i32 1, !dbg !9388
  store %struct.ImagePaintPartialRedraw* %incdec.ptr13, %struct.ImagePaintPartialRedraw** %pr_other.addr, align 8, !dbg !9388
  br label %while.cond, !dbg !9345, !llvm.loop !9389

while.end:                                        ; preds = %while.cond
  %25 = load i8, i8* %touch, align 1, !dbg !9391
  ret i8 %25, !dbg !9392
}

; Function Attrs: noinline nounwind uwtable
define internal void @project_paint_bucket_bounds(%struct.ProjPaintState* %ps, float* %min, float* %max, i32* %bucketMin, i32* %bucketMax) #0 !dbg !9393 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %min.addr = alloca float*, align 8
  %max.addr = alloca float*, align 8
  %bucketMin.addr = alloca i32*, align 8
  %bucketMax.addr = alloca i32*, align 8
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !9398, metadata !DIExpression()), !dbg !9399
  store float* %min, float** %min.addr, align 8
  call void @llvm.dbg.declare(metadata float** %min.addr, metadata !9400, metadata !DIExpression()), !dbg !9401
  store float* %max, float** %max.addr, align 8
  call void @llvm.dbg.declare(metadata float** %max.addr, metadata !9402, metadata !DIExpression()), !dbg !9403
  store i32* %bucketMin, i32** %bucketMin.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bucketMin.addr, metadata !9404, metadata !DIExpression()), !dbg !9405
  store i32* %bucketMax, i32** %bucketMax.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bucketMax.addr, metadata !9406, metadata !DIExpression()), !dbg !9407
  %0 = load float*, float** %min.addr, align 8, !dbg !9408
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9408
  %1 = load float, float* %arrayidx, align 4, !dbg !9408
  %2 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9409
  %screenMin = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %2, i32 0, i32 42, !dbg !9410
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %screenMin, i64 0, i64 0, !dbg !9409
  %3 = load float, float* %arrayidx1, align 8, !dbg !9409
  %sub = fsub float %1, %3, !dbg !9411
  %4 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9412
  %screen_width = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %4, i32 0, i32 44, !dbg !9413
  %5 = load float, float* %screen_width, align 8, !dbg !9413
  %div = fdiv float %sub, %5, !dbg !9414
  %6 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9415
  %buckets_x = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %6, i32 0, i32 36, !dbg !9416
  %7 = load i32, i32* %buckets_x, align 8, !dbg !9416
  %conv = sitofp i32 %7 to float, !dbg !9415
  %mul = fmul float %div, %conv, !dbg !9417
  %conv2 = fptosi float %mul to i32, !dbg !9418
  %conv3 = sitofp i32 %conv2 to float, !dbg !9418
  %add = fadd float %conv3, 5.000000e-01, !dbg !9419
  %conv4 = fptosi float %add to i32, !dbg !9420
  %8 = load i32*, i32** %bucketMin.addr, align 8, !dbg !9421
  %arrayidx5 = getelementptr inbounds i32, i32* %8, i64 0, !dbg !9421
  store i32 %conv4, i32* %arrayidx5, align 4, !dbg !9422
  %9 = load float*, float** %min.addr, align 8, !dbg !9423
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !9423
  %10 = load float, float* %arrayidx6, align 4, !dbg !9423
  %11 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9424
  %screenMin7 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %11, i32 0, i32 42, !dbg !9425
  %arrayidx8 = getelementptr inbounds [2 x float], [2 x float]* %screenMin7, i64 0, i64 1, !dbg !9424
  %12 = load float, float* %arrayidx8, align 4, !dbg !9424
  %sub9 = fsub float %10, %12, !dbg !9426
  %13 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9427
  %screen_height = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %13, i32 0, i32 45, !dbg !9428
  %14 = load float, float* %screen_height, align 4, !dbg !9428
  %div10 = fdiv float %sub9, %14, !dbg !9429
  %15 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9430
  %buckets_y = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %15, i32 0, i32 37, !dbg !9431
  %16 = load i32, i32* %buckets_y, align 4, !dbg !9431
  %conv11 = sitofp i32 %16 to float, !dbg !9430
  %mul12 = fmul float %div10, %conv11, !dbg !9432
  %conv13 = fptosi float %mul12 to i32, !dbg !9433
  %conv14 = sitofp i32 %conv13 to float, !dbg !9433
  %add15 = fadd float %conv14, 5.000000e-01, !dbg !9434
  %conv16 = fptosi float %add15 to i32, !dbg !9435
  %17 = load i32*, i32** %bucketMin.addr, align 8, !dbg !9436
  %arrayidx17 = getelementptr inbounds i32, i32* %17, i64 1, !dbg !9436
  store i32 %conv16, i32* %arrayidx17, align 4, !dbg !9437
  %18 = load float*, float** %max.addr, align 8, !dbg !9438
  %arrayidx18 = getelementptr inbounds float, float* %18, i64 0, !dbg !9438
  %19 = load float, float* %arrayidx18, align 4, !dbg !9438
  %20 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9439
  %screenMin19 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %20, i32 0, i32 42, !dbg !9440
  %arrayidx20 = getelementptr inbounds [2 x float], [2 x float]* %screenMin19, i64 0, i64 0, !dbg !9439
  %21 = load float, float* %arrayidx20, align 8, !dbg !9439
  %sub21 = fsub float %19, %21, !dbg !9441
  %22 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9442
  %screen_width22 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %22, i32 0, i32 44, !dbg !9443
  %23 = load float, float* %screen_width22, align 8, !dbg !9443
  %div23 = fdiv float %sub21, %23, !dbg !9444
  %24 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9445
  %buckets_x24 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %24, i32 0, i32 36, !dbg !9446
  %25 = load i32, i32* %buckets_x24, align 8, !dbg !9446
  %conv25 = sitofp i32 %25 to float, !dbg !9445
  %mul26 = fmul float %div23, %conv25, !dbg !9447
  %conv27 = fptosi float %mul26 to i32, !dbg !9448
  %conv28 = sitofp i32 %conv27 to float, !dbg !9448
  %add29 = fadd float %conv28, 1.500000e+00, !dbg !9449
  %conv30 = fptosi float %add29 to i32, !dbg !9450
  %26 = load i32*, i32** %bucketMax.addr, align 8, !dbg !9451
  %arrayidx31 = getelementptr inbounds i32, i32* %26, i64 0, !dbg !9451
  store i32 %conv30, i32* %arrayidx31, align 4, !dbg !9452
  %27 = load float*, float** %max.addr, align 8, !dbg !9453
  %arrayidx32 = getelementptr inbounds float, float* %27, i64 1, !dbg !9453
  %28 = load float, float* %arrayidx32, align 4, !dbg !9453
  %29 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9454
  %screenMin33 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %29, i32 0, i32 42, !dbg !9455
  %arrayidx34 = getelementptr inbounds [2 x float], [2 x float]* %screenMin33, i64 0, i64 1, !dbg !9454
  %30 = load float, float* %arrayidx34, align 4, !dbg !9454
  %sub35 = fsub float %28, %30, !dbg !9456
  %31 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9457
  %screen_height36 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %31, i32 0, i32 45, !dbg !9458
  %32 = load float, float* %screen_height36, align 4, !dbg !9458
  %div37 = fdiv float %sub35, %32, !dbg !9459
  %33 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9460
  %buckets_y38 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %33, i32 0, i32 37, !dbg !9461
  %34 = load i32, i32* %buckets_y38, align 4, !dbg !9461
  %conv39 = sitofp i32 %34 to float, !dbg !9460
  %mul40 = fmul float %div37, %conv39, !dbg !9462
  %conv41 = fptosi float %mul40 to i32, !dbg !9463
  %conv42 = sitofp i32 %conv41 to float, !dbg !9463
  %add43 = fadd float %conv42, 1.500000e+00, !dbg !9464
  %conv44 = fptosi float %add43 to i32, !dbg !9465
  %35 = load i32*, i32** %bucketMax.addr, align 8, !dbg !9466
  %arrayidx45 = getelementptr inbounds i32, i32* %35, i64 1, !dbg !9466
  store i32 %conv44, i32* %arrayidx45, align 4, !dbg !9467
  %36 = load i32*, i32** %bucketMin.addr, align 8, !dbg !9468
  %arrayidx46 = getelementptr inbounds i32, i32* %36, i64 0, !dbg !9468
  %37 = load i32, i32* %arrayidx46, align 4, !dbg !9468
  %cmp = icmp slt i32 %37, 0, !dbg !9468
  br i1 %cmp, label %if.then, label %if.else, !dbg !9471

if.then:                                          ; preds = %entry
  %38 = load i32*, i32** %bucketMin.addr, align 8, !dbg !9468
  %arrayidx48 = getelementptr inbounds i32, i32* %38, i64 0, !dbg !9468
  store i32 0, i32* %arrayidx48, align 4, !dbg !9468
  br label %if.end56, !dbg !9468

if.else:                                          ; preds = %entry
  %39 = load i32*, i32** %bucketMin.addr, align 8, !dbg !9472
  %arrayidx49 = getelementptr inbounds i32, i32* %39, i64 0, !dbg !9472
  %40 = load i32, i32* %arrayidx49, align 4, !dbg !9472
  %41 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9472
  %buckets_x50 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %41, i32 0, i32 36, !dbg !9472
  %42 = load i32, i32* %buckets_x50, align 8, !dbg !9472
  %cmp51 = icmp sgt i32 %40, %42, !dbg !9472
  br i1 %cmp51, label %if.then53, label %if.end, !dbg !9468

if.then53:                                        ; preds = %if.else
  %43 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9472
  %buckets_x54 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %43, i32 0, i32 36, !dbg !9472
  %44 = load i32, i32* %buckets_x54, align 8, !dbg !9472
  %45 = load i32*, i32** %bucketMin.addr, align 8, !dbg !9472
  %arrayidx55 = getelementptr inbounds i32, i32* %45, i64 0, !dbg !9472
  store i32 %44, i32* %arrayidx55, align 4, !dbg !9472
  br label %if.end, !dbg !9472

if.end:                                           ; preds = %if.then53, %if.else
  br label %if.end56

if.end56:                                         ; preds = %if.end, %if.then
  %46 = load i32*, i32** %bucketMin.addr, align 8, !dbg !9474
  %arrayidx57 = getelementptr inbounds i32, i32* %46, i64 1, !dbg !9474
  %47 = load i32, i32* %arrayidx57, align 4, !dbg !9474
  %cmp58 = icmp slt i32 %47, 0, !dbg !9474
  br i1 %cmp58, label %if.then60, label %if.else62, !dbg !9477

if.then60:                                        ; preds = %if.end56
  %48 = load i32*, i32** %bucketMin.addr, align 8, !dbg !9474
  %arrayidx61 = getelementptr inbounds i32, i32* %48, i64 1, !dbg !9474
  store i32 0, i32* %arrayidx61, align 4, !dbg !9474
  br label %if.end71, !dbg !9474

if.else62:                                        ; preds = %if.end56
  %49 = load i32*, i32** %bucketMin.addr, align 8, !dbg !9478
  %arrayidx63 = getelementptr inbounds i32, i32* %49, i64 1, !dbg !9478
  %50 = load i32, i32* %arrayidx63, align 4, !dbg !9478
  %51 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9478
  %buckets_y64 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %51, i32 0, i32 37, !dbg !9478
  %52 = load i32, i32* %buckets_y64, align 4, !dbg !9478
  %cmp65 = icmp sgt i32 %50, %52, !dbg !9478
  br i1 %cmp65, label %if.then67, label %if.end70, !dbg !9474

if.then67:                                        ; preds = %if.else62
  %53 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9478
  %buckets_y68 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %53, i32 0, i32 37, !dbg !9478
  %54 = load i32, i32* %buckets_y68, align 4, !dbg !9478
  %55 = load i32*, i32** %bucketMin.addr, align 8, !dbg !9478
  %arrayidx69 = getelementptr inbounds i32, i32* %55, i64 1, !dbg !9478
  store i32 %54, i32* %arrayidx69, align 4, !dbg !9478
  br label %if.end70, !dbg !9478

if.end70:                                         ; preds = %if.then67, %if.else62
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.then60
  %56 = load i32*, i32** %bucketMax.addr, align 8, !dbg !9480
  %arrayidx72 = getelementptr inbounds i32, i32* %56, i64 0, !dbg !9480
  %57 = load i32, i32* %arrayidx72, align 4, !dbg !9480
  %cmp73 = icmp slt i32 %57, 0, !dbg !9480
  br i1 %cmp73, label %if.then75, label %if.else77, !dbg !9483

if.then75:                                        ; preds = %if.end71
  %58 = load i32*, i32** %bucketMax.addr, align 8, !dbg !9480
  %arrayidx76 = getelementptr inbounds i32, i32* %58, i64 0, !dbg !9480
  store i32 0, i32* %arrayidx76, align 4, !dbg !9480
  br label %if.end86, !dbg !9480

if.else77:                                        ; preds = %if.end71
  %59 = load i32*, i32** %bucketMax.addr, align 8, !dbg !9484
  %arrayidx78 = getelementptr inbounds i32, i32* %59, i64 0, !dbg !9484
  %60 = load i32, i32* %arrayidx78, align 4, !dbg !9484
  %61 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9484
  %buckets_x79 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %61, i32 0, i32 36, !dbg !9484
  %62 = load i32, i32* %buckets_x79, align 8, !dbg !9484
  %cmp80 = icmp sgt i32 %60, %62, !dbg !9484
  br i1 %cmp80, label %if.then82, label %if.end85, !dbg !9480

if.then82:                                        ; preds = %if.else77
  %63 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9484
  %buckets_x83 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %63, i32 0, i32 36, !dbg !9484
  %64 = load i32, i32* %buckets_x83, align 8, !dbg !9484
  %65 = load i32*, i32** %bucketMax.addr, align 8, !dbg !9484
  %arrayidx84 = getelementptr inbounds i32, i32* %65, i64 0, !dbg !9484
  store i32 %64, i32* %arrayidx84, align 4, !dbg !9484
  br label %if.end85, !dbg !9484

if.end85:                                         ; preds = %if.then82, %if.else77
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.then75
  %66 = load i32*, i32** %bucketMax.addr, align 8, !dbg !9486
  %arrayidx87 = getelementptr inbounds i32, i32* %66, i64 1, !dbg !9486
  %67 = load i32, i32* %arrayidx87, align 4, !dbg !9486
  %cmp88 = icmp slt i32 %67, 0, !dbg !9486
  br i1 %cmp88, label %if.then90, label %if.else92, !dbg !9489

if.then90:                                        ; preds = %if.end86
  %68 = load i32*, i32** %bucketMax.addr, align 8, !dbg !9486
  %arrayidx91 = getelementptr inbounds i32, i32* %68, i64 1, !dbg !9486
  store i32 0, i32* %arrayidx91, align 4, !dbg !9486
  br label %if.end101, !dbg !9486

if.else92:                                        ; preds = %if.end86
  %69 = load i32*, i32** %bucketMax.addr, align 8, !dbg !9490
  %arrayidx93 = getelementptr inbounds i32, i32* %69, i64 1, !dbg !9490
  %70 = load i32, i32* %arrayidx93, align 4, !dbg !9490
  %71 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9490
  %buckets_y94 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %71, i32 0, i32 37, !dbg !9490
  %72 = load i32, i32* %buckets_y94, align 4, !dbg !9490
  %cmp95 = icmp sgt i32 %70, %72, !dbg !9490
  br i1 %cmp95, label %if.then97, label %if.end100, !dbg !9486

if.then97:                                        ; preds = %if.else92
  %73 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9490
  %buckets_y98 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %73, i32 0, i32 37, !dbg !9490
  %74 = load i32, i32* %buckets_y98, align 4, !dbg !9490
  %75 = load i32*, i32** %bucketMax.addr, align 8, !dbg !9490
  %arrayidx99 = getelementptr inbounds i32, i32* %75, i64 1, !dbg !9490
  store i32 %74, i32* %arrayidx99, align 4, !dbg !9490
  br label %if.end100, !dbg !9490

if.end100:                                        ; preds = %if.then97, %if.else92
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.then90
  ret void, !dbg !9492
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local float @BKE_brush_alpha_get(%struct.Scene*, %struct.Brush*) #2

declare dso_local %struct.MemArena* @BLI_memarena_new(i64, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @project_bucket_iter_next(%struct.ProjPaintState* %ps, i32* %bucket_index, %struct.rctf* %bucket_bounds, float* %mval) #0 !dbg !9493 {
entry:
  %retval = alloca i8, align 1
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %bucket_index.addr = alloca i32*, align 8
  %bucket_bounds.addr = alloca %struct.rctf*, align 8
  %mval.addr = alloca float*, align 8
  %diameter = alloca i32, align 4
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !9497, metadata !DIExpression()), !dbg !9498
  store i32* %bucket_index, i32** %bucket_index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bucket_index.addr, metadata !9499, metadata !DIExpression()), !dbg !9500
  store %struct.rctf* %bucket_bounds, %struct.rctf** %bucket_bounds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %bucket_bounds.addr, metadata !9501, metadata !DIExpression()), !dbg !9502
  store float* %mval, float** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mval.addr, metadata !9503, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.declare(metadata i32* %diameter, metadata !9505, metadata !DIExpression()), !dbg !9506
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9507
  %brush_size = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 12, !dbg !9508
  %1 = load float, float* %brush_size, align 4, !dbg !9508
  %mul = fmul float 2.000000e+00, %1, !dbg !9509
  %conv = fptosi float %mul to i32, !dbg !9510
  store i32 %conv, i32* %diameter, align 4, !dbg !9506
  %2 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9511
  %thread_tot = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %2, i32 0, i32 74, !dbg !9513
  %3 = load i32, i32* %thread_tot, align 8, !dbg !9513
  %cmp = icmp sgt i32 %3, 1, !dbg !9514
  br i1 %cmp, label %if.then, label %if.end, !dbg !9515

if.then:                                          ; preds = %entry
  call void @BLI_lock_thread(i32 3), !dbg !9516
  br label %if.end, !dbg !9516

if.end:                                           ; preds = %if.then, %entry
  br label %for.cond, !dbg !9517

for.cond:                                         ; preds = %for.inc32, %if.end
  %4 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9518
  %context_bucket_y = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %4, i32 0, i32 78, !dbg !9521
  %5 = load i32, i32* %context_bucket_y, align 8, !dbg !9521
  %6 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9522
  %bucketMax = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %6, i32 0, i32 76, !dbg !9523
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMax, i64 0, i64 1, !dbg !9522
  %7 = load i32, i32* %arrayidx, align 4, !dbg !9522
  %cmp2 = icmp slt i32 %5, %7, !dbg !9524
  br i1 %cmp2, label %for.body, label %for.end35, !dbg !9525

for.body:                                         ; preds = %for.cond
  br label %for.cond4, !dbg !9526

for.cond4:                                        ; preds = %for.inc, %for.body
  %8 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9528
  %context_bucket_x = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %8, i32 0, i32 77, !dbg !9531
  %9 = load i32, i32* %context_bucket_x, align 4, !dbg !9531
  %10 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9532
  %bucketMax5 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %10, i32 0, i32 76, !dbg !9533
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMax5, i64 0, i64 0, !dbg !9532
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !9532
  %cmp7 = icmp slt i32 %9, %11, !dbg !9534
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !9535

for.body9:                                        ; preds = %for.cond4
  %12 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9536
  %13 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9538
  %context_bucket_x10 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %13, i32 0, i32 77, !dbg !9539
  %14 = load i32, i32* %context_bucket_x10, align 4, !dbg !9539
  %15 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9540
  %context_bucket_y11 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %15, i32 0, i32 78, !dbg !9541
  %16 = load i32, i32* %context_bucket_y11, align 8, !dbg !9541
  %17 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !9542
  call void @project_bucket_bounds(%struct.ProjPaintState* %12, i32 %14, i32 %16, %struct.rctf* %17), !dbg !9543
  %18 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9544
  %source = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %18, i32 0, i32 4, !dbg !9546
  %19 = load i32, i32* %source, align 8, !dbg !9546
  %cmp12 = icmp ne i32 %19, 1, !dbg !9547
  br i1 %cmp12, label %if.then17, label %lor.lhs.false, !dbg !9548

lor.lhs.false:                                    ; preds = %for.body9
  %20 = load float*, float** %mval.addr, align 8, !dbg !9549
  %21 = load i32, i32* %diameter, align 4, !dbg !9550
  %22 = load i32, i32* %diameter, align 4, !dbg !9551
  %mul14 = mul nsw i32 %21, %22, !dbg !9552
  %conv15 = sitofp i32 %mul14 to float, !dbg !9553
  %23 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !9554
  %call = call zeroext i8 @project_bucket_isect_circle(float* %20, float %conv15, %struct.rctf* %23), !dbg !9555
  %conv16 = zext i8 %call to i32, !dbg !9555
  %tobool = icmp ne i32 %conv16, 0, !dbg !9555
  br i1 %tobool, label %if.then17, label %if.end27, !dbg !9556

if.then17:                                        ; preds = %lor.lhs.false, %for.body9
  %24 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9557
  %context_bucket_x18 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %24, i32 0, i32 77, !dbg !9559
  %25 = load i32, i32* %context_bucket_x18, align 4, !dbg !9559
  %26 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9560
  %context_bucket_y19 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %26, i32 0, i32 78, !dbg !9561
  %27 = load i32, i32* %context_bucket_y19, align 8, !dbg !9561
  %28 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9562
  %buckets_x = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %28, i32 0, i32 36, !dbg !9563
  %29 = load i32, i32* %buckets_x, align 8, !dbg !9563
  %mul20 = mul nsw i32 %27, %29, !dbg !9564
  %add = add nsw i32 %25, %mul20, !dbg !9565
  %30 = load i32*, i32** %bucket_index.addr, align 8, !dbg !9566
  store i32 %add, i32* %30, align 4, !dbg !9567
  %31 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9568
  %context_bucket_x21 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %31, i32 0, i32 77, !dbg !9569
  %32 = load i32, i32* %context_bucket_x21, align 4, !dbg !9570
  %inc = add nsw i32 %32, 1, !dbg !9570
  store i32 %inc, i32* %context_bucket_x21, align 4, !dbg !9570
  %33 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9571
  %thread_tot22 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %33, i32 0, i32 74, !dbg !9573
  %34 = load i32, i32* %thread_tot22, align 8, !dbg !9573
  %cmp23 = icmp sgt i32 %34, 1, !dbg !9574
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !9575

if.then25:                                        ; preds = %if.then17
  call void @BLI_unlock_thread(i32 3), !dbg !9576
  br label %if.end26, !dbg !9576

if.end26:                                         ; preds = %if.then25, %if.then17
  store i8 1, i8* %retval, align 1, !dbg !9577
  br label %return, !dbg !9577

if.end27:                                         ; preds = %lor.lhs.false
  br label %for.inc, !dbg !9578

for.inc:                                          ; preds = %if.end27
  %35 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9579
  %context_bucket_x28 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %35, i32 0, i32 77, !dbg !9580
  %36 = load i32, i32* %context_bucket_x28, align 4, !dbg !9581
  %inc29 = add nsw i32 %36, 1, !dbg !9581
  store i32 %inc29, i32* %context_bucket_x28, align 4, !dbg !9581
  br label %for.cond4, !dbg !9582, !llvm.loop !9583

for.end:                                          ; preds = %for.cond4
  %37 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9585
  %bucketMin = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %37, i32 0, i32 75, !dbg !9586
  %arrayidx30 = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMin, i64 0, i64 0, !dbg !9585
  %38 = load i32, i32* %arrayidx30, align 4, !dbg !9585
  %39 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9587
  %context_bucket_x31 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %39, i32 0, i32 77, !dbg !9588
  store i32 %38, i32* %context_bucket_x31, align 4, !dbg !9589
  br label %for.inc32, !dbg !9590

for.inc32:                                        ; preds = %for.end
  %40 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9591
  %context_bucket_y33 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %40, i32 0, i32 78, !dbg !9592
  %41 = load i32, i32* %context_bucket_y33, align 8, !dbg !9593
  %inc34 = add nsw i32 %41, 1, !dbg !9593
  store i32 %inc34, i32* %context_bucket_y33, align 8, !dbg !9593
  br label %for.cond, !dbg !9594, !llvm.loop !9595

for.end35:                                        ; preds = %for.cond
  %42 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9597
  %thread_tot36 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %42, i32 0, i32 74, !dbg !9599
  %43 = load i32, i32* %thread_tot36, align 8, !dbg !9599
  %cmp37 = icmp sgt i32 %43, 1, !dbg !9600
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !9601

if.then39:                                        ; preds = %for.end35
  call void @BLI_unlock_thread(i32 3), !dbg !9602
  br label %if.end40, !dbg !9602

if.end40:                                         ; preds = %if.then39, %for.end35
  store i8 0, i8* %retval, align 1, !dbg !9603
  br label %return, !dbg !9603

return:                                           ; preds = %if.end40, %if.end26
  %44 = load i8, i8* %retval, align 1, !dbg !9604
  ret i8 %44, !dbg !9604
}

; Function Attrs: noinline nounwind uwtable
define internal void @project_bucket_init(%struct.ProjPaintState* %ps, i32 %thread_index, i32 %bucket_index, %struct.rctf* %bucket_bounds) #0 !dbg !9605 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %thread_index.addr = alloca i32, align 4
  %bucket_index.addr = alloca i32, align 4
  %bucket_bounds.addr = alloca %struct.rctf*, align 8
  %node = alloca %struct.LinkNode*, align 8
  %face_index = alloca i32, align 4
  %image_index = alloca i32, align 4
  %ibuf = alloca %struct.ImBuf*, align 8
  %tpage_last = alloca %struct.Image*, align 8
  %tpage = alloca %struct.Image*, align 8
  %ima = alloca %struct.Image*, align 8
  %tmpibuf = alloca %struct.ImBuf*, align 8
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !9608, metadata !DIExpression()), !dbg !9609
  store i32 %thread_index, i32* %thread_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %thread_index.addr, metadata !9610, metadata !DIExpression()), !dbg !9611
  store i32 %bucket_index, i32* %bucket_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bucket_index.addr, metadata !9612, metadata !DIExpression()), !dbg !9613
  store %struct.rctf* %bucket_bounds, %struct.rctf** %bucket_bounds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %bucket_bounds.addr, metadata !9614, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %node, metadata !9616, metadata !DIExpression()), !dbg !9617
  call void @llvm.dbg.declare(metadata i32* %face_index, metadata !9618, metadata !DIExpression()), !dbg !9619
  call void @llvm.dbg.declare(metadata i32* %image_index, metadata !9620, metadata !DIExpression()), !dbg !9621
  store i32 0, i32* %image_index, align 4, !dbg !9621
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !9622, metadata !DIExpression()), !dbg !9623
  store %struct.ImBuf* null, %struct.ImBuf** %ibuf, align 8, !dbg !9623
  call void @llvm.dbg.declare(metadata %struct.Image** %tpage_last, metadata !9624, metadata !DIExpression()), !dbg !9625
  store %struct.Image* null, %struct.Image** %tpage_last, align 8, !dbg !9625
  call void @llvm.dbg.declare(metadata %struct.Image** %tpage, metadata !9626, metadata !DIExpression()), !dbg !9627
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !9628, metadata !DIExpression()), !dbg !9629
  store %struct.Image* null, %struct.Image** %ima, align 8, !dbg !9629
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %tmpibuf, metadata !9630, metadata !DIExpression()), !dbg !9631
  store %struct.ImBuf* null, %struct.ImBuf** %tmpibuf, align 8, !dbg !9631
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9632
  %image_tot = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 40, !dbg !9634
  %1 = load i32, i32* %image_tot, align 4, !dbg !9634
  %cmp = icmp eq i32 %1, 1, !dbg !9635
  br i1 %cmp, label %if.then, label %if.else, !dbg !9636

if.then:                                          ; preds = %entry
  %2 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9637
  %projImages = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %2, i32 0, i32 38, !dbg !9639
  %3 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages, align 8, !dbg !9639
  %arrayidx = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %3, i64 0, !dbg !9637
  %ibuf1 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %arrayidx, i32 0, i32 1, !dbg !9640
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1, align 8, !dbg !9640
  store %struct.ImBuf* %4, %struct.ImBuf** %ibuf, align 8, !dbg !9641
  %5 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9642
  %projImages2 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %5, i32 0, i32 38, !dbg !9643
  %6 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages2, align 8, !dbg !9643
  %arrayidx3 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %6, i64 0, !dbg !9642
  %ima4 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %arrayidx3, i32 0, i32 0, !dbg !9644
  %7 = load %struct.Image*, %struct.Image** %ima4, align 8, !dbg !9644
  store %struct.Image* %7, %struct.Image** %ima, align 8, !dbg !9645
  %8 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9646
  %bucketFaces = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %8, i32 0, i32 29, !dbg !9648
  %9 = load %struct.LinkNode**, %struct.LinkNode*** %bucketFaces, align 8, !dbg !9648
  %10 = load i32, i32* %bucket_index.addr, align 4, !dbg !9649
  %idxprom = sext i32 %10 to i64, !dbg !9646
  %arrayidx5 = getelementptr inbounds %struct.LinkNode*, %struct.LinkNode** %9, i64 %idxprom, !dbg !9646
  %11 = load %struct.LinkNode*, %struct.LinkNode** %arrayidx5, align 8, !dbg !9646
  store %struct.LinkNode* %11, %struct.LinkNode** %node, align 8, !dbg !9650
  br label %for.cond, !dbg !9651

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !9652
  %tobool = icmp ne %struct.LinkNode* %12, null, !dbg !9654
  br i1 %tobool, label %for.body, label %for.end, !dbg !9654

for.body:                                         ; preds = %for.cond
  %13 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9655
  %14 = load i32, i32* %thread_index.addr, align 4, !dbg !9657
  %15 = load i32, i32* %bucket_index.addr, align 4, !dbg !9658
  %16 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !9659
  %link = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %16, i32 0, i32 1, !dbg !9659
  %17 = load i8*, i8** %link, align 8, !dbg !9659
  %18 = ptrtoint i8* %17 to i64, !dbg !9659
  %conv = trunc i64 %18 to i32, !dbg !9659
  %19 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !9660
  %20 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9661
  %21 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9662
  %tpageflag = getelementptr inbounds %struct.Image, %struct.Image* %21, i32 0, i32 14, !dbg !9663
  %22 = load i16, i16* %tpageflag, align 8, !dbg !9663
  %conv6 = sext i16 %22 to i32, !dbg !9662
  %and = and i32 %conv6, 16, !dbg !9664
  %conv7 = trunc i32 %and to i16, !dbg !9662
  %23 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9665
  %tpageflag8 = getelementptr inbounds %struct.Image, %struct.Image* %23, i32 0, i32 14, !dbg !9666
  %24 = load i16, i16* %tpageflag8, align 8, !dbg !9666
  %conv9 = sext i16 %24 to i32, !dbg !9665
  %and10 = and i32 %conv9, 32, !dbg !9667
  %conv11 = trunc i32 %and10 to i16, !dbg !9665
  call void @project_paint_face_init(%struct.ProjPaintState* %13, i32 %14, i32 %15, i32 %conv, i32 0, %struct.rctf* %19, %struct.ImBuf* %20, %struct.ImBuf** %tmpibuf, i16 signext %conv7, i16 signext %conv11), !dbg !9668
  br label %for.inc, !dbg !9669

for.inc:                                          ; preds = %for.body
  %25 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !9670
  %next = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %25, i32 0, i32 0, !dbg !9671
  %26 = load %struct.LinkNode*, %struct.LinkNode** %next, align 8, !dbg !9671
  store %struct.LinkNode* %26, %struct.LinkNode** %node, align 8, !dbg !9672
  br label %for.cond, !dbg !9673, !llvm.loop !9674

for.end:                                          ; preds = %for.cond
  br label %if.end57, !dbg !9676

if.else:                                          ; preds = %entry
  %27 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9677
  %bucketFaces12 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %27, i32 0, i32 29, !dbg !9680
  %28 = load %struct.LinkNode**, %struct.LinkNode*** %bucketFaces12, align 8, !dbg !9680
  %29 = load i32, i32* %bucket_index.addr, align 4, !dbg !9681
  %idxprom13 = sext i32 %29 to i64, !dbg !9677
  %arrayidx14 = getelementptr inbounds %struct.LinkNode*, %struct.LinkNode** %28, i64 %idxprom13, !dbg !9677
  %30 = load %struct.LinkNode*, %struct.LinkNode** %arrayidx14, align 8, !dbg !9677
  store %struct.LinkNode* %30, %struct.LinkNode** %node, align 8, !dbg !9682
  br label %for.cond15, !dbg !9683

for.cond15:                                       ; preds = %for.inc54, %if.else
  %31 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !9684
  %tobool16 = icmp ne %struct.LinkNode* %31, null, !dbg !9686
  br i1 %tobool16, label %for.body17, label %for.end56, !dbg !9686

for.body17:                                       ; preds = %for.cond15
  %32 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !9687
  %link18 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %32, i32 0, i32 1, !dbg !9687
  %33 = load i8*, i8** %link18, align 8, !dbg !9687
  %34 = ptrtoint i8* %33 to i64, !dbg !9687
  %conv19 = trunc i64 %34 to i32, !dbg !9687
  store i32 %conv19, i32* %face_index, align 4, !dbg !9689
  %35 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9690
  %36 = load i32, i32* %face_index, align 4, !dbg !9691
  %call = call %struct.Image* @project_paint_face_paint_image(%struct.ProjPaintState* %35, i32 %36), !dbg !9692
  store %struct.Image* %call, %struct.Image** %tpage, align 8, !dbg !9693
  %37 = load %struct.Image*, %struct.Image** %tpage_last, align 8, !dbg !9694
  %38 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !9696
  %cmp20 = icmp ne %struct.Image* %37, %38, !dbg !9697
  br i1 %cmp20, label %if.then22, label %if.end45, !dbg !9698

if.then22:                                        ; preds = %for.body17
  %39 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !9699
  store %struct.Image* %39, %struct.Image** %tpage_last, align 8, !dbg !9701
  store i32 0, i32* %image_index, align 4, !dbg !9702
  br label %for.cond23, !dbg !9704

for.cond23:                                       ; preds = %for.inc43, %if.then22
  %40 = load i32, i32* %image_index, align 4, !dbg !9705
  %41 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9707
  %image_tot24 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %41, i32 0, i32 40, !dbg !9708
  %42 = load i32, i32* %image_tot24, align 4, !dbg !9708
  %cmp25 = icmp slt i32 %40, %42, !dbg !9709
  br i1 %cmp25, label %for.body27, label %for.end44, !dbg !9710

for.body27:                                       ; preds = %for.cond23
  %43 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9711
  %projImages28 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %43, i32 0, i32 38, !dbg !9714
  %44 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages28, align 8, !dbg !9714
  %45 = load i32, i32* %image_index, align 4, !dbg !9715
  %idxprom29 = sext i32 %45 to i64, !dbg !9711
  %arrayidx30 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %44, i64 %idxprom29, !dbg !9711
  %ima31 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %arrayidx30, i32 0, i32 0, !dbg !9716
  %46 = load %struct.Image*, %struct.Image** %ima31, align 8, !dbg !9716
  %47 = load %struct.Image*, %struct.Image** %tpage_last, align 8, !dbg !9717
  %cmp32 = icmp eq %struct.Image* %46, %47, !dbg !9718
  br i1 %cmp32, label %if.then34, label %if.end, !dbg !9719

if.then34:                                        ; preds = %for.body27
  %48 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9720
  %projImages35 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %48, i32 0, i32 38, !dbg !9722
  %49 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages35, align 8, !dbg !9722
  %50 = load i32, i32* %image_index, align 4, !dbg !9723
  %idxprom36 = sext i32 %50 to i64, !dbg !9720
  %arrayidx37 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %49, i64 %idxprom36, !dbg !9720
  %ibuf38 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %arrayidx37, i32 0, i32 1, !dbg !9724
  %51 = load %struct.ImBuf*, %struct.ImBuf** %ibuf38, align 8, !dbg !9724
  store %struct.ImBuf* %51, %struct.ImBuf** %ibuf, align 8, !dbg !9725
  %52 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9726
  %projImages39 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %52, i32 0, i32 38, !dbg !9727
  %53 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages39, align 8, !dbg !9727
  %54 = load i32, i32* %image_index, align 4, !dbg !9728
  %idxprom40 = sext i32 %54 to i64, !dbg !9726
  %arrayidx41 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %53, i64 %idxprom40, !dbg !9726
  %ima42 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %arrayidx41, i32 0, i32 0, !dbg !9729
  %55 = load %struct.Image*, %struct.Image** %ima42, align 8, !dbg !9729
  store %struct.Image* %55, %struct.Image** %ima, align 8, !dbg !9730
  br label %for.end44, !dbg !9731

if.end:                                           ; preds = %for.body27
  br label %for.inc43, !dbg !9732

for.inc43:                                        ; preds = %if.end
  %56 = load i32, i32* %image_index, align 4, !dbg !9733
  %inc = add nsw i32 %56, 1, !dbg !9733
  store i32 %inc, i32* %image_index, align 4, !dbg !9733
  br label %for.cond23, !dbg !9734, !llvm.loop !9735

for.end44:                                        ; preds = %if.then34, %for.cond23
  br label %if.end45, !dbg !9737

if.end45:                                         ; preds = %for.end44, %for.body17
  %57 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9738
  %58 = load i32, i32* %thread_index.addr, align 4, !dbg !9739
  %59 = load i32, i32* %bucket_index.addr, align 4, !dbg !9740
  %60 = load i32, i32* %face_index, align 4, !dbg !9741
  %61 = load i32, i32* %image_index, align 4, !dbg !9742
  %62 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !9743
  %63 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9744
  %64 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9745
  %tpageflag46 = getelementptr inbounds %struct.Image, %struct.Image* %64, i32 0, i32 14, !dbg !9746
  %65 = load i16, i16* %tpageflag46, align 8, !dbg !9746
  %conv47 = sext i16 %65 to i32, !dbg !9745
  %and48 = and i32 %conv47, 16, !dbg !9747
  %conv49 = trunc i32 %and48 to i16, !dbg !9745
  %66 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9748
  %tpageflag50 = getelementptr inbounds %struct.Image, %struct.Image* %66, i32 0, i32 14, !dbg !9749
  %67 = load i16, i16* %tpageflag50, align 8, !dbg !9749
  %conv51 = sext i16 %67 to i32, !dbg !9748
  %and52 = and i32 %conv51, 32, !dbg !9750
  %conv53 = trunc i32 %and52 to i16, !dbg !9748
  call void @project_paint_face_init(%struct.ProjPaintState* %57, i32 %58, i32 %59, i32 %60, i32 %61, %struct.rctf* %62, %struct.ImBuf* %63, %struct.ImBuf** %tmpibuf, i16 signext %conv49, i16 signext %conv53), !dbg !9751
  br label %for.inc54, !dbg !9752

for.inc54:                                        ; preds = %if.end45
  %68 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !9753
  %next55 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %68, i32 0, i32 0, !dbg !9754
  %69 = load %struct.LinkNode*, %struct.LinkNode** %next55, align 8, !dbg !9754
  store %struct.LinkNode* %69, %struct.LinkNode** %node, align 8, !dbg !9755
  br label %for.cond15, !dbg !9756, !llvm.loop !9757

for.end56:                                        ; preds = %for.cond15
  br label %if.end57

if.end57:                                         ; preds = %for.end56, %for.end
  %70 = load %struct.ImBuf*, %struct.ImBuf** %tmpibuf, align 8, !dbg !9759
  %tobool58 = icmp ne %struct.ImBuf* %70, null, !dbg !9759
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !9761

if.then59:                                        ; preds = %if.end57
  %71 = load %struct.ImBuf*, %struct.ImBuf** %tmpibuf, align 8, !dbg !9762
  call void @IMB_freeImBuf(%struct.ImBuf* %71), !dbg !9763
  br label %if.end60, !dbg !9763

if.end60:                                         ; preds = %if.then59, %if.end57
  %72 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !9764
  %bucketFlags = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %72, i32 0, i32 30, !dbg !9765
  %73 = load i8*, i8** %bucketFlags, align 8, !dbg !9765
  %74 = load i32, i32* %bucket_index.addr, align 4, !dbg !9766
  %idxprom61 = sext i32 %74 to i64, !dbg !9764
  %arrayidx62 = getelementptr inbounds i8, i8* %73, i64 %idxprom61, !dbg !9764
  %75 = load i8, i8* %arrayidx62, align 1, !dbg !9767
  %conv63 = zext i8 %75 to i32, !dbg !9767
  %or = or i32 %conv63, 1, !dbg !9767
  %conv64 = trunc i32 %or to i8, !dbg !9767
  store i8 %conv64, i8* %arrayidx62, align 1, !dbg !9767
  ret void, !dbg !9768
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !9769 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9772, metadata !DIExpression()), !dbg !9773
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9774, metadata !DIExpression()), !dbg !9775
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9776, metadata !DIExpression()), !dbg !9777
  %0 = load float*, float** %a.addr, align 8, !dbg !9778
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9778
  %1 = load float, float* %arrayidx, align 4, !dbg !9778
  %2 = load float*, float** %b.addr, align 8, !dbg !9779
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9779
  %3 = load float, float* %arrayidx1, align 4, !dbg !9779
  %sub = fsub float %1, %3, !dbg !9780
  %4 = load float*, float** %r.addr, align 8, !dbg !9781
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !9781
  store float %sub, float* %arrayidx2, align 4, !dbg !9782
  %5 = load float*, float** %a.addr, align 8, !dbg !9783
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !9783
  %6 = load float, float* %arrayidx3, align 4, !dbg !9783
  %7 = load float*, float** %b.addr, align 8, !dbg !9784
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !9784
  %8 = load float, float* %arrayidx4, align 4, !dbg !9784
  %sub5 = fsub float %6, %8, !dbg !9785
  %9 = load float*, float** %r.addr, align 8, !dbg !9786
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !9786
  store float %sub5, float* %arrayidx6, align 4, !dbg !9787
  ret void, !dbg !9788
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v2(float* %v) #0 !dbg !9789 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !9792, metadata !DIExpression()), !dbg !9793
  %0 = load float*, float** %v.addr, align 8, !dbg !9794
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9794
  %1 = load float, float* %arrayidx, align 4, !dbg !9794
  %2 = load float*, float** %v.addr, align 8, !dbg !9795
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9795
  %3 = load float, float* %arrayidx1, align 4, !dbg !9795
  %mul = fmul float %1, %3, !dbg !9796
  %4 = load float*, float** %v.addr, align 8, !dbg !9797
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !9797
  %5 = load float, float* %arrayidx2, align 4, !dbg !9797
  %6 = load float*, float** %v.addr, align 8, !dbg !9798
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !9798
  %7 = load float, float* %arrayidx3, align 4, !dbg !9798
  %mul4 = fmul float %5, %7, !dbg !9799
  %add = fadd float %mul, %mul4, !dbg !9800
  ret float %add, !dbg !9801
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v2v2(float* %a, float* %b) #0 !dbg !9802 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9805, metadata !DIExpression()), !dbg !9806
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9807, metadata !DIExpression()), !dbg !9808
  %0 = load float*, float** %a.addr, align 8, !dbg !9809
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9809
  %1 = load float, float* %arrayidx, align 4, !dbg !9809
  %2 = load float*, float** %b.addr, align 8, !dbg !9810
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9810
  %3 = load float, float* %arrayidx1, align 4, !dbg !9810
  %mul = fmul float %1, %3, !dbg !9811
  %4 = load float*, float** %a.addr, align 8, !dbg !9812
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !9812
  %5 = load float, float* %arrayidx2, align 4, !dbg !9812
  %6 = load float*, float** %b.addr, align 8, !dbg !9813
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !9813
  %7 = load float, float* %arrayidx3, align 4, !dbg !9813
  %mul4 = fmul float %5, %7, !dbg !9814
  %add = fadd float %mul, %mul4, !dbg !9815
  ret float %add, !dbg !9816
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v2(float* %v) #0 !dbg !9817 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !9818, metadata !DIExpression()), !dbg !9819
  %0 = load float*, float** %v.addr, align 8, !dbg !9820
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9820
  %1 = load float, float* %arrayidx, align 4, !dbg !9820
  %2 = load float*, float** %v.addr, align 8, !dbg !9821
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9821
  %3 = load float, float* %arrayidx1, align 4, !dbg !9821
  %mul = fmul float %1, %3, !dbg !9822
  %4 = load float*, float** %v.addr, align 8, !dbg !9823
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !9823
  %5 = load float, float* %arrayidx2, align 4, !dbg !9823
  %6 = load float*, float** %v.addr, align 8, !dbg !9824
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !9824
  %7 = load float, float* %arrayidx3, align 4, !dbg !9824
  %mul4 = fmul float %5, %7, !dbg !9825
  %add = fadd float %mul, %mul4, !dbg !9826
  %call = call float @sqrtf(float %add) #5, !dbg !9827
  ret float %call, !dbg !9828
}

declare dso_local zeroext i8 @do_colorband(%struct.ColorBand*, float, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !9829 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9832, metadata !DIExpression()), !dbg !9833
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !9834, metadata !DIExpression()), !dbg !9835
  %0 = load float, float* %f.addr, align 4, !dbg !9836
  %1 = load float*, float** %r.addr, align 8, !dbg !9837
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !9837
  %2 = load float, float* %arrayidx, align 4, !dbg !9838
  %mul = fmul float %2, %0, !dbg !9838
  store float %mul, float* %arrayidx, align 4, !dbg !9838
  %3 = load float, float* %f.addr, align 4, !dbg !9839
  %4 = load float*, float** %r.addr, align 8, !dbg !9840
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !9840
  %5 = load float, float* %arrayidx1, align 4, !dbg !9841
  %mul2 = fmul float %5, %3, !dbg !9841
  store float %mul2, float* %arrayidx1, align 4, !dbg !9841
  %6 = load float, float* %f.addr, align 4, !dbg !9842
  %7 = load float*, float** %r.addr, align 8, !dbg !9843
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !9843
  %8 = load float, float* %arrayidx3, align 4, !dbg !9844
  %mul4 = fmul float %8, %6, !dbg !9844
  store float %mul4, float* %arrayidx3, align 4, !dbg !9844
  ret void, !dbg !9845
}

declare dso_local void @IMB_blend_color_float(float*, float*, float*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @linearrgb_to_srgb_v3_v3(float* %srgb, float* %linear) #0 !dbg !9846 {
entry:
  %srgb.addr = alloca float*, align 8
  %linear.addr = alloca float*, align 8
  store float* %srgb, float** %srgb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %srgb.addr, metadata !9847, metadata !DIExpression()), !dbg !9848
  store float* %linear, float** %linear.addr, align 8
  call void @llvm.dbg.declare(metadata float** %linear.addr, metadata !9849, metadata !DIExpression()), !dbg !9850
  %0 = load float*, float** %linear.addr, align 8, !dbg !9851
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9851
  %1 = load float, float* %arrayidx, align 4, !dbg !9851
  %call = call float @linearrgb_to_srgb(float %1), !dbg !9852
  %2 = load float*, float** %srgb.addr, align 8, !dbg !9853
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9853
  store float %call, float* %arrayidx1, align 4, !dbg !9854
  %3 = load float*, float** %linear.addr, align 8, !dbg !9855
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !9855
  %4 = load float, float* %arrayidx2, align 4, !dbg !9855
  %call3 = call float @linearrgb_to_srgb(float %4), !dbg !9856
  %5 = load float*, float** %srgb.addr, align 8, !dbg !9857
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !9857
  store float %call3, float* %arrayidx4, align 4, !dbg !9858
  %6 = load float*, float** %linear.addr, align 8, !dbg !9859
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !9859
  %7 = load float, float* %arrayidx5, align 4, !dbg !9859
  %call6 = call float @linearrgb_to_srgb(float %7), !dbg !9860
  %8 = load float*, float** %srgb.addr, align 8, !dbg !9861
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !9861
  store float %call6, float* %arrayidx7, align 4, !dbg !9862
  ret void, !dbg !9863
}

declare dso_local void @rgba_float_to_uchar(i8*, float*) #2

declare dso_local void @IMB_blend_color_byte(i8*, i8*, i8*, i32) #2

declare dso_local void @rgb_float_to_uchar(i8*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @min_ii(i32 %a, i32 %b) #0 !dbg !9864 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !9868, metadata !DIExpression()), !dbg !9869
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !9870, metadata !DIExpression()), !dbg !9871
  %0 = load i32, i32* %a.addr, align 4, !dbg !9872
  %1 = load i32, i32* %b.addr, align 4, !dbg !9873
  %cmp = icmp slt i32 %0, %1, !dbg !9874
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9875

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !9876
  br label %cond.end, !dbg !9875

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !9877
  br label %cond.end, !dbg !9875

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !9875
  ret i32 %cond, !dbg !9878
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @max_ii(i32 %a, i32 %b) #0 !dbg !9879 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !9880, metadata !DIExpression()), !dbg !9881
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !9882, metadata !DIExpression()), !dbg !9883
  %0 = load i32, i32* %b.addr, align 4, !dbg !9884
  %1 = load i32, i32* %a.addr, align 4, !dbg !9885
  %cmp = icmp slt i32 %0, %1, !dbg !9886
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9887

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !9888
  br label %cond.end, !dbg !9887

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !9889
  br label %cond.end, !dbg !9887

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !9887
  ret i32 %cond, !dbg !9890
}

declare dso_local void @bicubic_interpolation_color(%struct.ImBuf*, i8*, float*, float, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @straight_uchar_to_premul_float(float* %result, i8* %color) #0 !dbg !9891 {
entry:
  %result.addr = alloca float*, align 8
  %color.addr = alloca i8*, align 8
  %alpha = alloca float, align 4
  %fac = alloca float, align 4
  store float* %result, float** %result.addr, align 8
  call void @llvm.dbg.declare(metadata float** %result.addr, metadata !9895, metadata !DIExpression()), !dbg !9896
  store i8* %color, i8** %color.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %color.addr, metadata !9897, metadata !DIExpression()), !dbg !9898
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !9899, metadata !DIExpression()), !dbg !9900
  %0 = load i8*, i8** %color.addr, align 8, !dbg !9901
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 3, !dbg !9901
  %1 = load i8, i8* %arrayidx, align 1, !dbg !9901
  %conv = zext i8 %1 to i32, !dbg !9901
  %conv1 = sitofp i32 %conv to float, !dbg !9901
  %mul = fmul float %conv1, 0x3F70101020000000, !dbg !9902
  store float %mul, float* %alpha, align 4, !dbg !9900
  call void @llvm.dbg.declare(metadata float* %fac, metadata !9903, metadata !DIExpression()), !dbg !9904
  %2 = load float, float* %alpha, align 4, !dbg !9905
  %mul2 = fmul float %2, 0x3F70101020000000, !dbg !9906
  store float %mul2, float* %fac, align 4, !dbg !9904
  %3 = load i8*, i8** %color.addr, align 8, !dbg !9907
  %arrayidx3 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !9907
  %4 = load i8, i8* %arrayidx3, align 1, !dbg !9907
  %conv4 = zext i8 %4 to i32, !dbg !9907
  %conv5 = sitofp i32 %conv4 to float, !dbg !9907
  %5 = load float, float* %fac, align 4, !dbg !9908
  %mul6 = fmul float %conv5, %5, !dbg !9909
  %6 = load float*, float** %result.addr, align 8, !dbg !9910
  %arrayidx7 = getelementptr inbounds float, float* %6, i64 0, !dbg !9910
  store float %mul6, float* %arrayidx7, align 4, !dbg !9911
  %7 = load i8*, i8** %color.addr, align 8, !dbg !9912
  %arrayidx8 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !9912
  %8 = load i8, i8* %arrayidx8, align 1, !dbg !9912
  %conv9 = zext i8 %8 to i32, !dbg !9912
  %conv10 = sitofp i32 %conv9 to float, !dbg !9912
  %9 = load float, float* %fac, align 4, !dbg !9913
  %mul11 = fmul float %conv10, %9, !dbg !9914
  %10 = load float*, float** %result.addr, align 8, !dbg !9915
  %arrayidx12 = getelementptr inbounds float, float* %10, i64 1, !dbg !9915
  store float %mul11, float* %arrayidx12, align 4, !dbg !9916
  %11 = load i8*, i8** %color.addr, align 8, !dbg !9917
  %arrayidx13 = getelementptr inbounds i8, i8* %11, i64 2, !dbg !9917
  %12 = load i8, i8* %arrayidx13, align 1, !dbg !9917
  %conv14 = zext i8 %12 to i32, !dbg !9917
  %conv15 = sitofp i32 %conv14 to float, !dbg !9917
  %13 = load float, float* %fac, align 4, !dbg !9918
  %mul16 = fmul float %conv15, %13, !dbg !9919
  %14 = load float*, float** %result.addr, align 8, !dbg !9920
  %arrayidx17 = getelementptr inbounds float, float* %14, i64 2, !dbg !9920
  store float %mul16, float* %arrayidx17, align 4, !dbg !9921
  %15 = load float, float* %alpha, align 4, !dbg !9922
  %16 = load float*, float** %result.addr, align 8, !dbg !9923
  %arrayidx18 = getelementptr inbounds float, float* %16, i64 3, !dbg !9923
  store float %15, float* %arrayidx18, align 4, !dbg !9924
  ret void, !dbg !9925
}

declare dso_local void @IMB_colormanagement_colorspace_to_scene_linear_v4(float*, i8 zeroext, %struct.ColorSpace*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v4_v4fl(float* %r, float* %a, float %f) #0 !dbg !9926 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9929, metadata !DIExpression()), !dbg !9930
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9931, metadata !DIExpression()), !dbg !9932
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !9933, metadata !DIExpression()), !dbg !9934
  %0 = load float*, float** %a.addr, align 8, !dbg !9935
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9935
  %1 = load float, float* %arrayidx, align 4, !dbg !9935
  %2 = load float, float* %f.addr, align 4, !dbg !9936
  %mul = fmul float %1, %2, !dbg !9937
  %3 = load float*, float** %r.addr, align 8, !dbg !9938
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !9938
  store float %mul, float* %arrayidx1, align 4, !dbg !9939
  %4 = load float*, float** %a.addr, align 8, !dbg !9940
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !9940
  %5 = load float, float* %arrayidx2, align 4, !dbg !9940
  %6 = load float, float* %f.addr, align 4, !dbg !9941
  %mul3 = fmul float %5, %6, !dbg !9942
  %7 = load float*, float** %r.addr, align 8, !dbg !9943
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !9943
  store float %mul3, float* %arrayidx4, align 4, !dbg !9944
  %8 = load float*, float** %a.addr, align 8, !dbg !9945
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !9945
  %9 = load float, float* %arrayidx5, align 4, !dbg !9945
  %10 = load float, float* %f.addr, align 4, !dbg !9946
  %mul6 = fmul float %9, %10, !dbg !9947
  %11 = load float*, float** %r.addr, align 8, !dbg !9948
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !9948
  store float %mul6, float* %arrayidx7, align 4, !dbg !9949
  %12 = load float*, float** %a.addr, align 8, !dbg !9950
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 3, !dbg !9950
  %13 = load float, float* %arrayidx8, align 4, !dbg !9950
  %14 = load float, float* %f.addr, align 4, !dbg !9951
  %mul9 = fmul float %13, %14, !dbg !9952
  %15 = load float*, float** %r.addr, align 8, !dbg !9953
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 3, !dbg !9953
  store float %mul9, float* %arrayidx10, align 4, !dbg !9954
  ret void, !dbg !9955
}

; Function Attrs: noinline nounwind uwtable
define internal void @blend_color_mix_float(float* %dst, float* %src1, float* %src2) #0 !dbg !9956 {
entry:
  %dst.addr = alloca float*, align 8
  %src1.addr = alloca float*, align 8
  %src2.addr = alloca float*, align 8
  %t = alloca float, align 4
  %mt = alloca float, align 4
  store float* %dst, float** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dst.addr, metadata !9958, metadata !DIExpression()), !dbg !9959
  store float* %src1, float** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %src1.addr, metadata !9960, metadata !DIExpression()), !dbg !9961
  store float* %src2, float** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %src2.addr, metadata !9962, metadata !DIExpression()), !dbg !9963
  %0 = load float*, float** %src2.addr, align 8, !dbg !9964
  %arrayidx = getelementptr inbounds float, float* %0, i64 3, !dbg !9964
  %1 = load float, float* %arrayidx, align 4, !dbg !9964
  %cmp = fcmp une float %1, 0.000000e+00, !dbg !9966
  br i1 %cmp, label %if.then, label %if.else, !dbg !9967

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %t, metadata !9968, metadata !DIExpression()), !dbg !9970
  %2 = load float*, float** %src2.addr, align 8, !dbg !9971
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 3, !dbg !9971
  %3 = load float, float* %arrayidx1, align 4, !dbg !9971
  store float %3, float* %t, align 4, !dbg !9970
  call void @llvm.dbg.declare(metadata float* %mt, metadata !9972, metadata !DIExpression()), !dbg !9973
  %4 = load float, float* %t, align 4, !dbg !9974
  %sub = fsub float 1.000000e+00, %4, !dbg !9975
  store float %sub, float* %mt, align 4, !dbg !9973
  %5 = load float, float* %mt, align 4, !dbg !9976
  %6 = load float*, float** %src1.addr, align 8, !dbg !9977
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 0, !dbg !9977
  %7 = load float, float* %arrayidx2, align 4, !dbg !9977
  %mul = fmul float %5, %7, !dbg !9978
  %8 = load float*, float** %src2.addr, align 8, !dbg !9979
  %arrayidx3 = getelementptr inbounds float, float* %8, i64 0, !dbg !9979
  %9 = load float, float* %arrayidx3, align 4, !dbg !9979
  %add = fadd float %mul, %9, !dbg !9980
  %10 = load float*, float** %dst.addr, align 8, !dbg !9981
  %arrayidx4 = getelementptr inbounds float, float* %10, i64 0, !dbg !9981
  store float %add, float* %arrayidx4, align 4, !dbg !9982
  %11 = load float, float* %mt, align 4, !dbg !9983
  %12 = load float*, float** %src1.addr, align 8, !dbg !9984
  %arrayidx5 = getelementptr inbounds float, float* %12, i64 1, !dbg !9984
  %13 = load float, float* %arrayidx5, align 4, !dbg !9984
  %mul6 = fmul float %11, %13, !dbg !9985
  %14 = load float*, float** %src2.addr, align 8, !dbg !9986
  %arrayidx7 = getelementptr inbounds float, float* %14, i64 1, !dbg !9986
  %15 = load float, float* %arrayidx7, align 4, !dbg !9986
  %add8 = fadd float %mul6, %15, !dbg !9987
  %16 = load float*, float** %dst.addr, align 8, !dbg !9988
  %arrayidx9 = getelementptr inbounds float, float* %16, i64 1, !dbg !9988
  store float %add8, float* %arrayidx9, align 4, !dbg !9989
  %17 = load float, float* %mt, align 4, !dbg !9990
  %18 = load float*, float** %src1.addr, align 8, !dbg !9991
  %arrayidx10 = getelementptr inbounds float, float* %18, i64 2, !dbg !9991
  %19 = load float, float* %arrayidx10, align 4, !dbg !9991
  %mul11 = fmul float %17, %19, !dbg !9992
  %20 = load float*, float** %src2.addr, align 8, !dbg !9993
  %arrayidx12 = getelementptr inbounds float, float* %20, i64 2, !dbg !9993
  %21 = load float, float* %arrayidx12, align 4, !dbg !9993
  %add13 = fadd float %mul11, %21, !dbg !9994
  %22 = load float*, float** %dst.addr, align 8, !dbg !9995
  %arrayidx14 = getelementptr inbounds float, float* %22, i64 2, !dbg !9995
  store float %add13, float* %arrayidx14, align 4, !dbg !9996
  %23 = load float, float* %mt, align 4, !dbg !9997
  %24 = load float*, float** %src1.addr, align 8, !dbg !9998
  %arrayidx15 = getelementptr inbounds float, float* %24, i64 3, !dbg !9998
  %25 = load float, float* %arrayidx15, align 4, !dbg !9998
  %mul16 = fmul float %23, %25, !dbg !9999
  %26 = load float, float* %t, align 4, !dbg !10000
  %add17 = fadd float %mul16, %26, !dbg !10001
  %27 = load float*, float** %dst.addr, align 8, !dbg !10002
  %arrayidx18 = getelementptr inbounds float, float* %27, i64 3, !dbg !10002
  store float %add17, float* %arrayidx18, align 4, !dbg !10003
  br label %if.end, !dbg !10004

if.else:                                          ; preds = %entry
  %28 = load float*, float** %dst.addr, align 8, !dbg !10005
  %29 = load float*, float** %src1.addr, align 8, !dbg !10007
  call void @copy_v4_v4(float* %28, float* %29), !dbg !10008
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10009
}

; Function Attrs: noinline nounwind uwtable
define internal void @blend_color_mix_byte(i8* %dst, i8* %src1, i8* %src2) #0 !dbg !10010 {
entry:
  %dst.addr = alloca i8*, align 8
  %src1.addr = alloca i8*, align 8
  %src2.addr = alloca i8*, align 8
  %t = alloca i32, align 4
  %mt = alloca i32, align 4
  %tmp = alloca [4 x i32], align 16
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !10013, metadata !DIExpression()), !dbg !10014
  store i8* %src1, i8** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src1.addr, metadata !10015, metadata !DIExpression()), !dbg !10016
  store i8* %src2, i8** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src2.addr, metadata !10017, metadata !DIExpression()), !dbg !10018
  %0 = load i8*, i8** %src2.addr, align 8, !dbg !10019
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 3, !dbg !10019
  %1 = load i8, i8* %arrayidx, align 1, !dbg !10019
  %conv = zext i8 %1 to i32, !dbg !10019
  %cmp = icmp ne i32 %conv, 0, !dbg !10021
  br i1 %cmp, label %if.then, label %if.else, !dbg !10022

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %t, metadata !10023, metadata !DIExpression()), !dbg !10025
  %2 = load i8*, i8** %src2.addr, align 8, !dbg !10026
  %arrayidx2 = getelementptr inbounds i8, i8* %2, i64 3, !dbg !10026
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !10026
  %conv3 = zext i8 %3 to i32, !dbg !10026
  store i32 %conv3, i32* %t, align 4, !dbg !10025
  call void @llvm.dbg.declare(metadata i32* %mt, metadata !10027, metadata !DIExpression()), !dbg !10028
  %4 = load i32, i32* %t, align 4, !dbg !10029
  %sub = sub nsw i32 255, %4, !dbg !10030
  store i32 %sub, i32* %mt, align 4, !dbg !10028
  call void @llvm.dbg.declare(metadata [4 x i32]* %tmp, metadata !10031, metadata !DIExpression()), !dbg !10032
  %5 = load i32, i32* %mt, align 4, !dbg !10033
  %6 = load i8*, i8** %src1.addr, align 8, !dbg !10034
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 3, !dbg !10034
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !10034
  %conv5 = zext i8 %7 to i32, !dbg !10034
  %mul = mul nsw i32 %5, %conv5, !dbg !10035
  %8 = load i8*, i8** %src1.addr, align 8, !dbg !10036
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !10036
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !10036
  %conv7 = zext i8 %9 to i32, !dbg !10036
  %mul8 = mul nsw i32 %mul, %conv7, !dbg !10037
  %10 = load i32, i32* %t, align 4, !dbg !10038
  %mul9 = mul nsw i32 %10, 255, !dbg !10039
  %11 = load i8*, i8** %src2.addr, align 8, !dbg !10040
  %arrayidx10 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !10040
  %12 = load i8, i8* %arrayidx10, align 1, !dbg !10040
  %conv11 = zext i8 %12 to i32, !dbg !10040
  %mul12 = mul nsw i32 %mul9, %conv11, !dbg !10041
  %add = add nsw i32 %mul8, %mul12, !dbg !10042
  %arrayidx13 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 0, !dbg !10043
  store i32 %add, i32* %arrayidx13, align 16, !dbg !10044
  %13 = load i32, i32* %mt, align 4, !dbg !10045
  %14 = load i8*, i8** %src1.addr, align 8, !dbg !10046
  %arrayidx14 = getelementptr inbounds i8, i8* %14, i64 3, !dbg !10046
  %15 = load i8, i8* %arrayidx14, align 1, !dbg !10046
  %conv15 = zext i8 %15 to i32, !dbg !10046
  %mul16 = mul nsw i32 %13, %conv15, !dbg !10047
  %16 = load i8*, i8** %src1.addr, align 8, !dbg !10048
  %arrayidx17 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !10048
  %17 = load i8, i8* %arrayidx17, align 1, !dbg !10048
  %conv18 = zext i8 %17 to i32, !dbg !10048
  %mul19 = mul nsw i32 %mul16, %conv18, !dbg !10049
  %18 = load i32, i32* %t, align 4, !dbg !10050
  %mul20 = mul nsw i32 %18, 255, !dbg !10051
  %19 = load i8*, i8** %src2.addr, align 8, !dbg !10052
  %arrayidx21 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !10052
  %20 = load i8, i8* %arrayidx21, align 1, !dbg !10052
  %conv22 = zext i8 %20 to i32, !dbg !10052
  %mul23 = mul nsw i32 %mul20, %conv22, !dbg !10053
  %add24 = add nsw i32 %mul19, %mul23, !dbg !10054
  %arrayidx25 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 1, !dbg !10055
  store i32 %add24, i32* %arrayidx25, align 4, !dbg !10056
  %21 = load i32, i32* %mt, align 4, !dbg !10057
  %22 = load i8*, i8** %src1.addr, align 8, !dbg !10058
  %arrayidx26 = getelementptr inbounds i8, i8* %22, i64 3, !dbg !10058
  %23 = load i8, i8* %arrayidx26, align 1, !dbg !10058
  %conv27 = zext i8 %23 to i32, !dbg !10058
  %mul28 = mul nsw i32 %21, %conv27, !dbg !10059
  %24 = load i8*, i8** %src1.addr, align 8, !dbg !10060
  %arrayidx29 = getelementptr inbounds i8, i8* %24, i64 2, !dbg !10060
  %25 = load i8, i8* %arrayidx29, align 1, !dbg !10060
  %conv30 = zext i8 %25 to i32, !dbg !10060
  %mul31 = mul nsw i32 %mul28, %conv30, !dbg !10061
  %26 = load i32, i32* %t, align 4, !dbg !10062
  %mul32 = mul nsw i32 %26, 255, !dbg !10063
  %27 = load i8*, i8** %src2.addr, align 8, !dbg !10064
  %arrayidx33 = getelementptr inbounds i8, i8* %27, i64 2, !dbg !10064
  %28 = load i8, i8* %arrayidx33, align 1, !dbg !10064
  %conv34 = zext i8 %28 to i32, !dbg !10064
  %mul35 = mul nsw i32 %mul32, %conv34, !dbg !10065
  %add36 = add nsw i32 %mul31, %mul35, !dbg !10066
  %arrayidx37 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 2, !dbg !10067
  store i32 %add36, i32* %arrayidx37, align 8, !dbg !10068
  %29 = load i32, i32* %mt, align 4, !dbg !10069
  %30 = load i8*, i8** %src1.addr, align 8, !dbg !10070
  %arrayidx38 = getelementptr inbounds i8, i8* %30, i64 3, !dbg !10070
  %31 = load i8, i8* %arrayidx38, align 1, !dbg !10070
  %conv39 = zext i8 %31 to i32, !dbg !10070
  %mul40 = mul nsw i32 %29, %conv39, !dbg !10071
  %32 = load i32, i32* %t, align 4, !dbg !10072
  %mul41 = mul nsw i32 %32, 255, !dbg !10073
  %add42 = add nsw i32 %mul40, %mul41, !dbg !10074
  %arrayidx43 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 3, !dbg !10075
  store i32 %add42, i32* %arrayidx43, align 4, !dbg !10076
  %arrayidx44 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 0, !dbg !10077
  %33 = load i32, i32* %arrayidx44, align 16, !dbg !10077
  %arrayidx45 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 3, !dbg !10078
  %34 = load i32, i32* %arrayidx45, align 4, !dbg !10078
  %call = call i32 @divide_round_i(i32 %33, i32 %34), !dbg !10079
  %conv46 = trunc i32 %call to i8, !dbg !10080
  %35 = load i8*, i8** %dst.addr, align 8, !dbg !10081
  %arrayidx47 = getelementptr inbounds i8, i8* %35, i64 0, !dbg !10081
  store i8 %conv46, i8* %arrayidx47, align 1, !dbg !10082
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 1, !dbg !10083
  %36 = load i32, i32* %arrayidx48, align 4, !dbg !10083
  %arrayidx49 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 3, !dbg !10084
  %37 = load i32, i32* %arrayidx49, align 4, !dbg !10084
  %call50 = call i32 @divide_round_i(i32 %36, i32 %37), !dbg !10085
  %conv51 = trunc i32 %call50 to i8, !dbg !10086
  %38 = load i8*, i8** %dst.addr, align 8, !dbg !10087
  %arrayidx52 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !10087
  store i8 %conv51, i8* %arrayidx52, align 1, !dbg !10088
  %arrayidx53 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 2, !dbg !10089
  %39 = load i32, i32* %arrayidx53, align 8, !dbg !10089
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 3, !dbg !10090
  %40 = load i32, i32* %arrayidx54, align 4, !dbg !10090
  %call55 = call i32 @divide_round_i(i32 %39, i32 %40), !dbg !10091
  %conv56 = trunc i32 %call55 to i8, !dbg !10092
  %41 = load i8*, i8** %dst.addr, align 8, !dbg !10093
  %arrayidx57 = getelementptr inbounds i8, i8* %41, i64 2, !dbg !10093
  store i8 %conv56, i8* %arrayidx57, align 1, !dbg !10094
  %arrayidx58 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 3, !dbg !10095
  %42 = load i32, i32* %arrayidx58, align 4, !dbg !10095
  %call59 = call i32 @divide_round_i(i32 %42, i32 255), !dbg !10096
  %conv60 = trunc i32 %call59 to i8, !dbg !10097
  %43 = load i8*, i8** %dst.addr, align 8, !dbg !10098
  %arrayidx61 = getelementptr inbounds i8, i8* %43, i64 3, !dbg !10098
  store i8 %conv60, i8* %arrayidx61, align 1, !dbg !10099
  br label %if.end, !dbg !10100

if.else:                                          ; preds = %entry
  %44 = load i8*, i8** %dst.addr, align 8, !dbg !10101
  %45 = load i8*, i8** %src1.addr, align 8, !dbg !10103
  call void @copy_v4_v4_char(i8* %44, i8* %45), !dbg !10104
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10105
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v2v2(float* %a, float* %b) #0 !dbg !10106 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [2 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10107, metadata !DIExpression()), !dbg !10108
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !10109, metadata !DIExpression()), !dbg !10110
  call void @llvm.dbg.declare(metadata [2 x float]* %d, metadata !10111, metadata !DIExpression()), !dbg !10112
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !10113
  %0 = load float*, float** %b.addr, align 8, !dbg !10114
  %1 = load float*, float** %a.addr, align 8, !dbg !10115
  call void @sub_v2_v2v2(float* %arraydecay, float* %0, float* %1), !dbg !10116
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !10117
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !10118
  %call = call float @dot_v2v2(float* %arraydecay1, float* %arraydecay2), !dbg !10119
  ret float %call, !dbg !10120
}

declare dso_local float @BKE_brush_curve_strength_clamp(%struct.Brush*, float, float) #2

declare dso_local float @BKE_brush_sample_masktex(%struct.Scene*, %struct.Brush*, float*, i32, %struct.ImagePool*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !10121 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !10124, metadata !DIExpression()), !dbg !10125
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !10126, metadata !DIExpression()), !dbg !10127
  %0 = load float, float* %a.addr, align 4, !dbg !10128
  %1 = load float, float* %b.addr, align 4, !dbg !10129
  %cmp = fcmp olt float %0, %1, !dbg !10130
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10131

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !10132
  br label %cond.end, !dbg !10131

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !10133
  br label %cond.end, !dbg !10131

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !10131
  ret float %cond, !dbg !10134
}

declare dso_local float @BKE_brush_sample_tex_3D(%struct.Scene*, %struct.Brush*, float*, float*, i32, %struct.ImagePool*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @do_projectpaint_clone_f(%struct.ProjPaintState* %ps, %struct.ProjPixel* %projPixel, float %mask) #0 !dbg !10135 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %projPixel.addr = alloca %struct.ProjPixel*, align 8
  %mask.addr = alloca float, align 4
  %clone_pt = alloca float*, align 8
  %clone_rgba = alloca [4 x float], align 16
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !10138, metadata !DIExpression()), !dbg !10139
  store %struct.ProjPixel* %projPixel, %struct.ProjPixel** %projPixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPixel** %projPixel.addr, metadata !10140, metadata !DIExpression()), !dbg !10141
  store float %mask, float* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata float* %mask.addr, metadata !10142, metadata !DIExpression()), !dbg !10143
  call void @llvm.dbg.declare(metadata float** %clone_pt, metadata !10144, metadata !DIExpression()), !dbg !10145
  %0 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10146
  %1 = bitcast %struct.ProjPixel* %0 to %struct.ProjPixelClone*, !dbg !10147
  %clonepx = getelementptr inbounds %struct.ProjPixelClone, %struct.ProjPixelClone* %1, i32 0, i32 1, !dbg !10147
  %f = bitcast %union.pixelStore* %clonepx to [4 x float]*, !dbg !10148
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %f, i64 0, i64 0, !dbg !10149
  store float* %arraydecay, float** %clone_pt, align 8, !dbg !10145
  %2 = load float*, float** %clone_pt, align 8, !dbg !10150
  %arrayidx = getelementptr inbounds float, float* %2, i64 3, !dbg !10150
  %3 = load float, float* %arrayidx, align 4, !dbg !10150
  %tobool = fcmp une float %3, 0.000000e+00, !dbg !10150
  br i1 %tobool, label %if.then, label %if.end13, !dbg !10152

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x float]* %clone_rgba, metadata !10153, metadata !DIExpression()), !dbg !10155
  %arraydecay1 = getelementptr inbounds [4 x float], [4 x float]* %clone_rgba, i64 0, i64 0, !dbg !10156
  %4 = load float*, float** %clone_pt, align 8, !dbg !10157
  %5 = load float, float* %mask.addr, align 4, !dbg !10158
  call void @mul_v4_v4fl(float* %arraydecay1, float* %4, float %5), !dbg !10159
  %6 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10160
  %do_masking = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %6, i32 0, i32 62, !dbg !10162
  %7 = load i8, i8* %do_masking, align 2, !dbg !10162
  %tobool2 = icmp ne i8 %7, 0, !dbg !10160
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !10163

if.then3:                                         ; preds = %if.then
  %8 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10164
  %pixel = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %8, i32 0, i32 9, !dbg !10166
  %f_pt = bitcast %union.pixelPointer* %pixel to float**, !dbg !10167
  %9 = load float*, float** %f_pt, align 8, !dbg !10167
  %10 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10168
  %origColor = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %10, i32 0, i32 7, !dbg !10169
  %f_pt4 = bitcast %union.pixelPointer* %origColor to float**, !dbg !10170
  %11 = load float*, float** %f_pt4, align 8, !dbg !10170
  %arraydecay5 = getelementptr inbounds [4 x float], [4 x float]* %clone_rgba, i64 0, i64 0, !dbg !10171
  %12 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10172
  %blend = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %12, i32 0, i32 9, !dbg !10173
  %13 = load i16, i16* %blend, align 2, !dbg !10173
  %conv = sext i16 %13 to i32, !dbg !10172
  call void @IMB_blend_color_float(float* %9, float* %11, float* %arraydecay5, i32 %conv), !dbg !10174
  br label %if.end, !dbg !10175

if.else:                                          ; preds = %if.then
  %14 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10176
  %pixel6 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %14, i32 0, i32 9, !dbg !10178
  %f_pt7 = bitcast %union.pixelPointer* %pixel6 to float**, !dbg !10179
  %15 = load float*, float** %f_pt7, align 8, !dbg !10179
  %16 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10180
  %pixel8 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %16, i32 0, i32 9, !dbg !10181
  %f_pt9 = bitcast %union.pixelPointer* %pixel8 to float**, !dbg !10182
  %17 = load float*, float** %f_pt9, align 8, !dbg !10182
  %arraydecay10 = getelementptr inbounds [4 x float], [4 x float]* %clone_rgba, i64 0, i64 0, !dbg !10183
  %18 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10184
  %blend11 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %18, i32 0, i32 9, !dbg !10185
  %19 = load i16, i16* %blend11, align 2, !dbg !10185
  %conv12 = sext i16 %19 to i32, !dbg !10184
  call void @IMB_blend_color_float(float* %15, float* %17, float* %arraydecay10, i32 %conv12), !dbg !10186
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end13, !dbg !10187

if.end13:                                         ; preds = %if.end, %entry
  ret void, !dbg !10188
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_projectpaint_clone(%struct.ProjPaintState* %ps, %struct.ProjPixel* %projPixel, float %mask) #0 !dbg !10189 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %projPixel.addr = alloca %struct.ProjPixel*, align 8
  %mask.addr = alloca float, align 4
  %clone_pt = alloca i8*, align 8
  %clone_rgba = alloca [4 x i8], align 1
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !10190, metadata !DIExpression()), !dbg !10191
  store %struct.ProjPixel* %projPixel, %struct.ProjPixel** %projPixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPixel** %projPixel.addr, metadata !10192, metadata !DIExpression()), !dbg !10193
  store float %mask, float* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata float* %mask.addr, metadata !10194, metadata !DIExpression()), !dbg !10195
  call void @llvm.dbg.declare(metadata i8** %clone_pt, metadata !10196, metadata !DIExpression()), !dbg !10197
  %0 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10198
  %1 = bitcast %struct.ProjPixel* %0 to %struct.ProjPixelClone*, !dbg !10199
  %clonepx = getelementptr inbounds %struct.ProjPixelClone, %struct.ProjPixelClone* %1, i32 0, i32 1, !dbg !10199
  %ch = bitcast %union.pixelStore* %clonepx to [4 x i8]*, !dbg !10200
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %ch, i64 0, i64 0, !dbg !10201
  store i8* %arraydecay, i8** %clone_pt, align 8, !dbg !10197
  %2 = load i8*, i8** %clone_pt, align 8, !dbg !10202
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 3, !dbg !10202
  %3 = load i8, i8* %arrayidx, align 1, !dbg !10202
  %tobool = icmp ne i8 %3, 0, !dbg !10202
  br i1 %tobool, label %if.then, label %if.end23, !dbg !10204

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x i8]* %clone_rgba, metadata !10205, metadata !DIExpression()), !dbg !10207
  %4 = load i8*, i8** %clone_pt, align 8, !dbg !10208
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !10208
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !10208
  %arrayidx2 = getelementptr inbounds [4 x i8], [4 x i8]* %clone_rgba, i64 0, i64 0, !dbg !10209
  store i8 %5, i8* %arrayidx2, align 1, !dbg !10210
  %6 = load i8*, i8** %clone_pt, align 8, !dbg !10211
  %arrayidx3 = getelementptr inbounds i8, i8* %6, i64 1, !dbg !10211
  %7 = load i8, i8* %arrayidx3, align 1, !dbg !10211
  %arrayidx4 = getelementptr inbounds [4 x i8], [4 x i8]* %clone_rgba, i64 0, i64 1, !dbg !10212
  store i8 %7, i8* %arrayidx4, align 1, !dbg !10213
  %8 = load i8*, i8** %clone_pt, align 8, !dbg !10214
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 2, !dbg !10214
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !10214
  %arrayidx6 = getelementptr inbounds [4 x i8], [4 x i8]* %clone_rgba, i64 0, i64 2, !dbg !10215
  store i8 %9, i8* %arrayidx6, align 1, !dbg !10216
  %10 = load i8*, i8** %clone_pt, align 8, !dbg !10217
  %arrayidx7 = getelementptr inbounds i8, i8* %10, i64 3, !dbg !10217
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !10217
  %conv = zext i8 %11 to i32, !dbg !10217
  %conv8 = sitofp i32 %conv to float, !dbg !10217
  %12 = load float, float* %mask.addr, align 4, !dbg !10218
  %mul = fmul float %conv8, %12, !dbg !10219
  %conv9 = fptoui float %mul to i8, !dbg !10220
  %arrayidx10 = getelementptr inbounds [4 x i8], [4 x i8]* %clone_rgba, i64 0, i64 3, !dbg !10221
  store i8 %conv9, i8* %arrayidx10, align 1, !dbg !10222
  %13 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10223
  %do_masking = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %13, i32 0, i32 62, !dbg !10225
  %14 = load i8, i8* %do_masking, align 2, !dbg !10225
  %tobool11 = icmp ne i8 %14, 0, !dbg !10223
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !10226

if.then12:                                        ; preds = %if.then
  %15 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10227
  %pixel = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %15, i32 0, i32 9, !dbg !10229
  %ch_pt = bitcast %union.pixelPointer* %pixel to i8**, !dbg !10230
  %16 = load i8*, i8** %ch_pt, align 8, !dbg !10230
  %17 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10231
  %origColor = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %17, i32 0, i32 7, !dbg !10232
  %ch_pt13 = bitcast %union.pixelPointer* %origColor to i8**, !dbg !10233
  %18 = load i8*, i8** %ch_pt13, align 8, !dbg !10233
  %arraydecay14 = getelementptr inbounds [4 x i8], [4 x i8]* %clone_rgba, i64 0, i64 0, !dbg !10234
  %19 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10235
  %blend = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %19, i32 0, i32 9, !dbg !10236
  %20 = load i16, i16* %blend, align 2, !dbg !10236
  %conv15 = sext i16 %20 to i32, !dbg !10235
  call void @IMB_blend_color_byte(i8* %16, i8* %18, i8* %arraydecay14, i32 %conv15), !dbg !10237
  br label %if.end, !dbg !10238

if.else:                                          ; preds = %if.then
  %21 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10239
  %pixel16 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %21, i32 0, i32 9, !dbg !10241
  %ch_pt17 = bitcast %union.pixelPointer* %pixel16 to i8**, !dbg !10242
  %22 = load i8*, i8** %ch_pt17, align 8, !dbg !10242
  %23 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10243
  %pixel18 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %23, i32 0, i32 9, !dbg !10244
  %ch_pt19 = bitcast %union.pixelPointer* %pixel18 to i8**, !dbg !10245
  %24 = load i8*, i8** %ch_pt19, align 8, !dbg !10245
  %arraydecay20 = getelementptr inbounds [4 x i8], [4 x i8]* %clone_rgba, i64 0, i64 0, !dbg !10246
  %25 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10247
  %blend21 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %25, i32 0, i32 9, !dbg !10248
  %26 = load i16, i16* %blend21, align 2, !dbg !10248
  %conv22 = sext i16 %26 to i32, !dbg !10247
  call void @IMB_blend_color_byte(i8* %22, i8* %24, i8* %arraydecay20, i32 %conv22), !dbg !10249
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then12
  br label %if.end23, !dbg !10250

if.end23:                                         ; preds = %if.end, %entry
  ret void, !dbg !10251
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_projectpaint_smear_f(%struct.ProjPaintState* %ps, %struct.ProjPixel* %projPixel, float %mask, %struct.MemArena* %smearArena, %struct.LinkNode** %smearPixels_f, float* %co) #0 !dbg !10252 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %projPixel.addr = alloca %struct.ProjPixel*, align 8
  %mask.addr = alloca float, align 4
  %smearArena.addr = alloca %struct.MemArena*, align 8
  %smearPixels_f.addr = alloca %struct.LinkNode**, align 8
  %co.addr = alloca float*, align 8
  %rgba = alloca [4 x float], align 16
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !10255, metadata !DIExpression()), !dbg !10256
  store %struct.ProjPixel* %projPixel, %struct.ProjPixel** %projPixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPixel** %projPixel.addr, metadata !10257, metadata !DIExpression()), !dbg !10258
  store float %mask, float* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata float* %mask.addr, metadata !10259, metadata !DIExpression()), !dbg !10260
  store %struct.MemArena* %smearArena, %struct.MemArena** %smearArena.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MemArena** %smearArena.addr, metadata !10261, metadata !DIExpression()), !dbg !10262
  store %struct.LinkNode** %smearPixels_f, %struct.LinkNode*** %smearPixels_f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LinkNode*** %smearPixels_f.addr, metadata !10263, metadata !DIExpression()), !dbg !10264
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !10265, metadata !DIExpression()), !dbg !10266
  call void @llvm.dbg.declare(metadata [4 x float]* %rgba, metadata !10267, metadata !DIExpression()), !dbg !10268
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10269
  %1 = load float*, float** %co.addr, align 8, !dbg !10271
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10272
  %call = call zeroext i8 @project_paint_PickColor(%struct.ProjPaintState* %0, float* %1, float* %arraydecay, i8* null, i8 zeroext 1), !dbg !10273
  %conv = zext i8 %call to i32, !dbg !10273
  %cmp = icmp eq i32 %conv, 0, !dbg !10274
  br i1 %cmp, label %if.then, label %if.end, !dbg !10275

if.then:                                          ; preds = %entry
  br label %return, !dbg !10276

if.end:                                           ; preds = %entry
  %2 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10277
  %3 = bitcast %struct.ProjPixel* %2 to %struct.ProjPixelClone*, !dbg !10278
  %clonepx = getelementptr inbounds %struct.ProjPixelClone, %struct.ProjPixelClone* %3, i32 0, i32 1, !dbg !10278
  %f = bitcast %union.pixelStore* %clonepx to [4 x float]*, !dbg !10279
  %arraydecay2 = getelementptr inbounds [4 x float], [4 x float]* %f, i64 0, i64 0, !dbg !10280
  %4 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10281
  %pixel = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %4, i32 0, i32 9, !dbg !10282
  %f_pt = bitcast %union.pixelPointer* %pixel to float**, !dbg !10283
  %5 = load float*, float** %f_pt, align 8, !dbg !10283
  %arraydecay3 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10284
  %6 = load float, float* %mask.addr, align 4, !dbg !10285
  call void @blend_color_interpolate_float(float* %arraydecay2, float* %5, float* %arraydecay3, float %6), !dbg !10286
  %7 = load %struct.LinkNode**, %struct.LinkNode*** %smearPixels_f.addr, align 8, !dbg !10287
  %8 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10288
  %9 = bitcast %struct.ProjPixel* %8 to i8*, !dbg !10289
  %10 = load %struct.MemArena*, %struct.MemArena** %smearArena.addr, align 8, !dbg !10290
  call void @BLI_linklist_prepend_arena(%struct.LinkNode** %7, i8* %9, %struct.MemArena* %10), !dbg !10291
  br label %return, !dbg !10292

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10292
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_projectpaint_smear(%struct.ProjPaintState* %ps, %struct.ProjPixel* %projPixel, float %mask, %struct.MemArena* %smearArena, %struct.LinkNode** %smearPixels, float* %co) #0 !dbg !10293 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %projPixel.addr = alloca %struct.ProjPixel*, align 8
  %mask.addr = alloca float, align 4
  %smearArena.addr = alloca %struct.MemArena*, align 8
  %smearPixels.addr = alloca %struct.LinkNode**, align 8
  %co.addr = alloca float*, align 8
  %rgba_ub = alloca [4 x i8], align 1
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !10294, metadata !DIExpression()), !dbg !10295
  store %struct.ProjPixel* %projPixel, %struct.ProjPixel** %projPixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPixel** %projPixel.addr, metadata !10296, metadata !DIExpression()), !dbg !10297
  store float %mask, float* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata float* %mask.addr, metadata !10298, metadata !DIExpression()), !dbg !10299
  store %struct.MemArena* %smearArena, %struct.MemArena** %smearArena.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MemArena** %smearArena.addr, metadata !10300, metadata !DIExpression()), !dbg !10301
  store %struct.LinkNode** %smearPixels, %struct.LinkNode*** %smearPixels.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LinkNode*** %smearPixels.addr, metadata !10302, metadata !DIExpression()), !dbg !10303
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !10304, metadata !DIExpression()), !dbg !10305
  call void @llvm.dbg.declare(metadata [4 x i8]* %rgba_ub, metadata !10306, metadata !DIExpression()), !dbg !10307
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10308
  %1 = load float*, float** %co.addr, align 8, !dbg !10310
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_ub, i64 0, i64 0, !dbg !10311
  %call = call zeroext i8 @project_paint_PickColor(%struct.ProjPaintState* %0, float* %1, float* null, i8* %arraydecay, i8 zeroext 1), !dbg !10312
  %conv = zext i8 %call to i32, !dbg !10312
  %cmp = icmp eq i32 %conv, 0, !dbg !10313
  br i1 %cmp, label %if.then, label %if.end, !dbg !10314

if.then:                                          ; preds = %entry
  br label %return, !dbg !10315

if.end:                                           ; preds = %entry
  %2 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10316
  %3 = bitcast %struct.ProjPixel* %2 to %struct.ProjPixelClone*, !dbg !10317
  %clonepx = getelementptr inbounds %struct.ProjPixelClone, %struct.ProjPixelClone* %3, i32 0, i32 1, !dbg !10317
  %ch = bitcast %union.pixelStore* %clonepx to [4 x i8]*, !dbg !10318
  %arraydecay2 = getelementptr inbounds [4 x i8], [4 x i8]* %ch, i64 0, i64 0, !dbg !10319
  %4 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10320
  %pixel = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %4, i32 0, i32 9, !dbg !10321
  %ch_pt = bitcast %union.pixelPointer* %pixel to i8**, !dbg !10322
  %5 = load i8*, i8** %ch_pt, align 8, !dbg !10322
  %arraydecay3 = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_ub, i64 0, i64 0, !dbg !10323
  %6 = load float, float* %mask.addr, align 4, !dbg !10324
  call void @blend_color_interpolate_byte(i8* %arraydecay2, i8* %5, i8* %arraydecay3, float %6), !dbg !10325
  %7 = load %struct.LinkNode**, %struct.LinkNode*** %smearPixels.addr, align 8, !dbg !10326
  %8 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10327
  %9 = bitcast %struct.ProjPixel* %8 to i8*, !dbg !10328
  %10 = load %struct.MemArena*, %struct.MemArena** %smearArena.addr, align 8, !dbg !10329
  call void @BLI_linklist_prepend_arena(%struct.LinkNode** %7, i8* %9, %struct.MemArena* %10), !dbg !10330
  br label %return, !dbg !10331

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10331
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_projectpaint_soften_f(%struct.ProjPaintState* %ps, %struct.ProjPixel* %projPixel, float %mask, %struct.MemArena* %softenArena, %struct.LinkNode** %softenPixels) #0 !dbg !10332 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %projPixel.addr = alloca %struct.ProjPixel*, align 8
  %mask.addr = alloca float, align 4
  %softenArena.addr = alloca %struct.MemArena*, align 8
  %softenPixels.addr = alloca %struct.LinkNode**, align 8
  %accum_tot = alloca float, align 4
  %xk = alloca i32, align 4
  %yk = alloca i32, align 4
  %kernel = alloca %struct.BlurKernel*, align 8
  %rgba = alloca float*, align 8
  %rgba_tmp = alloca [4 x float], align 16
  %co_ofs = alloca [2 x float], align 4
  %weight = alloca float, align 4
  %alpha = alloca float, align 4
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !10335, metadata !DIExpression()), !dbg !10336
  store %struct.ProjPixel* %projPixel, %struct.ProjPixel** %projPixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPixel** %projPixel.addr, metadata !10337, metadata !DIExpression()), !dbg !10338
  store float %mask, float* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata float* %mask.addr, metadata !10339, metadata !DIExpression()), !dbg !10340
  store %struct.MemArena* %softenArena, %struct.MemArena** %softenArena.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MemArena** %softenArena.addr, metadata !10341, metadata !DIExpression()), !dbg !10342
  store %struct.LinkNode** %softenPixels, %struct.LinkNode*** %softenPixels.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LinkNode*** %softenPixels.addr, metadata !10343, metadata !DIExpression()), !dbg !10344
  call void @llvm.dbg.declare(metadata float* %accum_tot, metadata !10345, metadata !DIExpression()), !dbg !10346
  store float 0.000000e+00, float* %accum_tot, align 4, !dbg !10346
  call void @llvm.dbg.declare(metadata i32* %xk, metadata !10347, metadata !DIExpression()), !dbg !10348
  call void @llvm.dbg.declare(metadata i32* %yk, metadata !10349, metadata !DIExpression()), !dbg !10350
  call void @llvm.dbg.declare(metadata %struct.BlurKernel** %kernel, metadata !10351, metadata !DIExpression()), !dbg !10352
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10353
  %blurkernel = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 80, !dbg !10354
  %1 = load %struct.BlurKernel*, %struct.BlurKernel** %blurkernel, align 8, !dbg !10354
  store %struct.BlurKernel* %1, %struct.BlurKernel** %kernel, align 8, !dbg !10352
  call void @llvm.dbg.declare(metadata float** %rgba, metadata !10355, metadata !DIExpression()), !dbg !10356
  %2 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10357
  %newColor = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %2, i32 0, i32 8, !dbg !10358
  %f = bitcast %union.pixelStore* %newColor to [4 x float]*, !dbg !10359
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %f, i64 0, i64 0, !dbg !10357
  store float* %arraydecay, float** %rgba, align 8, !dbg !10356
  %3 = load float*, float** %rgba, align 8, !dbg !10360
  call void @zero_v4(float* %3), !dbg !10361
  store i32 0, i32* %yk, align 4, !dbg !10362
  br label %for.cond, !dbg !10364

for.cond:                                         ; preds = %for.inc17, %entry
  %4 = load i32, i32* %yk, align 4, !dbg !10365
  %5 = load %struct.BlurKernel*, %struct.BlurKernel** %kernel, align 8, !dbg !10367
  %side = getelementptr inbounds %struct.BlurKernel, %struct.BlurKernel* %5, i32 0, i32 1, !dbg !10368
  %6 = load i32, i32* %side, align 8, !dbg !10368
  %cmp = icmp slt i32 %4, %6, !dbg !10369
  br i1 %cmp, label %for.body, label %for.end19, !dbg !10370

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %xk, align 4, !dbg !10371
  br label %for.cond1, !dbg !10374

for.cond1:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %xk, align 4, !dbg !10375
  %8 = load %struct.BlurKernel*, %struct.BlurKernel** %kernel, align 8, !dbg !10377
  %side2 = getelementptr inbounds %struct.BlurKernel, %struct.BlurKernel* %8, i32 0, i32 1, !dbg !10378
  %9 = load i32, i32* %side2, align 8, !dbg !10378
  %cmp3 = icmp slt i32 %7, %9, !dbg !10379
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !10380

for.body4:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata [4 x float]* %rgba_tmp, metadata !10381, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.declare(metadata [2 x float]* %co_ofs, metadata !10384, metadata !DIExpression()), !dbg !10385
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %co_ofs, i64 0, i64 0, !dbg !10386
  %10 = load i32, i32* %xk, align 4, !dbg !10387
  %conv = sitofp i32 %10 to float, !dbg !10387
  %mul = fmul float 2.000000e+00, %conv, !dbg !10388
  %sub = fsub float %mul, 1.000000e+00, !dbg !10389
  store float %sub, float* %arrayinit.begin, align 4, !dbg !10386
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !10386
  %11 = load i32, i32* %yk, align 4, !dbg !10390
  %conv5 = sitofp i32 %11 to float, !dbg !10390
  %mul6 = fmul float 2.000000e+00, %conv5, !dbg !10391
  %sub7 = fsub float %mul6, 1.000000e+00, !dbg !10392
  store float %sub7, float* %arrayinit.element, align 4, !dbg !10386
  %arraydecay8 = getelementptr inbounds [2 x float], [2 x float]* %co_ofs, i64 0, i64 0, !dbg !10393
  %12 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10394
  %projCoSS = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %12, i32 0, i32 0, !dbg !10395
  %arraydecay9 = getelementptr inbounds [2 x float], [2 x float]* %projCoSS, i64 0, i64 0, !dbg !10394
  call void @add_v2_v2(float* %arraydecay8, float* %arraydecay9), !dbg !10396
  %13 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10397
  %arraydecay10 = getelementptr inbounds [2 x float], [2 x float]* %co_ofs, i64 0, i64 0, !dbg !10399
  %arraydecay11 = getelementptr inbounds [4 x float], [4 x float]* %rgba_tmp, i64 0, i64 0, !dbg !10400
  %call = call zeroext i8 @project_paint_PickColor(%struct.ProjPaintState* %13, float* %arraydecay10, float* %arraydecay11, i8* null, i8 zeroext 1), !dbg !10401
  %tobool = icmp ne i8 %call, 0, !dbg !10401
  br i1 %tobool, label %if.then, label %if.end, !dbg !10402

if.then:                                          ; preds = %for.body4
  call void @llvm.dbg.declare(metadata float* %weight, metadata !10403, metadata !DIExpression()), !dbg !10405
  %14 = load %struct.BlurKernel*, %struct.BlurKernel** %kernel, align 8, !dbg !10406
  %wdata = getelementptr inbounds %struct.BlurKernel, %struct.BlurKernel* %14, i32 0, i32 0, !dbg !10407
  %15 = load float*, float** %wdata, align 8, !dbg !10407
  %16 = load i32, i32* %xk, align 4, !dbg !10408
  %17 = load i32, i32* %yk, align 4, !dbg !10409
  %18 = load %struct.BlurKernel*, %struct.BlurKernel** %kernel, align 8, !dbg !10410
  %side12 = getelementptr inbounds %struct.BlurKernel, %struct.BlurKernel* %18, i32 0, i32 1, !dbg !10411
  %19 = load i32, i32* %side12, align 8, !dbg !10411
  %mul13 = mul nsw i32 %17, %19, !dbg !10412
  %add = add nsw i32 %16, %mul13, !dbg !10413
  %idxprom = sext i32 %add to i64, !dbg !10406
  %arrayidx = getelementptr inbounds float, float* %15, i64 %idxprom, !dbg !10406
  %20 = load float, float* %arrayidx, align 4, !dbg !10406
  store float %20, float* %weight, align 4, !dbg !10405
  %arraydecay14 = getelementptr inbounds [4 x float], [4 x float]* %rgba_tmp, i64 0, i64 0, !dbg !10414
  %21 = load float, float* %weight, align 4, !dbg !10415
  call void @mul_v4_fl(float* %arraydecay14, float %21), !dbg !10416
  %22 = load float*, float** %rgba, align 8, !dbg !10417
  %arraydecay15 = getelementptr inbounds [4 x float], [4 x float]* %rgba_tmp, i64 0, i64 0, !dbg !10418
  call void @add_v4_v4(float* %22, float* %arraydecay15), !dbg !10419
  %23 = load float, float* %weight, align 4, !dbg !10420
  %24 = load float, float* %accum_tot, align 4, !dbg !10421
  %add16 = fadd float %24, %23, !dbg !10421
  store float %add16, float* %accum_tot, align 4, !dbg !10421
  br label %if.end, !dbg !10422

if.end:                                           ; preds = %if.then, %for.body4
  br label %for.inc, !dbg !10423

for.inc:                                          ; preds = %if.end
  %25 = load i32, i32* %xk, align 4, !dbg !10424
  %inc = add nsw i32 %25, 1, !dbg !10424
  store i32 %inc, i32* %xk, align 4, !dbg !10424
  br label %for.cond1, !dbg !10425, !llvm.loop !10426

for.end:                                          ; preds = %for.cond1
  br label %for.inc17, !dbg !10428

for.inc17:                                        ; preds = %for.end
  %26 = load i32, i32* %yk, align 4, !dbg !10429
  %inc18 = add nsw i32 %26, 1, !dbg !10429
  store i32 %inc18, i32* %yk, align 4, !dbg !10429
  br label %for.cond, !dbg !10430, !llvm.loop !10431

for.end19:                                        ; preds = %for.cond
  %27 = load float, float* %accum_tot, align 4, !dbg !10433
  %cmp20 = fcmp une float %27, 0.000000e+00, !dbg !10433
  br i1 %cmp20, label %if.then22, label %if.end50, !dbg !10435

if.then22:                                        ; preds = %for.end19
  %28 = load float*, float** %rgba, align 8, !dbg !10436
  %29 = load float, float* %accum_tot, align 4, !dbg !10438
  %div = fdiv float 1.000000e+00, %29, !dbg !10439
  call void @mul_v4_fl(float* %28, float %div), !dbg !10440
  %30 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10441
  %mode = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %30, i32 0, i32 10, !dbg !10443
  %31 = load i16, i16* %mode, align 4, !dbg !10443
  %conv23 = sext i16 %31 to i32, !dbg !10441
  %cmp24 = icmp eq i32 %conv23, 1, !dbg !10444
  br i1 %cmp24, label %if.then26, label %if.else46, !dbg !10445

if.then26:                                        ; preds = %if.then22
  %32 = load float*, float** %rgba, align 8, !dbg !10446
  %33 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10448
  %pixel = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %33, i32 0, i32 9, !dbg !10449
  %f_pt = bitcast %union.pixelPointer* %pixel to float**, !dbg !10450
  %34 = load float*, float** %f_pt, align 8, !dbg !10450
  %35 = load float*, float** %rgba, align 8, !dbg !10451
  call void @sub_v3_v3v3(float* %32, float* %34, float* %35), !dbg !10452
  %36 = load float*, float** %rgba, align 8, !dbg !10453
  %call27 = call float @rgb_to_grayscale(float* %36), !dbg !10454
  %37 = load float*, float** %rgba, align 8, !dbg !10455
  %arrayidx28 = getelementptr inbounds float, float* %37, i64 2, !dbg !10455
  store float %call27, float* %arrayidx28, align 4, !dbg !10456
  %38 = load float*, float** %rgba, align 8, !dbg !10457
  %arrayidx29 = getelementptr inbounds float, float* %38, i64 1, !dbg !10457
  store float %call27, float* %arrayidx29, align 4, !dbg !10458
  %39 = load float*, float** %rgba, align 8, !dbg !10459
  %arrayidx30 = getelementptr inbounds float, float* %39, i64 0, !dbg !10459
  store float %call27, float* %arrayidx30, align 4, !dbg !10460
  %40 = load float*, float** %rgba, align 8, !dbg !10461
  %arrayidx31 = getelementptr inbounds float, float* %40, i64 0, !dbg !10461
  %41 = load float, float* %arrayidx31, align 4, !dbg !10461
  %42 = call float @llvm.fabs.f32(float %41), !dbg !10463
  %43 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10464
  %brush = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %43, i32 0, i32 7, !dbg !10465
  %44 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !10465
  %sharp_threshold = getelementptr inbounds %struct.Brush, %struct.Brush* %44, i32 0, i32 47, !dbg !10466
  %45 = load float, float* %sharp_threshold, align 8, !dbg !10466
  %cmp32 = fcmp ogt float %42, %45, !dbg !10467
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !10468

if.then34:                                        ; preds = %if.then26
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !10469, metadata !DIExpression()), !dbg !10471
  %46 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10472
  %pixel35 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %46, i32 0, i32 9, !dbg !10473
  %f_pt36 = bitcast %union.pixelPointer* %pixel35 to float**, !dbg !10474
  %47 = load float*, float** %f_pt36, align 8, !dbg !10474
  %arrayidx37 = getelementptr inbounds float, float* %47, i64 3, !dbg !10472
  %48 = load float, float* %arrayidx37, align 4, !dbg !10472
  store float %48, float* %alpha, align 4, !dbg !10471
  %49 = load float, float* %mask.addr, align 4, !dbg !10475
  %50 = load float*, float** %rgba, align 8, !dbg !10476
  %arrayidx38 = getelementptr inbounds float, float* %50, i64 3, !dbg !10476
  store float %49, float* %arrayidx38, align 4, !dbg !10477
  %51 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10478
  %pixel39 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %51, i32 0, i32 9, !dbg !10479
  %f_pt40 = bitcast %union.pixelPointer* %pixel39 to float**, !dbg !10480
  %52 = load float*, float** %f_pt40, align 8, !dbg !10480
  %arrayidx41 = getelementptr inbounds float, float* %52, i64 3, !dbg !10478
  store float %49, float* %arrayidx41, align 4, !dbg !10481
  %53 = load float*, float** %rgba, align 8, !dbg !10482
  %54 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10483
  %pixel42 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %54, i32 0, i32 9, !dbg !10484
  %f_pt43 = bitcast %union.pixelPointer* %pixel42 to float**, !dbg !10485
  %55 = load float*, float** %f_pt43, align 8, !dbg !10485
  %56 = load float*, float** %rgba, align 8, !dbg !10486
  call void @blend_color_add_float(float* %53, float* %55, float* %56), !dbg !10487
  %57 = load float, float* %alpha, align 4, !dbg !10488
  %58 = load float*, float** %rgba, align 8, !dbg !10489
  %arrayidx44 = getelementptr inbounds float, float* %58, i64 3, !dbg !10489
  store float %57, float* %arrayidx44, align 4, !dbg !10490
  br label %if.end45, !dbg !10491

if.else:                                          ; preds = %if.then26
  br label %if.end50, !dbg !10492

if.end45:                                         ; preds = %if.then34
  br label %if.end49, !dbg !10493

if.else46:                                        ; preds = %if.then22
  %59 = load float*, float** %rgba, align 8, !dbg !10494
  %60 = load float*, float** %rgba, align 8, !dbg !10496
  %61 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10497
  %pixel47 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %61, i32 0, i32 9, !dbg !10498
  %f_pt48 = bitcast %union.pixelPointer* %pixel47 to float**, !dbg !10499
  %62 = load float*, float** %f_pt48, align 8, !dbg !10499
  %63 = load float, float* %mask.addr, align 4, !dbg !10500
  call void @blend_color_interpolate_float(float* %59, float* %60, float* %62, float %63), !dbg !10501
  br label %if.end49

if.end49:                                         ; preds = %if.else46, %if.end45
  %64 = load %struct.LinkNode**, %struct.LinkNode*** %softenPixels.addr, align 8, !dbg !10502
  %65 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10503
  %66 = bitcast %struct.ProjPixel* %65 to i8*, !dbg !10504
  %67 = load %struct.MemArena*, %struct.MemArena** %softenArena.addr, align 8, !dbg !10505
  call void @BLI_linklist_prepend_arena(%struct.LinkNode** %64, i8* %66, %struct.MemArena* %67), !dbg !10506
  br label %if.end50, !dbg !10507

if.end50:                                         ; preds = %if.else, %if.end49, %for.end19
  ret void, !dbg !10508
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_projectpaint_soften(%struct.ProjPaintState* %ps, %struct.ProjPixel* %projPixel, float %mask, %struct.MemArena* %softenArena, %struct.LinkNode** %softenPixels) #0 !dbg !10509 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %projPixel.addr = alloca %struct.ProjPixel*, align 8
  %mask.addr = alloca float, align 4
  %softenArena.addr = alloca %struct.MemArena*, align 8
  %softenPixels.addr = alloca %struct.LinkNode**, align 8
  %accum_tot = alloca float, align 4
  %xk = alloca i32, align 4
  %yk = alloca i32, align 4
  %kernel = alloca %struct.BlurKernel*, align 8
  %rgba = alloca [4 x float], align 16
  %rgba_tmp = alloca [4 x float], align 16
  %co_ofs = alloca [2 x float], align 4
  %weight = alloca float, align 4
  %rgba_ub = alloca i8*, align 8
  %rgba_pixel = alloca [4 x float], align 16
  %alpha = alloca float, align 4
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !10510, metadata !DIExpression()), !dbg !10511
  store %struct.ProjPixel* %projPixel, %struct.ProjPixel** %projPixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPixel** %projPixel.addr, metadata !10512, metadata !DIExpression()), !dbg !10513
  store float %mask, float* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata float* %mask.addr, metadata !10514, metadata !DIExpression()), !dbg !10515
  store %struct.MemArena* %softenArena, %struct.MemArena** %softenArena.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MemArena** %softenArena.addr, metadata !10516, metadata !DIExpression()), !dbg !10517
  store %struct.LinkNode** %softenPixels, %struct.LinkNode*** %softenPixels.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LinkNode*** %softenPixels.addr, metadata !10518, metadata !DIExpression()), !dbg !10519
  call void @llvm.dbg.declare(metadata float* %accum_tot, metadata !10520, metadata !DIExpression()), !dbg !10521
  store float 0.000000e+00, float* %accum_tot, align 4, !dbg !10521
  call void @llvm.dbg.declare(metadata i32* %xk, metadata !10522, metadata !DIExpression()), !dbg !10523
  call void @llvm.dbg.declare(metadata i32* %yk, metadata !10524, metadata !DIExpression()), !dbg !10525
  call void @llvm.dbg.declare(metadata %struct.BlurKernel** %kernel, metadata !10526, metadata !DIExpression()), !dbg !10527
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10528
  %blurkernel = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 80, !dbg !10529
  %1 = load %struct.BlurKernel*, %struct.BlurKernel** %blurkernel, align 8, !dbg !10529
  store %struct.BlurKernel* %1, %struct.BlurKernel** %kernel, align 8, !dbg !10527
  call void @llvm.dbg.declare(metadata [4 x float]* %rgba, metadata !10530, metadata !DIExpression()), !dbg !10531
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10532
  call void @zero_v4(float* %arraydecay), !dbg !10533
  store i32 0, i32* %yk, align 4, !dbg !10534
  br label %for.cond, !dbg !10536

for.cond:                                         ; preds = %for.inc18, %entry
  %2 = load i32, i32* %yk, align 4, !dbg !10537
  %3 = load %struct.BlurKernel*, %struct.BlurKernel** %kernel, align 8, !dbg !10539
  %side = getelementptr inbounds %struct.BlurKernel, %struct.BlurKernel* %3, i32 0, i32 1, !dbg !10540
  %4 = load i32, i32* %side, align 8, !dbg !10540
  %cmp = icmp slt i32 %2, %4, !dbg !10541
  br i1 %cmp, label %for.body, label %for.end20, !dbg !10542

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %xk, align 4, !dbg !10543
  br label %for.cond1, !dbg !10546

for.cond1:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %xk, align 4, !dbg !10547
  %6 = load %struct.BlurKernel*, %struct.BlurKernel** %kernel, align 8, !dbg !10549
  %side2 = getelementptr inbounds %struct.BlurKernel, %struct.BlurKernel* %6, i32 0, i32 1, !dbg !10550
  %7 = load i32, i32* %side2, align 8, !dbg !10550
  %cmp3 = icmp slt i32 %5, %7, !dbg !10551
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !10552

for.body4:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata [4 x float]* %rgba_tmp, metadata !10553, metadata !DIExpression()), !dbg !10555
  call void @llvm.dbg.declare(metadata [2 x float]* %co_ofs, metadata !10556, metadata !DIExpression()), !dbg !10557
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %co_ofs, i64 0, i64 0, !dbg !10558
  %8 = load i32, i32* %xk, align 4, !dbg !10559
  %conv = sitofp i32 %8 to float, !dbg !10559
  %mul = fmul float 2.000000e+00, %conv, !dbg !10560
  %sub = fsub float %mul, 1.000000e+00, !dbg !10561
  store float %sub, float* %arrayinit.begin, align 4, !dbg !10558
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !10558
  %9 = load i32, i32* %yk, align 4, !dbg !10562
  %conv5 = sitofp i32 %9 to float, !dbg !10562
  %mul6 = fmul float 2.000000e+00, %conv5, !dbg !10563
  %sub7 = fsub float %mul6, 1.000000e+00, !dbg !10564
  store float %sub7, float* %arrayinit.element, align 4, !dbg !10558
  %arraydecay8 = getelementptr inbounds [2 x float], [2 x float]* %co_ofs, i64 0, i64 0, !dbg !10565
  %10 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10566
  %projCoSS = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %10, i32 0, i32 0, !dbg !10567
  %arraydecay9 = getelementptr inbounds [2 x float], [2 x float]* %projCoSS, i64 0, i64 0, !dbg !10566
  call void @add_v2_v2(float* %arraydecay8, float* %arraydecay9), !dbg !10568
  %11 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10569
  %arraydecay10 = getelementptr inbounds [2 x float], [2 x float]* %co_ofs, i64 0, i64 0, !dbg !10571
  %arraydecay11 = getelementptr inbounds [4 x float], [4 x float]* %rgba_tmp, i64 0, i64 0, !dbg !10572
  %call = call zeroext i8 @project_paint_PickColor(%struct.ProjPaintState* %11, float* %arraydecay10, float* %arraydecay11, i8* null, i8 zeroext 1), !dbg !10573
  %tobool = icmp ne i8 %call, 0, !dbg !10573
  br i1 %tobool, label %if.then, label %if.end, !dbg !10574

if.then:                                          ; preds = %for.body4
  call void @llvm.dbg.declare(metadata float* %weight, metadata !10575, metadata !DIExpression()), !dbg !10577
  %12 = load %struct.BlurKernel*, %struct.BlurKernel** %kernel, align 8, !dbg !10578
  %wdata = getelementptr inbounds %struct.BlurKernel, %struct.BlurKernel* %12, i32 0, i32 0, !dbg !10579
  %13 = load float*, float** %wdata, align 8, !dbg !10579
  %14 = load i32, i32* %xk, align 4, !dbg !10580
  %15 = load i32, i32* %yk, align 4, !dbg !10581
  %16 = load %struct.BlurKernel*, %struct.BlurKernel** %kernel, align 8, !dbg !10582
  %side12 = getelementptr inbounds %struct.BlurKernel, %struct.BlurKernel* %16, i32 0, i32 1, !dbg !10583
  %17 = load i32, i32* %side12, align 8, !dbg !10583
  %mul13 = mul nsw i32 %15, %17, !dbg !10584
  %add = add nsw i32 %14, %mul13, !dbg !10585
  %idxprom = sext i32 %add to i64, !dbg !10578
  %arrayidx = getelementptr inbounds float, float* %13, i64 %idxprom, !dbg !10578
  %18 = load float, float* %arrayidx, align 4, !dbg !10578
  store float %18, float* %weight, align 4, !dbg !10577
  %arraydecay14 = getelementptr inbounds [4 x float], [4 x float]* %rgba_tmp, i64 0, i64 0, !dbg !10586
  %19 = load float, float* %weight, align 4, !dbg !10587
  call void @mul_v4_fl(float* %arraydecay14, float %19), !dbg !10588
  %arraydecay15 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10589
  %arraydecay16 = getelementptr inbounds [4 x float], [4 x float]* %rgba_tmp, i64 0, i64 0, !dbg !10590
  call void @add_v4_v4(float* %arraydecay15, float* %arraydecay16), !dbg !10591
  %20 = load float, float* %weight, align 4, !dbg !10592
  %21 = load float, float* %accum_tot, align 4, !dbg !10593
  %add17 = fadd float %21, %20, !dbg !10593
  store float %add17, float* %accum_tot, align 4, !dbg !10593
  br label %if.end, !dbg !10594

if.end:                                           ; preds = %if.then, %for.body4
  br label %for.inc, !dbg !10595

for.inc:                                          ; preds = %if.end
  %22 = load i32, i32* %xk, align 4, !dbg !10596
  %inc = add nsw i32 %22, 1, !dbg !10596
  store i32 %inc, i32* %xk, align 4, !dbg !10596
  br label %for.cond1, !dbg !10597, !llvm.loop !10598

for.end:                                          ; preds = %for.cond1
  br label %for.inc18, !dbg !10600

for.inc18:                                        ; preds = %for.end
  %23 = load i32, i32* %yk, align 4, !dbg !10601
  %inc19 = add nsw i32 %23, 1, !dbg !10601
  store i32 %inc19, i32* %yk, align 4, !dbg !10601
  br label %for.cond, !dbg !10602, !llvm.loop !10603

for.end20:                                        ; preds = %for.cond
  %24 = load float, float* %accum_tot, align 4, !dbg !10605
  %cmp21 = fcmp une float %24, 0.000000e+00, !dbg !10605
  br i1 %cmp21, label %if.then23, label %if.end57, !dbg !10607

if.then23:                                        ; preds = %for.end20
  call void @llvm.dbg.declare(metadata i8** %rgba_ub, metadata !10608, metadata !DIExpression()), !dbg !10610
  %25 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10611
  %newColor = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %25, i32 0, i32 8, !dbg !10612
  %ch = bitcast %union.pixelStore* %newColor to [4 x i8]*, !dbg !10613
  %arraydecay24 = getelementptr inbounds [4 x i8], [4 x i8]* %ch, i64 0, i64 0, !dbg !10611
  store i8* %arraydecay24, i8** %rgba_ub, align 8, !dbg !10610
  %arraydecay25 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10614
  %26 = load float, float* %accum_tot, align 4, !dbg !10615
  %div = fdiv float 1.000000e+00, %26, !dbg !10616
  call void @mul_v4_fl(float* %arraydecay25, float %div), !dbg !10617
  %27 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10618
  %mode = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %27, i32 0, i32 10, !dbg !10620
  %28 = load i16, i16* %mode, align 4, !dbg !10620
  %conv26 = sext i16 %28 to i32, !dbg !10618
  %cmp27 = icmp eq i32 %conv26, 1, !dbg !10621
  br i1 %cmp27, label %if.then29, label %if.else52, !dbg !10622

if.then29:                                        ; preds = %if.then23
  call void @llvm.dbg.declare(metadata [4 x float]* %rgba_pixel, metadata !10623, metadata !DIExpression()), !dbg !10625
  %arraydecay30 = getelementptr inbounds [4 x float], [4 x float]* %rgba_pixel, i64 0, i64 0, !dbg !10626
  %29 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10627
  %pixel = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %29, i32 0, i32 9, !dbg !10628
  %ch_pt = bitcast %union.pixelPointer* %pixel to i8**, !dbg !10629
  %30 = load i8*, i8** %ch_pt, align 8, !dbg !10629
  call void @straight_uchar_to_premul_float(float* %arraydecay30, i8* %30), !dbg !10630
  %arraydecay31 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10631
  %arraydecay32 = getelementptr inbounds [4 x float], [4 x float]* %rgba_pixel, i64 0, i64 0, !dbg !10632
  %arraydecay33 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10633
  call void @sub_v3_v3v3(float* %arraydecay31, float* %arraydecay32, float* %arraydecay33), !dbg !10634
  %arraydecay34 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10635
  %call35 = call float @rgb_to_grayscale(float* %arraydecay34), !dbg !10636
  %arrayidx36 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 2, !dbg !10637
  store float %call35, float* %arrayidx36, align 8, !dbg !10638
  %arrayidx37 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 1, !dbg !10639
  store float %call35, float* %arrayidx37, align 4, !dbg !10640
  %arrayidx38 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10641
  store float %call35, float* %arrayidx38, align 16, !dbg !10642
  %arrayidx39 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10643
  %31 = load float, float* %arrayidx39, align 16, !dbg !10643
  %32 = call float @llvm.fabs.f32(float %31), !dbg !10645
  %33 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10646
  %brush = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %33, i32 0, i32 7, !dbg !10647
  %34 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !10647
  %sharp_threshold = getelementptr inbounds %struct.Brush, %struct.Brush* %34, i32 0, i32 47, !dbg !10648
  %35 = load float, float* %sharp_threshold, align 8, !dbg !10648
  %cmp40 = fcmp ogt float %32, %35, !dbg !10649
  br i1 %cmp40, label %if.then42, label %if.else, !dbg !10650

if.then42:                                        ; preds = %if.then29
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !10651, metadata !DIExpression()), !dbg !10653
  %arrayidx43 = getelementptr inbounds [4 x float], [4 x float]* %rgba_pixel, i64 0, i64 3, !dbg !10654
  %36 = load float, float* %arrayidx43, align 4, !dbg !10654
  store float %36, float* %alpha, align 4, !dbg !10653
  %37 = load float, float* %mask.addr, align 4, !dbg !10655
  %arrayidx44 = getelementptr inbounds [4 x float], [4 x float]* %rgba_pixel, i64 0, i64 3, !dbg !10656
  store float %37, float* %arrayidx44, align 4, !dbg !10657
  %arrayidx45 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 3, !dbg !10658
  store float %37, float* %arrayidx45, align 4, !dbg !10659
  %arraydecay46 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10660
  %arraydecay47 = getelementptr inbounds [4 x float], [4 x float]* %rgba_pixel, i64 0, i64 0, !dbg !10661
  %arraydecay48 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10662
  call void @blend_color_add_float(float* %arraydecay46, float* %arraydecay47, float* %arraydecay48), !dbg !10663
  %38 = load float, float* %alpha, align 4, !dbg !10664
  %arrayidx49 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 3, !dbg !10665
  store float %38, float* %arrayidx49, align 4, !dbg !10666
  %39 = load i8*, i8** %rgba_ub, align 8, !dbg !10667
  %arraydecay50 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10668
  call void @premul_float_to_straight_uchar(i8* %39, float* %arraydecay50), !dbg !10669
  br label %if.end51, !dbg !10670

if.else:                                          ; preds = %if.then29
  br label %if.end57, !dbg !10671

if.end51:                                         ; preds = %if.then42
  br label %if.end56, !dbg !10672

if.else52:                                        ; preds = %if.then23
  %40 = load i8*, i8** %rgba_ub, align 8, !dbg !10673
  %arraydecay53 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10675
  call void @premul_float_to_straight_uchar(i8* %40, float* %arraydecay53), !dbg !10676
  %41 = load i8*, i8** %rgba_ub, align 8, !dbg !10677
  %42 = load i8*, i8** %rgba_ub, align 8, !dbg !10678
  %43 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10679
  %pixel54 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %43, i32 0, i32 9, !dbg !10680
  %ch_pt55 = bitcast %union.pixelPointer* %pixel54 to i8**, !dbg !10681
  %44 = load i8*, i8** %ch_pt55, align 8, !dbg !10681
  %45 = load float, float* %mask.addr, align 4, !dbg !10682
  call void @blend_color_interpolate_byte(i8* %41, i8* %42, i8* %44, float %45), !dbg !10683
  br label %if.end56

if.end56:                                         ; preds = %if.else52, %if.end51
  %46 = load %struct.LinkNode**, %struct.LinkNode*** %softenPixels.addr, align 8, !dbg !10684
  %47 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10685
  %48 = bitcast %struct.ProjPixel* %47 to i8*, !dbg !10686
  %49 = load %struct.MemArena*, %struct.MemArena** %softenArena.addr, align 8, !dbg !10687
  call void @BLI_linklist_prepend_arena(%struct.LinkNode** %46, i8* %48, %struct.MemArena* %49), !dbg !10688
  br label %if.end57, !dbg !10689

if.end57:                                         ; preds = %if.else, %if.end56, %for.end20
  ret void, !dbg !10690
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_projectpaint_mask_f(%struct.ProjPaintState* %ps, %struct.ProjPixel* %projPixel, float %mask) #0 !dbg !10691 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %projPixel.addr = alloca %struct.ProjPixel*, align 8
  %mask.addr = alloca float, align 4
  %rgba = alloca [4 x float], align 16
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !10692, metadata !DIExpression()), !dbg !10693
  store %struct.ProjPixel* %projPixel, %struct.ProjPixel** %projPixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPixel** %projPixel.addr, metadata !10694, metadata !DIExpression()), !dbg !10695
  store float %mask, float* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata float* %mask.addr, metadata !10696, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.declare(metadata [4 x float]* %rgba, metadata !10698, metadata !DIExpression()), !dbg !10699
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10700
  %stencil_value = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 26, !dbg !10701
  %1 = load float, float* %stencil_value, align 8, !dbg !10701
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 2, !dbg !10702
  store float %1, float* %arrayidx, align 8, !dbg !10703
  %arrayidx1 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 1, !dbg !10704
  store float %1, float* %arrayidx1, align 4, !dbg !10705
  %arrayidx2 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10706
  store float %1, float* %arrayidx2, align 16, !dbg !10707
  %2 = load float, float* %mask.addr, align 4, !dbg !10708
  %arrayidx3 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 3, !dbg !10709
  store float %2, float* %arrayidx3, align 4, !dbg !10710
  %3 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10711
  %do_masking = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %3, i32 0, i32 62, !dbg !10713
  %4 = load i8, i8* %do_masking, align 2, !dbg !10713
  %tobool = icmp ne i8 %4, 0, !dbg !10711
  br i1 %tobool, label %if.then, label %if.else, !dbg !10714

if.then:                                          ; preds = %entry
  %5 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10715
  %pixel = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %5, i32 0, i32 9, !dbg !10717
  %f_pt = bitcast %union.pixelPointer* %pixel to float**, !dbg !10718
  %6 = load float*, float** %f_pt, align 8, !dbg !10718
  %7 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10719
  %origColor = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %7, i32 0, i32 7, !dbg !10720
  %f_pt4 = bitcast %union.pixelPointer* %origColor to float**, !dbg !10721
  %8 = load float*, float** %f_pt4, align 8, !dbg !10721
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10722
  %9 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10723
  %blend = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %9, i32 0, i32 9, !dbg !10724
  %10 = load i16, i16* %blend, align 2, !dbg !10724
  %conv = sext i16 %10 to i32, !dbg !10723
  call void @IMB_blend_color_float(float* %6, float* %8, float* %arraydecay, i32 %conv), !dbg !10725
  br label %if.end, !dbg !10726

if.else:                                          ; preds = %entry
  %11 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10727
  %pixel5 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %11, i32 0, i32 9, !dbg !10729
  %f_pt6 = bitcast %union.pixelPointer* %pixel5 to float**, !dbg !10730
  %12 = load float*, float** %f_pt6, align 8, !dbg !10730
  %13 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10731
  %pixel7 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %13, i32 0, i32 9, !dbg !10732
  %f_pt8 = bitcast %union.pixelPointer* %pixel7 to float**, !dbg !10733
  %14 = load float*, float** %f_pt8, align 8, !dbg !10733
  %arraydecay9 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10734
  %15 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10735
  %blend10 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %15, i32 0, i32 9, !dbg !10736
  %16 = load i16, i16* %blend10, align 2, !dbg !10736
  %conv11 = sext i16 %16 to i32, !dbg !10735
  call void @IMB_blend_color_float(float* %12, float* %14, float* %arraydecay9, i32 %conv11), !dbg !10737
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10738
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_projectpaint_mask(%struct.ProjPaintState* %ps, %struct.ProjPixel* %projPixel, float %mask) #0 !dbg !10739 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %projPixel.addr = alloca %struct.ProjPixel*, align 8
  %mask.addr = alloca float, align 4
  %rgba_ub = alloca [4 x i8], align 1
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !10740, metadata !DIExpression()), !dbg !10741
  store %struct.ProjPixel* %projPixel, %struct.ProjPixel** %projPixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPixel** %projPixel.addr, metadata !10742, metadata !DIExpression()), !dbg !10743
  store float %mask, float* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata float* %mask.addr, metadata !10744, metadata !DIExpression()), !dbg !10745
  call void @llvm.dbg.declare(metadata [4 x i8]* %rgba_ub, metadata !10746, metadata !DIExpression()), !dbg !10747
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10748
  %stencil_value = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 26, !dbg !10749
  %1 = load float, float* %stencil_value, align 8, !dbg !10749
  %mul = fmul float %1, 2.550000e+02, !dbg !10750
  %conv = fptoui float %mul to i8, !dbg !10748
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_ub, i64 0, i64 2, !dbg !10751
  store i8 %conv, i8* %arrayidx, align 1, !dbg !10752
  %arrayidx1 = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_ub, i64 0, i64 1, !dbg !10753
  store i8 %conv, i8* %arrayidx1, align 1, !dbg !10754
  %arrayidx2 = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_ub, i64 0, i64 0, !dbg !10755
  store i8 %conv, i8* %arrayidx2, align 1, !dbg !10756
  %2 = load float, float* %mask.addr, align 4, !dbg !10757
  %call = call zeroext i8 @f_to_char(float %2), !dbg !10758
  %arrayidx3 = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_ub, i64 0, i64 3, !dbg !10759
  store i8 %call, i8* %arrayidx3, align 1, !dbg !10760
  %3 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10761
  %do_masking = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %3, i32 0, i32 62, !dbg !10763
  %4 = load i8, i8* %do_masking, align 2, !dbg !10763
  %tobool = icmp ne i8 %4, 0, !dbg !10761
  br i1 %tobool, label %if.then, label %if.else, !dbg !10764

if.then:                                          ; preds = %entry
  %5 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10765
  %pixel = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %5, i32 0, i32 9, !dbg !10767
  %ch_pt = bitcast %union.pixelPointer* %pixel to i8**, !dbg !10768
  %6 = load i8*, i8** %ch_pt, align 8, !dbg !10768
  %7 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10769
  %origColor = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %7, i32 0, i32 7, !dbg !10770
  %ch_pt4 = bitcast %union.pixelPointer* %origColor to i8**, !dbg !10771
  %8 = load i8*, i8** %ch_pt4, align 8, !dbg !10771
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_ub, i64 0, i64 0, !dbg !10772
  %9 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10773
  %blend = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %9, i32 0, i32 9, !dbg !10774
  %10 = load i16, i16* %blend, align 2, !dbg !10774
  %conv5 = sext i16 %10 to i32, !dbg !10773
  call void @IMB_blend_color_byte(i8* %6, i8* %8, i8* %arraydecay, i32 %conv5), !dbg !10775
  br label %if.end, !dbg !10776

if.else:                                          ; preds = %entry
  %11 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10777
  %pixel6 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %11, i32 0, i32 9, !dbg !10779
  %ch_pt7 = bitcast %union.pixelPointer* %pixel6 to i8**, !dbg !10780
  %12 = load i8*, i8** %ch_pt7, align 8, !dbg !10780
  %13 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10781
  %pixel8 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %13, i32 0, i32 9, !dbg !10782
  %ch_pt9 = bitcast %union.pixelPointer* %pixel8 to i8**, !dbg !10783
  %14 = load i8*, i8** %ch_pt9, align 8, !dbg !10783
  %arraydecay10 = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_ub, i64 0, i64 0, !dbg !10784
  %15 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10785
  %blend11 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %15, i32 0, i32 9, !dbg !10786
  %16 = load i16, i16* %blend11, align 2, !dbg !10786
  %conv12 = sext i16 %16 to i32, !dbg !10785
  call void @IMB_blend_color_byte(i8* %12, i8* %14, i8* %arraydecay10, i32 %conv12), !dbg !10787
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10788
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_projectpaint_draw_f(%struct.ProjPaintState* %ps, %struct.ProjPixel* %projPixel, float* %texrgb, float %mask) #0 !dbg !10789 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %projPixel.addr = alloca %struct.ProjPixel*, align 8
  %texrgb.addr = alloca float*, align 8
  %mask.addr = alloca float, align 4
  %rgba = alloca [4 x float], align 16
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !10792, metadata !DIExpression()), !dbg !10793
  store %struct.ProjPixel* %projPixel, %struct.ProjPixel** %projPixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPixel** %projPixel.addr, metadata !10794, metadata !DIExpression()), !dbg !10795
  store float* %texrgb, float** %texrgb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texrgb.addr, metadata !10796, metadata !DIExpression()), !dbg !10797
  store float %mask, float* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata float* %mask.addr, metadata !10798, metadata !DIExpression()), !dbg !10799
  call void @llvm.dbg.declare(metadata [4 x float]* %rgba, metadata !10800, metadata !DIExpression()), !dbg !10801
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10802
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10803
  %paint_color_linear = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 6, !dbg !10804
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %paint_color_linear, i64 0, i64 0, !dbg !10803
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay1), !dbg !10805
  %1 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10806
  %is_texbrush = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %1, i32 0, i32 63, !dbg !10808
  %2 = load i8, i8* %is_texbrush, align 1, !dbg !10808
  %tobool = icmp ne i8 %2, 0, !dbg !10806
  br i1 %tobool, label %if.then, label %if.end, !dbg !10809

if.then:                                          ; preds = %entry
  %arraydecay2 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10810
  %3 = load float*, float** %texrgb.addr, align 8, !dbg !10811
  call void @mul_v3_v3(float* %arraydecay2, float* %3), !dbg !10812
  br label %if.end, !dbg !10812

if.end:                                           ; preds = %if.then, %entry
  %arraydecay3 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10813
  %4 = load float, float* %mask.addr, align 4, !dbg !10814
  call void @mul_v3_fl(float* %arraydecay3, float %4), !dbg !10815
  %5 = load float, float* %mask.addr, align 4, !dbg !10816
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 3, !dbg !10817
  store float %5, float* %arrayidx, align 4, !dbg !10818
  %6 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10819
  %do_masking = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %6, i32 0, i32 62, !dbg !10821
  %7 = load i8, i8* %do_masking, align 2, !dbg !10821
  %tobool4 = icmp ne i8 %7, 0, !dbg !10819
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !10822

if.then5:                                         ; preds = %if.end
  %8 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10823
  %pixel = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %8, i32 0, i32 9, !dbg !10825
  %f_pt = bitcast %union.pixelPointer* %pixel to float**, !dbg !10826
  %9 = load float*, float** %f_pt, align 8, !dbg !10826
  %10 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10827
  %origColor = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %10, i32 0, i32 7, !dbg !10828
  %f_pt6 = bitcast %union.pixelPointer* %origColor to float**, !dbg !10829
  %11 = load float*, float** %f_pt6, align 8, !dbg !10829
  %arraydecay7 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10830
  %12 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10831
  %blend = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %12, i32 0, i32 9, !dbg !10832
  %13 = load i16, i16* %blend, align 2, !dbg !10832
  %conv = sext i16 %13 to i32, !dbg !10831
  call void @IMB_blend_color_float(float* %9, float* %11, float* %arraydecay7, i32 %conv), !dbg !10833
  br label %if.end15, !dbg !10834

if.else:                                          ; preds = %if.end
  %14 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10835
  %pixel8 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %14, i32 0, i32 9, !dbg !10837
  %f_pt9 = bitcast %union.pixelPointer* %pixel8 to float**, !dbg !10838
  %15 = load float*, float** %f_pt9, align 8, !dbg !10838
  %16 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10839
  %pixel10 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %16, i32 0, i32 9, !dbg !10840
  %f_pt11 = bitcast %union.pixelPointer* %pixel10 to float**, !dbg !10841
  %17 = load float*, float** %f_pt11, align 8, !dbg !10841
  %arraydecay12 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !10842
  %18 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10843
  %blend13 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %18, i32 0, i32 9, !dbg !10844
  %19 = load i16, i16* %blend13, align 2, !dbg !10844
  %conv14 = sext i16 %19 to i32, !dbg !10843
  call void @IMB_blend_color_float(float* %15, float* %17, float* %arraydecay12, i32 %conv14), !dbg !10845
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then5
  ret void, !dbg !10846
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_projectpaint_draw(%struct.ProjPaintState* %ps, %struct.ProjPixel* %projPixel, float* %texrgb, float %mask) #0 !dbg !10847 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %projPixel.addr = alloca %struct.ProjPixel*, align 8
  %texrgb.addr = alloca float*, align 8
  %mask.addr = alloca float, align 4
  %rgb = alloca [3 x float], align 4
  %rgba_ub = alloca [4 x i8], align 1
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !10848, metadata !DIExpression()), !dbg !10849
  store %struct.ProjPixel* %projPixel, %struct.ProjPixel** %projPixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPixel** %projPixel.addr, metadata !10850, metadata !DIExpression()), !dbg !10851
  store float* %texrgb, float** %texrgb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texrgb.addr, metadata !10852, metadata !DIExpression()), !dbg !10853
  store float %mask, float* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata float* %mask.addr, metadata !10854, metadata !DIExpression()), !dbg !10855
  call void @llvm.dbg.declare(metadata [3 x float]* %rgb, metadata !10856, metadata !DIExpression()), !dbg !10857
  call void @llvm.dbg.declare(metadata [4 x i8]* %rgba_ub, metadata !10858, metadata !DIExpression()), !dbg !10859
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !10860
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10861
  %paint_color = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 5, !dbg !10862
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %paint_color, i64 0, i64 0, !dbg !10861
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay1), !dbg !10863
  %1 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10864
  %is_texbrush = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %1, i32 0, i32 63, !dbg !10866
  %2 = load i8, i8* %is_texbrush, align 1, !dbg !10866
  %tobool = icmp ne i8 %2, 0, !dbg !10864
  br i1 %tobool, label %if.then, label %if.end, !dbg !10867

if.then:                                          ; preds = %entry
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !10868
  %3 = load float*, float** %texrgb.addr, align 8, !dbg !10870
  call void @mul_v3_v3(float* %arraydecay2, float* %3), !dbg !10871
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !10872
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !10873
  call void @linearrgb_to_srgb_v3_v3(float* %arraydecay3, float* %arraydecay4), !dbg !10874
  br label %if.end, !dbg !10875

if.end:                                           ; preds = %if.then, %entry
  %arraydecay5 = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_ub, i64 0, i64 0, !dbg !10876
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !10877
  call void @rgb_float_to_uchar(i8* %arraydecay5, float* %arraydecay6), !dbg !10878
  %4 = load float, float* %mask.addr, align 4, !dbg !10879
  %call = call zeroext i8 @f_to_char(float %4), !dbg !10880
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_ub, i64 0, i64 3, !dbg !10881
  store i8 %call, i8* %arrayidx, align 1, !dbg !10882
  %5 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10883
  %do_masking = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %5, i32 0, i32 62, !dbg !10885
  %6 = load i8, i8* %do_masking, align 2, !dbg !10885
  %tobool7 = icmp ne i8 %6, 0, !dbg !10883
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !10886

if.then8:                                         ; preds = %if.end
  %7 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10887
  %pixel = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %7, i32 0, i32 9, !dbg !10889
  %ch_pt = bitcast %union.pixelPointer* %pixel to i8**, !dbg !10890
  %8 = load i8*, i8** %ch_pt, align 8, !dbg !10890
  %9 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10891
  %origColor = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %9, i32 0, i32 7, !dbg !10892
  %ch_pt9 = bitcast %union.pixelPointer* %origColor to i8**, !dbg !10893
  %10 = load i8*, i8** %ch_pt9, align 8, !dbg !10893
  %arraydecay10 = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_ub, i64 0, i64 0, !dbg !10894
  %11 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10895
  %blend = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %11, i32 0, i32 9, !dbg !10896
  %12 = load i16, i16* %blend, align 2, !dbg !10896
  %conv = sext i16 %12 to i32, !dbg !10895
  call void @IMB_blend_color_byte(i8* %8, i8* %10, i8* %arraydecay10, i32 %conv), !dbg !10897
  br label %if.end18, !dbg !10898

if.else:                                          ; preds = %if.end
  %13 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10899
  %pixel11 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %13, i32 0, i32 9, !dbg !10901
  %ch_pt12 = bitcast %union.pixelPointer* %pixel11 to i8**, !dbg !10902
  %14 = load i8*, i8** %ch_pt12, align 8, !dbg !10902
  %15 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel.addr, align 8, !dbg !10903
  %pixel13 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %15, i32 0, i32 9, !dbg !10904
  %ch_pt14 = bitcast %union.pixelPointer* %pixel13 to i8**, !dbg !10905
  %16 = load i8*, i8** %ch_pt14, align 8, !dbg !10905
  %arraydecay15 = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_ub, i64 0, i64 0, !dbg !10906
  %17 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10907
  %blend16 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %17, i32 0, i32 9, !dbg !10908
  %18 = load i16, i16* %blend16, align 2, !dbg !10908
  %conv17 = sext i16 %18 to i32, !dbg !10907
  call void @IMB_blend_color_byte(i8* %14, i8* %16, i8* %arraydecay15, i32 %conv17), !dbg !10909
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then8
  ret void, !dbg !10910
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4(float* %r, float* %a) #0 !dbg !10911 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !10912, metadata !DIExpression()), !dbg !10913
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10914, metadata !DIExpression()), !dbg !10915
  %0 = load float*, float** %a.addr, align 8, !dbg !10916
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10916
  %1 = load float, float* %arrayidx, align 4, !dbg !10916
  %2 = load float*, float** %r.addr, align 8, !dbg !10917
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !10917
  store float %1, float* %arrayidx1, align 4, !dbg !10918
  %3 = load float*, float** %a.addr, align 8, !dbg !10919
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !10919
  %4 = load float, float* %arrayidx2, align 4, !dbg !10919
  %5 = load float*, float** %r.addr, align 8, !dbg !10920
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !10920
  store float %4, float* %arrayidx3, align 4, !dbg !10921
  %6 = load float*, float** %a.addr, align 8, !dbg !10922
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !10922
  %7 = load float, float* %arrayidx4, align 4, !dbg !10922
  %8 = load float*, float** %r.addr, align 8, !dbg !10923
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !10923
  store float %7, float* %arrayidx5, align 4, !dbg !10924
  %9 = load float*, float** %a.addr, align 8, !dbg !10925
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 3, !dbg !10925
  %10 = load float, float* %arrayidx6, align 4, !dbg !10925
  %11 = load float*, float** %r.addr, align 8, !dbg !10926
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 3, !dbg !10926
  store float %10, float* %arrayidx7, align 4, !dbg !10927
  ret void, !dbg !10928
}

declare dso_local void @BLI_memarena_free(%struct.MemArena*) #2

declare dso_local void @BLI_lock_thread(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @project_bucket_bounds(%struct.ProjPaintState* %ps, i32 %bucket_x, i32 %bucket_y, %struct.rctf* %bucket_bounds) #0 !dbg !10929 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %bucket_x.addr = alloca i32, align 4
  %bucket_y.addr = alloca i32, align 4
  %bucket_bounds.addr = alloca %struct.rctf*, align 8
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !10930, metadata !DIExpression()), !dbg !10931
  store i32 %bucket_x, i32* %bucket_x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bucket_x.addr, metadata !10932, metadata !DIExpression()), !dbg !10933
  store i32 %bucket_y, i32* %bucket_y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bucket_y.addr, metadata !10934, metadata !DIExpression()), !dbg !10935
  store %struct.rctf* %bucket_bounds, %struct.rctf** %bucket_bounds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %bucket_bounds.addr, metadata !10936, metadata !DIExpression()), !dbg !10937
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10938
  %screenMin = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 42, !dbg !10939
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %screenMin, i64 0, i64 0, !dbg !10938
  %1 = load float, float* %arrayidx, align 8, !dbg !10938
  %2 = load i32, i32* %bucket_x.addr, align 4, !dbg !10940
  %conv = sitofp i32 %2 to float, !dbg !10941
  %3 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10942
  %screen_width = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %3, i32 0, i32 44, !dbg !10943
  %4 = load float, float* %screen_width, align 8, !dbg !10943
  %5 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10944
  %buckets_x = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %5, i32 0, i32 36, !dbg !10945
  %6 = load i32, i32* %buckets_x, align 8, !dbg !10945
  %conv1 = sitofp i32 %6 to float, !dbg !10944
  %div = fdiv float %4, %conv1, !dbg !10946
  %mul = fmul float %conv, %div, !dbg !10947
  %add = fadd float %1, %mul, !dbg !10948
  %7 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !10949
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %7, i32 0, i32 0, !dbg !10950
  store float %add, float* %xmin, align 4, !dbg !10951
  %8 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10952
  %screenMin2 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %8, i32 0, i32 42, !dbg !10953
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %screenMin2, i64 0, i64 0, !dbg !10952
  %9 = load float, float* %arrayidx3, align 8, !dbg !10952
  %10 = load i32, i32* %bucket_x.addr, align 4, !dbg !10954
  %add4 = add nsw i32 %10, 1, !dbg !10955
  %conv5 = sitofp i32 %add4 to float, !dbg !10956
  %11 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10957
  %screen_width6 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %11, i32 0, i32 44, !dbg !10958
  %12 = load float, float* %screen_width6, align 8, !dbg !10958
  %13 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10959
  %buckets_x7 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %13, i32 0, i32 36, !dbg !10960
  %14 = load i32, i32* %buckets_x7, align 8, !dbg !10960
  %conv8 = sitofp i32 %14 to float, !dbg !10959
  %div9 = fdiv float %12, %conv8, !dbg !10961
  %mul10 = fmul float %conv5, %div9, !dbg !10962
  %add11 = fadd float %9, %mul10, !dbg !10963
  %15 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !10964
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %15, i32 0, i32 1, !dbg !10965
  store float %add11, float* %xmax, align 4, !dbg !10966
  %16 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10967
  %screenMin12 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %16, i32 0, i32 42, !dbg !10968
  %arrayidx13 = getelementptr inbounds [2 x float], [2 x float]* %screenMin12, i64 0, i64 1, !dbg !10967
  %17 = load float, float* %arrayidx13, align 4, !dbg !10967
  %18 = load i32, i32* %bucket_y.addr, align 4, !dbg !10969
  %conv14 = sitofp i32 %18 to float, !dbg !10970
  %19 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10971
  %screen_height = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %19, i32 0, i32 45, !dbg !10972
  %20 = load float, float* %screen_height, align 4, !dbg !10972
  %21 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10973
  %buckets_y = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %21, i32 0, i32 37, !dbg !10974
  %22 = load i32, i32* %buckets_y, align 4, !dbg !10974
  %conv15 = sitofp i32 %22 to float, !dbg !10973
  %div16 = fdiv float %20, %conv15, !dbg !10975
  %mul17 = fmul float %conv14, %div16, !dbg !10976
  %add18 = fadd float %17, %mul17, !dbg !10977
  %23 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !10978
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %23, i32 0, i32 2, !dbg !10979
  store float %add18, float* %ymin, align 4, !dbg !10980
  %24 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10981
  %screenMin19 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %24, i32 0, i32 42, !dbg !10982
  %arrayidx20 = getelementptr inbounds [2 x float], [2 x float]* %screenMin19, i64 0, i64 1, !dbg !10981
  %25 = load float, float* %arrayidx20, align 4, !dbg !10981
  %26 = load i32, i32* %bucket_y.addr, align 4, !dbg !10983
  %add21 = add nsw i32 %26, 1, !dbg !10984
  %conv22 = sitofp i32 %add21 to float, !dbg !10985
  %27 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10986
  %screen_height23 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %27, i32 0, i32 45, !dbg !10987
  %28 = load float, float* %screen_height23, align 4, !dbg !10987
  %29 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !10988
  %buckets_y24 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %29, i32 0, i32 37, !dbg !10989
  %30 = load i32, i32* %buckets_y24, align 4, !dbg !10989
  %conv25 = sitofp i32 %30 to float, !dbg !10988
  %div26 = fdiv float %28, %conv25, !dbg !10990
  %mul27 = fmul float %conv22, %div26, !dbg !10991
  %add28 = fadd float %25, %mul27, !dbg !10992
  %31 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !10993
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %31, i32 0, i32 3, !dbg !10994
  store float %add28, float* %ymax, align 4, !dbg !10995
  ret void, !dbg !10996
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @project_bucket_isect_circle(float* %cent, float %radius_squared, %struct.rctf* %bucket_bounds) #0 !dbg !10997 {
entry:
  %retval = alloca i8, align 1
  %cent.addr = alloca float*, align 8
  %radius_squared.addr = alloca float, align 4
  %bucket_bounds.addr = alloca %struct.rctf*, align 8
  store float* %cent, float** %cent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cent.addr, metadata !11000, metadata !DIExpression()), !dbg !11001
  store float %radius_squared, float* %radius_squared.addr, align 4
  call void @llvm.dbg.declare(metadata float* %radius_squared.addr, metadata !11002, metadata !DIExpression()), !dbg !11003
  store %struct.rctf* %bucket_bounds, %struct.rctf** %bucket_bounds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %bucket_bounds.addr, metadata !11004, metadata !DIExpression()), !dbg !11005
  %0 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !11006
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 0, !dbg !11008
  %1 = load float, float* %xmin, align 4, !dbg !11008
  %2 = load float*, float** %cent.addr, align 8, !dbg !11009
  %arrayidx = getelementptr inbounds float, float* %2, i64 0, !dbg !11009
  %3 = load float, float* %arrayidx, align 4, !dbg !11009
  %cmp = fcmp ole float %1, %3, !dbg !11010
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !11011

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !11012
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %4, i32 0, i32 1, !dbg !11013
  %5 = load float, float* %xmax, align 4, !dbg !11013
  %6 = load float*, float** %cent.addr, align 8, !dbg !11014
  %arrayidx1 = getelementptr inbounds float, float* %6, i64 0, !dbg !11014
  %7 = load float, float* %arrayidx1, align 4, !dbg !11014
  %cmp2 = fcmp oge float %5, %7, !dbg !11015
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !11016

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %8 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !11017
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %8, i32 0, i32 2, !dbg !11018
  %9 = load float, float* %ymin, align 4, !dbg !11018
  %10 = load float*, float** %cent.addr, align 8, !dbg !11019
  %arrayidx3 = getelementptr inbounds float, float* %10, i64 1, !dbg !11019
  %11 = load float, float* %arrayidx3, align 4, !dbg !11019
  %cmp4 = fcmp ole float %9, %11, !dbg !11020
  br i1 %cmp4, label %land.lhs.true5, label %if.end, !dbg !11021

land.lhs.true5:                                   ; preds = %lor.lhs.false
  %12 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !11022
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %12, i32 0, i32 3, !dbg !11023
  %13 = load float, float* %ymax, align 4, !dbg !11023
  %14 = load float*, float** %cent.addr, align 8, !dbg !11024
  %arrayidx6 = getelementptr inbounds float, float* %14, i64 1, !dbg !11024
  %15 = load float, float* %arrayidx6, align 4, !dbg !11024
  %cmp7 = fcmp oge float %13, %15, !dbg !11025
  br i1 %cmp7, label %if.then, label %if.end, !dbg !11026

if.then:                                          ; preds = %land.lhs.true5, %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !11027
  br label %return, !dbg !11027

if.end:                                           ; preds = %land.lhs.true5, %lor.lhs.false
  %16 = load float*, float** %cent.addr, align 8, !dbg !11029
  %arrayidx8 = getelementptr inbounds float, float* %16, i64 0, !dbg !11029
  %17 = load float, float* %arrayidx8, align 4, !dbg !11029
  %18 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !11031
  %xmin9 = getelementptr inbounds %struct.rctf, %struct.rctf* %18, i32 0, i32 0, !dbg !11032
  %19 = load float, float* %xmin9, align 4, !dbg !11032
  %cmp10 = fcmp olt float %17, %19, !dbg !11033
  br i1 %cmp10, label %if.then11, label %if.else33, !dbg !11034

if.then11:                                        ; preds = %if.end
  %20 = load float*, float** %cent.addr, align 8, !dbg !11035
  %arrayidx12 = getelementptr inbounds float, float* %20, i64 1, !dbg !11035
  %21 = load float, float* %arrayidx12, align 4, !dbg !11035
  %22 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !11038
  %ymin13 = getelementptr inbounds %struct.rctf, %struct.rctf* %22, i32 0, i32 2, !dbg !11039
  %23 = load float, float* %ymin13, align 4, !dbg !11039
  %cmp14 = fcmp olt float %21, %23, !dbg !11040
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !11041

if.then15:                                        ; preds = %if.then11
  %24 = load float*, float** %cent.addr, align 8, !dbg !11042
  %25 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !11044
  %xmin16 = getelementptr inbounds %struct.rctf, %struct.rctf* %25, i32 0, i32 0, !dbg !11045
  %26 = load float, float* %xmin16, align 4, !dbg !11045
  %27 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !11046
  %ymin17 = getelementptr inbounds %struct.rctf, %struct.rctf* %27, i32 0, i32 2, !dbg !11047
  %28 = load float, float* %ymin17, align 4, !dbg !11047
  %call = call float @len_squared_v2v2_alt(float* %24, float %26, float %28), !dbg !11048
  %29 = load float, float* %radius_squared.addr, align 4, !dbg !11049
  %cmp18 = fcmp olt float %call, %29, !dbg !11050
  %30 = zext i1 %cmp18 to i64, !dbg !11051
  %cond = select i1 %cmp18, i32 1, i32 0, !dbg !11051
  %conv = trunc i32 %cond to i8, !dbg !11051
  store i8 %conv, i8* %retval, align 1, !dbg !11052
  br label %return, !dbg !11052

if.else:                                          ; preds = %if.then11
  %31 = load float*, float** %cent.addr, align 8, !dbg !11053
  %arrayidx19 = getelementptr inbounds float, float* %31, i64 1, !dbg !11053
  %32 = load float, float* %arrayidx19, align 4, !dbg !11053
  %33 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !11055
  %ymax20 = getelementptr inbounds %struct.rctf, %struct.rctf* %33, i32 0, i32 3, !dbg !11056
  %34 = load float, float* %ymax20, align 4, !dbg !11056
  %cmp21 = fcmp ogt float %32, %34, !dbg !11057
  br i1 %cmp21, label %if.then23, label %if.end31, !dbg !11058

if.then23:                                        ; preds = %if.else
  %35 = load float*, float** %cent.addr, align 8, !dbg !11059
  %36 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !11061
  %xmin24 = getelementptr inbounds %struct.rctf, %struct.rctf* %36, i32 0, i32 0, !dbg !11062
  %37 = load float, float* %xmin24, align 4, !dbg !11062
  %38 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !11063
  %ymax25 = getelementptr inbounds %struct.rctf, %struct.rctf* %38, i32 0, i32 3, !dbg !11064
  %39 = load float, float* %ymax25, align 4, !dbg !11064
  %call26 = call float @len_squared_v2v2_alt(float* %35, float %37, float %39), !dbg !11065
  %40 = load float, float* %radius_squared.addr, align 4, !dbg !11066
  %cmp27 = fcmp olt float %call26, %40, !dbg !11067
  %41 = zext i1 %cmp27 to i64, !dbg !11068
  %cond29 = select i1 %cmp27, i32 1, i32 0, !dbg !11068
  %conv30 = trunc i32 %cond29 to i8, !dbg !11068
  store i8 %conv30, i8* %retval, align 1, !dbg !11069
  br label %return, !dbg !11069

if.end31:                                         ; preds = %if.else
  br label %if.end32

if.end32:                                         ; preds = %if.end31
  br label %if.end67, !dbg !11070

if.else33:                                        ; preds = %if.end
  %42 = load float*, float** %cent.addr, align 8, !dbg !11071
  %arrayidx34 = getelementptr inbounds float, float* %42, i64 0, !dbg !11071
  %43 = load float, float* %arrayidx34, align 4, !dbg !11071
  %44 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !11073
  %xmax35 = getelementptr inbounds %struct.rctf, %struct.rctf* %44, i32 0, i32 1, !dbg !11074
  %45 = load float, float* %xmax35, align 4, !dbg !11074
  %cmp36 = fcmp ogt float %43, %45, !dbg !11075
  br i1 %cmp36, label %if.then38, label %if.end66, !dbg !11076

if.then38:                                        ; preds = %if.else33
  %46 = load float*, float** %cent.addr, align 8, !dbg !11077
  %arrayidx39 = getelementptr inbounds float, float* %46, i64 1, !dbg !11077
  %47 = load float, float* %arrayidx39, align 4, !dbg !11077
  %48 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !11080
  %ymin40 = getelementptr inbounds %struct.rctf, %struct.rctf* %48, i32 0, i32 2, !dbg !11081
  %49 = load float, float* %ymin40, align 4, !dbg !11081
  %cmp41 = fcmp olt float %47, %49, !dbg !11082
  br i1 %cmp41, label %if.then43, label %if.else51, !dbg !11083

if.then43:                                        ; preds = %if.then38
  %50 = load float*, float** %cent.addr, align 8, !dbg !11084
  %51 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !11086
  %xmax44 = getelementptr inbounds %struct.rctf, %struct.rctf* %51, i32 0, i32 1, !dbg !11087
  %52 = load float, float* %xmax44, align 4, !dbg !11087
  %53 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !11088
  %ymin45 = getelementptr inbounds %struct.rctf, %struct.rctf* %53, i32 0, i32 2, !dbg !11089
  %54 = load float, float* %ymin45, align 4, !dbg !11089
  %call46 = call float @len_squared_v2v2_alt(float* %50, float %52, float %54), !dbg !11090
  %55 = load float, float* %radius_squared.addr, align 4, !dbg !11091
  %cmp47 = fcmp olt float %call46, %55, !dbg !11092
  %56 = zext i1 %cmp47 to i64, !dbg !11093
  %cond49 = select i1 %cmp47, i32 1, i32 0, !dbg !11093
  %conv50 = trunc i32 %cond49 to i8, !dbg !11093
  store i8 %conv50, i8* %retval, align 1, !dbg !11094
  br label %return, !dbg !11094

if.else51:                                        ; preds = %if.then38
  %57 = load float*, float** %cent.addr, align 8, !dbg !11095
  %arrayidx52 = getelementptr inbounds float, float* %57, i64 1, !dbg !11095
  %58 = load float, float* %arrayidx52, align 4, !dbg !11095
  %59 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !11097
  %ymax53 = getelementptr inbounds %struct.rctf, %struct.rctf* %59, i32 0, i32 3, !dbg !11098
  %60 = load float, float* %ymax53, align 4, !dbg !11098
  %cmp54 = fcmp ogt float %58, %60, !dbg !11099
  br i1 %cmp54, label %if.then56, label %if.end64, !dbg !11100

if.then56:                                        ; preds = %if.else51
  %61 = load float*, float** %cent.addr, align 8, !dbg !11101
  %62 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !11103
  %xmax57 = getelementptr inbounds %struct.rctf, %struct.rctf* %62, i32 0, i32 1, !dbg !11104
  %63 = load float, float* %xmax57, align 4, !dbg !11104
  %64 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !11105
  %ymax58 = getelementptr inbounds %struct.rctf, %struct.rctf* %64, i32 0, i32 3, !dbg !11106
  %65 = load float, float* %ymax58, align 4, !dbg !11106
  %call59 = call float @len_squared_v2v2_alt(float* %61, float %63, float %65), !dbg !11107
  %66 = load float, float* %radius_squared.addr, align 4, !dbg !11108
  %cmp60 = fcmp olt float %call59, %66, !dbg !11109
  %67 = zext i1 %cmp60 to i64, !dbg !11110
  %cond62 = select i1 %cmp60, i32 1, i32 0, !dbg !11110
  %conv63 = trunc i32 %cond62 to i8, !dbg !11110
  store i8 %conv63, i8* %retval, align 1, !dbg !11111
  br label %return, !dbg !11111

if.end64:                                         ; preds = %if.else51
  br label %if.end65

if.end65:                                         ; preds = %if.end64
  br label %if.end66, !dbg !11112

if.end66:                                         ; preds = %if.end65, %if.else33
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.end32
  store i8 0, i8* %retval, align 1, !dbg !11113
  br label %return, !dbg !11113

return:                                           ; preds = %if.end67, %if.then56, %if.then43, %if.then23, %if.then15, %if.then
  %68 = load i8, i8* %retval, align 1, !dbg !11114
  ret i8 %68, !dbg !11114
}

declare dso_local void @BLI_unlock_thread(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v2v2_alt(float* %v1, float %v2_1, float %v2_2) #0 !dbg !11115 {
entry:
  %v1.addr = alloca float*, align 8
  %v2_1.addr = alloca float, align 4
  %v2_2.addr = alloca float, align 4
  %x = alloca float, align 4
  %y = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !11118, metadata !DIExpression()), !dbg !11119
  store float %v2_1, float* %v2_1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %v2_1.addr, metadata !11120, metadata !DIExpression()), !dbg !11121
  store float %v2_2, float* %v2_2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %v2_2.addr, metadata !11122, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.declare(metadata float* %x, metadata !11124, metadata !DIExpression()), !dbg !11125
  call void @llvm.dbg.declare(metadata float* %y, metadata !11126, metadata !DIExpression()), !dbg !11127
  %0 = load float*, float** %v1.addr, align 8, !dbg !11128
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11128
  %1 = load float, float* %arrayidx, align 4, !dbg !11128
  %2 = load float, float* %v2_1.addr, align 4, !dbg !11129
  %sub = fsub float %1, %2, !dbg !11130
  store float %sub, float* %x, align 4, !dbg !11131
  %3 = load float*, float** %v1.addr, align 8, !dbg !11132
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !11132
  %4 = load float, float* %arrayidx1, align 4, !dbg !11132
  %5 = load float, float* %v2_2.addr, align 4, !dbg !11133
  %sub2 = fsub float %4, %5, !dbg !11134
  store float %sub2, float* %y, align 4, !dbg !11135
  %6 = load float, float* %x, align 4, !dbg !11136
  %7 = load float, float* %x, align 4, !dbg !11137
  %mul = fmul float %6, %7, !dbg !11138
  %8 = load float, float* %y, align 4, !dbg !11139
  %9 = load float, float* %y, align 4, !dbg !11140
  %mul3 = fmul float %8, %9, !dbg !11141
  %add = fadd float %mul, %mul3, !dbg !11142
  ret float %add, !dbg !11143
}

; Function Attrs: noinline nounwind uwtable
define internal void @project_paint_face_init(%struct.ProjPaintState* %ps, i32 %thread_index, i32 %bucket_index, i32 %face_index, i32 %image_index, %struct.rctf* %bucket_bounds, %struct.ImBuf* %ibuf, %struct.ImBuf** %tmpibuf, i16 signext %clamp_u, i16 signext %clamp_v) #0 !dbg !11144 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %thread_index.addr = alloca i32, align 4
  %bucket_index.addr = alloca i32, align 4
  %face_index.addr = alloca i32, align 4
  %image_index.addr = alloca i32, align 4
  %bucket_bounds.addr = alloca %struct.rctf*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %tmpibuf.addr = alloca %struct.ImBuf**, align 8
  %clamp_u.addr = alloca i16, align 2
  %clamp_v.addr = alloca i16, align 2
  %arena = alloca %struct.MemArena*, align 8
  %bucketPixelNodes = alloca %struct.LinkNode**, align 8
  %bucketFaceNodes = alloca %struct.LinkNode*, align 8
  %threaded = alloca i8, align 1
  %tinf = alloca %struct.TileInfo, align 8
  %mf = alloca %struct.MFace*, align 8
  %tf = alloca %struct.MTFace*, align 8
  %x12 = alloca i32, align 4
  %y = alloca i32, align 4
  %mask = alloca float, align 4
  %uv = alloca [2 x float], align 4
  %side = alloca i32, align 4
  %v1coSS = alloca float*, align 8
  %v2coSS = alloca float*, align 8
  %v3coSS = alloca float*, align 8
  %vCo = alloca [4 x float*], align 16
  %w = alloca [3 x float], align 4
  %wco = alloca [3 x float], align 4
  %uv1co = alloca float*, align 8
  %uv2co = alloca float*, align 8
  %uv3co = alloca float*, align 8
  %pixelScreenCo = alloca [4 x float], align 16
  %do_3d_mapping = alloca i8, align 1
  %bounds_px = alloca %struct.rcti, align 4
  %tf_uv_pxoffset = alloca [4 x [2 x float]], align 16
  %xhalfpx = alloca float, align 4
  %yhalfpx = alloca float, align 4
  %ibuf_xf = alloca float, align 4
  %ibuf_yf = alloca float, align 4
  %has_x_isect = alloca i32, align 4
  %has_isect = alloca i32, align 4
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %i3 = alloca i32, align 4
  %uv_clip = alloca [8 x [2 x float]], align 16
  %uv_clip_tot = alloca i32, align 4
  %is_ortho = alloca i8, align 1
  %do_backfacecull = alloca i8, align 1
  %do_clip = alloca i8, align 1
  %face_seam_flag = alloca i32, align 4
  %outset_uv = alloca [2 x float]*, align 8
  %insetCos = alloca [4 x [3 x float]], align 16
  %vCoSS = alloca [4 x float*], align 16
  %bucket_clip_edges = alloca [2 x [2 x float]], align 16
  %edge_verts_inset_clip = alloca [2 x [3 x float]], align 16
  %fidx1 = alloca i32, align 4
  %fidx2 = alloca i32, align 4
  %seam_subsection = alloca [4 x [2 x float]], align 16
  %fac1 = alloca float, align 4
  %fac2 = alloca float, align 4
  %ftot = alloca float, align 4
  %fac = alloca float, align 4
  %uv_close = alloca [2 x float], align 4
  %uv_fac = alloca float, align 4
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !11148, metadata !DIExpression()), !dbg !11149
  store i32 %thread_index, i32* %thread_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %thread_index.addr, metadata !11150, metadata !DIExpression()), !dbg !11151
  store i32 %bucket_index, i32* %bucket_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bucket_index.addr, metadata !11152, metadata !DIExpression()), !dbg !11153
  store i32 %face_index, i32* %face_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_index.addr, metadata !11154, metadata !DIExpression()), !dbg !11155
  store i32 %image_index, i32* %image_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %image_index.addr, metadata !11156, metadata !DIExpression()), !dbg !11157
  store %struct.rctf* %bucket_bounds, %struct.rctf** %bucket_bounds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %bucket_bounds.addr, metadata !11158, metadata !DIExpression()), !dbg !11159
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !11160, metadata !DIExpression()), !dbg !11161
  store %struct.ImBuf** %tmpibuf, %struct.ImBuf*** %tmpibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf*** %tmpibuf.addr, metadata !11162, metadata !DIExpression()), !dbg !11163
  store i16 %clamp_u, i16* %clamp_u.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %clamp_u.addr, metadata !11164, metadata !DIExpression()), !dbg !11165
  store i16 %clamp_v, i16* %clamp_v.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %clamp_v.addr, metadata !11166, metadata !DIExpression()), !dbg !11167
  call void @llvm.dbg.declare(metadata %struct.MemArena** %arena, metadata !11168, metadata !DIExpression()), !dbg !11169
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11170
  %arena_mt = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 27, !dbg !11171
  %1 = load i32, i32* %thread_index.addr, align 4, !dbg !11172
  %idxprom = sext i32 %1 to i64, !dbg !11170
  %arrayidx = getelementptr inbounds [1 x %struct.MemArena*], [1 x %struct.MemArena*]* %arena_mt, i64 0, i64 %idxprom, !dbg !11170
  %2 = load %struct.MemArena*, %struct.MemArena** %arrayidx, align 8, !dbg !11170
  store %struct.MemArena* %2, %struct.MemArena** %arena, align 8, !dbg !11169
  call void @llvm.dbg.declare(metadata %struct.LinkNode*** %bucketPixelNodes, metadata !11173, metadata !DIExpression()), !dbg !11174
  %3 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11175
  %bucketRect = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %3, i32 0, i32 28, !dbg !11176
  %4 = load %struct.LinkNode**, %struct.LinkNode*** %bucketRect, align 8, !dbg !11176
  %5 = load i32, i32* %bucket_index.addr, align 4, !dbg !11177
  %idx.ext = sext i32 %5 to i64, !dbg !11178
  %add.ptr = getelementptr inbounds %struct.LinkNode*, %struct.LinkNode** %4, i64 %idx.ext, !dbg !11178
  store %struct.LinkNode** %add.ptr, %struct.LinkNode*** %bucketPixelNodes, align 8, !dbg !11174
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %bucketFaceNodes, metadata !11179, metadata !DIExpression()), !dbg !11180
  %6 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11181
  %bucketFaces = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %6, i32 0, i32 29, !dbg !11182
  %7 = load %struct.LinkNode**, %struct.LinkNode*** %bucketFaces, align 8, !dbg !11182
  %8 = load i32, i32* %bucket_index.addr, align 4, !dbg !11183
  %idxprom1 = sext i32 %8 to i64, !dbg !11181
  %arrayidx2 = getelementptr inbounds %struct.LinkNode*, %struct.LinkNode** %7, i64 %idxprom1, !dbg !11181
  %9 = load %struct.LinkNode*, %struct.LinkNode** %arrayidx2, align 8, !dbg !11181
  store %struct.LinkNode* %9, %struct.LinkNode** %bucketFaceNodes, align 8, !dbg !11180
  call void @llvm.dbg.declare(metadata i8* %threaded, metadata !11184, metadata !DIExpression()), !dbg !11185
  %10 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11186
  %thread_tot = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %10, i32 0, i32 74, !dbg !11187
  %11 = load i32, i32* %thread_tot, align 8, !dbg !11187
  %cmp = icmp sgt i32 %11, 1, !dbg !11188
  %conv = zext i1 %cmp to i32, !dbg !11188
  %conv3 = trunc i32 %conv to i8, !dbg !11189
  store i8 %conv3, i8* %threaded, align 1, !dbg !11185
  call void @llvm.dbg.declare(metadata %struct.TileInfo* %tinf, metadata !11190, metadata !DIExpression()), !dbg !11199
  %lock = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %tinf, i32 0, i32 0, !dbg !11200
  %12 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11201
  %tile_lock = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %12, i32 0, i32 81, !dbg !11202
  %13 = load i32*, i32** %tile_lock, align 8, !dbg !11202
  store i32* %13, i32** %lock, align 8, !dbg !11200
  %masked = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %tinf, i32 0, i32 1, !dbg !11200
  %14 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11203
  %do_masking = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %14, i32 0, i32 62, !dbg !11204
  %15 = load i8, i8* %do_masking, align 2, !dbg !11204
  store i8 %15, i8* %masked, align 8, !dbg !11200
  %tile_width = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %tinf, i32 0, i32 2, !dbg !11200
  %16 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11205
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %16, i32 0, i32 2, !dbg !11205
  %17 = load i32, i32* %x, align 8, !dbg !11205
  %add = add nsw i32 %17, 64, !dbg !11205
  %sub = sub nsw i32 %add, 1, !dbg !11205
  %shr = ashr i32 %sub, 6, !dbg !11205
  %conv4 = trunc i32 %shr to i16, !dbg !11205
  store i16 %conv4, i16* %tile_width, align 2, !dbg !11200
  %tmpibuf5 = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %tinf, i32 0, i32 3, !dbg !11200
  %18 = load %struct.ImBuf**, %struct.ImBuf*** %tmpibuf.addr, align 8, !dbg !11206
  store %struct.ImBuf** %18, %struct.ImBuf*** %tmpibuf5, align 8, !dbg !11200
  %pjima = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %tinf, i32 0, i32 4, !dbg !11200
  %19 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11207
  %projImages = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %19, i32 0, i32 38, !dbg !11208
  %20 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages, align 8, !dbg !11208
  %21 = load i32, i32* %image_index.addr, align 4, !dbg !11209
  %idx.ext6 = sext i32 %21 to i64, !dbg !11210
  %add.ptr7 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %20, i64 %idx.ext6, !dbg !11210
  store %struct.ProjPaintImage* %add.ptr7, %struct.ProjPaintImage** %pjima, align 8, !dbg !11200
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !11211, metadata !DIExpression()), !dbg !11214
  %22 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11215
  %dm_mface = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %22, i32 0, i32 19, !dbg !11216
  %23 = load %struct.MFace*, %struct.MFace** %dm_mface, align 8, !dbg !11216
  %24 = load i32, i32* %face_index.addr, align 4, !dbg !11217
  %idx.ext8 = sext i32 %24 to i64, !dbg !11218
  %add.ptr9 = getelementptr inbounds %struct.MFace, %struct.MFace* %23, i64 %idx.ext8, !dbg !11218
  store %struct.MFace* %add.ptr9, %struct.MFace** %mf, align 8, !dbg !11214
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf, metadata !11219, metadata !DIExpression()), !dbg !11222
  %25 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11223
  %dm_mtface = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %25, i32 0, i32 20, !dbg !11224
  %26 = load %struct.MTFace**, %struct.MTFace*** %dm_mtface, align 8, !dbg !11224
  %27 = load i32, i32* %face_index.addr, align 4, !dbg !11225
  %idxprom10 = sext i32 %27 to i64, !dbg !11223
  %arrayidx11 = getelementptr inbounds %struct.MTFace*, %struct.MTFace** %26, i64 %idxprom10, !dbg !11223
  %28 = load %struct.MTFace*, %struct.MTFace** %arrayidx11, align 8, !dbg !11223
  store %struct.MTFace* %28, %struct.MTFace** %tf, align 8, !dbg !11222
  call void @llvm.dbg.declare(metadata i32* %x12, metadata !11226, metadata !DIExpression()), !dbg !11227
  call void @llvm.dbg.declare(metadata i32* %y, metadata !11228, metadata !DIExpression()), !dbg !11229
  call void @llvm.dbg.declare(metadata float* %mask, metadata !11230, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.declare(metadata [2 x float]* %uv, metadata !11232, metadata !DIExpression()), !dbg !11233
  call void @llvm.dbg.declare(metadata i32* %side, metadata !11234, metadata !DIExpression()), !dbg !11235
  call void @llvm.dbg.declare(metadata float** %v1coSS, metadata !11236, metadata !DIExpression()), !dbg !11237
  call void @llvm.dbg.declare(metadata float** %v2coSS, metadata !11238, metadata !DIExpression()), !dbg !11239
  call void @llvm.dbg.declare(metadata float** %v3coSS, metadata !11240, metadata !DIExpression()), !dbg !11241
  call void @llvm.dbg.declare(metadata [4 x float*]* %vCo, metadata !11242, metadata !DIExpression()), !dbg !11244
  call void @llvm.dbg.declare(metadata [3 x float]* %w, metadata !11245, metadata !DIExpression()), !dbg !11246
  call void @llvm.dbg.declare(metadata [3 x float]* %wco, metadata !11247, metadata !DIExpression()), !dbg !11248
  call void @llvm.dbg.declare(metadata float** %uv1co, metadata !11249, metadata !DIExpression()), !dbg !11250
  call void @llvm.dbg.declare(metadata float** %uv2co, metadata !11251, metadata !DIExpression()), !dbg !11252
  call void @llvm.dbg.declare(metadata float** %uv3co, metadata !11253, metadata !DIExpression()), !dbg !11254
  call void @llvm.dbg.declare(metadata [4 x float]* %pixelScreenCo, metadata !11255, metadata !DIExpression()), !dbg !11256
  call void @llvm.dbg.declare(metadata i8* %do_3d_mapping, metadata !11257, metadata !DIExpression()), !dbg !11258
  %29 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11259
  %brush = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %29, i32 0, i32 7, !dbg !11260
  %30 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !11260
  %mtex = getelementptr inbounds %struct.Brush, %struct.Brush* %30, i32 0, i32 3, !dbg !11261
  %brush_map_mode = getelementptr inbounds %struct.MTex, %struct.MTex* %mtex, i32 0, i32 20, !dbg !11262
  %31 = load i8, i8* %brush_map_mode, align 4, !dbg !11262
  %conv13 = zext i8 %31 to i32, !dbg !11259
  %cmp14 = icmp eq i32 %conv13, 2, !dbg !11263
  %conv15 = zext i1 %cmp14 to i32, !dbg !11263
  %conv16 = trunc i32 %conv15 to i8, !dbg !11259
  store i8 %conv16, i8* %do_3d_mapping, align 1, !dbg !11258
  call void @llvm.dbg.declare(metadata %struct.rcti* %bounds_px, metadata !11264, metadata !DIExpression()), !dbg !11265
  call void @llvm.dbg.declare(metadata [4 x [2 x float]]* %tf_uv_pxoffset, metadata !11266, metadata !DIExpression()), !dbg !11267
  call void @llvm.dbg.declare(metadata float* %xhalfpx, metadata !11268, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.declare(metadata float* %yhalfpx, metadata !11270, metadata !DIExpression()), !dbg !11271
  call void @llvm.dbg.declare(metadata float* %ibuf_xf, metadata !11272, metadata !DIExpression()), !dbg !11273
  %32 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11274
  %x17 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %32, i32 0, i32 2, !dbg !11275
  %33 = load i32, i32* %x17, align 8, !dbg !11275
  %conv18 = sitofp i32 %33 to float, !dbg !11276
  store float %conv18, float* %ibuf_xf, align 4, !dbg !11273
  call void @llvm.dbg.declare(metadata float* %ibuf_yf, metadata !11277, metadata !DIExpression()), !dbg !11278
  %34 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11279
  %y19 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %34, i32 0, i32 3, !dbg !11280
  %35 = load i32, i32* %y19, align 4, !dbg !11280
  %conv20 = sitofp i32 %35 to float, !dbg !11281
  store float %conv20, float* %ibuf_yf, align 4, !dbg !11278
  call void @llvm.dbg.declare(metadata i32* %has_x_isect, metadata !11282, metadata !DIExpression()), !dbg !11283
  store i32 0, i32* %has_x_isect, align 4, !dbg !11283
  call void @llvm.dbg.declare(metadata i32* %has_isect, metadata !11284, metadata !DIExpression()), !dbg !11285
  store i32 0, i32* %has_isect, align 4, !dbg !11285
  call void @llvm.dbg.declare(metadata i32* %i1, metadata !11286, metadata !DIExpression()), !dbg !11287
  call void @llvm.dbg.declare(metadata i32* %i2, metadata !11288, metadata !DIExpression()), !dbg !11289
  call void @llvm.dbg.declare(metadata i32* %i3, metadata !11290, metadata !DIExpression()), !dbg !11291
  call void @llvm.dbg.declare(metadata [8 x [2 x float]]* %uv_clip, metadata !11292, metadata !DIExpression()), !dbg !11295
  call void @llvm.dbg.declare(metadata i32* %uv_clip_tot, metadata !11296, metadata !DIExpression()), !dbg !11297
  call void @llvm.dbg.declare(metadata i8* %is_ortho, metadata !11298, metadata !DIExpression()), !dbg !11299
  %36 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11300
  %is_ortho21 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %36, i32 0, i32 61, !dbg !11301
  %37 = load i8, i8* %is_ortho21, align 1, !dbg !11301
  store i8 %37, i8* %is_ortho, align 1, !dbg !11299
  call void @llvm.dbg.declare(metadata i8* %do_backfacecull, metadata !11302, metadata !DIExpression()), !dbg !11303
  %38 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11304
  %do_backfacecull22 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %38, i32 0, i32 54, !dbg !11305
  %39 = load i8, i8* %do_backfacecull22, align 2, !dbg !11305
  store i8 %39, i8* %do_backfacecull, align 1, !dbg !11303
  call void @llvm.dbg.declare(metadata i8* %do_clip, metadata !11306, metadata !DIExpression()), !dbg !11307
  %40 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11308
  %rv3d = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %40, i32 0, i32 1, !dbg !11309
  %41 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !11309
  %tobool = icmp ne %struct.RegionView3D* %41, null, !dbg !11308
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11308

cond.true:                                        ; preds = %entry
  %42 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11310
  %rv3d23 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %42, i32 0, i32 1, !dbg !11311
  %43 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d23, align 8, !dbg !11311
  %rflag = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %43, i32 0, i32 32, !dbg !11312
  %44 = load i16, i16* %rflag, align 2, !dbg !11312
  %conv24 = sext i16 %44 to i32, !dbg !11310
  %and = and i32 %conv24, 4, !dbg !11313
  br label %cond.end, !dbg !11308

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11308

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and, %cond.true ], [ 0, %cond.false ], !dbg !11308
  %conv25 = trunc i32 %cond to i8, !dbg !11308
  store i8 %conv25, i8* %do_clip, align 1, !dbg !11307
  %45 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11314
  %dm_mvert = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %45, i32 0, i32 18, !dbg !11315
  %46 = load %struct.MVert*, %struct.MVert** %dm_mvert, align 8, !dbg !11315
  %47 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11316
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %47, i32 0, i32 0, !dbg !11317
  %48 = load i32, i32* %v1, align 4, !dbg !11317
  %idxprom26 = zext i32 %48 to i64, !dbg !11314
  %arrayidx27 = getelementptr inbounds %struct.MVert, %struct.MVert* %46, i64 %idxprom26, !dbg !11314
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx27, i32 0, i32 0, !dbg !11318
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11314
  %arrayidx28 = getelementptr inbounds [4 x float*], [4 x float*]* %vCo, i64 0, i64 0, !dbg !11319
  store float* %arraydecay, float** %arrayidx28, align 16, !dbg !11320
  %49 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11321
  %dm_mvert29 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %49, i32 0, i32 18, !dbg !11322
  %50 = load %struct.MVert*, %struct.MVert** %dm_mvert29, align 8, !dbg !11322
  %51 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11323
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %51, i32 0, i32 1, !dbg !11324
  %52 = load i32, i32* %v2, align 4, !dbg !11324
  %idxprom30 = zext i32 %52 to i64, !dbg !11321
  %arrayidx31 = getelementptr inbounds %struct.MVert, %struct.MVert* %50, i64 %idxprom30, !dbg !11321
  %co32 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx31, i32 0, i32 0, !dbg !11325
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %co32, i64 0, i64 0, !dbg !11321
  %arrayidx34 = getelementptr inbounds [4 x float*], [4 x float*]* %vCo, i64 0, i64 1, !dbg !11326
  store float* %arraydecay33, float** %arrayidx34, align 8, !dbg !11327
  %53 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11328
  %dm_mvert35 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %53, i32 0, i32 18, !dbg !11329
  %54 = load %struct.MVert*, %struct.MVert** %dm_mvert35, align 8, !dbg !11329
  %55 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11330
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %55, i32 0, i32 2, !dbg !11331
  %56 = load i32, i32* %v3, align 4, !dbg !11331
  %idxprom36 = zext i32 %56 to i64, !dbg !11328
  %arrayidx37 = getelementptr inbounds %struct.MVert, %struct.MVert* %54, i64 %idxprom36, !dbg !11328
  %co38 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx37, i32 0, i32 0, !dbg !11332
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %co38, i64 0, i64 0, !dbg !11328
  %arrayidx40 = getelementptr inbounds [4 x float*], [4 x float*]* %vCo, i64 0, i64 2, !dbg !11333
  store float* %arraydecay39, float** %arrayidx40, align 16, !dbg !11334
  %57 = load float, float* %ibuf_xf, align 4, !dbg !11335
  %div = fdiv float 0x3FE01B4E80000000, %57, !dbg !11336
  store float %div, float* %xhalfpx, align 4, !dbg !11337
  %58 = load float, float* %ibuf_yf, align 4, !dbg !11338
  %div41 = fdiv float 0x3FE0147AE0000000, %58, !dbg !11339
  store float %div41, float* %yhalfpx, align 4, !dbg !11340
  %59 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !11341
  %uv42 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %59, i32 0, i32 0, !dbg !11342
  %arrayidx43 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv42, i64 0, i64 0, !dbg !11341
  %arrayidx44 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx43, i64 0, i64 0, !dbg !11341
  %60 = load float, float* %arrayidx44, align 8, !dbg !11341
  %61 = load float, float* %xhalfpx, align 4, !dbg !11343
  %sub45 = fsub float %60, %61, !dbg !11344
  %arrayidx46 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 0, !dbg !11345
  %arrayidx47 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx46, i64 0, i64 0, !dbg !11345
  store float %sub45, float* %arrayidx47, align 16, !dbg !11346
  %62 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !11347
  %uv48 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %62, i32 0, i32 0, !dbg !11348
  %arrayidx49 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv48, i64 0, i64 0, !dbg !11347
  %arrayidx50 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx49, i64 0, i64 1, !dbg !11347
  %63 = load float, float* %arrayidx50, align 4, !dbg !11347
  %64 = load float, float* %yhalfpx, align 4, !dbg !11349
  %sub51 = fsub float %63, %64, !dbg !11350
  %arrayidx52 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 0, !dbg !11351
  %arrayidx53 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx52, i64 0, i64 1, !dbg !11351
  store float %sub51, float* %arrayidx53, align 4, !dbg !11352
  %65 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !11353
  %uv54 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %65, i32 0, i32 0, !dbg !11354
  %arrayidx55 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv54, i64 0, i64 1, !dbg !11353
  %arrayidx56 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx55, i64 0, i64 0, !dbg !11353
  %66 = load float, float* %arrayidx56, align 8, !dbg !11353
  %67 = load float, float* %xhalfpx, align 4, !dbg !11355
  %sub57 = fsub float %66, %67, !dbg !11356
  %arrayidx58 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 1, !dbg !11357
  %arrayidx59 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx58, i64 0, i64 0, !dbg !11357
  store float %sub57, float* %arrayidx59, align 8, !dbg !11358
  %68 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !11359
  %uv60 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %68, i32 0, i32 0, !dbg !11360
  %arrayidx61 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv60, i64 0, i64 1, !dbg !11359
  %arrayidx62 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx61, i64 0, i64 1, !dbg !11359
  %69 = load float, float* %arrayidx62, align 4, !dbg !11359
  %70 = load float, float* %yhalfpx, align 4, !dbg !11361
  %sub63 = fsub float %69, %70, !dbg !11362
  %arrayidx64 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 1, !dbg !11363
  %arrayidx65 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx64, i64 0, i64 1, !dbg !11363
  store float %sub63, float* %arrayidx65, align 4, !dbg !11364
  %71 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !11365
  %uv66 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %71, i32 0, i32 0, !dbg !11366
  %arrayidx67 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv66, i64 0, i64 2, !dbg !11365
  %arrayidx68 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx67, i64 0, i64 0, !dbg !11365
  %72 = load float, float* %arrayidx68, align 8, !dbg !11365
  %73 = load float, float* %xhalfpx, align 4, !dbg !11367
  %sub69 = fsub float %72, %73, !dbg !11368
  %arrayidx70 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 2, !dbg !11369
  %arrayidx71 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx70, i64 0, i64 0, !dbg !11369
  store float %sub69, float* %arrayidx71, align 16, !dbg !11370
  %74 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !11371
  %uv72 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %74, i32 0, i32 0, !dbg !11372
  %arrayidx73 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv72, i64 0, i64 2, !dbg !11371
  %arrayidx74 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx73, i64 0, i64 1, !dbg !11371
  %75 = load float, float* %arrayidx74, align 4, !dbg !11371
  %76 = load float, float* %yhalfpx, align 4, !dbg !11373
  %sub75 = fsub float %75, %76, !dbg !11374
  %arrayidx76 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 2, !dbg !11375
  %arrayidx77 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx76, i64 0, i64 1, !dbg !11375
  store float %sub75, float* %arrayidx77, align 4, !dbg !11376
  %77 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11377
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %77, i32 0, i32 3, !dbg !11379
  %78 = load i32, i32* %v4, align 4, !dbg !11379
  %tobool78 = icmp ne i32 %78, 0, !dbg !11377
  br i1 %tobool78, label %if.then, label %if.else, !dbg !11380

if.then:                                          ; preds = %cond.end
  %79 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11381
  %dm_mvert79 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %79, i32 0, i32 18, !dbg !11383
  %80 = load %struct.MVert*, %struct.MVert** %dm_mvert79, align 8, !dbg !11383
  %81 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11384
  %v480 = getelementptr inbounds %struct.MFace, %struct.MFace* %81, i32 0, i32 3, !dbg !11385
  %82 = load i32, i32* %v480, align 4, !dbg !11385
  %idxprom81 = zext i32 %82 to i64, !dbg !11381
  %arrayidx82 = getelementptr inbounds %struct.MVert, %struct.MVert* %80, i64 %idxprom81, !dbg !11381
  %co83 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx82, i32 0, i32 0, !dbg !11386
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %co83, i64 0, i64 0, !dbg !11381
  %arrayidx85 = getelementptr inbounds [4 x float*], [4 x float*]* %vCo, i64 0, i64 3, !dbg !11387
  store float* %arraydecay84, float** %arrayidx85, align 8, !dbg !11388
  %83 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !11389
  %uv86 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %83, i32 0, i32 0, !dbg !11390
  %arrayidx87 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv86, i64 0, i64 3, !dbg !11389
  %arrayidx88 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx87, i64 0, i64 0, !dbg !11389
  %84 = load float, float* %arrayidx88, align 8, !dbg !11389
  %85 = load float, float* %xhalfpx, align 4, !dbg !11391
  %sub89 = fsub float %84, %85, !dbg !11392
  %arrayidx90 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 3, !dbg !11393
  %arrayidx91 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx90, i64 0, i64 0, !dbg !11393
  store float %sub89, float* %arrayidx91, align 8, !dbg !11394
  %86 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !11395
  %uv92 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %86, i32 0, i32 0, !dbg !11396
  %arrayidx93 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv92, i64 0, i64 3, !dbg !11395
  %arrayidx94 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx93, i64 0, i64 1, !dbg !11395
  %87 = load float, float* %arrayidx94, align 4, !dbg !11395
  %88 = load float, float* %yhalfpx, align 4, !dbg !11397
  %sub95 = fsub float %87, %88, !dbg !11398
  %arrayidx96 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 3, !dbg !11399
  %arrayidx97 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx96, i64 0, i64 1, !dbg !11399
  store float %sub95, float* %arrayidx97, align 4, !dbg !11400
  store i32 1, i32* %side, align 4, !dbg !11401
  br label %if.end, !dbg !11402

if.else:                                          ; preds = %cond.end
  store i32 0, i32* %side, align 4, !dbg !11403
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %do.body, !dbg !11405

do.body:                                          ; preds = %do.cond, %if.end
  %89 = load i32, i32* %side, align 4, !dbg !11406
  %cmp98 = icmp eq i32 %89, 1, !dbg !11409
  br i1 %cmp98, label %if.then100, label %if.else101, !dbg !11410

if.then100:                                       ; preds = %do.body
  store i32 0, i32* %i1, align 4, !dbg !11411
  store i32 2, i32* %i2, align 4, !dbg !11413
  store i32 3, i32* %i3, align 4, !dbg !11414
  br label %if.end102, !dbg !11415

if.else101:                                       ; preds = %do.body
  store i32 0, i32* %i1, align 4, !dbg !11416
  store i32 1, i32* %i2, align 4, !dbg !11418
  store i32 2, i32* %i3, align 4, !dbg !11419
  br label %if.end102

if.end102:                                        ; preds = %if.else101, %if.then100
  %90 = load i32, i32* %i1, align 4, !dbg !11420
  %idxprom103 = sext i32 %90 to i64, !dbg !11421
  %arrayidx104 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 %idxprom103, !dbg !11421
  %arraydecay105 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx104, i64 0, i64 0, !dbg !11421
  store float* %arraydecay105, float** %uv1co, align 8, !dbg !11422
  %91 = load i32, i32* %i2, align 4, !dbg !11423
  %idxprom106 = sext i32 %91 to i64, !dbg !11424
  %arrayidx107 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 %idxprom106, !dbg !11424
  %arraydecay108 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx107, i64 0, i64 0, !dbg !11424
  store float* %arraydecay108, float** %uv2co, align 8, !dbg !11425
  %92 = load i32, i32* %i3, align 4, !dbg !11426
  %idxprom109 = sext i32 %92 to i64, !dbg !11427
  %arrayidx110 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 %idxprom109, !dbg !11427
  %arraydecay111 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx110, i64 0, i64 0, !dbg !11427
  store float* %arraydecay111, float** %uv3co, align 8, !dbg !11428
  %93 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11429
  %screenCoords = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %93, i32 0, i32 41, !dbg !11430
  %94 = load [4 x float]*, [4 x float]** %screenCoords, align 8, !dbg !11430
  %95 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11431
  %v1112 = getelementptr inbounds %struct.MFace, %struct.MFace* %95, i32 0, i32 0, !dbg !11432
  %96 = load i32, i32* %i1, align 4, !dbg !11433
  %idx.ext113 = sext i32 %96 to i64, !dbg !11434
  %add.ptr114 = getelementptr inbounds i32, i32* %v1112, i64 %idx.ext113, !dbg !11434
  %97 = load i32, i32* %add.ptr114, align 4, !dbg !11435
  %idxprom115 = zext i32 %97 to i64, !dbg !11429
  %arrayidx116 = getelementptr inbounds [4 x float], [4 x float]* %94, i64 %idxprom115, !dbg !11429
  %arraydecay117 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx116, i64 0, i64 0, !dbg !11429
  store float* %arraydecay117, float** %v1coSS, align 8, !dbg !11436
  %98 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11437
  %screenCoords118 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %98, i32 0, i32 41, !dbg !11438
  %99 = load [4 x float]*, [4 x float]** %screenCoords118, align 8, !dbg !11438
  %100 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11439
  %v1119 = getelementptr inbounds %struct.MFace, %struct.MFace* %100, i32 0, i32 0, !dbg !11440
  %101 = load i32, i32* %i2, align 4, !dbg !11441
  %idx.ext120 = sext i32 %101 to i64, !dbg !11442
  %add.ptr121 = getelementptr inbounds i32, i32* %v1119, i64 %idx.ext120, !dbg !11442
  %102 = load i32, i32* %add.ptr121, align 4, !dbg !11443
  %idxprom122 = zext i32 %102 to i64, !dbg !11437
  %arrayidx123 = getelementptr inbounds [4 x float], [4 x float]* %99, i64 %idxprom122, !dbg !11437
  %arraydecay124 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx123, i64 0, i64 0, !dbg !11437
  store float* %arraydecay124, float** %v2coSS, align 8, !dbg !11444
  %103 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11445
  %screenCoords125 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %103, i32 0, i32 41, !dbg !11446
  %104 = load [4 x float]*, [4 x float]** %screenCoords125, align 8, !dbg !11446
  %105 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11447
  %v1126 = getelementptr inbounds %struct.MFace, %struct.MFace* %105, i32 0, i32 0, !dbg !11448
  %106 = load i32, i32* %i3, align 4, !dbg !11449
  %idx.ext127 = sext i32 %106 to i64, !dbg !11450
  %add.ptr128 = getelementptr inbounds i32, i32* %v1126, i64 %idx.ext127, !dbg !11450
  %107 = load i32, i32* %add.ptr128, align 4, !dbg !11451
  %idxprom129 = zext i32 %107 to i64, !dbg !11445
  %arrayidx130 = getelementptr inbounds [4 x float], [4 x float]* %104, i64 %idxprom129, !dbg !11445
  %arraydecay131 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx130, i64 0, i64 0, !dbg !11445
  store float* %arraydecay131, float** %v3coSS, align 8, !dbg !11452
  %108 = load i8, i8* %is_ortho, align 1, !dbg !11453
  %109 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !11454
  %110 = load float*, float** %v1coSS, align 8, !dbg !11455
  %111 = load float*, float** %v2coSS, align 8, !dbg !11456
  %112 = load float*, float** %v3coSS, align 8, !dbg !11457
  %113 = load float*, float** %uv1co, align 8, !dbg !11458
  %114 = load float*, float** %uv2co, align 8, !dbg !11459
  %115 = load float*, float** %uv3co, align 8, !dbg !11460
  %arraydecay132 = getelementptr inbounds [8 x [2 x float]], [8 x [2 x float]]* %uv_clip, i64 0, i64 0, !dbg !11461
  call void @project_bucket_clip_face(i8 zeroext %108, %struct.rctf* %109, float* %110, float* %111, float* %112, float* %113, float* %114, float* %115, [2 x float]* %arraydecay132, i32* %uv_clip_tot), !dbg !11462
  %arraydecay133 = getelementptr inbounds [8 x [2 x float]], [8 x [2 x float]]* %uv_clip, i64 0, i64 0, !dbg !11463
  %116 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11465
  %x134 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %116, i32 0, i32 2, !dbg !11466
  %117 = load i32, i32* %x134, align 8, !dbg !11466
  %118 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11467
  %y135 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %118, i32 0, i32 3, !dbg !11468
  %119 = load i32, i32* %y135, align 4, !dbg !11468
  %120 = load i32, i32* %uv_clip_tot, align 4, !dbg !11469
  %call = call zeroext i8 @pixel_bounds_array([2 x float]* %arraydecay133, %struct.rcti* %bounds_px, i32 %117, i32 %119, i32 %120), !dbg !11470
  %tobool136 = icmp ne i8 %call, 0, !dbg !11470
  br i1 %tobool136, label %if.then137, label %if.end314, !dbg !11471

if.then137:                                       ; preds = %if.end102
  %121 = load i16, i16* %clamp_u.addr, align 2, !dbg !11472
  %tobool138 = icmp ne i16 %121, 0, !dbg !11472
  br i1 %tobool138, label %if.then139, label %if.end168, !dbg !11475

if.then139:                                       ; preds = %if.then137
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 0, !dbg !11476
  %122 = load i32, i32* %xmin, align 4, !dbg !11476
  %cmp140 = icmp slt i32 %122, 0, !dbg !11476
  br i1 %cmp140, label %if.then142, label %if.else144, !dbg !11480

if.then142:                                       ; preds = %if.then139
  %xmin143 = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 0, !dbg !11476
  store i32 0, i32* %xmin143, align 4, !dbg !11476
  br label %if.end153, !dbg !11476

if.else144:                                       ; preds = %if.then139
  %xmin145 = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 0, !dbg !11481
  %123 = load i32, i32* %xmin145, align 4, !dbg !11481
  %124 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11481
  %x146 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %124, i32 0, i32 2, !dbg !11481
  %125 = load i32, i32* %x146, align 8, !dbg !11481
  %cmp147 = icmp sgt i32 %123, %125, !dbg !11481
  br i1 %cmp147, label %if.then149, label %if.end152, !dbg !11476

if.then149:                                       ; preds = %if.else144
  %126 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11481
  %x150 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %126, i32 0, i32 2, !dbg !11481
  %127 = load i32, i32* %x150, align 8, !dbg !11481
  %xmin151 = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 0, !dbg !11481
  store i32 %127, i32* %xmin151, align 4, !dbg !11481
  br label %if.end152, !dbg !11481

if.end152:                                        ; preds = %if.then149, %if.else144
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then142
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 1, !dbg !11483
  %128 = load i32, i32* %xmax, align 4, !dbg !11483
  %cmp154 = icmp slt i32 %128, 0, !dbg !11483
  br i1 %cmp154, label %if.then156, label %if.else158, !dbg !11486

if.then156:                                       ; preds = %if.end153
  %xmax157 = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 1, !dbg !11483
  store i32 0, i32* %xmax157, align 4, !dbg !11483
  br label %if.end167, !dbg !11483

if.else158:                                       ; preds = %if.end153
  %xmax159 = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 1, !dbg !11487
  %129 = load i32, i32* %xmax159, align 4, !dbg !11487
  %130 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11487
  %x160 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %130, i32 0, i32 2, !dbg !11487
  %131 = load i32, i32* %x160, align 8, !dbg !11487
  %cmp161 = icmp sgt i32 %129, %131, !dbg !11487
  br i1 %cmp161, label %if.then163, label %if.end166, !dbg !11483

if.then163:                                       ; preds = %if.else158
  %132 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11487
  %x164 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %132, i32 0, i32 2, !dbg !11487
  %133 = load i32, i32* %x164, align 8, !dbg !11487
  %xmax165 = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 1, !dbg !11487
  store i32 %133, i32* %xmax165, align 4, !dbg !11487
  br label %if.end166, !dbg !11487

if.end166:                                        ; preds = %if.then163, %if.else158
  br label %if.end167

if.end167:                                        ; preds = %if.end166, %if.then156
  br label %if.end168, !dbg !11489

if.end168:                                        ; preds = %if.end167, %if.then137
  %134 = load i16, i16* %clamp_v.addr, align 2, !dbg !11490
  %tobool169 = icmp ne i16 %134, 0, !dbg !11490
  br i1 %tobool169, label %if.then170, label %if.end199, !dbg !11492

if.then170:                                       ; preds = %if.end168
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 2, !dbg !11493
  %135 = load i32, i32* %ymin, align 4, !dbg !11493
  %cmp171 = icmp slt i32 %135, 0, !dbg !11493
  br i1 %cmp171, label %if.then173, label %if.else175, !dbg !11497

if.then173:                                       ; preds = %if.then170
  %ymin174 = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 2, !dbg !11493
  store i32 0, i32* %ymin174, align 4, !dbg !11493
  br label %if.end184, !dbg !11493

if.else175:                                       ; preds = %if.then170
  %ymin176 = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 2, !dbg !11498
  %136 = load i32, i32* %ymin176, align 4, !dbg !11498
  %137 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11498
  %y177 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %137, i32 0, i32 3, !dbg !11498
  %138 = load i32, i32* %y177, align 4, !dbg !11498
  %cmp178 = icmp sgt i32 %136, %138, !dbg !11498
  br i1 %cmp178, label %if.then180, label %if.end183, !dbg !11493

if.then180:                                       ; preds = %if.else175
  %139 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11498
  %y181 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %139, i32 0, i32 3, !dbg !11498
  %140 = load i32, i32* %y181, align 4, !dbg !11498
  %ymin182 = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 2, !dbg !11498
  store i32 %140, i32* %ymin182, align 4, !dbg !11498
  br label %if.end183, !dbg !11498

if.end183:                                        ; preds = %if.then180, %if.else175
  br label %if.end184

if.end184:                                        ; preds = %if.end183, %if.then173
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 3, !dbg !11500
  %141 = load i32, i32* %ymax, align 4, !dbg !11500
  %cmp185 = icmp slt i32 %141, 0, !dbg !11500
  br i1 %cmp185, label %if.then187, label %if.else189, !dbg !11503

if.then187:                                       ; preds = %if.end184
  %ymax188 = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 3, !dbg !11500
  store i32 0, i32* %ymax188, align 4, !dbg !11500
  br label %if.end198, !dbg !11500

if.else189:                                       ; preds = %if.end184
  %ymax190 = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 3, !dbg !11504
  %142 = load i32, i32* %ymax190, align 4, !dbg !11504
  %143 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11504
  %y191 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %143, i32 0, i32 3, !dbg !11504
  %144 = load i32, i32* %y191, align 4, !dbg !11504
  %cmp192 = icmp sgt i32 %142, %144, !dbg !11504
  br i1 %cmp192, label %if.then194, label %if.end197, !dbg !11500

if.then194:                                       ; preds = %if.else189
  %145 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11504
  %y195 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %145, i32 0, i32 3, !dbg !11504
  %146 = load i32, i32* %y195, align 4, !dbg !11504
  %ymax196 = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 3, !dbg !11504
  store i32 %146, i32* %ymax196, align 4, !dbg !11504
  br label %if.end197, !dbg !11504

if.end197:                                        ; preds = %if.then194, %if.else189
  br label %if.end198

if.end198:                                        ; preds = %if.end197, %if.then187
  br label %if.end199, !dbg !11506

if.end199:                                        ; preds = %if.end198, %if.end168
  store i32 0, i32* %has_isect, align 4, !dbg !11507
  %ymin200 = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 2, !dbg !11508
  %147 = load i32, i32* %ymin200, align 4, !dbg !11508
  store i32 %147, i32* %y, align 4, !dbg !11510
  br label %for.cond, !dbg !11511

for.cond:                                         ; preds = %for.inc311, %if.end199
  %148 = load i32, i32* %y, align 4, !dbg !11512
  %ymax201 = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 3, !dbg !11514
  %149 = load i32, i32* %ymax201, align 4, !dbg !11514
  %cmp202 = icmp slt i32 %148, %149, !dbg !11515
  br i1 %cmp202, label %for.body, label %for.end313, !dbg !11516

for.body:                                         ; preds = %for.cond
  %150 = load i32, i32* %y, align 4, !dbg !11517
  %conv204 = sitofp i32 %150 to float, !dbg !11519
  %151 = load float, float* %ibuf_yf, align 4, !dbg !11520
  %div205 = fdiv float %conv204, %151, !dbg !11521
  %arrayidx206 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !11522
  store float %div205, float* %arrayidx206, align 4, !dbg !11523
  store i32 0, i32* %has_x_isect, align 4, !dbg !11524
  %xmin207 = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 0, !dbg !11525
  %152 = load i32, i32* %xmin207, align 4, !dbg !11525
  store i32 %152, i32* %x12, align 4, !dbg !11527
  br label %for.cond208, !dbg !11528

for.cond208:                                      ; preds = %for.inc, %for.body
  %153 = load i32, i32* %x12, align 4, !dbg !11529
  %xmax209 = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 1, !dbg !11531
  %154 = load i32, i32* %xmax209, align 4, !dbg !11531
  %cmp210 = icmp slt i32 %153, %154, !dbg !11532
  br i1 %cmp210, label %for.body212, label %for.end, !dbg !11533

for.body212:                                      ; preds = %for.cond208
  %155 = load i32, i32* %x12, align 4, !dbg !11534
  %conv213 = sitofp i32 %155 to float, !dbg !11536
  %156 = load float, float* %ibuf_xf, align 4, !dbg !11537
  %div214 = fdiv float %conv213, %156, !dbg !11538
  %arrayidx215 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !11539
  store float %div214, float* %arrayidx215, align 4, !dbg !11540
  %157 = load i8, i8* %do_backfacecull, align 1, !dbg !11541
  %conv216 = zext i8 %157 to i32, !dbg !11541
  %cmp217 = icmp eq i32 %conv216, 1, !dbg !11543
  br i1 %cmp217, label %land.lhs.true, label %lor.lhs.false, !dbg !11544

land.lhs.true:                                    ; preds = %for.body212
  %arraydecay219 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !11545
  %arraydecay220 = getelementptr inbounds [8 x [2 x float]], [8 x [2 x float]]* %uv_clip, i64 0, i64 0, !dbg !11546
  %158 = load i32, i32* %uv_clip_tot, align 4, !dbg !11547
  %call221 = call zeroext i8 @IsectPoly2Df(float* %arraydecay219, [2 x float]* %arraydecay220, i32 %158), !dbg !11548
  %conv222 = zext i8 %call221 to i32, !dbg !11548
  %tobool223 = icmp ne i32 %conv222, 0, !dbg !11548
  br i1 %tobool223, label %if.then233, label %lor.lhs.false, !dbg !11549

lor.lhs.false:                                    ; preds = %land.lhs.true, %for.body212
  %159 = load i8, i8* %do_backfacecull, align 1, !dbg !11550
  %conv224 = zext i8 %159 to i32, !dbg !11550
  %cmp225 = icmp eq i32 %conv224, 0, !dbg !11551
  br i1 %cmp225, label %land.lhs.true227, label %if.else306, !dbg !11552

land.lhs.true227:                                 ; preds = %lor.lhs.false
  %arraydecay228 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !11553
  %arraydecay229 = getelementptr inbounds [8 x [2 x float]], [8 x [2 x float]]* %uv_clip, i64 0, i64 0, !dbg !11554
  %160 = load i32, i32* %uv_clip_tot, align 4, !dbg !11555
  %call230 = call zeroext i8 @IsectPoly2Df_twoside(float* %arraydecay228, [2 x float]* %arraydecay229, i32 %160), !dbg !11556
  %conv231 = zext i8 %call230 to i32, !dbg !11556
  %tobool232 = icmp ne i32 %conv231, 0, !dbg !11556
  br i1 %tobool232, label %if.then233, label %if.else306, !dbg !11557

if.then233:                                       ; preds = %land.lhs.true227, %land.lhs.true
  store i32 1, i32* %has_isect, align 4, !dbg !11558
  store i32 1, i32* %has_x_isect, align 4, !dbg !11560
  %161 = load i8, i8* %is_ortho, align 1, !dbg !11561
  %tobool234 = icmp ne i8 %161, 0, !dbg !11561
  br i1 %tobool234, label %if.then235, label %if.else239, !dbg !11563

if.then235:                                       ; preds = %if.then233
  %arraydecay236 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !11564
  %162 = load float*, float** %v1coSS, align 8, !dbg !11565
  %163 = load float*, float** %v2coSS, align 8, !dbg !11566
  %164 = load float*, float** %v3coSS, align 8, !dbg !11567
  %165 = load float*, float** %uv1co, align 8, !dbg !11568
  %166 = load float*, float** %uv2co, align 8, !dbg !11569
  %167 = load float*, float** %uv3co, align 8, !dbg !11570
  %arraydecay237 = getelementptr inbounds [4 x float], [4 x float]* %pixelScreenCo, i64 0, i64 0, !dbg !11571
  %arraydecay238 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !11572
  call void @screen_px_from_ortho(float* %arraydecay236, float* %162, float* %163, float* %164, float* %165, float* %166, float* %167, float* %arraydecay237, float* %arraydecay238), !dbg !11573
  br label %if.end243, !dbg !11573

if.else239:                                       ; preds = %if.then233
  %arraydecay240 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !11574
  %168 = load float*, float** %v1coSS, align 8, !dbg !11575
  %169 = load float*, float** %v2coSS, align 8, !dbg !11576
  %170 = load float*, float** %v3coSS, align 8, !dbg !11577
  %171 = load float*, float** %uv1co, align 8, !dbg !11578
  %172 = load float*, float** %uv2co, align 8, !dbg !11579
  %173 = load float*, float** %uv3co, align 8, !dbg !11580
  %arraydecay241 = getelementptr inbounds [4 x float], [4 x float]* %pixelScreenCo, i64 0, i64 0, !dbg !11581
  %arraydecay242 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !11582
  call void @screen_px_from_persp(float* %arraydecay240, float* %168, float* %169, float* %170, float* %171, float* %172, float* %173, float* %arraydecay241, float* %arraydecay242), !dbg !11583
  br label %if.end243

if.end243:                                        ; preds = %if.else239, %if.then235
  %174 = load i8, i8* %do_clip, align 1, !dbg !11584
  %conv244 = zext i8 %174 to i32, !dbg !11584
  %tobool245 = icmp ne i32 %conv244, 0, !dbg !11584
  br i1 %tobool245, label %if.then249, label %lor.lhs.false246, !dbg !11586

lor.lhs.false246:                                 ; preds = %if.end243
  %175 = load i8, i8* %do_3d_mapping, align 1, !dbg !11587
  %conv247 = zext i8 %175 to i32, !dbg !11587
  %tobool248 = icmp ne i32 %conv247, 0, !dbg !11587
  br i1 %tobool248, label %if.then249, label %if.end286, !dbg !11588

if.then249:                                       ; preds = %lor.lhs.false246, %if.end243
  %arraydecay250 = getelementptr inbounds [3 x float], [3 x float]* %wco, i64 0, i64 0, !dbg !11589
  %176 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11591
  %dm_mvert251 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %176, i32 0, i32 18, !dbg !11592
  %177 = load %struct.MVert*, %struct.MVert** %dm_mvert251, align 8, !dbg !11592
  %178 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11593
  %v1252 = getelementptr inbounds %struct.MFace, %struct.MFace* %178, i32 0, i32 0, !dbg !11594
  %179 = load i32, i32* %i1, align 4, !dbg !11595
  %idx.ext253 = sext i32 %179 to i64, !dbg !11596
  %add.ptr254 = getelementptr inbounds i32, i32* %v1252, i64 %idx.ext253, !dbg !11596
  %180 = load i32, i32* %add.ptr254, align 4, !dbg !11597
  %idxprom255 = zext i32 %180 to i64, !dbg !11591
  %arrayidx256 = getelementptr inbounds %struct.MVert, %struct.MVert* %177, i64 %idxprom255, !dbg !11591
  %co257 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx256, i32 0, i32 0, !dbg !11598
  %arraydecay258 = getelementptr inbounds [3 x float], [3 x float]* %co257, i64 0, i64 0, !dbg !11591
  %181 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11599
  %dm_mvert259 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %181, i32 0, i32 18, !dbg !11600
  %182 = load %struct.MVert*, %struct.MVert** %dm_mvert259, align 8, !dbg !11600
  %183 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11601
  %v1260 = getelementptr inbounds %struct.MFace, %struct.MFace* %183, i32 0, i32 0, !dbg !11602
  %184 = load i32, i32* %i2, align 4, !dbg !11603
  %idx.ext261 = sext i32 %184 to i64, !dbg !11604
  %add.ptr262 = getelementptr inbounds i32, i32* %v1260, i64 %idx.ext261, !dbg !11604
  %185 = load i32, i32* %add.ptr262, align 4, !dbg !11605
  %idxprom263 = zext i32 %185 to i64, !dbg !11599
  %arrayidx264 = getelementptr inbounds %struct.MVert, %struct.MVert* %182, i64 %idxprom263, !dbg !11599
  %co265 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx264, i32 0, i32 0, !dbg !11606
  %arraydecay266 = getelementptr inbounds [3 x float], [3 x float]* %co265, i64 0, i64 0, !dbg !11599
  %186 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11607
  %dm_mvert267 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %186, i32 0, i32 18, !dbg !11608
  %187 = load %struct.MVert*, %struct.MVert** %dm_mvert267, align 8, !dbg !11608
  %188 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11609
  %v1268 = getelementptr inbounds %struct.MFace, %struct.MFace* %188, i32 0, i32 0, !dbg !11610
  %189 = load i32, i32* %i3, align 4, !dbg !11611
  %idx.ext269 = sext i32 %189 to i64, !dbg !11612
  %add.ptr270 = getelementptr inbounds i32, i32* %v1268, i64 %idx.ext269, !dbg !11612
  %190 = load i32, i32* %add.ptr270, align 4, !dbg !11613
  %idxprom271 = zext i32 %190 to i64, !dbg !11607
  %arrayidx272 = getelementptr inbounds %struct.MVert, %struct.MVert* %187, i64 %idxprom271, !dbg !11607
  %co273 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx272, i32 0, i32 0, !dbg !11614
  %arraydecay274 = getelementptr inbounds [3 x float], [3 x float]* %co273, i64 0, i64 0, !dbg !11607
  %arraydecay275 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !11615
  call void @interp_v3_v3v3v3(float* %arraydecay250, float* %arraydecay258, float* %arraydecay266, float* %arraydecay274, float* %arraydecay275), !dbg !11616
  %191 = load i8, i8* %do_clip, align 1, !dbg !11617
  %conv276 = zext i8 %191 to i32, !dbg !11617
  %tobool277 = icmp ne i32 %conv276, 0, !dbg !11617
  br i1 %tobool277, label %land.lhs.true278, label %if.end285, !dbg !11619

land.lhs.true278:                                 ; preds = %if.then249
  %192 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11620
  %rv3d279 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %192, i32 0, i32 1, !dbg !11621
  %193 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d279, align 8, !dbg !11621
  %arraydecay280 = getelementptr inbounds [3 x float], [3 x float]* %wco, i64 0, i64 0, !dbg !11622
  %call281 = call zeroext i8 @ED_view3d_clipping_test(%struct.RegionView3D* %193, float* %arraydecay280, i8 zeroext 1), !dbg !11623
  %conv282 = zext i8 %call281 to i32, !dbg !11623
  %tobool283 = icmp ne i32 %conv282, 0, !dbg !11623
  br i1 %tobool283, label %if.then284, label %if.end285, !dbg !11624

if.then284:                                       ; preds = %land.lhs.true278
  br label %for.inc, !dbg !11625

if.end285:                                        ; preds = %land.lhs.true278, %if.then249
  br label %if.end286, !dbg !11627

if.end286:                                        ; preds = %if.end285, %lor.lhs.false246
  %194 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11628
  %do_occlude = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %194, i32 0, i32 53, !dbg !11630
  %195 = load i8, i8* %do_occlude, align 1, !dbg !11630
  %conv287 = zext i8 %195 to i32, !dbg !11628
  %cmp288 = icmp eq i32 %conv287, 0, !dbg !11631
  br i1 %cmp288, label %if.then294, label %lor.lhs.false290, !dbg !11632

lor.lhs.false290:                                 ; preds = %if.end286
  %196 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11633
  %197 = load %struct.LinkNode*, %struct.LinkNode** %bucketFaceNodes, align 8, !dbg !11634
  %198 = load i32, i32* %face_index.addr, align 4, !dbg !11635
  %arraydecay291 = getelementptr inbounds [4 x float], [4 x float]* %pixelScreenCo, i64 0, i64 0, !dbg !11636
  %call292 = call zeroext i8 @project_bucket_point_occluded(%struct.ProjPaintState* %196, %struct.LinkNode* %197, i32 %198, float* %arraydecay291), !dbg !11637
  %tobool293 = icmp ne i8 %call292, 0, !dbg !11637
  br i1 %tobool293, label %if.end305, label %if.then294, !dbg !11638

if.then294:                                       ; preds = %lor.lhs.false290, %if.end286
  %199 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11639
  %200 = load i32, i32* %face_index.addr, align 4, !dbg !11641
  %201 = load i32, i32* %side, align 4, !dbg !11642
  %arraydecay295 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !11643
  %call296 = call float @project_paint_uvpixel_mask(%struct.ProjPaintState* %199, i32 %200, i32 %201, float* %arraydecay295), !dbg !11644
  store float %call296, float* %mask, align 4, !dbg !11645
  %202 = load float, float* %mask, align 4, !dbg !11646
  %cmp297 = fcmp ogt float %202, 0.000000e+00, !dbg !11648
  br i1 %cmp297, label %if.then299, label %if.end304, !dbg !11649

if.then299:                                       ; preds = %if.then294
  %203 = load %struct.LinkNode**, %struct.LinkNode*** %bucketPixelNodes, align 8, !dbg !11650
  %204 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11652
  %205 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !11653
  %206 = load i32, i32* %x12, align 4, !dbg !11654
  %207 = load i32, i32* %y, align 4, !dbg !11655
  %208 = load float, float* %mask, align 4, !dbg !11656
  %209 = load i32, i32* %face_index.addr, align 4, !dbg !11657
  %arraydecay300 = getelementptr inbounds [4 x float], [4 x float]* %pixelScreenCo, i64 0, i64 0, !dbg !11658
  %arraydecay301 = getelementptr inbounds [3 x float], [3 x float]* %wco, i64 0, i64 0, !dbg !11659
  %210 = load i32, i32* %side, align 4, !dbg !11660
  %arraydecay302 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !11661
  %call303 = call %struct.ProjPixel* @project_paint_uvpixel_init(%struct.ProjPaintState* %204, %struct.MemArena* %205, %struct.TileInfo* %tinf, i32 %206, i32 %207, float %208, i32 %209, float* %arraydecay300, float* %arraydecay301, i32 %210, float* %arraydecay302), !dbg !11662
  %211 = bitcast %struct.ProjPixel* %call303 to i8*, !dbg !11662
  %212 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !11663
  call void @BLI_linklist_prepend_arena(%struct.LinkNode** %203, i8* %211, %struct.MemArena* %212), !dbg !11664
  br label %if.end304, !dbg !11665

if.end304:                                        ; preds = %if.then299, %if.then294
  br label %if.end305, !dbg !11666

if.end305:                                        ; preds = %if.end304, %lor.lhs.false290
  br label %if.end310, !dbg !11667

if.else306:                                       ; preds = %land.lhs.true227, %lor.lhs.false
  %213 = load i32, i32* %has_x_isect, align 4, !dbg !11668
  %tobool307 = icmp ne i32 %213, 0, !dbg !11668
  br i1 %tobool307, label %if.then308, label %if.end309, !dbg !11670

if.then308:                                       ; preds = %if.else306
  br label %for.end, !dbg !11671

if.end309:                                        ; preds = %if.else306
  br label %if.end310

if.end310:                                        ; preds = %if.end309, %if.end305
  br label %for.inc, !dbg !11673

for.inc:                                          ; preds = %if.end310, %if.then284
  %214 = load i32, i32* %x12, align 4, !dbg !11674
  %inc = add nsw i32 %214, 1, !dbg !11674
  store i32 %inc, i32* %x12, align 4, !dbg !11674
  br label %for.cond208, !dbg !11675, !llvm.loop !11676

for.end:                                          ; preds = %if.then308, %for.cond208
  br label %for.inc311, !dbg !11678

for.inc311:                                       ; preds = %for.end
  %215 = load i32, i32* %y, align 4, !dbg !11679
  %inc312 = add nsw i32 %215, 1, !dbg !11679
  store i32 %inc312, i32* %y, align 4, !dbg !11679
  br label %for.cond, !dbg !11680, !llvm.loop !11681

for.end313:                                       ; preds = %for.cond
  br label %if.end314, !dbg !11683

if.end314:                                        ; preds = %for.end313, %if.end102
  br label %do.cond, !dbg !11684

do.cond:                                          ; preds = %if.end314
  %216 = load i32, i32* %side, align 4, !dbg !11685
  %dec = add nsw i32 %216, -1, !dbg !11685
  store i32 %dec, i32* %side, align 4, !dbg !11685
  %tobool315 = icmp ne i32 %216, 0, !dbg !11684
  br i1 %tobool315, label %do.body, label %do.end, !dbg !11684, !llvm.loop !11686

do.end:                                           ; preds = %do.cond
  %217 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11688
  %seam_bleed_px = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %217, i32 0, i32 65, !dbg !11690
  %218 = load float, float* %seam_bleed_px, align 8, !dbg !11690
  %cmp316 = fcmp ogt float %218, 0.000000e+00, !dbg !11691
  br i1 %cmp316, label %if.then318, label %if.end798, !dbg !11692

if.then318:                                       ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %face_seam_flag, metadata !11693, metadata !DIExpression()), !dbg !11695
  %219 = load i8, i8* %threaded, align 1, !dbg !11696
  %tobool319 = icmp ne i8 %219, 0, !dbg !11696
  br i1 %tobool319, label %if.then320, label %if.end321, !dbg !11698

if.then320:                                       ; preds = %if.then318
  call void @BLI_lock_thread(i32 3), !dbg !11699
  br label %if.end321, !dbg !11699

if.end321:                                        ; preds = %if.then320, %if.then318
  %220 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11700
  %faceSeamFlags = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %220, i32 0, i32 31, !dbg !11701
  %221 = load i8*, i8** %faceSeamFlags, align 8, !dbg !11701
  %222 = load i32, i32* %face_index.addr, align 4, !dbg !11702
  %idxprom322 = sext i32 %222 to i64, !dbg !11700
  %arrayidx323 = getelementptr inbounds i8, i8* %221, i64 %idxprom322, !dbg !11700
  %223 = load i8, i8* %arrayidx323, align 1, !dbg !11700
  %conv324 = zext i8 %223 to i32, !dbg !11700
  store i32 %conv324, i32* %face_seam_flag, align 4, !dbg !11703
  %224 = load i32, i32* %face_seam_flag, align 4, !dbg !11704
  %and325 = and i32 %224, 17, !dbg !11706
  %cmp326 = icmp eq i32 %and325, 0, !dbg !11707
  br i1 %cmp326, label %if.then340, label %lor.lhs.false328, !dbg !11708

lor.lhs.false328:                                 ; preds = %if.end321
  %225 = load i32, i32* %face_seam_flag, align 4, !dbg !11709
  %and329 = and i32 %225, 34, !dbg !11710
  %cmp330 = icmp eq i32 %and329, 0, !dbg !11711
  br i1 %cmp330, label %if.then340, label %lor.lhs.false332, !dbg !11712

lor.lhs.false332:                                 ; preds = %lor.lhs.false328
  %226 = load i32, i32* %face_seam_flag, align 4, !dbg !11713
  %and333 = and i32 %226, 68, !dbg !11714
  %cmp334 = icmp eq i32 %and333, 0, !dbg !11715
  br i1 %cmp334, label %if.then340, label %lor.lhs.false336, !dbg !11716

lor.lhs.false336:                                 ; preds = %lor.lhs.false332
  %227 = load i32, i32* %face_seam_flag, align 4, !dbg !11717
  %and337 = and i32 %227, 136, !dbg !11718
  %cmp338 = icmp eq i32 %and337, 0, !dbg !11719
  br i1 %cmp338, label %if.then340, label %if.end346, !dbg !11720

if.then340:                                       ; preds = %lor.lhs.false336, %lor.lhs.false332, %lor.lhs.false328, %if.end321
  %228 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11721
  %229 = load i32, i32* %face_index.addr, align 4, !dbg !11723
  %230 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11724
  %v4341 = getelementptr inbounds %struct.MFace, %struct.MFace* %230, i32 0, i32 3, !dbg !11725
  %231 = load i32, i32* %v4341, align 4, !dbg !11725
  call void @project_face_seams_init(%struct.ProjPaintState* %228, i32 %229, i32 %231), !dbg !11726
  %232 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11727
  %faceSeamFlags342 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %232, i32 0, i32 31, !dbg !11728
  %233 = load i8*, i8** %faceSeamFlags342, align 8, !dbg !11728
  %234 = load i32, i32* %face_index.addr, align 4, !dbg !11729
  %idxprom343 = sext i32 %234 to i64, !dbg !11727
  %arrayidx344 = getelementptr inbounds i8, i8* %233, i64 %idxprom343, !dbg !11727
  %235 = load i8, i8* %arrayidx344, align 1, !dbg !11727
  %conv345 = zext i8 %235 to i32, !dbg !11727
  store i32 %conv345, i32* %face_seam_flag, align 4, !dbg !11730
  br label %if.end346, !dbg !11731

if.end346:                                        ; preds = %if.then340, %lor.lhs.false336
  %236 = load i32, i32* %face_seam_flag, align 4, !dbg !11732
  %and347 = and i32 %236, 15, !dbg !11734
  %cmp348 = icmp eq i32 %and347, 0, !dbg !11735
  br i1 %cmp348, label %if.then350, label %if.else354, !dbg !11736

if.then350:                                       ; preds = %if.end346
  %237 = load i8, i8* %threaded, align 1, !dbg !11737
  %tobool351 = icmp ne i8 %237, 0, !dbg !11737
  br i1 %tobool351, label %if.then352, label %if.end353, !dbg !11740

if.then352:                                       ; preds = %if.then350
  call void @BLI_unlock_thread(i32 3), !dbg !11741
  br label %if.end353, !dbg !11741

if.end353:                                        ; preds = %if.then352, %if.then350
  br label %if.end797, !dbg !11742

if.else354:                                       ; preds = %if.end346
  call void @llvm.dbg.declare(metadata [2 x float]** %outset_uv, metadata !11743, metadata !DIExpression()), !dbg !11746
  %238 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11747
  %faceSeamUVs = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %238, i32 0, i32 33, !dbg !11748
  %239 = load [4 x [2 x float]]*, [4 x [2 x float]]** %faceSeamUVs, align 8, !dbg !11748
  %240 = load i32, i32* %face_index.addr, align 4, !dbg !11749
  %idxprom355 = sext i32 %240 to i64, !dbg !11747
  %arrayidx356 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %239, i64 %idxprom355, !dbg !11747
  %arraydecay357 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %arrayidx356, i64 0, i64 0, !dbg !11747
  store [2 x float]* %arraydecay357, [2 x float]** %outset_uv, align 8, !dbg !11746
  call void @llvm.dbg.declare(metadata [4 x [3 x float]]* %insetCos, metadata !11750, metadata !DIExpression()), !dbg !11753
  call void @llvm.dbg.declare(metadata [4 x float*]* %vCoSS, metadata !11754, metadata !DIExpression()), !dbg !11755
  call void @llvm.dbg.declare(metadata [2 x [2 x float]]* %bucket_clip_edges, metadata !11756, metadata !DIExpression()), !dbg !11759
  call void @llvm.dbg.declare(metadata [2 x [3 x float]]* %edge_verts_inset_clip, metadata !11760, metadata !DIExpression()), !dbg !11763
  call void @llvm.dbg.declare(metadata i32* %fidx1, metadata !11764, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.declare(metadata i32* %fidx2, metadata !11766, metadata !DIExpression()), !dbg !11767
  call void @llvm.dbg.declare(metadata [4 x [2 x float]]* %seam_subsection, metadata !11768, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.declare(metadata float* %fac1, metadata !11770, metadata !DIExpression()), !dbg !11771
  call void @llvm.dbg.declare(metadata float* %fac2, metadata !11772, metadata !DIExpression()), !dbg !11773
  call void @llvm.dbg.declare(metadata float* %ftot, metadata !11774, metadata !DIExpression()), !dbg !11775
  %241 = load [2 x float]*, [2 x float]** %outset_uv, align 8, !dbg !11776
  %arrayidx358 = getelementptr inbounds [2 x float], [2 x float]* %241, i64 0, !dbg !11776
  %arrayidx359 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx358, i64 0, i64 0, !dbg !11776
  %242 = load float, float* %arrayidx359, align 4, !dbg !11776
  %cmp360 = fcmp oeq float %242, 0x47EFFFFFE0000000, !dbg !11778
  br i1 %cmp360, label %if.then362, label %if.end371, !dbg !11779

if.then362:                                       ; preds = %if.else354
  %arraydecay363 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 0, !dbg !11780
  %243 = load [2 x float]*, [2 x float]** %outset_uv, align 8, !dbg !11781
  %244 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11782
  %seam_bleed_px364 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %244, i32 0, i32 65, !dbg !11783
  %245 = load float, float* %seam_bleed_px364, align 8, !dbg !11783
  %246 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11784
  %x365 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %246, i32 0, i32 2, !dbg !11785
  %247 = load i32, i32* %x365, align 8, !dbg !11785
  %248 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11786
  %y366 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %248, i32 0, i32 3, !dbg !11787
  %249 = load i32, i32* %y366, align 4, !dbg !11787
  %250 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11788
  %v4367 = getelementptr inbounds %struct.MFace, %struct.MFace* %250, i32 0, i32 3, !dbg !11789
  %251 = load i32, i32* %v4367, align 4, !dbg !11789
  %cmp368 = icmp ne i32 %251, 0, !dbg !11790
  %conv369 = zext i1 %cmp368 to i32, !dbg !11790
  %conv370 = trunc i32 %conv369 to i8, !dbg !11788
  call void @uv_image_outset([2 x float]* %arraydecay363, [2 x float]* %243, float %245, i32 %247, i32 %249, i8 zeroext %conv370), !dbg !11791
  br label %if.end371, !dbg !11791

if.end371:                                        ; preds = %if.then362, %if.else354
  %252 = load i8, i8* %threaded, align 1, !dbg !11792
  %tobool372 = icmp ne i8 %252, 0, !dbg !11792
  br i1 %tobool372, label %if.then373, label %if.end374, !dbg !11794

if.then373:                                       ; preds = %if.end371
  call void @BLI_unlock_thread(i32 3), !dbg !11795
  br label %if.end374, !dbg !11795

if.end374:                                        ; preds = %if.then373, %if.end371
  %253 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11796
  %screenCoords375 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %253, i32 0, i32 41, !dbg !11797
  %254 = load [4 x float]*, [4 x float]** %screenCoords375, align 8, !dbg !11797
  %255 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11798
  %v1376 = getelementptr inbounds %struct.MFace, %struct.MFace* %255, i32 0, i32 0, !dbg !11799
  %256 = load i32, i32* %v1376, align 4, !dbg !11799
  %idxprom377 = zext i32 %256 to i64, !dbg !11796
  %arrayidx378 = getelementptr inbounds [4 x float], [4 x float]* %254, i64 %idxprom377, !dbg !11796
  %arraydecay379 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx378, i64 0, i64 0, !dbg !11796
  %arrayidx380 = getelementptr inbounds [4 x float*], [4 x float*]* %vCoSS, i64 0, i64 0, !dbg !11800
  store float* %arraydecay379, float** %arrayidx380, align 16, !dbg !11801
  %257 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11802
  %screenCoords381 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %257, i32 0, i32 41, !dbg !11803
  %258 = load [4 x float]*, [4 x float]** %screenCoords381, align 8, !dbg !11803
  %259 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11804
  %v2382 = getelementptr inbounds %struct.MFace, %struct.MFace* %259, i32 0, i32 1, !dbg !11805
  %260 = load i32, i32* %v2382, align 4, !dbg !11805
  %idxprom383 = zext i32 %260 to i64, !dbg !11802
  %arrayidx384 = getelementptr inbounds [4 x float], [4 x float]* %258, i64 %idxprom383, !dbg !11802
  %arraydecay385 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx384, i64 0, i64 0, !dbg !11802
  %arrayidx386 = getelementptr inbounds [4 x float*], [4 x float*]* %vCoSS, i64 0, i64 1, !dbg !11806
  store float* %arraydecay385, float** %arrayidx386, align 8, !dbg !11807
  %261 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11808
  %screenCoords387 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %261, i32 0, i32 41, !dbg !11809
  %262 = load [4 x float]*, [4 x float]** %screenCoords387, align 8, !dbg !11809
  %263 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11810
  %v3388 = getelementptr inbounds %struct.MFace, %struct.MFace* %263, i32 0, i32 2, !dbg !11811
  %264 = load i32, i32* %v3388, align 4, !dbg !11811
  %idxprom389 = zext i32 %264 to i64, !dbg !11808
  %arrayidx390 = getelementptr inbounds [4 x float], [4 x float]* %262, i64 %idxprom389, !dbg !11808
  %arraydecay391 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx390, i64 0, i64 0, !dbg !11808
  %arrayidx392 = getelementptr inbounds [4 x float*], [4 x float*]* %vCoSS, i64 0, i64 2, !dbg !11812
  store float* %arraydecay391, float** %arrayidx392, align 16, !dbg !11813
  %265 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11814
  %v4393 = getelementptr inbounds %struct.MFace, %struct.MFace* %265, i32 0, i32 3, !dbg !11816
  %266 = load i32, i32* %v4393, align 4, !dbg !11816
  %tobool394 = icmp ne i32 %266, 0, !dbg !11814
  br i1 %tobool394, label %if.then395, label %if.end402, !dbg !11817

if.then395:                                       ; preds = %if.end374
  %267 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !11818
  %screenCoords396 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %267, i32 0, i32 41, !dbg !11819
  %268 = load [4 x float]*, [4 x float]** %screenCoords396, align 8, !dbg !11819
  %269 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11820
  %v4397 = getelementptr inbounds %struct.MFace, %struct.MFace* %269, i32 0, i32 3, !dbg !11821
  %270 = load i32, i32* %v4397, align 4, !dbg !11821
  %idxprom398 = zext i32 %270 to i64, !dbg !11818
  %arrayidx399 = getelementptr inbounds [4 x float], [4 x float]* %268, i64 %idxprom398, !dbg !11818
  %arraydecay400 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx399, i64 0, i64 0, !dbg !11818
  %arrayidx401 = getelementptr inbounds [4 x float*], [4 x float*]* %vCoSS, i64 0, i64 3, !dbg !11822
  store float* %arraydecay400, float** %arrayidx401, align 8, !dbg !11823
  br label %if.end402, !dbg !11822

if.end402:                                        ; preds = %if.then395, %if.end374
  %271 = load i8, i8* %is_ortho, align 1, !dbg !11824
  %tobool403 = icmp ne i8 %271, 0, !dbg !11824
  br i1 %tobool403, label %if.then404, label %if.else414, !dbg !11826

if.then404:                                       ; preds = %if.end402
  %272 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11827
  %v4405 = getelementptr inbounds %struct.MFace, %struct.MFace* %272, i32 0, i32 3, !dbg !11830
  %273 = load i32, i32* %v4405, align 4, !dbg !11830
  %tobool406 = icmp ne i32 %273, 0, !dbg !11827
  br i1 %tobool406, label %if.then407, label %if.else410, !dbg !11831

if.then407:                                       ; preds = %if.then404
  %arraydecay408 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %insetCos, i64 0, i64 0, !dbg !11832
  %arraydecay409 = getelementptr inbounds [4 x float*], [4 x float*]* %vCoSS, i64 0, i64 0, !dbg !11833
  call void @scale_quad([3 x float]* %arraydecay408, float** %arraydecay409, float 0x3FEFAE1480000000), !dbg !11834
  br label %if.end413, !dbg !11834

if.else410:                                       ; preds = %if.then404
  %arraydecay411 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %insetCos, i64 0, i64 0, !dbg !11835
  %arraydecay412 = getelementptr inbounds [4 x float*], [4 x float*]* %vCoSS, i64 0, i64 0, !dbg !11836
  call void @scale_tri([3 x float]* %arraydecay411, float** %arraydecay412, float 0x3FEFAE1480000000), !dbg !11837
  br label %if.end413

if.end413:                                        ; preds = %if.else410, %if.then407
  br label %if.end424, !dbg !11838

if.else414:                                       ; preds = %if.end402
  %274 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11839
  %v4415 = getelementptr inbounds %struct.MFace, %struct.MFace* %274, i32 0, i32 3, !dbg !11842
  %275 = load i32, i32* %v4415, align 4, !dbg !11842
  %tobool416 = icmp ne i32 %275, 0, !dbg !11839
  br i1 %tobool416, label %if.then417, label %if.else420, !dbg !11843

if.then417:                                       ; preds = %if.else414
  %arraydecay418 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %insetCos, i64 0, i64 0, !dbg !11844
  %arraydecay419 = getelementptr inbounds [4 x float*], [4 x float*]* %vCo, i64 0, i64 0, !dbg !11845
  call void @scale_quad([3 x float]* %arraydecay418, float** %arraydecay419, float 0x3FEFAE1480000000), !dbg !11846
  br label %if.end423, !dbg !11846

if.else420:                                       ; preds = %if.else414
  %arraydecay421 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %insetCos, i64 0, i64 0, !dbg !11847
  %arraydecay422 = getelementptr inbounds [4 x float*], [4 x float*]* %vCo, i64 0, i64 0, !dbg !11848
  call void @scale_tri([3 x float]* %arraydecay421, float** %arraydecay422, float 0x3FEFAE1480000000), !dbg !11849
  br label %if.end423

if.end423:                                        ; preds = %if.else420, %if.then417
  br label %if.end424

if.end424:                                        ; preds = %if.end423, %if.end413
  store i32 0, i32* %side, align 4, !dbg !11850
  store i32 0, i32* %fidx1, align 4, !dbg !11851
  br label %for.cond425, !dbg !11853

for.cond425:                                      ; preds = %for.inc794, %if.end424
  %276 = load i32, i32* %fidx1, align 4, !dbg !11854
  %277 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11856
  %v4426 = getelementptr inbounds %struct.MFace, %struct.MFace* %277, i32 0, i32 3, !dbg !11857
  %278 = load i32, i32* %v4426, align 4, !dbg !11857
  %tobool427 = icmp ne i32 %278, 0, !dbg !11856
  %279 = zext i1 %tobool427 to i64, !dbg !11856
  %cond428 = select i1 %tobool427, i32 4, i32 3, !dbg !11856
  %cmp429 = icmp slt i32 %276, %cond428, !dbg !11858
  br i1 %cmp429, label %for.body431, label %for.end796, !dbg !11859

for.body431:                                      ; preds = %for.cond425
  %280 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11860
  %v4432 = getelementptr inbounds %struct.MFace, %struct.MFace* %280, i32 0, i32 3, !dbg !11863
  %281 = load i32, i32* %v4432, align 4, !dbg !11863
  %tobool433 = icmp ne i32 %281, 0, !dbg !11860
  br i1 %tobool433, label %if.then434, label %if.else442, !dbg !11864

if.then434:                                       ; preds = %for.body431
  %282 = load i32, i32* %fidx1, align 4, !dbg !11865
  %cmp435 = icmp eq i32 %282, 3, !dbg !11866
  br i1 %cmp435, label %cond.true437, label %cond.false438, !dbg !11867

cond.true437:                                     ; preds = %if.then434
  br label %cond.end440, !dbg !11867

cond.false438:                                    ; preds = %if.then434
  %283 = load i32, i32* %fidx1, align 4, !dbg !11868
  %add439 = add nsw i32 %283, 1, !dbg !11869
  br label %cond.end440, !dbg !11867

cond.end440:                                      ; preds = %cond.false438, %cond.true437
  %cond441 = phi i32 [ 0, %cond.true437 ], [ %add439, %cond.false438 ], !dbg !11867
  store i32 %cond441, i32* %fidx2, align 4, !dbg !11870
  br label %if.end450, !dbg !11871

if.else442:                                       ; preds = %for.body431
  %284 = load i32, i32* %fidx1, align 4, !dbg !11872
  %cmp443 = icmp eq i32 %284, 2, !dbg !11873
  br i1 %cmp443, label %cond.true445, label %cond.false446, !dbg !11874

cond.true445:                                     ; preds = %if.else442
  br label %cond.end448, !dbg !11874

cond.false446:                                    ; preds = %if.else442
  %285 = load i32, i32* %fidx1, align 4, !dbg !11875
  %add447 = add nsw i32 %285, 1, !dbg !11876
  br label %cond.end448, !dbg !11874

cond.end448:                                      ; preds = %cond.false446, %cond.true445
  %cond449 = phi i32 [ 0, %cond.true445 ], [ %add447, %cond.false446 ], !dbg !11874
  store i32 %cond449, i32* %fidx2, align 4, !dbg !11877
  br label %if.end450

if.end450:                                        ; preds = %cond.end448, %cond.end440
  %286 = load i32, i32* %face_seam_flag, align 4, !dbg !11878
  %287 = load i32, i32* %fidx1, align 4, !dbg !11880
  %shl = shl i32 1, %287, !dbg !11881
  %and451 = and i32 %286, %shl, !dbg !11882
  %tobool452 = icmp ne i32 %and451, 0, !dbg !11882
  br i1 %tobool452, label %land.lhs.true453, label %if.end793, !dbg !11883

land.lhs.true453:                                 ; preds = %if.end450
  %288 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !11884
  %289 = load i32, i32* %fidx1, align 4, !dbg !11885
  %idxprom454 = sext i32 %289 to i64, !dbg !11886
  %arrayidx455 = getelementptr inbounds [4 x float*], [4 x float*]* %vCoSS, i64 0, i64 %idxprom454, !dbg !11886
  %290 = load float*, float** %arrayidx455, align 8, !dbg !11886
  %291 = load i32, i32* %fidx2, align 4, !dbg !11887
  %idxprom456 = sext i32 %291 to i64, !dbg !11888
  %arrayidx457 = getelementptr inbounds [4 x float*], [4 x float*]* %vCoSS, i64 0, i64 %idxprom456, !dbg !11888
  %292 = load float*, float** %arrayidx457, align 8, !dbg !11888
  %arrayidx458 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %bucket_clip_edges, i64 0, i64 0, !dbg !11889
  %arraydecay459 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx458, i64 0, i64 0, !dbg !11889
  %arrayidx460 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %bucket_clip_edges, i64 0, i64 1, !dbg !11890
  %arraydecay461 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx460, i64 0, i64 0, !dbg !11890
  %call462 = call zeroext i8 @line_clip_rect2f(%struct.rctf* %288, float* %290, float* %292, float* %arraydecay459, float* %arraydecay461), !dbg !11891
  %conv463 = zext i8 %call462 to i32, !dbg !11891
  %tobool464 = icmp ne i32 %conv463, 0, !dbg !11891
  br i1 %tobool464, label %if.then465, label %if.end793, !dbg !11892

if.then465:                                       ; preds = %land.lhs.true453
  %293 = load i32, i32* %fidx1, align 4, !dbg !11893
  %idxprom466 = sext i32 %293 to i64, !dbg !11895
  %arrayidx467 = getelementptr inbounds [4 x float*], [4 x float*]* %vCoSS, i64 0, i64 %idxprom466, !dbg !11895
  %294 = load float*, float** %arrayidx467, align 8, !dbg !11895
  %295 = load i32, i32* %fidx2, align 4, !dbg !11896
  %idxprom468 = sext i32 %295 to i64, !dbg !11897
  %arrayidx469 = getelementptr inbounds [4 x float*], [4 x float*]* %vCoSS, i64 0, i64 %idxprom468, !dbg !11897
  %296 = load float*, float** %arrayidx469, align 8, !dbg !11897
  %call470 = call float @len_v2v2(float* %294, float* %296), !dbg !11898
  store float %call470, float* %ftot, align 4, !dbg !11899
  %297 = load float, float* %ftot, align 4, !dbg !11900
  %cmp471 = fcmp ogt float %297, 0.000000e+00, !dbg !11902
  br i1 %cmp471, label %if.then473, label %if.end792, !dbg !11903

if.then473:                                       ; preds = %if.then465
  %298 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11904
  %v4474 = getelementptr inbounds %struct.MFace, %struct.MFace* %298, i32 0, i32 3, !dbg !11907
  %299 = load i32, i32* %v4474, align 4, !dbg !11907
  %tobool475 = icmp ne i32 %299, 0, !dbg !11904
  br i1 %tobool475, label %if.then476, label %if.end485, !dbg !11908

if.then476:                                       ; preds = %if.then473
  %300 = load i32, i32* %fidx1, align 4, !dbg !11909
  %cmp477 = icmp eq i32 %300, 2, !dbg !11912
  br i1 %cmp477, label %if.then482, label %lor.lhs.false479, !dbg !11913

lor.lhs.false479:                                 ; preds = %if.then476
  %301 = load i32, i32* %fidx2, align 4, !dbg !11914
  %cmp480 = icmp eq i32 %301, 2, !dbg !11915
  br i1 %cmp480, label %if.then482, label %if.else483, !dbg !11916

if.then482:                                       ; preds = %lor.lhs.false479, %if.then476
  store i32 1, i32* %side, align 4, !dbg !11917
  br label %if.end484, !dbg !11918

if.else483:                                       ; preds = %lor.lhs.false479
  store i32 0, i32* %side, align 4, !dbg !11919
  br label %if.end484

if.end484:                                        ; preds = %if.else483, %if.then482
  br label %if.end485, !dbg !11920

if.end485:                                        ; preds = %if.end484, %if.then473
  %302 = load i32, i32* %fidx1, align 4, !dbg !11921
  %idxprom486 = sext i32 %302 to i64, !dbg !11922
  %arrayidx487 = getelementptr inbounds [4 x float*], [4 x float*]* %vCoSS, i64 0, i64 %idxprom486, !dbg !11922
  %303 = load float*, float** %arrayidx487, align 8, !dbg !11922
  %arrayidx488 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %bucket_clip_edges, i64 0, i64 0, !dbg !11923
  %arraydecay489 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx488, i64 0, i64 0, !dbg !11923
  %call490 = call float @len_v2v2(float* %303, float* %arraydecay489), !dbg !11924
  %304 = load float, float* %ftot, align 4, !dbg !11925
  %div491 = fdiv float %call490, %304, !dbg !11926
  store float %div491, float* %fac1, align 4, !dbg !11927
  %305 = load i32, i32* %fidx1, align 4, !dbg !11928
  %idxprom492 = sext i32 %305 to i64, !dbg !11929
  %arrayidx493 = getelementptr inbounds [4 x float*], [4 x float*]* %vCoSS, i64 0, i64 %idxprom492, !dbg !11929
  %306 = load float*, float** %arrayidx493, align 8, !dbg !11929
  %arrayidx494 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %bucket_clip_edges, i64 0, i64 1, !dbg !11930
  %arraydecay495 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx494, i64 0, i64 0, !dbg !11930
  %call496 = call float @len_v2v2(float* %306, float* %arraydecay495), !dbg !11931
  %307 = load float, float* %ftot, align 4, !dbg !11932
  %div497 = fdiv float %call496, %307, !dbg !11933
  store float %div497, float* %fac2, align 4, !dbg !11934
  %arrayidx498 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %seam_subsection, i64 0, i64 0, !dbg !11935
  %arraydecay499 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx498, i64 0, i64 0, !dbg !11935
  %308 = load i32, i32* %fidx1, align 4, !dbg !11936
  %idxprom500 = sext i32 %308 to i64, !dbg !11937
  %arrayidx501 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 %idxprom500, !dbg !11937
  %arraydecay502 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx501, i64 0, i64 0, !dbg !11937
  %309 = load i32, i32* %fidx2, align 4, !dbg !11938
  %idxprom503 = sext i32 %309 to i64, !dbg !11939
  %arrayidx504 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 %idxprom503, !dbg !11939
  %arraydecay505 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx504, i64 0, i64 0, !dbg !11939
  %310 = load float, float* %fac1, align 4, !dbg !11940
  call void @interp_v2_v2v2(float* %arraydecay499, float* %arraydecay502, float* %arraydecay505, float %310), !dbg !11941
  %arrayidx506 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %seam_subsection, i64 0, i64 1, !dbg !11942
  %arraydecay507 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx506, i64 0, i64 0, !dbg !11942
  %311 = load i32, i32* %fidx1, align 4, !dbg !11943
  %idxprom508 = sext i32 %311 to i64, !dbg !11944
  %arrayidx509 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 %idxprom508, !dbg !11944
  %arraydecay510 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx509, i64 0, i64 0, !dbg !11944
  %312 = load i32, i32* %fidx2, align 4, !dbg !11945
  %idxprom511 = sext i32 %312 to i64, !dbg !11946
  %arrayidx512 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 %idxprom511, !dbg !11946
  %arraydecay513 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx512, i64 0, i64 0, !dbg !11946
  %313 = load float, float* %fac2, align 4, !dbg !11947
  call void @interp_v2_v2v2(float* %arraydecay507, float* %arraydecay510, float* %arraydecay513, float %313), !dbg !11948
  %arrayidx514 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %seam_subsection, i64 0, i64 2, !dbg !11949
  %arraydecay515 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx514, i64 0, i64 0, !dbg !11949
  %314 = load [2 x float]*, [2 x float]** %outset_uv, align 8, !dbg !11950
  %315 = load i32, i32* %fidx1, align 4, !dbg !11951
  %idxprom516 = sext i32 %315 to i64, !dbg !11950
  %arrayidx517 = getelementptr inbounds [2 x float], [2 x float]* %314, i64 %idxprom516, !dbg !11950
  %arraydecay518 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx517, i64 0, i64 0, !dbg !11950
  %316 = load [2 x float]*, [2 x float]** %outset_uv, align 8, !dbg !11952
  %317 = load i32, i32* %fidx2, align 4, !dbg !11953
  %idxprom519 = sext i32 %317 to i64, !dbg !11952
  %arrayidx520 = getelementptr inbounds [2 x float], [2 x float]* %316, i64 %idxprom519, !dbg !11952
  %arraydecay521 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx520, i64 0, i64 0, !dbg !11952
  %318 = load float, float* %fac2, align 4, !dbg !11954
  call void @interp_v2_v2v2(float* %arraydecay515, float* %arraydecay518, float* %arraydecay521, float %318), !dbg !11955
  %arrayidx522 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %seam_subsection, i64 0, i64 3, !dbg !11956
  %arraydecay523 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx522, i64 0, i64 0, !dbg !11956
  %319 = load [2 x float]*, [2 x float]** %outset_uv, align 8, !dbg !11957
  %320 = load i32, i32* %fidx1, align 4, !dbg !11958
  %idxprom524 = sext i32 %320 to i64, !dbg !11957
  %arrayidx525 = getelementptr inbounds [2 x float], [2 x float]* %319, i64 %idxprom524, !dbg !11957
  %arraydecay526 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx525, i64 0, i64 0, !dbg !11957
  %321 = load [2 x float]*, [2 x float]** %outset_uv, align 8, !dbg !11959
  %322 = load i32, i32* %fidx2, align 4, !dbg !11960
  %idxprom527 = sext i32 %322 to i64, !dbg !11959
  %arrayidx528 = getelementptr inbounds [2 x float], [2 x float]* %321, i64 %idxprom527, !dbg !11959
  %arraydecay529 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx528, i64 0, i64 0, !dbg !11959
  %323 = load float, float* %fac1, align 4, !dbg !11961
  call void @interp_v2_v2v2(float* %arraydecay523, float* %arraydecay526, float* %arraydecay529, float %323), !dbg !11962
  %arrayidx530 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %edge_verts_inset_clip, i64 0, i64 0, !dbg !11963
  %arraydecay531 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx530, i64 0, i64 0, !dbg !11963
  %324 = load i32, i32* %fidx1, align 4, !dbg !11964
  %idxprom532 = sext i32 %324 to i64, !dbg !11965
  %arrayidx533 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %insetCos, i64 0, i64 %idxprom532, !dbg !11965
  %arraydecay534 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx533, i64 0, i64 0, !dbg !11965
  %325 = load i32, i32* %fidx2, align 4, !dbg !11966
  %idxprom535 = sext i32 %325 to i64, !dbg !11967
  %arrayidx536 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %insetCos, i64 0, i64 %idxprom535, !dbg !11967
  %arraydecay537 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx536, i64 0, i64 0, !dbg !11967
  %326 = load float, float* %fac1, align 4, !dbg !11968
  call void @interp_v3_v3v3(float* %arraydecay531, float* %arraydecay534, float* %arraydecay537, float %326), !dbg !11969
  %arrayidx538 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %edge_verts_inset_clip, i64 0, i64 1, !dbg !11970
  %arraydecay539 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx538, i64 0, i64 0, !dbg !11970
  %327 = load i32, i32* %fidx1, align 4, !dbg !11971
  %idxprom540 = sext i32 %327 to i64, !dbg !11972
  %arrayidx541 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %insetCos, i64 0, i64 %idxprom540, !dbg !11972
  %arraydecay542 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx541, i64 0, i64 0, !dbg !11972
  %328 = load i32, i32* %fidx2, align 4, !dbg !11973
  %idxprom543 = sext i32 %328 to i64, !dbg !11974
  %arrayidx544 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %insetCos, i64 0, i64 %idxprom543, !dbg !11974
  %arraydecay545 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx544, i64 0, i64 0, !dbg !11974
  %329 = load float, float* %fac2, align 4, !dbg !11975
  call void @interp_v3_v3v3(float* %arraydecay539, float* %arraydecay542, float* %arraydecay545, float %329), !dbg !11976
  %arrayidx546 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %seam_subsection, i64 0, i64 0, !dbg !11977
  %arraydecay547 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx546, i64 0, i64 0, !dbg !11977
  %arrayidx548 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %seam_subsection, i64 0, i64 1, !dbg !11979
  %arraydecay549 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx548, i64 0, i64 0, !dbg !11979
  %arrayidx550 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %seam_subsection, i64 0, i64 2, !dbg !11980
  %arraydecay551 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx550, i64 0, i64 0, !dbg !11980
  %arrayidx552 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %seam_subsection, i64 0, i64 3, !dbg !11981
  %arraydecay553 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx552, i64 0, i64 0, !dbg !11981
  %330 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11982
  %x554 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %330, i32 0, i32 2, !dbg !11983
  %331 = load i32, i32* %x554, align 8, !dbg !11983
  %332 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11984
  %y555 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %332, i32 0, i32 3, !dbg !11985
  %333 = load i32, i32* %y555, align 4, !dbg !11985
  %call556 = call zeroext i8 @pixel_bounds_uv(float* %arraydecay547, float* %arraydecay549, float* %arraydecay551, float* %arraydecay553, %struct.rcti* %bounds_px, i32 %331, i32 %333, i8 zeroext 1), !dbg !11986
  %tobool557 = icmp ne i8 %call556, 0, !dbg !11986
  br i1 %tobool557, label %if.then558, label %if.end791, !dbg !11987

if.then558:                                       ; preds = %if.end485
  store i32 0, i32* %has_isect, align 4, !dbg !11988
  %ymin559 = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 2, !dbg !11990
  %334 = load i32, i32* %ymin559, align 4, !dbg !11990
  store i32 %334, i32* %y, align 4, !dbg !11992
  br label %for.cond560, !dbg !11993

for.cond560:                                      ; preds = %for.inc788, %if.then558
  %335 = load i32, i32* %y, align 4, !dbg !11994
  %ymax561 = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 3, !dbg !11996
  %336 = load i32, i32* %ymax561, align 4, !dbg !11996
  %cmp562 = icmp slt i32 %335, %336, !dbg !11997
  br i1 %cmp562, label %for.body564, label %for.end790, !dbg !11998

for.body564:                                      ; preds = %for.cond560
  %337 = load i32, i32* %y, align 4, !dbg !11999
  %conv565 = sitofp i32 %337 to float, !dbg !12001
  %338 = load float, float* %ibuf_yf, align 4, !dbg !12002
  %div566 = fdiv float %conv565, %338, !dbg !12003
  %arrayidx567 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !12004
  store float %div566, float* %arrayidx567, align 4, !dbg !12005
  store i32 0, i32* %has_x_isect, align 4, !dbg !12006
  %xmin568 = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 0, !dbg !12007
  %339 = load i32, i32* %xmin568, align 4, !dbg !12007
  store i32 %339, i32* %x12, align 4, !dbg !12009
  br label %for.cond569, !dbg !12010

for.cond569:                                      ; preds = %for.inc785, %for.body564
  %340 = load i32, i32* %x12, align 4, !dbg !12011
  %xmax570 = getelementptr inbounds %struct.rcti, %struct.rcti* %bounds_px, i32 0, i32 1, !dbg !12013
  %341 = load i32, i32* %xmax570, align 4, !dbg !12013
  %cmp571 = icmp slt i32 %340, %341, !dbg !12014
  br i1 %cmp571, label %for.body573, label %for.end787, !dbg !12015

for.body573:                                      ; preds = %for.cond569
  %342 = load i32, i32* %x12, align 4, !dbg !12016
  %conv574 = sitofp i32 %342 to float, !dbg !12018
  %343 = load float, float* %ibuf_xf, align 4, !dbg !12019
  %div575 = fdiv float %conv574, %343, !dbg !12020
  %arrayidx576 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !12021
  store float %div575, float* %arrayidx576, align 4, !dbg !12022
  %arraydecay577 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !12023
  %arrayidx578 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %seam_subsection, i64 0, i64 0, !dbg !12025
  %arraydecay579 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx578, i64 0, i64 0, !dbg !12025
  %arrayidx580 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %seam_subsection, i64 0, i64 1, !dbg !12026
  %arraydecay581 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx580, i64 0, i64 0, !dbg !12026
  %arrayidx582 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %seam_subsection, i64 0, i64 2, !dbg !12027
  %arraydecay583 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx582, i64 0, i64 0, !dbg !12027
  %arrayidx584 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %seam_subsection, i64 0, i64 3, !dbg !12028
  %arraydecay585 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx584, i64 0, i64 0, !dbg !12028
  %call586 = call i32 @isect_point_quad_v2(float* %arraydecay577, float* %arraydecay579, float* %arraydecay581, float* %arraydecay583, float* %arraydecay585), !dbg !12029
  %tobool587 = icmp ne i32 %call586, 0, !dbg !12029
  br i1 %tobool587, label %if.then588, label %if.else780, !dbg !12030

if.then588:                                       ; preds = %for.body573
  call void @llvm.dbg.declare(metadata float* %fac, metadata !12031, metadata !DIExpression()), !dbg !12033
  %arraydecay589 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !12034
  %arrayidx590 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %seam_subsection, i64 0, i64 0, !dbg !12035
  %arraydecay591 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx590, i64 0, i64 0, !dbg !12035
  %arrayidx592 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %seam_subsection, i64 0, i64 1, !dbg !12036
  %arraydecay593 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx592, i64 0, i64 0, !dbg !12036
  %call594 = call float @line_point_factor_v2(float* %arraydecay589, float* %arraydecay591, float* %arraydecay593), !dbg !12037
  store float %call594, float* %fac, align 4, !dbg !12038
  %344 = load float, float* %fac, align 4, !dbg !12039
  %cmp595 = fcmp olt float %344, 0.000000e+00, !dbg !12041
  br i1 %cmp595, label %if.then597, label %if.else601, !dbg !12042

if.then597:                                       ; preds = %if.then588
  %arraydecay598 = getelementptr inbounds [4 x float], [4 x float]* %pixelScreenCo, i64 0, i64 0, !dbg !12043
  %arrayidx599 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %edge_verts_inset_clip, i64 0, i64 0, !dbg !12045
  %arraydecay600 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx599, i64 0, i64 0, !dbg !12045
  call void @copy_v3_v3(float* %arraydecay598, float* %arraydecay600), !dbg !12046
  br label %if.end615, !dbg !12047

if.else601:                                       ; preds = %if.then588
  %345 = load float, float* %fac, align 4, !dbg !12048
  %cmp602 = fcmp ogt float %345, 1.000000e+00, !dbg !12050
  br i1 %cmp602, label %if.then604, label %if.else608, !dbg !12051

if.then604:                                       ; preds = %if.else601
  %arraydecay605 = getelementptr inbounds [4 x float], [4 x float]* %pixelScreenCo, i64 0, i64 0, !dbg !12052
  %arrayidx606 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %edge_verts_inset_clip, i64 0, i64 1, !dbg !12054
  %arraydecay607 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx606, i64 0, i64 0, !dbg !12054
  call void @copy_v3_v3(float* %arraydecay605, float* %arraydecay607), !dbg !12055
  br label %if.end614, !dbg !12056

if.else608:                                       ; preds = %if.else601
  %arraydecay609 = getelementptr inbounds [4 x float], [4 x float]* %pixelScreenCo, i64 0, i64 0, !dbg !12057
  %arrayidx610 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %edge_verts_inset_clip, i64 0, i64 0, !dbg !12059
  %arraydecay611 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx610, i64 0, i64 0, !dbg !12059
  %arrayidx612 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %edge_verts_inset_clip, i64 0, i64 1, !dbg !12060
  %arraydecay613 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx612, i64 0, i64 0, !dbg !12060
  %346 = load float, float* %fac, align 4, !dbg !12061
  call void @interp_v3_v3v3(float* %arraydecay609, float* %arraydecay611, float* %arraydecay613, float %346), !dbg !12062
  br label %if.end614

if.end614:                                        ; preds = %if.else608, %if.then604
  br label %if.end615

if.end615:                                        ; preds = %if.end614, %if.then597
  %347 = load i8, i8* %is_ortho, align 1, !dbg !12063
  %tobool616 = icmp ne i8 %347, 0, !dbg !12063
  br i1 %tobool616, label %if.end646, label %if.then617, !dbg !12065

if.then617:                                       ; preds = %if.end615
  %arrayidx618 = getelementptr inbounds [4 x float], [4 x float]* %pixelScreenCo, i64 0, i64 3, !dbg !12066
  store float 1.000000e+00, float* %arrayidx618, align 4, !dbg !12068
  %348 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12069
  %projectMat = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %348, i32 0, i32 67, !dbg !12070
  %arraydecay619 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projectMat, i64 0, i64 0, !dbg !12069
  %arraydecay620 = getelementptr inbounds [4 x float], [4 x float]* %pixelScreenCo, i64 0, i64 0, !dbg !12071
  call void @mul_m4_v4([4 x float]* %arraydecay619, float* %arraydecay620), !dbg !12072
  %349 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12073
  %winx = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %349, i32 0, i32 46, !dbg !12074
  %350 = load i32, i32* %winx, align 8, !dbg !12074
  %conv621 = sitofp i32 %350 to float, !dbg !12073
  %mul = fmul float %conv621, 5.000000e-01, !dbg !12075
  %351 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12076
  %winx622 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %351, i32 0, i32 46, !dbg !12077
  %352 = load i32, i32* %winx622, align 8, !dbg !12077
  %conv623 = sitofp i32 %352 to float, !dbg !12076
  %mul624 = fmul float %conv623, 5.000000e-01, !dbg !12078
  %arrayidx625 = getelementptr inbounds [4 x float], [4 x float]* %pixelScreenCo, i64 0, i64 0, !dbg !12079
  %353 = load float, float* %arrayidx625, align 16, !dbg !12079
  %mul626 = fmul float %mul624, %353, !dbg !12080
  %arrayidx627 = getelementptr inbounds [4 x float], [4 x float]* %pixelScreenCo, i64 0, i64 3, !dbg !12081
  %354 = load float, float* %arrayidx627, align 4, !dbg !12081
  %div628 = fdiv float %mul626, %354, !dbg !12082
  %add629 = fadd float %mul, %div628, !dbg !12083
  %arrayidx630 = getelementptr inbounds [4 x float], [4 x float]* %pixelScreenCo, i64 0, i64 0, !dbg !12084
  store float %add629, float* %arrayidx630, align 16, !dbg !12085
  %355 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12086
  %winy = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %355, i32 0, i32 47, !dbg !12087
  %356 = load i32, i32* %winy, align 4, !dbg !12087
  %conv631 = sitofp i32 %356 to float, !dbg !12086
  %mul632 = fmul float %conv631, 5.000000e-01, !dbg !12088
  %357 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12089
  %winy633 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %357, i32 0, i32 47, !dbg !12090
  %358 = load i32, i32* %winy633, align 4, !dbg !12090
  %conv634 = sitofp i32 %358 to float, !dbg !12089
  %mul635 = fmul float %conv634, 5.000000e-01, !dbg !12091
  %arrayidx636 = getelementptr inbounds [4 x float], [4 x float]* %pixelScreenCo, i64 0, i64 1, !dbg !12092
  %359 = load float, float* %arrayidx636, align 4, !dbg !12092
  %mul637 = fmul float %mul635, %359, !dbg !12093
  %arrayidx638 = getelementptr inbounds [4 x float], [4 x float]* %pixelScreenCo, i64 0, i64 3, !dbg !12094
  %360 = load float, float* %arrayidx638, align 4, !dbg !12094
  %div639 = fdiv float %mul637, %360, !dbg !12095
  %add640 = fadd float %mul632, %div639, !dbg !12096
  %arrayidx641 = getelementptr inbounds [4 x float], [4 x float]* %pixelScreenCo, i64 0, i64 1, !dbg !12097
  store float %add640, float* %arrayidx641, align 4, !dbg !12098
  %arrayidx642 = getelementptr inbounds [4 x float], [4 x float]* %pixelScreenCo, i64 0, i64 2, !dbg !12099
  %361 = load float, float* %arrayidx642, align 8, !dbg !12099
  %arrayidx643 = getelementptr inbounds [4 x float], [4 x float]* %pixelScreenCo, i64 0, i64 3, !dbg !12100
  %362 = load float, float* %arrayidx643, align 4, !dbg !12100
  %div644 = fdiv float %361, %362, !dbg !12101
  %arrayidx645 = getelementptr inbounds [4 x float], [4 x float]* %pixelScreenCo, i64 0, i64 2, !dbg !12102
  store float %div644, float* %arrayidx645, align 8, !dbg !12103
  br label %if.end646, !dbg !12104

if.end646:                                        ; preds = %if.then617, %if.end615
  %363 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12105
  %do_occlude647 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %363, i32 0, i32 53, !dbg !12107
  %364 = load i8, i8* %do_occlude647, align 1, !dbg !12107
  %conv648 = zext i8 %364 to i32, !dbg !12105
  %cmp649 = icmp eq i32 %conv648, 0, !dbg !12108
  br i1 %cmp649, label %if.then655, label %lor.lhs.false651, !dbg !12109

lor.lhs.false651:                                 ; preds = %if.end646
  %365 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12110
  %366 = load %struct.LinkNode*, %struct.LinkNode** %bucketFaceNodes, align 8, !dbg !12111
  %367 = load i32, i32* %face_index.addr, align 4, !dbg !12112
  %arraydecay652 = getelementptr inbounds [4 x float], [4 x float]* %pixelScreenCo, i64 0, i64 0, !dbg !12113
  %call653 = call zeroext i8 @project_bucket_point_occluded(%struct.ProjPaintState* %365, %struct.LinkNode* %366, i32 %367, float* %arraydecay652), !dbg !12114
  %tobool654 = icmp ne i8 %call653, 0, !dbg !12114
  br i1 %tobool654, label %if.end779, label %if.then655, !dbg !12115

if.then655:                                       ; preds = %lor.lhs.false651, %if.end646
  %368 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12116
  %do_mask_normal = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %368, i32 0, i32 55, !dbg !12119
  %369 = load i8, i8* %do_mask_normal, align 1, !dbg !12119
  %conv656 = zext i8 %369 to i32, !dbg !12116
  %tobool657 = icmp ne i32 %conv656, 0, !dbg !12116
  br i1 %tobool657, label %if.then660, label %lor.lhs.false658, !dbg !12120

lor.lhs.false658:                                 ; preds = %if.then655
  %370 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12121
  %dm_mtface_clone = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %370, i32 0, i32 21, !dbg !12122
  %371 = load %struct.MTFace**, %struct.MTFace*** %dm_mtface_clone, align 8, !dbg !12122
  %tobool659 = icmp ne %struct.MTFace** %371, null, !dbg !12121
  br i1 %tobool659, label %if.then660, label %if.end707, !dbg !12123

if.then660:                                       ; preds = %lor.lhs.false658, %if.then655
  call void @llvm.dbg.declare(metadata [2 x float]* %uv_close, metadata !12124, metadata !DIExpression()), !dbg !12126
  call void @llvm.dbg.declare(metadata float* %uv_fac, metadata !12127, metadata !DIExpression()), !dbg !12128
  %arraydecay661 = getelementptr inbounds [2 x float], [2 x float]* %uv_close, i64 0, i64 0, !dbg !12129
  %arraydecay662 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !12130
  %372 = load i32, i32* %fidx1, align 4, !dbg !12131
  %idxprom663 = sext i32 %372 to i64, !dbg !12132
  %arrayidx664 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 %idxprom663, !dbg !12132
  %arraydecay665 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx664, i64 0, i64 0, !dbg !12132
  %373 = load i32, i32* %fidx2, align 4, !dbg !12133
  %idxprom666 = sext i32 %373 to i64, !dbg !12134
  %arrayidx667 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 %idxprom666, !dbg !12134
  %arraydecay668 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx667, i64 0, i64 0, !dbg !12134
  %call669 = call float @closest_to_line_v2(float* %arraydecay661, float* %arraydecay662, float* %arraydecay665, float* %arraydecay668), !dbg !12135
  store float %call669, float* %uv_fac, align 4, !dbg !12128
  %374 = load float, float* %uv_fac, align 4, !dbg !12136
  %cmp670 = fcmp olt float %374, 0.000000e+00, !dbg !12138
  br i1 %cmp670, label %if.then672, label %if.else677, !dbg !12139

if.then672:                                       ; preds = %if.then660
  %arraydecay673 = getelementptr inbounds [2 x float], [2 x float]* %uv_close, i64 0, i64 0, !dbg !12140
  %375 = load i32, i32* %fidx1, align 4, !dbg !12141
  %idxprom674 = sext i32 %375 to i64, !dbg !12142
  %arrayidx675 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 %idxprom674, !dbg !12142
  %arraydecay676 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx675, i64 0, i64 0, !dbg !12142
  call void @copy_v2_v2(float* %arraydecay673, float* %arraydecay676), !dbg !12143
  br label %if.end686, !dbg !12143

if.else677:                                       ; preds = %if.then660
  %376 = load float, float* %uv_fac, align 4, !dbg !12144
  %cmp678 = fcmp ogt float %376, 1.000000e+00, !dbg !12146
  br i1 %cmp678, label %if.then680, label %if.end685, !dbg !12147

if.then680:                                       ; preds = %if.else677
  %arraydecay681 = getelementptr inbounds [2 x float], [2 x float]* %uv_close, i64 0, i64 0, !dbg !12148
  %377 = load i32, i32* %fidx2, align 4, !dbg !12149
  %idxprom682 = sext i32 %377 to i64, !dbg !12150
  %arrayidx683 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 %idxprom682, !dbg !12150
  %arraydecay684 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx683, i64 0, i64 0, !dbg !12150
  call void @copy_v2_v2(float* %arraydecay681, float* %arraydecay684), !dbg !12151
  br label %if.end685, !dbg !12151

if.end685:                                        ; preds = %if.then680, %if.else677
  br label %if.end686

if.end686:                                        ; preds = %if.end685, %if.then672
  %378 = load i32, i32* %side, align 4, !dbg !12152
  %tobool687 = icmp ne i32 %378, 0, !dbg !12152
  br i1 %tobool687, label %if.then688, label %if.else697, !dbg !12154

if.then688:                                       ; preds = %if.end686
  %arrayidx689 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 0, !dbg !12155
  %arraydecay690 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx689, i64 0, i64 0, !dbg !12155
  %arrayidx691 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 2, !dbg !12157
  %arraydecay692 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx691, i64 0, i64 0, !dbg !12157
  %arrayidx693 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 3, !dbg !12158
  %arraydecay694 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx693, i64 0, i64 0, !dbg !12158
  %arraydecay695 = getelementptr inbounds [2 x float], [2 x float]* %uv_close, i64 0, i64 0, !dbg !12159
  %arraydecay696 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !12160
  call void @barycentric_weights_v2(float* %arraydecay690, float* %arraydecay692, float* %arraydecay694, float* %arraydecay695, float* %arraydecay696), !dbg !12161
  br label %if.end706, !dbg !12162

if.else697:                                       ; preds = %if.end686
  %arrayidx698 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 0, !dbg !12163
  %arraydecay699 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx698, i64 0, i64 0, !dbg !12163
  %arrayidx700 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 1, !dbg !12165
  %arraydecay701 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx700, i64 0, i64 0, !dbg !12165
  %arrayidx702 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %tf_uv_pxoffset, i64 0, i64 2, !dbg !12166
  %arraydecay703 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx702, i64 0, i64 0, !dbg !12166
  %arraydecay704 = getelementptr inbounds [2 x float], [2 x float]* %uv_close, i64 0, i64 0, !dbg !12167
  %arraydecay705 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !12168
  call void @barycentric_weights_v2(float* %arraydecay699, float* %arraydecay701, float* %arraydecay703, float* %arraydecay704, float* %arraydecay705), !dbg !12169
  br label %if.end706

if.end706:                                        ; preds = %if.else697, %if.then688
  br label %if.end707, !dbg !12170

if.end707:                                        ; preds = %if.end706, %lor.lhs.false658
  %379 = load i8, i8* %do_clip, align 1, !dbg !12171
  %conv708 = zext i8 %379 to i32, !dbg !12171
  %tobool709 = icmp ne i32 %conv708, 0, !dbg !12171
  br i1 %tobool709, label %if.then713, label %lor.lhs.false710, !dbg !12173

lor.lhs.false710:                                 ; preds = %if.end707
  %380 = load i8, i8* %do_3d_mapping, align 1, !dbg !12174
  %conv711 = zext i8 %380 to i32, !dbg !12174
  %tobool712 = icmp ne i32 %conv711, 0, !dbg !12174
  br i1 %tobool712, label %if.then713, label %if.end768, !dbg !12175

if.then713:                                       ; preds = %lor.lhs.false710, %if.end707
  %381 = load i32, i32* %side, align 4, !dbg !12176
  %tobool714 = icmp ne i32 %381, 0, !dbg !12176
  br i1 %tobool714, label %if.then715, label %if.else736, !dbg !12179

if.then715:                                       ; preds = %if.then713
  %arraydecay716 = getelementptr inbounds [3 x float], [3 x float]* %wco, i64 0, i64 0, !dbg !12180
  %382 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12181
  %dm_mvert717 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %382, i32 0, i32 18, !dbg !12182
  %383 = load %struct.MVert*, %struct.MVert** %dm_mvert717, align 8, !dbg !12182
  %384 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !12183
  %v1718 = getelementptr inbounds %struct.MFace, %struct.MFace* %384, i32 0, i32 0, !dbg !12184
  %385 = load i32, i32* %v1718, align 4, !dbg !12184
  %idxprom719 = zext i32 %385 to i64, !dbg !12181
  %arrayidx720 = getelementptr inbounds %struct.MVert, %struct.MVert* %383, i64 %idxprom719, !dbg !12181
  %co721 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx720, i32 0, i32 0, !dbg !12185
  %arraydecay722 = getelementptr inbounds [3 x float], [3 x float]* %co721, i64 0, i64 0, !dbg !12181
  %386 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12186
  %dm_mvert723 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %386, i32 0, i32 18, !dbg !12187
  %387 = load %struct.MVert*, %struct.MVert** %dm_mvert723, align 8, !dbg !12187
  %388 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !12188
  %v3724 = getelementptr inbounds %struct.MFace, %struct.MFace* %388, i32 0, i32 2, !dbg !12189
  %389 = load i32, i32* %v3724, align 4, !dbg !12189
  %idxprom725 = zext i32 %389 to i64, !dbg !12186
  %arrayidx726 = getelementptr inbounds %struct.MVert, %struct.MVert* %387, i64 %idxprom725, !dbg !12186
  %co727 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx726, i32 0, i32 0, !dbg !12190
  %arraydecay728 = getelementptr inbounds [3 x float], [3 x float]* %co727, i64 0, i64 0, !dbg !12186
  %390 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12191
  %dm_mvert729 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %390, i32 0, i32 18, !dbg !12192
  %391 = load %struct.MVert*, %struct.MVert** %dm_mvert729, align 8, !dbg !12192
  %392 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !12193
  %v4730 = getelementptr inbounds %struct.MFace, %struct.MFace* %392, i32 0, i32 3, !dbg !12194
  %393 = load i32, i32* %v4730, align 4, !dbg !12194
  %idxprom731 = zext i32 %393 to i64, !dbg !12191
  %arrayidx732 = getelementptr inbounds %struct.MVert, %struct.MVert* %391, i64 %idxprom731, !dbg !12191
  %co733 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx732, i32 0, i32 0, !dbg !12195
  %arraydecay734 = getelementptr inbounds [3 x float], [3 x float]* %co733, i64 0, i64 0, !dbg !12191
  %arraydecay735 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !12196
  call void @interp_v3_v3v3v3(float* %arraydecay716, float* %arraydecay722, float* %arraydecay728, float* %arraydecay734, float* %arraydecay735), !dbg !12197
  br label %if.end757, !dbg !12197

if.else736:                                       ; preds = %if.then713
  %arraydecay737 = getelementptr inbounds [3 x float], [3 x float]* %wco, i64 0, i64 0, !dbg !12198
  %394 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12199
  %dm_mvert738 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %394, i32 0, i32 18, !dbg !12200
  %395 = load %struct.MVert*, %struct.MVert** %dm_mvert738, align 8, !dbg !12200
  %396 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !12201
  %v1739 = getelementptr inbounds %struct.MFace, %struct.MFace* %396, i32 0, i32 0, !dbg !12202
  %397 = load i32, i32* %v1739, align 4, !dbg !12202
  %idxprom740 = zext i32 %397 to i64, !dbg !12199
  %arrayidx741 = getelementptr inbounds %struct.MVert, %struct.MVert* %395, i64 %idxprom740, !dbg !12199
  %co742 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx741, i32 0, i32 0, !dbg !12203
  %arraydecay743 = getelementptr inbounds [3 x float], [3 x float]* %co742, i64 0, i64 0, !dbg !12199
  %398 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12204
  %dm_mvert744 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %398, i32 0, i32 18, !dbg !12205
  %399 = load %struct.MVert*, %struct.MVert** %dm_mvert744, align 8, !dbg !12205
  %400 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !12206
  %v2745 = getelementptr inbounds %struct.MFace, %struct.MFace* %400, i32 0, i32 1, !dbg !12207
  %401 = load i32, i32* %v2745, align 4, !dbg !12207
  %idxprom746 = zext i32 %401 to i64, !dbg !12204
  %arrayidx747 = getelementptr inbounds %struct.MVert, %struct.MVert* %399, i64 %idxprom746, !dbg !12204
  %co748 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx747, i32 0, i32 0, !dbg !12208
  %arraydecay749 = getelementptr inbounds [3 x float], [3 x float]* %co748, i64 0, i64 0, !dbg !12204
  %402 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12209
  %dm_mvert750 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %402, i32 0, i32 18, !dbg !12210
  %403 = load %struct.MVert*, %struct.MVert** %dm_mvert750, align 8, !dbg !12210
  %404 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !12211
  %v3751 = getelementptr inbounds %struct.MFace, %struct.MFace* %404, i32 0, i32 2, !dbg !12212
  %405 = load i32, i32* %v3751, align 4, !dbg !12212
  %idxprom752 = zext i32 %405 to i64, !dbg !12209
  %arrayidx753 = getelementptr inbounds %struct.MVert, %struct.MVert* %403, i64 %idxprom752, !dbg !12209
  %co754 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx753, i32 0, i32 0, !dbg !12213
  %arraydecay755 = getelementptr inbounds [3 x float], [3 x float]* %co754, i64 0, i64 0, !dbg !12209
  %arraydecay756 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !12214
  call void @interp_v3_v3v3v3(float* %arraydecay737, float* %arraydecay743, float* %arraydecay749, float* %arraydecay755, float* %arraydecay756), !dbg !12215
  br label %if.end757

if.end757:                                        ; preds = %if.else736, %if.then715
  %406 = load i8, i8* %do_clip, align 1, !dbg !12216
  %conv758 = zext i8 %406 to i32, !dbg !12216
  %tobool759 = icmp ne i32 %conv758, 0, !dbg !12216
  br i1 %tobool759, label %land.lhs.true760, label %if.end767, !dbg !12218

land.lhs.true760:                                 ; preds = %if.end757
  %407 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12219
  %rv3d761 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %407, i32 0, i32 1, !dbg !12220
  %408 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d761, align 8, !dbg !12220
  %arraydecay762 = getelementptr inbounds [3 x float], [3 x float]* %wco, i64 0, i64 0, !dbg !12221
  %call763 = call zeroext i8 @ED_view3d_clipping_test(%struct.RegionView3D* %408, float* %arraydecay762, i8 zeroext 1), !dbg !12222
  %conv764 = zext i8 %call763 to i32, !dbg !12222
  %tobool765 = icmp ne i32 %conv764, 0, !dbg !12222
  br i1 %tobool765, label %if.then766, label %if.end767, !dbg !12223

if.then766:                                       ; preds = %land.lhs.true760
  br label %for.inc785, !dbg !12224

if.end767:                                        ; preds = %land.lhs.true760, %if.end757
  br label %if.end768, !dbg !12226

if.end768:                                        ; preds = %if.end767, %lor.lhs.false710
  %409 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12227
  %410 = load i32, i32* %face_index.addr, align 4, !dbg !12228
  %411 = load i32, i32* %side, align 4, !dbg !12229
  %arraydecay769 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !12230
  %call770 = call float @project_paint_uvpixel_mask(%struct.ProjPaintState* %409, i32 %410, i32 %411, float* %arraydecay769), !dbg !12231
  store float %call770, float* %mask, align 4, !dbg !12232
  %412 = load float, float* %mask, align 4, !dbg !12233
  %cmp771 = fcmp ogt float %412, 0.000000e+00, !dbg !12235
  br i1 %cmp771, label %if.then773, label %if.end778, !dbg !12236

if.then773:                                       ; preds = %if.end768
  %413 = load %struct.LinkNode**, %struct.LinkNode*** %bucketPixelNodes, align 8, !dbg !12237
  %414 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12239
  %415 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !12240
  %416 = load i32, i32* %x12, align 4, !dbg !12241
  %417 = load i32, i32* %y, align 4, !dbg !12242
  %418 = load float, float* %mask, align 4, !dbg !12243
  %419 = load i32, i32* %face_index.addr, align 4, !dbg !12244
  %arraydecay774 = getelementptr inbounds [4 x float], [4 x float]* %pixelScreenCo, i64 0, i64 0, !dbg !12245
  %arraydecay775 = getelementptr inbounds [3 x float], [3 x float]* %wco, i64 0, i64 0, !dbg !12246
  %420 = load i32, i32* %side, align 4, !dbg !12247
  %arraydecay776 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !12248
  %call777 = call %struct.ProjPixel* @project_paint_uvpixel_init(%struct.ProjPaintState* %414, %struct.MemArena* %415, %struct.TileInfo* %tinf, i32 %416, i32 %417, float %418, i32 %419, float* %arraydecay774, float* %arraydecay775, i32 %420, float* %arraydecay776), !dbg !12249
  %421 = bitcast %struct.ProjPixel* %call777 to i8*, !dbg !12249
  %422 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !12250
  call void @BLI_linklist_prepend_arena(%struct.LinkNode** %413, i8* %421, %struct.MemArena* %422), !dbg !12251
  br label %if.end778, !dbg !12252

if.end778:                                        ; preds = %if.then773, %if.end768
  br label %if.end779, !dbg !12253

if.end779:                                        ; preds = %if.end778, %lor.lhs.false651
  br label %if.end784, !dbg !12254

if.else780:                                       ; preds = %for.body573
  %423 = load i32, i32* %has_x_isect, align 4, !dbg !12255
  %tobool781 = icmp ne i32 %423, 0, !dbg !12255
  br i1 %tobool781, label %if.then782, label %if.end783, !dbg !12257

if.then782:                                       ; preds = %if.else780
  br label %for.end787, !dbg !12258

if.end783:                                        ; preds = %if.else780
  br label %if.end784

if.end784:                                        ; preds = %if.end783, %if.end779
  br label %for.inc785, !dbg !12260

for.inc785:                                       ; preds = %if.end784, %if.then766
  %424 = load i32, i32* %x12, align 4, !dbg !12261
  %inc786 = add nsw i32 %424, 1, !dbg !12261
  store i32 %inc786, i32* %x12, align 4, !dbg !12261
  br label %for.cond569, !dbg !12262, !llvm.loop !12263

for.end787:                                       ; preds = %if.then782, %for.cond569
  br label %for.inc788, !dbg !12265

for.inc788:                                       ; preds = %for.end787
  %425 = load i32, i32* %y, align 4, !dbg !12266
  %inc789 = add nsw i32 %425, 1, !dbg !12266
  store i32 %inc789, i32* %y, align 4, !dbg !12266
  br label %for.cond560, !dbg !12267, !llvm.loop !12268

for.end790:                                       ; preds = %for.cond560
  br label %if.end791, !dbg !12270

if.end791:                                        ; preds = %for.end790, %if.end485
  br label %if.end792, !dbg !12271

if.end792:                                        ; preds = %if.end791, %if.then465
  br label %if.end793, !dbg !12272

if.end793:                                        ; preds = %if.end792, %land.lhs.true453, %if.end450
  br label %for.inc794, !dbg !12273

for.inc794:                                       ; preds = %if.end793
  %426 = load i32, i32* %fidx1, align 4, !dbg !12274
  %inc795 = add nsw i32 %426, 1, !dbg !12274
  store i32 %inc795, i32* %fidx1, align 4, !dbg !12274
  br label %for.cond425, !dbg !12275, !llvm.loop !12276

for.end796:                                       ; preds = %for.cond425
  br label %if.end797

if.end797:                                        ; preds = %for.end796, %if.end353
  br label %if.end798, !dbg !12278

if.end798:                                        ; preds = %if.end797, %do.end
  ret void, !dbg !12279
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Image* @project_paint_face_paint_image(%struct.ProjPaintState* %ps, i32 %face_index) #0 !dbg !12280 {
entry:
  %retval = alloca %struct.Image*, align 8
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %face_index.addr = alloca i32, align 4
  %mf = alloca %struct.MFace*, align 8
  %ma = alloca %struct.Material*, align 8
  %slot = alloca %struct.TexPaintSlot*, align 8
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !12283, metadata !DIExpression()), !dbg !12284
  store i32 %face_index, i32* %face_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_index.addr, metadata !12285, metadata !DIExpression()), !dbg !12286
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12287
  %do_stencil_brush = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 51, !dbg !12289
  %1 = load i8, i8* %do_stencil_brush, align 1, !dbg !12289
  %tobool = icmp ne i8 %1, 0, !dbg !12287
  br i1 %tobool, label %if.then, label %if.else, !dbg !12290

if.then:                                          ; preds = %entry
  %2 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12291
  %stencil_ima = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %2, i32 0, i32 23, !dbg !12293
  %3 = load %struct.Image*, %struct.Image** %stencil_ima, align 8, !dbg !12293
  store %struct.Image* %3, %struct.Image** %retval, align 8, !dbg !12294
  br label %return, !dbg !12294

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !12295, metadata !DIExpression()), !dbg !12297
  %4 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12298
  %dm_mface = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %4, i32 0, i32 19, !dbg !12299
  %5 = load %struct.MFace*, %struct.MFace** %dm_mface, align 8, !dbg !12299
  %6 = load i32, i32* %face_index.addr, align 4, !dbg !12300
  %idx.ext = sext i32 %6 to i64, !dbg !12301
  %add.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %5, i64 %idx.ext, !dbg !12301
  store %struct.MFace* %add.ptr, %struct.MFace** %mf, align 8, !dbg !12297
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !12302, metadata !DIExpression()), !dbg !12303
  %7 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12304
  %dm = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %7, i32 0, i32 14, !dbg !12305
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !12305
  %mat = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 18, !dbg !12306
  %9 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !12306
  %10 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !12307
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %10, i32 0, i32 4, !dbg !12308
  %11 = load i16, i16* %mat_nr, align 4, !dbg !12308
  %idxprom = sext i16 %11 to i64, !dbg !12304
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %9, i64 %idxprom, !dbg !12304
  %12 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !12304
  store %struct.Material* %12, %struct.Material** %ma, align 8, !dbg !12303
  call void @llvm.dbg.declare(metadata %struct.TexPaintSlot** %slot, metadata !12309, metadata !DIExpression()), !dbg !12310
  %13 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !12311
  %tobool1 = icmp ne %struct.Material* %13, null, !dbg !12311
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !12311

cond.true:                                        ; preds = %if.else
  %14 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !12312
  %texpaintslot = getelementptr inbounds %struct.Material, %struct.Material* %14, i32 0, i32 135, !dbg !12313
  %15 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %texpaintslot, align 8, !dbg !12313
  %16 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !12314
  %paint_active_slot = getelementptr inbounds %struct.Material, %struct.Material* %16, i32 0, i32 131, !dbg !12315
  %17 = load i16, i16* %paint_active_slot, align 4, !dbg !12315
  %conv = sext i16 %17 to i32, !dbg !12314
  %idx.ext2 = sext i32 %conv to i64, !dbg !12316
  %add.ptr3 = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %15, i64 %idx.ext2, !dbg !12316
  br label %cond.end, !dbg !12311

cond.false:                                       ; preds = %if.else
  br label %cond.end, !dbg !12311

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.TexPaintSlot* [ %add.ptr3, %cond.true ], [ null, %cond.false ], !dbg !12311
  store %struct.TexPaintSlot* %cond, %struct.TexPaintSlot** %slot, align 8, !dbg !12310
  %18 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot, align 8, !dbg !12317
  %tobool4 = icmp ne %struct.TexPaintSlot* %18, null, !dbg !12317
  br i1 %tobool4, label %cond.true5, label %cond.false6, !dbg !12317

cond.true5:                                       ; preds = %cond.end
  %19 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot, align 8, !dbg !12318
  %ima = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %19, i32 0, i32 0, !dbg !12319
  %20 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !12319
  br label %cond.end7, !dbg !12317

cond.false6:                                      ; preds = %cond.end
  %21 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !12320
  %canvas_ima = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %21, i32 0, i32 24, !dbg !12321
  %22 = load %struct.Image*, %struct.Image** %canvas_ima, align 8, !dbg !12321
  br label %cond.end7, !dbg !12317

cond.end7:                                        ; preds = %cond.false6, %cond.true5
  %cond8 = phi %struct.Image* [ %20, %cond.true5 ], [ %22, %cond.false6 ], !dbg !12317
  store %struct.Image* %cond8, %struct.Image** %retval, align 8, !dbg !12322
  br label %return, !dbg !12322

return:                                           ; preds = %cond.end7, %if.then
  %23 = load %struct.Image*, %struct.Image** %retval, align 8, !dbg !12323
  ret %struct.Image* %23, !dbg !12323
}

declare dso_local void @IMB_freeImBuf(%struct.ImBuf*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @project_bucket_clip_face(i8 zeroext %is_ortho, %struct.rctf* %bucket_bounds, float* %v1coSS, float* %v2coSS, float* %v3coSS, float* %uv1co, float* %uv2co, float* %uv3co, [2 x float]* %bucket_bounds_uv, i32* %tot) #0 !dbg !12324 {
entry:
  %is_ortho.addr = alloca i8, align 1
  %bucket_bounds.addr = alloca %struct.rctf*, align 8
  %v1coSS.addr = alloca float*, align 8
  %v2coSS.addr = alloca float*, align 8
  %v3coSS.addr = alloca float*, align 8
  %uv1co.addr = alloca float*, align 8
  %uv2co.addr = alloca float*, align 8
  %uv3co.addr = alloca float*, align 8
  %bucket_bounds_uv.addr = alloca [2 x float]*, align 8
  %tot.addr = alloca i32*, align 8
  %inside_bucket_flag = alloca i32, align 4
  %inside_face_flag = alloca i32, align 4
  %flip = alloca i32, align 4
  %bucket_bounds_ss = alloca [4 x [2 x float]], align 16
  %isectVCosSS = alloca [8 x [3 x float]], align 16
  %v1_clipSS = alloca [2 x float], align 4
  %v2_clipSS = alloca [2 x float], align 4
  %w = alloca [3 x float], align 4
  %cent = alloca [2 x float], align 4
  %i = alloca i32, align 4
  %doubles = alloca i16, align 2
  %j = alloca i32, align 4
  store i8 %is_ortho, i8* %is_ortho.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_ortho.addr, metadata !12327, metadata !DIExpression()), !dbg !12328
  store %struct.rctf* %bucket_bounds, %struct.rctf** %bucket_bounds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %bucket_bounds.addr, metadata !12329, metadata !DIExpression()), !dbg !12330
  store float* %v1coSS, float** %v1coSS.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1coSS.addr, metadata !12331, metadata !DIExpression()), !dbg !12332
  store float* %v2coSS, float** %v2coSS.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2coSS.addr, metadata !12333, metadata !DIExpression()), !dbg !12334
  store float* %v3coSS, float** %v3coSS.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3coSS.addr, metadata !12335, metadata !DIExpression()), !dbg !12336
  store float* %uv1co, float** %uv1co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv1co.addr, metadata !12337, metadata !DIExpression()), !dbg !12338
  store float* %uv2co, float** %uv2co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv2co.addr, metadata !12339, metadata !DIExpression()), !dbg !12340
  store float* %uv3co, float** %uv3co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv3co.addr, metadata !12341, metadata !DIExpression()), !dbg !12342
  store [2 x float]* %bucket_bounds_uv, [2 x float]** %bucket_bounds_uv.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %bucket_bounds_uv.addr, metadata !12343, metadata !DIExpression()), !dbg !12344
  store i32* %tot, i32** %tot.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %tot.addr, metadata !12345, metadata !DIExpression()), !dbg !12346
  call void @llvm.dbg.declare(metadata i32* %inside_bucket_flag, metadata !12347, metadata !DIExpression()), !dbg !12348
  store i32 0, i32* %inside_bucket_flag, align 4, !dbg !12348
  call void @llvm.dbg.declare(metadata i32* %inside_face_flag, metadata !12349, metadata !DIExpression()), !dbg !12350
  store i32 0, i32* %inside_face_flag, align 4, !dbg !12350
  call void @llvm.dbg.declare(metadata i32* %flip, metadata !12351, metadata !DIExpression()), !dbg !12352
  %0 = load float*, float** %v1coSS.addr, align 8, !dbg !12353
  %1 = load float*, float** %v2coSS.addr, align 8, !dbg !12354
  %2 = load float*, float** %v3coSS.addr, align 8, !dbg !12355
  %call = call float @line_point_side_v2(float* %0, float* %1, float* %2), !dbg !12356
  %cmp = fcmp ogt float %call, 0.000000e+00, !dbg !12357
  %conv = zext i1 %cmp to i32, !dbg !12357
  %3 = load float*, float** %uv1co.addr, align 8, !dbg !12358
  %4 = load float*, float** %uv2co.addr, align 8, !dbg !12359
  %5 = load float*, float** %uv3co.addr, align 8, !dbg !12360
  %call1 = call float @line_point_side_v2(float* %3, float* %4, float* %5), !dbg !12361
  %cmp2 = fcmp ogt float %call1, 0.000000e+00, !dbg !12362
  %conv3 = zext i1 %cmp2 to i32, !dbg !12362
  %cmp4 = icmp ne i32 %conv, %conv3, !dbg !12363
  %conv5 = zext i1 %cmp4 to i32, !dbg !12363
  store i32 %conv5, i32* %flip, align 4, !dbg !12352
  call void @llvm.dbg.declare(metadata [4 x [2 x float]]* %bucket_bounds_ss, metadata !12364, metadata !DIExpression()), !dbg !12365
  %6 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !12366
  %7 = load float*, float** %v1coSS.addr, align 8, !dbg !12367
  %call6 = call zeroext i8 @BLI_rctf_isect_pt_v(%struct.rctf* %6, float* %7), !dbg !12368
  %conv7 = zext i8 %call6 to i32, !dbg !12368
  %8 = load i32, i32* %inside_bucket_flag, align 4, !dbg !12369
  %or = or i32 %8, %conv7, !dbg !12369
  store i32 %or, i32* %inside_bucket_flag, align 4, !dbg !12369
  %9 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !12370
  %10 = load float*, float** %v2coSS.addr, align 8, !dbg !12371
  %call8 = call zeroext i8 @BLI_rctf_isect_pt_v(%struct.rctf* %9, float* %10), !dbg !12372
  %conv9 = zext i8 %call8 to i32, !dbg !12372
  %shl = shl i32 %conv9, 1, !dbg !12373
  %11 = load i32, i32* %inside_bucket_flag, align 4, !dbg !12374
  %or10 = or i32 %11, %shl, !dbg !12374
  store i32 %or10, i32* %inside_bucket_flag, align 4, !dbg !12374
  %12 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !12375
  %13 = load float*, float** %v3coSS.addr, align 8, !dbg !12376
  %call11 = call zeroext i8 @BLI_rctf_isect_pt_v(%struct.rctf* %12, float* %13), !dbg !12377
  %conv12 = zext i8 %call11 to i32, !dbg !12377
  %shl13 = shl i32 %conv12, 2, !dbg !12378
  %14 = load i32, i32* %inside_bucket_flag, align 4, !dbg !12379
  %or14 = or i32 %14, %shl13, !dbg !12379
  store i32 %or14, i32* %inside_bucket_flag, align 4, !dbg !12379
  %15 = load i32, i32* %inside_bucket_flag, align 4, !dbg !12380
  %cmp15 = icmp eq i32 %15, 7, !dbg !12382
  br i1 %cmp15, label %if.then, label %if.end28, !dbg !12383

if.then:                                          ; preds = %entry
  %16 = load i32, i32* %flip, align 4, !dbg !12384
  %tobool = icmp ne i32 %16, 0, !dbg !12384
  br i1 %tobool, label %if.then17, label %if.else, !dbg !12387

if.then17:                                        ; preds = %if.then
  %17 = load [2 x float]*, [2 x float]** %bucket_bounds_uv.addr, align 8, !dbg !12388
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %17, i64 0, !dbg !12388
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !12388
  %18 = load float*, float** %uv3co.addr, align 8, !dbg !12390
  call void @copy_v2_v2(float* %arraydecay, float* %18), !dbg !12391
  %19 = load [2 x float]*, [2 x float]** %bucket_bounds_uv.addr, align 8, !dbg !12392
  %arrayidx18 = getelementptr inbounds [2 x float], [2 x float]* %19, i64 1, !dbg !12392
  %arraydecay19 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx18, i64 0, i64 0, !dbg !12392
  %20 = load float*, float** %uv2co.addr, align 8, !dbg !12393
  call void @copy_v2_v2(float* %arraydecay19, float* %20), !dbg !12394
  %21 = load [2 x float]*, [2 x float]** %bucket_bounds_uv.addr, align 8, !dbg !12395
  %arrayidx20 = getelementptr inbounds [2 x float], [2 x float]* %21, i64 2, !dbg !12395
  %arraydecay21 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx20, i64 0, i64 0, !dbg !12395
  %22 = load float*, float** %uv1co.addr, align 8, !dbg !12396
  call void @copy_v2_v2(float* %arraydecay21, float* %22), !dbg !12397
  br label %if.end, !dbg !12398

if.else:                                          ; preds = %if.then
  %23 = load [2 x float]*, [2 x float]** %bucket_bounds_uv.addr, align 8, !dbg !12399
  %arrayidx22 = getelementptr inbounds [2 x float], [2 x float]* %23, i64 0, !dbg !12399
  %arraydecay23 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx22, i64 0, i64 0, !dbg !12399
  %24 = load float*, float** %uv1co.addr, align 8, !dbg !12401
  call void @copy_v2_v2(float* %arraydecay23, float* %24), !dbg !12402
  %25 = load [2 x float]*, [2 x float]** %bucket_bounds_uv.addr, align 8, !dbg !12403
  %arrayidx24 = getelementptr inbounds [2 x float], [2 x float]* %25, i64 1, !dbg !12403
  %arraydecay25 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx24, i64 0, i64 0, !dbg !12403
  %26 = load float*, float** %uv2co.addr, align 8, !dbg !12404
  call void @copy_v2_v2(float* %arraydecay25, float* %26), !dbg !12405
  %27 = load [2 x float]*, [2 x float]** %bucket_bounds_uv.addr, align 8, !dbg !12406
  %arrayidx26 = getelementptr inbounds [2 x float], [2 x float]* %27, i64 2, !dbg !12406
  %arraydecay27 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx26, i64 0, i64 0, !dbg !12406
  %28 = load float*, float** %uv3co.addr, align 8, !dbg !12407
  call void @copy_v2_v2(float* %arraydecay27, float* %28), !dbg !12408
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then17
  %29 = load i32*, i32** %tot.addr, align 8, !dbg !12409
  store i32 3, i32* %29, align 4, !dbg !12410
  br label %if.end427, !dbg !12411

if.end28:                                         ; preds = %entry
  %30 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !12412
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %30, i32 0, i32 1, !dbg !12413
  %31 = load float, float* %xmax, align 4, !dbg !12413
  %arrayidx29 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %bucket_bounds_ss, i64 0, i64 0, !dbg !12414
  %arrayidx30 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx29, i64 0, i64 0, !dbg !12414
  store float %31, float* %arrayidx30, align 16, !dbg !12415
  %32 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !12416
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %32, i32 0, i32 2, !dbg !12417
  %33 = load float, float* %ymin, align 4, !dbg !12417
  %arrayidx31 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %bucket_bounds_ss, i64 0, i64 0, !dbg !12418
  %arrayidx32 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx31, i64 0, i64 1, !dbg !12418
  store float %33, float* %arrayidx32, align 4, !dbg !12419
  %arrayidx33 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %bucket_bounds_ss, i64 0, i64 0, !dbg !12420
  %arraydecay34 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx33, i64 0, i64 0, !dbg !12420
  %34 = load float*, float** %v1coSS.addr, align 8, !dbg !12421
  %35 = load float*, float** %v2coSS.addr, align 8, !dbg !12422
  %36 = load float*, float** %v3coSS.addr, align 8, !dbg !12423
  %call35 = call zeroext i8 @IsectPT2Df_limit(float* %arraydecay34, float* %34, float* %35, float* %36, float 0x3FF0031260000000), !dbg !12424
  %conv36 = zext i8 %call35 to i32, !dbg !12424
  %tobool37 = icmp ne i32 %conv36, 0, !dbg !12424
  %37 = zext i1 %tobool37 to i64, !dbg !12424
  %cond = select i1 %tobool37, i32 1, i32 0, !dbg !12424
  %38 = load i32, i32* %inside_face_flag, align 4, !dbg !12425
  %or38 = or i32 %38, %cond, !dbg !12425
  store i32 %or38, i32* %inside_face_flag, align 4, !dbg !12425
  %39 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !12426
  %xmax39 = getelementptr inbounds %struct.rctf, %struct.rctf* %39, i32 0, i32 1, !dbg !12427
  %40 = load float, float* %xmax39, align 4, !dbg !12427
  %arrayidx40 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %bucket_bounds_ss, i64 0, i64 1, !dbg !12428
  %arrayidx41 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx40, i64 0, i64 0, !dbg !12428
  store float %40, float* %arrayidx41, align 8, !dbg !12429
  %41 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !12430
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %41, i32 0, i32 3, !dbg !12431
  %42 = load float, float* %ymax, align 4, !dbg !12431
  %arrayidx42 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %bucket_bounds_ss, i64 0, i64 1, !dbg !12432
  %arrayidx43 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx42, i64 0, i64 1, !dbg !12432
  store float %42, float* %arrayidx43, align 4, !dbg !12433
  %arrayidx44 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %bucket_bounds_ss, i64 0, i64 1, !dbg !12434
  %arraydecay45 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx44, i64 0, i64 0, !dbg !12434
  %43 = load float*, float** %v1coSS.addr, align 8, !dbg !12435
  %44 = load float*, float** %v2coSS.addr, align 8, !dbg !12436
  %45 = load float*, float** %v3coSS.addr, align 8, !dbg !12437
  %call46 = call zeroext i8 @IsectPT2Df_limit(float* %arraydecay45, float* %43, float* %44, float* %45, float 0x3FF0031260000000), !dbg !12438
  %conv47 = zext i8 %call46 to i32, !dbg !12438
  %tobool48 = icmp ne i32 %conv47, 0, !dbg !12438
  %46 = zext i1 %tobool48 to i64, !dbg !12438
  %cond49 = select i1 %tobool48, i32 2, i32 0, !dbg !12438
  %47 = load i32, i32* %inside_face_flag, align 4, !dbg !12439
  %or50 = or i32 %47, %cond49, !dbg !12439
  store i32 %or50, i32* %inside_face_flag, align 4, !dbg !12439
  %48 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !12440
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %48, i32 0, i32 0, !dbg !12441
  %49 = load float, float* %xmin, align 4, !dbg !12441
  %arrayidx51 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %bucket_bounds_ss, i64 0, i64 2, !dbg !12442
  %arrayidx52 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx51, i64 0, i64 0, !dbg !12442
  store float %49, float* %arrayidx52, align 16, !dbg !12443
  %50 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !12444
  %ymax53 = getelementptr inbounds %struct.rctf, %struct.rctf* %50, i32 0, i32 3, !dbg !12445
  %51 = load float, float* %ymax53, align 4, !dbg !12445
  %arrayidx54 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %bucket_bounds_ss, i64 0, i64 2, !dbg !12446
  %arrayidx55 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx54, i64 0, i64 1, !dbg !12446
  store float %51, float* %arrayidx55, align 4, !dbg !12447
  %arrayidx56 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %bucket_bounds_ss, i64 0, i64 2, !dbg !12448
  %arraydecay57 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx56, i64 0, i64 0, !dbg !12448
  %52 = load float*, float** %v1coSS.addr, align 8, !dbg !12449
  %53 = load float*, float** %v2coSS.addr, align 8, !dbg !12450
  %54 = load float*, float** %v3coSS.addr, align 8, !dbg !12451
  %call58 = call zeroext i8 @IsectPT2Df_limit(float* %arraydecay57, float* %52, float* %53, float* %54, float 0x3FF0031260000000), !dbg !12452
  %conv59 = zext i8 %call58 to i32, !dbg !12452
  %tobool60 = icmp ne i32 %conv59, 0, !dbg !12452
  %55 = zext i1 %tobool60 to i64, !dbg !12452
  %cond61 = select i1 %tobool60, i32 4, i32 0, !dbg !12452
  %56 = load i32, i32* %inside_face_flag, align 4, !dbg !12453
  %or62 = or i32 %56, %cond61, !dbg !12453
  store i32 %or62, i32* %inside_face_flag, align 4, !dbg !12453
  %57 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !12454
  %xmin63 = getelementptr inbounds %struct.rctf, %struct.rctf* %57, i32 0, i32 0, !dbg !12455
  %58 = load float, float* %xmin63, align 4, !dbg !12455
  %arrayidx64 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %bucket_bounds_ss, i64 0, i64 3, !dbg !12456
  %arrayidx65 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx64, i64 0, i64 0, !dbg !12456
  store float %58, float* %arrayidx65, align 8, !dbg !12457
  %59 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !12458
  %ymin66 = getelementptr inbounds %struct.rctf, %struct.rctf* %59, i32 0, i32 2, !dbg !12459
  %60 = load float, float* %ymin66, align 4, !dbg !12459
  %arrayidx67 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %bucket_bounds_ss, i64 0, i64 3, !dbg !12460
  %arrayidx68 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx67, i64 0, i64 1, !dbg !12460
  store float %60, float* %arrayidx68, align 4, !dbg !12461
  %arrayidx69 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %bucket_bounds_ss, i64 0, i64 3, !dbg !12462
  %arraydecay70 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx69, i64 0, i64 0, !dbg !12462
  %61 = load float*, float** %v1coSS.addr, align 8, !dbg !12463
  %62 = load float*, float** %v2coSS.addr, align 8, !dbg !12464
  %63 = load float*, float** %v3coSS.addr, align 8, !dbg !12465
  %call71 = call zeroext i8 @IsectPT2Df_limit(float* %arraydecay70, float* %61, float* %62, float* %63, float 0x3FF0031260000000), !dbg !12466
  %conv72 = zext i8 %call71 to i32, !dbg !12466
  %tobool73 = icmp ne i32 %conv72, 0, !dbg !12466
  %64 = zext i1 %tobool73 to i64, !dbg !12466
  %cond74 = select i1 %tobool73, i32 8, i32 0, !dbg !12466
  %65 = load i32, i32* %inside_face_flag, align 4, !dbg !12467
  %or75 = or i32 %65, %cond74, !dbg !12467
  store i32 %or75, i32* %inside_face_flag, align 4, !dbg !12467
  %66 = load i32, i32* %inside_face_flag, align 4, !dbg !12468
  %cmp76 = icmp eq i32 %66, 15, !dbg !12470
  br i1 %cmp76, label %if.then78, label %if.else83, !dbg !12471

if.then78:                                        ; preds = %if.end28
  %67 = load i8, i8* %is_ortho.addr, align 1, !dbg !12472
  %tobool79 = icmp ne i8 %67, 0, !dbg !12472
  br i1 %tobool79, label %if.then80, label %if.else81, !dbg !12475

if.then80:                                        ; preds = %if.then78
  %68 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !12476
  %69 = load float*, float** %v1coSS.addr, align 8, !dbg !12477
  %70 = load float*, float** %v2coSS.addr, align 8, !dbg !12478
  %71 = load float*, float** %v3coSS.addr, align 8, !dbg !12479
  %72 = load float*, float** %uv1co.addr, align 8, !dbg !12480
  %73 = load float*, float** %uv2co.addr, align 8, !dbg !12481
  %74 = load float*, float** %uv3co.addr, align 8, !dbg !12482
  %75 = load [2 x float]*, [2 x float]** %bucket_bounds_uv.addr, align 8, !dbg !12483
  %76 = load i32, i32* %flip, align 4, !dbg !12484
  call void @rect_to_uvspace_ortho(%struct.rctf* %68, float* %69, float* %70, float* %71, float* %72, float* %73, float* %74, [2 x float]* %75, i32 %76), !dbg !12485
  br label %if.end82, !dbg !12485

if.else81:                                        ; preds = %if.then78
  %77 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !12486
  %78 = load float*, float** %v1coSS.addr, align 8, !dbg !12487
  %79 = load float*, float** %v2coSS.addr, align 8, !dbg !12488
  %80 = load float*, float** %v3coSS.addr, align 8, !dbg !12489
  %81 = load float*, float** %uv1co.addr, align 8, !dbg !12490
  %82 = load float*, float** %uv2co.addr, align 8, !dbg !12491
  %83 = load float*, float** %uv3co.addr, align 8, !dbg !12492
  %84 = load [2 x float]*, [2 x float]** %bucket_bounds_uv.addr, align 8, !dbg !12493
  %85 = load i32, i32* %flip, align 4, !dbg !12494
  call void @rect_to_uvspace_persp(%struct.rctf* %77, float* %78, float* %79, float* %80, float* %81, float* %82, float* %83, [2 x float]* %84, i32 %85), !dbg !12495
  br label %if.end82

if.end82:                                         ; preds = %if.else81, %if.then80
  %86 = load i32*, i32** %tot.addr, align 8, !dbg !12496
  store i32 4, i32* %86, align 4, !dbg !12497
  br label %if.end427, !dbg !12498

if.else83:                                        ; preds = %if.end28
  call void @llvm.dbg.declare(metadata [8 x [3 x float]]* %isectVCosSS, metadata !12499, metadata !DIExpression()), !dbg !12501
  call void @llvm.dbg.declare(metadata [2 x float]* %v1_clipSS, metadata !12502, metadata !DIExpression()), !dbg !12503
  call void @llvm.dbg.declare(metadata [2 x float]* %v2_clipSS, metadata !12504, metadata !DIExpression()), !dbg !12505
  call void @llvm.dbg.declare(metadata [3 x float]* %w, metadata !12506, metadata !DIExpression()), !dbg !12507
  call void @llvm.dbg.declare(metadata [2 x float]* %cent, metadata !12508, metadata !DIExpression()), !dbg !12509
  %87 = bitcast [2 x float]* %cent to i8*, !dbg !12509
  call void @llvm.memset.p0i8.i64(i8* align 4 %87, i8 0, i64 8, i1 false), !dbg !12509
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12510, metadata !DIExpression()), !dbg !12511
  call void @llvm.dbg.declare(metadata i16* %doubles, metadata !12512, metadata !DIExpression()), !dbg !12513
  %88 = load i32*, i32** %tot.addr, align 8, !dbg !12514
  store i32 0, i32* %88, align 4, !dbg !12515
  %89 = load i32, i32* %inside_face_flag, align 4, !dbg !12516
  %and = and i32 %89, 1, !dbg !12518
  %tobool84 = icmp ne i32 %and, 0, !dbg !12518
  br i1 %tobool84, label %if.then85, label %if.end90, !dbg !12519

if.then85:                                        ; preds = %if.else83
  %90 = load i32*, i32** %tot.addr, align 8, !dbg !12520
  %91 = load i32, i32* %90, align 4, !dbg !12522
  %idxprom = sext i32 %91 to i64, !dbg !12523
  %arrayidx86 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom, !dbg !12523
  %arraydecay87 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx86, i64 0, i64 0, !dbg !12523
  %arrayidx88 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %bucket_bounds_ss, i64 0, i64 0, !dbg !12524
  %arraydecay89 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx88, i64 0, i64 0, !dbg !12524
  call void @copy_v2_v2(float* %arraydecay87, float* %arraydecay89), !dbg !12525
  %92 = load i32*, i32** %tot.addr, align 8, !dbg !12526
  %93 = load i32, i32* %92, align 4, !dbg !12527
  %inc = add nsw i32 %93, 1, !dbg !12527
  store i32 %inc, i32* %92, align 4, !dbg !12527
  br label %if.end90, !dbg !12528

if.end90:                                         ; preds = %if.then85, %if.else83
  %94 = load i32, i32* %inside_face_flag, align 4, !dbg !12529
  %and91 = and i32 %94, 2, !dbg !12531
  %tobool92 = icmp ne i32 %and91, 0, !dbg !12531
  br i1 %tobool92, label %if.then93, label %if.end100, !dbg !12532

if.then93:                                        ; preds = %if.end90
  %95 = load i32*, i32** %tot.addr, align 8, !dbg !12533
  %96 = load i32, i32* %95, align 4, !dbg !12535
  %idxprom94 = sext i32 %96 to i64, !dbg !12536
  %arrayidx95 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom94, !dbg !12536
  %arraydecay96 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx95, i64 0, i64 0, !dbg !12536
  %arrayidx97 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %bucket_bounds_ss, i64 0, i64 1, !dbg !12537
  %arraydecay98 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx97, i64 0, i64 0, !dbg !12537
  call void @copy_v2_v2(float* %arraydecay96, float* %arraydecay98), !dbg !12538
  %97 = load i32*, i32** %tot.addr, align 8, !dbg !12539
  %98 = load i32, i32* %97, align 4, !dbg !12540
  %inc99 = add nsw i32 %98, 1, !dbg !12540
  store i32 %inc99, i32* %97, align 4, !dbg !12540
  br label %if.end100, !dbg !12541

if.end100:                                        ; preds = %if.then93, %if.end90
  %99 = load i32, i32* %inside_face_flag, align 4, !dbg !12542
  %and101 = and i32 %99, 4, !dbg !12544
  %tobool102 = icmp ne i32 %and101, 0, !dbg !12544
  br i1 %tobool102, label %if.then103, label %if.end110, !dbg !12545

if.then103:                                       ; preds = %if.end100
  %100 = load i32*, i32** %tot.addr, align 8, !dbg !12546
  %101 = load i32, i32* %100, align 4, !dbg !12548
  %idxprom104 = sext i32 %101 to i64, !dbg !12549
  %arrayidx105 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom104, !dbg !12549
  %arraydecay106 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx105, i64 0, i64 0, !dbg !12549
  %arrayidx107 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %bucket_bounds_ss, i64 0, i64 2, !dbg !12550
  %arraydecay108 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx107, i64 0, i64 0, !dbg !12550
  call void @copy_v2_v2(float* %arraydecay106, float* %arraydecay108), !dbg !12551
  %102 = load i32*, i32** %tot.addr, align 8, !dbg !12552
  %103 = load i32, i32* %102, align 4, !dbg !12553
  %inc109 = add nsw i32 %103, 1, !dbg !12553
  store i32 %inc109, i32* %102, align 4, !dbg !12553
  br label %if.end110, !dbg !12554

if.end110:                                        ; preds = %if.then103, %if.end100
  %104 = load i32, i32* %inside_face_flag, align 4, !dbg !12555
  %and111 = and i32 %104, 8, !dbg !12557
  %tobool112 = icmp ne i32 %and111, 0, !dbg !12557
  br i1 %tobool112, label %if.then113, label %if.end120, !dbg !12558

if.then113:                                       ; preds = %if.end110
  %105 = load i32*, i32** %tot.addr, align 8, !dbg !12559
  %106 = load i32, i32* %105, align 4, !dbg !12561
  %idxprom114 = sext i32 %106 to i64, !dbg !12562
  %arrayidx115 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom114, !dbg !12562
  %arraydecay116 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx115, i64 0, i64 0, !dbg !12562
  %arrayidx117 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %bucket_bounds_ss, i64 0, i64 3, !dbg !12563
  %arraydecay118 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx117, i64 0, i64 0, !dbg !12563
  call void @copy_v2_v2(float* %arraydecay116, float* %arraydecay118), !dbg !12564
  %107 = load i32*, i32** %tot.addr, align 8, !dbg !12565
  %108 = load i32, i32* %107, align 4, !dbg !12566
  %inc119 = add nsw i32 %108, 1, !dbg !12566
  store i32 %inc119, i32* %107, align 4, !dbg !12566
  br label %if.end120, !dbg !12567

if.end120:                                        ; preds = %if.then113, %if.end110
  %109 = load i32, i32* %inside_bucket_flag, align 4, !dbg !12568
  %and121 = and i32 %109, 1, !dbg !12570
  %tobool122 = icmp ne i32 %and121, 0, !dbg !12570
  br i1 %tobool122, label %if.then123, label %if.end128, !dbg !12571

if.then123:                                       ; preds = %if.end120
  %110 = load i32*, i32** %tot.addr, align 8, !dbg !12572
  %111 = load i32, i32* %110, align 4, !dbg !12574
  %idxprom124 = sext i32 %111 to i64, !dbg !12575
  %arrayidx125 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom124, !dbg !12575
  %arraydecay126 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx125, i64 0, i64 0, !dbg !12575
  %112 = load float*, float** %v1coSS.addr, align 8, !dbg !12576
  call void @copy_v2_v2(float* %arraydecay126, float* %112), !dbg !12577
  %113 = load i32*, i32** %tot.addr, align 8, !dbg !12578
  %114 = load i32, i32* %113, align 4, !dbg !12579
  %inc127 = add nsw i32 %114, 1, !dbg !12579
  store i32 %inc127, i32* %113, align 4, !dbg !12579
  br label %if.end128, !dbg !12580

if.end128:                                        ; preds = %if.then123, %if.end120
  %115 = load i32, i32* %inside_bucket_flag, align 4, !dbg !12581
  %and129 = and i32 %115, 2, !dbg !12583
  %tobool130 = icmp ne i32 %and129, 0, !dbg !12583
  br i1 %tobool130, label %if.then131, label %if.end136, !dbg !12584

if.then131:                                       ; preds = %if.end128
  %116 = load i32*, i32** %tot.addr, align 8, !dbg !12585
  %117 = load i32, i32* %116, align 4, !dbg !12587
  %idxprom132 = sext i32 %117 to i64, !dbg !12588
  %arrayidx133 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom132, !dbg !12588
  %arraydecay134 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx133, i64 0, i64 0, !dbg !12588
  %118 = load float*, float** %v2coSS.addr, align 8, !dbg !12589
  call void @copy_v2_v2(float* %arraydecay134, float* %118), !dbg !12590
  %119 = load i32*, i32** %tot.addr, align 8, !dbg !12591
  %120 = load i32, i32* %119, align 4, !dbg !12592
  %inc135 = add nsw i32 %120, 1, !dbg !12592
  store i32 %inc135, i32* %119, align 4, !dbg !12592
  br label %if.end136, !dbg !12593

if.end136:                                        ; preds = %if.then131, %if.end128
  %121 = load i32, i32* %inside_bucket_flag, align 4, !dbg !12594
  %and137 = and i32 %121, 4, !dbg !12596
  %tobool138 = icmp ne i32 %and137, 0, !dbg !12596
  br i1 %tobool138, label %if.then139, label %if.end144, !dbg !12597

if.then139:                                       ; preds = %if.end136
  %122 = load i32*, i32** %tot.addr, align 8, !dbg !12598
  %123 = load i32, i32* %122, align 4, !dbg !12600
  %idxprom140 = sext i32 %123 to i64, !dbg !12601
  %arrayidx141 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom140, !dbg !12601
  %arraydecay142 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx141, i64 0, i64 0, !dbg !12601
  %124 = load float*, float** %v3coSS.addr, align 8, !dbg !12602
  call void @copy_v2_v2(float* %arraydecay142, float* %124), !dbg !12603
  %125 = load i32*, i32** %tot.addr, align 8, !dbg !12604
  %126 = load i32, i32* %125, align 4, !dbg !12605
  %inc143 = add nsw i32 %126, 1, !dbg !12605
  store i32 %inc143, i32* %125, align 4, !dbg !12605
  br label %if.end144, !dbg !12606

if.end144:                                        ; preds = %if.then139, %if.end136
  %127 = load i32, i32* %inside_bucket_flag, align 4, !dbg !12607
  %and145 = and i32 %127, 3, !dbg !12609
  %cmp146 = icmp ne i32 %and145, 3, !dbg !12610
  br i1 %cmp146, label %if.then148, label %if.end175, !dbg !12611

if.then148:                                       ; preds = %if.end144
  %128 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !12612
  %129 = load float*, float** %v1coSS.addr, align 8, !dbg !12615
  %130 = load float*, float** %v2coSS.addr, align 8, !dbg !12616
  %arraydecay149 = getelementptr inbounds [2 x float], [2 x float]* %v1_clipSS, i64 0, i64 0, !dbg !12617
  %arraydecay150 = getelementptr inbounds [2 x float], [2 x float]* %v2_clipSS, i64 0, i64 0, !dbg !12618
  %call151 = call zeroext i8 @line_clip_rect2f(%struct.rctf* %128, float* %129, float* %130, float* %arraydecay149, float* %arraydecay150), !dbg !12619
  %tobool152 = icmp ne i8 %call151, 0, !dbg !12619
  br i1 %tobool152, label %if.then153, label %if.end174, !dbg !12620

if.then153:                                       ; preds = %if.then148
  %131 = load i32, i32* %inside_bucket_flag, align 4, !dbg !12621
  %and154 = and i32 %131, 1, !dbg !12624
  %cmp155 = icmp eq i32 %and154, 0, !dbg !12625
  br i1 %cmp155, label %if.then157, label %if.end163, !dbg !12626

if.then157:                                       ; preds = %if.then153
  %132 = load i32*, i32** %tot.addr, align 8, !dbg !12627
  %133 = load i32, i32* %132, align 4, !dbg !12629
  %idxprom158 = sext i32 %133 to i64, !dbg !12630
  %arrayidx159 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom158, !dbg !12630
  %arraydecay160 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx159, i64 0, i64 0, !dbg !12630
  %arraydecay161 = getelementptr inbounds [2 x float], [2 x float]* %v1_clipSS, i64 0, i64 0, !dbg !12631
  call void @copy_v2_v2(float* %arraydecay160, float* %arraydecay161), !dbg !12632
  %134 = load i32*, i32** %tot.addr, align 8, !dbg !12633
  %135 = load i32, i32* %134, align 4, !dbg !12634
  %inc162 = add nsw i32 %135, 1, !dbg !12634
  store i32 %inc162, i32* %134, align 4, !dbg !12634
  br label %if.end163, !dbg !12635

if.end163:                                        ; preds = %if.then157, %if.then153
  %136 = load i32, i32* %inside_bucket_flag, align 4, !dbg !12636
  %and164 = and i32 %136, 2, !dbg !12638
  %cmp165 = icmp eq i32 %and164, 0, !dbg !12639
  br i1 %cmp165, label %if.then167, label %if.end173, !dbg !12640

if.then167:                                       ; preds = %if.end163
  %137 = load i32*, i32** %tot.addr, align 8, !dbg !12641
  %138 = load i32, i32* %137, align 4, !dbg !12643
  %idxprom168 = sext i32 %138 to i64, !dbg !12644
  %arrayidx169 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom168, !dbg !12644
  %arraydecay170 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx169, i64 0, i64 0, !dbg !12644
  %arraydecay171 = getelementptr inbounds [2 x float], [2 x float]* %v2_clipSS, i64 0, i64 0, !dbg !12645
  call void @copy_v2_v2(float* %arraydecay170, float* %arraydecay171), !dbg !12646
  %139 = load i32*, i32** %tot.addr, align 8, !dbg !12647
  %140 = load i32, i32* %139, align 4, !dbg !12648
  %inc172 = add nsw i32 %140, 1, !dbg !12648
  store i32 %inc172, i32* %139, align 4, !dbg !12648
  br label %if.end173, !dbg !12649

if.end173:                                        ; preds = %if.then167, %if.end163
  br label %if.end174, !dbg !12650

if.end174:                                        ; preds = %if.end173, %if.then148
  br label %if.end175, !dbg !12651

if.end175:                                        ; preds = %if.end174, %if.end144
  %141 = load i32, i32* %inside_bucket_flag, align 4, !dbg !12652
  %and176 = and i32 %141, 6, !dbg !12654
  %cmp177 = icmp ne i32 %and176, 6, !dbg !12655
  br i1 %cmp177, label %if.then179, label %if.end206, !dbg !12656

if.then179:                                       ; preds = %if.end175
  %142 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !12657
  %143 = load float*, float** %v2coSS.addr, align 8, !dbg !12660
  %144 = load float*, float** %v3coSS.addr, align 8, !dbg !12661
  %arraydecay180 = getelementptr inbounds [2 x float], [2 x float]* %v1_clipSS, i64 0, i64 0, !dbg !12662
  %arraydecay181 = getelementptr inbounds [2 x float], [2 x float]* %v2_clipSS, i64 0, i64 0, !dbg !12663
  %call182 = call zeroext i8 @line_clip_rect2f(%struct.rctf* %142, float* %143, float* %144, float* %arraydecay180, float* %arraydecay181), !dbg !12664
  %tobool183 = icmp ne i8 %call182, 0, !dbg !12664
  br i1 %tobool183, label %if.then184, label %if.end205, !dbg !12665

if.then184:                                       ; preds = %if.then179
  %145 = load i32, i32* %inside_bucket_flag, align 4, !dbg !12666
  %and185 = and i32 %145, 2, !dbg !12669
  %cmp186 = icmp eq i32 %and185, 0, !dbg !12670
  br i1 %cmp186, label %if.then188, label %if.end194, !dbg !12671

if.then188:                                       ; preds = %if.then184
  %146 = load i32*, i32** %tot.addr, align 8, !dbg !12672
  %147 = load i32, i32* %146, align 4, !dbg !12674
  %idxprom189 = sext i32 %147 to i64, !dbg !12675
  %arrayidx190 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom189, !dbg !12675
  %arraydecay191 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx190, i64 0, i64 0, !dbg !12675
  %arraydecay192 = getelementptr inbounds [2 x float], [2 x float]* %v1_clipSS, i64 0, i64 0, !dbg !12676
  call void @copy_v2_v2(float* %arraydecay191, float* %arraydecay192), !dbg !12677
  %148 = load i32*, i32** %tot.addr, align 8, !dbg !12678
  %149 = load i32, i32* %148, align 4, !dbg !12679
  %inc193 = add nsw i32 %149, 1, !dbg !12679
  store i32 %inc193, i32* %148, align 4, !dbg !12679
  br label %if.end194, !dbg !12680

if.end194:                                        ; preds = %if.then188, %if.then184
  %150 = load i32, i32* %inside_bucket_flag, align 4, !dbg !12681
  %and195 = and i32 %150, 4, !dbg !12683
  %cmp196 = icmp eq i32 %and195, 0, !dbg !12684
  br i1 %cmp196, label %if.then198, label %if.end204, !dbg !12685

if.then198:                                       ; preds = %if.end194
  %151 = load i32*, i32** %tot.addr, align 8, !dbg !12686
  %152 = load i32, i32* %151, align 4, !dbg !12688
  %idxprom199 = sext i32 %152 to i64, !dbg !12689
  %arrayidx200 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom199, !dbg !12689
  %arraydecay201 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx200, i64 0, i64 0, !dbg !12689
  %arraydecay202 = getelementptr inbounds [2 x float], [2 x float]* %v2_clipSS, i64 0, i64 0, !dbg !12690
  call void @copy_v2_v2(float* %arraydecay201, float* %arraydecay202), !dbg !12691
  %153 = load i32*, i32** %tot.addr, align 8, !dbg !12692
  %154 = load i32, i32* %153, align 4, !dbg !12693
  %inc203 = add nsw i32 %154, 1, !dbg !12693
  store i32 %inc203, i32* %153, align 4, !dbg !12693
  br label %if.end204, !dbg !12694

if.end204:                                        ; preds = %if.then198, %if.end194
  br label %if.end205, !dbg !12695

if.end205:                                        ; preds = %if.end204, %if.then179
  br label %if.end206, !dbg !12696

if.end206:                                        ; preds = %if.end205, %if.end175
  %155 = load i32, i32* %inside_bucket_flag, align 4, !dbg !12697
  %and207 = and i32 %155, 5, !dbg !12699
  %cmp208 = icmp ne i32 %and207, 5, !dbg !12700
  br i1 %cmp208, label %if.then210, label %if.end237, !dbg !12701

if.then210:                                       ; preds = %if.end206
  %156 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !12702
  %157 = load float*, float** %v3coSS.addr, align 8, !dbg !12705
  %158 = load float*, float** %v1coSS.addr, align 8, !dbg !12706
  %arraydecay211 = getelementptr inbounds [2 x float], [2 x float]* %v1_clipSS, i64 0, i64 0, !dbg !12707
  %arraydecay212 = getelementptr inbounds [2 x float], [2 x float]* %v2_clipSS, i64 0, i64 0, !dbg !12708
  %call213 = call zeroext i8 @line_clip_rect2f(%struct.rctf* %156, float* %157, float* %158, float* %arraydecay211, float* %arraydecay212), !dbg !12709
  %tobool214 = icmp ne i8 %call213, 0, !dbg !12709
  br i1 %tobool214, label %if.then215, label %if.end236, !dbg !12710

if.then215:                                       ; preds = %if.then210
  %159 = load i32, i32* %inside_bucket_flag, align 4, !dbg !12711
  %and216 = and i32 %159, 4, !dbg !12714
  %cmp217 = icmp eq i32 %and216, 0, !dbg !12715
  br i1 %cmp217, label %if.then219, label %if.end225, !dbg !12716

if.then219:                                       ; preds = %if.then215
  %160 = load i32*, i32** %tot.addr, align 8, !dbg !12717
  %161 = load i32, i32* %160, align 4, !dbg !12719
  %idxprom220 = sext i32 %161 to i64, !dbg !12720
  %arrayidx221 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom220, !dbg !12720
  %arraydecay222 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx221, i64 0, i64 0, !dbg !12720
  %arraydecay223 = getelementptr inbounds [2 x float], [2 x float]* %v1_clipSS, i64 0, i64 0, !dbg !12721
  call void @copy_v2_v2(float* %arraydecay222, float* %arraydecay223), !dbg !12722
  %162 = load i32*, i32** %tot.addr, align 8, !dbg !12723
  %163 = load i32, i32* %162, align 4, !dbg !12724
  %inc224 = add nsw i32 %163, 1, !dbg !12724
  store i32 %inc224, i32* %162, align 4, !dbg !12724
  br label %if.end225, !dbg !12725

if.end225:                                        ; preds = %if.then219, %if.then215
  %164 = load i32, i32* %inside_bucket_flag, align 4, !dbg !12726
  %and226 = and i32 %164, 1, !dbg !12728
  %cmp227 = icmp eq i32 %and226, 0, !dbg !12729
  br i1 %cmp227, label %if.then229, label %if.end235, !dbg !12730

if.then229:                                       ; preds = %if.end225
  %165 = load i32*, i32** %tot.addr, align 8, !dbg !12731
  %166 = load i32, i32* %165, align 4, !dbg !12733
  %idxprom230 = sext i32 %166 to i64, !dbg !12734
  %arrayidx231 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom230, !dbg !12734
  %arraydecay232 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx231, i64 0, i64 0, !dbg !12734
  %arraydecay233 = getelementptr inbounds [2 x float], [2 x float]* %v2_clipSS, i64 0, i64 0, !dbg !12735
  call void @copy_v2_v2(float* %arraydecay232, float* %arraydecay233), !dbg !12736
  %167 = load i32*, i32** %tot.addr, align 8, !dbg !12737
  %168 = load i32, i32* %167, align 4, !dbg !12738
  %inc234 = add nsw i32 %168, 1, !dbg !12738
  store i32 %inc234, i32* %167, align 4, !dbg !12738
  br label %if.end235, !dbg !12739

if.end235:                                        ; preds = %if.then229, %if.end225
  br label %if.end236, !dbg !12740

if.end236:                                        ; preds = %if.end235, %if.then210
  br label %if.end237, !dbg !12741

if.end237:                                        ; preds = %if.end236, %if.end206
  %169 = load i32*, i32** %tot.addr, align 8, !dbg !12742
  %170 = load i32, i32* %169, align 4, !dbg !12744
  %cmp238 = icmp slt i32 %170, 3, !dbg !12745
  br i1 %cmp238, label %if.then240, label %if.end241, !dbg !12746

if.then240:                                       ; preds = %if.end237
  %171 = load i32*, i32** %tot.addr, align 8, !dbg !12747
  store i32 0, i32* %171, align 4, !dbg !12749
  br label %if.end427, !dbg !12750

if.end241:                                        ; preds = %if.end237
  store i32 0, i32* %i, align 4, !dbg !12751
  br label %for.cond, !dbg !12753

for.cond:                                         ; preds = %for.inc, %if.end241
  %172 = load i32, i32* %i, align 4, !dbg !12754
  %173 = load i32*, i32** %tot.addr, align 8, !dbg !12756
  %174 = load i32, i32* %173, align 4, !dbg !12757
  %cmp242 = icmp slt i32 %172, %174, !dbg !12758
  br i1 %cmp242, label %for.body, label %for.end, !dbg !12759

for.body:                                         ; preds = %for.cond
  %175 = load i32, i32* %i, align 4, !dbg !12760
  %idxprom244 = sext i32 %175 to i64, !dbg !12762
  %arrayidx245 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom244, !dbg !12762
  %arrayidx246 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx245, i64 0, i64 0, !dbg !12762
  %176 = load float, float* %arrayidx246, align 4, !dbg !12762
  %arrayidx247 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !12763
  %177 = load float, float* %arrayidx247, align 4, !dbg !12764
  %add = fadd float %177, %176, !dbg !12764
  store float %add, float* %arrayidx247, align 4, !dbg !12764
  %178 = load i32, i32* %i, align 4, !dbg !12765
  %idxprom248 = sext i32 %178 to i64, !dbg !12766
  %arrayidx249 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom248, !dbg !12766
  %arrayidx250 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx249, i64 0, i64 1, !dbg !12766
  %179 = load float, float* %arrayidx250, align 4, !dbg !12766
  %arrayidx251 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 1, !dbg !12767
  %180 = load float, float* %arrayidx251, align 4, !dbg !12768
  %add252 = fadd float %180, %179, !dbg !12768
  store float %add252, float* %arrayidx251, align 4, !dbg !12768
  br label %for.inc, !dbg !12769

for.inc:                                          ; preds = %for.body
  %181 = load i32, i32* %i, align 4, !dbg !12770
  %inc253 = add nsw i32 %181, 1, !dbg !12770
  store i32 %inc253, i32* %i, align 4, !dbg !12770
  br label %for.cond, !dbg !12771, !llvm.loop !12772

for.end:                                          ; preds = %for.cond
  %arrayidx254 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !12774
  %182 = load float, float* %arrayidx254, align 4, !dbg !12774
  %183 = load i32*, i32** %tot.addr, align 8, !dbg !12775
  %184 = load i32, i32* %183, align 4, !dbg !12776
  %conv255 = sitofp i32 %184 to float, !dbg !12777
  %div = fdiv float %182, %conv255, !dbg !12778
  %arrayidx256 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !12779
  store float %div, float* %arrayidx256, align 4, !dbg !12780
  %arrayidx257 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 1, !dbg !12781
  %185 = load float, float* %arrayidx257, align 4, !dbg !12781
  %186 = load i32*, i32** %tot.addr, align 8, !dbg !12782
  %187 = load i32, i32* %186, align 4, !dbg !12783
  %conv258 = sitofp i32 %187 to float, !dbg !12784
  %div259 = fdiv float %185, %conv258, !dbg !12785
  %arrayidx260 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 1, !dbg !12786
  store float %div259, float* %arrayidx260, align 4, !dbg !12787
  %arrayidx261 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !12788
  %188 = load float, float* %arrayidx261, align 4, !dbg !12788
  %arrayidx262 = getelementptr inbounds [2 x float], [2 x float]* %v1_clipSS, i64 0, i64 0, !dbg !12789
  store float %188, float* %arrayidx262, align 4, !dbg !12790
  %arrayidx263 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 1, !dbg !12791
  %189 = load float, float* %arrayidx263, align 4, !dbg !12791
  %add264 = fadd float %189, 1.000000e+00, !dbg !12792
  %arrayidx265 = getelementptr inbounds [2 x float], [2 x float]* %v1_clipSS, i64 0, i64 1, !dbg !12793
  store float %add264, float* %arrayidx265, align 4, !dbg !12794
  store i32 0, i32* %i, align 4, !dbg !12795
  br label %for.cond266, !dbg !12797

for.cond266:                                      ; preds = %for.inc298, %for.end
  %190 = load i32, i32* %i, align 4, !dbg !12798
  %191 = load i32*, i32** %tot.addr, align 8, !dbg !12800
  %192 = load i32, i32* %191, align 4, !dbg !12801
  %cmp267 = icmp slt i32 %190, %192, !dbg !12802
  br i1 %cmp267, label %for.body269, label %for.end300, !dbg !12803

for.body269:                                      ; preds = %for.cond266
  %193 = load i32, i32* %i, align 4, !dbg !12804
  %idxprom270 = sext i32 %193 to i64, !dbg !12806
  %arrayidx271 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom270, !dbg !12806
  %arrayidx272 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx271, i64 0, i64 0, !dbg !12806
  %194 = load float, float* %arrayidx272, align 4, !dbg !12806
  %arrayidx273 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !12807
  %195 = load float, float* %arrayidx273, align 4, !dbg !12807
  %sub = fsub float %194, %195, !dbg !12808
  %arrayidx274 = getelementptr inbounds [2 x float], [2 x float]* %v2_clipSS, i64 0, i64 0, !dbg !12809
  store float %sub, float* %arrayidx274, align 4, !dbg !12810
  %196 = load i32, i32* %i, align 4, !dbg !12811
  %idxprom275 = sext i32 %196 to i64, !dbg !12812
  %arrayidx276 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom275, !dbg !12812
  %arrayidx277 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx276, i64 0, i64 1, !dbg !12812
  %197 = load float, float* %arrayidx277, align 4, !dbg !12812
  %arrayidx278 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 1, !dbg !12813
  %198 = load float, float* %arrayidx278, align 4, !dbg !12813
  %sub279 = fsub float %197, %198, !dbg !12814
  %arrayidx280 = getelementptr inbounds [2 x float], [2 x float]* %v2_clipSS, i64 0, i64 1, !dbg !12815
  store float %sub279, float* %arrayidx280, align 4, !dbg !12816
  %arrayidx281 = getelementptr inbounds [2 x float], [2 x float]* %v1_clipSS, i64 0, i64 0, !dbg !12817
  %199 = load float, float* %arrayidx281, align 4, !dbg !12817
  %arrayidx282 = getelementptr inbounds [2 x float], [2 x float]* %v2_clipSS, i64 0, i64 1, !dbg !12818
  %200 = load float, float* %arrayidx282, align 4, !dbg !12818
  %mul = fmul float %199, %200, !dbg !12819
  %arrayidx283 = getelementptr inbounds [2 x float], [2 x float]* %v1_clipSS, i64 0, i64 1, !dbg !12820
  %201 = load float, float* %arrayidx283, align 4, !dbg !12820
  %arrayidx284 = getelementptr inbounds [2 x float], [2 x float]* %v2_clipSS, i64 0, i64 0, !dbg !12821
  %202 = load float, float* %arrayidx284, align 4, !dbg !12821
  %mul285 = fmul float %201, %202, !dbg !12822
  %sub286 = fsub float %mul, %mul285, !dbg !12823
  %arrayidx287 = getelementptr inbounds [2 x float], [2 x float]* %v1_clipSS, i64 0, i64 0, !dbg !12824
  %203 = load float, float* %arrayidx287, align 4, !dbg !12824
  %arrayidx288 = getelementptr inbounds [2 x float], [2 x float]* %v2_clipSS, i64 0, i64 0, !dbg !12825
  %204 = load float, float* %arrayidx288, align 4, !dbg !12825
  %mul289 = fmul float %203, %204, !dbg !12826
  %arrayidx290 = getelementptr inbounds [2 x float], [2 x float]* %v1_clipSS, i64 0, i64 1, !dbg !12827
  %205 = load float, float* %arrayidx290, align 4, !dbg !12827
  %arrayidx291 = getelementptr inbounds [2 x float], [2 x float]* %v2_clipSS, i64 0, i64 1, !dbg !12828
  %206 = load float, float* %arrayidx291, align 4, !dbg !12828
  %mul292 = fmul float %205, %206, !dbg !12829
  %add293 = fadd float %mul289, %mul292, !dbg !12830
  %call294 = call float @atan2f(float %sub286, float %add293) #5, !dbg !12831
  %207 = load i32, i32* %i, align 4, !dbg !12832
  %idxprom295 = sext i32 %207 to i64, !dbg !12833
  %arrayidx296 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom295, !dbg !12833
  %arrayidx297 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx296, i64 0, i64 2, !dbg !12833
  store float %call294, float* %arrayidx297, align 4, !dbg !12834
  br label %for.inc298, !dbg !12835

for.inc298:                                       ; preds = %for.body269
  %208 = load i32, i32* %i, align 4, !dbg !12836
  %inc299 = add nsw i32 %208, 1, !dbg !12836
  store i32 %inc299, i32* %i, align 4, !dbg !12836
  br label %for.cond266, !dbg !12837, !llvm.loop !12838

for.end300:                                       ; preds = %for.cond266
  %209 = load i32, i32* %flip, align 4, !dbg !12840
  %tobool301 = icmp ne i32 %209, 0, !dbg !12840
  br i1 %tobool301, label %if.then302, label %if.else305, !dbg !12842

if.then302:                                       ; preds = %for.end300
  %arraydecay303 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 0, !dbg !12843
  %210 = bitcast [3 x float]* %arraydecay303 to i8*, !dbg !12843
  %211 = load i32*, i32** %tot.addr, align 8, !dbg !12844
  %212 = load i32, i32* %211, align 4, !dbg !12845
  %conv304 = sext i32 %212 to i64, !dbg !12845
  call void @qsort(i8* %210, i64 %conv304, i64 12, i32 (i8*, i8*)* @float_z_sort_flip), !dbg !12846
  br label %if.end308, !dbg !12846

if.else305:                                       ; preds = %for.end300
  %arraydecay306 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 0, !dbg !12847
  %213 = bitcast [3 x float]* %arraydecay306 to i8*, !dbg !12847
  %214 = load i32*, i32** %tot.addr, align 8, !dbg !12848
  %215 = load i32, i32* %214, align 4, !dbg !12849
  %conv307 = sext i32 %215 to i64, !dbg !12849
  call void @qsort(i8* %213, i64 %conv307, i64 12, i32 (i8*, i8*)* @float_z_sort), !dbg !12850
  br label %if.end308

if.end308:                                        ; preds = %if.else305, %if.then302
  %arrayidx309 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 0, !dbg !12851
  %arrayidx310 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx309, i64 0, i64 0, !dbg !12851
  %216 = load float, float* %arrayidx310, align 16, !dbg !12851
  %217 = load i32*, i32** %tot.addr, align 8, !dbg !12853
  %218 = load i32, i32* %217, align 4, !dbg !12854
  %sub311 = sub nsw i32 %218, 1, !dbg !12855
  %idxprom312 = sext i32 %sub311 to i64, !dbg !12856
  %arrayidx313 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom312, !dbg !12856
  %arrayidx314 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx313, i64 0, i64 0, !dbg !12856
  %219 = load float, float* %arrayidx314, align 4, !dbg !12856
  %sub315 = fsub float %216, %219, !dbg !12857
  %220 = call float @llvm.fabs.f32(float %sub315), !dbg !12858
  %cmp316 = fcmp olt float %220, 0x3F847AE140000000, !dbg !12859
  br i1 %cmp316, label %land.lhs.true, label %if.end328, !dbg !12860

land.lhs.true:                                    ; preds = %if.end308
  %arrayidx318 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 0, !dbg !12861
  %arrayidx319 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx318, i64 0, i64 1, !dbg !12861
  %221 = load float, float* %arrayidx319, align 4, !dbg !12861
  %222 = load i32*, i32** %tot.addr, align 8, !dbg !12862
  %223 = load i32, i32* %222, align 4, !dbg !12863
  %sub320 = sub nsw i32 %223, 1, !dbg !12864
  %idxprom321 = sext i32 %sub320 to i64, !dbg !12865
  %arrayidx322 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom321, !dbg !12865
  %arrayidx323 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx322, i64 0, i64 1, !dbg !12865
  %224 = load float, float* %arrayidx323, align 4, !dbg !12865
  %sub324 = fsub float %221, %224, !dbg !12866
  %225 = call float @llvm.fabs.f32(float %sub324), !dbg !12867
  %cmp325 = fcmp olt float %225, 0x3F847AE140000000, !dbg !12868
  br i1 %cmp325, label %if.then327, label %if.end328, !dbg !12869

if.then327:                                       ; preds = %land.lhs.true
  %226 = load i32*, i32** %tot.addr, align 8, !dbg !12870
  %227 = load i32, i32* %226, align 4, !dbg !12872
  %dec = add nsw i32 %227, -1, !dbg !12872
  store i32 %dec, i32* %226, align 4, !dbg !12872
  br label %if.end328, !dbg !12873

if.end328:                                        ; preds = %if.then327, %land.lhs.true, %if.end308
  %228 = load i32*, i32** %tot.addr, align 8, !dbg !12874
  %229 = load i32, i32* %228, align 4, !dbg !12876
  %cmp329 = icmp slt i32 %229, 3, !dbg !12877
  br i1 %cmp329, label %if.then331, label %if.end332, !dbg !12878

if.then331:                                       ; preds = %if.end328
  %230 = load i32*, i32** %tot.addr, align 8, !dbg !12879
  store i32 0, i32* %230, align 4, !dbg !12881
  br label %if.end427, !dbg !12882

if.end332:                                        ; preds = %if.end328
  store i16 1, i16* %doubles, align 2, !dbg !12883
  br label %while.cond, !dbg !12884

while.cond:                                       ; preds = %for.end388, %if.end332
  %231 = load i16, i16* %doubles, align 2, !dbg !12885
  %conv333 = sext i16 %231 to i32, !dbg !12885
  %cmp334 = icmp eq i32 %conv333, 1, !dbg !12886
  br i1 %cmp334, label %while.body, label %while.end, !dbg !12884

while.body:                                       ; preds = %while.cond
  store i16 0, i16* %doubles, align 2, !dbg !12887
  store i32 1, i32* %i, align 4, !dbg !12889
  br label %for.cond336, !dbg !12891

for.cond336:                                      ; preds = %for.inc386, %while.body
  %232 = load i32, i32* %i, align 4, !dbg !12892
  %233 = load i32*, i32** %tot.addr, align 8, !dbg !12894
  %234 = load i32, i32* %233, align 4, !dbg !12895
  %cmp337 = icmp slt i32 %232, %234, !dbg !12896
  br i1 %cmp337, label %for.body339, label %for.end388, !dbg !12897

for.body339:                                      ; preds = %for.cond336
  %235 = load i32, i32* %i, align 4, !dbg !12898
  %sub340 = sub nsw i32 %235, 1, !dbg !12901
  %idxprom341 = sext i32 %sub340 to i64, !dbg !12902
  %arrayidx342 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom341, !dbg !12902
  %arrayidx343 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx342, i64 0, i64 0, !dbg !12902
  %236 = load float, float* %arrayidx343, align 4, !dbg !12902
  %237 = load i32, i32* %i, align 4, !dbg !12903
  %idxprom344 = sext i32 %237 to i64, !dbg !12904
  %arrayidx345 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom344, !dbg !12904
  %arrayidx346 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx345, i64 0, i64 0, !dbg !12904
  %238 = load float, float* %arrayidx346, align 4, !dbg !12904
  %sub347 = fsub float %236, %238, !dbg !12905
  %239 = call float @llvm.fabs.f32(float %sub347), !dbg !12906
  %cmp348 = fcmp olt float %239, 0x3F847AE140000000, !dbg !12907
  br i1 %cmp348, label %land.lhs.true350, label %if.end385, !dbg !12908

land.lhs.true350:                                 ; preds = %for.body339
  %240 = load i32, i32* %i, align 4, !dbg !12909
  %sub351 = sub nsw i32 %240, 1, !dbg !12910
  %idxprom352 = sext i32 %sub351 to i64, !dbg !12911
  %arrayidx353 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom352, !dbg !12911
  %arrayidx354 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx353, i64 0, i64 1, !dbg !12911
  %241 = load float, float* %arrayidx354, align 4, !dbg !12911
  %242 = load i32, i32* %i, align 4, !dbg !12912
  %idxprom355 = sext i32 %242 to i64, !dbg !12913
  %arrayidx356 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom355, !dbg !12913
  %arrayidx357 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx356, i64 0, i64 1, !dbg !12913
  %243 = load float, float* %arrayidx357, align 4, !dbg !12913
  %sub358 = fsub float %241, %243, !dbg !12914
  %244 = call float @llvm.fabs.f32(float %sub358), !dbg !12915
  %cmp359 = fcmp olt float %244, 0x3F847AE140000000, !dbg !12916
  br i1 %cmp359, label %if.then361, label %if.end385, !dbg !12917

if.then361:                                       ; preds = %land.lhs.true350
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12918, metadata !DIExpression()), !dbg !12920
  %245 = load i32, i32* %i, align 4, !dbg !12921
  %add362 = add nsw i32 %245, 1, !dbg !12923
  store i32 %add362, i32* %j, align 4, !dbg !12924
  br label %for.cond363, !dbg !12925

for.cond363:                                      ; preds = %for.inc381, %if.then361
  %246 = load i32, i32* %j, align 4, !dbg !12926
  %247 = load i32*, i32** %tot.addr, align 8, !dbg !12928
  %248 = load i32, i32* %247, align 4, !dbg !12929
  %cmp364 = icmp slt i32 %246, %248, !dbg !12930
  br i1 %cmp364, label %for.body366, label %for.end383, !dbg !12931

for.body366:                                      ; preds = %for.cond363
  %249 = load i32, i32* %j, align 4, !dbg !12932
  %idxprom367 = sext i32 %249 to i64, !dbg !12934
  %arrayidx368 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom367, !dbg !12934
  %arrayidx369 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx368, i64 0, i64 0, !dbg !12934
  %250 = load float, float* %arrayidx369, align 4, !dbg !12934
  %251 = load i32, i32* %j, align 4, !dbg !12935
  %sub370 = sub nsw i32 %251, 1, !dbg !12936
  %idxprom371 = sext i32 %sub370 to i64, !dbg !12937
  %arrayidx372 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom371, !dbg !12937
  %arrayidx373 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx372, i64 0, i64 0, !dbg !12937
  store float %250, float* %arrayidx373, align 4, !dbg !12938
  %252 = load i32, i32* %j, align 4, !dbg !12939
  %idxprom374 = sext i32 %252 to i64, !dbg !12940
  %arrayidx375 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom374, !dbg !12940
  %arrayidx376 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx375, i64 0, i64 1, !dbg !12940
  %253 = load float, float* %arrayidx376, align 4, !dbg !12940
  %254 = load i32, i32* %j, align 4, !dbg !12941
  %sub377 = sub nsw i32 %254, 1, !dbg !12942
  %idxprom378 = sext i32 %sub377 to i64, !dbg !12943
  %arrayidx379 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom378, !dbg !12943
  %arrayidx380 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx379, i64 0, i64 1, !dbg !12943
  store float %253, float* %arrayidx380, align 4, !dbg !12944
  br label %for.inc381, !dbg !12945

for.inc381:                                       ; preds = %for.body366
  %255 = load i32, i32* %j, align 4, !dbg !12946
  %inc382 = add nsw i32 %255, 1, !dbg !12946
  store i32 %inc382, i32* %j, align 4, !dbg !12946
  br label %for.cond363, !dbg !12947, !llvm.loop !12948

for.end383:                                       ; preds = %for.cond363
  store i16 1, i16* %doubles, align 2, !dbg !12950
  %256 = load i32*, i32** %tot.addr, align 8, !dbg !12951
  %257 = load i32, i32* %256, align 4, !dbg !12952
  %dec384 = add nsw i32 %257, -1, !dbg !12952
  store i32 %dec384, i32* %256, align 4, !dbg !12952
  br label %if.end385, !dbg !12953

if.end385:                                        ; preds = %for.end383, %land.lhs.true350, %for.body339
  br label %for.inc386, !dbg !12954

for.inc386:                                       ; preds = %if.end385
  %258 = load i32, i32* %i, align 4, !dbg !12955
  %inc387 = add nsw i32 %258, 1, !dbg !12955
  store i32 %inc387, i32* %i, align 4, !dbg !12955
  br label %for.cond336, !dbg !12956, !llvm.loop !12957

for.end388:                                       ; preds = %for.cond336
  br label %while.cond, !dbg !12884, !llvm.loop !12959

while.end:                                        ; preds = %while.cond
  %259 = load i32*, i32** %tot.addr, align 8, !dbg !12961
  %260 = load i32, i32* %259, align 4, !dbg !12963
  %cmp389 = icmp slt i32 %260, 3, !dbg !12964
  br i1 %cmp389, label %if.then391, label %if.end392, !dbg !12965

if.then391:                                       ; preds = %while.end
  %261 = load i32*, i32** %tot.addr, align 8, !dbg !12966
  store i32 0, i32* %261, align 4, !dbg !12968
  br label %if.end427, !dbg !12969

if.end392:                                        ; preds = %while.end
  %262 = load i8, i8* %is_ortho.addr, align 1, !dbg !12970
  %tobool393 = icmp ne i8 %262, 0, !dbg !12970
  br i1 %tobool393, label %if.then394, label %if.else410, !dbg !12972

if.then394:                                       ; preds = %if.end392
  store i32 0, i32* %i, align 4, !dbg !12973
  br label %for.cond395, !dbg !12976

for.cond395:                                      ; preds = %for.inc407, %if.then394
  %263 = load i32, i32* %i, align 4, !dbg !12977
  %264 = load i32*, i32** %tot.addr, align 8, !dbg !12979
  %265 = load i32, i32* %264, align 4, !dbg !12980
  %cmp396 = icmp slt i32 %263, %265, !dbg !12981
  br i1 %cmp396, label %for.body398, label %for.end409, !dbg !12982

for.body398:                                      ; preds = %for.cond395
  %266 = load float*, float** %v1coSS.addr, align 8, !dbg !12983
  %267 = load float*, float** %v2coSS.addr, align 8, !dbg !12985
  %268 = load float*, float** %v3coSS.addr, align 8, !dbg !12986
  %269 = load i32, i32* %i, align 4, !dbg !12987
  %idxprom399 = sext i32 %269 to i64, !dbg !12988
  %arrayidx400 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom399, !dbg !12988
  %arraydecay401 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx400, i64 0, i64 0, !dbg !12988
  %arraydecay402 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !12989
  call void @barycentric_weights_v2(float* %266, float* %267, float* %268, float* %arraydecay401, float* %arraydecay402), !dbg !12990
  %270 = load [2 x float]*, [2 x float]** %bucket_bounds_uv.addr, align 8, !dbg !12991
  %271 = load i32, i32* %i, align 4, !dbg !12992
  %idxprom403 = sext i32 %271 to i64, !dbg !12991
  %arrayidx404 = getelementptr inbounds [2 x float], [2 x float]* %270, i64 %idxprom403, !dbg !12991
  %arraydecay405 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx404, i64 0, i64 0, !dbg !12991
  %272 = load float*, float** %uv1co.addr, align 8, !dbg !12993
  %273 = load float*, float** %uv2co.addr, align 8, !dbg !12994
  %274 = load float*, float** %uv3co.addr, align 8, !dbg !12995
  %arraydecay406 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !12996
  call void @interp_v2_v2v2v2(float* %arraydecay405, float* %272, float* %273, float* %274, float* %arraydecay406), !dbg !12997
  br label %for.inc407, !dbg !12998

for.inc407:                                       ; preds = %for.body398
  %275 = load i32, i32* %i, align 4, !dbg !12999
  %inc408 = add nsw i32 %275, 1, !dbg !12999
  store i32 %inc408, i32* %i, align 4, !dbg !12999
  br label %for.cond395, !dbg !13000, !llvm.loop !13001

for.end409:                                       ; preds = %for.cond395
  br label %if.end426, !dbg !13003

if.else410:                                       ; preds = %if.end392
  store i32 0, i32* %i, align 4, !dbg !13004
  br label %for.cond411, !dbg !13007

for.cond411:                                      ; preds = %for.inc423, %if.else410
  %276 = load i32, i32* %i, align 4, !dbg !13008
  %277 = load i32*, i32** %tot.addr, align 8, !dbg !13010
  %278 = load i32, i32* %277, align 4, !dbg !13011
  %cmp412 = icmp slt i32 %276, %278, !dbg !13012
  br i1 %cmp412, label %for.body414, label %for.end425, !dbg !13013

for.body414:                                      ; preds = %for.cond411
  %279 = load float*, float** %v1coSS.addr, align 8, !dbg !13014
  %280 = load float*, float** %v2coSS.addr, align 8, !dbg !13016
  %281 = load float*, float** %v3coSS.addr, align 8, !dbg !13017
  %282 = load i32, i32* %i, align 4, !dbg !13018
  %idxprom415 = sext i32 %282 to i64, !dbg !13019
  %arrayidx416 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %isectVCosSS, i64 0, i64 %idxprom415, !dbg !13019
  %arraydecay417 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx416, i64 0, i64 0, !dbg !13019
  %arraydecay418 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !13020
  call void @barycentric_weights_v2_persp(float* %279, float* %280, float* %281, float* %arraydecay417, float* %arraydecay418), !dbg !13021
  %283 = load [2 x float]*, [2 x float]** %bucket_bounds_uv.addr, align 8, !dbg !13022
  %284 = load i32, i32* %i, align 4, !dbg !13023
  %idxprom419 = sext i32 %284 to i64, !dbg !13022
  %arrayidx420 = getelementptr inbounds [2 x float], [2 x float]* %283, i64 %idxprom419, !dbg !13022
  %arraydecay421 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx420, i64 0, i64 0, !dbg !13022
  %285 = load float*, float** %uv1co.addr, align 8, !dbg !13024
  %286 = load float*, float** %uv2co.addr, align 8, !dbg !13025
  %287 = load float*, float** %uv3co.addr, align 8, !dbg !13026
  %arraydecay422 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !13027
  call void @interp_v2_v2v2v2(float* %arraydecay421, float* %285, float* %286, float* %287, float* %arraydecay422), !dbg !13028
  br label %for.inc423, !dbg !13029

for.inc423:                                       ; preds = %for.body414
  %288 = load i32, i32* %i, align 4, !dbg !13030
  %inc424 = add nsw i32 %288, 1, !dbg !13030
  store i32 %inc424, i32* %i, align 4, !dbg !13030
  br label %for.cond411, !dbg !13031, !llvm.loop !13032

for.end425:                                       ; preds = %for.cond411
  br label %if.end426

if.end426:                                        ; preds = %for.end425, %for.end409
  br label %if.end427

if.end427:                                        ; preds = %if.end, %if.end82, %if.then240, %if.then331, %if.then391, %if.end426
  ret void, !dbg !13034
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @pixel_bounds_array([2 x float]* %uv, %struct.rcti* %bounds_px, i32 %ibuf_x, i32 %ibuf_y, i32 %tot) #0 !dbg !13035 {
entry:
  %retval = alloca i8, align 1
  %uv.addr = alloca [2 x float]*, align 8
  %bounds_px.addr = alloca %struct.rcti*, align 8
  %ibuf_x.addr = alloca i32, align 4
  %ibuf_y.addr = alloca i32, align 4
  %tot.addr = alloca i32, align 4
  %min_uv = alloca [2 x float], align 4
  %max_uv = alloca [2 x float], align 4
  store [2 x float]* %uv, [2 x float]** %uv.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %uv.addr, metadata !13039, metadata !DIExpression()), !dbg !13040
  store %struct.rcti* %bounds_px, %struct.rcti** %bounds_px.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %bounds_px.addr, metadata !13041, metadata !DIExpression()), !dbg !13042
  store i32 %ibuf_x, i32* %ibuf_x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ibuf_x.addr, metadata !13043, metadata !DIExpression()), !dbg !13044
  store i32 %ibuf_y, i32* %ibuf_y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ibuf_y.addr, metadata !13045, metadata !DIExpression()), !dbg !13046
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !13047, metadata !DIExpression()), !dbg !13048
  call void @llvm.dbg.declare(metadata [2 x float]* %min_uv, metadata !13049, metadata !DIExpression()), !dbg !13050
  call void @llvm.dbg.declare(metadata [2 x float]* %max_uv, metadata !13051, metadata !DIExpression()), !dbg !13052
  %0 = load i32, i32* %tot.addr, align 4, !dbg !13053
  %cmp = icmp eq i32 %0, 0, !dbg !13055
  br i1 %cmp, label %if.then, label %if.end, !dbg !13056

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !13057
  br label %return, !dbg !13057

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %min_uv, i64 0, i64 1, !dbg !13059
  store float 0x46293E5940000000, float* %arrayidx, align 4, !dbg !13059
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %min_uv, i64 0, i64 0, !dbg !13059
  store float 0x46293E5940000000, float* %arrayidx1, align 4, !dbg !13059
  %arrayidx2 = getelementptr inbounds [2 x float], [2 x float]* %max_uv, i64 0, i64 1, !dbg !13059
  store float 0xC6293E5940000000, float* %arrayidx2, align 4, !dbg !13059
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %max_uv, i64 0, i64 0, !dbg !13059
  store float 0xC6293E5940000000, float* %arrayidx3, align 4, !dbg !13059
  br label %while.cond, !dbg !13061

while.cond:                                       ; preds = %while.body, %if.end
  %1 = load i32, i32* %tot.addr, align 4, !dbg !13062
  %dec = add nsw i32 %1, -1, !dbg !13062
  store i32 %dec, i32* %tot.addr, align 4, !dbg !13062
  %tobool = icmp ne i32 %1, 0, !dbg !13061
  br i1 %tobool, label %while.body, label %while.end, !dbg !13061

while.body:                                       ; preds = %while.cond
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %min_uv, i64 0, i64 0, !dbg !13063
  %arraydecay4 = getelementptr inbounds [2 x float], [2 x float]* %max_uv, i64 0, i64 0, !dbg !13065
  %2 = load [2 x float]*, [2 x float]** %uv.addr, align 8, !dbg !13066
  %arraydecay5 = getelementptr inbounds [2 x float], [2 x float]* %2, i64 0, i64 0, !dbg !13067
  call void @minmax_v2v2_v2(float* %arraydecay, float* %arraydecay4, float* %arraydecay5), !dbg !13068
  %3 = load [2 x float]*, [2 x float]** %uv.addr, align 8, !dbg !13069
  %incdec.ptr = getelementptr inbounds [2 x float], [2 x float]* %3, i32 1, !dbg !13069
  store [2 x float]* %incdec.ptr, [2 x float]** %uv.addr, align 8, !dbg !13069
  br label %while.cond, !dbg !13061, !llvm.loop !13070

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %ibuf_x.addr, align 4, !dbg !13072
  %conv = sitofp i32 %4 to float, !dbg !13072
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %min_uv, i64 0, i64 0, !dbg !13073
  %5 = load float, float* %arrayidx6, align 4, !dbg !13073
  %mul = fmul float %conv, %5, !dbg !13074
  %conv7 = fptosi float %mul to i32, !dbg !13075
  %6 = load %struct.rcti*, %struct.rcti** %bounds_px.addr, align 8, !dbg !13076
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %6, i32 0, i32 0, !dbg !13077
  store i32 %conv7, i32* %xmin, align 4, !dbg !13078
  %7 = load i32, i32* %ibuf_y.addr, align 4, !dbg !13079
  %conv8 = sitofp i32 %7 to float, !dbg !13079
  %arrayidx9 = getelementptr inbounds [2 x float], [2 x float]* %min_uv, i64 0, i64 1, !dbg !13080
  %8 = load float, float* %arrayidx9, align 4, !dbg !13080
  %mul10 = fmul float %conv8, %8, !dbg !13081
  %conv11 = fptosi float %mul10 to i32, !dbg !13082
  %9 = load %struct.rcti*, %struct.rcti** %bounds_px.addr, align 8, !dbg !13083
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %9, i32 0, i32 2, !dbg !13084
  store i32 %conv11, i32* %ymin, align 4, !dbg !13085
  %10 = load i32, i32* %ibuf_x.addr, align 4, !dbg !13086
  %conv12 = sitofp i32 %10 to float, !dbg !13086
  %arrayidx13 = getelementptr inbounds [2 x float], [2 x float]* %max_uv, i64 0, i64 0, !dbg !13087
  %11 = load float, float* %arrayidx13, align 4, !dbg !13087
  %mul14 = fmul float %conv12, %11, !dbg !13088
  %conv15 = fptosi float %mul14 to i32, !dbg !13089
  %add = add nsw i32 %conv15, 1, !dbg !13090
  %12 = load %struct.rcti*, %struct.rcti** %bounds_px.addr, align 8, !dbg !13091
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %12, i32 0, i32 1, !dbg !13092
  store i32 %add, i32* %xmax, align 4, !dbg !13093
  %13 = load i32, i32* %ibuf_y.addr, align 4, !dbg !13094
  %conv16 = sitofp i32 %13 to float, !dbg !13094
  %arrayidx17 = getelementptr inbounds [2 x float], [2 x float]* %max_uv, i64 0, i64 1, !dbg !13095
  %14 = load float, float* %arrayidx17, align 4, !dbg !13095
  %mul18 = fmul float %conv16, %14, !dbg !13096
  %conv19 = fptosi float %mul18 to i32, !dbg !13097
  %add20 = add nsw i32 %conv19, 1, !dbg !13098
  %15 = load %struct.rcti*, %struct.rcti** %bounds_px.addr, align 8, !dbg !13099
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %15, i32 0, i32 3, !dbg !13100
  store i32 %add20, i32* %ymax, align 4, !dbg !13101
  %16 = load %struct.rcti*, %struct.rcti** %bounds_px.addr, align 8, !dbg !13102
  %xmin21 = getelementptr inbounds %struct.rcti, %struct.rcti* %16, i32 0, i32 0, !dbg !13103
  %17 = load i32, i32* %xmin21, align 4, !dbg !13103
  %18 = load %struct.rcti*, %struct.rcti** %bounds_px.addr, align 8, !dbg !13104
  %xmax22 = getelementptr inbounds %struct.rcti, %struct.rcti* %18, i32 0, i32 1, !dbg !13105
  %19 = load i32, i32* %xmax22, align 4, !dbg !13105
  %cmp23 = icmp eq i32 %17, %19, !dbg !13106
  br i1 %cmp23, label %lor.end, label %lor.rhs, !dbg !13107

lor.rhs:                                          ; preds = %while.end
  %20 = load %struct.rcti*, %struct.rcti** %bounds_px.addr, align 8, !dbg !13108
  %ymin25 = getelementptr inbounds %struct.rcti, %struct.rcti* %20, i32 0, i32 2, !dbg !13109
  %21 = load i32, i32* %ymin25, align 4, !dbg !13109
  %22 = load %struct.rcti*, %struct.rcti** %bounds_px.addr, align 8, !dbg !13110
  %ymax26 = getelementptr inbounds %struct.rcti, %struct.rcti* %22, i32 0, i32 3, !dbg !13111
  %23 = load i32, i32* %ymax26, align 4, !dbg !13111
  %cmp27 = icmp eq i32 %21, %23, !dbg !13112
  br label %lor.end, !dbg !13107

lor.end:                                          ; preds = %lor.rhs, %while.end
  %24 = phi i1 [ true, %while.end ], [ %cmp27, %lor.rhs ]
  %25 = zext i1 %24 to i64, !dbg !13113
  %cond = select i1 %24, i32 0, i32 1, !dbg !13113
  %conv29 = trunc i32 %cond to i8, !dbg !13113
  store i8 %conv29, i8* %retval, align 1, !dbg !13114
  br label %return, !dbg !13114

return:                                           ; preds = %lor.end, %if.then
  %26 = load i8, i8* %retval, align 1, !dbg !13115
  ret i8 %26, !dbg !13115
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @IsectPoly2Df(float* %pt, [2 x float]* %uv, i32 %tot) #0 !dbg !13116 {
entry:
  %retval = alloca i8, align 1
  %pt.addr = alloca float*, align 8
  %uv.addr = alloca [2 x float]*, align 8
  %tot.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !13119, metadata !DIExpression()), !dbg !13120
  store [2 x float]* %uv, [2 x float]** %uv.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %uv.addr, metadata !13121, metadata !DIExpression()), !dbg !13122
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !13123, metadata !DIExpression()), !dbg !13124
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13125, metadata !DIExpression()), !dbg !13126
  %0 = load [2 x float]*, [2 x float]** %uv.addr, align 8, !dbg !13127
  %1 = load i32, i32* %tot.addr, align 4, !dbg !13129
  %sub = sub nsw i32 %1, 1, !dbg !13130
  %idxprom = sext i32 %sub to i64, !dbg !13127
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %0, i64 %idxprom, !dbg !13127
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !13127
  %2 = load [2 x float]*, [2 x float]** %uv.addr, align 8, !dbg !13131
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %2, i64 0, !dbg !13131
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx1, i64 0, i64 0, !dbg !13131
  %3 = load float*, float** %pt.addr, align 8, !dbg !13132
  %call = call float @line_point_side_v2(float* %arraydecay, float* %arraydecay2, float* %3), !dbg !13133
  %cmp = fcmp olt float %call, 0.000000e+00, !dbg !13134
  br i1 %cmp, label %if.then, label %if.end, !dbg !13135

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !13136
  br label %return, !dbg !13136

if.end:                                           ; preds = %entry
  store i32 1, i32* %i, align 4, !dbg !13137
  br label %for.cond, !dbg !13139

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !13140
  %5 = load i32, i32* %tot.addr, align 4, !dbg !13142
  %cmp3 = icmp slt i32 %4, %5, !dbg !13143
  br i1 %cmp3, label %for.body, label %for.end, !dbg !13144

for.body:                                         ; preds = %for.cond
  %6 = load [2 x float]*, [2 x float]** %uv.addr, align 8, !dbg !13145
  %7 = load i32, i32* %i, align 4, !dbg !13148
  %sub4 = sub nsw i32 %7, 1, !dbg !13149
  %idxprom5 = sext i32 %sub4 to i64, !dbg !13145
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %6, i64 %idxprom5, !dbg !13145
  %arraydecay7 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx6, i64 0, i64 0, !dbg !13145
  %8 = load [2 x float]*, [2 x float]** %uv.addr, align 8, !dbg !13150
  %9 = load i32, i32* %i, align 4, !dbg !13151
  %idxprom8 = sext i32 %9 to i64, !dbg !13150
  %arrayidx9 = getelementptr inbounds [2 x float], [2 x float]* %8, i64 %idxprom8, !dbg !13150
  %arraydecay10 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx9, i64 0, i64 0, !dbg !13150
  %10 = load float*, float** %pt.addr, align 8, !dbg !13152
  %call11 = call float @line_point_side_v2(float* %arraydecay7, float* %arraydecay10, float* %10), !dbg !13153
  %cmp12 = fcmp olt float %call11, 0.000000e+00, !dbg !13154
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !13155

if.then13:                                        ; preds = %for.body
  store i8 0, i8* %retval, align 1, !dbg !13156
  br label %return, !dbg !13156

if.end14:                                         ; preds = %for.body
  br label %for.inc, !dbg !13157

for.inc:                                          ; preds = %if.end14
  %11 = load i32, i32* %i, align 4, !dbg !13158
  %inc = add nsw i32 %11, 1, !dbg !13158
  store i32 %inc, i32* %i, align 4, !dbg !13158
  br label %for.cond, !dbg !13159, !llvm.loop !13160

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %retval, align 1, !dbg !13162
  br label %return, !dbg !13162

return:                                           ; preds = %for.end, %if.then13, %if.then
  %12 = load i8, i8* %retval, align 1, !dbg !13163
  ret i8 %12, !dbg !13163
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @IsectPoly2Df_twoside(float* %pt, [2 x float]* %uv, i32 %tot) #0 !dbg !13164 {
entry:
  %retval = alloca i8, align 1
  %pt.addr = alloca float*, align 8
  %uv.addr = alloca [2 x float]*, align 8
  %tot.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %side = alloca i32, align 4
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !13165, metadata !DIExpression()), !dbg !13166
  store [2 x float]* %uv, [2 x float]** %uv.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %uv.addr, metadata !13167, metadata !DIExpression()), !dbg !13168
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !13169, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13171, metadata !DIExpression()), !dbg !13172
  call void @llvm.dbg.declare(metadata i32* %side, metadata !13173, metadata !DIExpression()), !dbg !13174
  %0 = load [2 x float]*, [2 x float]** %uv.addr, align 8, !dbg !13175
  %1 = load i32, i32* %tot.addr, align 4, !dbg !13176
  %sub = sub nsw i32 %1, 1, !dbg !13177
  %idxprom = sext i32 %sub to i64, !dbg !13175
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %0, i64 %idxprom, !dbg !13175
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !13175
  %2 = load [2 x float]*, [2 x float]** %uv.addr, align 8, !dbg !13178
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %2, i64 0, !dbg !13178
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx1, i64 0, i64 0, !dbg !13178
  %3 = load float*, float** %pt.addr, align 8, !dbg !13179
  %call = call float @line_point_side_v2(float* %arraydecay, float* %arraydecay2, float* %3), !dbg !13180
  %cmp = fcmp ogt float %call, 0.000000e+00, !dbg !13181
  %conv = zext i1 %cmp to i32, !dbg !13181
  store i32 %conv, i32* %side, align 4, !dbg !13174
  store i32 1, i32* %i, align 4, !dbg !13182
  br label %for.cond, !dbg !13184

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !13185
  %5 = load i32, i32* %tot.addr, align 4, !dbg !13187
  %cmp3 = icmp slt i32 %4, %5, !dbg !13188
  br i1 %cmp3, label %for.body, label %for.end, !dbg !13189

for.body:                                         ; preds = %for.cond
  %6 = load [2 x float]*, [2 x float]** %uv.addr, align 8, !dbg !13190
  %7 = load i32, i32* %i, align 4, !dbg !13193
  %sub5 = sub nsw i32 %7, 1, !dbg !13194
  %idxprom6 = sext i32 %sub5 to i64, !dbg !13190
  %arrayidx7 = getelementptr inbounds [2 x float], [2 x float]* %6, i64 %idxprom6, !dbg !13190
  %arraydecay8 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx7, i64 0, i64 0, !dbg !13190
  %8 = load [2 x float]*, [2 x float]** %uv.addr, align 8, !dbg !13195
  %9 = load i32, i32* %i, align 4, !dbg !13196
  %idxprom9 = sext i32 %9 to i64, !dbg !13195
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %8, i64 %idxprom9, !dbg !13195
  %arraydecay11 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx10, i64 0, i64 0, !dbg !13195
  %10 = load float*, float** %pt.addr, align 8, !dbg !13197
  %call12 = call float @line_point_side_v2(float* %arraydecay8, float* %arraydecay11, float* %10), !dbg !13198
  %cmp13 = fcmp ogt float %call12, 0.000000e+00, !dbg !13199
  %conv14 = zext i1 %cmp13 to i32, !dbg !13199
  %11 = load i32, i32* %side, align 4, !dbg !13200
  %cmp15 = icmp ne i32 %conv14, %11, !dbg !13201
  br i1 %cmp15, label %if.then, label %if.end, !dbg !13202

if.then:                                          ; preds = %for.body
  store i8 0, i8* %retval, align 1, !dbg !13203
  br label %return, !dbg !13203

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !13204

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %i, align 4, !dbg !13205
  %inc = add nsw i32 %12, 1, !dbg !13205
  store i32 %inc, i32* %i, align 4, !dbg !13205
  br label %for.cond, !dbg !13206, !llvm.loop !13207

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %retval, align 1, !dbg !13209
  br label %return, !dbg !13209

return:                                           ; preds = %for.end, %if.then
  %13 = load i8, i8* %retval, align 1, !dbg !13210
  ret i8 %13, !dbg !13210
}

; Function Attrs: noinline nounwind uwtable
define internal void @screen_px_from_ortho(float* %uv, float* %v1co, float* %v2co, float* %v3co, float* %uv1co, float* %uv2co, float* %uv3co, float* %pixelScreenCo, float* %w) #0 !dbg !13211 {
entry:
  %uv.addr = alloca float*, align 8
  %v1co.addr = alloca float*, align 8
  %v2co.addr = alloca float*, align 8
  %v3co.addr = alloca float*, align 8
  %uv1co.addr = alloca float*, align 8
  %uv2co.addr = alloca float*, align 8
  %uv3co.addr = alloca float*, align 8
  %pixelScreenCo.addr = alloca float*, align 8
  %w.addr = alloca float*, align 8
  store float* %uv, float** %uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv.addr, metadata !13214, metadata !DIExpression()), !dbg !13215
  store float* %v1co, float** %v1co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1co.addr, metadata !13216, metadata !DIExpression()), !dbg !13217
  store float* %v2co, float** %v2co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2co.addr, metadata !13218, metadata !DIExpression()), !dbg !13219
  store float* %v3co, float** %v3co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3co.addr, metadata !13220, metadata !DIExpression()), !dbg !13221
  store float* %uv1co, float** %uv1co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv1co.addr, metadata !13222, metadata !DIExpression()), !dbg !13223
  store float* %uv2co, float** %uv2co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv2co.addr, metadata !13224, metadata !DIExpression()), !dbg !13225
  store float* %uv3co, float** %uv3co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv3co.addr, metadata !13226, metadata !DIExpression()), !dbg !13227
  store float* %pixelScreenCo, float** %pixelScreenCo.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pixelScreenCo.addr, metadata !13228, metadata !DIExpression()), !dbg !13229
  store float* %w, float** %w.addr, align 8
  call void @llvm.dbg.declare(metadata float** %w.addr, metadata !13230, metadata !DIExpression()), !dbg !13231
  %0 = load float*, float** %uv1co.addr, align 8, !dbg !13232
  %1 = load float*, float** %uv2co.addr, align 8, !dbg !13233
  %2 = load float*, float** %uv3co.addr, align 8, !dbg !13234
  %3 = load float*, float** %uv.addr, align 8, !dbg !13235
  %4 = load float*, float** %w.addr, align 8, !dbg !13236
  call void @barycentric_weights_v2(float* %0, float* %1, float* %2, float* %3, float* %4), !dbg !13237
  %5 = load float*, float** %pixelScreenCo.addr, align 8, !dbg !13238
  %6 = load float*, float** %v1co.addr, align 8, !dbg !13239
  %7 = load float*, float** %v2co.addr, align 8, !dbg !13240
  %8 = load float*, float** %v3co.addr, align 8, !dbg !13241
  %9 = load float*, float** %w.addr, align 8, !dbg !13242
  call void @interp_v3_v3v3v3(float* %5, float* %6, float* %7, float* %8, float* %9), !dbg !13243
  ret void, !dbg !13244
}

; Function Attrs: noinline nounwind uwtable
define internal void @screen_px_from_persp(float* %uv, float* %v1co, float* %v2co, float* %v3co, float* %uv1co, float* %uv2co, float* %uv3co, float* %pixelScreenCo, float* %w) #0 !dbg !13245 {
entry:
  %uv.addr = alloca float*, align 8
  %v1co.addr = alloca float*, align 8
  %v2co.addr = alloca float*, align 8
  %v3co.addr = alloca float*, align 8
  %uv1co.addr = alloca float*, align 8
  %uv2co.addr = alloca float*, align 8
  %uv3co.addr = alloca float*, align 8
  %pixelScreenCo.addr = alloca float*, align 8
  %w.addr = alloca float*, align 8
  %w_int = alloca [3 x float], align 4
  %wtot_inv = alloca float, align 4
  %wtot = alloca float, align 4
  store float* %uv, float** %uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv.addr, metadata !13246, metadata !DIExpression()), !dbg !13247
  store float* %v1co, float** %v1co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1co.addr, metadata !13248, metadata !DIExpression()), !dbg !13249
  store float* %v2co, float** %v2co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2co.addr, metadata !13250, metadata !DIExpression()), !dbg !13251
  store float* %v3co, float** %v3co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3co.addr, metadata !13252, metadata !DIExpression()), !dbg !13253
  store float* %uv1co, float** %uv1co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv1co.addr, metadata !13254, metadata !DIExpression()), !dbg !13255
  store float* %uv2co, float** %uv2co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv2co.addr, metadata !13256, metadata !DIExpression()), !dbg !13257
  store float* %uv3co, float** %uv3co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv3co.addr, metadata !13258, metadata !DIExpression()), !dbg !13259
  store float* %pixelScreenCo, float** %pixelScreenCo.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pixelScreenCo.addr, metadata !13260, metadata !DIExpression()), !dbg !13261
  store float* %w, float** %w.addr, align 8
  call void @llvm.dbg.declare(metadata float** %w.addr, metadata !13262, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.declare(metadata [3 x float]* %w_int, metadata !13264, metadata !DIExpression()), !dbg !13265
  call void @llvm.dbg.declare(metadata float* %wtot_inv, metadata !13266, metadata !DIExpression()), !dbg !13267
  call void @llvm.dbg.declare(metadata float* %wtot, metadata !13268, metadata !DIExpression()), !dbg !13269
  %0 = load float*, float** %uv1co.addr, align 8, !dbg !13270
  %1 = load float*, float** %uv2co.addr, align 8, !dbg !13271
  %2 = load float*, float** %uv3co.addr, align 8, !dbg !13272
  %3 = load float*, float** %uv.addr, align 8, !dbg !13273
  %4 = load float*, float** %w.addr, align 8, !dbg !13274
  call void @barycentric_weights_v2(float* %0, float* %1, float* %2, float* %3, float* %4), !dbg !13275
  %5 = load float*, float** %w.addr, align 8, !dbg !13276
  %arrayidx = getelementptr inbounds float, float* %5, i64 0, !dbg !13276
  %6 = load float, float* %arrayidx, align 4, !dbg !13276
  %7 = load float*, float** %v1co.addr, align 8, !dbg !13277
  %arrayidx1 = getelementptr inbounds float, float* %7, i64 3, !dbg !13277
  %8 = load float, float* %arrayidx1, align 4, !dbg !13277
  %mul = fmul float %6, %8, !dbg !13278
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %w_int, i64 0, i64 0, !dbg !13279
  store float %mul, float* %arrayidx2, align 4, !dbg !13280
  %9 = load float*, float** %w.addr, align 8, !dbg !13281
  %arrayidx3 = getelementptr inbounds float, float* %9, i64 1, !dbg !13281
  %10 = load float, float* %arrayidx3, align 4, !dbg !13281
  %11 = load float*, float** %v2co.addr, align 8, !dbg !13282
  %arrayidx4 = getelementptr inbounds float, float* %11, i64 3, !dbg !13282
  %12 = load float, float* %arrayidx4, align 4, !dbg !13282
  %mul5 = fmul float %10, %12, !dbg !13283
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %w_int, i64 0, i64 1, !dbg !13284
  store float %mul5, float* %arrayidx6, align 4, !dbg !13285
  %13 = load float*, float** %w.addr, align 8, !dbg !13286
  %arrayidx7 = getelementptr inbounds float, float* %13, i64 2, !dbg !13286
  %14 = load float, float* %arrayidx7, align 4, !dbg !13286
  %15 = load float*, float** %v3co.addr, align 8, !dbg !13287
  %arrayidx8 = getelementptr inbounds float, float* %15, i64 3, !dbg !13287
  %16 = load float, float* %arrayidx8, align 4, !dbg !13287
  %mul9 = fmul float %14, %16, !dbg !13288
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %w_int, i64 0, i64 2, !dbg !13289
  store float %mul9, float* %arrayidx10, align 4, !dbg !13290
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %w_int, i64 0, i64 0, !dbg !13291
  %17 = load float, float* %arrayidx11, align 4, !dbg !13291
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %w_int, i64 0, i64 1, !dbg !13292
  %18 = load float, float* %arrayidx12, align 4, !dbg !13292
  %add = fadd float %17, %18, !dbg !13293
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %w_int, i64 0, i64 2, !dbg !13294
  %19 = load float, float* %arrayidx13, align 4, !dbg !13294
  %add14 = fadd float %add, %19, !dbg !13295
  store float %add14, float* %wtot, align 4, !dbg !13296
  %20 = load float, float* %wtot, align 4, !dbg !13297
  %cmp = fcmp ogt float %20, 0.000000e+00, !dbg !13299
  br i1 %cmp, label %if.then, label %if.else, !dbg !13300

if.then:                                          ; preds = %entry
  %21 = load float, float* %wtot, align 4, !dbg !13301
  %div = fdiv float 1.000000e+00, %21, !dbg !13303
  store float %div, float* %wtot_inv, align 4, !dbg !13304
  %22 = load float, float* %wtot_inv, align 4, !dbg !13305
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %w_int, i64 0, i64 0, !dbg !13306
  %23 = load float, float* %arrayidx15, align 4, !dbg !13307
  %mul16 = fmul float %23, %22, !dbg !13307
  store float %mul16, float* %arrayidx15, align 4, !dbg !13307
  %24 = load float, float* %wtot_inv, align 4, !dbg !13308
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %w_int, i64 0, i64 1, !dbg !13309
  %25 = load float, float* %arrayidx17, align 4, !dbg !13310
  %mul18 = fmul float %25, %24, !dbg !13310
  store float %mul18, float* %arrayidx17, align 4, !dbg !13310
  %26 = load float, float* %wtot_inv, align 4, !dbg !13311
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %w_int, i64 0, i64 2, !dbg !13312
  %27 = load float, float* %arrayidx19, align 4, !dbg !13313
  %mul20 = fmul float %27, %26, !dbg !13313
  store float %mul20, float* %arrayidx19, align 4, !dbg !13313
  br label %if.end, !dbg !13314

if.else:                                          ; preds = %entry
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %w_int, i64 0, i64 2, !dbg !13315
  store float 0x3FD5555560000000, float* %arrayidx21, align 4, !dbg !13317
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %w_int, i64 0, i64 1, !dbg !13318
  store float 0x3FD5555560000000, float* %arrayidx22, align 4, !dbg !13319
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %w_int, i64 0, i64 0, !dbg !13320
  store float 0x3FD5555560000000, float* %arrayidx23, align 4, !dbg !13321
  %28 = load float*, float** %w.addr, align 8, !dbg !13322
  %arrayidx24 = getelementptr inbounds float, float* %28, i64 2, !dbg !13322
  store float 0x3FD5555560000000, float* %arrayidx24, align 4, !dbg !13323
  %29 = load float*, float** %w.addr, align 8, !dbg !13324
  %arrayidx25 = getelementptr inbounds float, float* %29, i64 1, !dbg !13324
  store float 0x3FD5555560000000, float* %arrayidx25, align 4, !dbg !13325
  %30 = load float*, float** %w.addr, align 8, !dbg !13326
  %arrayidx26 = getelementptr inbounds float, float* %30, i64 0, !dbg !13326
  store float 0x3FD5555560000000, float* %arrayidx26, align 4, !dbg !13327
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %31 = load float*, float** %pixelScreenCo.addr, align 8, !dbg !13328
  %32 = load float*, float** %v1co.addr, align 8, !dbg !13329
  %33 = load float*, float** %v2co.addr, align 8, !dbg !13330
  %34 = load float*, float** %v3co.addr, align 8, !dbg !13331
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %w_int, i64 0, i64 0, !dbg !13332
  call void @interp_v3_v3v3v3(float* %31, float* %32, float* %33, float* %34, float* %arraydecay), !dbg !13333
  ret void, !dbg !13334
}

declare dso_local void @interp_v3_v3v3v3(float*, float*, float*, float*, float*) #2

declare dso_local zeroext i8 @ED_view3d_clipping_test(%struct.RegionView3D*, float*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @project_bucket_point_occluded(%struct.ProjPaintState* %ps, %struct.LinkNode* %bucketFace, i32 %orig_face, float* %pixelScreenCo) #0 !dbg !13335 {
entry:
  %retval = alloca i8, align 1
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %bucketFace.addr = alloca %struct.LinkNode*, align 8
  %orig_face.addr = alloca i32, align 4
  %pixelScreenCo.addr = alloca float*, align 8
  %mf = alloca %struct.MFace*, align 8
  %face_index = alloca i32, align 4
  %isect_ret = alloca i32, align 4
  %w = alloca [3 x float], align 4
  %do_clip = alloca i16, align 2
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !13338, metadata !DIExpression()), !dbg !13339
  store %struct.LinkNode* %bucketFace, %struct.LinkNode** %bucketFace.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %bucketFace.addr, metadata !13340, metadata !DIExpression()), !dbg !13341
  store i32 %orig_face, i32* %orig_face.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %orig_face.addr, metadata !13342, metadata !DIExpression()), !dbg !13343
  store float* %pixelScreenCo, float** %pixelScreenCo.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pixelScreenCo.addr, metadata !13344, metadata !DIExpression()), !dbg !13345
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !13346, metadata !DIExpression()), !dbg !13347
  call void @llvm.dbg.declare(metadata i32* %face_index, metadata !13348, metadata !DIExpression()), !dbg !13349
  call void @llvm.dbg.declare(metadata i32* %isect_ret, metadata !13350, metadata !DIExpression()), !dbg !13351
  call void @llvm.dbg.declare(metadata [3 x float]* %w, metadata !13352, metadata !DIExpression()), !dbg !13353
  call void @llvm.dbg.declare(metadata i16* %do_clip, metadata !13354, metadata !DIExpression()), !dbg !13355
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13356
  %rv3d = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 1, !dbg !13357
  %1 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !13357
  %tobool = icmp ne %struct.RegionView3D* %1, null, !dbg !13356
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13356

cond.true:                                        ; preds = %entry
  %2 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13358
  %rv3d1 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %2, i32 0, i32 1, !dbg !13359
  %3 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d1, align 8, !dbg !13359
  %rflag = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %3, i32 0, i32 32, !dbg !13360
  %4 = load i16, i16* %rflag, align 2, !dbg !13360
  %conv = sext i16 %4 to i32, !dbg !13358
  %and = and i32 %conv, 4, !dbg !13361
  br label %cond.end, !dbg !13356

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13356

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and, %cond.true ], [ 0, %cond.false ], !dbg !13356
  %conv2 = trunc i32 %cond to i16, !dbg !13356
  store i16 %conv2, i16* %do_clip, align 2, !dbg !13355
  br label %for.cond, !dbg !13362

for.cond:                                         ; preds = %for.inc, %cond.end
  %5 = load %struct.LinkNode*, %struct.LinkNode** %bucketFace.addr, align 8, !dbg !13363
  %tobool3 = icmp ne %struct.LinkNode* %5, null, !dbg !13366
  br i1 %tobool3, label %for.body, label %for.end, !dbg !13366

for.body:                                         ; preds = %for.cond
  %6 = load %struct.LinkNode*, %struct.LinkNode** %bucketFace.addr, align 8, !dbg !13367
  %link = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %6, i32 0, i32 1, !dbg !13367
  %7 = load i8*, i8** %link, align 8, !dbg !13367
  %8 = ptrtoint i8* %7 to i64, !dbg !13367
  %conv4 = trunc i64 %8 to i32, !dbg !13367
  store i32 %conv4, i32* %face_index, align 4, !dbg !13369
  %9 = load i32, i32* %orig_face.addr, align 4, !dbg !13370
  %10 = load i32, i32* %face_index, align 4, !dbg !13372
  %cmp = icmp ne i32 %9, %10, !dbg !13373
  br i1 %cmp, label %if.then, label %if.end80, !dbg !13374

if.then:                                          ; preds = %for.body
  %11 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13375
  %dm_mface = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %11, i32 0, i32 19, !dbg !13377
  %12 = load %struct.MFace*, %struct.MFace** %dm_mface, align 8, !dbg !13377
  %13 = load i32, i32* %face_index, align 4, !dbg !13378
  %idx.ext = sext i32 %13 to i64, !dbg !13379
  %add.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %12, i64 %idx.ext, !dbg !13379
  store %struct.MFace* %add.ptr, %struct.MFace** %mf, align 8, !dbg !13380
  %14 = load i16, i16* %do_clip, align 2, !dbg !13381
  %tobool6 = icmp ne i16 %14, 0, !dbg !13381
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !13383

if.then7:                                         ; preds = %if.then
  %15 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13384
  %16 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13385
  %17 = load float*, float** %pixelScreenCo.addr, align 8, !dbg !13386
  %18 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13387
  %screenCoords = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %18, i32 0, i32 41, !dbg !13388
  %19 = load [4 x float]*, [4 x float]** %screenCoords, align 8, !dbg !13388
  %20 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13389
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %20, i32 0, i32 0, !dbg !13390
  %21 = load i32, i32* %v1, align 4, !dbg !13390
  %idxprom = zext i32 %21 to i64, !dbg !13387
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %19, i64 %idxprom, !dbg !13387
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !13387
  %22 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13391
  %screenCoords8 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %22, i32 0, i32 41, !dbg !13392
  %23 = load [4 x float]*, [4 x float]** %screenCoords8, align 8, !dbg !13392
  %24 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13393
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %24, i32 0, i32 1, !dbg !13394
  %25 = load i32, i32* %v2, align 4, !dbg !13394
  %idxprom9 = zext i32 %25 to i64, !dbg !13391
  %arrayidx10 = getelementptr inbounds [4 x float], [4 x float]* %23, i64 %idxprom9, !dbg !13391
  %arraydecay11 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx10, i64 0, i64 0, !dbg !13391
  %26 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13395
  %screenCoords12 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %26, i32 0, i32 41, !dbg !13396
  %27 = load [4 x float]*, [4 x float]** %screenCoords12, align 8, !dbg !13396
  %28 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13397
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %28, i32 0, i32 2, !dbg !13398
  %29 = load i32, i32* %v3, align 4, !dbg !13398
  %idxprom13 = zext i32 %29 to i64, !dbg !13395
  %arrayidx14 = getelementptr inbounds [4 x float], [4 x float]* %27, i64 %idxprom13, !dbg !13395
  %arraydecay15 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx14, i64 0, i64 0, !dbg !13395
  %call = call i32 @project_paint_occlude_ptv_clip(%struct.ProjPaintState* %15, %struct.MFace* %16, float* %17, float* %arraydecay, float* %arraydecay11, float* %arraydecay15, i32 0), !dbg !13399
  store i32 %call, i32* %isect_ret, align 4, !dbg !13400
  br label %if.end, !dbg !13401

if.else:                                          ; preds = %if.then
  %30 = load float*, float** %pixelScreenCo.addr, align 8, !dbg !13402
  %31 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13403
  %screenCoords16 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %31, i32 0, i32 41, !dbg !13404
  %32 = load [4 x float]*, [4 x float]** %screenCoords16, align 8, !dbg !13404
  %33 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13405
  %v117 = getelementptr inbounds %struct.MFace, %struct.MFace* %33, i32 0, i32 0, !dbg !13406
  %34 = load i32, i32* %v117, align 4, !dbg !13406
  %idxprom18 = zext i32 %34 to i64, !dbg !13403
  %arrayidx19 = getelementptr inbounds [4 x float], [4 x float]* %32, i64 %idxprom18, !dbg !13403
  %arraydecay20 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx19, i64 0, i64 0, !dbg !13403
  %35 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13407
  %screenCoords21 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %35, i32 0, i32 41, !dbg !13408
  %36 = load [4 x float]*, [4 x float]** %screenCoords21, align 8, !dbg !13408
  %37 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13409
  %v222 = getelementptr inbounds %struct.MFace, %struct.MFace* %37, i32 0, i32 1, !dbg !13410
  %38 = load i32, i32* %v222, align 4, !dbg !13410
  %idxprom23 = zext i32 %38 to i64, !dbg !13407
  %arrayidx24 = getelementptr inbounds [4 x float], [4 x float]* %36, i64 %idxprom23, !dbg !13407
  %arraydecay25 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx24, i64 0, i64 0, !dbg !13407
  %39 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13411
  %screenCoords26 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %39, i32 0, i32 41, !dbg !13412
  %40 = load [4 x float]*, [4 x float]** %screenCoords26, align 8, !dbg !13412
  %41 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13413
  %v327 = getelementptr inbounds %struct.MFace, %struct.MFace* %41, i32 0, i32 2, !dbg !13414
  %42 = load i32, i32* %v327, align 4, !dbg !13414
  %idxprom28 = zext i32 %42 to i64, !dbg !13411
  %arrayidx29 = getelementptr inbounds [4 x float], [4 x float]* %40, i64 %idxprom28, !dbg !13411
  %arraydecay30 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx29, i64 0, i64 0, !dbg !13411
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !13415
  %43 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13416
  %is_ortho = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %43, i32 0, i32 61, !dbg !13417
  %44 = load i8, i8* %is_ortho, align 1, !dbg !13417
  %call32 = call i32 @project_paint_occlude_ptv(float* %30, float* %arraydecay20, float* %arraydecay25, float* %arraydecay30, float* %arraydecay31, i8 zeroext %44), !dbg !13418
  store i32 %call32, i32* %isect_ret, align 4, !dbg !13419
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  %45 = load i32, i32* %isect_ret, align 4, !dbg !13420
  %cmp33 = icmp eq i32 %45, 0, !dbg !13422
  br i1 %cmp33, label %land.lhs.true, label %if.end75, !dbg !13423

land.lhs.true:                                    ; preds = %if.end
  %46 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13424
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %46, i32 0, i32 3, !dbg !13425
  %47 = load i32, i32* %v4, align 4, !dbg !13425
  %tobool35 = icmp ne i32 %47, 0, !dbg !13424
  br i1 %tobool35, label %if.then36, label %if.end75, !dbg !13426

if.then36:                                        ; preds = %land.lhs.true
  %48 = load i16, i16* %do_clip, align 2, !dbg !13427
  %tobool37 = icmp ne i16 %48, 0, !dbg !13427
  br i1 %tobool37, label %if.then38, label %if.else55, !dbg !13430

if.then38:                                        ; preds = %if.then36
  %49 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13431
  %50 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13432
  %51 = load float*, float** %pixelScreenCo.addr, align 8, !dbg !13433
  %52 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13434
  %screenCoords39 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %52, i32 0, i32 41, !dbg !13435
  %53 = load [4 x float]*, [4 x float]** %screenCoords39, align 8, !dbg !13435
  %54 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13436
  %v140 = getelementptr inbounds %struct.MFace, %struct.MFace* %54, i32 0, i32 0, !dbg !13437
  %55 = load i32, i32* %v140, align 4, !dbg !13437
  %idxprom41 = zext i32 %55 to i64, !dbg !13434
  %arrayidx42 = getelementptr inbounds [4 x float], [4 x float]* %53, i64 %idxprom41, !dbg !13434
  %arraydecay43 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx42, i64 0, i64 0, !dbg !13434
  %56 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13438
  %screenCoords44 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %56, i32 0, i32 41, !dbg !13439
  %57 = load [4 x float]*, [4 x float]** %screenCoords44, align 8, !dbg !13439
  %58 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13440
  %v345 = getelementptr inbounds %struct.MFace, %struct.MFace* %58, i32 0, i32 2, !dbg !13441
  %59 = load i32, i32* %v345, align 4, !dbg !13441
  %idxprom46 = zext i32 %59 to i64, !dbg !13438
  %arrayidx47 = getelementptr inbounds [4 x float], [4 x float]* %57, i64 %idxprom46, !dbg !13438
  %arraydecay48 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx47, i64 0, i64 0, !dbg !13438
  %60 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13442
  %screenCoords49 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %60, i32 0, i32 41, !dbg !13443
  %61 = load [4 x float]*, [4 x float]** %screenCoords49, align 8, !dbg !13443
  %62 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13444
  %v450 = getelementptr inbounds %struct.MFace, %struct.MFace* %62, i32 0, i32 3, !dbg !13445
  %63 = load i32, i32* %v450, align 4, !dbg !13445
  %idxprom51 = zext i32 %63 to i64, !dbg !13442
  %arrayidx52 = getelementptr inbounds [4 x float], [4 x float]* %61, i64 %idxprom51, !dbg !13442
  %arraydecay53 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx52, i64 0, i64 0, !dbg !13442
  %call54 = call i32 @project_paint_occlude_ptv_clip(%struct.ProjPaintState* %49, %struct.MFace* %50, float* %51, float* %arraydecay43, float* %arraydecay48, float* %arraydecay53, i32 1), !dbg !13446
  store i32 %call54, i32* %isect_ret, align 4, !dbg !13447
  br label %if.end74, !dbg !13448

if.else55:                                        ; preds = %if.then36
  %64 = load float*, float** %pixelScreenCo.addr, align 8, !dbg !13449
  %65 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13450
  %screenCoords56 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %65, i32 0, i32 41, !dbg !13451
  %66 = load [4 x float]*, [4 x float]** %screenCoords56, align 8, !dbg !13451
  %67 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13452
  %v157 = getelementptr inbounds %struct.MFace, %struct.MFace* %67, i32 0, i32 0, !dbg !13453
  %68 = load i32, i32* %v157, align 4, !dbg !13453
  %idxprom58 = zext i32 %68 to i64, !dbg !13450
  %arrayidx59 = getelementptr inbounds [4 x float], [4 x float]* %66, i64 %idxprom58, !dbg !13450
  %arraydecay60 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx59, i64 0, i64 0, !dbg !13450
  %69 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13454
  %screenCoords61 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %69, i32 0, i32 41, !dbg !13455
  %70 = load [4 x float]*, [4 x float]** %screenCoords61, align 8, !dbg !13455
  %71 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13456
  %v362 = getelementptr inbounds %struct.MFace, %struct.MFace* %71, i32 0, i32 2, !dbg !13457
  %72 = load i32, i32* %v362, align 4, !dbg !13457
  %idxprom63 = zext i32 %72 to i64, !dbg !13454
  %arrayidx64 = getelementptr inbounds [4 x float], [4 x float]* %70, i64 %idxprom63, !dbg !13454
  %arraydecay65 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx64, i64 0, i64 0, !dbg !13454
  %73 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13458
  %screenCoords66 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %73, i32 0, i32 41, !dbg !13459
  %74 = load [4 x float]*, [4 x float]** %screenCoords66, align 8, !dbg !13459
  %75 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13460
  %v467 = getelementptr inbounds %struct.MFace, %struct.MFace* %75, i32 0, i32 3, !dbg !13461
  %76 = load i32, i32* %v467, align 4, !dbg !13461
  %idxprom68 = zext i32 %76 to i64, !dbg !13458
  %arrayidx69 = getelementptr inbounds [4 x float], [4 x float]* %74, i64 %idxprom68, !dbg !13458
  %arraydecay70 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx69, i64 0, i64 0, !dbg !13458
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !13462
  %77 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13463
  %is_ortho72 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %77, i32 0, i32 61, !dbg !13464
  %78 = load i8, i8* %is_ortho72, align 1, !dbg !13464
  %call73 = call i32 @project_paint_occlude_ptv(float* %64, float* %arraydecay60, float* %arraydecay65, float* %arraydecay70, float* %arraydecay71, i8 zeroext %78), !dbg !13465
  store i32 %call73, i32* %isect_ret, align 4, !dbg !13466
  br label %if.end74

if.end74:                                         ; preds = %if.else55, %if.then38
  br label %if.end75, !dbg !13467

if.end75:                                         ; preds = %if.end74, %land.lhs.true, %if.end
  %79 = load i32, i32* %isect_ret, align 4, !dbg !13468
  %cmp76 = icmp sge i32 %79, 1, !dbg !13470
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !13471

if.then78:                                        ; preds = %if.end75
  store i8 1, i8* %retval, align 1, !dbg !13472
  br label %return, !dbg !13472

if.end79:                                         ; preds = %if.end75
  br label %if.end80, !dbg !13474

if.end80:                                         ; preds = %if.end79, %for.body
  br label %for.inc, !dbg !13475

for.inc:                                          ; preds = %if.end80
  %80 = load %struct.LinkNode*, %struct.LinkNode** %bucketFace.addr, align 8, !dbg !13476
  %next = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %80, i32 0, i32 0, !dbg !13477
  %81 = load %struct.LinkNode*, %struct.LinkNode** %next, align 8, !dbg !13477
  store %struct.LinkNode* %81, %struct.LinkNode** %bucketFace.addr, align 8, !dbg !13478
  br label %for.cond, !dbg !13479, !llvm.loop !13480

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !13482
  br label %return, !dbg !13482

return:                                           ; preds = %for.end, %if.then78
  %82 = load i8, i8* %retval, align 1, !dbg !13483
  ret i8 %82, !dbg !13483
}

; Function Attrs: noinline nounwind uwtable
define internal float @project_paint_uvpixel_mask(%struct.ProjPaintState* %ps, i32 %face_index, i32 %side, float* %w) #0 !dbg !13484 {
entry:
  %retval = alloca float, align 4
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %face_index.addr = alloca i32, align 4
  %side.addr = alloca i32, align 4
  %w.addr = alloca float*, align 8
  %mask = alloca float, align 4
  %ibuf_other = alloca %struct.ImBuf*, align 8
  %other_tpage = alloca %struct.Image*, align 8
  %tf_other = alloca %struct.MTFace*, align 8
  %rgba_ub = alloca [4 x i8], align 1
  %rgba_f = alloca [4 x float], align 16
  %mf = alloca %struct.MFace*, align 8
  %no = alloca [3 x float], align 4
  %angle = alloca float, align 4
  %no1 = alloca i16*, align 8
  %no2 = alloca i16*, align 8
  %no3 = alloca i16*, align 8
  %viewDirPersp = alloca [3 x float], align 4
  %co1 = alloca float*, align 8
  %co2 = alloca float*, align 8
  %co3 = alloca float*, align 8
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !13487, metadata !DIExpression()), !dbg !13488
  store i32 %face_index, i32* %face_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_index.addr, metadata !13489, metadata !DIExpression()), !dbg !13490
  store i32 %side, i32* %side.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %side.addr, metadata !13491, metadata !DIExpression()), !dbg !13492
  store float* %w, float** %w.addr, align 8
  call void @llvm.dbg.declare(metadata float** %w.addr, metadata !13493, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.declare(metadata float* %mask, metadata !13495, metadata !DIExpression()), !dbg !13496
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13497
  %do_layer_stencil = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 49, !dbg !13499
  %1 = load i8, i8* %do_layer_stencil, align 1, !dbg !13499
  %tobool = icmp ne i8 %1, 0, !dbg !13497
  br i1 %tobool, label %if.then, label %if.else34, !dbg !13500

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf_other, metadata !13501, metadata !DIExpression()), !dbg !13503
  call void @llvm.dbg.declare(metadata %struct.Image** %other_tpage, metadata !13504, metadata !DIExpression()), !dbg !13505
  %2 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13506
  %stencil_ima = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %2, i32 0, i32 23, !dbg !13507
  %3 = load %struct.Image*, %struct.Image** %stencil_ima, align 8, !dbg !13507
  store %struct.Image* %3, %struct.Image** %other_tpage, align 8, !dbg !13505
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf_other, metadata !13508, metadata !DIExpression()), !dbg !13509
  %4 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13510
  %dm_mtface_stencil = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %4, i32 0, i32 22, !dbg !13511
  %5 = load %struct.MTFace*, %struct.MTFace** %dm_mtface_stencil, align 8, !dbg !13511
  %6 = load i32, i32* %face_index.addr, align 4, !dbg !13512
  %idx.ext = sext i32 %6 to i64, !dbg !13513
  %add.ptr = getelementptr inbounds %struct.MTFace, %struct.MTFace* %5, i64 %idx.ext, !dbg !13513
  store %struct.MTFace* %add.ptr, %struct.MTFace** %tf_other, align 8, !dbg !13509
  %7 = load %struct.Image*, %struct.Image** %other_tpage, align 8, !dbg !13514
  %tobool1 = icmp ne %struct.Image* %7, null, !dbg !13514
  br i1 %tobool1, label %land.lhs.true, label %if.else32, !dbg !13516

land.lhs.true:                                    ; preds = %if.then
  %8 = load %struct.Image*, %struct.Image** %other_tpage, align 8, !dbg !13517
  %call = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %8, %struct.ImageUser* null, i8** null), !dbg !13518
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf_other, align 8, !dbg !13519
  %tobool2 = icmp ne %struct.ImBuf* %call, null, !dbg !13519
  br i1 %tobool2, label %if.then3, label %if.else32, !dbg !13520

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [4 x i8]* %rgba_ub, metadata !13521, metadata !DIExpression()), !dbg !13523
  call void @llvm.dbg.declare(metadata [4 x float]* %rgba_f, metadata !13524, metadata !DIExpression()), !dbg !13525
  %9 = load %struct.MTFace*, %struct.MTFace** %tf_other, align 8, !dbg !13526
  %10 = load %struct.ImBuf*, %struct.ImBuf** %ibuf_other, align 8, !dbg !13527
  %11 = load float*, float** %w.addr, align 8, !dbg !13528
  %12 = load i32, i32* %side.addr, align 4, !dbg !13529
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_ub, i64 0, i64 0, !dbg !13530
  %arraydecay4 = getelementptr inbounds [4 x float], [4 x float]* %rgba_f, i64 0, i64 0, !dbg !13531
  call void @project_face_pixel(%struct.MTFace* %9, %struct.ImBuf* %10, float* %11, i32 %12, i8* %arraydecay, float* %arraydecay4), !dbg !13532
  %13 = load %struct.ImBuf*, %struct.ImBuf** %ibuf_other, align 8, !dbg !13533
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %13, i32 0, i32 9, !dbg !13535
  %14 = load float*, float** %rect_float, align 8, !dbg !13535
  %tobool5 = icmp ne float* %14, null, !dbg !13533
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !13536

if.then6:                                         ; preds = %if.then3
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %rgba_f, i64 0, i64 0, !dbg !13537
  %15 = load float, float* %arrayidx, align 16, !dbg !13537
  %arrayidx7 = getelementptr inbounds [4 x float], [4 x float]* %rgba_f, i64 0, i64 1, !dbg !13539
  %16 = load float, float* %arrayidx7, align 4, !dbg !13539
  %add = fadd float %15, %16, !dbg !13540
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %rgba_f, i64 0, i64 2, !dbg !13541
  %17 = load float, float* %arrayidx8, align 8, !dbg !13541
  %add9 = fadd float %add, %17, !dbg !13542
  %mul = fmul float %add9, 0x3FD5555560000000, !dbg !13543
  %arrayidx10 = getelementptr inbounds [4 x float], [4 x float]* %rgba_f, i64 0, i64 3, !dbg !13544
  %18 = load float, float* %arrayidx10, align 4, !dbg !13544
  %mul11 = fmul float %mul, %18, !dbg !13545
  store float %mul11, float* %mask, align 4, !dbg !13546
  br label %if.end, !dbg !13547

if.else:                                          ; preds = %if.then3
  %arrayidx12 = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_ub, i64 0, i64 0, !dbg !13548
  %19 = load i8, i8* %arrayidx12, align 1, !dbg !13548
  %conv = zext i8 %19 to i32, !dbg !13548
  %arrayidx13 = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_ub, i64 0, i64 1, !dbg !13550
  %20 = load i8, i8* %arrayidx13, align 1, !dbg !13550
  %conv14 = zext i8 %20 to i32, !dbg !13550
  %add15 = add nsw i32 %conv, %conv14, !dbg !13551
  %arrayidx16 = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_ub, i64 0, i64 2, !dbg !13552
  %21 = load i8, i8* %arrayidx16, align 1, !dbg !13552
  %conv17 = zext i8 %21 to i32, !dbg !13552
  %add18 = add nsw i32 %add15, %conv17, !dbg !13553
  %conv19 = sitofp i32 %add18 to float, !dbg !13554
  %mul20 = fmul float %conv19, 0x3F556AC020000000, !dbg !13555
  %arrayidx21 = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_ub, i64 0, i64 3, !dbg !13556
  %22 = load i8, i8* %arrayidx21, align 1, !dbg !13556
  %conv22 = zext i8 %22 to i32, !dbg !13556
  %conv23 = sitofp i32 %conv22 to float, !dbg !13556
  %mul24 = fmul float %conv23, 0x3F70101020000000, !dbg !13557
  %mul25 = fmul float %mul20, %mul24, !dbg !13558
  store float %mul25, float* %mask, align 4, !dbg !13559
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %23 = load %struct.Image*, %struct.Image** %other_tpage, align 8, !dbg !13560
  %24 = load %struct.ImBuf*, %struct.ImBuf** %ibuf_other, align 8, !dbg !13561
  call void @BKE_image_release_ibuf(%struct.Image* %23, %struct.ImBuf* %24, i8* null), !dbg !13562
  %25 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13563
  %do_layer_stencil_inv = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %25, i32 0, i32 50, !dbg !13565
  %26 = load i8, i8* %do_layer_stencil_inv, align 2, !dbg !13565
  %tobool26 = icmp ne i8 %26, 0, !dbg !13563
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !13566

if.then27:                                        ; preds = %if.end
  %27 = load float, float* %mask, align 4, !dbg !13567
  %sub = fsub float 1.000000e+00, %27, !dbg !13568
  store float %sub, float* %mask, align 4, !dbg !13569
  br label %if.end28, !dbg !13570

if.end28:                                         ; preds = %if.then27, %if.end
  %28 = load float, float* %mask, align 4, !dbg !13571
  %cmp = fcmp oeq float %28, 0.000000e+00, !dbg !13573
  br i1 %cmp, label %if.then30, label %if.end31, !dbg !13574

if.then30:                                        ; preds = %if.end28
  store float 0.000000e+00, float* %retval, align 4, !dbg !13575
  br label %return, !dbg !13575

if.end31:                                         ; preds = %if.end28
  br label %if.end33, !dbg !13577

if.else32:                                        ; preds = %land.lhs.true, %if.then
  store float 0.000000e+00, float* %retval, align 4, !dbg !13578
  br label %return, !dbg !13578

if.end33:                                         ; preds = %if.end31
  br label %if.end35, !dbg !13580

if.else34:                                        ; preds = %entry
  store float 1.000000e+00, float* %mask, align 4, !dbg !13581
  br label %if.end35

if.end35:                                         ; preds = %if.else34, %if.end33
  %29 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13583
  %do_mask_normal = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %29, i32 0, i32 55, !dbg !13585
  %30 = load i8, i8* %do_mask_normal, align 1, !dbg !13585
  %tobool36 = icmp ne i8 %30, 0, !dbg !13583
  br i1 %tobool36, label %if.then37, label %if.end283, !dbg !13586

if.then37:                                        ; preds = %if.end35
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !13587, metadata !DIExpression()), !dbg !13589
  %31 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13590
  %dm_mface = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %31, i32 0, i32 19, !dbg !13591
  %32 = load %struct.MFace*, %struct.MFace** %dm_mface, align 8, !dbg !13591
  %33 = load i32, i32* %face_index.addr, align 4, !dbg !13592
  %idxprom = sext i32 %33 to i64, !dbg !13590
  %arrayidx38 = getelementptr inbounds %struct.MFace, %struct.MFace* %32, i64 %idxprom, !dbg !13590
  store %struct.MFace* %arrayidx38, %struct.MFace** %mf, align 8, !dbg !13589
  call void @llvm.dbg.declare(metadata [3 x float]* %no, metadata !13593, metadata !DIExpression()), !dbg !13594
  call void @llvm.dbg.declare(metadata float* %angle, metadata !13595, metadata !DIExpression()), !dbg !13596
  %34 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13597
  %flag = getelementptr inbounds %struct.MFace, %struct.MFace* %34, i32 0, i32 6, !dbg !13599
  %35 = load i8, i8* %flag, align 1, !dbg !13599
  %conv39 = zext i8 %35 to i32, !dbg !13597
  %and = and i32 %conv39, 1, !dbg !13600
  %tobool40 = icmp ne i32 %and, 0, !dbg !13600
  br i1 %tobool40, label %if.then41, label %if.else128, !dbg !13601

if.then41:                                        ; preds = %if.then37
  call void @llvm.dbg.declare(metadata i16** %no1, metadata !13602, metadata !DIExpression()), !dbg !13604
  call void @llvm.dbg.declare(metadata i16** %no2, metadata !13605, metadata !DIExpression()), !dbg !13606
  call void @llvm.dbg.declare(metadata i16** %no3, metadata !13607, metadata !DIExpression()), !dbg !13608
  %36 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13609
  %dm_mvert = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %36, i32 0, i32 18, !dbg !13610
  %37 = load %struct.MVert*, %struct.MVert** %dm_mvert, align 8, !dbg !13610
  %38 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13611
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %38, i32 0, i32 0, !dbg !13612
  %39 = load i32, i32* %v1, align 4, !dbg !13612
  %idxprom42 = zext i32 %39 to i64, !dbg !13609
  %arrayidx43 = getelementptr inbounds %struct.MVert, %struct.MVert* %37, i64 %idxprom42, !dbg !13609
  %no44 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx43, i32 0, i32 1, !dbg !13613
  %arraydecay45 = getelementptr inbounds [3 x i16], [3 x i16]* %no44, i64 0, i64 0, !dbg !13609
  store i16* %arraydecay45, i16** %no1, align 8, !dbg !13614
  %40 = load i32, i32* %side.addr, align 4, !dbg !13615
  %cmp46 = icmp eq i32 %40, 1, !dbg !13617
  br i1 %cmp46, label %if.then48, label %if.else59, !dbg !13618

if.then48:                                        ; preds = %if.then41
  %41 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13619
  %dm_mvert49 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %41, i32 0, i32 18, !dbg !13621
  %42 = load %struct.MVert*, %struct.MVert** %dm_mvert49, align 8, !dbg !13621
  %43 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13622
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %43, i32 0, i32 2, !dbg !13623
  %44 = load i32, i32* %v3, align 4, !dbg !13623
  %idxprom50 = zext i32 %44 to i64, !dbg !13619
  %arrayidx51 = getelementptr inbounds %struct.MVert, %struct.MVert* %42, i64 %idxprom50, !dbg !13619
  %no52 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx51, i32 0, i32 1, !dbg !13624
  %arraydecay53 = getelementptr inbounds [3 x i16], [3 x i16]* %no52, i64 0, i64 0, !dbg !13619
  store i16* %arraydecay53, i16** %no2, align 8, !dbg !13625
  %45 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13626
  %dm_mvert54 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %45, i32 0, i32 18, !dbg !13627
  %46 = load %struct.MVert*, %struct.MVert** %dm_mvert54, align 8, !dbg !13627
  %47 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13628
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %47, i32 0, i32 3, !dbg !13629
  %48 = load i32, i32* %v4, align 4, !dbg !13629
  %idxprom55 = zext i32 %48 to i64, !dbg !13626
  %arrayidx56 = getelementptr inbounds %struct.MVert, %struct.MVert* %46, i64 %idxprom55, !dbg !13626
  %no57 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx56, i32 0, i32 1, !dbg !13630
  %arraydecay58 = getelementptr inbounds [3 x i16], [3 x i16]* %no57, i64 0, i64 0, !dbg !13626
  store i16* %arraydecay58, i16** %no3, align 8, !dbg !13631
  br label %if.end71, !dbg !13632

if.else59:                                        ; preds = %if.then41
  %49 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13633
  %dm_mvert60 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %49, i32 0, i32 18, !dbg !13635
  %50 = load %struct.MVert*, %struct.MVert** %dm_mvert60, align 8, !dbg !13635
  %51 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13636
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %51, i32 0, i32 1, !dbg !13637
  %52 = load i32, i32* %v2, align 4, !dbg !13637
  %idxprom61 = zext i32 %52 to i64, !dbg !13633
  %arrayidx62 = getelementptr inbounds %struct.MVert, %struct.MVert* %50, i64 %idxprom61, !dbg !13633
  %no63 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx62, i32 0, i32 1, !dbg !13638
  %arraydecay64 = getelementptr inbounds [3 x i16], [3 x i16]* %no63, i64 0, i64 0, !dbg !13633
  store i16* %arraydecay64, i16** %no2, align 8, !dbg !13639
  %53 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13640
  %dm_mvert65 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %53, i32 0, i32 18, !dbg !13641
  %54 = load %struct.MVert*, %struct.MVert** %dm_mvert65, align 8, !dbg !13641
  %55 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13642
  %v366 = getelementptr inbounds %struct.MFace, %struct.MFace* %55, i32 0, i32 2, !dbg !13643
  %56 = load i32, i32* %v366, align 4, !dbg !13643
  %idxprom67 = zext i32 %56 to i64, !dbg !13640
  %arrayidx68 = getelementptr inbounds %struct.MVert, %struct.MVert* %54, i64 %idxprom67, !dbg !13640
  %no69 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx68, i32 0, i32 1, !dbg !13644
  %arraydecay70 = getelementptr inbounds [3 x i16], [3 x i16]* %no69, i64 0, i64 0, !dbg !13640
  store i16* %arraydecay70, i16** %no3, align 8, !dbg !13645
  br label %if.end71

if.end71:                                         ; preds = %if.else59, %if.then48
  %57 = load float*, float** %w.addr, align 8, !dbg !13646
  %arrayidx72 = getelementptr inbounds float, float* %57, i64 0, !dbg !13646
  %58 = load float, float* %arrayidx72, align 4, !dbg !13646
  %59 = load i16*, i16** %no1, align 8, !dbg !13647
  %arrayidx73 = getelementptr inbounds i16, i16* %59, i64 0, !dbg !13647
  %60 = load i16, i16* %arrayidx73, align 2, !dbg !13647
  %conv74 = sext i16 %60 to i32, !dbg !13647
  %conv75 = sitofp i32 %conv74 to float, !dbg !13647
  %mul76 = fmul float %58, %conv75, !dbg !13648
  %61 = load float*, float** %w.addr, align 8, !dbg !13649
  %arrayidx77 = getelementptr inbounds float, float* %61, i64 1, !dbg !13649
  %62 = load float, float* %arrayidx77, align 4, !dbg !13649
  %63 = load i16*, i16** %no2, align 8, !dbg !13650
  %arrayidx78 = getelementptr inbounds i16, i16* %63, i64 0, !dbg !13650
  %64 = load i16, i16* %arrayidx78, align 2, !dbg !13650
  %conv79 = sext i16 %64 to i32, !dbg !13650
  %conv80 = sitofp i32 %conv79 to float, !dbg !13650
  %mul81 = fmul float %62, %conv80, !dbg !13651
  %add82 = fadd float %mul76, %mul81, !dbg !13652
  %65 = load float*, float** %w.addr, align 8, !dbg !13653
  %arrayidx83 = getelementptr inbounds float, float* %65, i64 2, !dbg !13653
  %66 = load float, float* %arrayidx83, align 4, !dbg !13653
  %67 = load i16*, i16** %no3, align 8, !dbg !13654
  %arrayidx84 = getelementptr inbounds i16, i16* %67, i64 0, !dbg !13654
  %68 = load i16, i16* %arrayidx84, align 2, !dbg !13654
  %conv85 = sext i16 %68 to i32, !dbg !13654
  %conv86 = sitofp i32 %conv85 to float, !dbg !13654
  %mul87 = fmul float %66, %conv86, !dbg !13655
  %add88 = fadd float %add82, %mul87, !dbg !13656
  %arrayidx89 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !13657
  store float %add88, float* %arrayidx89, align 4, !dbg !13658
  %69 = load float*, float** %w.addr, align 8, !dbg !13659
  %arrayidx90 = getelementptr inbounds float, float* %69, i64 0, !dbg !13659
  %70 = load float, float* %arrayidx90, align 4, !dbg !13659
  %71 = load i16*, i16** %no1, align 8, !dbg !13660
  %arrayidx91 = getelementptr inbounds i16, i16* %71, i64 1, !dbg !13660
  %72 = load i16, i16* %arrayidx91, align 2, !dbg !13660
  %conv92 = sext i16 %72 to i32, !dbg !13660
  %conv93 = sitofp i32 %conv92 to float, !dbg !13660
  %mul94 = fmul float %70, %conv93, !dbg !13661
  %73 = load float*, float** %w.addr, align 8, !dbg !13662
  %arrayidx95 = getelementptr inbounds float, float* %73, i64 1, !dbg !13662
  %74 = load float, float* %arrayidx95, align 4, !dbg !13662
  %75 = load i16*, i16** %no2, align 8, !dbg !13663
  %arrayidx96 = getelementptr inbounds i16, i16* %75, i64 1, !dbg !13663
  %76 = load i16, i16* %arrayidx96, align 2, !dbg !13663
  %conv97 = sext i16 %76 to i32, !dbg !13663
  %conv98 = sitofp i32 %conv97 to float, !dbg !13663
  %mul99 = fmul float %74, %conv98, !dbg !13664
  %add100 = fadd float %mul94, %mul99, !dbg !13665
  %77 = load float*, float** %w.addr, align 8, !dbg !13666
  %arrayidx101 = getelementptr inbounds float, float* %77, i64 2, !dbg !13666
  %78 = load float, float* %arrayidx101, align 4, !dbg !13666
  %79 = load i16*, i16** %no3, align 8, !dbg !13667
  %arrayidx102 = getelementptr inbounds i16, i16* %79, i64 1, !dbg !13667
  %80 = load i16, i16* %arrayidx102, align 2, !dbg !13667
  %conv103 = sext i16 %80 to i32, !dbg !13667
  %conv104 = sitofp i32 %conv103 to float, !dbg !13667
  %mul105 = fmul float %78, %conv104, !dbg !13668
  %add106 = fadd float %add100, %mul105, !dbg !13669
  %arrayidx107 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 1, !dbg !13670
  store float %add106, float* %arrayidx107, align 4, !dbg !13671
  %81 = load float*, float** %w.addr, align 8, !dbg !13672
  %arrayidx108 = getelementptr inbounds float, float* %81, i64 0, !dbg !13672
  %82 = load float, float* %arrayidx108, align 4, !dbg !13672
  %83 = load i16*, i16** %no1, align 8, !dbg !13673
  %arrayidx109 = getelementptr inbounds i16, i16* %83, i64 2, !dbg !13673
  %84 = load i16, i16* %arrayidx109, align 2, !dbg !13673
  %conv110 = sext i16 %84 to i32, !dbg !13673
  %conv111 = sitofp i32 %conv110 to float, !dbg !13673
  %mul112 = fmul float %82, %conv111, !dbg !13674
  %85 = load float*, float** %w.addr, align 8, !dbg !13675
  %arrayidx113 = getelementptr inbounds float, float* %85, i64 1, !dbg !13675
  %86 = load float, float* %arrayidx113, align 4, !dbg !13675
  %87 = load i16*, i16** %no2, align 8, !dbg !13676
  %arrayidx114 = getelementptr inbounds i16, i16* %87, i64 2, !dbg !13676
  %88 = load i16, i16* %arrayidx114, align 2, !dbg !13676
  %conv115 = sext i16 %88 to i32, !dbg !13676
  %conv116 = sitofp i32 %conv115 to float, !dbg !13676
  %mul117 = fmul float %86, %conv116, !dbg !13677
  %add118 = fadd float %mul112, %mul117, !dbg !13678
  %89 = load float*, float** %w.addr, align 8, !dbg !13679
  %arrayidx119 = getelementptr inbounds float, float* %89, i64 2, !dbg !13679
  %90 = load float, float* %arrayidx119, align 4, !dbg !13679
  %91 = load i16*, i16** %no3, align 8, !dbg !13680
  %arrayidx120 = getelementptr inbounds i16, i16* %91, i64 2, !dbg !13680
  %92 = load i16, i16* %arrayidx120, align 2, !dbg !13680
  %conv121 = sext i16 %92 to i32, !dbg !13680
  %conv122 = sitofp i32 %conv121 to float, !dbg !13680
  %mul123 = fmul float %90, %conv122, !dbg !13681
  %add124 = fadd float %add118, %mul123, !dbg !13682
  %arrayidx125 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 2, !dbg !13683
  store float %add124, float* %arrayidx125, align 4, !dbg !13684
  %arraydecay126 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !13685
  %call127 = call float @normalize_v3(float* %arraydecay126), !dbg !13686
  br label %if.end179, !dbg !13687

if.else128:                                       ; preds = %if.then37
  %93 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13688
  %v4129 = getelementptr inbounds %struct.MFace, %struct.MFace* %93, i32 0, i32 3, !dbg !13691
  %94 = load i32, i32* %v4129, align 4, !dbg !13691
  %tobool130 = icmp ne i32 %94, 0, !dbg !13688
  br i1 %tobool130, label %if.then131, label %if.else157, !dbg !13692

if.then131:                                       ; preds = %if.else128
  %arraydecay132 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !13693
  %95 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13694
  %dm_mvert133 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %95, i32 0, i32 18, !dbg !13695
  %96 = load %struct.MVert*, %struct.MVert** %dm_mvert133, align 8, !dbg !13695
  %97 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13696
  %v1134 = getelementptr inbounds %struct.MFace, %struct.MFace* %97, i32 0, i32 0, !dbg !13697
  %98 = load i32, i32* %v1134, align 4, !dbg !13697
  %idxprom135 = zext i32 %98 to i64, !dbg !13694
  %arrayidx136 = getelementptr inbounds %struct.MVert, %struct.MVert* %96, i64 %idxprom135, !dbg !13694
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx136, i32 0, i32 0, !dbg !13698
  %arraydecay137 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !13694
  %99 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13699
  %dm_mvert138 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %99, i32 0, i32 18, !dbg !13700
  %100 = load %struct.MVert*, %struct.MVert** %dm_mvert138, align 8, !dbg !13700
  %101 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13701
  %v2139 = getelementptr inbounds %struct.MFace, %struct.MFace* %101, i32 0, i32 1, !dbg !13702
  %102 = load i32, i32* %v2139, align 4, !dbg !13702
  %idxprom140 = zext i32 %102 to i64, !dbg !13699
  %arrayidx141 = getelementptr inbounds %struct.MVert, %struct.MVert* %100, i64 %idxprom140, !dbg !13699
  %co142 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx141, i32 0, i32 0, !dbg !13703
  %arraydecay143 = getelementptr inbounds [3 x float], [3 x float]* %co142, i64 0, i64 0, !dbg !13699
  %103 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13704
  %dm_mvert144 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %103, i32 0, i32 18, !dbg !13705
  %104 = load %struct.MVert*, %struct.MVert** %dm_mvert144, align 8, !dbg !13705
  %105 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13706
  %v3145 = getelementptr inbounds %struct.MFace, %struct.MFace* %105, i32 0, i32 2, !dbg !13707
  %106 = load i32, i32* %v3145, align 4, !dbg !13707
  %idxprom146 = zext i32 %106 to i64, !dbg !13704
  %arrayidx147 = getelementptr inbounds %struct.MVert, %struct.MVert* %104, i64 %idxprom146, !dbg !13704
  %co148 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx147, i32 0, i32 0, !dbg !13708
  %arraydecay149 = getelementptr inbounds [3 x float], [3 x float]* %co148, i64 0, i64 0, !dbg !13704
  %107 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13709
  %dm_mvert150 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %107, i32 0, i32 18, !dbg !13710
  %108 = load %struct.MVert*, %struct.MVert** %dm_mvert150, align 8, !dbg !13710
  %109 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13711
  %v4151 = getelementptr inbounds %struct.MFace, %struct.MFace* %109, i32 0, i32 3, !dbg !13712
  %110 = load i32, i32* %v4151, align 4, !dbg !13712
  %idxprom152 = zext i32 %110 to i64, !dbg !13709
  %arrayidx153 = getelementptr inbounds %struct.MVert, %struct.MVert* %108, i64 %idxprom152, !dbg !13709
  %co154 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx153, i32 0, i32 0, !dbg !13713
  %arraydecay155 = getelementptr inbounds [3 x float], [3 x float]* %co154, i64 0, i64 0, !dbg !13709
  %call156 = call float @normal_quad_v3(float* %arraydecay132, float* %arraydecay137, float* %arraydecay143, float* %arraydecay149, float* %arraydecay155), !dbg !13714
  br label %if.end178, !dbg !13714

if.else157:                                       ; preds = %if.else128
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !13715
  %111 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13716
  %dm_mvert159 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %111, i32 0, i32 18, !dbg !13717
  %112 = load %struct.MVert*, %struct.MVert** %dm_mvert159, align 8, !dbg !13717
  %113 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13718
  %v1160 = getelementptr inbounds %struct.MFace, %struct.MFace* %113, i32 0, i32 0, !dbg !13719
  %114 = load i32, i32* %v1160, align 4, !dbg !13719
  %idxprom161 = zext i32 %114 to i64, !dbg !13716
  %arrayidx162 = getelementptr inbounds %struct.MVert, %struct.MVert* %112, i64 %idxprom161, !dbg !13716
  %co163 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx162, i32 0, i32 0, !dbg !13720
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %co163, i64 0, i64 0, !dbg !13716
  %115 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13721
  %dm_mvert165 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %115, i32 0, i32 18, !dbg !13722
  %116 = load %struct.MVert*, %struct.MVert** %dm_mvert165, align 8, !dbg !13722
  %117 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13723
  %v2166 = getelementptr inbounds %struct.MFace, %struct.MFace* %117, i32 0, i32 1, !dbg !13724
  %118 = load i32, i32* %v2166, align 4, !dbg !13724
  %idxprom167 = zext i32 %118 to i64, !dbg !13721
  %arrayidx168 = getelementptr inbounds %struct.MVert, %struct.MVert* %116, i64 %idxprom167, !dbg !13721
  %co169 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx168, i32 0, i32 0, !dbg !13725
  %arraydecay170 = getelementptr inbounds [3 x float], [3 x float]* %co169, i64 0, i64 0, !dbg !13721
  %119 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13726
  %dm_mvert171 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %119, i32 0, i32 18, !dbg !13727
  %120 = load %struct.MVert*, %struct.MVert** %dm_mvert171, align 8, !dbg !13727
  %121 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13728
  %v3172 = getelementptr inbounds %struct.MFace, %struct.MFace* %121, i32 0, i32 2, !dbg !13729
  %122 = load i32, i32* %v3172, align 4, !dbg !13729
  %idxprom173 = zext i32 %122 to i64, !dbg !13726
  %arrayidx174 = getelementptr inbounds %struct.MVert, %struct.MVert* %120, i64 %idxprom173, !dbg !13726
  %co175 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx174, i32 0, i32 0, !dbg !13730
  %arraydecay176 = getelementptr inbounds [3 x float], [3 x float]* %co175, i64 0, i64 0, !dbg !13726
  %call177 = call float @normal_tri_v3(float* %arraydecay158, float* %arraydecay164, float* %arraydecay170, float* %arraydecay176), !dbg !13731
  br label %if.end178

if.end178:                                        ; preds = %if.else157, %if.then131
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %if.end71
  %123 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13732
  %is_ortho = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %123, i32 0, i32 61, !dbg !13734
  %124 = load i8, i8* %is_ortho, align 1, !dbg !13734
  %tobool180 = icmp ne i8 %124, 0, !dbg !13732
  br i1 %tobool180, label %if.then181, label %if.else185, !dbg !13735

if.then181:                                       ; preds = %if.end179
  %125 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13736
  %viewDir = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %125, i32 0, i32 68, !dbg !13738
  %arraydecay182 = getelementptr inbounds [3 x float], [3 x float]* %viewDir, i64 0, i64 0, !dbg !13736
  %arraydecay183 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !13739
  %call184 = call float @angle_normalized_v3v3(float* %arraydecay182, float* %arraydecay183), !dbg !13740
  store float %call184, float* %angle, align 4, !dbg !13741
  br label %if.end270, !dbg !13742

if.else185:                                       ; preds = %if.end179
  call void @llvm.dbg.declare(metadata [3 x float]* %viewDirPersp, metadata !13743, metadata !DIExpression()), !dbg !13745
  call void @llvm.dbg.declare(metadata float** %co1, metadata !13746, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.declare(metadata float** %co2, metadata !13748, metadata !DIExpression()), !dbg !13749
  call void @llvm.dbg.declare(metadata float** %co3, metadata !13750, metadata !DIExpression()), !dbg !13751
  %126 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13752
  %dm_mvert186 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %126, i32 0, i32 18, !dbg !13753
  %127 = load %struct.MVert*, %struct.MVert** %dm_mvert186, align 8, !dbg !13753
  %128 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13754
  %v1187 = getelementptr inbounds %struct.MFace, %struct.MFace* %128, i32 0, i32 0, !dbg !13755
  %129 = load i32, i32* %v1187, align 4, !dbg !13755
  %idxprom188 = zext i32 %129 to i64, !dbg !13752
  %arrayidx189 = getelementptr inbounds %struct.MVert, %struct.MVert* %127, i64 %idxprom188, !dbg !13752
  %co190 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx189, i32 0, i32 0, !dbg !13756
  %arraydecay191 = getelementptr inbounds [3 x float], [3 x float]* %co190, i64 0, i64 0, !dbg !13752
  store float* %arraydecay191, float** %co1, align 8, !dbg !13757
  %130 = load i32, i32* %side.addr, align 4, !dbg !13758
  %cmp192 = icmp eq i32 %130, 1, !dbg !13760
  br i1 %cmp192, label %if.then194, label %if.else207, !dbg !13761

if.then194:                                       ; preds = %if.else185
  %131 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13762
  %dm_mvert195 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %131, i32 0, i32 18, !dbg !13764
  %132 = load %struct.MVert*, %struct.MVert** %dm_mvert195, align 8, !dbg !13764
  %133 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13765
  %v3196 = getelementptr inbounds %struct.MFace, %struct.MFace* %133, i32 0, i32 2, !dbg !13766
  %134 = load i32, i32* %v3196, align 4, !dbg !13766
  %idxprom197 = zext i32 %134 to i64, !dbg !13762
  %arrayidx198 = getelementptr inbounds %struct.MVert, %struct.MVert* %132, i64 %idxprom197, !dbg !13762
  %co199 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx198, i32 0, i32 0, !dbg !13767
  %arraydecay200 = getelementptr inbounds [3 x float], [3 x float]* %co199, i64 0, i64 0, !dbg !13762
  store float* %arraydecay200, float** %co2, align 8, !dbg !13768
  %135 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13769
  %dm_mvert201 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %135, i32 0, i32 18, !dbg !13770
  %136 = load %struct.MVert*, %struct.MVert** %dm_mvert201, align 8, !dbg !13770
  %137 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13771
  %v4202 = getelementptr inbounds %struct.MFace, %struct.MFace* %137, i32 0, i32 3, !dbg !13772
  %138 = load i32, i32* %v4202, align 4, !dbg !13772
  %idxprom203 = zext i32 %138 to i64, !dbg !13769
  %arrayidx204 = getelementptr inbounds %struct.MVert, %struct.MVert* %136, i64 %idxprom203, !dbg !13769
  %co205 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx204, i32 0, i32 0, !dbg !13773
  %arraydecay206 = getelementptr inbounds [3 x float], [3 x float]* %co205, i64 0, i64 0, !dbg !13769
  store float* %arraydecay206, float** %co3, align 8, !dbg !13774
  br label %if.end220, !dbg !13775

if.else207:                                       ; preds = %if.else185
  %139 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13776
  %dm_mvert208 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %139, i32 0, i32 18, !dbg !13778
  %140 = load %struct.MVert*, %struct.MVert** %dm_mvert208, align 8, !dbg !13778
  %141 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13779
  %v2209 = getelementptr inbounds %struct.MFace, %struct.MFace* %141, i32 0, i32 1, !dbg !13780
  %142 = load i32, i32* %v2209, align 4, !dbg !13780
  %idxprom210 = zext i32 %142 to i64, !dbg !13776
  %arrayidx211 = getelementptr inbounds %struct.MVert, %struct.MVert* %140, i64 %idxprom210, !dbg !13776
  %co212 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx211, i32 0, i32 0, !dbg !13781
  %arraydecay213 = getelementptr inbounds [3 x float], [3 x float]* %co212, i64 0, i64 0, !dbg !13776
  store float* %arraydecay213, float** %co2, align 8, !dbg !13782
  %143 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13783
  %dm_mvert214 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %143, i32 0, i32 18, !dbg !13784
  %144 = load %struct.MVert*, %struct.MVert** %dm_mvert214, align 8, !dbg !13784
  %145 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !13785
  %v3215 = getelementptr inbounds %struct.MFace, %struct.MFace* %145, i32 0, i32 2, !dbg !13786
  %146 = load i32, i32* %v3215, align 4, !dbg !13786
  %idxprom216 = zext i32 %146 to i64, !dbg !13783
  %arrayidx217 = getelementptr inbounds %struct.MVert, %struct.MVert* %144, i64 %idxprom216, !dbg !13783
  %co218 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx217, i32 0, i32 0, !dbg !13787
  %arraydecay219 = getelementptr inbounds [3 x float], [3 x float]* %co218, i64 0, i64 0, !dbg !13783
  store float* %arraydecay219, float** %co3, align 8, !dbg !13788
  br label %if.end220

if.end220:                                        ; preds = %if.else207, %if.then194
  %147 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13789
  %viewPos = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %147, i32 0, i32 69, !dbg !13790
  %arrayidx221 = getelementptr inbounds [3 x float], [3 x float]* %viewPos, i64 0, i64 0, !dbg !13789
  %148 = load float, float* %arrayidx221, align 8, !dbg !13789
  %149 = load float*, float** %w.addr, align 8, !dbg !13791
  %arrayidx222 = getelementptr inbounds float, float* %149, i64 0, !dbg !13791
  %150 = load float, float* %arrayidx222, align 4, !dbg !13791
  %151 = load float*, float** %co1, align 8, !dbg !13792
  %arrayidx223 = getelementptr inbounds float, float* %151, i64 0, !dbg !13792
  %152 = load float, float* %arrayidx223, align 4, !dbg !13792
  %mul224 = fmul float %150, %152, !dbg !13793
  %153 = load float*, float** %w.addr, align 8, !dbg !13794
  %arrayidx225 = getelementptr inbounds float, float* %153, i64 1, !dbg !13794
  %154 = load float, float* %arrayidx225, align 4, !dbg !13794
  %155 = load float*, float** %co2, align 8, !dbg !13795
  %arrayidx226 = getelementptr inbounds float, float* %155, i64 0, !dbg !13795
  %156 = load float, float* %arrayidx226, align 4, !dbg !13795
  %mul227 = fmul float %154, %156, !dbg !13796
  %add228 = fadd float %mul224, %mul227, !dbg !13797
  %157 = load float*, float** %w.addr, align 8, !dbg !13798
  %arrayidx229 = getelementptr inbounds float, float* %157, i64 2, !dbg !13798
  %158 = load float, float* %arrayidx229, align 4, !dbg !13798
  %159 = load float*, float** %co3, align 8, !dbg !13799
  %arrayidx230 = getelementptr inbounds float, float* %159, i64 0, !dbg !13799
  %160 = load float, float* %arrayidx230, align 4, !dbg !13799
  %mul231 = fmul float %158, %160, !dbg !13800
  %add232 = fadd float %add228, %mul231, !dbg !13801
  %sub233 = fsub float %148, %add232, !dbg !13802
  %arrayidx234 = getelementptr inbounds [3 x float], [3 x float]* %viewDirPersp, i64 0, i64 0, !dbg !13803
  store float %sub233, float* %arrayidx234, align 4, !dbg !13804
  %161 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13805
  %viewPos235 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %161, i32 0, i32 69, !dbg !13806
  %arrayidx236 = getelementptr inbounds [3 x float], [3 x float]* %viewPos235, i64 0, i64 1, !dbg !13805
  %162 = load float, float* %arrayidx236, align 4, !dbg !13805
  %163 = load float*, float** %w.addr, align 8, !dbg !13807
  %arrayidx237 = getelementptr inbounds float, float* %163, i64 0, !dbg !13807
  %164 = load float, float* %arrayidx237, align 4, !dbg !13807
  %165 = load float*, float** %co1, align 8, !dbg !13808
  %arrayidx238 = getelementptr inbounds float, float* %165, i64 1, !dbg !13808
  %166 = load float, float* %arrayidx238, align 4, !dbg !13808
  %mul239 = fmul float %164, %166, !dbg !13809
  %167 = load float*, float** %w.addr, align 8, !dbg !13810
  %arrayidx240 = getelementptr inbounds float, float* %167, i64 1, !dbg !13810
  %168 = load float, float* %arrayidx240, align 4, !dbg !13810
  %169 = load float*, float** %co2, align 8, !dbg !13811
  %arrayidx241 = getelementptr inbounds float, float* %169, i64 1, !dbg !13811
  %170 = load float, float* %arrayidx241, align 4, !dbg !13811
  %mul242 = fmul float %168, %170, !dbg !13812
  %add243 = fadd float %mul239, %mul242, !dbg !13813
  %171 = load float*, float** %w.addr, align 8, !dbg !13814
  %arrayidx244 = getelementptr inbounds float, float* %171, i64 2, !dbg !13814
  %172 = load float, float* %arrayidx244, align 4, !dbg !13814
  %173 = load float*, float** %co3, align 8, !dbg !13815
  %arrayidx245 = getelementptr inbounds float, float* %173, i64 1, !dbg !13815
  %174 = load float, float* %arrayidx245, align 4, !dbg !13815
  %mul246 = fmul float %172, %174, !dbg !13816
  %add247 = fadd float %add243, %mul246, !dbg !13817
  %sub248 = fsub float %162, %add247, !dbg !13818
  %arrayidx249 = getelementptr inbounds [3 x float], [3 x float]* %viewDirPersp, i64 0, i64 1, !dbg !13819
  store float %sub248, float* %arrayidx249, align 4, !dbg !13820
  %175 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13821
  %viewPos250 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %175, i32 0, i32 69, !dbg !13822
  %arrayidx251 = getelementptr inbounds [3 x float], [3 x float]* %viewPos250, i64 0, i64 2, !dbg !13821
  %176 = load float, float* %arrayidx251, align 8, !dbg !13821
  %177 = load float*, float** %w.addr, align 8, !dbg !13823
  %arrayidx252 = getelementptr inbounds float, float* %177, i64 0, !dbg !13823
  %178 = load float, float* %arrayidx252, align 4, !dbg !13823
  %179 = load float*, float** %co1, align 8, !dbg !13824
  %arrayidx253 = getelementptr inbounds float, float* %179, i64 2, !dbg !13824
  %180 = load float, float* %arrayidx253, align 4, !dbg !13824
  %mul254 = fmul float %178, %180, !dbg !13825
  %181 = load float*, float** %w.addr, align 8, !dbg !13826
  %arrayidx255 = getelementptr inbounds float, float* %181, i64 1, !dbg !13826
  %182 = load float, float* %arrayidx255, align 4, !dbg !13826
  %183 = load float*, float** %co2, align 8, !dbg !13827
  %arrayidx256 = getelementptr inbounds float, float* %183, i64 2, !dbg !13827
  %184 = load float, float* %arrayidx256, align 4, !dbg !13827
  %mul257 = fmul float %182, %184, !dbg !13828
  %add258 = fadd float %mul254, %mul257, !dbg !13829
  %185 = load float*, float** %w.addr, align 8, !dbg !13830
  %arrayidx259 = getelementptr inbounds float, float* %185, i64 2, !dbg !13830
  %186 = load float, float* %arrayidx259, align 4, !dbg !13830
  %187 = load float*, float** %co3, align 8, !dbg !13831
  %arrayidx260 = getelementptr inbounds float, float* %187, i64 2, !dbg !13831
  %188 = load float, float* %arrayidx260, align 4, !dbg !13831
  %mul261 = fmul float %186, %188, !dbg !13832
  %add262 = fadd float %add258, %mul261, !dbg !13833
  %sub263 = fsub float %176, %add262, !dbg !13834
  %arrayidx264 = getelementptr inbounds [3 x float], [3 x float]* %viewDirPersp, i64 0, i64 2, !dbg !13835
  store float %sub263, float* %arrayidx264, align 4, !dbg !13836
  %arraydecay265 = getelementptr inbounds [3 x float], [3 x float]* %viewDirPersp, i64 0, i64 0, !dbg !13837
  %call266 = call float @normalize_v3(float* %arraydecay265), !dbg !13838
  %arraydecay267 = getelementptr inbounds [3 x float], [3 x float]* %viewDirPersp, i64 0, i64 0, !dbg !13839
  %arraydecay268 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !13840
  %call269 = call float @angle_normalized_v3v3(float* %arraydecay267, float* %arraydecay268), !dbg !13841
  store float %call269, float* %angle, align 4, !dbg !13842
  br label %if.end270

if.end270:                                        ; preds = %if.end220, %if.then181
  %189 = load float, float* %angle, align 4, !dbg !13843
  %190 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13845
  %normal_angle = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %190, i32 0, i32 57, !dbg !13846
  %191 = load float, float* %normal_angle, align 4, !dbg !13846
  %cmp271 = fcmp oge float %189, %191, !dbg !13847
  br i1 %cmp271, label %if.then273, label %if.else274, !dbg !13848

if.then273:                                       ; preds = %if.end270
  store float 0.000000e+00, float* %retval, align 4, !dbg !13849
  br label %return, !dbg !13849

if.else274:                                       ; preds = %if.end270
  %192 = load float, float* %angle, align 4, !dbg !13851
  %193 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13853
  %normal_angle_inner = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %193, i32 0, i32 58, !dbg !13854
  %194 = load float, float* %normal_angle_inner, align 8, !dbg !13854
  %cmp275 = fcmp ogt float %192, %194, !dbg !13855
  br i1 %cmp275, label %if.then277, label %if.end281, !dbg !13856

if.then277:                                       ; preds = %if.else274
  %195 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13857
  %normal_angle278 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %195, i32 0, i32 57, !dbg !13859
  %196 = load float, float* %normal_angle278, align 4, !dbg !13859
  %197 = load float, float* %angle, align 4, !dbg !13860
  %sub279 = fsub float %196, %197, !dbg !13861
  %198 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13862
  %normal_angle_range = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %198, i32 0, i32 59, !dbg !13863
  %199 = load float, float* %normal_angle_range, align 4, !dbg !13863
  %div = fdiv float %sub279, %199, !dbg !13864
  %200 = load float, float* %mask, align 4, !dbg !13865
  %mul280 = fmul float %200, %div, !dbg !13865
  store float %mul280, float* %mask, align 4, !dbg !13865
  br label %if.end281, !dbg !13866

if.end281:                                        ; preds = %if.then277, %if.else274
  br label %if.end282

if.end282:                                        ; preds = %if.end281
  br label %if.end283, !dbg !13867

if.end283:                                        ; preds = %if.end282, %if.end35
  %201 = load float, float* %mask, align 4, !dbg !13868
  store float %201, float* %retval, align 4, !dbg !13869
  br label %return, !dbg !13869

return:                                           ; preds = %if.end283, %if.then273, %if.else32, %if.then30
  %202 = load float, float* %retval, align 4, !dbg !13870
  ret float %202, !dbg !13870
}

declare dso_local void @BLI_linklist_prepend_arena(%struct.LinkNode**, i8*, %struct.MemArena*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.ProjPixel* @project_paint_uvpixel_init(%struct.ProjPaintState* %ps, %struct.MemArena* %arena, %struct.TileInfo* %tinf, i32 %x_px, i32 %y_px, float %mask, i32 %face_index, float* %pixelScreenCo, float* %world_spaceCo, i32 %side, float* %w) #0 !dbg !13871 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %arena.addr = alloca %struct.MemArena*, align 8
  %tinf.addr = alloca %struct.TileInfo*, align 8
  %x_px.addr = alloca i32, align 4
  %y_px.addr = alloca i32, align 4
  %mask.addr = alloca float, align 4
  %face_index.addr = alloca i32, align 4
  %pixelScreenCo.addr = alloca float*, align 8
  %world_spaceCo.addr = alloca float*, align 8
  %side.addr = alloca i32, align 4
  %w.addr = alloca float*, align 8
  %projPixel = alloca %struct.ProjPixel*, align 8
  %x_tile = alloca i32, align 4
  %y_tile = alloca i32, align 4
  %x_round = alloca i32, align 4
  %y_round = alloca i32, align 4
  %tile_offset = alloca i32, align 4
  %tile_index = alloca i32, align 4
  %projima = alloca %struct.ProjPaintImage*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %ibuf_other = alloca %struct.ImBuf*, align 8
  %other_tpage = alloca %struct.Image*, align 8
  %tf_other = alloca %struct.MTFace*, align 8
  %rgba_ub = alloca [4 x i8], align 1
  %rgba = alloca [4 x float], align 16
  %rgba110 = alloca [4 x float], align 16
  %co = alloca [2 x float], align 4
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !13876, metadata !DIExpression()), !dbg !13877
  store %struct.MemArena* %arena, %struct.MemArena** %arena.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MemArena** %arena.addr, metadata !13878, metadata !DIExpression()), !dbg !13879
  store %struct.TileInfo* %tinf, %struct.TileInfo** %tinf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TileInfo** %tinf.addr, metadata !13880, metadata !DIExpression()), !dbg !13881
  store i32 %x_px, i32* %x_px.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x_px.addr, metadata !13882, metadata !DIExpression()), !dbg !13883
  store i32 %y_px, i32* %y_px.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y_px.addr, metadata !13884, metadata !DIExpression()), !dbg !13885
  store float %mask, float* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata float* %mask.addr, metadata !13886, metadata !DIExpression()), !dbg !13887
  store i32 %face_index, i32* %face_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_index.addr, metadata !13888, metadata !DIExpression()), !dbg !13889
  store float* %pixelScreenCo, float** %pixelScreenCo.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pixelScreenCo.addr, metadata !13890, metadata !DIExpression()), !dbg !13891
  store float* %world_spaceCo, float** %world_spaceCo.addr, align 8
  call void @llvm.dbg.declare(metadata float** %world_spaceCo.addr, metadata !13892, metadata !DIExpression()), !dbg !13893
  store i32 %side, i32* %side.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %side.addr, metadata !13894, metadata !DIExpression()), !dbg !13895
  store float* %w, float** %w.addr, align 8
  call void @llvm.dbg.declare(metadata float** %w.addr, metadata !13896, metadata !DIExpression()), !dbg !13897
  call void @llvm.dbg.declare(metadata %struct.ProjPixel** %projPixel, metadata !13898, metadata !DIExpression()), !dbg !13899
  call void @llvm.dbg.declare(metadata i32* %x_tile, metadata !13900, metadata !DIExpression()), !dbg !13901
  call void @llvm.dbg.declare(metadata i32* %y_tile, metadata !13902, metadata !DIExpression()), !dbg !13903
  call void @llvm.dbg.declare(metadata i32* %x_round, metadata !13904, metadata !DIExpression()), !dbg !13905
  call void @llvm.dbg.declare(metadata i32* %y_round, metadata !13906, metadata !DIExpression()), !dbg !13907
  call void @llvm.dbg.declare(metadata i32* %tile_offset, metadata !13908, metadata !DIExpression()), !dbg !13909
  call void @llvm.dbg.declare(metadata i32* %tile_index, metadata !13910, metadata !DIExpression()), !dbg !13912
  call void @llvm.dbg.declare(metadata %struct.ProjPaintImage** %projima, metadata !13913, metadata !DIExpression()), !dbg !13914
  %0 = load %struct.TileInfo*, %struct.TileInfo** %tinf.addr, align 8, !dbg !13915
  %pjima = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %0, i32 0, i32 4, !dbg !13916
  %1 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %pjima, align 8, !dbg !13916
  store %struct.ProjPaintImage* %1, %struct.ProjPaintImage** %projima, align 8, !dbg !13914
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !13917, metadata !DIExpression()), !dbg !13918
  %2 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projima, align 8, !dbg !13919
  %ibuf1 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %2, i32 0, i32 1, !dbg !13920
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1, align 8, !dbg !13920
  store %struct.ImBuf* %3, %struct.ImBuf** %ibuf, align 8, !dbg !13918
  %4 = load i32, i32* %x_px.addr, align 4, !dbg !13921
  %5 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !13922
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %5, i32 0, i32 2, !dbg !13923
  %6 = load i32, i32* %x, align 8, !dbg !13923
  %call = call i32 @mod_i(i32 %4, i32 %6), !dbg !13924
  store i32 %call, i32* %x_px.addr, align 4, !dbg !13925
  %7 = load i32, i32* %y_px.addr, align 4, !dbg !13926
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !13927
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %8, i32 0, i32 3, !dbg !13928
  %9 = load i32, i32* %y, align 4, !dbg !13928
  %call2 = call i32 @mod_i(i32 %7, i32 %9), !dbg !13929
  store i32 %call2, i32* %y_px.addr, align 4, !dbg !13930
  %10 = load %struct.MemArena*, %struct.MemArena** %arena.addr, align 8, !dbg !13931
  %11 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !13932
  %pixel_sizeof = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %11, i32 0, i32 39, !dbg !13933
  %12 = load i32, i32* %pixel_sizeof, align 8, !dbg !13933
  %conv = sext i32 %12 to i64, !dbg !13932
  %call3 = call i8* @BLI_memarena_alloc(%struct.MemArena* %10, i64 %conv), !dbg !13934
  %13 = bitcast i8* %call3 to %struct.ProjPixel*, !dbg !13935
  store %struct.ProjPixel* %13, %struct.ProjPixel** %projPixel, align 8, !dbg !13936
  %14 = load i32, i32* %x_px.addr, align 4, !dbg !13937
  %shr = ashr i32 %14, 6, !dbg !13938
  store i32 %shr, i32* %x_tile, align 4, !dbg !13939
  %15 = load i32, i32* %y_px.addr, align 4, !dbg !13940
  %shr4 = ashr i32 %15, 6, !dbg !13941
  store i32 %shr4, i32* %y_tile, align 4, !dbg !13942
  %16 = load i32, i32* %x_tile, align 4, !dbg !13943
  %mul = mul nsw i32 %16, 64, !dbg !13944
  store i32 %mul, i32* %x_round, align 4, !dbg !13945
  %17 = load i32, i32* %y_tile, align 4, !dbg !13946
  %mul5 = mul nsw i32 %17, 64, !dbg !13947
  store i32 %mul5, i32* %y_round, align 4, !dbg !13948
  %18 = load i32, i32* %x_px.addr, align 4, !dbg !13949
  %19 = load i32, i32* %x_round, align 4, !dbg !13950
  %sub = sub nsw i32 %18, %19, !dbg !13951
  %20 = load i32, i32* %y_px.addr, align 4, !dbg !13952
  %21 = load i32, i32* %y_round, align 4, !dbg !13953
  %sub6 = sub nsw i32 %20, %21, !dbg !13954
  %mul7 = mul nsw i32 %sub6, 64, !dbg !13955
  %add = add nsw i32 %sub, %mul7, !dbg !13956
  store i32 %add, i32* %tile_offset, align 4, !dbg !13957
  %22 = load %struct.TileInfo*, %struct.TileInfo** %tinf.addr, align 8, !dbg !13958
  %23 = load i32, i32* %x_tile, align 4, !dbg !13959
  %24 = load i32, i32* %y_tile, align 4, !dbg !13960
  %call8 = call i32 @project_paint_undo_subtiles(%struct.TileInfo* %22, i32 %23, i32 %24), !dbg !13961
  store volatile i32 %call8, i32* %tile_index, align 4, !dbg !13962
  br label %while.cond, !dbg !13963

while.cond:                                       ; preds = %while.body, %entry
  %25 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projima, align 8, !dbg !13964
  %undoRect = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %25, i32 0, i32 3, !dbg !13965
  %26 = load i8**, i8*** %undoRect, align 8, !dbg !13965
  %27 = load volatile i32, i32* %tile_index, align 4, !dbg !13966
  %idxprom = sext i32 %27 to i64, !dbg !13964
  %arrayidx = getelementptr inbounds i8*, i8** %26, i64 %idxprom, !dbg !13964
  %28 = load i8*, i8** %arrayidx, align 8, !dbg !13964
  %cmp = icmp eq i8* %28, inttoptr (i64 -1 to i8*), !dbg !13967
  br i1 %cmp, label %while.body, label %while.end, !dbg !13963

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !13963, !llvm.loop !13968

while.end:                                        ; preds = %while.cond
  %29 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projima, align 8, !dbg !13970
  %valid = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %29, i32 0, i32 5, !dbg !13971
  %30 = load i8**, i8*** %valid, align 8, !dbg !13971
  %31 = load volatile i32, i32* %tile_index, align 4, !dbg !13972
  %idxprom10 = sext i32 %31 to i64, !dbg !13970
  %arrayidx11 = getelementptr inbounds i8*, i8** %30, i64 %idxprom10, !dbg !13970
  %32 = load i8*, i8** %arrayidx11, align 8, !dbg !13970
  %33 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !13973
  %valid12 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %33, i32 0, i32 6, !dbg !13974
  store i8* %32, i8** %valid12, align 8, !dbg !13975
  %34 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !13976
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %34, i32 0, i32 9, !dbg !13978
  %35 = load float*, float** %rect_float, align 8, !dbg !13978
  %tobool = icmp ne float* %35, null, !dbg !13976
  br i1 %tobool, label %if.then, label %if.else, !dbg !13979

if.then:                                          ; preds = %while.end
  %36 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !13980
  %rect_float13 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %36, i32 0, i32 9, !dbg !13982
  %37 = load float*, float** %rect_float13, align 8, !dbg !13982
  %38 = load i32, i32* %x_px.addr, align 4, !dbg !13983
  %39 = load i32, i32* %y_px.addr, align 4, !dbg !13984
  %40 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !13985
  %x14 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %40, i32 0, i32 2, !dbg !13986
  %41 = load i32, i32* %x14, align 8, !dbg !13986
  %mul15 = mul nsw i32 %39, %41, !dbg !13987
  %add16 = add nsw i32 %38, %mul15, !dbg !13988
  %mul17 = mul nsw i32 %add16, 4, !dbg !13989
  %idx.ext = sext i32 %mul17 to i64, !dbg !13990
  %add.ptr = getelementptr inbounds float, float* %37, i64 %idx.ext, !dbg !13990
  %42 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !13991
  %pixel = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %42, i32 0, i32 9, !dbg !13992
  %f_pt = bitcast %union.pixelPointer* %pixel to float**, !dbg !13993
  store float* %add.ptr, float** %f_pt, align 8, !dbg !13994
  %43 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projima, align 8, !dbg !13995
  %undoRect18 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %43, i32 0, i32 3, !dbg !13996
  %44 = load i8**, i8*** %undoRect18, align 8, !dbg !13996
  %45 = load volatile i32, i32* %tile_index, align 4, !dbg !13997
  %idxprom19 = sext i32 %45 to i64, !dbg !13995
  %arrayidx20 = getelementptr inbounds i8*, i8** %44, i64 %idxprom19, !dbg !13995
  %46 = load i8*, i8** %arrayidx20, align 8, !dbg !13995
  %47 = bitcast i8* %46 to float*, !dbg !13998
  %48 = load i32, i32* %tile_offset, align 4, !dbg !13999
  %mul21 = mul nsw i32 4, %48, !dbg !14000
  %idx.ext22 = sext i32 %mul21 to i64, !dbg !14001
  %add.ptr23 = getelementptr inbounds float, float* %47, i64 %idx.ext22, !dbg !14001
  %49 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14002
  %origColor = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %49, i32 0, i32 7, !dbg !14003
  %f_pt24 = bitcast %union.pixelPointer* %origColor to float**, !dbg !14004
  store float* %add.ptr23, float** %f_pt24, align 8, !dbg !14005
  %50 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14006
  %newColor = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %50, i32 0, i32 8, !dbg !14007
  %f = bitcast %union.pixelStore* %newColor to [4 x float]*, !dbg !14008
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %f, i64 0, i64 0, !dbg !14006
  call void @zero_v4(float* %arraydecay), !dbg !14009
  br label %if.end, !dbg !14010

if.else:                                          ; preds = %while.end
  %51 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !14011
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %51, i32 0, i32 8, !dbg !14013
  %52 = load i32*, i32** %rect, align 8, !dbg !14013
  %53 = load i32, i32* %x_px.addr, align 4, !dbg !14014
  %54 = load i32, i32* %y_px.addr, align 4, !dbg !14015
  %55 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !14016
  %x25 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %55, i32 0, i32 2, !dbg !14017
  %56 = load i32, i32* %x25, align 8, !dbg !14017
  %mul26 = mul nsw i32 %54, %56, !dbg !14018
  %add27 = add nsw i32 %53, %mul26, !dbg !14019
  %idx.ext28 = sext i32 %add27 to i64, !dbg !14020
  %add.ptr29 = getelementptr inbounds i32, i32* %52, i64 %idx.ext28, !dbg !14020
  %57 = bitcast i32* %add.ptr29 to i8*, !dbg !14021
  %58 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14022
  %pixel30 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %58, i32 0, i32 9, !dbg !14023
  %ch_pt = bitcast %union.pixelPointer* %pixel30 to i8**, !dbg !14024
  store i8* %57, i8** %ch_pt, align 8, !dbg !14025
  %59 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projima, align 8, !dbg !14026
  %undoRect31 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %59, i32 0, i32 3, !dbg !14027
  %60 = load i8**, i8*** %undoRect31, align 8, !dbg !14027
  %61 = load volatile i32, i32* %tile_index, align 4, !dbg !14028
  %idxprom32 = sext i32 %61 to i64, !dbg !14026
  %arrayidx33 = getelementptr inbounds i8*, i8** %60, i64 %idxprom32, !dbg !14026
  %62 = load i8*, i8** %arrayidx33, align 8, !dbg !14026
  %63 = bitcast i8* %62 to i32*, !dbg !14029
  %64 = load i32, i32* %tile_offset, align 4, !dbg !14030
  %idx.ext34 = sext i32 %64 to i64, !dbg !14031
  %add.ptr35 = getelementptr inbounds i32, i32* %63, i64 %idx.ext34, !dbg !14031
  %65 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14032
  %origColor36 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %65, i32 0, i32 7, !dbg !14033
  %uint_pt = bitcast %union.pixelPointer* %origColor36 to i32**, !dbg !14034
  store i32* %add.ptr35, i32** %uint_pt, align 8, !dbg !14035
  %66 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14036
  %newColor37 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %66, i32 0, i32 8, !dbg !14037
  %uint = bitcast %union.pixelStore* %newColor37 to i32*, !dbg !14038
  store i32 0, i32* %uint, align 8, !dbg !14039
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %67 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !14040
  %brush = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %67, i32 0, i32 7, !dbg !14042
  %68 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !14042
  %mtex = getelementptr inbounds %struct.Brush, %struct.Brush* %68, i32 0, i32 3, !dbg !14043
  %brush_map_mode = getelementptr inbounds %struct.MTex, %struct.MTex* %mtex, i32 0, i32 20, !dbg !14044
  %69 = load i8, i8* %brush_map_mode, align 4, !dbg !14044
  %conv38 = zext i8 %69 to i32, !dbg !14040
  %cmp39 = icmp eq i32 %conv38, 2, !dbg !14045
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !14046

if.then41:                                        ; preds = %if.end
  %70 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14047
  %worldCoSS = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %70, i32 0, i32 1, !dbg !14049
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %worldCoSS, i64 0, i64 0, !dbg !14047
  %71 = load float*, float** %world_spaceCo.addr, align 8, !dbg !14050
  call void @copy_v3_v3(float* %arraydecay42, float* %71), !dbg !14051
  br label %if.end43, !dbg !14052

if.end43:                                         ; preds = %if.then41, %if.end
  %72 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14053
  %projCoSS = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %72, i32 0, i32 0, !dbg !14054
  %arraydecay44 = getelementptr inbounds [2 x float], [2 x float]* %projCoSS, i64 0, i64 0, !dbg !14053
  %73 = load float*, float** %pixelScreenCo.addr, align 8, !dbg !14055
  call void @copy_v2_v2(float* %arraydecay44, float* %73), !dbg !14056
  %74 = load i32, i32* %x_px.addr, align 4, !dbg !14057
  %conv45 = trunc i32 %74 to i16, !dbg !14057
  %75 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14058
  %x_px46 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %75, i32 0, i32 4, !dbg !14059
  store i16 %conv45, i16* %x_px46, align 2, !dbg !14060
  %76 = load i32, i32* %y_px.addr, align 4, !dbg !14061
  %conv47 = trunc i32 %76 to i16, !dbg !14061
  %77 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14062
  %y_px48 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %77, i32 0, i32 5, !dbg !14063
  store i16 %conv47, i16* %y_px48, align 4, !dbg !14064
  %78 = load float, float* %mask.addr, align 4, !dbg !14065
  %mul49 = fmul float %78, 6.553500e+04, !dbg !14066
  %conv50 = fptoui float %mul49 to i16, !dbg !14067
  %79 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14068
  %mask51 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %79, i32 0, i32 3, !dbg !14069
  store i16 %conv50, i16* %mask51, align 8, !dbg !14070
  %80 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !14071
  %do_masking = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %80, i32 0, i32 62, !dbg !14073
  %81 = load i8, i8* %do_masking, align 2, !dbg !14073
  %tobool52 = icmp ne i8 %81, 0, !dbg !14071
  br i1 %tobool52, label %if.then53, label %if.else58, !dbg !14074

if.then53:                                        ; preds = %if.end43
  %82 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projima, align 8, !dbg !14075
  %maskRect = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %82, i32 0, i32 4, !dbg !14076
  %83 = load i16**, i16*** %maskRect, align 8, !dbg !14076
  %84 = load volatile i32, i32* %tile_index, align 4, !dbg !14077
  %idxprom54 = sext i32 %84 to i64, !dbg !14075
  %arrayidx55 = getelementptr inbounds i16*, i16** %83, i64 %idxprom54, !dbg !14075
  %85 = load i16*, i16** %arrayidx55, align 8, !dbg !14075
  %86 = load i32, i32* %tile_offset, align 4, !dbg !14078
  %idx.ext56 = sext i32 %86 to i64, !dbg !14079
  %add.ptr57 = getelementptr inbounds i16, i16* %85, i64 %idx.ext56, !dbg !14079
  %87 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14080
  %mask_accum = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %87, i32 0, i32 2, !dbg !14081
  store i16* %add.ptr57, i16** %mask_accum, align 8, !dbg !14082
  br label %if.end60, !dbg !14080

if.else58:                                        ; preds = %if.end43
  %88 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14083
  %mask_accum59 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %88, i32 0, i32 2, !dbg !14084
  store i16* null, i16** %mask_accum59, align 8, !dbg !14085
  br label %if.end60

if.end60:                                         ; preds = %if.else58, %if.then53
  %89 = load i32, i32* %x_px.addr, align 4, !dbg !14086
  %conv61 = sitofp i32 %89 to float, !dbg !14087
  %90 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !14088
  %x62 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %90, i32 0, i32 2, !dbg !14089
  %91 = load i32, i32* %x62, align 8, !dbg !14089
  %conv63 = sitofp i32 %91 to float, !dbg !14090
  %div = fdiv float %conv61, %conv63, !dbg !14091
  %mul64 = fmul float %div, 8.000000e+00, !dbg !14092
  %conv65 = fptosi float %mul64 to i32, !dbg !14093
  %92 = load i32, i32* %y_px.addr, align 4, !dbg !14094
  %conv66 = sitofp i32 %92 to float, !dbg !14095
  %93 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !14096
  %y67 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %93, i32 0, i32 3, !dbg !14097
  %94 = load i32, i32* %y67, align 4, !dbg !14097
  %conv68 = sitofp i32 %94 to float, !dbg !14098
  %div69 = fdiv float %conv66, %conv68, !dbg !14099
  %mul70 = fmul float %div69, 8.000000e+00, !dbg !14100
  %conv71 = fptosi float %mul70 to i32, !dbg !14101
  %mul72 = mul nsw i32 %conv71, 8, !dbg !14102
  %add73 = add nsw i32 %conv65, %mul72, !dbg !14103
  %conv74 = trunc i32 %add73 to i8, !dbg !14104
  %95 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14105
  %bb_cell_index = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %95, i32 0, i32 11, !dbg !14106
  store i8 %conv74, i8* %bb_cell_index, align 2, !dbg !14107
  %96 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !14108
  %tool = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %96, i32 0, i32 8, !dbg !14110
  %97 = load i16, i16* %tool, align 8, !dbg !14110
  %conv75 = sext i16 %97 to i32, !dbg !14108
  %cmp76 = icmp eq i32 %conv75, 3, !dbg !14111
  br i1 %cmp76, label %if.then78, label %if.end174, !dbg !14112

if.then78:                                        ; preds = %if.end60
  %98 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !14113
  %dm_mtface_clone = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %98, i32 0, i32 21, !dbg !14116
  %99 = load %struct.MTFace**, %struct.MTFace*** %dm_mtface_clone, align 8, !dbg !14116
  %tobool79 = icmp ne %struct.MTFace** %99, null, !dbg !14113
  br i1 %tobool79, label %if.then80, label %if.else141, !dbg !14117

if.then80:                                        ; preds = %if.then78
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf_other, metadata !14118, metadata !DIExpression()), !dbg !14120
  call void @llvm.dbg.declare(metadata %struct.Image** %other_tpage, metadata !14121, metadata !DIExpression()), !dbg !14122
  %100 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !14123
  %101 = load i32, i32* %face_index.addr, align 4, !dbg !14124
  %call81 = call %struct.Image* @project_paint_face_clone_image(%struct.ProjPaintState* %100, i32 %101), !dbg !14125
  store %struct.Image* %call81, %struct.Image** %other_tpage, align 8, !dbg !14122
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf_other, metadata !14126, metadata !DIExpression()), !dbg !14127
  %102 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !14128
  %dm_mtface_clone82 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %102, i32 0, i32 21, !dbg !14129
  %103 = load %struct.MTFace**, %struct.MTFace*** %dm_mtface_clone82, align 8, !dbg !14129
  %104 = load i32, i32* %face_index.addr, align 4, !dbg !14130
  %idxprom83 = sext i32 %104 to i64, !dbg !14128
  %arrayidx84 = getelementptr inbounds %struct.MTFace*, %struct.MTFace** %103, i64 %idxprom83, !dbg !14128
  %105 = load %struct.MTFace*, %struct.MTFace** %arrayidx84, align 8, !dbg !14128
  store %struct.MTFace* %105, %struct.MTFace** %tf_other, align 8, !dbg !14127
  %106 = load %struct.Image*, %struct.Image** %other_tpage, align 8, !dbg !14131
  %tobool85 = icmp ne %struct.Image* %106, null, !dbg !14131
  br i1 %tobool85, label %land.lhs.true, label %if.else128, !dbg !14133

land.lhs.true:                                    ; preds = %if.then80
  %107 = load %struct.Image*, %struct.Image** %other_tpage, align 8, !dbg !14134
  %call86 = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %107, %struct.ImageUser* null, i8** null), !dbg !14135
  store %struct.ImBuf* %call86, %struct.ImBuf** %ibuf_other, align 8, !dbg !14136
  %tobool87 = icmp ne %struct.ImBuf* %call86, null, !dbg !14136
  br i1 %tobool87, label %if.then88, label %if.else128, !dbg !14137

if.then88:                                        ; preds = %land.lhs.true
  %108 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !14138
  %rect_float89 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %108, i32 0, i32 9, !dbg !14141
  %109 = load float*, float** %rect_float89, align 8, !dbg !14141
  %tobool90 = icmp ne float* %109, null, !dbg !14138
  br i1 %tobool90, label %if.then91, label %if.else106, !dbg !14142

if.then91:                                        ; preds = %if.then88
  %110 = load %struct.ImBuf*, %struct.ImBuf** %ibuf_other, align 8, !dbg !14143
  %rect_float92 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %110, i32 0, i32 9, !dbg !14146
  %111 = load float*, float** %rect_float92, align 8, !dbg !14146
  %tobool93 = icmp ne float* %111, null, !dbg !14143
  br i1 %tobool93, label %if.then94, label %if.else97, !dbg !14147

if.then94:                                        ; preds = %if.then91
  %112 = load %struct.MTFace*, %struct.MTFace** %tf_other, align 8, !dbg !14148
  %113 = load %struct.ImBuf*, %struct.ImBuf** %ibuf_other, align 8, !dbg !14150
  %114 = load float*, float** %w.addr, align 8, !dbg !14151
  %115 = load i32, i32* %side.addr, align 4, !dbg !14152
  %116 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14153
  %117 = bitcast %struct.ProjPixel* %116 to %struct.ProjPixelClone*, !dbg !14154
  %clonepx = getelementptr inbounds %struct.ProjPixelClone, %struct.ProjPixelClone* %117, i32 0, i32 1, !dbg !14154
  %f95 = bitcast %union.pixelStore* %clonepx to [4 x float]*, !dbg !14155
  %arraydecay96 = getelementptr inbounds [4 x float], [4 x float]* %f95, i64 0, i64 0, !dbg !14156
  call void @project_face_pixel(%struct.MTFace* %112, %struct.ImBuf* %113, float* %114, i32 %115, i8* null, float* %arraydecay96), !dbg !14157
  br label %if.end105, !dbg !14158

if.else97:                                        ; preds = %if.then91
  call void @llvm.dbg.declare(metadata [4 x i8]* %rgba_ub, metadata !14159, metadata !DIExpression()), !dbg !14161
  call void @llvm.dbg.declare(metadata [4 x float]* %rgba, metadata !14162, metadata !DIExpression()), !dbg !14163
  %118 = load %struct.MTFace*, %struct.MTFace** %tf_other, align 8, !dbg !14164
  %119 = load %struct.ImBuf*, %struct.ImBuf** %ibuf_other, align 8, !dbg !14165
  %120 = load float*, float** %w.addr, align 8, !dbg !14166
  %121 = load i32, i32* %side.addr, align 4, !dbg !14167
  %arraydecay98 = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_ub, i64 0, i64 0, !dbg !14168
  call void @project_face_pixel(%struct.MTFace* %118, %struct.ImBuf* %119, float* %120, i32 %121, i8* %arraydecay98, float* null), !dbg !14169
  %arraydecay99 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !14170
  %arraydecay100 = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_ub, i64 0, i64 0, !dbg !14171
  call void @srgb_to_linearrgb_uchar4(float* %arraydecay99, i8* %arraydecay100), !dbg !14172
  %122 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14173
  %123 = bitcast %struct.ProjPixel* %122 to %struct.ProjPixelClone*, !dbg !14174
  %clonepx101 = getelementptr inbounds %struct.ProjPixelClone, %struct.ProjPixelClone* %123, i32 0, i32 1, !dbg !14174
  %f102 = bitcast %union.pixelStore* %clonepx101 to [4 x float]*, !dbg !14175
  %arraydecay103 = getelementptr inbounds [4 x float], [4 x float]* %f102, i64 0, i64 0, !dbg !14176
  %arraydecay104 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !14177
  call void @straight_to_premul_v4_v4(float* %arraydecay103, float* %arraydecay104), !dbg !14178
  br label %if.end105

if.end105:                                        ; preds = %if.else97, %if.then94
  br label %if.end127, !dbg !14179

if.else106:                                       ; preds = %if.then88
  %124 = load %struct.ImBuf*, %struct.ImBuf** %ibuf_other, align 8, !dbg !14180
  %rect_float107 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %124, i32 0, i32 9, !dbg !14183
  %125 = load float*, float** %rect_float107, align 8, !dbg !14183
  %tobool108 = icmp ne float* %125, null, !dbg !14180
  br i1 %tobool108, label %if.then109, label %if.else122, !dbg !14184

if.then109:                                       ; preds = %if.else106
  call void @llvm.dbg.declare(metadata [4 x float]* %rgba110, metadata !14185, metadata !DIExpression()), !dbg !14187
  %126 = load %struct.MTFace*, %struct.MTFace** %tf_other, align 8, !dbg !14188
  %127 = load %struct.ImBuf*, %struct.ImBuf** %ibuf_other, align 8, !dbg !14189
  %128 = load float*, float** %w.addr, align 8, !dbg !14190
  %129 = load i32, i32* %side.addr, align 4, !dbg !14191
  %arraydecay111 = getelementptr inbounds [4 x float], [4 x float]* %rgba110, i64 0, i64 0, !dbg !14192
  call void @project_face_pixel(%struct.MTFace* %126, %struct.ImBuf* %127, float* %128, i32 %129, i8* null, float* %arraydecay111), !dbg !14193
  %arraydecay112 = getelementptr inbounds [4 x float], [4 x float]* %rgba110, i64 0, i64 0, !dbg !14194
  call void @premul_to_straight_v4(float* %arraydecay112), !dbg !14195
  %130 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14196
  %131 = bitcast %struct.ProjPixel* %130 to %struct.ProjPixelClone*, !dbg !14197
  %clonepx113 = getelementptr inbounds %struct.ProjPixelClone, %struct.ProjPixelClone* %131, i32 0, i32 1, !dbg !14197
  %ch = bitcast %union.pixelStore* %clonepx113 to [4 x i8]*, !dbg !14198
  %arraydecay114 = getelementptr inbounds [4 x i8], [4 x i8]* %ch, i64 0, i64 0, !dbg !14199
  %arraydecay115 = getelementptr inbounds [4 x float], [4 x float]* %rgba110, i64 0, i64 0, !dbg !14200
  call void @linearrgb_to_srgb_uchar3(i8* %arraydecay114, float* %arraydecay115), !dbg !14201
  %arrayidx116 = getelementptr inbounds [4 x float], [4 x float]* %rgba110, i64 0, i64 3, !dbg !14202
  %132 = load float, float* %arrayidx116, align 4, !dbg !14202
  %mul117 = fmul float %132, 2.550000e+02, !dbg !14203
  %conv118 = fptoui float %mul117 to i8, !dbg !14202
  %133 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14204
  %134 = bitcast %struct.ProjPixel* %133 to %struct.ProjPixelClone*, !dbg !14205
  %clonepx119 = getelementptr inbounds %struct.ProjPixelClone, %struct.ProjPixelClone* %134, i32 0, i32 1, !dbg !14205
  %ch120 = bitcast %union.pixelStore* %clonepx119 to [4 x i8]*, !dbg !14206
  %arrayidx121 = getelementptr inbounds [4 x i8], [4 x i8]* %ch120, i64 0, i64 3, !dbg !14207
  store i8 %conv118, i8* %arrayidx121, align 1, !dbg !14208
  br label %if.end126, !dbg !14209

if.else122:                                       ; preds = %if.else106
  %135 = load %struct.MTFace*, %struct.MTFace** %tf_other, align 8, !dbg !14210
  %136 = load %struct.ImBuf*, %struct.ImBuf** %ibuf_other, align 8, !dbg !14212
  %137 = load float*, float** %w.addr, align 8, !dbg !14213
  %138 = load i32, i32* %side.addr, align 4, !dbg !14214
  %139 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14215
  %140 = bitcast %struct.ProjPixel* %139 to %struct.ProjPixelClone*, !dbg !14216
  %clonepx123 = getelementptr inbounds %struct.ProjPixelClone, %struct.ProjPixelClone* %140, i32 0, i32 1, !dbg !14216
  %ch124 = bitcast %union.pixelStore* %clonepx123 to [4 x i8]*, !dbg !14217
  %arraydecay125 = getelementptr inbounds [4 x i8], [4 x i8]* %ch124, i64 0, i64 0, !dbg !14218
  call void @project_face_pixel(%struct.MTFace* %135, %struct.ImBuf* %136, float* %137, i32 %138, i8* %arraydecay125, float* null), !dbg !14219
  br label %if.end126

if.end126:                                        ; preds = %if.else122, %if.then109
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.end105
  %141 = load %struct.Image*, %struct.Image** %other_tpage, align 8, !dbg !14220
  %142 = load %struct.ImBuf*, %struct.ImBuf** %ibuf_other, align 8, !dbg !14221
  call void @BKE_image_release_ibuf(%struct.Image* %141, %struct.ImBuf* %142, i8* null), !dbg !14222
  br label %if.end140, !dbg !14223

if.else128:                                       ; preds = %land.lhs.true, %if.then80
  %143 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !14224
  %rect_float129 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %143, i32 0, i32 9, !dbg !14227
  %144 = load float*, float** %rect_float129, align 8, !dbg !14227
  %tobool130 = icmp ne float* %144, null, !dbg !14224
  br i1 %tobool130, label %if.then131, label %if.else135, !dbg !14228

if.then131:                                       ; preds = %if.else128
  %145 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14229
  %146 = bitcast %struct.ProjPixel* %145 to %struct.ProjPixelClone*, !dbg !14231
  %clonepx132 = getelementptr inbounds %struct.ProjPixelClone, %struct.ProjPixelClone* %146, i32 0, i32 1, !dbg !14231
  %f133 = bitcast %union.pixelStore* %clonepx132 to [4 x float]*, !dbg !14232
  %arrayidx134 = getelementptr inbounds [4 x float], [4 x float]* %f133, i64 0, i64 3, !dbg !14233
  store float 0.000000e+00, float* %arrayidx134, align 4, !dbg !14234
  br label %if.end139, !dbg !14235

if.else135:                                       ; preds = %if.else128
  %147 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14236
  %148 = bitcast %struct.ProjPixel* %147 to %struct.ProjPixelClone*, !dbg !14238
  %clonepx136 = getelementptr inbounds %struct.ProjPixelClone, %struct.ProjPixelClone* %148, i32 0, i32 1, !dbg !14238
  %ch137 = bitcast %union.pixelStore* %clonepx136 to [4 x i8]*, !dbg !14239
  %arrayidx138 = getelementptr inbounds [4 x i8], [4 x i8]* %ch137, i64 0, i64 3, !dbg !14240
  store i8 0, i8* %arrayidx138, align 1, !dbg !14241
  br label %if.end139

if.end139:                                        ; preds = %if.else135, %if.then131
  br label %if.end140

if.end140:                                        ; preds = %if.end139, %if.end127
  br label %if.end173, !dbg !14242

if.else141:                                       ; preds = %if.then78
  call void @llvm.dbg.declare(metadata [2 x float]* %co, metadata !14243, metadata !DIExpression()), !dbg !14245
  %arraydecay142 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !14246
  %149 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14247
  %projCoSS143 = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %149, i32 0, i32 0, !dbg !14248
  %arraydecay144 = getelementptr inbounds [2 x float], [2 x float]* %projCoSS143, i64 0, i64 0, !dbg !14247
  %150 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !14249
  %cloneOffset = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %150, i32 0, i32 66, !dbg !14250
  %arraydecay145 = getelementptr inbounds [2 x float], [2 x float]* %cloneOffset, i64 0, i64 0, !dbg !14249
  call void @sub_v2_v2v2(float* %arraydecay142, float* %arraydecay144, float* %arraydecay145), !dbg !14251
  %151 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !14252
  %rect_float146 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %151, i32 0, i32 9, !dbg !14254
  %152 = load float*, float** %rect_float146, align 8, !dbg !14254
  %tobool147 = icmp ne float* %152, null, !dbg !14252
  br i1 %tobool147, label %if.then148, label %if.else160, !dbg !14255

if.then148:                                       ; preds = %if.else141
  %153 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !14256
  %arraydecay149 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !14259
  %154 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14260
  %155 = bitcast %struct.ProjPixel* %154 to %struct.ProjPixelClone*, !dbg !14261
  %clonepx150 = getelementptr inbounds %struct.ProjPixelClone, %struct.ProjPixelClone* %155, i32 0, i32 1, !dbg !14261
  %f151 = bitcast %union.pixelStore* %clonepx150 to [4 x float]*, !dbg !14262
  %arraydecay152 = getelementptr inbounds [4 x float], [4 x float]* %f151, i64 0, i64 0, !dbg !14263
  %call153 = call zeroext i8 @project_paint_PickColor(%struct.ProjPaintState* %153, float* %arraydecay149, float* %arraydecay152, i8* null, i8 zeroext 1), !dbg !14264
  %tobool154 = icmp ne i8 %call153, 0, !dbg !14264
  br i1 %tobool154, label %if.end159, label %if.then155, !dbg !14265

if.then155:                                       ; preds = %if.then148
  %156 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14266
  %157 = bitcast %struct.ProjPixel* %156 to %struct.ProjPixelClone*, !dbg !14268
  %clonepx156 = getelementptr inbounds %struct.ProjPixelClone, %struct.ProjPixelClone* %157, i32 0, i32 1, !dbg !14268
  %f157 = bitcast %union.pixelStore* %clonepx156 to [4 x float]*, !dbg !14269
  %arrayidx158 = getelementptr inbounds [4 x float], [4 x float]* %f157, i64 0, i64 3, !dbg !14270
  store float 0.000000e+00, float* %arrayidx158, align 4, !dbg !14271
  br label %if.end159, !dbg !14272

if.end159:                                        ; preds = %if.then155, %if.then148
  br label %if.end172, !dbg !14273

if.else160:                                       ; preds = %if.else141
  %158 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !14274
  %arraydecay161 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !14277
  %159 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14278
  %160 = bitcast %struct.ProjPixel* %159 to %struct.ProjPixelClone*, !dbg !14279
  %clonepx162 = getelementptr inbounds %struct.ProjPixelClone, %struct.ProjPixelClone* %160, i32 0, i32 1, !dbg !14279
  %ch163 = bitcast %union.pixelStore* %clonepx162 to [4 x i8]*, !dbg !14280
  %arraydecay164 = getelementptr inbounds [4 x i8], [4 x i8]* %ch163, i64 0, i64 0, !dbg !14281
  %call165 = call zeroext i8 @project_paint_PickColor(%struct.ProjPaintState* %158, float* %arraydecay161, float* null, i8* %arraydecay164, i8 zeroext 1), !dbg !14282
  %tobool166 = icmp ne i8 %call165, 0, !dbg !14282
  br i1 %tobool166, label %if.end171, label %if.then167, !dbg !14283

if.then167:                                       ; preds = %if.else160
  %161 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14284
  %162 = bitcast %struct.ProjPixel* %161 to %struct.ProjPixelClone*, !dbg !14286
  %clonepx168 = getelementptr inbounds %struct.ProjPixelClone, %struct.ProjPixelClone* %162, i32 0, i32 1, !dbg !14286
  %ch169 = bitcast %union.pixelStore* %clonepx168 to [4 x i8]*, !dbg !14287
  %arrayidx170 = getelementptr inbounds [4 x i8], [4 x i8]* %ch169, i64 0, i64 3, !dbg !14288
  store i8 0, i8* %arrayidx170, align 1, !dbg !14289
  br label %if.end171, !dbg !14290

if.end171:                                        ; preds = %if.then167, %if.else160
  br label %if.end172

if.end172:                                        ; preds = %if.end171, %if.end159
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %if.end140
  br label %if.end174, !dbg !14291

if.end174:                                        ; preds = %if.end173, %if.end60
  %163 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projima, align 8, !dbg !14292
  %164 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !14293
  %projImages = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %164, i32 0, i32 38, !dbg !14294
  %165 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %projImages, align 8, !dbg !14294
  %sub.ptr.lhs.cast = ptrtoint %struct.ProjPaintImage* %163 to i64, !dbg !14295
  %sub.ptr.rhs.cast = ptrtoint %struct.ProjPaintImage* %165 to i64, !dbg !14295
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !14295
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 56, !dbg !14295
  %conv175 = trunc i64 %sub.ptr.div to i16, !dbg !14292
  %166 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14296
  %image_index = getelementptr inbounds %struct.ProjPixel, %struct.ProjPixel* %166, i32 0, i32 10, !dbg !14297
  store i16 %conv175, i16* %image_index, align 8, !dbg !14298
  %167 = load %struct.ProjPixel*, %struct.ProjPixel** %projPixel, align 8, !dbg !14299
  ret %struct.ProjPixel* %167, !dbg !14300
}

; Function Attrs: noinline nounwind uwtable
define internal void @project_face_seams_init(%struct.ProjPaintState* %ps, i32 %face_index, i32 %is_quad) #0 !dbg !14301 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %face_index.addr = alloca i32, align 4
  %is_quad.addr = alloca i32, align 4
  %other_face = alloca i32, align 4
  %other_fidx = alloca i32, align 4
  %fidx1 = alloca i32, align 4
  %fidx2 = alloca i32, align 4
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !14304, metadata !DIExpression()), !dbg !14305
  store i32 %face_index, i32* %face_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_index.addr, metadata !14306, metadata !DIExpression()), !dbg !14307
  store i32 %is_quad, i32* %is_quad.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_quad.addr, metadata !14308, metadata !DIExpression()), !dbg !14309
  call void @llvm.dbg.declare(metadata i32* %other_face, metadata !14310, metadata !DIExpression()), !dbg !14311
  call void @llvm.dbg.declare(metadata i32* %other_fidx, metadata !14312, metadata !DIExpression()), !dbg !14313
  call void @llvm.dbg.declare(metadata i32* %fidx1, metadata !14314, metadata !DIExpression()), !dbg !14315
  %0 = load i32, i32* %is_quad.addr, align 4, !dbg !14316
  %tobool = icmp ne i32 %0, 0, !dbg !14316
  %1 = zext i1 %tobool to i64, !dbg !14316
  %cond = select i1 %tobool, i32 3, i32 2, !dbg !14316
  store i32 %cond, i32* %fidx1, align 4, !dbg !14315
  call void @llvm.dbg.declare(metadata i32* %fidx2, metadata !14317, metadata !DIExpression()), !dbg !14318
  store i32 0, i32* %fidx2, align 4, !dbg !14318
  %2 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !14319
  %faceWindingFlags = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %2, i32 0, i32 32, !dbg !14321
  %3 = load i8*, i8** %faceWindingFlags, align 8, !dbg !14321
  %4 = load i32, i32* %face_index.addr, align 4, !dbg !14322
  %idxprom = sext i32 %4 to i64, !dbg !14319
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !14319
  %5 = load i8, i8* %arrayidx, align 1, !dbg !14319
  %conv = zext i8 %5 to i32, !dbg !14319
  %and = and i32 %conv, 1, !dbg !14323
  %cmp = icmp eq i32 %and, 0, !dbg !14324
  br i1 %cmp, label %if.then, label %if.end, !dbg !14325

if.then:                                          ; preds = %entry
  %6 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !14326
  %7 = load i32, i32* %face_index.addr, align 4, !dbg !14327
  call void @project_face_winding_init(%struct.ProjPaintState* %6, i32 %7), !dbg !14328
  br label %if.end, !dbg !14328

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !14329

do.body:                                          ; preds = %do.cond, %if.end
  %8 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !14330
  %faceSeamFlags = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %8, i32 0, i32 31, !dbg !14333
  %9 = load i8*, i8** %faceSeamFlags, align 8, !dbg !14333
  %10 = load i32, i32* %face_index.addr, align 4, !dbg !14334
  %idxprom2 = sext i32 %10 to i64, !dbg !14330
  %arrayidx3 = getelementptr inbounds i8, i8* %9, i64 %idxprom2, !dbg !14330
  %11 = load i8, i8* %arrayidx3, align 1, !dbg !14330
  %conv4 = zext i8 %11 to i32, !dbg !14330
  %12 = load i32, i32* %fidx1, align 4, !dbg !14335
  %shl = shl i32 1, %12, !dbg !14336
  %13 = load i32, i32* %fidx1, align 4, !dbg !14337
  %shl5 = shl i32 16, %13, !dbg !14338
  %or = or i32 %shl, %shl5, !dbg !14339
  %and6 = and i32 %conv4, %or, !dbg !14340
  %cmp7 = icmp eq i32 %and6, 0, !dbg !14341
  br i1 %cmp7, label %if.then9, label %if.end49, !dbg !14342

if.then9:                                         ; preds = %do.body
  %14 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !14343
  %15 = load i32, i32* %face_index.addr, align 4, !dbg !14346
  %16 = load i32, i32* %fidx1, align 4, !dbg !14347
  %17 = load i32, i32* %fidx2, align 4, !dbg !14348
  %call = call zeroext i8 @check_seam(%struct.ProjPaintState* %14, i32 %15, i32 %16, i32 %17, i32* %other_face, i32* %other_fidx), !dbg !14349
  %tobool10 = icmp ne i8 %call, 0, !dbg !14349
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !14350

if.then11:                                        ; preds = %if.then9
  %18 = load i32, i32* %fidx1, align 4, !dbg !14351
  %shl12 = shl i32 1, %18, !dbg !14353
  %19 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !14354
  %faceSeamFlags13 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %19, i32 0, i32 31, !dbg !14355
  %20 = load i8*, i8** %faceSeamFlags13, align 8, !dbg !14355
  %21 = load i32, i32* %face_index.addr, align 4, !dbg !14356
  %idxprom14 = sext i32 %21 to i64, !dbg !14354
  %arrayidx15 = getelementptr inbounds i8, i8* %20, i64 %idxprom14, !dbg !14354
  %22 = load i8, i8* %arrayidx15, align 1, !dbg !14357
  %conv16 = zext i8 %22 to i32, !dbg !14357
  %or17 = or i32 %conv16, %shl12, !dbg !14357
  %conv18 = trunc i32 %or17 to i8, !dbg !14357
  store i8 %conv18, i8* %arrayidx15, align 1, !dbg !14357
  %23 = load i32, i32* %other_face, align 4, !dbg !14358
  %cmp19 = icmp ne i32 %23, -1, !dbg !14360
  br i1 %cmp19, label %if.then21, label %if.end29, !dbg !14361

if.then21:                                        ; preds = %if.then11
  %24 = load i32, i32* %other_fidx, align 4, !dbg !14362
  %shl22 = shl i32 1, %24, !dbg !14363
  %25 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !14364
  %faceSeamFlags23 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %25, i32 0, i32 31, !dbg !14365
  %26 = load i8*, i8** %faceSeamFlags23, align 8, !dbg !14365
  %27 = load i32, i32* %other_face, align 4, !dbg !14366
  %idxprom24 = sext i32 %27 to i64, !dbg !14364
  %arrayidx25 = getelementptr inbounds i8, i8* %26, i64 %idxprom24, !dbg !14364
  %28 = load i8, i8* %arrayidx25, align 1, !dbg !14367
  %conv26 = zext i8 %28 to i32, !dbg !14367
  %or27 = or i32 %conv26, %shl22, !dbg !14367
  %conv28 = trunc i32 %or27 to i8, !dbg !14367
  store i8 %conv28, i8* %arrayidx25, align 1, !dbg !14367
  br label %if.end29, !dbg !14364

if.end29:                                         ; preds = %if.then21, %if.then11
  br label %if.end48, !dbg !14368

if.else:                                          ; preds = %if.then9
  %29 = load i32, i32* %fidx1, align 4, !dbg !14369
  %shl30 = shl i32 16, %29, !dbg !14371
  %30 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !14372
  %faceSeamFlags31 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %30, i32 0, i32 31, !dbg !14373
  %31 = load i8*, i8** %faceSeamFlags31, align 8, !dbg !14373
  %32 = load i32, i32* %face_index.addr, align 4, !dbg !14374
  %idxprom32 = sext i32 %32 to i64, !dbg !14372
  %arrayidx33 = getelementptr inbounds i8, i8* %31, i64 %idxprom32, !dbg !14372
  %33 = load i8, i8* %arrayidx33, align 1, !dbg !14375
  %conv34 = zext i8 %33 to i32, !dbg !14375
  %or35 = or i32 %conv34, %shl30, !dbg !14375
  %conv36 = trunc i32 %or35 to i8, !dbg !14375
  store i8 %conv36, i8* %arrayidx33, align 1, !dbg !14375
  %34 = load i32, i32* %other_face, align 4, !dbg !14376
  %cmp37 = icmp ne i32 %34, -1, !dbg !14378
  br i1 %cmp37, label %if.then39, label %if.end47, !dbg !14379

if.then39:                                        ; preds = %if.else
  %35 = load i32, i32* %other_fidx, align 4, !dbg !14380
  %shl40 = shl i32 16, %35, !dbg !14381
  %36 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !14382
  %faceSeamFlags41 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %36, i32 0, i32 31, !dbg !14383
  %37 = load i8*, i8** %faceSeamFlags41, align 8, !dbg !14383
  %38 = load i32, i32* %other_face, align 4, !dbg !14384
  %idxprom42 = sext i32 %38 to i64, !dbg !14382
  %arrayidx43 = getelementptr inbounds i8, i8* %37, i64 %idxprom42, !dbg !14382
  %39 = load i8, i8* %arrayidx43, align 1, !dbg !14385
  %conv44 = zext i8 %39 to i32, !dbg !14385
  %or45 = or i32 %conv44, %shl40, !dbg !14385
  %conv46 = trunc i32 %or45 to i8, !dbg !14385
  store i8 %conv46, i8* %arrayidx43, align 1, !dbg !14385
  br label %if.end47, !dbg !14382

if.end47:                                         ; preds = %if.then39, %if.else
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.end29
  br label %if.end49, !dbg !14386

if.end49:                                         ; preds = %if.end48, %do.body
  %40 = load i32, i32* %fidx1, align 4, !dbg !14387
  store i32 %40, i32* %fidx2, align 4, !dbg !14388
  br label %do.cond, !dbg !14389

do.cond:                                          ; preds = %if.end49
  %41 = load i32, i32* %fidx1, align 4, !dbg !14390
  %dec = add nsw i32 %41, -1, !dbg !14390
  store i32 %dec, i32* %fidx1, align 4, !dbg !14390
  %tobool50 = icmp ne i32 %41, 0, !dbg !14389
  br i1 %tobool50, label %do.body, label %do.end, !dbg !14389, !llvm.loop !14391

do.end:                                           ; preds = %do.cond
  ret void, !dbg !14393
}

; Function Attrs: noinline nounwind uwtable
define internal void @uv_image_outset([2 x float]* %orig_uv, [2 x float]* %outset_uv, float %scaler, i32 %ibuf_x, i32 %ibuf_y, i8 zeroext %is_quad) #0 !dbg !14394 {
entry:
  %orig_uv.addr = alloca [2 x float]*, align 8
  %outset_uv.addr = alloca [2 x float]*, align 8
  %scaler.addr = alloca float, align 4
  %ibuf_x.addr = alloca i32, align 4
  %ibuf_y.addr = alloca i32, align 4
  %is_quad.addr = alloca i8, align 1
  %a1 = alloca float, align 4
  %a2 = alloca float, align 4
  %a3 = alloca float, align 4
  %a4 = alloca float, align 4
  %puv = alloca [4 x [2 x float]], align 16
  %no1 = alloca [2 x float], align 4
  %no2 = alloca [2 x float], align 4
  %no3 = alloca [2 x float], align 4
  %no4 = alloca [2 x float], align 4
  %dir1 = alloca [2 x float], align 4
  %dir2 = alloca [2 x float], align 4
  %dir3 = alloca [2 x float], align 4
  %dir4 = alloca [2 x float], align 4
  %ibuf_inv = alloca [2 x float], align 4
  store [2 x float]* %orig_uv, [2 x float]** %orig_uv.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %orig_uv.addr, metadata !14397, metadata !DIExpression()), !dbg !14398
  store [2 x float]* %outset_uv, [2 x float]** %outset_uv.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %outset_uv.addr, metadata !14399, metadata !DIExpression()), !dbg !14400
  store float %scaler, float* %scaler.addr, align 4
  call void @llvm.dbg.declare(metadata float* %scaler.addr, metadata !14401, metadata !DIExpression()), !dbg !14402
  store i32 %ibuf_x, i32* %ibuf_x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ibuf_x.addr, metadata !14403, metadata !DIExpression()), !dbg !14404
  store i32 %ibuf_y, i32* %ibuf_y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ibuf_y.addr, metadata !14405, metadata !DIExpression()), !dbg !14406
  store i8 %is_quad, i8* %is_quad.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_quad.addr, metadata !14407, metadata !DIExpression()), !dbg !14408
  call void @llvm.dbg.declare(metadata float* %a1, metadata !14409, metadata !DIExpression()), !dbg !14410
  call void @llvm.dbg.declare(metadata float* %a2, metadata !14411, metadata !DIExpression()), !dbg !14412
  call void @llvm.dbg.declare(metadata float* %a3, metadata !14413, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.declare(metadata float* %a4, metadata !14415, metadata !DIExpression()), !dbg !14416
  store float 0.000000e+00, float* %a4, align 4, !dbg !14416
  call void @llvm.dbg.declare(metadata [4 x [2 x float]]* %puv, metadata !14417, metadata !DIExpression()), !dbg !14418
  call void @llvm.dbg.declare(metadata [2 x float]* %no1, metadata !14419, metadata !DIExpression()), !dbg !14420
  call void @llvm.dbg.declare(metadata [2 x float]* %no2, metadata !14421, metadata !DIExpression()), !dbg !14422
  call void @llvm.dbg.declare(metadata [2 x float]* %no3, metadata !14423, metadata !DIExpression()), !dbg !14424
  call void @llvm.dbg.declare(metadata [2 x float]* %no4, metadata !14425, metadata !DIExpression()), !dbg !14426
  call void @llvm.dbg.declare(metadata [2 x float]* %dir1, metadata !14427, metadata !DIExpression()), !dbg !14428
  call void @llvm.dbg.declare(metadata [2 x float]* %dir2, metadata !14429, metadata !DIExpression()), !dbg !14430
  call void @llvm.dbg.declare(metadata [2 x float]* %dir3, metadata !14431, metadata !DIExpression()), !dbg !14432
  call void @llvm.dbg.declare(metadata [2 x float]* %dir4, metadata !14433, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.declare(metadata [2 x float]* %ibuf_inv, metadata !14435, metadata !DIExpression()), !dbg !14436
  %0 = load i32, i32* %ibuf_x.addr, align 4, !dbg !14437
  %conv = sitofp i32 %0 to float, !dbg !14438
  %div = fdiv float 1.000000e+00, %conv, !dbg !14439
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %ibuf_inv, i64 0, i64 0, !dbg !14440
  store float %div, float* %arrayidx, align 4, !dbg !14441
  %1 = load i32, i32* %ibuf_y.addr, align 4, !dbg !14442
  %conv1 = sitofp i32 %1 to float, !dbg !14443
  %div2 = fdiv float 1.000000e+00, %conv1, !dbg !14444
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %ibuf_inv, i64 0, i64 1, !dbg !14445
  store float %div2, float* %arrayidx3, align 4, !dbg !14446
  %2 = load [2 x float]*, [2 x float]** %orig_uv.addr, align 8, !dbg !14447
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %2, i64 0, !dbg !14447
  %arrayidx5 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx4, i64 0, i64 0, !dbg !14447
  %3 = load float, float* %arrayidx5, align 4, !dbg !14447
  %4 = load i32, i32* %ibuf_x.addr, align 4, !dbg !14448
  %conv6 = sitofp i32 %4 to float, !dbg !14448
  %mul = fmul float %3, %conv6, !dbg !14449
  %arrayidx7 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 0, !dbg !14450
  %arrayidx8 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx7, i64 0, i64 0, !dbg !14450
  store float %mul, float* %arrayidx8, align 16, !dbg !14451
  %5 = load [2 x float]*, [2 x float]** %orig_uv.addr, align 8, !dbg !14452
  %arrayidx9 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 0, !dbg !14452
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx9, i64 0, i64 1, !dbg !14452
  %6 = load float, float* %arrayidx10, align 4, !dbg !14452
  %7 = load i32, i32* %ibuf_y.addr, align 4, !dbg !14453
  %conv11 = sitofp i32 %7 to float, !dbg !14453
  %mul12 = fmul float %6, %conv11, !dbg !14454
  %arrayidx13 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 0, !dbg !14455
  %arrayidx14 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx13, i64 0, i64 1, !dbg !14455
  store float %mul12, float* %arrayidx14, align 4, !dbg !14456
  %8 = load [2 x float]*, [2 x float]** %orig_uv.addr, align 8, !dbg !14457
  %arrayidx15 = getelementptr inbounds [2 x float], [2 x float]* %8, i64 1, !dbg !14457
  %arrayidx16 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx15, i64 0, i64 0, !dbg !14457
  %9 = load float, float* %arrayidx16, align 4, !dbg !14457
  %10 = load i32, i32* %ibuf_x.addr, align 4, !dbg !14458
  %conv17 = sitofp i32 %10 to float, !dbg !14458
  %mul18 = fmul float %9, %conv17, !dbg !14459
  %arrayidx19 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 1, !dbg !14460
  %arrayidx20 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx19, i64 0, i64 0, !dbg !14460
  store float %mul18, float* %arrayidx20, align 8, !dbg !14461
  %11 = load [2 x float]*, [2 x float]** %orig_uv.addr, align 8, !dbg !14462
  %arrayidx21 = getelementptr inbounds [2 x float], [2 x float]* %11, i64 1, !dbg !14462
  %arrayidx22 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx21, i64 0, i64 1, !dbg !14462
  %12 = load float, float* %arrayidx22, align 4, !dbg !14462
  %13 = load i32, i32* %ibuf_y.addr, align 4, !dbg !14463
  %conv23 = sitofp i32 %13 to float, !dbg !14463
  %mul24 = fmul float %12, %conv23, !dbg !14464
  %arrayidx25 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 1, !dbg !14465
  %arrayidx26 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx25, i64 0, i64 1, !dbg !14465
  store float %mul24, float* %arrayidx26, align 4, !dbg !14466
  %14 = load [2 x float]*, [2 x float]** %orig_uv.addr, align 8, !dbg !14467
  %arrayidx27 = getelementptr inbounds [2 x float], [2 x float]* %14, i64 2, !dbg !14467
  %arrayidx28 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx27, i64 0, i64 0, !dbg !14467
  %15 = load float, float* %arrayidx28, align 4, !dbg !14467
  %16 = load i32, i32* %ibuf_x.addr, align 4, !dbg !14468
  %conv29 = sitofp i32 %16 to float, !dbg !14468
  %mul30 = fmul float %15, %conv29, !dbg !14469
  %arrayidx31 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 2, !dbg !14470
  %arrayidx32 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx31, i64 0, i64 0, !dbg !14470
  store float %mul30, float* %arrayidx32, align 16, !dbg !14471
  %17 = load [2 x float]*, [2 x float]** %orig_uv.addr, align 8, !dbg !14472
  %arrayidx33 = getelementptr inbounds [2 x float], [2 x float]* %17, i64 2, !dbg !14472
  %arrayidx34 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx33, i64 0, i64 1, !dbg !14472
  %18 = load float, float* %arrayidx34, align 4, !dbg !14472
  %19 = load i32, i32* %ibuf_y.addr, align 4, !dbg !14473
  %conv35 = sitofp i32 %19 to float, !dbg !14473
  %mul36 = fmul float %18, %conv35, !dbg !14474
  %arrayidx37 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 2, !dbg !14475
  %arrayidx38 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx37, i64 0, i64 1, !dbg !14475
  store float %mul36, float* %arrayidx38, align 4, !dbg !14476
  %20 = load i8, i8* %is_quad.addr, align 1, !dbg !14477
  %tobool = icmp ne i8 %20, 0, !dbg !14477
  br i1 %tobool, label %if.then, label %if.end, !dbg !14479

if.then:                                          ; preds = %entry
  %21 = load [2 x float]*, [2 x float]** %orig_uv.addr, align 8, !dbg !14480
  %arrayidx39 = getelementptr inbounds [2 x float], [2 x float]* %21, i64 3, !dbg !14480
  %arrayidx40 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx39, i64 0, i64 0, !dbg !14480
  %22 = load float, float* %arrayidx40, align 4, !dbg !14480
  %23 = load i32, i32* %ibuf_x.addr, align 4, !dbg !14482
  %conv41 = sitofp i32 %23 to float, !dbg !14482
  %mul42 = fmul float %22, %conv41, !dbg !14483
  %arrayidx43 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 3, !dbg !14484
  %arrayidx44 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx43, i64 0, i64 0, !dbg !14484
  store float %mul42, float* %arrayidx44, align 8, !dbg !14485
  %24 = load [2 x float]*, [2 x float]** %orig_uv.addr, align 8, !dbg !14486
  %arrayidx45 = getelementptr inbounds [2 x float], [2 x float]* %24, i64 3, !dbg !14486
  %arrayidx46 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx45, i64 0, i64 1, !dbg !14486
  %25 = load float, float* %arrayidx46, align 4, !dbg !14486
  %26 = load i32, i32* %ibuf_y.addr, align 4, !dbg !14487
  %conv47 = sitofp i32 %26 to float, !dbg !14487
  %mul48 = fmul float %25, %conv47, !dbg !14488
  %arrayidx49 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 3, !dbg !14489
  %arrayidx50 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx49, i64 0, i64 1, !dbg !14489
  store float %mul48, float* %arrayidx50, align 4, !dbg !14490
  br label %if.end, !dbg !14491

if.end:                                           ; preds = %if.then, %entry
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %dir1, i64 0, i64 0, !dbg !14492
  %arrayidx51 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 1, !dbg !14493
  %arraydecay52 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx51, i64 0, i64 0, !dbg !14493
  %arrayidx53 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 0, !dbg !14494
  %arraydecay54 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx53, i64 0, i64 0, !dbg !14494
  call void @sub_v2_v2v2(float* %arraydecay, float* %arraydecay52, float* %arraydecay54), !dbg !14495
  %arraydecay55 = getelementptr inbounds [2 x float], [2 x float]* %dir2, i64 0, i64 0, !dbg !14496
  %arrayidx56 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 2, !dbg !14497
  %arraydecay57 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx56, i64 0, i64 0, !dbg !14497
  %arrayidx58 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 1, !dbg !14498
  %arraydecay59 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx58, i64 0, i64 0, !dbg !14498
  call void @sub_v2_v2v2(float* %arraydecay55, float* %arraydecay57, float* %arraydecay59), !dbg !14499
  %arraydecay60 = getelementptr inbounds [2 x float], [2 x float]* %dir1, i64 0, i64 0, !dbg !14500
  %call = call float @normalize_v2(float* %arraydecay60), !dbg !14501
  %arraydecay61 = getelementptr inbounds [2 x float], [2 x float]* %dir2, i64 0, i64 0, !dbg !14502
  %call62 = call float @normalize_v2(float* %arraydecay61), !dbg !14503
  %27 = load i8, i8* %is_quad.addr, align 1, !dbg !14504
  %tobool63 = icmp ne i8 %27, 0, !dbg !14504
  br i1 %tobool63, label %if.then64, label %if.else, !dbg !14506

if.then64:                                        ; preds = %if.end
  %arraydecay65 = getelementptr inbounds [2 x float], [2 x float]* %dir3, i64 0, i64 0, !dbg !14507
  %arrayidx66 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 3, !dbg !14509
  %arraydecay67 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx66, i64 0, i64 0, !dbg !14509
  %arrayidx68 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 2, !dbg !14510
  %arraydecay69 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx68, i64 0, i64 0, !dbg !14510
  call void @sub_v2_v2v2(float* %arraydecay65, float* %arraydecay67, float* %arraydecay69), !dbg !14511
  %arraydecay70 = getelementptr inbounds [2 x float], [2 x float]* %dir4, i64 0, i64 0, !dbg !14512
  %arrayidx71 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 0, !dbg !14513
  %arraydecay72 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx71, i64 0, i64 0, !dbg !14513
  %arrayidx73 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 3, !dbg !14514
  %arraydecay74 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx73, i64 0, i64 0, !dbg !14514
  call void @sub_v2_v2v2(float* %arraydecay70, float* %arraydecay72, float* %arraydecay74), !dbg !14515
  %arraydecay75 = getelementptr inbounds [2 x float], [2 x float]* %dir3, i64 0, i64 0, !dbg !14516
  %call76 = call float @normalize_v2(float* %arraydecay75), !dbg !14517
  %arraydecay77 = getelementptr inbounds [2 x float], [2 x float]* %dir4, i64 0, i64 0, !dbg !14518
  %call78 = call float @normalize_v2(float* %arraydecay77), !dbg !14519
  br label %if.end86, !dbg !14520

if.else:                                          ; preds = %if.end
  %arraydecay79 = getelementptr inbounds [2 x float], [2 x float]* %dir3, i64 0, i64 0, !dbg !14521
  %arrayidx80 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 0, !dbg !14523
  %arraydecay81 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx80, i64 0, i64 0, !dbg !14523
  %arrayidx82 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 2, !dbg !14524
  %arraydecay83 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx82, i64 0, i64 0, !dbg !14524
  call void @sub_v2_v2v2(float* %arraydecay79, float* %arraydecay81, float* %arraydecay83), !dbg !14525
  %arraydecay84 = getelementptr inbounds [2 x float], [2 x float]* %dir3, i64 0, i64 0, !dbg !14526
  %call85 = call float @normalize_v2(float* %arraydecay84), !dbg !14527
  br label %if.end86

if.end86:                                         ; preds = %if.else, %if.then64
  %28 = load i8, i8* %is_quad.addr, align 1, !dbg !14528
  %tobool87 = icmp ne i8 %28, 0, !dbg !14528
  br i1 %tobool87, label %if.then88, label %if.else101, !dbg !14530

if.then88:                                        ; preds = %if.end86
  %arraydecay89 = getelementptr inbounds [2 x float], [2 x float]* %dir4, i64 0, i64 0, !dbg !14531
  %arraydecay90 = getelementptr inbounds [2 x float], [2 x float]* %dir1, i64 0, i64 0, !dbg !14533
  %call91 = call float @shell_v2v2_mid_normalized_to_dist(float* %arraydecay89, float* %arraydecay90), !dbg !14534
  store float %call91, float* %a1, align 4, !dbg !14535
  %arraydecay92 = getelementptr inbounds [2 x float], [2 x float]* %dir1, i64 0, i64 0, !dbg !14536
  %arraydecay93 = getelementptr inbounds [2 x float], [2 x float]* %dir2, i64 0, i64 0, !dbg !14537
  %call94 = call float @shell_v2v2_mid_normalized_to_dist(float* %arraydecay92, float* %arraydecay93), !dbg !14538
  store float %call94, float* %a2, align 4, !dbg !14539
  %arraydecay95 = getelementptr inbounds [2 x float], [2 x float]* %dir2, i64 0, i64 0, !dbg !14540
  %arraydecay96 = getelementptr inbounds [2 x float], [2 x float]* %dir3, i64 0, i64 0, !dbg !14541
  %call97 = call float @shell_v2v2_mid_normalized_to_dist(float* %arraydecay95, float* %arraydecay96), !dbg !14542
  store float %call97, float* %a3, align 4, !dbg !14543
  %arraydecay98 = getelementptr inbounds [2 x float], [2 x float]* %dir3, i64 0, i64 0, !dbg !14544
  %arraydecay99 = getelementptr inbounds [2 x float], [2 x float]* %dir4, i64 0, i64 0, !dbg !14545
  %call100 = call float @shell_v2v2_mid_normalized_to_dist(float* %arraydecay98, float* %arraydecay99), !dbg !14546
  store float %call100, float* %a4, align 4, !dbg !14547
  br label %if.end111, !dbg !14548

if.else101:                                       ; preds = %if.end86
  %arraydecay102 = getelementptr inbounds [2 x float], [2 x float]* %dir3, i64 0, i64 0, !dbg !14549
  %arraydecay103 = getelementptr inbounds [2 x float], [2 x float]* %dir1, i64 0, i64 0, !dbg !14551
  %call104 = call float @shell_v2v2_mid_normalized_to_dist(float* %arraydecay102, float* %arraydecay103), !dbg !14552
  store float %call104, float* %a1, align 4, !dbg !14553
  %arraydecay105 = getelementptr inbounds [2 x float], [2 x float]* %dir1, i64 0, i64 0, !dbg !14554
  %arraydecay106 = getelementptr inbounds [2 x float], [2 x float]* %dir2, i64 0, i64 0, !dbg !14555
  %call107 = call float @shell_v2v2_mid_normalized_to_dist(float* %arraydecay105, float* %arraydecay106), !dbg !14556
  store float %call107, float* %a2, align 4, !dbg !14557
  %arraydecay108 = getelementptr inbounds [2 x float], [2 x float]* %dir2, i64 0, i64 0, !dbg !14558
  %arraydecay109 = getelementptr inbounds [2 x float], [2 x float]* %dir3, i64 0, i64 0, !dbg !14559
  %call110 = call float @shell_v2v2_mid_normalized_to_dist(float* %arraydecay108, float* %arraydecay109), !dbg !14560
  store float %call110, float* %a3, align 4, !dbg !14561
  br label %if.end111

if.end111:                                        ; preds = %if.else101, %if.then88
  %29 = load i8, i8* %is_quad.addr, align 1, !dbg !14562
  %tobool112 = icmp ne i8 %29, 0, !dbg !14562
  br i1 %tobool112, label %if.then113, label %if.else174, !dbg !14564

if.then113:                                       ; preds = %if.end111
  %arraydecay114 = getelementptr inbounds [2 x float], [2 x float]* %no1, i64 0, i64 0, !dbg !14565
  %arraydecay115 = getelementptr inbounds [2 x float], [2 x float]* %dir4, i64 0, i64 0, !dbg !14567
  %arraydecay116 = getelementptr inbounds [2 x float], [2 x float]* %dir1, i64 0, i64 0, !dbg !14568
  call void @sub_v2_v2v2(float* %arraydecay114, float* %arraydecay115, float* %arraydecay116), !dbg !14569
  %arraydecay117 = getelementptr inbounds [2 x float], [2 x float]* %no2, i64 0, i64 0, !dbg !14570
  %arraydecay118 = getelementptr inbounds [2 x float], [2 x float]* %dir1, i64 0, i64 0, !dbg !14571
  %arraydecay119 = getelementptr inbounds [2 x float], [2 x float]* %dir2, i64 0, i64 0, !dbg !14572
  call void @sub_v2_v2v2(float* %arraydecay117, float* %arraydecay118, float* %arraydecay119), !dbg !14573
  %arraydecay120 = getelementptr inbounds [2 x float], [2 x float]* %no3, i64 0, i64 0, !dbg !14574
  %arraydecay121 = getelementptr inbounds [2 x float], [2 x float]* %dir2, i64 0, i64 0, !dbg !14575
  %arraydecay122 = getelementptr inbounds [2 x float], [2 x float]* %dir3, i64 0, i64 0, !dbg !14576
  call void @sub_v2_v2v2(float* %arraydecay120, float* %arraydecay121, float* %arraydecay122), !dbg !14577
  %arraydecay123 = getelementptr inbounds [2 x float], [2 x float]* %no4, i64 0, i64 0, !dbg !14578
  %arraydecay124 = getelementptr inbounds [2 x float], [2 x float]* %dir3, i64 0, i64 0, !dbg !14579
  %arraydecay125 = getelementptr inbounds [2 x float], [2 x float]* %dir4, i64 0, i64 0, !dbg !14580
  call void @sub_v2_v2v2(float* %arraydecay123, float* %arraydecay124, float* %arraydecay125), !dbg !14581
  %arraydecay126 = getelementptr inbounds [2 x float], [2 x float]* %no1, i64 0, i64 0, !dbg !14582
  %call127 = call float @normalize_v2(float* %arraydecay126), !dbg !14583
  %arraydecay128 = getelementptr inbounds [2 x float], [2 x float]* %no2, i64 0, i64 0, !dbg !14584
  %call129 = call float @normalize_v2(float* %arraydecay128), !dbg !14585
  %arraydecay130 = getelementptr inbounds [2 x float], [2 x float]* %no3, i64 0, i64 0, !dbg !14586
  %call131 = call float @normalize_v2(float* %arraydecay130), !dbg !14587
  %arraydecay132 = getelementptr inbounds [2 x float], [2 x float]* %no4, i64 0, i64 0, !dbg !14588
  %call133 = call float @normalize_v2(float* %arraydecay132), !dbg !14589
  %arraydecay134 = getelementptr inbounds [2 x float], [2 x float]* %no1, i64 0, i64 0, !dbg !14590
  %30 = load float, float* %a1, align 4, !dbg !14591
  %31 = load float, float* %scaler.addr, align 4, !dbg !14592
  %mul135 = fmul float %30, %31, !dbg !14593
  call void @mul_v2_fl(float* %arraydecay134, float %mul135), !dbg !14594
  %arraydecay136 = getelementptr inbounds [2 x float], [2 x float]* %no2, i64 0, i64 0, !dbg !14595
  %32 = load float, float* %a2, align 4, !dbg !14596
  %33 = load float, float* %scaler.addr, align 4, !dbg !14597
  %mul137 = fmul float %32, %33, !dbg !14598
  call void @mul_v2_fl(float* %arraydecay136, float %mul137), !dbg !14599
  %arraydecay138 = getelementptr inbounds [2 x float], [2 x float]* %no3, i64 0, i64 0, !dbg !14600
  %34 = load float, float* %a3, align 4, !dbg !14601
  %35 = load float, float* %scaler.addr, align 4, !dbg !14602
  %mul139 = fmul float %34, %35, !dbg !14603
  call void @mul_v2_fl(float* %arraydecay138, float %mul139), !dbg !14604
  %arraydecay140 = getelementptr inbounds [2 x float], [2 x float]* %no4, i64 0, i64 0, !dbg !14605
  %36 = load float, float* %a4, align 4, !dbg !14606
  %37 = load float, float* %scaler.addr, align 4, !dbg !14607
  %mul141 = fmul float %36, %37, !dbg !14608
  call void @mul_v2_fl(float* %arraydecay140, float %mul141), !dbg !14609
  %38 = load [2 x float]*, [2 x float]** %outset_uv.addr, align 8, !dbg !14610
  %arrayidx142 = getelementptr inbounds [2 x float], [2 x float]* %38, i64 0, !dbg !14610
  %arraydecay143 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx142, i64 0, i64 0, !dbg !14610
  %arrayidx144 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 0, !dbg !14611
  %arraydecay145 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx144, i64 0, i64 0, !dbg !14611
  %arraydecay146 = getelementptr inbounds [2 x float], [2 x float]* %no1, i64 0, i64 0, !dbg !14612
  call void @add_v2_v2v2(float* %arraydecay143, float* %arraydecay145, float* %arraydecay146), !dbg !14613
  %39 = load [2 x float]*, [2 x float]** %outset_uv.addr, align 8, !dbg !14614
  %arrayidx147 = getelementptr inbounds [2 x float], [2 x float]* %39, i64 1, !dbg !14614
  %arraydecay148 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx147, i64 0, i64 0, !dbg !14614
  %arrayidx149 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 1, !dbg !14615
  %arraydecay150 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx149, i64 0, i64 0, !dbg !14615
  %arraydecay151 = getelementptr inbounds [2 x float], [2 x float]* %no2, i64 0, i64 0, !dbg !14616
  call void @add_v2_v2v2(float* %arraydecay148, float* %arraydecay150, float* %arraydecay151), !dbg !14617
  %40 = load [2 x float]*, [2 x float]** %outset_uv.addr, align 8, !dbg !14618
  %arrayidx152 = getelementptr inbounds [2 x float], [2 x float]* %40, i64 2, !dbg !14618
  %arraydecay153 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx152, i64 0, i64 0, !dbg !14618
  %arrayidx154 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 2, !dbg !14619
  %arraydecay155 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx154, i64 0, i64 0, !dbg !14619
  %arraydecay156 = getelementptr inbounds [2 x float], [2 x float]* %no3, i64 0, i64 0, !dbg !14620
  call void @add_v2_v2v2(float* %arraydecay153, float* %arraydecay155, float* %arraydecay156), !dbg !14621
  %41 = load [2 x float]*, [2 x float]** %outset_uv.addr, align 8, !dbg !14622
  %arrayidx157 = getelementptr inbounds [2 x float], [2 x float]* %41, i64 3, !dbg !14622
  %arraydecay158 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx157, i64 0, i64 0, !dbg !14622
  %arrayidx159 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 3, !dbg !14623
  %arraydecay160 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx159, i64 0, i64 0, !dbg !14623
  %arraydecay161 = getelementptr inbounds [2 x float], [2 x float]* %no4, i64 0, i64 0, !dbg !14624
  call void @add_v2_v2v2(float* %arraydecay158, float* %arraydecay160, float* %arraydecay161), !dbg !14625
  %42 = load [2 x float]*, [2 x float]** %outset_uv.addr, align 8, !dbg !14626
  %arrayidx162 = getelementptr inbounds [2 x float], [2 x float]* %42, i64 0, !dbg !14626
  %arraydecay163 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx162, i64 0, i64 0, !dbg !14626
  %arraydecay164 = getelementptr inbounds [2 x float], [2 x float]* %ibuf_inv, i64 0, i64 0, !dbg !14627
  call void @mul_v2_v2(float* %arraydecay163, float* %arraydecay164), !dbg !14628
  %43 = load [2 x float]*, [2 x float]** %outset_uv.addr, align 8, !dbg !14629
  %arrayidx165 = getelementptr inbounds [2 x float], [2 x float]* %43, i64 1, !dbg !14629
  %arraydecay166 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx165, i64 0, i64 0, !dbg !14629
  %arraydecay167 = getelementptr inbounds [2 x float], [2 x float]* %ibuf_inv, i64 0, i64 0, !dbg !14630
  call void @mul_v2_v2(float* %arraydecay166, float* %arraydecay167), !dbg !14631
  %44 = load [2 x float]*, [2 x float]** %outset_uv.addr, align 8, !dbg !14632
  %arrayidx168 = getelementptr inbounds [2 x float], [2 x float]* %44, i64 2, !dbg !14632
  %arraydecay169 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx168, i64 0, i64 0, !dbg !14632
  %arraydecay170 = getelementptr inbounds [2 x float], [2 x float]* %ibuf_inv, i64 0, i64 0, !dbg !14633
  call void @mul_v2_v2(float* %arraydecay169, float* %arraydecay170), !dbg !14634
  %45 = load [2 x float]*, [2 x float]** %outset_uv.addr, align 8, !dbg !14635
  %arrayidx171 = getelementptr inbounds [2 x float], [2 x float]* %45, i64 3, !dbg !14635
  %arraydecay172 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx171, i64 0, i64 0, !dbg !14635
  %arraydecay173 = getelementptr inbounds [2 x float], [2 x float]* %ibuf_inv, i64 0, i64 0, !dbg !14636
  call void @mul_v2_v2(float* %arraydecay172, float* %arraydecay173), !dbg !14637
  br label %if.end220, !dbg !14638

if.else174:                                       ; preds = %if.end111
  %arraydecay175 = getelementptr inbounds [2 x float], [2 x float]* %no1, i64 0, i64 0, !dbg !14639
  %arraydecay176 = getelementptr inbounds [2 x float], [2 x float]* %dir3, i64 0, i64 0, !dbg !14641
  %arraydecay177 = getelementptr inbounds [2 x float], [2 x float]* %dir1, i64 0, i64 0, !dbg !14642
  call void @sub_v2_v2v2(float* %arraydecay175, float* %arraydecay176, float* %arraydecay177), !dbg !14643
  %arraydecay178 = getelementptr inbounds [2 x float], [2 x float]* %no2, i64 0, i64 0, !dbg !14644
  %arraydecay179 = getelementptr inbounds [2 x float], [2 x float]* %dir1, i64 0, i64 0, !dbg !14645
  %arraydecay180 = getelementptr inbounds [2 x float], [2 x float]* %dir2, i64 0, i64 0, !dbg !14646
  call void @sub_v2_v2v2(float* %arraydecay178, float* %arraydecay179, float* %arraydecay180), !dbg !14647
  %arraydecay181 = getelementptr inbounds [2 x float], [2 x float]* %no3, i64 0, i64 0, !dbg !14648
  %arraydecay182 = getelementptr inbounds [2 x float], [2 x float]* %dir2, i64 0, i64 0, !dbg !14649
  %arraydecay183 = getelementptr inbounds [2 x float], [2 x float]* %dir3, i64 0, i64 0, !dbg !14650
  call void @sub_v2_v2v2(float* %arraydecay181, float* %arraydecay182, float* %arraydecay183), !dbg !14651
  %arraydecay184 = getelementptr inbounds [2 x float], [2 x float]* %no1, i64 0, i64 0, !dbg !14652
  %call185 = call float @normalize_v2(float* %arraydecay184), !dbg !14653
  %arraydecay186 = getelementptr inbounds [2 x float], [2 x float]* %no2, i64 0, i64 0, !dbg !14654
  %call187 = call float @normalize_v2(float* %arraydecay186), !dbg !14655
  %arraydecay188 = getelementptr inbounds [2 x float], [2 x float]* %no3, i64 0, i64 0, !dbg !14656
  %call189 = call float @normalize_v2(float* %arraydecay188), !dbg !14657
  %arraydecay190 = getelementptr inbounds [2 x float], [2 x float]* %no1, i64 0, i64 0, !dbg !14658
  %46 = load float, float* %a1, align 4, !dbg !14659
  %47 = load float, float* %scaler.addr, align 4, !dbg !14660
  %mul191 = fmul float %46, %47, !dbg !14661
  call void @mul_v2_fl(float* %arraydecay190, float %mul191), !dbg !14662
  %arraydecay192 = getelementptr inbounds [2 x float], [2 x float]* %no2, i64 0, i64 0, !dbg !14663
  %48 = load float, float* %a2, align 4, !dbg !14664
  %49 = load float, float* %scaler.addr, align 4, !dbg !14665
  %mul193 = fmul float %48, %49, !dbg !14666
  call void @mul_v2_fl(float* %arraydecay192, float %mul193), !dbg !14667
  %arraydecay194 = getelementptr inbounds [2 x float], [2 x float]* %no3, i64 0, i64 0, !dbg !14668
  %50 = load float, float* %a3, align 4, !dbg !14669
  %51 = load float, float* %scaler.addr, align 4, !dbg !14670
  %mul195 = fmul float %50, %51, !dbg !14671
  call void @mul_v2_fl(float* %arraydecay194, float %mul195), !dbg !14672
  %52 = load [2 x float]*, [2 x float]** %outset_uv.addr, align 8, !dbg !14673
  %arrayidx196 = getelementptr inbounds [2 x float], [2 x float]* %52, i64 0, !dbg !14673
  %arraydecay197 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx196, i64 0, i64 0, !dbg !14673
  %arrayidx198 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 0, !dbg !14674
  %arraydecay199 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx198, i64 0, i64 0, !dbg !14674
  %arraydecay200 = getelementptr inbounds [2 x float], [2 x float]* %no1, i64 0, i64 0, !dbg !14675
  call void @add_v2_v2v2(float* %arraydecay197, float* %arraydecay199, float* %arraydecay200), !dbg !14676
  %53 = load [2 x float]*, [2 x float]** %outset_uv.addr, align 8, !dbg !14677
  %arrayidx201 = getelementptr inbounds [2 x float], [2 x float]* %53, i64 1, !dbg !14677
  %arraydecay202 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx201, i64 0, i64 0, !dbg !14677
  %arrayidx203 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 1, !dbg !14678
  %arraydecay204 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx203, i64 0, i64 0, !dbg !14678
  %arraydecay205 = getelementptr inbounds [2 x float], [2 x float]* %no2, i64 0, i64 0, !dbg !14679
  call void @add_v2_v2v2(float* %arraydecay202, float* %arraydecay204, float* %arraydecay205), !dbg !14680
  %54 = load [2 x float]*, [2 x float]** %outset_uv.addr, align 8, !dbg !14681
  %arrayidx206 = getelementptr inbounds [2 x float], [2 x float]* %54, i64 2, !dbg !14681
  %arraydecay207 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx206, i64 0, i64 0, !dbg !14681
  %arrayidx208 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %puv, i64 0, i64 2, !dbg !14682
  %arraydecay209 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx208, i64 0, i64 0, !dbg !14682
  %arraydecay210 = getelementptr inbounds [2 x float], [2 x float]* %no3, i64 0, i64 0, !dbg !14683
  call void @add_v2_v2v2(float* %arraydecay207, float* %arraydecay209, float* %arraydecay210), !dbg !14684
  %55 = load [2 x float]*, [2 x float]** %outset_uv.addr, align 8, !dbg !14685
  %arrayidx211 = getelementptr inbounds [2 x float], [2 x float]* %55, i64 0, !dbg !14685
  %arraydecay212 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx211, i64 0, i64 0, !dbg !14685
  %arraydecay213 = getelementptr inbounds [2 x float], [2 x float]* %ibuf_inv, i64 0, i64 0, !dbg !14686
  call void @mul_v2_v2(float* %arraydecay212, float* %arraydecay213), !dbg !14687
  %56 = load [2 x float]*, [2 x float]** %outset_uv.addr, align 8, !dbg !14688
  %arrayidx214 = getelementptr inbounds [2 x float], [2 x float]* %56, i64 1, !dbg !14688
  %arraydecay215 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx214, i64 0, i64 0, !dbg !14688
  %arraydecay216 = getelementptr inbounds [2 x float], [2 x float]* %ibuf_inv, i64 0, i64 0, !dbg !14689
  call void @mul_v2_v2(float* %arraydecay215, float* %arraydecay216), !dbg !14690
  %57 = load [2 x float]*, [2 x float]** %outset_uv.addr, align 8, !dbg !14691
  %arrayidx217 = getelementptr inbounds [2 x float], [2 x float]* %57, i64 2, !dbg !14691
  %arraydecay218 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx217, i64 0, i64 0, !dbg !14691
  %arraydecay219 = getelementptr inbounds [2 x float], [2 x float]* %ibuf_inv, i64 0, i64 0, !dbg !14692
  call void @mul_v2_v2(float* %arraydecay218, float* %arraydecay219), !dbg !14693
  br label %if.end220

if.end220:                                        ; preds = %if.else174, %if.then113
  ret void, !dbg !14694
}

; Function Attrs: noinline nounwind uwtable
define internal void @scale_quad([3 x float]* %insetCos, float** %origCos, float %inset) #0 !dbg !14695 {
entry:
  %insetCos.addr = alloca [3 x float]*, align 8
  %origCos.addr = alloca float**, align 8
  %inset.addr = alloca float, align 4
  %cent = alloca [3 x float], align 4
  store [3 x float]* %insetCos, [3 x float]** %insetCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %insetCos.addr, metadata !14699, metadata !DIExpression()), !dbg !14700
  store float** %origCos, float*** %origCos.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %origCos.addr, metadata !14701, metadata !DIExpression()), !dbg !14702
  store float %inset, float* %inset.addr, align 4
  call void @llvm.dbg.declare(metadata float* %inset.addr, metadata !14703, metadata !DIExpression()), !dbg !14704
  call void @llvm.dbg.declare(metadata [3 x float]* %cent, metadata !14705, metadata !DIExpression()), !dbg !14706
  %0 = load float**, float*** %origCos.addr, align 8, !dbg !14707
  %arrayidx = getelementptr inbounds float*, float** %0, i64 0, !dbg !14707
  %1 = load float*, float** %arrayidx, align 8, !dbg !14707
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 0, !dbg !14707
  %2 = load float, float* %arrayidx1, align 4, !dbg !14707
  %3 = load float**, float*** %origCos.addr, align 8, !dbg !14708
  %arrayidx2 = getelementptr inbounds float*, float** %3, i64 1, !dbg !14708
  %4 = load float*, float** %arrayidx2, align 8, !dbg !14708
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 0, !dbg !14708
  %5 = load float, float* %arrayidx3, align 4, !dbg !14708
  %add = fadd float %2, %5, !dbg !14709
  %6 = load float**, float*** %origCos.addr, align 8, !dbg !14710
  %arrayidx4 = getelementptr inbounds float*, float** %6, i64 2, !dbg !14710
  %7 = load float*, float** %arrayidx4, align 8, !dbg !14710
  %arrayidx5 = getelementptr inbounds float, float* %7, i64 0, !dbg !14710
  %8 = load float, float* %arrayidx5, align 4, !dbg !14710
  %add6 = fadd float %add, %8, !dbg !14711
  %9 = load float**, float*** %origCos.addr, align 8, !dbg !14712
  %arrayidx7 = getelementptr inbounds float*, float** %9, i64 3, !dbg !14712
  %10 = load float*, float** %arrayidx7, align 8, !dbg !14712
  %arrayidx8 = getelementptr inbounds float, float* %10, i64 0, !dbg !14712
  %11 = load float, float* %arrayidx8, align 4, !dbg !14712
  %add9 = fadd float %add6, %11, !dbg !14713
  %mul = fmul float %add9, 2.500000e-01, !dbg !14714
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !14715
  store float %mul, float* %arrayidx10, align 4, !dbg !14716
  %12 = load float**, float*** %origCos.addr, align 8, !dbg !14717
  %arrayidx11 = getelementptr inbounds float*, float** %12, i64 0, !dbg !14717
  %13 = load float*, float** %arrayidx11, align 8, !dbg !14717
  %arrayidx12 = getelementptr inbounds float, float* %13, i64 1, !dbg !14717
  %14 = load float, float* %arrayidx12, align 4, !dbg !14717
  %15 = load float**, float*** %origCos.addr, align 8, !dbg !14718
  %arrayidx13 = getelementptr inbounds float*, float** %15, i64 1, !dbg !14718
  %16 = load float*, float** %arrayidx13, align 8, !dbg !14718
  %arrayidx14 = getelementptr inbounds float, float* %16, i64 1, !dbg !14718
  %17 = load float, float* %arrayidx14, align 4, !dbg !14718
  %add15 = fadd float %14, %17, !dbg !14719
  %18 = load float**, float*** %origCos.addr, align 8, !dbg !14720
  %arrayidx16 = getelementptr inbounds float*, float** %18, i64 2, !dbg !14720
  %19 = load float*, float** %arrayidx16, align 8, !dbg !14720
  %arrayidx17 = getelementptr inbounds float, float* %19, i64 1, !dbg !14720
  %20 = load float, float* %arrayidx17, align 4, !dbg !14720
  %add18 = fadd float %add15, %20, !dbg !14721
  %21 = load float**, float*** %origCos.addr, align 8, !dbg !14722
  %arrayidx19 = getelementptr inbounds float*, float** %21, i64 3, !dbg !14722
  %22 = load float*, float** %arrayidx19, align 8, !dbg !14722
  %arrayidx20 = getelementptr inbounds float, float* %22, i64 1, !dbg !14722
  %23 = load float, float* %arrayidx20, align 4, !dbg !14722
  %add21 = fadd float %add18, %23, !dbg !14723
  %mul22 = fmul float %add21, 2.500000e-01, !dbg !14724
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 1, !dbg !14725
  store float %mul22, float* %arrayidx23, align 4, !dbg !14726
  %24 = load float**, float*** %origCos.addr, align 8, !dbg !14727
  %arrayidx24 = getelementptr inbounds float*, float** %24, i64 0, !dbg !14727
  %25 = load float*, float** %arrayidx24, align 8, !dbg !14727
  %arrayidx25 = getelementptr inbounds float, float* %25, i64 2, !dbg !14727
  %26 = load float, float* %arrayidx25, align 4, !dbg !14727
  %27 = load float**, float*** %origCos.addr, align 8, !dbg !14728
  %arrayidx26 = getelementptr inbounds float*, float** %27, i64 1, !dbg !14728
  %28 = load float*, float** %arrayidx26, align 8, !dbg !14728
  %arrayidx27 = getelementptr inbounds float, float* %28, i64 2, !dbg !14728
  %29 = load float, float* %arrayidx27, align 4, !dbg !14728
  %add28 = fadd float %26, %29, !dbg !14729
  %30 = load float**, float*** %origCos.addr, align 8, !dbg !14730
  %arrayidx29 = getelementptr inbounds float*, float** %30, i64 2, !dbg !14730
  %31 = load float*, float** %arrayidx29, align 8, !dbg !14730
  %arrayidx30 = getelementptr inbounds float, float* %31, i64 2, !dbg !14730
  %32 = load float, float* %arrayidx30, align 4, !dbg !14730
  %add31 = fadd float %add28, %32, !dbg !14731
  %33 = load float**, float*** %origCos.addr, align 8, !dbg !14732
  %arrayidx32 = getelementptr inbounds float*, float** %33, i64 3, !dbg !14732
  %34 = load float*, float** %arrayidx32, align 8, !dbg !14732
  %arrayidx33 = getelementptr inbounds float, float* %34, i64 2, !dbg !14732
  %35 = load float, float* %arrayidx33, align 4, !dbg !14732
  %add34 = fadd float %add31, %35, !dbg !14733
  %mul35 = fmul float %add34, 2.500000e-01, !dbg !14734
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 2, !dbg !14735
  store float %mul35, float* %arrayidx36, align 4, !dbg !14736
  %36 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14737
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %36, i64 0, !dbg !14737
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx37, i64 0, i64 0, !dbg !14737
  %37 = load float**, float*** %origCos.addr, align 8, !dbg !14738
  %arrayidx38 = getelementptr inbounds float*, float** %37, i64 0, !dbg !14738
  %38 = load float*, float** %arrayidx38, align 8, !dbg !14738
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !14739
  call void @sub_v3_v3v3(float* %arraydecay, float* %38, float* %arraydecay39), !dbg !14740
  %39 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14741
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %39, i64 1, !dbg !14741
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx40, i64 0, i64 0, !dbg !14741
  %40 = load float**, float*** %origCos.addr, align 8, !dbg !14742
  %arrayidx42 = getelementptr inbounds float*, float** %40, i64 1, !dbg !14742
  %41 = load float*, float** %arrayidx42, align 8, !dbg !14742
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !14743
  call void @sub_v3_v3v3(float* %arraydecay41, float* %41, float* %arraydecay43), !dbg !14744
  %42 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14745
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %42, i64 2, !dbg !14745
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx44, i64 0, i64 0, !dbg !14745
  %43 = load float**, float*** %origCos.addr, align 8, !dbg !14746
  %arrayidx46 = getelementptr inbounds float*, float** %43, i64 2, !dbg !14746
  %44 = load float*, float** %arrayidx46, align 8, !dbg !14746
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !14747
  call void @sub_v3_v3v3(float* %arraydecay45, float* %44, float* %arraydecay47), !dbg !14748
  %45 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14749
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %45, i64 3, !dbg !14749
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx48, i64 0, i64 0, !dbg !14749
  %46 = load float**, float*** %origCos.addr, align 8, !dbg !14750
  %arrayidx50 = getelementptr inbounds float*, float** %46, i64 3, !dbg !14750
  %47 = load float*, float** %arrayidx50, align 8, !dbg !14750
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !14751
  call void @sub_v3_v3v3(float* %arraydecay49, float* %47, float* %arraydecay51), !dbg !14752
  %48 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14753
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %48, i64 0, !dbg !14753
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx52, i64 0, i64 0, !dbg !14753
  %49 = load float, float* %inset.addr, align 4, !dbg !14754
  call void @mul_v3_fl(float* %arraydecay53, float %49), !dbg !14755
  %50 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14756
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %50, i64 1, !dbg !14756
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx54, i64 0, i64 0, !dbg !14756
  %51 = load float, float* %inset.addr, align 4, !dbg !14757
  call void @mul_v3_fl(float* %arraydecay55, float %51), !dbg !14758
  %52 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14759
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %52, i64 2, !dbg !14759
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx56, i64 0, i64 0, !dbg !14759
  %53 = load float, float* %inset.addr, align 4, !dbg !14760
  call void @mul_v3_fl(float* %arraydecay57, float %53), !dbg !14761
  %54 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14762
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %54, i64 3, !dbg !14762
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx58, i64 0, i64 0, !dbg !14762
  %55 = load float, float* %inset.addr, align 4, !dbg !14763
  call void @mul_v3_fl(float* %arraydecay59, float %55), !dbg !14764
  %56 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14765
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %56, i64 0, !dbg !14765
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx60, i64 0, i64 0, !dbg !14765
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !14766
  call void @add_v3_v3(float* %arraydecay61, float* %arraydecay62), !dbg !14767
  %57 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14768
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %57, i64 1, !dbg !14768
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx63, i64 0, i64 0, !dbg !14768
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !14769
  call void @add_v3_v3(float* %arraydecay64, float* %arraydecay65), !dbg !14770
  %58 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14771
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %58, i64 2, !dbg !14771
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx66, i64 0, i64 0, !dbg !14771
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !14772
  call void @add_v3_v3(float* %arraydecay67, float* %arraydecay68), !dbg !14773
  %59 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14774
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %59, i64 3, !dbg !14774
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx69, i64 0, i64 0, !dbg !14774
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !14775
  call void @add_v3_v3(float* %arraydecay70, float* %arraydecay71), !dbg !14776
  ret void, !dbg !14777
}

; Function Attrs: noinline nounwind uwtable
define internal void @scale_tri([3 x float]* %insetCos, float** %origCos, float %inset) #0 !dbg !14778 {
entry:
  %insetCos.addr = alloca [3 x float]*, align 8
  %origCos.addr = alloca float**, align 8
  %inset.addr = alloca float, align 4
  %cent = alloca [3 x float], align 4
  store [3 x float]* %insetCos, [3 x float]** %insetCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %insetCos.addr, metadata !14779, metadata !DIExpression()), !dbg !14780
  store float** %origCos, float*** %origCos.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %origCos.addr, metadata !14781, metadata !DIExpression()), !dbg !14782
  store float %inset, float* %inset.addr, align 4
  call void @llvm.dbg.declare(metadata float* %inset.addr, metadata !14783, metadata !DIExpression()), !dbg !14784
  call void @llvm.dbg.declare(metadata [3 x float]* %cent, metadata !14785, metadata !DIExpression()), !dbg !14786
  %0 = load float**, float*** %origCos.addr, align 8, !dbg !14787
  %arrayidx = getelementptr inbounds float*, float** %0, i64 0, !dbg !14787
  %1 = load float*, float** %arrayidx, align 8, !dbg !14787
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 0, !dbg !14787
  %2 = load float, float* %arrayidx1, align 4, !dbg !14787
  %3 = load float**, float*** %origCos.addr, align 8, !dbg !14788
  %arrayidx2 = getelementptr inbounds float*, float** %3, i64 1, !dbg !14788
  %4 = load float*, float** %arrayidx2, align 8, !dbg !14788
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 0, !dbg !14788
  %5 = load float, float* %arrayidx3, align 4, !dbg !14788
  %add = fadd float %2, %5, !dbg !14789
  %6 = load float**, float*** %origCos.addr, align 8, !dbg !14790
  %arrayidx4 = getelementptr inbounds float*, float** %6, i64 2, !dbg !14790
  %7 = load float*, float** %arrayidx4, align 8, !dbg !14790
  %arrayidx5 = getelementptr inbounds float, float* %7, i64 0, !dbg !14790
  %8 = load float, float* %arrayidx5, align 4, !dbg !14790
  %add6 = fadd float %add, %8, !dbg !14791
  %mul = fmul float %add6, 0x3FD5555560000000, !dbg !14792
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !14793
  store float %mul, float* %arrayidx7, align 4, !dbg !14794
  %9 = load float**, float*** %origCos.addr, align 8, !dbg !14795
  %arrayidx8 = getelementptr inbounds float*, float** %9, i64 0, !dbg !14795
  %10 = load float*, float** %arrayidx8, align 8, !dbg !14795
  %arrayidx9 = getelementptr inbounds float, float* %10, i64 1, !dbg !14795
  %11 = load float, float* %arrayidx9, align 4, !dbg !14795
  %12 = load float**, float*** %origCos.addr, align 8, !dbg !14796
  %arrayidx10 = getelementptr inbounds float*, float** %12, i64 1, !dbg !14796
  %13 = load float*, float** %arrayidx10, align 8, !dbg !14796
  %arrayidx11 = getelementptr inbounds float, float* %13, i64 1, !dbg !14796
  %14 = load float, float* %arrayidx11, align 4, !dbg !14796
  %add12 = fadd float %11, %14, !dbg !14797
  %15 = load float**, float*** %origCos.addr, align 8, !dbg !14798
  %arrayidx13 = getelementptr inbounds float*, float** %15, i64 2, !dbg !14798
  %16 = load float*, float** %arrayidx13, align 8, !dbg !14798
  %arrayidx14 = getelementptr inbounds float, float* %16, i64 1, !dbg !14798
  %17 = load float, float* %arrayidx14, align 4, !dbg !14798
  %add15 = fadd float %add12, %17, !dbg !14799
  %mul16 = fmul float %add15, 0x3FD5555560000000, !dbg !14800
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 1, !dbg !14801
  store float %mul16, float* %arrayidx17, align 4, !dbg !14802
  %18 = load float**, float*** %origCos.addr, align 8, !dbg !14803
  %arrayidx18 = getelementptr inbounds float*, float** %18, i64 0, !dbg !14803
  %19 = load float*, float** %arrayidx18, align 8, !dbg !14803
  %arrayidx19 = getelementptr inbounds float, float* %19, i64 2, !dbg !14803
  %20 = load float, float* %arrayidx19, align 4, !dbg !14803
  %21 = load float**, float*** %origCos.addr, align 8, !dbg !14804
  %arrayidx20 = getelementptr inbounds float*, float** %21, i64 1, !dbg !14804
  %22 = load float*, float** %arrayidx20, align 8, !dbg !14804
  %arrayidx21 = getelementptr inbounds float, float* %22, i64 2, !dbg !14804
  %23 = load float, float* %arrayidx21, align 4, !dbg !14804
  %add22 = fadd float %20, %23, !dbg !14805
  %24 = load float**, float*** %origCos.addr, align 8, !dbg !14806
  %arrayidx23 = getelementptr inbounds float*, float** %24, i64 2, !dbg !14806
  %25 = load float*, float** %arrayidx23, align 8, !dbg !14806
  %arrayidx24 = getelementptr inbounds float, float* %25, i64 2, !dbg !14806
  %26 = load float, float* %arrayidx24, align 4, !dbg !14806
  %add25 = fadd float %add22, %26, !dbg !14807
  %mul26 = fmul float %add25, 0x3FD5555560000000, !dbg !14808
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 2, !dbg !14809
  store float %mul26, float* %arrayidx27, align 4, !dbg !14810
  %27 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14811
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %27, i64 0, !dbg !14811
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx28, i64 0, i64 0, !dbg !14811
  %28 = load float**, float*** %origCos.addr, align 8, !dbg !14812
  %arrayidx29 = getelementptr inbounds float*, float** %28, i64 0, !dbg !14812
  %29 = load float*, float** %arrayidx29, align 8, !dbg !14812
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !14813
  call void @sub_v3_v3v3(float* %arraydecay, float* %29, float* %arraydecay30), !dbg !14814
  %30 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14815
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %30, i64 1, !dbg !14815
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx31, i64 0, i64 0, !dbg !14815
  %31 = load float**, float*** %origCos.addr, align 8, !dbg !14816
  %arrayidx33 = getelementptr inbounds float*, float** %31, i64 1, !dbg !14816
  %32 = load float*, float** %arrayidx33, align 8, !dbg !14816
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !14817
  call void @sub_v3_v3v3(float* %arraydecay32, float* %32, float* %arraydecay34), !dbg !14818
  %33 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14819
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %33, i64 2, !dbg !14819
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx35, i64 0, i64 0, !dbg !14819
  %34 = load float**, float*** %origCos.addr, align 8, !dbg !14820
  %arrayidx37 = getelementptr inbounds float*, float** %34, i64 2, !dbg !14820
  %35 = load float*, float** %arrayidx37, align 8, !dbg !14820
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !14821
  call void @sub_v3_v3v3(float* %arraydecay36, float* %35, float* %arraydecay38), !dbg !14822
  %36 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14823
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %36, i64 0, !dbg !14823
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx39, i64 0, i64 0, !dbg !14823
  %37 = load float, float* %inset.addr, align 4, !dbg !14824
  call void @mul_v3_fl(float* %arraydecay40, float %37), !dbg !14825
  %38 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14826
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %38, i64 1, !dbg !14826
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx41, i64 0, i64 0, !dbg !14826
  %39 = load float, float* %inset.addr, align 4, !dbg !14827
  call void @mul_v3_fl(float* %arraydecay42, float %39), !dbg !14828
  %40 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14829
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %40, i64 2, !dbg !14829
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx43, i64 0, i64 0, !dbg !14829
  %41 = load float, float* %inset.addr, align 4, !dbg !14830
  call void @mul_v3_fl(float* %arraydecay44, float %41), !dbg !14831
  %42 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14832
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %42, i64 0, !dbg !14832
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx45, i64 0, i64 0, !dbg !14832
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !14833
  call void @add_v3_v3(float* %arraydecay46, float* %arraydecay47), !dbg !14834
  %43 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14835
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %43, i64 1, !dbg !14835
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx48, i64 0, i64 0, !dbg !14835
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !14836
  call void @add_v3_v3(float* %arraydecay49, float* %arraydecay50), !dbg !14837
  %44 = load [3 x float]*, [3 x float]** %insetCos.addr, align 8, !dbg !14838
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %44, i64 2, !dbg !14838
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx51, i64 0, i64 0, !dbg !14838
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !14839
  call void @add_v3_v3(float* %arraydecay52, float* %arraydecay53), !dbg !14840
  ret void, !dbg !14841
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @line_clip_rect2f(%struct.rctf* %rect, float* %l1, float* %l2, float* %l1_clip, float* %l2_clip) #0 !dbg !14842 {
entry:
  %retval = alloca i8, align 1
  %rect.addr = alloca %struct.rctf*, align 8
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  %l1_clip.addr = alloca float*, align 8
  %l2_clip.addr = alloca float*, align 8
  %isect = alloca float, align 4
  %ok1 = alloca i16, align 2
  %ok2 = alloca i16, align 2
  store %struct.rctf* %rect, %struct.rctf** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rect.addr, metadata !14845, metadata !DIExpression()), !dbg !14846
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !14847, metadata !DIExpression()), !dbg !14848
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !14849, metadata !DIExpression()), !dbg !14850
  store float* %l1_clip, float** %l1_clip.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1_clip.addr, metadata !14851, metadata !DIExpression()), !dbg !14852
  store float* %l2_clip, float** %l2_clip.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2_clip.addr, metadata !14853, metadata !DIExpression()), !dbg !14854
  %0 = load float*, float** %l1.addr, align 8, !dbg !14855
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !14855
  %1 = load float, float* %arrayidx, align 4, !dbg !14855
  %2 = load float*, float** %l2.addr, align 8, !dbg !14857
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !14857
  %3 = load float, float* %arrayidx1, align 4, !dbg !14857
  %sub = fsub float %1, %3, !dbg !14858
  %4 = call float @llvm.fabs.f32(float %sub), !dbg !14859
  %cmp = fcmp olt float %4, 0x3F489374C0000000, !dbg !14860
  br i1 %cmp, label %if.then, label %if.else58, !dbg !14861

if.then:                                          ; preds = %entry
  %5 = load float*, float** %l1.addr, align 8, !dbg !14862
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !14862
  %6 = load float, float* %arrayidx2, align 4, !dbg !14862
  %7 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14865
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %7, i32 0, i32 2, !dbg !14866
  %8 = load float, float* %ymin, align 4, !dbg !14866
  %cmp3 = fcmp olt float %6, %8, !dbg !14867
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !14868

lor.lhs.false:                                    ; preds = %if.then
  %9 = load float*, float** %l1.addr, align 8, !dbg !14869
  %arrayidx4 = getelementptr inbounds float, float* %9, i64 1, !dbg !14869
  %10 = load float, float* %arrayidx4, align 4, !dbg !14869
  %11 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14870
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %11, i32 0, i32 3, !dbg !14871
  %12 = load float, float* %ymax, align 4, !dbg !14871
  %cmp5 = fcmp ogt float %10, %12, !dbg !14872
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !14873

if.then6:                                         ; preds = %lor.lhs.false, %if.then
  store i8 0, i8* %retval, align 1, !dbg !14874
  br label %return, !dbg !14874

if.end:                                           ; preds = %lor.lhs.false
  %13 = load float*, float** %l1.addr, align 8, !dbg !14876
  %arrayidx7 = getelementptr inbounds float, float* %13, i64 0, !dbg !14876
  %14 = load float, float* %arrayidx7, align 4, !dbg !14876
  %15 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14878
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %15, i32 0, i32 0, !dbg !14879
  %16 = load float, float* %xmin, align 4, !dbg !14879
  %cmp8 = fcmp olt float %14, %16, !dbg !14880
  br i1 %cmp8, label %land.lhs.true, label %lor.lhs.false12, !dbg !14881

land.lhs.true:                                    ; preds = %if.end
  %17 = load float*, float** %l2.addr, align 8, !dbg !14882
  %arrayidx9 = getelementptr inbounds float, float* %17, i64 0, !dbg !14882
  %18 = load float, float* %arrayidx9, align 4, !dbg !14882
  %19 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14883
  %xmin10 = getelementptr inbounds %struct.rctf, %struct.rctf* %19, i32 0, i32 0, !dbg !14884
  %20 = load float, float* %xmin10, align 4, !dbg !14884
  %cmp11 = fcmp olt float %18, %20, !dbg !14885
  br i1 %cmp11, label %if.then19, label %lor.lhs.false12, !dbg !14886

lor.lhs.false12:                                  ; preds = %land.lhs.true, %if.end
  %21 = load float*, float** %l1.addr, align 8, !dbg !14887
  %arrayidx13 = getelementptr inbounds float, float* %21, i64 0, !dbg !14887
  %22 = load float, float* %arrayidx13, align 4, !dbg !14887
  %23 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14888
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %23, i32 0, i32 1, !dbg !14889
  %24 = load float, float* %xmax, align 4, !dbg !14889
  %cmp14 = fcmp ogt float %22, %24, !dbg !14890
  br i1 %cmp14, label %land.lhs.true15, label %if.end20, !dbg !14891

land.lhs.true15:                                  ; preds = %lor.lhs.false12
  %25 = load float*, float** %l2.addr, align 8, !dbg !14892
  %arrayidx16 = getelementptr inbounds float, float* %25, i64 0, !dbg !14892
  %26 = load float, float* %arrayidx16, align 4, !dbg !14892
  %27 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14893
  %xmax17 = getelementptr inbounds %struct.rctf, %struct.rctf* %27, i32 0, i32 1, !dbg !14894
  %28 = load float, float* %xmax17, align 4, !dbg !14894
  %cmp18 = fcmp ogt float %26, %28, !dbg !14895
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !14896

if.then19:                                        ; preds = %land.lhs.true15, %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !14897
  br label %return, !dbg !14897

if.end20:                                         ; preds = %land.lhs.true15, %lor.lhs.false12
  %29 = load float*, float** %l1.addr, align 8, !dbg !14899
  %arrayidx21 = getelementptr inbounds float, float* %29, i64 0, !dbg !14899
  %30 = load float, float* %arrayidx21, align 4, !dbg !14899
  %31 = load float*, float** %l2.addr, align 8, !dbg !14901
  %arrayidx22 = getelementptr inbounds float, float* %31, i64 0, !dbg !14901
  %32 = load float, float* %arrayidx22, align 4, !dbg !14901
  %sub23 = fsub float %30, %32, !dbg !14902
  %33 = call float @llvm.fabs.f32(float %sub23), !dbg !14903
  %cmp24 = fcmp olt float %33, 0x3F489374C0000000, !dbg !14904
  br i1 %cmp24, label %if.then25, label %if.end27, !dbg !14905

if.then25:                                        ; preds = %if.end20
  %34 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14906
  %35 = load float*, float** %l1.addr, align 8, !dbg !14909
  %call = call zeroext i8 @BLI_rctf_isect_pt_v(%struct.rctf* %34, float* %35), !dbg !14910
  %tobool = icmp ne i8 %call, 0, !dbg !14910
  br i1 %tobool, label %if.then26, label %if.else, !dbg !14911

if.then26:                                        ; preds = %if.then25
  %36 = load float*, float** %l1_clip.addr, align 8, !dbg !14912
  %37 = load float*, float** %l1.addr, align 8, !dbg !14914
  call void @copy_v2_v2(float* %36, float* %37), !dbg !14915
  %38 = load float*, float** %l2_clip.addr, align 8, !dbg !14916
  %39 = load float*, float** %l2.addr, align 8, !dbg !14917
  call void @copy_v2_v2(float* %38, float* %39), !dbg !14918
  store i8 1, i8* %retval, align 1, !dbg !14919
  br label %return, !dbg !14919

if.else:                                          ; preds = %if.then25
  store i8 0, i8* %retval, align 1, !dbg !14920
  br label %return, !dbg !14920

if.end27:                                         ; preds = %if.end20
  %40 = load float*, float** %l1_clip.addr, align 8, !dbg !14922
  %41 = load float*, float** %l1.addr, align 8, !dbg !14923
  call void @copy_v2_v2(float* %40, float* %41), !dbg !14924
  %42 = load float*, float** %l2_clip.addr, align 8, !dbg !14925
  %43 = load float*, float** %l2.addr, align 8, !dbg !14926
  call void @copy_v2_v2(float* %42, float* %43), !dbg !14927
  %44 = load float*, float** %l1_clip.addr, align 8, !dbg !14928
  %arrayidx28 = getelementptr inbounds float, float* %44, i64 0, !dbg !14928
  %45 = load float, float* %arrayidx28, align 4, !dbg !14928
  %46 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14928
  %xmin29 = getelementptr inbounds %struct.rctf, %struct.rctf* %46, i32 0, i32 0, !dbg !14928
  %47 = load float, float* %xmin29, align 4, !dbg !14928
  %cmp30 = fcmp olt float %45, %47, !dbg !14928
  br i1 %cmp30, label %if.then31, label %if.else34, !dbg !14931

if.then31:                                        ; preds = %if.end27
  %48 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14928
  %xmin32 = getelementptr inbounds %struct.rctf, %struct.rctf* %48, i32 0, i32 0, !dbg !14928
  %49 = load float, float* %xmin32, align 4, !dbg !14928
  %50 = load float*, float** %l1_clip.addr, align 8, !dbg !14928
  %arrayidx33 = getelementptr inbounds float, float* %50, i64 0, !dbg !14928
  store float %49, float* %arrayidx33, align 4, !dbg !14928
  br label %if.end42, !dbg !14928

if.else34:                                        ; preds = %if.end27
  %51 = load float*, float** %l1_clip.addr, align 8, !dbg !14932
  %arrayidx35 = getelementptr inbounds float, float* %51, i64 0, !dbg !14932
  %52 = load float, float* %arrayidx35, align 4, !dbg !14932
  %53 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14932
  %xmax36 = getelementptr inbounds %struct.rctf, %struct.rctf* %53, i32 0, i32 1, !dbg !14932
  %54 = load float, float* %xmax36, align 4, !dbg !14932
  %cmp37 = fcmp ogt float %52, %54, !dbg !14932
  br i1 %cmp37, label %if.then38, label %if.end41, !dbg !14928

if.then38:                                        ; preds = %if.else34
  %55 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14932
  %xmax39 = getelementptr inbounds %struct.rctf, %struct.rctf* %55, i32 0, i32 1, !dbg !14932
  %56 = load float, float* %xmax39, align 4, !dbg !14932
  %57 = load float*, float** %l1_clip.addr, align 8, !dbg !14932
  %arrayidx40 = getelementptr inbounds float, float* %57, i64 0, !dbg !14932
  store float %56, float* %arrayidx40, align 4, !dbg !14932
  br label %if.end41, !dbg !14932

if.end41:                                         ; preds = %if.then38, %if.else34
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then31
  %58 = load float*, float** %l2_clip.addr, align 8, !dbg !14934
  %arrayidx43 = getelementptr inbounds float, float* %58, i64 0, !dbg !14934
  %59 = load float, float* %arrayidx43, align 4, !dbg !14934
  %60 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14934
  %xmin44 = getelementptr inbounds %struct.rctf, %struct.rctf* %60, i32 0, i32 0, !dbg !14934
  %61 = load float, float* %xmin44, align 4, !dbg !14934
  %cmp45 = fcmp olt float %59, %61, !dbg !14934
  br i1 %cmp45, label %if.then46, label %if.else49, !dbg !14937

if.then46:                                        ; preds = %if.end42
  %62 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14934
  %xmin47 = getelementptr inbounds %struct.rctf, %struct.rctf* %62, i32 0, i32 0, !dbg !14934
  %63 = load float, float* %xmin47, align 4, !dbg !14934
  %64 = load float*, float** %l2_clip.addr, align 8, !dbg !14934
  %arrayidx48 = getelementptr inbounds float, float* %64, i64 0, !dbg !14934
  store float %63, float* %arrayidx48, align 4, !dbg !14934
  br label %if.end57, !dbg !14934

if.else49:                                        ; preds = %if.end42
  %65 = load float*, float** %l2_clip.addr, align 8, !dbg !14938
  %arrayidx50 = getelementptr inbounds float, float* %65, i64 0, !dbg !14938
  %66 = load float, float* %arrayidx50, align 4, !dbg !14938
  %67 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14938
  %xmax51 = getelementptr inbounds %struct.rctf, %struct.rctf* %67, i32 0, i32 1, !dbg !14938
  %68 = load float, float* %xmax51, align 4, !dbg !14938
  %cmp52 = fcmp ogt float %66, %68, !dbg !14938
  br i1 %cmp52, label %if.then53, label %if.end56, !dbg !14934

if.then53:                                        ; preds = %if.else49
  %69 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14938
  %xmax54 = getelementptr inbounds %struct.rctf, %struct.rctf* %69, i32 0, i32 1, !dbg !14938
  %70 = load float, float* %xmax54, align 4, !dbg !14938
  %71 = load float*, float** %l2_clip.addr, align 8, !dbg !14938
  %arrayidx55 = getelementptr inbounds float, float* %71, i64 0, !dbg !14938
  store float %70, float* %arrayidx55, align 4, !dbg !14938
  br label %if.end56, !dbg !14938

if.end56:                                         ; preds = %if.then53, %if.else49
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then46
  store i8 1, i8* %retval, align 1, !dbg !14940
  br label %return, !dbg !14940

if.else58:                                        ; preds = %entry
  %72 = load float*, float** %l1.addr, align 8, !dbg !14941
  %arrayidx59 = getelementptr inbounds float, float* %72, i64 0, !dbg !14941
  %73 = load float, float* %arrayidx59, align 4, !dbg !14941
  %74 = load float*, float** %l2.addr, align 8, !dbg !14943
  %arrayidx60 = getelementptr inbounds float, float* %74, i64 0, !dbg !14943
  %75 = load float, float* %arrayidx60, align 4, !dbg !14943
  %sub61 = fsub float %73, %75, !dbg !14944
  %76 = call float @llvm.fabs.f32(float %sub61), !dbg !14945
  %cmp62 = fcmp olt float %76, 0x3F489374C0000000, !dbg !14946
  br i1 %cmp62, label %if.then63, label %if.else130, !dbg !14947

if.then63:                                        ; preds = %if.else58
  %77 = load float*, float** %l1.addr, align 8, !dbg !14948
  %arrayidx64 = getelementptr inbounds float, float* %77, i64 0, !dbg !14948
  %78 = load float, float* %arrayidx64, align 4, !dbg !14948
  %79 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14951
  %xmin65 = getelementptr inbounds %struct.rctf, %struct.rctf* %79, i32 0, i32 0, !dbg !14952
  %80 = load float, float* %xmin65, align 4, !dbg !14952
  %cmp66 = fcmp olt float %78, %80, !dbg !14953
  br i1 %cmp66, label %if.then71, label %lor.lhs.false67, !dbg !14954

lor.lhs.false67:                                  ; preds = %if.then63
  %81 = load float*, float** %l1.addr, align 8, !dbg !14955
  %arrayidx68 = getelementptr inbounds float, float* %81, i64 0, !dbg !14955
  %82 = load float, float* %arrayidx68, align 4, !dbg !14955
  %83 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14956
  %xmax69 = getelementptr inbounds %struct.rctf, %struct.rctf* %83, i32 0, i32 1, !dbg !14957
  %84 = load float, float* %xmax69, align 4, !dbg !14957
  %cmp70 = fcmp ogt float %82, %84, !dbg !14958
  br i1 %cmp70, label %if.then71, label %if.end72, !dbg !14959

if.then71:                                        ; preds = %lor.lhs.false67, %if.then63
  store i8 0, i8* %retval, align 1, !dbg !14960
  br label %return, !dbg !14960

if.end72:                                         ; preds = %lor.lhs.false67
  %85 = load float*, float** %l1.addr, align 8, !dbg !14962
  %arrayidx73 = getelementptr inbounds float, float* %85, i64 1, !dbg !14962
  %86 = load float, float* %arrayidx73, align 4, !dbg !14962
  %87 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14964
  %ymin74 = getelementptr inbounds %struct.rctf, %struct.rctf* %87, i32 0, i32 2, !dbg !14965
  %88 = load float, float* %ymin74, align 4, !dbg !14965
  %cmp75 = fcmp olt float %86, %88, !dbg !14966
  br i1 %cmp75, label %land.lhs.true76, label %lor.lhs.false80, !dbg !14967

land.lhs.true76:                                  ; preds = %if.end72
  %89 = load float*, float** %l2.addr, align 8, !dbg !14968
  %arrayidx77 = getelementptr inbounds float, float* %89, i64 1, !dbg !14968
  %90 = load float, float* %arrayidx77, align 4, !dbg !14968
  %91 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14969
  %ymin78 = getelementptr inbounds %struct.rctf, %struct.rctf* %91, i32 0, i32 2, !dbg !14970
  %92 = load float, float* %ymin78, align 4, !dbg !14970
  %cmp79 = fcmp olt float %90, %92, !dbg !14971
  br i1 %cmp79, label %if.then88, label %lor.lhs.false80, !dbg !14972

lor.lhs.false80:                                  ; preds = %land.lhs.true76, %if.end72
  %93 = load float*, float** %l1.addr, align 8, !dbg !14973
  %arrayidx81 = getelementptr inbounds float, float* %93, i64 1, !dbg !14973
  %94 = load float, float* %arrayidx81, align 4, !dbg !14973
  %95 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14974
  %ymax82 = getelementptr inbounds %struct.rctf, %struct.rctf* %95, i32 0, i32 3, !dbg !14975
  %96 = load float, float* %ymax82, align 4, !dbg !14975
  %cmp83 = fcmp ogt float %94, %96, !dbg !14976
  br i1 %cmp83, label %land.lhs.true84, label %if.end89, !dbg !14977

land.lhs.true84:                                  ; preds = %lor.lhs.false80
  %97 = load float*, float** %l2.addr, align 8, !dbg !14978
  %arrayidx85 = getelementptr inbounds float, float* %97, i64 1, !dbg !14978
  %98 = load float, float* %arrayidx85, align 4, !dbg !14978
  %99 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14979
  %ymax86 = getelementptr inbounds %struct.rctf, %struct.rctf* %99, i32 0, i32 3, !dbg !14980
  %100 = load float, float* %ymax86, align 4, !dbg !14980
  %cmp87 = fcmp ogt float %98, %100, !dbg !14981
  br i1 %cmp87, label %if.then88, label %if.end89, !dbg !14982

if.then88:                                        ; preds = %land.lhs.true84, %land.lhs.true76
  store i8 0, i8* %retval, align 1, !dbg !14983
  br label %return, !dbg !14983

if.end89:                                         ; preds = %land.lhs.true84, %lor.lhs.false80
  %101 = load float*, float** %l1.addr, align 8, !dbg !14985
  %arrayidx90 = getelementptr inbounds float, float* %101, i64 1, !dbg !14985
  %102 = load float, float* %arrayidx90, align 4, !dbg !14985
  %103 = load float*, float** %l2.addr, align 8, !dbg !14987
  %arrayidx91 = getelementptr inbounds float, float* %103, i64 1, !dbg !14987
  %104 = load float, float* %arrayidx91, align 4, !dbg !14987
  %sub92 = fsub float %102, %104, !dbg !14988
  %105 = call float @llvm.fabs.f32(float %sub92), !dbg !14989
  %cmp93 = fcmp olt float %105, 0x3F489374C0000000, !dbg !14990
  br i1 %cmp93, label %if.then94, label %if.end99, !dbg !14991

if.then94:                                        ; preds = %if.end89
  %106 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !14992
  %107 = load float*, float** %l1.addr, align 8, !dbg !14995
  %call95 = call zeroext i8 @BLI_rctf_isect_pt_v(%struct.rctf* %106, float* %107), !dbg !14996
  %tobool96 = icmp ne i8 %call95, 0, !dbg !14996
  br i1 %tobool96, label %if.then97, label %if.else98, !dbg !14997

if.then97:                                        ; preds = %if.then94
  %108 = load float*, float** %l1_clip.addr, align 8, !dbg !14998
  %109 = load float*, float** %l1.addr, align 8, !dbg !15000
  call void @copy_v2_v2(float* %108, float* %109), !dbg !15001
  %110 = load float*, float** %l2_clip.addr, align 8, !dbg !15002
  %111 = load float*, float** %l2.addr, align 8, !dbg !15003
  call void @copy_v2_v2(float* %110, float* %111), !dbg !15004
  store i8 1, i8* %retval, align 1, !dbg !15005
  br label %return, !dbg !15005

if.else98:                                        ; preds = %if.then94
  store i8 0, i8* %retval, align 1, !dbg !15006
  br label %return, !dbg !15006

if.end99:                                         ; preds = %if.end89
  %112 = load float*, float** %l1_clip.addr, align 8, !dbg !15008
  %113 = load float*, float** %l1.addr, align 8, !dbg !15009
  call void @copy_v2_v2(float* %112, float* %113), !dbg !15010
  %114 = load float*, float** %l2_clip.addr, align 8, !dbg !15011
  %115 = load float*, float** %l2.addr, align 8, !dbg !15012
  call void @copy_v2_v2(float* %114, float* %115), !dbg !15013
  %116 = load float*, float** %l1_clip.addr, align 8, !dbg !15014
  %arrayidx100 = getelementptr inbounds float, float* %116, i64 1, !dbg !15014
  %117 = load float, float* %arrayidx100, align 4, !dbg !15014
  %118 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15014
  %ymin101 = getelementptr inbounds %struct.rctf, %struct.rctf* %118, i32 0, i32 2, !dbg !15014
  %119 = load float, float* %ymin101, align 4, !dbg !15014
  %cmp102 = fcmp olt float %117, %119, !dbg !15014
  br i1 %cmp102, label %if.then103, label %if.else106, !dbg !15017

if.then103:                                       ; preds = %if.end99
  %120 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15014
  %ymin104 = getelementptr inbounds %struct.rctf, %struct.rctf* %120, i32 0, i32 2, !dbg !15014
  %121 = load float, float* %ymin104, align 4, !dbg !15014
  %122 = load float*, float** %l1_clip.addr, align 8, !dbg !15014
  %arrayidx105 = getelementptr inbounds float, float* %122, i64 1, !dbg !15014
  store float %121, float* %arrayidx105, align 4, !dbg !15014
  br label %if.end114, !dbg !15014

if.else106:                                       ; preds = %if.end99
  %123 = load float*, float** %l1_clip.addr, align 8, !dbg !15018
  %arrayidx107 = getelementptr inbounds float, float* %123, i64 1, !dbg !15018
  %124 = load float, float* %arrayidx107, align 4, !dbg !15018
  %125 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15018
  %ymax108 = getelementptr inbounds %struct.rctf, %struct.rctf* %125, i32 0, i32 3, !dbg !15018
  %126 = load float, float* %ymax108, align 4, !dbg !15018
  %cmp109 = fcmp ogt float %124, %126, !dbg !15018
  br i1 %cmp109, label %if.then110, label %if.end113, !dbg !15014

if.then110:                                       ; preds = %if.else106
  %127 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15018
  %ymax111 = getelementptr inbounds %struct.rctf, %struct.rctf* %127, i32 0, i32 3, !dbg !15018
  %128 = load float, float* %ymax111, align 4, !dbg !15018
  %129 = load float*, float** %l1_clip.addr, align 8, !dbg !15018
  %arrayidx112 = getelementptr inbounds float, float* %129, i64 1, !dbg !15018
  store float %128, float* %arrayidx112, align 4, !dbg !15018
  br label %if.end113, !dbg !15018

if.end113:                                        ; preds = %if.then110, %if.else106
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.then103
  %130 = load float*, float** %l2_clip.addr, align 8, !dbg !15020
  %arrayidx115 = getelementptr inbounds float, float* %130, i64 1, !dbg !15020
  %131 = load float, float* %arrayidx115, align 4, !dbg !15020
  %132 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15020
  %ymin116 = getelementptr inbounds %struct.rctf, %struct.rctf* %132, i32 0, i32 2, !dbg !15020
  %133 = load float, float* %ymin116, align 4, !dbg !15020
  %cmp117 = fcmp olt float %131, %133, !dbg !15020
  br i1 %cmp117, label %if.then118, label %if.else121, !dbg !15023

if.then118:                                       ; preds = %if.end114
  %134 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15020
  %ymin119 = getelementptr inbounds %struct.rctf, %struct.rctf* %134, i32 0, i32 2, !dbg !15020
  %135 = load float, float* %ymin119, align 4, !dbg !15020
  %136 = load float*, float** %l2_clip.addr, align 8, !dbg !15020
  %arrayidx120 = getelementptr inbounds float, float* %136, i64 1, !dbg !15020
  store float %135, float* %arrayidx120, align 4, !dbg !15020
  br label %if.end129, !dbg !15020

if.else121:                                       ; preds = %if.end114
  %137 = load float*, float** %l2_clip.addr, align 8, !dbg !15024
  %arrayidx122 = getelementptr inbounds float, float* %137, i64 1, !dbg !15024
  %138 = load float, float* %arrayidx122, align 4, !dbg !15024
  %139 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15024
  %ymax123 = getelementptr inbounds %struct.rctf, %struct.rctf* %139, i32 0, i32 3, !dbg !15024
  %140 = load float, float* %ymax123, align 4, !dbg !15024
  %cmp124 = fcmp ogt float %138, %140, !dbg !15024
  br i1 %cmp124, label %if.then125, label %if.end128, !dbg !15020

if.then125:                                       ; preds = %if.else121
  %141 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15024
  %ymax126 = getelementptr inbounds %struct.rctf, %struct.rctf* %141, i32 0, i32 3, !dbg !15024
  %142 = load float, float* %ymax126, align 4, !dbg !15024
  %143 = load float*, float** %l2_clip.addr, align 8, !dbg !15024
  %arrayidx127 = getelementptr inbounds float, float* %143, i64 1, !dbg !15024
  store float %142, float* %arrayidx127, align 4, !dbg !15024
  br label %if.end128, !dbg !15024

if.end128:                                        ; preds = %if.then125, %if.else121
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.then118
  store i8 1, i8* %retval, align 1, !dbg !15026
  br label %return, !dbg !15026

if.else130:                                       ; preds = %if.else58
  call void @llvm.dbg.declare(metadata float* %isect, metadata !15027, metadata !DIExpression()), !dbg !15029
  call void @llvm.dbg.declare(metadata i16* %ok1, metadata !15030, metadata !DIExpression()), !dbg !15031
  store i16 0, i16* %ok1, align 2, !dbg !15031
  call void @llvm.dbg.declare(metadata i16* %ok2, metadata !15032, metadata !DIExpression()), !dbg !15033
  store i16 0, i16* %ok2, align 2, !dbg !15033
  %144 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15034
  %145 = load float*, float** %l1.addr, align 8, !dbg !15036
  %call131 = call zeroext i8 @BLI_rctf_isect_pt_v(%struct.rctf* %144, float* %145), !dbg !15037
  %tobool132 = icmp ne i8 %call131, 0, !dbg !15037
  br i1 %tobool132, label %if.then133, label %if.end134, !dbg !15038

if.then133:                                       ; preds = %if.else130
  %146 = load float*, float** %l1_clip.addr, align 8, !dbg !15039
  %147 = load float*, float** %l1.addr, align 8, !dbg !15041
  call void @copy_v2_v2(float* %146, float* %147), !dbg !15042
  store i16 1, i16* %ok1, align 2, !dbg !15043
  br label %if.end134, !dbg !15044

if.end134:                                        ; preds = %if.then133, %if.else130
  %148 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15045
  %149 = load float*, float** %l2.addr, align 8, !dbg !15047
  %call135 = call zeroext i8 @BLI_rctf_isect_pt_v(%struct.rctf* %148, float* %149), !dbg !15048
  %tobool136 = icmp ne i8 %call135, 0, !dbg !15048
  br i1 %tobool136, label %if.then137, label %if.end138, !dbg !15049

if.then137:                                       ; preds = %if.end134
  %150 = load float*, float** %l2_clip.addr, align 8, !dbg !15050
  %151 = load float*, float** %l2.addr, align 8, !dbg !15052
  call void @copy_v2_v2(float* %150, float* %151), !dbg !15053
  store i16 1, i16* %ok2, align 2, !dbg !15054
  br label %if.end138, !dbg !15055

if.end138:                                        ; preds = %if.then137, %if.end134
  %152 = load i16, i16* %ok1, align 2, !dbg !15056
  %conv = sext i16 %152 to i32, !dbg !15056
  %tobool139 = icmp ne i32 %conv, 0, !dbg !15056
  br i1 %tobool139, label %land.lhs.true140, label %if.end144, !dbg !15058

land.lhs.true140:                                 ; preds = %if.end138
  %153 = load i16, i16* %ok2, align 2, !dbg !15059
  %conv141 = sext i16 %153 to i32, !dbg !15059
  %tobool142 = icmp ne i32 %conv141, 0, !dbg !15059
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !15060

if.then143:                                       ; preds = %land.lhs.true140
  store i8 1, i8* %retval, align 1, !dbg !15061
  br label %return, !dbg !15061

if.end144:                                        ; preds = %land.lhs.true140, %if.end138
  %154 = load float*, float** %l1.addr, align 8, !dbg !15062
  %155 = load float*, float** %l2.addr, align 8, !dbg !15064
  %156 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15065
  %ymin145 = getelementptr inbounds %struct.rctf, %struct.rctf* %156, i32 0, i32 2, !dbg !15066
  %157 = load float, float* %ymin145, align 4, !dbg !15066
  %call146 = call i32 @line_isect_y(float* %154, float* %155, float %157, float* %isect), !dbg !15067
  %tobool147 = icmp ne i32 %call146, 0, !dbg !15067
  br i1 %tobool147, label %land.lhs.true148, label %if.end170, !dbg !15068

land.lhs.true148:                                 ; preds = %if.end144
  %158 = load float, float* %isect, align 4, !dbg !15069
  %159 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15070
  %xmin149 = getelementptr inbounds %struct.rctf, %struct.rctf* %159, i32 0, i32 0, !dbg !15071
  %160 = load float, float* %xmin149, align 4, !dbg !15071
  %cmp150 = fcmp oge float %158, %160, !dbg !15072
  br i1 %cmp150, label %land.lhs.true152, label %if.end170, !dbg !15073

land.lhs.true152:                                 ; preds = %land.lhs.true148
  %161 = load float, float* %isect, align 4, !dbg !15074
  %162 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15075
  %xmax153 = getelementptr inbounds %struct.rctf, %struct.rctf* %162, i32 0, i32 1, !dbg !15076
  %163 = load float, float* %xmax153, align 4, !dbg !15076
  %cmp154 = fcmp ole float %161, %163, !dbg !15077
  br i1 %cmp154, label %if.then156, label %if.end170, !dbg !15078

if.then156:                                       ; preds = %land.lhs.true152
  %164 = load float*, float** %l1.addr, align 8, !dbg !15079
  %arrayidx157 = getelementptr inbounds float, float* %164, i64 1, !dbg !15079
  %165 = load float, float* %arrayidx157, align 4, !dbg !15079
  %166 = load float*, float** %l2.addr, align 8, !dbg !15082
  %arrayidx158 = getelementptr inbounds float, float* %166, i64 1, !dbg !15082
  %167 = load float, float* %arrayidx158, align 4, !dbg !15082
  %cmp159 = fcmp olt float %165, %167, !dbg !15083
  br i1 %cmp159, label %if.then161, label %if.else165, !dbg !15084

if.then161:                                       ; preds = %if.then156
  %168 = load float, float* %isect, align 4, !dbg !15085
  %169 = load float*, float** %l1_clip.addr, align 8, !dbg !15087
  %arrayidx162 = getelementptr inbounds float, float* %169, i64 0, !dbg !15087
  store float %168, float* %arrayidx162, align 4, !dbg !15088
  %170 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15089
  %ymin163 = getelementptr inbounds %struct.rctf, %struct.rctf* %170, i32 0, i32 2, !dbg !15090
  %171 = load float, float* %ymin163, align 4, !dbg !15090
  %172 = load float*, float** %l1_clip.addr, align 8, !dbg !15091
  %arrayidx164 = getelementptr inbounds float, float* %172, i64 1, !dbg !15091
  store float %171, float* %arrayidx164, align 4, !dbg !15092
  store i16 1, i16* %ok1, align 2, !dbg !15093
  br label %if.end169, !dbg !15094

if.else165:                                       ; preds = %if.then156
  %173 = load float, float* %isect, align 4, !dbg !15095
  %174 = load float*, float** %l2_clip.addr, align 8, !dbg !15097
  %arrayidx166 = getelementptr inbounds float, float* %174, i64 0, !dbg !15097
  store float %173, float* %arrayidx166, align 4, !dbg !15098
  %175 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15099
  %ymin167 = getelementptr inbounds %struct.rctf, %struct.rctf* %175, i32 0, i32 2, !dbg !15100
  %176 = load float, float* %ymin167, align 4, !dbg !15100
  %177 = load float*, float** %l2_clip.addr, align 8, !dbg !15101
  %arrayidx168 = getelementptr inbounds float, float* %177, i64 1, !dbg !15101
  store float %176, float* %arrayidx168, align 4, !dbg !15102
  store i16 2, i16* %ok2, align 2, !dbg !15103
  br label %if.end169

if.end169:                                        ; preds = %if.else165, %if.then161
  br label %if.end170, !dbg !15104

if.end170:                                        ; preds = %if.end169, %land.lhs.true152, %land.lhs.true148, %if.end144
  %178 = load i16, i16* %ok1, align 2, !dbg !15105
  %conv171 = sext i16 %178 to i32, !dbg !15105
  %tobool172 = icmp ne i32 %conv171, 0, !dbg !15105
  br i1 %tobool172, label %land.lhs.true173, label %if.end177, !dbg !15107

land.lhs.true173:                                 ; preds = %if.end170
  %179 = load i16, i16* %ok2, align 2, !dbg !15108
  %conv174 = sext i16 %179 to i32, !dbg !15108
  %tobool175 = icmp ne i32 %conv174, 0, !dbg !15108
  br i1 %tobool175, label %if.then176, label %if.end177, !dbg !15109

if.then176:                                       ; preds = %land.lhs.true173
  store i8 1, i8* %retval, align 1, !dbg !15110
  br label %return, !dbg !15110

if.end177:                                        ; preds = %land.lhs.true173, %if.end170
  %180 = load float*, float** %l1.addr, align 8, !dbg !15111
  %181 = load float*, float** %l2.addr, align 8, !dbg !15113
  %182 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15114
  %ymax178 = getelementptr inbounds %struct.rctf, %struct.rctf* %182, i32 0, i32 3, !dbg !15115
  %183 = load float, float* %ymax178, align 4, !dbg !15115
  %call179 = call i32 @line_isect_y(float* %180, float* %181, float %183, float* %isect), !dbg !15116
  %tobool180 = icmp ne i32 %call179, 0, !dbg !15116
  br i1 %tobool180, label %land.lhs.true181, label %if.end203, !dbg !15117

land.lhs.true181:                                 ; preds = %if.end177
  %184 = load float, float* %isect, align 4, !dbg !15118
  %185 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15119
  %xmin182 = getelementptr inbounds %struct.rctf, %struct.rctf* %185, i32 0, i32 0, !dbg !15120
  %186 = load float, float* %xmin182, align 4, !dbg !15120
  %cmp183 = fcmp oge float %184, %186, !dbg !15121
  br i1 %cmp183, label %land.lhs.true185, label %if.end203, !dbg !15122

land.lhs.true185:                                 ; preds = %land.lhs.true181
  %187 = load float, float* %isect, align 4, !dbg !15123
  %188 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15124
  %xmax186 = getelementptr inbounds %struct.rctf, %struct.rctf* %188, i32 0, i32 1, !dbg !15125
  %189 = load float, float* %xmax186, align 4, !dbg !15125
  %cmp187 = fcmp ole float %187, %189, !dbg !15126
  br i1 %cmp187, label %if.then189, label %if.end203, !dbg !15127

if.then189:                                       ; preds = %land.lhs.true185
  %190 = load float*, float** %l1.addr, align 8, !dbg !15128
  %arrayidx190 = getelementptr inbounds float, float* %190, i64 1, !dbg !15128
  %191 = load float, float* %arrayidx190, align 4, !dbg !15128
  %192 = load float*, float** %l2.addr, align 8, !dbg !15131
  %arrayidx191 = getelementptr inbounds float, float* %192, i64 1, !dbg !15131
  %193 = load float, float* %arrayidx191, align 4, !dbg !15131
  %cmp192 = fcmp ogt float %191, %193, !dbg !15132
  br i1 %cmp192, label %if.then194, label %if.else198, !dbg !15133

if.then194:                                       ; preds = %if.then189
  %194 = load float, float* %isect, align 4, !dbg !15134
  %195 = load float*, float** %l1_clip.addr, align 8, !dbg !15136
  %arrayidx195 = getelementptr inbounds float, float* %195, i64 0, !dbg !15136
  store float %194, float* %arrayidx195, align 4, !dbg !15137
  %196 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15138
  %ymax196 = getelementptr inbounds %struct.rctf, %struct.rctf* %196, i32 0, i32 3, !dbg !15139
  %197 = load float, float* %ymax196, align 4, !dbg !15139
  %198 = load float*, float** %l1_clip.addr, align 8, !dbg !15140
  %arrayidx197 = getelementptr inbounds float, float* %198, i64 1, !dbg !15140
  store float %197, float* %arrayidx197, align 4, !dbg !15141
  store i16 1, i16* %ok1, align 2, !dbg !15142
  br label %if.end202, !dbg !15143

if.else198:                                       ; preds = %if.then189
  %199 = load float, float* %isect, align 4, !dbg !15144
  %200 = load float*, float** %l2_clip.addr, align 8, !dbg !15146
  %arrayidx199 = getelementptr inbounds float, float* %200, i64 0, !dbg !15146
  store float %199, float* %arrayidx199, align 4, !dbg !15147
  %201 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15148
  %ymax200 = getelementptr inbounds %struct.rctf, %struct.rctf* %201, i32 0, i32 3, !dbg !15149
  %202 = load float, float* %ymax200, align 4, !dbg !15149
  %203 = load float*, float** %l2_clip.addr, align 8, !dbg !15150
  %arrayidx201 = getelementptr inbounds float, float* %203, i64 1, !dbg !15150
  store float %202, float* %arrayidx201, align 4, !dbg !15151
  store i16 2, i16* %ok2, align 2, !dbg !15152
  br label %if.end202

if.end202:                                        ; preds = %if.else198, %if.then194
  br label %if.end203, !dbg !15153

if.end203:                                        ; preds = %if.end202, %land.lhs.true185, %land.lhs.true181, %if.end177
  %204 = load i16, i16* %ok1, align 2, !dbg !15154
  %conv204 = sext i16 %204 to i32, !dbg !15154
  %tobool205 = icmp ne i32 %conv204, 0, !dbg !15154
  br i1 %tobool205, label %land.lhs.true206, label %if.end210, !dbg !15156

land.lhs.true206:                                 ; preds = %if.end203
  %205 = load i16, i16* %ok2, align 2, !dbg !15157
  %conv207 = sext i16 %205 to i32, !dbg !15157
  %tobool208 = icmp ne i32 %conv207, 0, !dbg !15157
  br i1 %tobool208, label %if.then209, label %if.end210, !dbg !15158

if.then209:                                       ; preds = %land.lhs.true206
  store i8 1, i8* %retval, align 1, !dbg !15159
  br label %return, !dbg !15159

if.end210:                                        ; preds = %land.lhs.true206, %if.end203
  %206 = load float*, float** %l1.addr, align 8, !dbg !15160
  %207 = load float*, float** %l2.addr, align 8, !dbg !15162
  %208 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15163
  %xmin211 = getelementptr inbounds %struct.rctf, %struct.rctf* %208, i32 0, i32 0, !dbg !15164
  %209 = load float, float* %xmin211, align 4, !dbg !15164
  %call212 = call i32 @line_isect_x(float* %206, float* %207, float %209, float* %isect), !dbg !15165
  %tobool213 = icmp ne i32 %call212, 0, !dbg !15165
  br i1 %tobool213, label %land.lhs.true214, label %if.end236, !dbg !15166

land.lhs.true214:                                 ; preds = %if.end210
  %210 = load float, float* %isect, align 4, !dbg !15167
  %211 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15168
  %ymin215 = getelementptr inbounds %struct.rctf, %struct.rctf* %211, i32 0, i32 2, !dbg !15169
  %212 = load float, float* %ymin215, align 4, !dbg !15169
  %cmp216 = fcmp oge float %210, %212, !dbg !15170
  br i1 %cmp216, label %land.lhs.true218, label %if.end236, !dbg !15171

land.lhs.true218:                                 ; preds = %land.lhs.true214
  %213 = load float, float* %isect, align 4, !dbg !15172
  %214 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15173
  %ymax219 = getelementptr inbounds %struct.rctf, %struct.rctf* %214, i32 0, i32 3, !dbg !15174
  %215 = load float, float* %ymax219, align 4, !dbg !15174
  %cmp220 = fcmp ole float %213, %215, !dbg !15175
  br i1 %cmp220, label %if.then222, label %if.end236, !dbg !15176

if.then222:                                       ; preds = %land.lhs.true218
  %216 = load float*, float** %l1.addr, align 8, !dbg !15177
  %arrayidx223 = getelementptr inbounds float, float* %216, i64 0, !dbg !15177
  %217 = load float, float* %arrayidx223, align 4, !dbg !15177
  %218 = load float*, float** %l2.addr, align 8, !dbg !15180
  %arrayidx224 = getelementptr inbounds float, float* %218, i64 0, !dbg !15180
  %219 = load float, float* %arrayidx224, align 4, !dbg !15180
  %cmp225 = fcmp olt float %217, %219, !dbg !15181
  br i1 %cmp225, label %if.then227, label %if.else231, !dbg !15182

if.then227:                                       ; preds = %if.then222
  %220 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15183
  %xmin228 = getelementptr inbounds %struct.rctf, %struct.rctf* %220, i32 0, i32 0, !dbg !15185
  %221 = load float, float* %xmin228, align 4, !dbg !15185
  %222 = load float*, float** %l1_clip.addr, align 8, !dbg !15186
  %arrayidx229 = getelementptr inbounds float, float* %222, i64 0, !dbg !15186
  store float %221, float* %arrayidx229, align 4, !dbg !15187
  %223 = load float, float* %isect, align 4, !dbg !15188
  %224 = load float*, float** %l1_clip.addr, align 8, !dbg !15189
  %arrayidx230 = getelementptr inbounds float, float* %224, i64 1, !dbg !15189
  store float %223, float* %arrayidx230, align 4, !dbg !15190
  store i16 1, i16* %ok1, align 2, !dbg !15191
  br label %if.end235, !dbg !15192

if.else231:                                       ; preds = %if.then222
  %225 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15193
  %xmin232 = getelementptr inbounds %struct.rctf, %struct.rctf* %225, i32 0, i32 0, !dbg !15195
  %226 = load float, float* %xmin232, align 4, !dbg !15195
  %227 = load float*, float** %l2_clip.addr, align 8, !dbg !15196
  %arrayidx233 = getelementptr inbounds float, float* %227, i64 0, !dbg !15196
  store float %226, float* %arrayidx233, align 4, !dbg !15197
  %228 = load float, float* %isect, align 4, !dbg !15198
  %229 = load float*, float** %l2_clip.addr, align 8, !dbg !15199
  %arrayidx234 = getelementptr inbounds float, float* %229, i64 1, !dbg !15199
  store float %228, float* %arrayidx234, align 4, !dbg !15200
  store i16 2, i16* %ok2, align 2, !dbg !15201
  br label %if.end235

if.end235:                                        ; preds = %if.else231, %if.then227
  br label %if.end236, !dbg !15202

if.end236:                                        ; preds = %if.end235, %land.lhs.true218, %land.lhs.true214, %if.end210
  %230 = load i16, i16* %ok1, align 2, !dbg !15203
  %conv237 = sext i16 %230 to i32, !dbg !15203
  %tobool238 = icmp ne i32 %conv237, 0, !dbg !15203
  br i1 %tobool238, label %land.lhs.true239, label %if.end243, !dbg !15205

land.lhs.true239:                                 ; preds = %if.end236
  %231 = load i16, i16* %ok2, align 2, !dbg !15206
  %conv240 = sext i16 %231 to i32, !dbg !15206
  %tobool241 = icmp ne i32 %conv240, 0, !dbg !15206
  br i1 %tobool241, label %if.then242, label %if.end243, !dbg !15207

if.then242:                                       ; preds = %land.lhs.true239
  store i8 1, i8* %retval, align 1, !dbg !15208
  br label %return, !dbg !15208

if.end243:                                        ; preds = %land.lhs.true239, %if.end236
  %232 = load float*, float** %l1.addr, align 8, !dbg !15209
  %233 = load float*, float** %l2.addr, align 8, !dbg !15211
  %234 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15212
  %xmax244 = getelementptr inbounds %struct.rctf, %struct.rctf* %234, i32 0, i32 1, !dbg !15213
  %235 = load float, float* %xmax244, align 4, !dbg !15213
  %call245 = call i32 @line_isect_x(float* %232, float* %233, float %235, float* %isect), !dbg !15214
  %tobool246 = icmp ne i32 %call245, 0, !dbg !15214
  br i1 %tobool246, label %land.lhs.true247, label %if.end269, !dbg !15215

land.lhs.true247:                                 ; preds = %if.end243
  %236 = load float, float* %isect, align 4, !dbg !15216
  %237 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15217
  %ymin248 = getelementptr inbounds %struct.rctf, %struct.rctf* %237, i32 0, i32 2, !dbg !15218
  %238 = load float, float* %ymin248, align 4, !dbg !15218
  %cmp249 = fcmp oge float %236, %238, !dbg !15219
  br i1 %cmp249, label %land.lhs.true251, label %if.end269, !dbg !15220

land.lhs.true251:                                 ; preds = %land.lhs.true247
  %239 = load float, float* %isect, align 4, !dbg !15221
  %240 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15222
  %ymax252 = getelementptr inbounds %struct.rctf, %struct.rctf* %240, i32 0, i32 3, !dbg !15223
  %241 = load float, float* %ymax252, align 4, !dbg !15223
  %cmp253 = fcmp ole float %239, %241, !dbg !15224
  br i1 %cmp253, label %if.then255, label %if.end269, !dbg !15225

if.then255:                                       ; preds = %land.lhs.true251
  %242 = load float*, float** %l1.addr, align 8, !dbg !15226
  %arrayidx256 = getelementptr inbounds float, float* %242, i64 0, !dbg !15226
  %243 = load float, float* %arrayidx256, align 4, !dbg !15226
  %244 = load float*, float** %l2.addr, align 8, !dbg !15229
  %arrayidx257 = getelementptr inbounds float, float* %244, i64 0, !dbg !15229
  %245 = load float, float* %arrayidx257, align 4, !dbg !15229
  %cmp258 = fcmp ogt float %243, %245, !dbg !15230
  br i1 %cmp258, label %if.then260, label %if.else264, !dbg !15231

if.then260:                                       ; preds = %if.then255
  %246 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15232
  %xmax261 = getelementptr inbounds %struct.rctf, %struct.rctf* %246, i32 0, i32 1, !dbg !15234
  %247 = load float, float* %xmax261, align 4, !dbg !15234
  %248 = load float*, float** %l1_clip.addr, align 8, !dbg !15235
  %arrayidx262 = getelementptr inbounds float, float* %248, i64 0, !dbg !15235
  store float %247, float* %arrayidx262, align 4, !dbg !15236
  %249 = load float, float* %isect, align 4, !dbg !15237
  %250 = load float*, float** %l1_clip.addr, align 8, !dbg !15238
  %arrayidx263 = getelementptr inbounds float, float* %250, i64 1, !dbg !15238
  store float %249, float* %arrayidx263, align 4, !dbg !15239
  store i16 1, i16* %ok1, align 2, !dbg !15240
  br label %if.end268, !dbg !15241

if.else264:                                       ; preds = %if.then255
  %251 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !15242
  %xmax265 = getelementptr inbounds %struct.rctf, %struct.rctf* %251, i32 0, i32 1, !dbg !15244
  %252 = load float, float* %xmax265, align 4, !dbg !15244
  %253 = load float*, float** %l2_clip.addr, align 8, !dbg !15245
  %arrayidx266 = getelementptr inbounds float, float* %253, i64 0, !dbg !15245
  store float %252, float* %arrayidx266, align 4, !dbg !15246
  %254 = load float, float* %isect, align 4, !dbg !15247
  %255 = load float*, float** %l2_clip.addr, align 8, !dbg !15248
  %arrayidx267 = getelementptr inbounds float, float* %255, i64 1, !dbg !15248
  store float %254, float* %arrayidx267, align 4, !dbg !15249
  store i16 2, i16* %ok2, align 2, !dbg !15250
  br label %if.end268

if.end268:                                        ; preds = %if.else264, %if.then260
  br label %if.end269, !dbg !15251

if.end269:                                        ; preds = %if.end268, %land.lhs.true251, %land.lhs.true247, %if.end243
  %256 = load i16, i16* %ok1, align 2, !dbg !15252
  %conv270 = sext i16 %256 to i32, !dbg !15252
  %tobool271 = icmp ne i32 %conv270, 0, !dbg !15252
  br i1 %tobool271, label %land.lhs.true272, label %if.else276, !dbg !15254

land.lhs.true272:                                 ; preds = %if.end269
  %257 = load i16, i16* %ok2, align 2, !dbg !15255
  %conv273 = sext i16 %257 to i32, !dbg !15255
  %tobool274 = icmp ne i32 %conv273, 0, !dbg !15255
  br i1 %tobool274, label %if.then275, label %if.else276, !dbg !15256

if.then275:                                       ; preds = %land.lhs.true272
  store i8 1, i8* %retval, align 1, !dbg !15257
  br label %return, !dbg !15257

if.else276:                                       ; preds = %land.lhs.true272, %if.end269
  store i8 0, i8* %retval, align 1, !dbg !15259
  br label %return, !dbg !15259

return:                                           ; preds = %if.else276, %if.then275, %if.then242, %if.then209, %if.then176, %if.then143, %if.end129, %if.else98, %if.then97, %if.then88, %if.then71, %if.end57, %if.else, %if.then26, %if.then19, %if.then6
  %258 = load i8, i8* %retval, align 1, !dbg !15261
  ret i8 %258, !dbg !15261
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v2v2(float* %v1, float* %v2) #0 !dbg !15262 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %x = alloca float, align 4
  %y = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !15263, metadata !DIExpression()), !dbg !15264
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !15265, metadata !DIExpression()), !dbg !15266
  call void @llvm.dbg.declare(metadata float* %x, metadata !15267, metadata !DIExpression()), !dbg !15268
  call void @llvm.dbg.declare(metadata float* %y, metadata !15269, metadata !DIExpression()), !dbg !15270
  %0 = load float*, float** %v1.addr, align 8, !dbg !15271
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !15271
  %1 = load float, float* %arrayidx, align 4, !dbg !15271
  %2 = load float*, float** %v2.addr, align 8, !dbg !15272
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !15272
  %3 = load float, float* %arrayidx1, align 4, !dbg !15272
  %sub = fsub float %1, %3, !dbg !15273
  store float %sub, float* %x, align 4, !dbg !15274
  %4 = load float*, float** %v1.addr, align 8, !dbg !15275
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !15275
  %5 = load float, float* %arrayidx2, align 4, !dbg !15275
  %6 = load float*, float** %v2.addr, align 8, !dbg !15276
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !15276
  %7 = load float, float* %arrayidx3, align 4, !dbg !15276
  %sub4 = fsub float %5, %7, !dbg !15277
  store float %sub4, float* %y, align 4, !dbg !15278
  %8 = load float, float* %x, align 4, !dbg !15279
  %9 = load float, float* %x, align 4, !dbg !15280
  %mul = fmul float %8, %9, !dbg !15281
  %10 = load float, float* %y, align 4, !dbg !15282
  %11 = load float, float* %y, align 4, !dbg !15283
  %mul5 = fmul float %10, %11, !dbg !15284
  %add = fadd float %mul, %mul5, !dbg !15285
  %call = call float @sqrtf(float %add) #5, !dbg !15286
  ret float %call, !dbg !15287
}

declare dso_local void @interp_v2_v2v2(float*, float*, float*, float) #2

declare dso_local void @interp_v3_v3v3(float*, float*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @pixel_bounds_uv(float* %uv1, float* %uv2, float* %uv3, float* %uv4, %struct.rcti* %bounds_px, i32 %ibuf_x, i32 %ibuf_y, i8 zeroext %is_quad) #0 !dbg !15288 {
entry:
  %uv1.addr = alloca float*, align 8
  %uv2.addr = alloca float*, align 8
  %uv3.addr = alloca float*, align 8
  %uv4.addr = alloca float*, align 8
  %bounds_px.addr = alloca %struct.rcti*, align 8
  %ibuf_x.addr = alloca i32, align 4
  %ibuf_y.addr = alloca i32, align 4
  %is_quad.addr = alloca i8, align 1
  %min_uv = alloca [2 x float], align 4
  %max_uv = alloca [2 x float], align 4
  store float* %uv1, float** %uv1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv1.addr, metadata !15291, metadata !DIExpression()), !dbg !15292
  store float* %uv2, float** %uv2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv2.addr, metadata !15293, metadata !DIExpression()), !dbg !15294
  store float* %uv3, float** %uv3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv3.addr, metadata !15295, metadata !DIExpression()), !dbg !15296
  store float* %uv4, float** %uv4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv4.addr, metadata !15297, metadata !DIExpression()), !dbg !15298
  store %struct.rcti* %bounds_px, %struct.rcti** %bounds_px.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %bounds_px.addr, metadata !15299, metadata !DIExpression()), !dbg !15300
  store i32 %ibuf_x, i32* %ibuf_x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ibuf_x.addr, metadata !15301, metadata !DIExpression()), !dbg !15302
  store i32 %ibuf_y, i32* %ibuf_y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ibuf_y.addr, metadata !15303, metadata !DIExpression()), !dbg !15304
  store i8 %is_quad, i8* %is_quad.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_quad.addr, metadata !15305, metadata !DIExpression()), !dbg !15306
  call void @llvm.dbg.declare(metadata [2 x float]* %min_uv, metadata !15307, metadata !DIExpression()), !dbg !15308
  call void @llvm.dbg.declare(metadata [2 x float]* %max_uv, metadata !15309, metadata !DIExpression()), !dbg !15310
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %min_uv, i64 0, i64 1, !dbg !15311
  store float 0x46293E5940000000, float* %arrayidx, align 4, !dbg !15311
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %min_uv, i64 0, i64 0, !dbg !15311
  store float 0x46293E5940000000, float* %arrayidx1, align 4, !dbg !15311
  %arrayidx2 = getelementptr inbounds [2 x float], [2 x float]* %max_uv, i64 0, i64 1, !dbg !15311
  store float 0xC6293E5940000000, float* %arrayidx2, align 4, !dbg !15311
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %max_uv, i64 0, i64 0, !dbg !15311
  store float 0xC6293E5940000000, float* %arrayidx3, align 4, !dbg !15311
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %min_uv, i64 0, i64 0, !dbg !15313
  %arraydecay4 = getelementptr inbounds [2 x float], [2 x float]* %max_uv, i64 0, i64 0, !dbg !15314
  %0 = load float*, float** %uv1.addr, align 8, !dbg !15315
  call void @minmax_v2v2_v2(float* %arraydecay, float* %arraydecay4, float* %0), !dbg !15316
  %arraydecay5 = getelementptr inbounds [2 x float], [2 x float]* %min_uv, i64 0, i64 0, !dbg !15317
  %arraydecay6 = getelementptr inbounds [2 x float], [2 x float]* %max_uv, i64 0, i64 0, !dbg !15318
  %1 = load float*, float** %uv2.addr, align 8, !dbg !15319
  call void @minmax_v2v2_v2(float* %arraydecay5, float* %arraydecay6, float* %1), !dbg !15320
  %arraydecay7 = getelementptr inbounds [2 x float], [2 x float]* %min_uv, i64 0, i64 0, !dbg !15321
  %arraydecay8 = getelementptr inbounds [2 x float], [2 x float]* %max_uv, i64 0, i64 0, !dbg !15322
  %2 = load float*, float** %uv3.addr, align 8, !dbg !15323
  call void @minmax_v2v2_v2(float* %arraydecay7, float* %arraydecay8, float* %2), !dbg !15324
  %3 = load i8, i8* %is_quad.addr, align 1, !dbg !15325
  %tobool = icmp ne i8 %3, 0, !dbg !15325
  br i1 %tobool, label %if.then, label %if.end, !dbg !15327

if.then:                                          ; preds = %entry
  %arraydecay9 = getelementptr inbounds [2 x float], [2 x float]* %min_uv, i64 0, i64 0, !dbg !15328
  %arraydecay10 = getelementptr inbounds [2 x float], [2 x float]* %max_uv, i64 0, i64 0, !dbg !15329
  %4 = load float*, float** %uv4.addr, align 8, !dbg !15330
  call void @minmax_v2v2_v2(float* %arraydecay9, float* %arraydecay10, float* %4), !dbg !15331
  br label %if.end, !dbg !15331

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %ibuf_x.addr, align 4, !dbg !15332
  %conv = sitofp i32 %5 to float, !dbg !15332
  %arrayidx11 = getelementptr inbounds [2 x float], [2 x float]* %min_uv, i64 0, i64 0, !dbg !15333
  %6 = load float, float* %arrayidx11, align 4, !dbg !15333
  %mul = fmul float %conv, %6, !dbg !15334
  %conv12 = fptosi float %mul to i32, !dbg !15335
  %7 = load %struct.rcti*, %struct.rcti** %bounds_px.addr, align 8, !dbg !15336
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %7, i32 0, i32 0, !dbg !15337
  store i32 %conv12, i32* %xmin, align 4, !dbg !15338
  %8 = load i32, i32* %ibuf_y.addr, align 4, !dbg !15339
  %conv13 = sitofp i32 %8 to float, !dbg !15339
  %arrayidx14 = getelementptr inbounds [2 x float], [2 x float]* %min_uv, i64 0, i64 1, !dbg !15340
  %9 = load float, float* %arrayidx14, align 4, !dbg !15340
  %mul15 = fmul float %conv13, %9, !dbg !15341
  %conv16 = fptosi float %mul15 to i32, !dbg !15342
  %10 = load %struct.rcti*, %struct.rcti** %bounds_px.addr, align 8, !dbg !15343
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %10, i32 0, i32 2, !dbg !15344
  store i32 %conv16, i32* %ymin, align 4, !dbg !15345
  %11 = load i32, i32* %ibuf_x.addr, align 4, !dbg !15346
  %conv17 = sitofp i32 %11 to float, !dbg !15346
  %arrayidx18 = getelementptr inbounds [2 x float], [2 x float]* %max_uv, i64 0, i64 0, !dbg !15347
  %12 = load float, float* %arrayidx18, align 4, !dbg !15347
  %mul19 = fmul float %conv17, %12, !dbg !15348
  %conv20 = fptosi float %mul19 to i32, !dbg !15349
  %add = add nsw i32 %conv20, 1, !dbg !15350
  %13 = load %struct.rcti*, %struct.rcti** %bounds_px.addr, align 8, !dbg !15351
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %13, i32 0, i32 1, !dbg !15352
  store i32 %add, i32* %xmax, align 4, !dbg !15353
  %14 = load i32, i32* %ibuf_y.addr, align 4, !dbg !15354
  %conv21 = sitofp i32 %14 to float, !dbg !15354
  %arrayidx22 = getelementptr inbounds [2 x float], [2 x float]* %max_uv, i64 0, i64 1, !dbg !15355
  %15 = load float, float* %arrayidx22, align 4, !dbg !15355
  %mul23 = fmul float %conv21, %15, !dbg !15356
  %conv24 = fptosi float %mul23 to i32, !dbg !15357
  %add25 = add nsw i32 %conv24, 1, !dbg !15358
  %16 = load %struct.rcti*, %struct.rcti** %bounds_px.addr, align 8, !dbg !15359
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %16, i32 0, i32 3, !dbg !15360
  store i32 %add25, i32* %ymax, align 4, !dbg !15361
  %17 = load %struct.rcti*, %struct.rcti** %bounds_px.addr, align 8, !dbg !15362
  %xmin26 = getelementptr inbounds %struct.rcti, %struct.rcti* %17, i32 0, i32 0, !dbg !15363
  %18 = load i32, i32* %xmin26, align 4, !dbg !15363
  %19 = load %struct.rcti*, %struct.rcti** %bounds_px.addr, align 8, !dbg !15364
  %xmax27 = getelementptr inbounds %struct.rcti, %struct.rcti* %19, i32 0, i32 1, !dbg !15365
  %20 = load i32, i32* %xmax27, align 4, !dbg !15365
  %cmp = icmp eq i32 %18, %20, !dbg !15366
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !15367

lor.rhs:                                          ; preds = %if.end
  %21 = load %struct.rcti*, %struct.rcti** %bounds_px.addr, align 8, !dbg !15368
  %ymin29 = getelementptr inbounds %struct.rcti, %struct.rcti* %21, i32 0, i32 2, !dbg !15369
  %22 = load i32, i32* %ymin29, align 4, !dbg !15369
  %23 = load %struct.rcti*, %struct.rcti** %bounds_px.addr, align 8, !dbg !15370
  %ymax30 = getelementptr inbounds %struct.rcti, %struct.rcti* %23, i32 0, i32 3, !dbg !15371
  %24 = load i32, i32* %ymax30, align 4, !dbg !15371
  %cmp31 = icmp eq i32 %22, %24, !dbg !15372
  br label %lor.end, !dbg !15367

lor.end:                                          ; preds = %lor.rhs, %if.end
  %25 = phi i1 [ true, %if.end ], [ %cmp31, %lor.rhs ]
  %26 = zext i1 %25 to i64, !dbg !15373
  %cond = select i1 %25, i32 0, i32 1, !dbg !15373
  %conv33 = trunc i32 %cond to i8, !dbg !15373
  ret i8 %conv33, !dbg !15374
}

declare dso_local i32 @isect_point_quad_v2(float*, float*, float*, float*, float*) #2

declare dso_local float @line_point_factor_v2(float*, float*, float*) #2

declare dso_local void @mul_m4_v4([4 x float]*, float*) #2

declare dso_local float @closest_to_line_v2(float*, float*, float*, float*) #2

declare dso_local void @barycentric_weights_v2(float*, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @line_point_side_v2(float* %l1, float* %l2, float* %pt) #0 !dbg !15375 {
entry:
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  %pt.addr = alloca float*, align 8
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !15378, metadata !DIExpression()), !dbg !15379
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !15380, metadata !DIExpression()), !dbg !15381
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !15382, metadata !DIExpression()), !dbg !15383
  %0 = load float*, float** %l1.addr, align 8, !dbg !15384
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !15384
  %1 = load float, float* %arrayidx, align 4, !dbg !15384
  %2 = load float*, float** %pt.addr, align 8, !dbg !15385
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !15385
  %3 = load float, float* %arrayidx1, align 4, !dbg !15385
  %sub = fsub float %1, %3, !dbg !15386
  %4 = load float*, float** %l2.addr, align 8, !dbg !15387
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !15387
  %5 = load float, float* %arrayidx2, align 4, !dbg !15387
  %6 = load float*, float** %pt.addr, align 8, !dbg !15388
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !15388
  %7 = load float, float* %arrayidx3, align 4, !dbg !15388
  %sub4 = fsub float %5, %7, !dbg !15389
  %mul = fmul float %sub, %sub4, !dbg !15390
  %8 = load float*, float** %l2.addr, align 8, !dbg !15391
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !15391
  %9 = load float, float* %arrayidx5, align 4, !dbg !15391
  %10 = load float*, float** %pt.addr, align 8, !dbg !15392
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 0, !dbg !15392
  %11 = load float, float* %arrayidx6, align 4, !dbg !15392
  %sub7 = fsub float %9, %11, !dbg !15393
  %12 = load float*, float** %l1.addr, align 8, !dbg !15394
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 1, !dbg !15394
  %13 = load float, float* %arrayidx8, align 4, !dbg !15394
  %14 = load float*, float** %pt.addr, align 8, !dbg !15395
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 1, !dbg !15395
  %15 = load float, float* %arrayidx9, align 4, !dbg !15395
  %sub10 = fsub float %13, %15, !dbg !15396
  %mul11 = fmul float %sub7, %sub10, !dbg !15397
  %sub12 = fsub float %mul, %mul11, !dbg !15398
  ret float %sub12, !dbg !15399
}

declare dso_local zeroext i8 @BLI_rctf_isect_pt_v(%struct.rctf*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @IsectPT2Df_limit(float* %pt, float* %v1, float* %v2, float* %v3, float %limit) #0 !dbg !15400 {
entry:
  %pt.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %limit.addr = alloca float, align 4
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !15403, metadata !DIExpression()), !dbg !15404
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !15405, metadata !DIExpression()), !dbg !15406
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !15407, metadata !DIExpression()), !dbg !15408
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !15409, metadata !DIExpression()), !dbg !15410
  store float %limit, float* %limit.addr, align 4
  call void @llvm.dbg.declare(metadata float* %limit.addr, metadata !15411, metadata !DIExpression()), !dbg !15412
  %0 = load float*, float** %pt.addr, align 8, !dbg !15413
  %1 = load float*, float** %v1.addr, align 8, !dbg !15414
  %2 = load float*, float** %v2.addr, align 8, !dbg !15415
  %call = call float @area_tri_v2(float* %0, float* %1, float* %2), !dbg !15416
  %3 = load float*, float** %pt.addr, align 8, !dbg !15417
  %4 = load float*, float** %v2.addr, align 8, !dbg !15418
  %5 = load float*, float** %v3.addr, align 8, !dbg !15419
  %call1 = call float @area_tri_v2(float* %3, float* %4, float* %5), !dbg !15420
  %add = fadd float %call, %call1, !dbg !15421
  %6 = load float*, float** %pt.addr, align 8, !dbg !15422
  %7 = load float*, float** %v3.addr, align 8, !dbg !15423
  %8 = load float*, float** %v1.addr, align 8, !dbg !15424
  %call2 = call float @area_tri_v2(float* %6, float* %7, float* %8), !dbg !15425
  %add3 = fadd float %add, %call2, !dbg !15426
  %9 = load float*, float** %v1.addr, align 8, !dbg !15427
  %10 = load float*, float** %v2.addr, align 8, !dbg !15428
  %11 = load float*, float** %v3.addr, align 8, !dbg !15429
  %call4 = call float @area_tri_v2(float* %9, float* %10, float* %11), !dbg !15430
  %div = fdiv float %add3, %call4, !dbg !15431
  %12 = load float, float* %limit.addr, align 4, !dbg !15432
  %cmp = fcmp olt float %div, %12, !dbg !15433
  %conv = zext i1 %cmp to i32, !dbg !15433
  %conv5 = trunc i32 %conv to i8, !dbg !15434
  ret i8 %conv5, !dbg !15435
}

; Function Attrs: noinline nounwind uwtable
define internal void @rect_to_uvspace_ortho(%struct.rctf* %bucket_bounds, float* %v1coSS, float* %v2coSS, float* %v3coSS, float* %uv1co, float* %uv2co, float* %uv3co, [2 x float]* %bucket_bounds_uv, i32 %flip) #0 !dbg !15436 {
entry:
  %bucket_bounds.addr = alloca %struct.rctf*, align 8
  %v1coSS.addr = alloca float*, align 8
  %v2coSS.addr = alloca float*, align 8
  %v3coSS.addr = alloca float*, align 8
  %uv1co.addr = alloca float*, align 8
  %uv2co.addr = alloca float*, align 8
  %uv3co.addr = alloca float*, align 8
  %bucket_bounds_uv.addr = alloca [2 x float]*, align 8
  %flip.addr = alloca i32, align 4
  %uv = alloca [2 x float], align 4
  %w = alloca [3 x float], align 4
  store %struct.rctf* %bucket_bounds, %struct.rctf** %bucket_bounds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %bucket_bounds.addr, metadata !15439, metadata !DIExpression()), !dbg !15440
  store float* %v1coSS, float** %v1coSS.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1coSS.addr, metadata !15441, metadata !DIExpression()), !dbg !15442
  store float* %v2coSS, float** %v2coSS.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2coSS.addr, metadata !15443, metadata !DIExpression()), !dbg !15444
  store float* %v3coSS, float** %v3coSS.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3coSS.addr, metadata !15445, metadata !DIExpression()), !dbg !15446
  store float* %uv1co, float** %uv1co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv1co.addr, metadata !15447, metadata !DIExpression()), !dbg !15448
  store float* %uv2co, float** %uv2co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv2co.addr, metadata !15449, metadata !DIExpression()), !dbg !15450
  store float* %uv3co, float** %uv3co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv3co.addr, metadata !15451, metadata !DIExpression()), !dbg !15452
  store [2 x float]* %bucket_bounds_uv, [2 x float]** %bucket_bounds_uv.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %bucket_bounds_uv.addr, metadata !15453, metadata !DIExpression()), !dbg !15454
  store i32 %flip, i32* %flip.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flip.addr, metadata !15455, metadata !DIExpression()), !dbg !15456
  call void @llvm.dbg.declare(metadata [2 x float]* %uv, metadata !15457, metadata !DIExpression()), !dbg !15458
  call void @llvm.dbg.declare(metadata [3 x float]* %w, metadata !15459, metadata !DIExpression()), !dbg !15460
  %0 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !15461
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 1, !dbg !15462
  %1 = load float, float* %xmax, align 4, !dbg !15462
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !15463
  store float %1, float* %arrayidx, align 4, !dbg !15464
  %2 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !15465
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 2, !dbg !15466
  %3 = load float, float* %ymin, align 4, !dbg !15466
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !15467
  store float %3, float* %arrayidx1, align 4, !dbg !15468
  %4 = load float*, float** %v1coSS.addr, align 8, !dbg !15469
  %5 = load float*, float** %v2coSS.addr, align 8, !dbg !15470
  %6 = load float*, float** %v3coSS.addr, align 8, !dbg !15471
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !15472
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15473
  call void @barycentric_weights_v2(float* %4, float* %5, float* %6, float* %arraydecay, float* %arraydecay2), !dbg !15474
  %7 = load [2 x float]*, [2 x float]** %bucket_bounds_uv.addr, align 8, !dbg !15475
  %8 = load i32, i32* %flip.addr, align 4, !dbg !15476
  %tobool = icmp ne i32 %8, 0, !dbg !15476
  %9 = zext i1 %tobool to i64, !dbg !15476
  %cond = select i1 %tobool, i32 3, i32 0, !dbg !15476
  %idxprom = sext i32 %cond to i64, !dbg !15475
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %7, i64 %idxprom, !dbg !15475
  %arraydecay4 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx3, i64 0, i64 0, !dbg !15475
  %10 = load float*, float** %uv1co.addr, align 8, !dbg !15477
  %11 = load float*, float** %uv2co.addr, align 8, !dbg !15478
  %12 = load float*, float** %uv3co.addr, align 8, !dbg !15479
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15480
  call void @interp_v2_v2v2v2(float* %arraydecay4, float* %10, float* %11, float* %12, float* %arraydecay5), !dbg !15481
  %13 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !15482
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %13, i32 0, i32 3, !dbg !15483
  %14 = load float, float* %ymax, align 4, !dbg !15483
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !15484
  store float %14, float* %arrayidx6, align 4, !dbg !15485
  %15 = load float*, float** %v1coSS.addr, align 8, !dbg !15486
  %16 = load float*, float** %v2coSS.addr, align 8, !dbg !15487
  %17 = load float*, float** %v3coSS.addr, align 8, !dbg !15488
  %arraydecay7 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !15489
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15490
  call void @barycentric_weights_v2(float* %15, float* %16, float* %17, float* %arraydecay7, float* %arraydecay8), !dbg !15491
  %18 = load [2 x float]*, [2 x float]** %bucket_bounds_uv.addr, align 8, !dbg !15492
  %19 = load i32, i32* %flip.addr, align 4, !dbg !15493
  %tobool9 = icmp ne i32 %19, 0, !dbg !15493
  %20 = zext i1 %tobool9 to i64, !dbg !15493
  %cond10 = select i1 %tobool9, i32 2, i32 1, !dbg !15493
  %idxprom11 = sext i32 %cond10 to i64, !dbg !15492
  %arrayidx12 = getelementptr inbounds [2 x float], [2 x float]* %18, i64 %idxprom11, !dbg !15492
  %arraydecay13 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx12, i64 0, i64 0, !dbg !15492
  %21 = load float*, float** %uv1co.addr, align 8, !dbg !15494
  %22 = load float*, float** %uv2co.addr, align 8, !dbg !15495
  %23 = load float*, float** %uv3co.addr, align 8, !dbg !15496
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15497
  call void @interp_v2_v2v2v2(float* %arraydecay13, float* %21, float* %22, float* %23, float* %arraydecay14), !dbg !15498
  %24 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !15499
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %24, i32 0, i32 0, !dbg !15500
  %25 = load float, float* %xmin, align 4, !dbg !15500
  %arrayidx15 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !15501
  store float %25, float* %arrayidx15, align 4, !dbg !15502
  %26 = load float*, float** %v1coSS.addr, align 8, !dbg !15503
  %27 = load float*, float** %v2coSS.addr, align 8, !dbg !15504
  %28 = load float*, float** %v3coSS.addr, align 8, !dbg !15505
  %arraydecay16 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !15506
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15507
  call void @barycentric_weights_v2(float* %26, float* %27, float* %28, float* %arraydecay16, float* %arraydecay17), !dbg !15508
  %29 = load [2 x float]*, [2 x float]** %bucket_bounds_uv.addr, align 8, !dbg !15509
  %30 = load i32, i32* %flip.addr, align 4, !dbg !15510
  %tobool18 = icmp ne i32 %30, 0, !dbg !15510
  %31 = zext i1 %tobool18 to i64, !dbg !15510
  %cond19 = select i1 %tobool18, i32 1, i32 2, !dbg !15510
  %idxprom20 = sext i32 %cond19 to i64, !dbg !15509
  %arrayidx21 = getelementptr inbounds [2 x float], [2 x float]* %29, i64 %idxprom20, !dbg !15509
  %arraydecay22 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx21, i64 0, i64 0, !dbg !15509
  %32 = load float*, float** %uv1co.addr, align 8, !dbg !15511
  %33 = load float*, float** %uv2co.addr, align 8, !dbg !15512
  %34 = load float*, float** %uv3co.addr, align 8, !dbg !15513
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15514
  call void @interp_v2_v2v2v2(float* %arraydecay22, float* %32, float* %33, float* %34, float* %arraydecay23), !dbg !15515
  %35 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !15516
  %ymin24 = getelementptr inbounds %struct.rctf, %struct.rctf* %35, i32 0, i32 2, !dbg !15517
  %36 = load float, float* %ymin24, align 4, !dbg !15517
  %arrayidx25 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !15518
  store float %36, float* %arrayidx25, align 4, !dbg !15519
  %37 = load float*, float** %v1coSS.addr, align 8, !dbg !15520
  %38 = load float*, float** %v2coSS.addr, align 8, !dbg !15521
  %39 = load float*, float** %v3coSS.addr, align 8, !dbg !15522
  %arraydecay26 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !15523
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15524
  call void @barycentric_weights_v2(float* %37, float* %38, float* %39, float* %arraydecay26, float* %arraydecay27), !dbg !15525
  %40 = load [2 x float]*, [2 x float]** %bucket_bounds_uv.addr, align 8, !dbg !15526
  %41 = load i32, i32* %flip.addr, align 4, !dbg !15527
  %tobool28 = icmp ne i32 %41, 0, !dbg !15527
  %42 = zext i1 %tobool28 to i64, !dbg !15527
  %cond29 = select i1 %tobool28, i32 0, i32 3, !dbg !15527
  %idxprom30 = sext i32 %cond29 to i64, !dbg !15526
  %arrayidx31 = getelementptr inbounds [2 x float], [2 x float]* %40, i64 %idxprom30, !dbg !15526
  %arraydecay32 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx31, i64 0, i64 0, !dbg !15526
  %43 = load float*, float** %uv1co.addr, align 8, !dbg !15528
  %44 = load float*, float** %uv2co.addr, align 8, !dbg !15529
  %45 = load float*, float** %uv3co.addr, align 8, !dbg !15530
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15531
  call void @interp_v2_v2v2v2(float* %arraydecay32, float* %43, float* %44, float* %45, float* %arraydecay33), !dbg !15532
  ret void, !dbg !15533
}

; Function Attrs: noinline nounwind uwtable
define internal void @rect_to_uvspace_persp(%struct.rctf* %bucket_bounds, float* %v1coSS, float* %v2coSS, float* %v3coSS, float* %uv1co, float* %uv2co, float* %uv3co, [2 x float]* %bucket_bounds_uv, i32 %flip) #0 !dbg !15534 {
entry:
  %bucket_bounds.addr = alloca %struct.rctf*, align 8
  %v1coSS.addr = alloca float*, align 8
  %v2coSS.addr = alloca float*, align 8
  %v3coSS.addr = alloca float*, align 8
  %uv1co.addr = alloca float*, align 8
  %uv2co.addr = alloca float*, align 8
  %uv3co.addr = alloca float*, align 8
  %bucket_bounds_uv.addr = alloca [2 x float]*, align 8
  %flip.addr = alloca i32, align 4
  %uv = alloca [2 x float], align 4
  %w = alloca [3 x float], align 4
  store %struct.rctf* %bucket_bounds, %struct.rctf** %bucket_bounds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %bucket_bounds.addr, metadata !15535, metadata !DIExpression()), !dbg !15536
  store float* %v1coSS, float** %v1coSS.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1coSS.addr, metadata !15537, metadata !DIExpression()), !dbg !15538
  store float* %v2coSS, float** %v2coSS.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2coSS.addr, metadata !15539, metadata !DIExpression()), !dbg !15540
  store float* %v3coSS, float** %v3coSS.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3coSS.addr, metadata !15541, metadata !DIExpression()), !dbg !15542
  store float* %uv1co, float** %uv1co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv1co.addr, metadata !15543, metadata !DIExpression()), !dbg !15544
  store float* %uv2co, float** %uv2co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv2co.addr, metadata !15545, metadata !DIExpression()), !dbg !15546
  store float* %uv3co, float** %uv3co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv3co.addr, metadata !15547, metadata !DIExpression()), !dbg !15548
  store [2 x float]* %bucket_bounds_uv, [2 x float]** %bucket_bounds_uv.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %bucket_bounds_uv.addr, metadata !15549, metadata !DIExpression()), !dbg !15550
  store i32 %flip, i32* %flip.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flip.addr, metadata !15551, metadata !DIExpression()), !dbg !15552
  call void @llvm.dbg.declare(metadata [2 x float]* %uv, metadata !15553, metadata !DIExpression()), !dbg !15554
  call void @llvm.dbg.declare(metadata [3 x float]* %w, metadata !15555, metadata !DIExpression()), !dbg !15556
  %0 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !15557
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 1, !dbg !15558
  %1 = load float, float* %xmax, align 4, !dbg !15558
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !15559
  store float %1, float* %arrayidx, align 4, !dbg !15560
  %2 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !15561
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 2, !dbg !15562
  %3 = load float, float* %ymin, align 4, !dbg !15562
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !15563
  store float %3, float* %arrayidx1, align 4, !dbg !15564
  %4 = load float*, float** %v1coSS.addr, align 8, !dbg !15565
  %5 = load float*, float** %v2coSS.addr, align 8, !dbg !15566
  %6 = load float*, float** %v3coSS.addr, align 8, !dbg !15567
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !15568
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15569
  call void @barycentric_weights_v2_persp(float* %4, float* %5, float* %6, float* %arraydecay, float* %arraydecay2), !dbg !15570
  %7 = load [2 x float]*, [2 x float]** %bucket_bounds_uv.addr, align 8, !dbg !15571
  %8 = load i32, i32* %flip.addr, align 4, !dbg !15572
  %tobool = icmp ne i32 %8, 0, !dbg !15572
  %9 = zext i1 %tobool to i64, !dbg !15572
  %cond = select i1 %tobool, i32 3, i32 0, !dbg !15572
  %idxprom = sext i32 %cond to i64, !dbg !15571
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %7, i64 %idxprom, !dbg !15571
  %arraydecay4 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx3, i64 0, i64 0, !dbg !15571
  %10 = load float*, float** %uv1co.addr, align 8, !dbg !15573
  %11 = load float*, float** %uv2co.addr, align 8, !dbg !15574
  %12 = load float*, float** %uv3co.addr, align 8, !dbg !15575
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15576
  call void @interp_v2_v2v2v2(float* %arraydecay4, float* %10, float* %11, float* %12, float* %arraydecay5), !dbg !15577
  %13 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !15578
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %13, i32 0, i32 3, !dbg !15579
  %14 = load float, float* %ymax, align 4, !dbg !15579
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !15580
  store float %14, float* %arrayidx6, align 4, !dbg !15581
  %15 = load float*, float** %v1coSS.addr, align 8, !dbg !15582
  %16 = load float*, float** %v2coSS.addr, align 8, !dbg !15583
  %17 = load float*, float** %v3coSS.addr, align 8, !dbg !15584
  %arraydecay7 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !15585
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15586
  call void @barycentric_weights_v2_persp(float* %15, float* %16, float* %17, float* %arraydecay7, float* %arraydecay8), !dbg !15587
  %18 = load [2 x float]*, [2 x float]** %bucket_bounds_uv.addr, align 8, !dbg !15588
  %19 = load i32, i32* %flip.addr, align 4, !dbg !15589
  %tobool9 = icmp ne i32 %19, 0, !dbg !15589
  %20 = zext i1 %tobool9 to i64, !dbg !15589
  %cond10 = select i1 %tobool9, i32 2, i32 1, !dbg !15589
  %idxprom11 = sext i32 %cond10 to i64, !dbg !15588
  %arrayidx12 = getelementptr inbounds [2 x float], [2 x float]* %18, i64 %idxprom11, !dbg !15588
  %arraydecay13 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx12, i64 0, i64 0, !dbg !15588
  %21 = load float*, float** %uv1co.addr, align 8, !dbg !15590
  %22 = load float*, float** %uv2co.addr, align 8, !dbg !15591
  %23 = load float*, float** %uv3co.addr, align 8, !dbg !15592
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15593
  call void @interp_v2_v2v2v2(float* %arraydecay13, float* %21, float* %22, float* %23, float* %arraydecay14), !dbg !15594
  %24 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !15595
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %24, i32 0, i32 0, !dbg !15596
  %25 = load float, float* %xmin, align 4, !dbg !15596
  %arrayidx15 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !15597
  store float %25, float* %arrayidx15, align 4, !dbg !15598
  %26 = load float*, float** %v1coSS.addr, align 8, !dbg !15599
  %27 = load float*, float** %v2coSS.addr, align 8, !dbg !15600
  %28 = load float*, float** %v3coSS.addr, align 8, !dbg !15601
  %arraydecay16 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !15602
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15603
  call void @barycentric_weights_v2_persp(float* %26, float* %27, float* %28, float* %arraydecay16, float* %arraydecay17), !dbg !15604
  %29 = load [2 x float]*, [2 x float]** %bucket_bounds_uv.addr, align 8, !dbg !15605
  %30 = load i32, i32* %flip.addr, align 4, !dbg !15606
  %tobool18 = icmp ne i32 %30, 0, !dbg !15606
  %31 = zext i1 %tobool18 to i64, !dbg !15606
  %cond19 = select i1 %tobool18, i32 1, i32 2, !dbg !15606
  %idxprom20 = sext i32 %cond19 to i64, !dbg !15605
  %arrayidx21 = getelementptr inbounds [2 x float], [2 x float]* %29, i64 %idxprom20, !dbg !15605
  %arraydecay22 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx21, i64 0, i64 0, !dbg !15605
  %32 = load float*, float** %uv1co.addr, align 8, !dbg !15607
  %33 = load float*, float** %uv2co.addr, align 8, !dbg !15608
  %34 = load float*, float** %uv3co.addr, align 8, !dbg !15609
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15610
  call void @interp_v2_v2v2v2(float* %arraydecay22, float* %32, float* %33, float* %34, float* %arraydecay23), !dbg !15611
  %35 = load %struct.rctf*, %struct.rctf** %bucket_bounds.addr, align 8, !dbg !15612
  %ymin24 = getelementptr inbounds %struct.rctf, %struct.rctf* %35, i32 0, i32 2, !dbg !15613
  %36 = load float, float* %ymin24, align 4, !dbg !15613
  %arrayidx25 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !15614
  store float %36, float* %arrayidx25, align 4, !dbg !15615
  %37 = load float*, float** %v1coSS.addr, align 8, !dbg !15616
  %38 = load float*, float** %v2coSS.addr, align 8, !dbg !15617
  %39 = load float*, float** %v3coSS.addr, align 8, !dbg !15618
  %arraydecay26 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !15619
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15620
  call void @barycentric_weights_v2_persp(float* %37, float* %38, float* %39, float* %arraydecay26, float* %arraydecay27), !dbg !15621
  %40 = load [2 x float]*, [2 x float]** %bucket_bounds_uv.addr, align 8, !dbg !15622
  %41 = load i32, i32* %flip.addr, align 4, !dbg !15623
  %tobool28 = icmp ne i32 %41, 0, !dbg !15623
  %42 = zext i1 %tobool28 to i64, !dbg !15623
  %cond29 = select i1 %tobool28, i32 0, i32 3, !dbg !15623
  %idxprom30 = sext i32 %cond29 to i64, !dbg !15622
  %arrayidx31 = getelementptr inbounds [2 x float], [2 x float]* %40, i64 %idxprom30, !dbg !15622
  %arraydecay32 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx31, i64 0, i64 0, !dbg !15622
  %43 = load float*, float** %uv1co.addr, align 8, !dbg !15624
  %44 = load float*, float** %uv2co.addr, align 8, !dbg !15625
  %45 = load float*, float** %uv3co.addr, align 8, !dbg !15626
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15627
  call void @interp_v2_v2v2v2(float* %arraydecay32, float* %43, float* %44, float* %45, float* %arraydecay33), !dbg !15628
  ret void, !dbg !15629
}

; Function Attrs: nounwind
declare dso_local float @atan2f(float, float) #4

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @float_z_sort_flip(i8* %p1, i8* %p2) #0 !dbg !15630 {
entry:
  %p1.addr = alloca i8*, align 8
  %p2.addr = alloca i8*, align 8
  store i8* %p1, i8** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p1.addr, metadata !15635, metadata !DIExpression()), !dbg !15636
  store i8* %p2, i8** %p2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p2.addr, metadata !15637, metadata !DIExpression()), !dbg !15638
  %0 = load i8*, i8** %p1.addr, align 8, !dbg !15639
  %1 = bitcast i8* %0 to float*, !dbg !15640
  %arrayidx = getelementptr inbounds float, float* %1, i64 2, !dbg !15641
  %2 = load float, float* %arrayidx, align 4, !dbg !15641
  %3 = load i8*, i8** %p2.addr, align 8, !dbg !15642
  %4 = bitcast i8* %3 to float*, !dbg !15643
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 2, !dbg !15644
  %5 = load float, float* %arrayidx1, align 4, !dbg !15644
  %cmp = fcmp olt float %2, %5, !dbg !15645
  %6 = zext i1 %cmp to i64, !dbg !15641
  %cond = select i1 %cmp, i32 1, i32 -1, !dbg !15641
  ret i32 %cond, !dbg !15646
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @float_z_sort(i8* %p1, i8* %p2) #0 !dbg !15647 {
entry:
  %p1.addr = alloca i8*, align 8
  %p2.addr = alloca i8*, align 8
  store i8* %p1, i8** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p1.addr, metadata !15648, metadata !DIExpression()), !dbg !15649
  store i8* %p2, i8** %p2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p2.addr, metadata !15650, metadata !DIExpression()), !dbg !15651
  %0 = load i8*, i8** %p1.addr, align 8, !dbg !15652
  %1 = bitcast i8* %0 to float*, !dbg !15653
  %arrayidx = getelementptr inbounds float, float* %1, i64 2, !dbg !15654
  %2 = load float, float* %arrayidx, align 4, !dbg !15654
  %3 = load i8*, i8** %p2.addr, align 8, !dbg !15655
  %4 = bitcast i8* %3 to float*, !dbg !15656
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 2, !dbg !15657
  %5 = load float, float* %arrayidx1, align 4, !dbg !15657
  %cmp = fcmp olt float %2, %5, !dbg !15658
  %6 = zext i1 %cmp to i64, !dbg !15654
  %cond = select i1 %cmp, i32 -1, i32 1, !dbg !15654
  ret i32 %cond, !dbg !15659
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

declare dso_local void @interp_v2_v2v2v2(float*, float*, float*, float*, float*) #2

declare dso_local void @barycentric_weights_v2_persp(float*, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @area_tri_v2(float* %v1, float* %v2, float* %v3) #0 !dbg !15660 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !15662, metadata !DIExpression()), !dbg !15663
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !15664, metadata !DIExpression()), !dbg !15665
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !15666, metadata !DIExpression()), !dbg !15667
  %0 = load float*, float** %v1.addr, align 8, !dbg !15668
  %1 = load float*, float** %v2.addr, align 8, !dbg !15669
  %2 = load float*, float** %v3.addr, align 8, !dbg !15670
  %call = call float @area_tri_signed_v2(float* %0, float* %1, float* %2), !dbg !15671
  %3 = call float @llvm.fabs.f32(float %call), !dbg !15672
  ret float %3, !dbg !15673
}

; Function Attrs: noinline nounwind uwtable
define internal float @area_tri_signed_v2(float* %v1, float* %v2, float* %v3) #0 !dbg !15674 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !15675, metadata !DIExpression()), !dbg !15676
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !15677, metadata !DIExpression()), !dbg !15678
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !15679, metadata !DIExpression()), !dbg !15680
  %0 = load float*, float** %v1.addr, align 8, !dbg !15681
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !15681
  %1 = load float, float* %arrayidx, align 4, !dbg !15681
  %2 = load float*, float** %v2.addr, align 8, !dbg !15682
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !15682
  %3 = load float, float* %arrayidx1, align 4, !dbg !15682
  %sub = fsub float %1, %3, !dbg !15683
  %4 = load float*, float** %v2.addr, align 8, !dbg !15684
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !15684
  %5 = load float, float* %arrayidx2, align 4, !dbg !15684
  %6 = load float*, float** %v3.addr, align 8, !dbg !15685
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !15685
  %7 = load float, float* %arrayidx3, align 4, !dbg !15685
  %sub4 = fsub float %5, %7, !dbg !15686
  %mul = fmul float %sub, %sub4, !dbg !15687
  %8 = load float*, float** %v1.addr, align 8, !dbg !15688
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 1, !dbg !15688
  %9 = load float, float* %arrayidx5, align 4, !dbg !15688
  %10 = load float*, float** %v2.addr, align 8, !dbg !15689
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 1, !dbg !15689
  %11 = load float, float* %arrayidx6, align 4, !dbg !15689
  %sub7 = fsub float %9, %11, !dbg !15690
  %12 = load float*, float** %v3.addr, align 8, !dbg !15691
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 0, !dbg !15691
  %13 = load float, float* %arrayidx8, align 4, !dbg !15691
  %14 = load float*, float** %v2.addr, align 8, !dbg !15692
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 0, !dbg !15692
  %15 = load float, float* %arrayidx9, align 4, !dbg !15692
  %sub10 = fsub float %13, %15, !dbg !15693
  %mul11 = fmul float %sub7, %sub10, !dbg !15694
  %add = fadd float %mul, %mul11, !dbg !15695
  %mul12 = fmul float 5.000000e-01, %add, !dbg !15696
  ret float %mul12, !dbg !15697
}

declare dso_local void @minmax_v2v2_v2(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @project_paint_occlude_ptv_clip(%struct.ProjPaintState* %ps, %struct.MFace* %mf, float* %pt, float* %v1, float* %v2, float* %v3, i32 %side) #0 !dbg !15698 {
entry:
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %mf.addr = alloca %struct.MFace*, align 8
  %pt.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %side.addr = alloca i32, align 4
  %w = alloca [3 x float], align 4
  %wco = alloca [3 x float], align 4
  %ret = alloca i32, align 4
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !15701, metadata !DIExpression()), !dbg !15702
  store %struct.MFace* %mf, %struct.MFace** %mf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf.addr, metadata !15703, metadata !DIExpression()), !dbg !15704
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !15705, metadata !DIExpression()), !dbg !15706
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !15707, metadata !DIExpression()), !dbg !15708
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !15709, metadata !DIExpression()), !dbg !15710
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !15711, metadata !DIExpression()), !dbg !15712
  store i32 %side, i32* %side.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %side.addr, metadata !15713, metadata !DIExpression()), !dbg !15714
  call void @llvm.dbg.declare(metadata [3 x float]* %w, metadata !15715, metadata !DIExpression()), !dbg !15716
  call void @llvm.dbg.declare(metadata [3 x float]* %wco, metadata !15717, metadata !DIExpression()), !dbg !15718
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15719, metadata !DIExpression()), !dbg !15720
  %0 = load float*, float** %pt.addr, align 8, !dbg !15721
  %1 = load float*, float** %v1.addr, align 8, !dbg !15722
  %2 = load float*, float** %v2.addr, align 8, !dbg !15723
  %3 = load float*, float** %v3.addr, align 8, !dbg !15724
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15725
  %4 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !15726
  %is_ortho = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %4, i32 0, i32 61, !dbg !15727
  %5 = load i8, i8* %is_ortho, align 1, !dbg !15727
  %call = call i32 @project_paint_occlude_ptv(float* %0, float* %1, float* %2, float* %3, float* %arraydecay, i8 zeroext %5), !dbg !15728
  store i32 %call, i32* %ret, align 4, !dbg !15720
  %6 = load i32, i32* %ret, align 4, !dbg !15729
  %cmp = icmp sle i32 %6, 0, !dbg !15731
  br i1 %cmp, label %if.then, label %if.end, !dbg !15732

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %ret, align 4, !dbg !15733
  store i32 %7, i32* %retval, align 4, !dbg !15734
  br label %return, !dbg !15734

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %ret, align 4, !dbg !15735
  %cmp1 = icmp eq i32 %8, 1, !dbg !15737
  br i1 %cmp1, label %if.then2, label %if.end8, !dbg !15738

if.then2:                                         ; preds = %if.end
  %9 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !15739
  %is_ortho3 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %9, i32 0, i32 61, !dbg !15742
  %10 = load i8, i8* %is_ortho3, align 1, !dbg !15742
  %tobool = icmp ne i8 %10, 0, !dbg !15739
  br i1 %tobool, label %if.then4, label %if.else, !dbg !15743

if.then4:                                         ; preds = %if.then2
  %11 = load float*, float** %v1.addr, align 8, !dbg !15744
  %12 = load float*, float** %v2.addr, align 8, !dbg !15745
  %13 = load float*, float** %v3.addr, align 8, !dbg !15746
  %14 = load float*, float** %pt.addr, align 8, !dbg !15747
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15748
  call void @barycentric_weights_v2(float* %11, float* %12, float* %13, float* %14, float* %arraydecay5), !dbg !15749
  br label %if.end7, !dbg !15749

if.else:                                          ; preds = %if.then2
  %15 = load float*, float** %v1.addr, align 8, !dbg !15750
  %16 = load float*, float** %v2.addr, align 8, !dbg !15751
  %17 = load float*, float** %v3.addr, align 8, !dbg !15752
  %18 = load float*, float** %pt.addr, align 8, !dbg !15753
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15754
  call void @barycentric_weights_v2_persp(float* %15, float* %16, float* %17, float* %18, float* %arraydecay6), !dbg !15755
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then4
  br label %if.end8, !dbg !15756

if.end8:                                          ; preds = %if.end7, %if.end
  %19 = load i32, i32* %side.addr, align 4, !dbg !15757
  %tobool9 = icmp ne i32 %19, 0, !dbg !15757
  br i1 %tobool9, label %if.then10, label %if.else26, !dbg !15759

if.then10:                                        ; preds = %if.end8
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %wco, i64 0, i64 0, !dbg !15760
  %20 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !15761
  %dm_mvert = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %20, i32 0, i32 18, !dbg !15762
  %21 = load %struct.MVert*, %struct.MVert** %dm_mvert, align 8, !dbg !15762
  %22 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !15763
  %v112 = getelementptr inbounds %struct.MFace, %struct.MFace* %22, i32 0, i32 0, !dbg !15764
  %23 = load i32, i32* %v112, align 4, !dbg !15764
  %idxprom = zext i32 %23 to i64, !dbg !15761
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %21, i64 %idxprom, !dbg !15761
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 0, !dbg !15765
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !15761
  %24 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !15766
  %dm_mvert14 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %24, i32 0, i32 18, !dbg !15767
  %25 = load %struct.MVert*, %struct.MVert** %dm_mvert14, align 8, !dbg !15767
  %26 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !15768
  %v315 = getelementptr inbounds %struct.MFace, %struct.MFace* %26, i32 0, i32 2, !dbg !15769
  %27 = load i32, i32* %v315, align 4, !dbg !15769
  %idxprom16 = zext i32 %27 to i64, !dbg !15766
  %arrayidx17 = getelementptr inbounds %struct.MVert, %struct.MVert* %25, i64 %idxprom16, !dbg !15766
  %co18 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx17, i32 0, i32 0, !dbg !15770
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %co18, i64 0, i64 0, !dbg !15766
  %28 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !15771
  %dm_mvert20 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %28, i32 0, i32 18, !dbg !15772
  %29 = load %struct.MVert*, %struct.MVert** %dm_mvert20, align 8, !dbg !15772
  %30 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !15773
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %30, i32 0, i32 3, !dbg !15774
  %31 = load i32, i32* %v4, align 4, !dbg !15774
  %idxprom21 = zext i32 %31 to i64, !dbg !15771
  %arrayidx22 = getelementptr inbounds %struct.MVert, %struct.MVert* %29, i64 %idxprom21, !dbg !15771
  %co23 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx22, i32 0, i32 0, !dbg !15775
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %co23, i64 0, i64 0, !dbg !15771
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15776
  call void @interp_v3_v3v3v3(float* %arraydecay11, float* %arraydecay13, float* %arraydecay19, float* %arraydecay24, float* %arraydecay25), !dbg !15777
  br label %if.end47, !dbg !15777

if.else26:                                        ; preds = %if.end8
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %wco, i64 0, i64 0, !dbg !15778
  %32 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !15779
  %dm_mvert28 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %32, i32 0, i32 18, !dbg !15780
  %33 = load %struct.MVert*, %struct.MVert** %dm_mvert28, align 8, !dbg !15780
  %34 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !15781
  %v129 = getelementptr inbounds %struct.MFace, %struct.MFace* %34, i32 0, i32 0, !dbg !15782
  %35 = load i32, i32* %v129, align 4, !dbg !15782
  %idxprom30 = zext i32 %35 to i64, !dbg !15779
  %arrayidx31 = getelementptr inbounds %struct.MVert, %struct.MVert* %33, i64 %idxprom30, !dbg !15779
  %co32 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx31, i32 0, i32 0, !dbg !15783
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %co32, i64 0, i64 0, !dbg !15779
  %36 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !15784
  %dm_mvert34 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %36, i32 0, i32 18, !dbg !15785
  %37 = load %struct.MVert*, %struct.MVert** %dm_mvert34, align 8, !dbg !15785
  %38 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !15786
  %v235 = getelementptr inbounds %struct.MFace, %struct.MFace* %38, i32 0, i32 1, !dbg !15787
  %39 = load i32, i32* %v235, align 4, !dbg !15787
  %idxprom36 = zext i32 %39 to i64, !dbg !15784
  %arrayidx37 = getelementptr inbounds %struct.MVert, %struct.MVert* %37, i64 %idxprom36, !dbg !15784
  %co38 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx37, i32 0, i32 0, !dbg !15788
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %co38, i64 0, i64 0, !dbg !15784
  %40 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !15789
  %dm_mvert40 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %40, i32 0, i32 18, !dbg !15790
  %41 = load %struct.MVert*, %struct.MVert** %dm_mvert40, align 8, !dbg !15790
  %42 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !15791
  %v341 = getelementptr inbounds %struct.MFace, %struct.MFace* %42, i32 0, i32 2, !dbg !15792
  %43 = load i32, i32* %v341, align 4, !dbg !15792
  %idxprom42 = zext i32 %43 to i64, !dbg !15789
  %arrayidx43 = getelementptr inbounds %struct.MVert, %struct.MVert* %41, i64 %idxprom42, !dbg !15789
  %co44 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx43, i32 0, i32 0, !dbg !15793
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %co44, i64 0, i64 0, !dbg !15789
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !15794
  call void @interp_v3_v3v3v3(float* %arraydecay27, float* %arraydecay33, float* %arraydecay39, float* %arraydecay45, float* %arraydecay46), !dbg !15795
  br label %if.end47

if.end47:                                         ; preds = %if.else26, %if.then10
  %44 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !15796
  %rv3d = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %44, i32 0, i32 1, !dbg !15798
  %45 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !15798
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %wco, i64 0, i64 0, !dbg !15799
  %call49 = call zeroext i8 @ED_view3d_clipping_test(%struct.RegionView3D* %45, float* %arraydecay48, i8 zeroext 1), !dbg !15800
  %tobool50 = icmp ne i8 %call49, 0, !dbg !15800
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !15801

if.then51:                                        ; preds = %if.end47
  store i32 1, i32* %retval, align 4, !dbg !15802
  br label %return, !dbg !15802

if.end52:                                         ; preds = %if.end47
  store i32 -1, i32* %retval, align 4, !dbg !15804
  br label %return, !dbg !15804

return:                                           ; preds = %if.end52, %if.then51, %if.then
  %46 = load i32, i32* %retval, align 4, !dbg !15805
  ret i32 %46, !dbg !15805
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @project_paint_occlude_ptv(float* %pt, float* %v1, float* %v2, float* %v3, float* %w, i8 zeroext %is_ortho) #0 !dbg !15806 {
entry:
  %retval = alloca i32, align 4
  %pt.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %w.addr = alloca float*, align 8
  %is_ortho.addr = alloca i8, align 1
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !15809, metadata !DIExpression()), !dbg !15810
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !15811, metadata !DIExpression()), !dbg !15812
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !15813, metadata !DIExpression()), !dbg !15814
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !15815, metadata !DIExpression()), !dbg !15816
  store float* %w, float** %w.addr, align 8
  call void @llvm.dbg.declare(metadata float** %w.addr, metadata !15817, metadata !DIExpression()), !dbg !15818
  store i8 %is_ortho, i8* %is_ortho.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_ortho.addr, metadata !15819, metadata !DIExpression()), !dbg !15820
  %0 = load float*, float** %v1.addr, align 8, !dbg !15821
  %arrayidx = getelementptr inbounds float, float* %0, i64 2, !dbg !15821
  %1 = load float, float* %arrayidx, align 4, !dbg !15821
  %2 = load float*, float** %pt.addr, align 8, !dbg !15823
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !15823
  %3 = load float, float* %arrayidx1, align 4, !dbg !15823
  %cmp = fcmp ogt float %1, %3, !dbg !15824
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !15825

land.lhs.true:                                    ; preds = %entry
  %4 = load float*, float** %v2.addr, align 8, !dbg !15826
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !15826
  %5 = load float, float* %arrayidx2, align 4, !dbg !15826
  %6 = load float*, float** %pt.addr, align 8, !dbg !15827
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 2, !dbg !15827
  %7 = load float, float* %arrayidx3, align 4, !dbg !15827
  %cmp4 = fcmp ogt float %5, %7, !dbg !15828
  br i1 %cmp4, label %land.lhs.true5, label %if.end, !dbg !15829

land.lhs.true5:                                   ; preds = %land.lhs.true
  %8 = load float*, float** %v3.addr, align 8, !dbg !15830
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 2, !dbg !15830
  %9 = load float, float* %arrayidx6, align 4, !dbg !15830
  %10 = load float*, float** %pt.addr, align 8, !dbg !15831
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !15831
  %11 = load float, float* %arrayidx7, align 4, !dbg !15831
  %cmp8 = fcmp ogt float %9, %11, !dbg !15832
  br i1 %cmp8, label %if.then, label %if.end, !dbg !15833

if.then:                                          ; preds = %land.lhs.true5
  store i32 0, i32* %retval, align 4, !dbg !15834
  br label %return, !dbg !15834

if.end:                                           ; preds = %land.lhs.true5, %land.lhs.true, %entry
  %12 = load float*, float** %pt.addr, align 8, !dbg !15835
  %13 = load float*, float** %v1.addr, align 8, !dbg !15837
  %14 = load float*, float** %v2.addr, align 8, !dbg !15838
  %15 = load float*, float** %v3.addr, align 8, !dbg !15839
  %call = call i32 @isect_point_tri_v2(float* %12, float* %13, float* %14, float* %15), !dbg !15840
  %tobool = icmp ne i32 %call, 0, !dbg !15840
  br i1 %tobool, label %if.end10, label %if.then9, !dbg !15841

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !15842
  br label %return, !dbg !15842

if.end10:                                         ; preds = %if.end
  %16 = load float*, float** %v1.addr, align 8, !dbg !15843
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 2, !dbg !15843
  %17 = load float, float* %arrayidx11, align 4, !dbg !15843
  %18 = load float*, float** %pt.addr, align 8, !dbg !15845
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 2, !dbg !15845
  %19 = load float, float* %arrayidx12, align 4, !dbg !15845
  %cmp13 = fcmp olt float %17, %19, !dbg !15846
  br i1 %cmp13, label %land.lhs.true14, label %if.else, !dbg !15847

land.lhs.true14:                                  ; preds = %if.end10
  %20 = load float*, float** %v2.addr, align 8, !dbg !15848
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 2, !dbg !15848
  %21 = load float, float* %arrayidx15, align 4, !dbg !15848
  %22 = load float*, float** %pt.addr, align 8, !dbg !15849
  %arrayidx16 = getelementptr inbounds float, float* %22, i64 2, !dbg !15849
  %23 = load float, float* %arrayidx16, align 4, !dbg !15849
  %cmp17 = fcmp olt float %21, %23, !dbg !15850
  br i1 %cmp17, label %land.lhs.true18, label %if.else, !dbg !15851

land.lhs.true18:                                  ; preds = %land.lhs.true14
  %24 = load float*, float** %v3.addr, align 8, !dbg !15852
  %arrayidx19 = getelementptr inbounds float, float* %24, i64 2, !dbg !15852
  %25 = load float, float* %arrayidx19, align 4, !dbg !15852
  %26 = load float*, float** %pt.addr, align 8, !dbg !15853
  %arrayidx20 = getelementptr inbounds float, float* %26, i64 2, !dbg !15853
  %27 = load float, float* %arrayidx20, align 4, !dbg !15853
  %cmp21 = fcmp olt float %25, %27, !dbg !15854
  br i1 %cmp21, label %if.then22, label %if.else, !dbg !15855

if.then22:                                        ; preds = %land.lhs.true18
  store i32 1, i32* %retval, align 4, !dbg !15856
  br label %return, !dbg !15856

if.else:                                          ; preds = %land.lhs.true18, %land.lhs.true14, %if.end10
  %28 = load i8, i8* %is_ortho.addr, align 1, !dbg !15858
  %tobool23 = icmp ne i8 %28, 0, !dbg !15858
  br i1 %tobool23, label %if.then24, label %if.else30, !dbg !15861

if.then24:                                        ; preds = %if.else
  %29 = load float*, float** %pt.addr, align 8, !dbg !15862
  %30 = load float*, float** %v1.addr, align 8, !dbg !15865
  %31 = load float*, float** %v2.addr, align 8, !dbg !15866
  %32 = load float*, float** %v3.addr, align 8, !dbg !15867
  %33 = load float*, float** %w.addr, align 8, !dbg !15868
  %call25 = call float @VecZDepthOrtho(float* %29, float* %30, float* %31, float* %32, float* %33), !dbg !15869
  %34 = load float*, float** %pt.addr, align 8, !dbg !15870
  %arrayidx26 = getelementptr inbounds float, float* %34, i64 2, !dbg !15870
  %35 = load float, float* %arrayidx26, align 4, !dbg !15870
  %cmp27 = fcmp olt float %call25, %35, !dbg !15871
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !15872

if.then28:                                        ; preds = %if.then24
  store i32 2, i32* %retval, align 4, !dbg !15873
  br label %return, !dbg !15873

if.end29:                                         ; preds = %if.then24
  br label %if.end36, !dbg !15874

if.else30:                                        ; preds = %if.else
  %36 = load float*, float** %pt.addr, align 8, !dbg !15875
  %37 = load float*, float** %v1.addr, align 8, !dbg !15878
  %38 = load float*, float** %v2.addr, align 8, !dbg !15879
  %39 = load float*, float** %v3.addr, align 8, !dbg !15880
  %40 = load float*, float** %w.addr, align 8, !dbg !15881
  %call31 = call float @VecZDepthPersp(float* %36, float* %37, float* %38, float* %39, float* %40), !dbg !15882
  %41 = load float*, float** %pt.addr, align 8, !dbg !15883
  %arrayidx32 = getelementptr inbounds float, float* %41, i64 2, !dbg !15883
  %42 = load float, float* %arrayidx32, align 4, !dbg !15883
  %cmp33 = fcmp olt float %call31, %42, !dbg !15884
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !15885

if.then34:                                        ; preds = %if.else30
  store i32 2, i32* %retval, align 4, !dbg !15886
  br label %return, !dbg !15886

if.end35:                                         ; preds = %if.else30
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end29
  br label %if.end37

if.end37:                                         ; preds = %if.end36
  store i32 -1, i32* %retval, align 4, !dbg !15887
  br label %return, !dbg !15887

return:                                           ; preds = %if.end37, %if.then34, %if.then28, %if.then22, %if.then9, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !15888
  ret i32 %43, !dbg !15888
}

declare dso_local i32 @isect_point_tri_v2(float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @VecZDepthOrtho(float* %pt, float* %v1, float* %v2, float* %v3, float* %w) #0 !dbg !15889 {
entry:
  %pt.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %w.addr = alloca float*, align 8
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !15892, metadata !DIExpression()), !dbg !15893
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !15894, metadata !DIExpression()), !dbg !15895
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !15896, metadata !DIExpression()), !dbg !15897
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !15898, metadata !DIExpression()), !dbg !15899
  store float* %w, float** %w.addr, align 8
  call void @llvm.dbg.declare(metadata float** %w.addr, metadata !15900, metadata !DIExpression()), !dbg !15901
  %0 = load float*, float** %v1.addr, align 8, !dbg !15902
  %1 = load float*, float** %v2.addr, align 8, !dbg !15903
  %2 = load float*, float** %v3.addr, align 8, !dbg !15904
  %3 = load float*, float** %pt.addr, align 8, !dbg !15905
  %4 = load float*, float** %w.addr, align 8, !dbg !15906
  call void @barycentric_weights_v2(float* %0, float* %1, float* %2, float* %3, float* %4), !dbg !15907
  %5 = load float*, float** %v1.addr, align 8, !dbg !15908
  %arrayidx = getelementptr inbounds float, float* %5, i64 2, !dbg !15908
  %6 = load float, float* %arrayidx, align 4, !dbg !15908
  %7 = load float*, float** %w.addr, align 8, !dbg !15909
  %arrayidx1 = getelementptr inbounds float, float* %7, i64 0, !dbg !15909
  %8 = load float, float* %arrayidx1, align 4, !dbg !15909
  %mul = fmul float %6, %8, !dbg !15910
  %9 = load float*, float** %v2.addr, align 8, !dbg !15911
  %arrayidx2 = getelementptr inbounds float, float* %9, i64 2, !dbg !15911
  %10 = load float, float* %arrayidx2, align 4, !dbg !15911
  %11 = load float*, float** %w.addr, align 8, !dbg !15912
  %arrayidx3 = getelementptr inbounds float, float* %11, i64 1, !dbg !15912
  %12 = load float, float* %arrayidx3, align 4, !dbg !15912
  %mul4 = fmul float %10, %12, !dbg !15913
  %add = fadd float %mul, %mul4, !dbg !15914
  %13 = load float*, float** %v3.addr, align 8, !dbg !15915
  %arrayidx5 = getelementptr inbounds float, float* %13, i64 2, !dbg !15915
  %14 = load float, float* %arrayidx5, align 4, !dbg !15915
  %15 = load float*, float** %w.addr, align 8, !dbg !15916
  %arrayidx6 = getelementptr inbounds float, float* %15, i64 2, !dbg !15916
  %16 = load float, float* %arrayidx6, align 4, !dbg !15916
  %mul7 = fmul float %14, %16, !dbg !15917
  %add8 = fadd float %add, %mul7, !dbg !15918
  ret float %add8, !dbg !15919
}

; Function Attrs: noinline nounwind uwtable
define internal float @VecZDepthPersp(float* %pt, float* %v1, float* %v2, float* %v3, float* %w) #0 !dbg !15920 {
entry:
  %pt.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %w.addr = alloca float*, align 8
  %wtot_inv = alloca float, align 4
  %wtot = alloca float, align 4
  %w_tmp = alloca [3 x float], align 4
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !15921, metadata !DIExpression()), !dbg !15922
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !15923, metadata !DIExpression()), !dbg !15924
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !15925, metadata !DIExpression()), !dbg !15926
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !15927, metadata !DIExpression()), !dbg !15928
  store float* %w, float** %w.addr, align 8
  call void @llvm.dbg.declare(metadata float** %w.addr, metadata !15929, metadata !DIExpression()), !dbg !15930
  call void @llvm.dbg.declare(metadata float* %wtot_inv, metadata !15931, metadata !DIExpression()), !dbg !15932
  call void @llvm.dbg.declare(metadata float* %wtot, metadata !15933, metadata !DIExpression()), !dbg !15934
  call void @llvm.dbg.declare(metadata [3 x float]* %w_tmp, metadata !15935, metadata !DIExpression()), !dbg !15936
  %0 = load float*, float** %v1.addr, align 8, !dbg !15937
  %1 = load float*, float** %v2.addr, align 8, !dbg !15938
  %2 = load float*, float** %v3.addr, align 8, !dbg !15939
  %3 = load float*, float** %pt.addr, align 8, !dbg !15940
  %4 = load float*, float** %w.addr, align 8, !dbg !15941
  call void @barycentric_weights_v2_persp(float* %0, float* %1, float* %2, float* %3, float* %4), !dbg !15942
  %5 = load float*, float** %w.addr, align 8, !dbg !15943
  %arrayidx = getelementptr inbounds float, float* %5, i64 0, !dbg !15943
  %6 = load float, float* %arrayidx, align 4, !dbg !15943
  %7 = load float*, float** %v1.addr, align 8, !dbg !15944
  %arrayidx1 = getelementptr inbounds float, float* %7, i64 3, !dbg !15944
  %8 = load float, float* %arrayidx1, align 4, !dbg !15944
  %mul = fmul float %6, %8, !dbg !15945
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 0, !dbg !15946
  store float %mul, float* %arrayidx2, align 4, !dbg !15947
  %9 = load float*, float** %w.addr, align 8, !dbg !15948
  %arrayidx3 = getelementptr inbounds float, float* %9, i64 1, !dbg !15948
  %10 = load float, float* %arrayidx3, align 4, !dbg !15948
  %11 = load float*, float** %v2.addr, align 8, !dbg !15949
  %arrayidx4 = getelementptr inbounds float, float* %11, i64 3, !dbg !15949
  %12 = load float, float* %arrayidx4, align 4, !dbg !15949
  %mul5 = fmul float %10, %12, !dbg !15950
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 1, !dbg !15951
  store float %mul5, float* %arrayidx6, align 4, !dbg !15952
  %13 = load float*, float** %w.addr, align 8, !dbg !15953
  %arrayidx7 = getelementptr inbounds float, float* %13, i64 2, !dbg !15953
  %14 = load float, float* %arrayidx7, align 4, !dbg !15953
  %15 = load float*, float** %v3.addr, align 8, !dbg !15954
  %arrayidx8 = getelementptr inbounds float, float* %15, i64 3, !dbg !15954
  %16 = load float, float* %arrayidx8, align 4, !dbg !15954
  %mul9 = fmul float %14, %16, !dbg !15955
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 2, !dbg !15956
  store float %mul9, float* %arrayidx10, align 4, !dbg !15957
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 0, !dbg !15958
  %17 = load float, float* %arrayidx11, align 4, !dbg !15958
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 1, !dbg !15959
  %18 = load float, float* %arrayidx12, align 4, !dbg !15959
  %add = fadd float %17, %18, !dbg !15960
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 2, !dbg !15961
  %19 = load float, float* %arrayidx13, align 4, !dbg !15961
  %add14 = fadd float %add, %19, !dbg !15962
  store float %add14, float* %wtot, align 4, !dbg !15963
  %20 = load float, float* %wtot, align 4, !dbg !15964
  %cmp = fcmp une float %20, 0.000000e+00, !dbg !15966
  br i1 %cmp, label %if.then, label %if.else, !dbg !15967

if.then:                                          ; preds = %entry
  %21 = load float, float* %wtot, align 4, !dbg !15968
  %div = fdiv float 1.000000e+00, %21, !dbg !15970
  store float %div, float* %wtot_inv, align 4, !dbg !15971
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 0, !dbg !15972
  %22 = load float, float* %arrayidx15, align 4, !dbg !15972
  %23 = load float, float* %wtot_inv, align 4, !dbg !15973
  %mul16 = fmul float %22, %23, !dbg !15974
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 0, !dbg !15975
  store float %mul16, float* %arrayidx17, align 4, !dbg !15976
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 1, !dbg !15977
  %24 = load float, float* %arrayidx18, align 4, !dbg !15977
  %25 = load float, float* %wtot_inv, align 4, !dbg !15978
  %mul19 = fmul float %24, %25, !dbg !15979
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 1, !dbg !15980
  store float %mul19, float* %arrayidx20, align 4, !dbg !15981
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 2, !dbg !15982
  %26 = load float, float* %arrayidx21, align 4, !dbg !15982
  %27 = load float, float* %wtot_inv, align 4, !dbg !15983
  %mul22 = fmul float %26, %27, !dbg !15984
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 2, !dbg !15985
  store float %mul22, float* %arrayidx23, align 4, !dbg !15986
  br label %if.end, !dbg !15987

if.else:                                          ; preds = %entry
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 2, !dbg !15988
  store float 0x3FD5555560000000, float* %arrayidx24, align 4, !dbg !15989
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 1, !dbg !15990
  store float 0x3FD5555560000000, float* %arrayidx25, align 4, !dbg !15991
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 0, !dbg !15992
  store float 0x3FD5555560000000, float* %arrayidx26, align 4, !dbg !15993
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %28 = load float*, float** %v1.addr, align 8, !dbg !15994
  %arrayidx27 = getelementptr inbounds float, float* %28, i64 2, !dbg !15994
  %29 = load float, float* %arrayidx27, align 4, !dbg !15994
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 0, !dbg !15995
  %30 = load float, float* %arrayidx28, align 4, !dbg !15995
  %mul29 = fmul float %29, %30, !dbg !15996
  %31 = load float*, float** %v2.addr, align 8, !dbg !15997
  %arrayidx30 = getelementptr inbounds float, float* %31, i64 2, !dbg !15997
  %32 = load float, float* %arrayidx30, align 4, !dbg !15997
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 1, !dbg !15998
  %33 = load float, float* %arrayidx31, align 4, !dbg !15998
  %mul32 = fmul float %32, %33, !dbg !15999
  %add33 = fadd float %mul29, %mul32, !dbg !16000
  %34 = load float*, float** %v3.addr, align 8, !dbg !16001
  %arrayidx34 = getelementptr inbounds float, float* %34, i64 2, !dbg !16001
  %35 = load float, float* %arrayidx34, align 4, !dbg !16001
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 2, !dbg !16002
  %36 = load float, float* %arrayidx35, align 4, !dbg !16002
  %mul36 = fmul float %35, %36, !dbg !16003
  %add37 = fadd float %add33, %mul36, !dbg !16004
  ret float %add37, !dbg !16005
}

declare dso_local %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image*, %struct.ImageUser*, i8**) #2

; Function Attrs: noinline nounwind uwtable
define internal void @project_face_pixel(%struct.MTFace* %tf_other, %struct.ImBuf* %ibuf_other, float* %w, i32 %side, i8* %rgba_ub, float* %rgba_f) #0 !dbg !16006 {
entry:
  %tf_other.addr = alloca %struct.MTFace*, align 8
  %ibuf_other.addr = alloca %struct.ImBuf*, align 8
  %w.addr = alloca float*, align 8
  %side.addr = alloca i32, align 4
  %rgba_ub.addr = alloca i8*, align 8
  %rgba_f.addr = alloca float*, align 8
  %uvCo1 = alloca float*, align 8
  %uvCo2 = alloca float*, align 8
  %uvCo3 = alloca float*, align 8
  %uv_other = alloca [2 x float], align 4
  %x = alloca float, align 4
  %y = alloca float, align 4
  store %struct.MTFace* %tf_other, %struct.MTFace** %tf_other.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf_other.addr, metadata !16009, metadata !DIExpression()), !dbg !16010
  store %struct.ImBuf* %ibuf_other, %struct.ImBuf** %ibuf_other.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf_other.addr, metadata !16011, metadata !DIExpression()), !dbg !16012
  store float* %w, float** %w.addr, align 8
  call void @llvm.dbg.declare(metadata float** %w.addr, metadata !16013, metadata !DIExpression()), !dbg !16014
  store i32 %side, i32* %side.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %side.addr, metadata !16015, metadata !DIExpression()), !dbg !16016
  store i8* %rgba_ub, i8** %rgba_ub.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rgba_ub.addr, metadata !16017, metadata !DIExpression()), !dbg !16018
  store float* %rgba_f, float** %rgba_f.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rgba_f.addr, metadata !16019, metadata !DIExpression()), !dbg !16020
  call void @llvm.dbg.declare(metadata float** %uvCo1, metadata !16021, metadata !DIExpression()), !dbg !16022
  call void @llvm.dbg.declare(metadata float** %uvCo2, metadata !16023, metadata !DIExpression()), !dbg !16024
  call void @llvm.dbg.declare(metadata float** %uvCo3, metadata !16025, metadata !DIExpression()), !dbg !16026
  call void @llvm.dbg.declare(metadata [2 x float]* %uv_other, metadata !16027, metadata !DIExpression()), !dbg !16028
  call void @llvm.dbg.declare(metadata float* %x, metadata !16029, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.declare(metadata float* %y, metadata !16031, metadata !DIExpression()), !dbg !16032
  %0 = load %struct.MTFace*, %struct.MTFace** %tf_other.addr, align 8, !dbg !16033
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %0, i32 0, i32 0, !dbg !16034
  %arrayidx = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 0, !dbg !16033
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !16033
  store float* %arraydecay, float** %uvCo1, align 8, !dbg !16035
  %1 = load i32, i32* %side.addr, align 4, !dbg !16036
  %cmp = icmp eq i32 %1, 1, !dbg !16038
  br i1 %cmp, label %if.then, label %if.else, !dbg !16039

if.then:                                          ; preds = %entry
  %2 = load %struct.MTFace*, %struct.MTFace** %tf_other.addr, align 8, !dbg !16040
  %uv1 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %2, i32 0, i32 0, !dbg !16042
  %arrayidx2 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv1, i64 0, i64 2, !dbg !16040
  %arraydecay3 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx2, i64 0, i64 0, !dbg !16040
  store float* %arraydecay3, float** %uvCo2, align 8, !dbg !16043
  %3 = load %struct.MTFace*, %struct.MTFace** %tf_other.addr, align 8, !dbg !16044
  %uv4 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %3, i32 0, i32 0, !dbg !16045
  %arrayidx5 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv4, i64 0, i64 3, !dbg !16044
  %arraydecay6 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx5, i64 0, i64 0, !dbg !16044
  store float* %arraydecay6, float** %uvCo3, align 8, !dbg !16046
  br label %if.end, !dbg !16047

if.else:                                          ; preds = %entry
  %4 = load %struct.MTFace*, %struct.MTFace** %tf_other.addr, align 8, !dbg !16048
  %uv7 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %4, i32 0, i32 0, !dbg !16050
  %arrayidx8 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv7, i64 0, i64 1, !dbg !16048
  %arraydecay9 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx8, i64 0, i64 0, !dbg !16048
  store float* %arraydecay9, float** %uvCo2, align 8, !dbg !16051
  %5 = load %struct.MTFace*, %struct.MTFace** %tf_other.addr, align 8, !dbg !16052
  %uv10 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %5, i32 0, i32 0, !dbg !16053
  %arrayidx11 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv10, i64 0, i64 2, !dbg !16052
  %arraydecay12 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx11, i64 0, i64 0, !dbg !16052
  store float* %arraydecay12, float** %uvCo3, align 8, !dbg !16054
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arraydecay13 = getelementptr inbounds [2 x float], [2 x float]* %uv_other, i64 0, i64 0, !dbg !16055
  %6 = load float*, float** %uvCo1, align 8, !dbg !16056
  %7 = load float*, float** %uvCo2, align 8, !dbg !16057
  %8 = load float*, float** %uvCo3, align 8, !dbg !16058
  %9 = load float*, float** %w.addr, align 8, !dbg !16059
  call void @interp_v2_v2v2v2(float* %arraydecay13, float* %6, float* %7, float* %8, float* %9), !dbg !16060
  %arraydecay14 = getelementptr inbounds [2 x float], [2 x float]* %uv_other, i64 0, i64 0, !dbg !16061
  %10 = load %struct.ImBuf*, %struct.ImBuf** %ibuf_other.addr, align 8, !dbg !16062
  %x15 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %10, i32 0, i32 2, !dbg !16063
  %11 = load i32, i32* %x15, align 8, !dbg !16063
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibuf_other.addr, align 8, !dbg !16064
  %y16 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %12, i32 0, i32 3, !dbg !16065
  %13 = load i32, i32* %y16, align 4, !dbg !16065
  call void @uvco_to_wrapped_pxco(float* %arraydecay14, i32 %11, i32 %13, float* %x, float* %y), !dbg !16066
  %14 = load %struct.ImBuf*, %struct.ImBuf** %ibuf_other.addr, align 8, !dbg !16067
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %14, i32 0, i32 9, !dbg !16069
  %15 = load float*, float** %rect_float, align 8, !dbg !16069
  %tobool = icmp ne float* %15, null, !dbg !16067
  br i1 %tobool, label %if.then17, label %if.else18, !dbg !16070

if.then17:                                        ; preds = %if.end
  %16 = load %struct.ImBuf*, %struct.ImBuf** %ibuf_other.addr, align 8, !dbg !16071
  %17 = load float*, float** %rgba_f.addr, align 8, !dbg !16073
  %18 = load float, float* %x, align 4, !dbg !16074
  %19 = load float, float* %y, align 4, !dbg !16075
  call void @bilinear_interpolation_color_wrap(%struct.ImBuf* %16, i8* null, float* %17, float %18, float %19), !dbg !16076
  br label %if.end19, !dbg !16077

if.else18:                                        ; preds = %if.end
  %20 = load %struct.ImBuf*, %struct.ImBuf** %ibuf_other.addr, align 8, !dbg !16078
  %21 = load i8*, i8** %rgba_ub.addr, align 8, !dbg !16080
  %22 = load float, float* %x, align 4, !dbg !16081
  %23 = load float, float* %y, align 4, !dbg !16082
  call void @bilinear_interpolation_color_wrap(%struct.ImBuf* %20, i8* %21, float* null, float %22, float %23), !dbg !16083
  br label %if.end19

if.end19:                                         ; preds = %if.else18, %if.then17
  ret void, !dbg !16084
}

declare dso_local void @BKE_image_release_ibuf(%struct.Image*, %struct.ImBuf*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !16085 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !16088, metadata !DIExpression()), !dbg !16089
  %0 = load float*, float** %n.addr, align 8, !dbg !16090
  %1 = load float*, float** %n.addr, align 8, !dbg !16091
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !16092
  ret float %call, !dbg !16093
}

declare dso_local float @normal_quad_v3(float*, float*, float*, float*, float*) #2

declare dso_local float @normal_tri_v3(float*, float*, float*, float*) #2

declare dso_local float @angle_normalized_v3v3(float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @uvco_to_wrapped_pxco(float* %uv, i32 %ibuf_x, i32 %ibuf_y, float* %x, float* %y) #0 !dbg !16094 {
entry:
  %uv.addr = alloca float*, align 8
  %ibuf_x.addr = alloca i32, align 4
  %ibuf_y.addr = alloca i32, align 4
  %x.addr = alloca float*, align 8
  %y.addr = alloca float*, align 8
  store float* %uv, float** %uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv.addr, metadata !16097, metadata !DIExpression()), !dbg !16098
  store i32 %ibuf_x, i32* %ibuf_x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ibuf_x.addr, metadata !16099, metadata !DIExpression()), !dbg !16100
  store i32 %ibuf_y, i32* %ibuf_y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ibuf_y.addr, metadata !16101, metadata !DIExpression()), !dbg !16102
  store float* %x, float** %x.addr, align 8
  call void @llvm.dbg.declare(metadata float** %x.addr, metadata !16103, metadata !DIExpression()), !dbg !16104
  store float* %y, float** %y.addr, align 8
  call void @llvm.dbg.declare(metadata float** %y.addr, metadata !16105, metadata !DIExpression()), !dbg !16106
  %0 = load float*, float** %uv.addr, align 8, !dbg !16107
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !16107
  %1 = load float, float* %arrayidx, align 4, !dbg !16107
  %call = call float @fmodf(float %1, float 1.000000e+00) #5, !dbg !16108
  %2 = load float*, float** %x.addr, align 8, !dbg !16109
  store float %call, float* %2, align 4, !dbg !16110
  %3 = load float*, float** %uv.addr, align 8, !dbg !16111
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !16111
  %4 = load float, float* %arrayidx1, align 4, !dbg !16111
  %call2 = call float @fmodf(float %4, float 1.000000e+00) #5, !dbg !16112
  %5 = load float*, float** %y.addr, align 8, !dbg !16113
  store float %call2, float* %5, align 4, !dbg !16114
  %6 = load float*, float** %x.addr, align 8, !dbg !16115
  %7 = load float, float* %6, align 4, !dbg !16117
  %cmp = fcmp olt float %7, 0.000000e+00, !dbg !16118
  br i1 %cmp, label %if.then, label %if.end, !dbg !16119

if.then:                                          ; preds = %entry
  %8 = load float*, float** %x.addr, align 8, !dbg !16120
  %9 = load float, float* %8, align 4, !dbg !16121
  %add = fadd float %9, 1.000000e+00, !dbg !16121
  store float %add, float* %8, align 4, !dbg !16121
  br label %if.end, !dbg !16122

if.end:                                           ; preds = %if.then, %entry
  %10 = load float*, float** %y.addr, align 8, !dbg !16123
  %11 = load float, float* %10, align 4, !dbg !16125
  %cmp3 = fcmp olt float %11, 0.000000e+00, !dbg !16126
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !16127

if.then4:                                         ; preds = %if.end
  %12 = load float*, float** %y.addr, align 8, !dbg !16128
  %13 = load float, float* %12, align 4, !dbg !16129
  %add5 = fadd float %13, 1.000000e+00, !dbg !16129
  store float %add5, float* %12, align 4, !dbg !16129
  br label %if.end6, !dbg !16130

if.end6:                                          ; preds = %if.then4, %if.end
  %14 = load float*, float** %x.addr, align 8, !dbg !16131
  %15 = load float, float* %14, align 4, !dbg !16132
  %16 = load i32, i32* %ibuf_x.addr, align 4, !dbg !16133
  %conv = sitofp i32 %16 to float, !dbg !16133
  %mul = fmul float %15, %conv, !dbg !16134
  %sub = fsub float %mul, 5.000000e-01, !dbg !16135
  %17 = load float*, float** %x.addr, align 8, !dbg !16136
  store float %sub, float* %17, align 4, !dbg !16137
  %18 = load float*, float** %y.addr, align 8, !dbg !16138
  %19 = load float, float* %18, align 4, !dbg !16139
  %20 = load i32, i32* %ibuf_y.addr, align 4, !dbg !16140
  %conv7 = sitofp i32 %20 to float, !dbg !16140
  %mul8 = fmul float %19, %conv7, !dbg !16141
  %sub9 = fsub float %mul8, 5.000000e-01, !dbg !16142
  %21 = load float*, float** %y.addr, align 8, !dbg !16143
  store float %sub9, float* %21, align 4, !dbg !16144
  ret void, !dbg !16145
}

declare dso_local void @bilinear_interpolation_color_wrap(%struct.ImBuf*, i8*, float*, float, float) #2

; Function Attrs: nounwind
declare dso_local float @fmodf(float, float) #4

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !16146 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !16149, metadata !DIExpression()), !dbg !16150
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !16151, metadata !DIExpression()), !dbg !16152
  call void @llvm.dbg.declare(metadata float* %d, metadata !16153, metadata !DIExpression()), !dbg !16154
  %0 = load float*, float** %a.addr, align 8, !dbg !16155
  %1 = load float*, float** %a.addr, align 8, !dbg !16156
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !16157
  store float %call, float* %d, align 4, !dbg !16154
  %2 = load float, float* %d, align 4, !dbg !16158
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !16160
  br i1 %cmp, label %if.then, label %if.else, !dbg !16161

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !16162
  %call1 = call float @sqrtf(float %3) #5, !dbg !16164
  store float %call1, float* %d, align 4, !dbg !16165
  %4 = load float*, float** %r.addr, align 8, !dbg !16166
  %5 = load float*, float** %a.addr, align 8, !dbg !16167
  %6 = load float, float* %d, align 4, !dbg !16168
  %div = fdiv float 1.000000e+00, %6, !dbg !16169
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !16170
  br label %if.end, !dbg !16171

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !16172
  call void @zero_v3(float* %7), !dbg !16174
  store float 0.000000e+00, float* %d, align 4, !dbg !16175
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !16176
  ret float %8, !dbg !16177
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !16178 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !16179, metadata !DIExpression()), !dbg !16180
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !16181, metadata !DIExpression()), !dbg !16182
  %0 = load float*, float** %a.addr, align 8, !dbg !16183
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !16183
  %1 = load float, float* %arrayidx, align 4, !dbg !16183
  %2 = load float*, float** %b.addr, align 8, !dbg !16184
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !16184
  %3 = load float, float* %arrayidx1, align 4, !dbg !16184
  %mul = fmul float %1, %3, !dbg !16185
  %4 = load float*, float** %a.addr, align 8, !dbg !16186
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !16186
  %5 = load float, float* %arrayidx2, align 4, !dbg !16186
  %6 = load float*, float** %b.addr, align 8, !dbg !16187
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !16187
  %7 = load float, float* %arrayidx3, align 4, !dbg !16187
  %mul4 = fmul float %5, %7, !dbg !16188
  %add = fadd float %mul, %mul4, !dbg !16189
  %8 = load float*, float** %a.addr, align 8, !dbg !16190
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !16190
  %9 = load float, float* %arrayidx5, align 4, !dbg !16190
  %10 = load float*, float** %b.addr, align 8, !dbg !16191
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !16191
  %11 = load float, float* %arrayidx6, align 4, !dbg !16191
  %mul7 = fmul float %9, %11, !dbg !16192
  %add8 = fadd float %add, %mul7, !dbg !16193
  ret float %add8, !dbg !16194
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !16195 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !16196, metadata !DIExpression()), !dbg !16197
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !16198, metadata !DIExpression()), !dbg !16199
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !16200, metadata !DIExpression()), !dbg !16201
  %0 = load float*, float** %a.addr, align 8, !dbg !16202
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !16202
  %1 = load float, float* %arrayidx, align 4, !dbg !16202
  %2 = load float, float* %f.addr, align 4, !dbg !16203
  %mul = fmul float %1, %2, !dbg !16204
  %3 = load float*, float** %r.addr, align 8, !dbg !16205
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !16205
  store float %mul, float* %arrayidx1, align 4, !dbg !16206
  %4 = load float*, float** %a.addr, align 8, !dbg !16207
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !16207
  %5 = load float, float* %arrayidx2, align 4, !dbg !16207
  %6 = load float, float* %f.addr, align 4, !dbg !16208
  %mul3 = fmul float %5, %6, !dbg !16209
  %7 = load float*, float** %r.addr, align 8, !dbg !16210
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !16210
  store float %mul3, float* %arrayidx4, align 4, !dbg !16211
  %8 = load float*, float** %a.addr, align 8, !dbg !16212
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !16212
  %9 = load float, float* %arrayidx5, align 4, !dbg !16212
  %10 = load float, float* %f.addr, align 4, !dbg !16213
  %mul6 = fmul float %9, %10, !dbg !16214
  %11 = load float*, float** %r.addr, align 8, !dbg !16215
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !16215
  store float %mul6, float* %arrayidx7, align 4, !dbg !16216
  ret void, !dbg !16217
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !16218 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !16221, metadata !DIExpression()), !dbg !16222
  %0 = load float*, float** %r.addr, align 8, !dbg !16223
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !16223
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !16224
  %1 = load float*, float** %r.addr, align 8, !dbg !16225
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !16225
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !16226
  %2 = load float*, float** %r.addr, align 8, !dbg !16227
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !16227
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !16228
  ret void, !dbg !16229
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @mod_i(i32 %i, i32 %n) #0 !dbg !16230 {
entry:
  %i.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !16231, metadata !DIExpression()), !dbg !16232
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !16233, metadata !DIExpression()), !dbg !16234
  %0 = load i32, i32* %i.addr, align 4, !dbg !16235
  %1 = load i32, i32* %n.addr, align 4, !dbg !16236
  %rem = srem i32 %0, %1, !dbg !16237
  %2 = load i32, i32* %n.addr, align 4, !dbg !16238
  %add = add nsw i32 %rem, %2, !dbg !16239
  %3 = load i32, i32* %n.addr, align 4, !dbg !16240
  %rem1 = srem i32 %add, %3, !dbg !16241
  ret i32 %rem1, !dbg !16242
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @project_paint_undo_subtiles(%struct.TileInfo* %tinf, i32 %tx, i32 %ty) #0 !dbg !16243 {
entry:
  %tinf.addr = alloca %struct.TileInfo*, align 8
  %tx.addr = alloca i32, align 4
  %ty.addr = alloca i32, align 4
  %pjIma = alloca %struct.ProjPaintImage*, align 8
  %tile_index = alloca i32, align 4
  %generate_tile = alloca i8, align 1
  %undorect = alloca i8*, align 8
  store %struct.TileInfo* %tinf, %struct.TileInfo** %tinf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TileInfo** %tinf.addr, metadata !16246, metadata !DIExpression()), !dbg !16247
  store i32 %tx, i32* %tx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tx.addr, metadata !16248, metadata !DIExpression()), !dbg !16249
  store i32 %ty, i32* %ty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ty.addr, metadata !16250, metadata !DIExpression()), !dbg !16251
  call void @llvm.dbg.declare(metadata %struct.ProjPaintImage** %pjIma, metadata !16252, metadata !DIExpression()), !dbg !16253
  %0 = load %struct.TileInfo*, %struct.TileInfo** %tinf.addr, align 8, !dbg !16254
  %pjima = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %0, i32 0, i32 4, !dbg !16255
  %1 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %pjima, align 8, !dbg !16255
  store %struct.ProjPaintImage* %1, %struct.ProjPaintImage** %pjIma, align 8, !dbg !16253
  call void @llvm.dbg.declare(metadata i32* %tile_index, metadata !16256, metadata !DIExpression()), !dbg !16257
  %2 = load i32, i32* %tx.addr, align 4, !dbg !16258
  %3 = load i32, i32* %ty.addr, align 4, !dbg !16259
  %4 = load %struct.TileInfo*, %struct.TileInfo** %tinf.addr, align 8, !dbg !16260
  %tile_width = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %4, i32 0, i32 2, !dbg !16261
  %5 = load i16, i16* %tile_width, align 2, !dbg !16261
  %conv = zext i16 %5 to i32, !dbg !16260
  %mul = mul nsw i32 %3, %conv, !dbg !16262
  %add = add nsw i32 %2, %mul, !dbg !16263
  store i32 %add, i32* %tile_index, align 4, !dbg !16257
  call void @llvm.dbg.declare(metadata i8* %generate_tile, metadata !16264, metadata !DIExpression()), !dbg !16265
  store i8 0, i8* %generate_tile, align 1, !dbg !16265
  %6 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %pjIma, align 8, !dbg !16266
  %undoRect = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %6, i32 0, i32 3, !dbg !16266
  %7 = load i8**, i8*** %undoRect, align 8, !dbg !16266
  %8 = load i32, i32* %tile_index, align 4, !dbg !16266
  %idxprom = sext i32 %8 to i64, !dbg !16266
  %arrayidx = getelementptr inbounds i8*, i8** %7, i64 %idxprom, !dbg !16266
  %9 = load i8*, i8** %arrayidx, align 8, !dbg !16266
  %tobool = icmp ne i8* %9, null, !dbg !16266
  br i1 %tobool, label %if.end18, label %if.then, !dbg !16268

if.then:                                          ; preds = %entry
  %10 = load %struct.TileInfo*, %struct.TileInfo** %tinf.addr, align 8, !dbg !16269
  %lock = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %10, i32 0, i32 0, !dbg !16272
  %11 = load i32*, i32** %lock, align 8, !dbg !16272
  %tobool1 = icmp ne i32* %11, null, !dbg !16269
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !16273

if.then2:                                         ; preds = %if.then
  %12 = load %struct.TileInfo*, %struct.TileInfo** %tinf.addr, align 8, !dbg !16274
  %lock3 = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %12, i32 0, i32 0, !dbg !16275
  %13 = load i32*, i32** %lock3, align 8, !dbg !16275
  call void @BLI_spin_lock(i32* %13), !dbg !16276
  br label %if.end, !dbg !16276

if.end:                                           ; preds = %if.then2, %if.then
  %14 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %pjIma, align 8, !dbg !16277
  %undoRect4 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %14, i32 0, i32 3, !dbg !16277
  %15 = load i8**, i8*** %undoRect4, align 8, !dbg !16277
  %16 = load i32, i32* %tile_index, align 4, !dbg !16277
  %idxprom5 = sext i32 %16 to i64, !dbg !16277
  %arrayidx6 = getelementptr inbounds i8*, i8** %15, i64 %idxprom5, !dbg !16277
  %17 = load i8*, i8** %arrayidx6, align 8, !dbg !16277
  %tobool7 = icmp ne i8* %17, null, !dbg !16277
  br i1 %tobool7, label %if.end12, label %if.then8, !dbg !16279

if.then8:                                         ; preds = %if.end
  %18 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %pjIma, align 8, !dbg !16280
  %undoRect9 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %18, i32 0, i32 3, !dbg !16282
  %19 = load i8**, i8*** %undoRect9, align 8, !dbg !16282
  %20 = load i32, i32* %tile_index, align 4, !dbg !16283
  %idxprom10 = sext i32 %20 to i64, !dbg !16280
  %arrayidx11 = getelementptr inbounds i8*, i8** %19, i64 %idxprom10, !dbg !16280
  store i8* inttoptr (i64 -1 to i8*), i8** %arrayidx11, align 8, !dbg !16284
  store i8 1, i8* %generate_tile, align 1, !dbg !16285
  br label %if.end12, !dbg !16286

if.end12:                                         ; preds = %if.then8, %if.end
  %21 = load %struct.TileInfo*, %struct.TileInfo** %tinf.addr, align 8, !dbg !16287
  %lock13 = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %21, i32 0, i32 0, !dbg !16289
  %22 = load i32*, i32** %lock13, align 8, !dbg !16289
  %tobool14 = icmp ne i32* %22, null, !dbg !16287
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !16290

if.then15:                                        ; preds = %if.end12
  %23 = load %struct.TileInfo*, %struct.TileInfo** %tinf.addr, align 8, !dbg !16291
  %lock16 = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %23, i32 0, i32 0, !dbg !16292
  %24 = load i32*, i32** %lock16, align 8, !dbg !16292
  call void @BLI_spin_unlock(i32* %24), !dbg !16293
  br label %if.end17, !dbg !16293

if.end17:                                         ; preds = %if.then15, %if.end12
  br label %if.end18, !dbg !16294

if.end18:                                         ; preds = %if.end17, %entry
  %25 = load i8, i8* %generate_tile, align 1, !dbg !16295
  %tobool19 = icmp ne i8 %25, 0, !dbg !16295
  br i1 %tobool19, label %if.then20, label %if.end49, !dbg !16297

if.then20:                                        ; preds = %if.end18
  call void @llvm.dbg.declare(metadata i8** %undorect, metadata !16298, metadata !DIExpression()), !dbg !16300
  %26 = load %struct.TileInfo*, %struct.TileInfo** %tinf.addr, align 8, !dbg !16301
  %masked = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %26, i32 0, i32 1, !dbg !16303
  %27 = load i8, i8* %masked, align 8, !dbg !16303
  %tobool21 = icmp ne i8 %27, 0, !dbg !16301
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !16304

if.then22:                                        ; preds = %if.then20
  %28 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %pjIma, align 8, !dbg !16305
  %ima = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %28, i32 0, i32 0, !dbg !16307
  %29 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !16307
  %30 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %pjIma, align 8, !dbg !16308
  %ibuf = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %30, i32 0, i32 1, !dbg !16309
  %31 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16309
  %32 = load %struct.TileInfo*, %struct.TileInfo** %tinf.addr, align 8, !dbg !16310
  %tmpibuf = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %32, i32 0, i32 3, !dbg !16311
  %33 = load %struct.ImBuf**, %struct.ImBuf*** %tmpibuf, align 8, !dbg !16311
  %34 = load i32, i32* %tx.addr, align 4, !dbg !16312
  %35 = load i32, i32* %ty.addr, align 4, !dbg !16313
  %36 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %pjIma, align 8, !dbg !16314
  %maskRect = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %36, i32 0, i32 4, !dbg !16315
  %37 = load i16**, i16*** %maskRect, align 8, !dbg !16315
  %38 = load i32, i32* %tile_index, align 4, !dbg !16316
  %idxprom23 = sext i32 %38 to i64, !dbg !16314
  %arrayidx24 = getelementptr inbounds i16*, i16** %37, i64 %idxprom23, !dbg !16314
  %39 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %pjIma, align 8, !dbg !16317
  %valid = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %39, i32 0, i32 5, !dbg !16318
  %40 = load i8**, i8*** %valid, align 8, !dbg !16318
  %41 = load i32, i32* %tile_index, align 4, !dbg !16319
  %idxprom25 = sext i32 %41 to i64, !dbg !16317
  %arrayidx26 = getelementptr inbounds i8*, i8** %40, i64 %idxprom25, !dbg !16317
  %call = call i8* @image_undo_push_tile(%struct.Image* %29, %struct.ImBuf* %31, %struct.ImBuf** %33, i32 %34, i32 %35, i16** %arrayidx24, i8** %arrayidx26, i8 zeroext 1), !dbg !16320
  store i8* %call, i8** %undorect, align 8, !dbg !16321
  br label %if.end34, !dbg !16322

if.else:                                          ; preds = %if.then20
  %42 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %pjIma, align 8, !dbg !16323
  %ima27 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %42, i32 0, i32 0, !dbg !16325
  %43 = load %struct.Image*, %struct.Image** %ima27, align 8, !dbg !16325
  %44 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %pjIma, align 8, !dbg !16326
  %ibuf28 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %44, i32 0, i32 1, !dbg !16327
  %45 = load %struct.ImBuf*, %struct.ImBuf** %ibuf28, align 8, !dbg !16327
  %46 = load %struct.TileInfo*, %struct.TileInfo** %tinf.addr, align 8, !dbg !16328
  %tmpibuf29 = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %46, i32 0, i32 3, !dbg !16329
  %47 = load %struct.ImBuf**, %struct.ImBuf*** %tmpibuf29, align 8, !dbg !16329
  %48 = load i32, i32* %tx.addr, align 4, !dbg !16330
  %49 = load i32, i32* %ty.addr, align 4, !dbg !16331
  %50 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %pjIma, align 8, !dbg !16332
  %valid30 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %50, i32 0, i32 5, !dbg !16333
  %51 = load i8**, i8*** %valid30, align 8, !dbg !16333
  %52 = load i32, i32* %tile_index, align 4, !dbg !16334
  %idxprom31 = sext i32 %52 to i64, !dbg !16332
  %arrayidx32 = getelementptr inbounds i8*, i8** %51, i64 %idxprom31, !dbg !16332
  %call33 = call i8* @image_undo_push_tile(%struct.Image* %43, %struct.ImBuf* %45, %struct.ImBuf** %47, i32 %48, i32 %49, i16** null, i8** %arrayidx32, i8 zeroext 1), !dbg !16335
  store i8* %call33, i8** %undorect, align 8, !dbg !16336
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then22
  %53 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %pjIma, align 8, !dbg !16337
  %ibuf35 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %53, i32 0, i32 1, !dbg !16338
  %54 = load %struct.ImBuf*, %struct.ImBuf** %ibuf35, align 8, !dbg !16338
  %userflags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %54, i32 0, i32 23, !dbg !16339
  %55 = load i32, i32* %userflags, align 4, !dbg !16340
  %or = or i32 %55, 2, !dbg !16340
  store i32 %or, i32* %userflags, align 4, !dbg !16340
  %56 = load %struct.TileInfo*, %struct.TileInfo** %tinf.addr, align 8, !dbg !16341
  %lock36 = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %56, i32 0, i32 0, !dbg !16343
  %57 = load i32*, i32** %lock36, align 8, !dbg !16343
  %tobool37 = icmp ne i32* %57, null, !dbg !16341
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !16344

if.then38:                                        ; preds = %if.end34
  %58 = load %struct.TileInfo*, %struct.TileInfo** %tinf.addr, align 8, !dbg !16345
  %lock39 = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %58, i32 0, i32 0, !dbg !16346
  %59 = load i32*, i32** %lock39, align 8, !dbg !16346
  call void @BLI_spin_lock(i32* %59), !dbg !16347
  br label %if.end40, !dbg !16347

if.end40:                                         ; preds = %if.then38, %if.end34
  %60 = load i8*, i8** %undorect, align 8, !dbg !16348
  %61 = load %struct.ProjPaintImage*, %struct.ProjPaintImage** %pjIma, align 8, !dbg !16349
  %undoRect41 = getelementptr inbounds %struct.ProjPaintImage, %struct.ProjPaintImage* %61, i32 0, i32 3, !dbg !16350
  %62 = load i8**, i8*** %undoRect41, align 8, !dbg !16350
  %63 = load i32, i32* %tile_index, align 4, !dbg !16351
  %idxprom42 = sext i32 %63 to i64, !dbg !16349
  %arrayidx43 = getelementptr inbounds i8*, i8** %62, i64 %idxprom42, !dbg !16349
  store i8* %60, i8** %arrayidx43, align 8, !dbg !16352
  %64 = load %struct.TileInfo*, %struct.TileInfo** %tinf.addr, align 8, !dbg !16353
  %lock44 = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %64, i32 0, i32 0, !dbg !16355
  %65 = load i32*, i32** %lock44, align 8, !dbg !16355
  %tobool45 = icmp ne i32* %65, null, !dbg !16353
  br i1 %tobool45, label %if.then46, label %if.end48, !dbg !16356

if.then46:                                        ; preds = %if.end40
  %66 = load %struct.TileInfo*, %struct.TileInfo** %tinf.addr, align 8, !dbg !16357
  %lock47 = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %66, i32 0, i32 0, !dbg !16358
  %67 = load i32*, i32** %lock47, align 8, !dbg !16358
  call void @BLI_spin_unlock(i32* %67), !dbg !16359
  br label %if.end48, !dbg !16359

if.end48:                                         ; preds = %if.then46, %if.end40
  br label %if.end49, !dbg !16360

if.end49:                                         ; preds = %if.end48, %if.end18
  %68 = load i32, i32* %tile_index, align 4, !dbg !16361
  ret i32 %68, !dbg !16362
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v4(float* %r) #0 !dbg !16363 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !16364, metadata !DIExpression()), !dbg !16365
  %0 = load float*, float** %r.addr, align 8, !dbg !16366
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !16366
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !16367
  %1 = load float*, float** %r.addr, align 8, !dbg !16368
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !16368
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !16369
  %2 = load float*, float** %r.addr, align 8, !dbg !16370
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !16370
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !16371
  %3 = load float*, float** %r.addr, align 8, !dbg !16372
  %arrayidx3 = getelementptr inbounds float, float* %3, i64 3, !dbg !16372
  store float 0.000000e+00, float* %arrayidx3, align 4, !dbg !16373
  ret void, !dbg !16374
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Image* @project_paint_face_clone_image(%struct.ProjPaintState* %ps, i32 %face_index) #0 !dbg !16375 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %face_index.addr = alloca i32, align 4
  %mf = alloca %struct.MFace*, align 8
  %ma = alloca %struct.Material*, align 8
  %slot = alloca %struct.TexPaintSlot*, align 8
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !16376, metadata !DIExpression()), !dbg !16377
  store i32 %face_index, i32* %face_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_index.addr, metadata !16378, metadata !DIExpression()), !dbg !16379
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !16380, metadata !DIExpression()), !dbg !16381
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !16382
  %dm_mface = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 19, !dbg !16383
  %1 = load %struct.MFace*, %struct.MFace** %dm_mface, align 8, !dbg !16383
  %2 = load i32, i32* %face_index.addr, align 4, !dbg !16384
  %idx.ext = sext i32 %2 to i64, !dbg !16385
  %add.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %1, i64 %idx.ext, !dbg !16385
  store %struct.MFace* %add.ptr, %struct.MFace** %mf, align 8, !dbg !16381
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !16386, metadata !DIExpression()), !dbg !16387
  %3 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !16388
  %dm = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %3, i32 0, i32 14, !dbg !16389
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !16389
  %mat = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 18, !dbg !16390
  %5 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !16390
  %6 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !16391
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %6, i32 0, i32 4, !dbg !16392
  %7 = load i16, i16* %mat_nr, align 4, !dbg !16392
  %idxprom = sext i16 %7 to i64, !dbg !16388
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %5, i64 %idxprom, !dbg !16388
  %8 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !16388
  store %struct.Material* %8, %struct.Material** %ma, align 8, !dbg !16387
  call void @llvm.dbg.declare(metadata %struct.TexPaintSlot** %slot, metadata !16393, metadata !DIExpression()), !dbg !16394
  %9 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !16395
  %tobool = icmp ne %struct.Material* %9, null, !dbg !16395
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !16395

cond.true:                                        ; preds = %entry
  %10 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !16396
  %texpaintslot = getelementptr inbounds %struct.Material, %struct.Material* %10, i32 0, i32 135, !dbg !16397
  %11 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %texpaintslot, align 8, !dbg !16397
  %12 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !16398
  %paint_clone_slot = getelementptr inbounds %struct.Material, %struct.Material* %12, i32 0, i32 132, !dbg !16399
  %13 = load i16, i16* %paint_clone_slot, align 2, !dbg !16399
  %conv = sext i16 %13 to i32, !dbg !16398
  %idx.ext1 = sext i32 %conv to i64, !dbg !16400
  %add.ptr2 = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %11, i64 %idx.ext1, !dbg !16400
  br label %cond.end, !dbg !16395

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16395

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.TexPaintSlot* [ %add.ptr2, %cond.true ], [ null, %cond.false ], !dbg !16395
  store %struct.TexPaintSlot* %cond, %struct.TexPaintSlot** %slot, align 8, !dbg !16394
  %14 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot, align 8, !dbg !16401
  %tobool3 = icmp ne %struct.TexPaintSlot* %14, null, !dbg !16401
  br i1 %tobool3, label %cond.true4, label %cond.false5, !dbg !16401

cond.true4:                                       ; preds = %cond.end
  %15 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %slot, align 8, !dbg !16402
  %ima = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %15, i32 0, i32 0, !dbg !16403
  %16 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !16403
  br label %cond.end6, !dbg !16401

cond.false5:                                      ; preds = %cond.end
  %17 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !16404
  %clone_ima = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %17, i32 0, i32 25, !dbg !16405
  %18 = load %struct.Image*, %struct.Image** %clone_ima, align 8, !dbg !16405
  br label %cond.end6, !dbg !16401

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond7 = phi %struct.Image* [ %16, %cond.true4 ], [ %18, %cond.false5 ], !dbg !16401
  ret %struct.Image* %cond7, !dbg !16406
}

; Function Attrs: noinline nounwind uwtable
define internal void @srgb_to_linearrgb_uchar4(float* %linear, i8* %srgb) #0 !dbg !16407 {
entry:
  %linear.addr = alloca float*, align 8
  %srgb.addr = alloca i8*, align 8
  store float* %linear, float** %linear.addr, align 8
  call void @llvm.dbg.declare(metadata float** %linear.addr, metadata !16408, metadata !DIExpression()), !dbg !16409
  store i8* %srgb, i8** %srgb.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srgb.addr, metadata !16410, metadata !DIExpression()), !dbg !16411
  %0 = load i8*, i8** %srgb.addr, align 8, !dbg !16412
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !16412
  %1 = load i8, i8* %arrayidx, align 1, !dbg !16412
  %idxprom = zext i8 %1 to i64, !dbg !16413
  %arrayidx1 = getelementptr inbounds [256 x float], [256 x float]* @BLI_color_from_srgb_table, i64 0, i64 %idxprom, !dbg !16413
  %2 = load float, float* %arrayidx1, align 4, !dbg !16413
  %3 = load float*, float** %linear.addr, align 8, !dbg !16414
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 0, !dbg !16414
  store float %2, float* %arrayidx2, align 4, !dbg !16415
  %4 = load i8*, i8** %srgb.addr, align 8, !dbg !16416
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !16416
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !16416
  %idxprom4 = zext i8 %5 to i64, !dbg !16417
  %arrayidx5 = getelementptr inbounds [256 x float], [256 x float]* @BLI_color_from_srgb_table, i64 0, i64 %idxprom4, !dbg !16417
  %6 = load float, float* %arrayidx5, align 4, !dbg !16417
  %7 = load float*, float** %linear.addr, align 8, !dbg !16418
  %arrayidx6 = getelementptr inbounds float, float* %7, i64 1, !dbg !16418
  store float %6, float* %arrayidx6, align 4, !dbg !16419
  %8 = load i8*, i8** %srgb.addr, align 8, !dbg !16420
  %arrayidx7 = getelementptr inbounds i8, i8* %8, i64 2, !dbg !16420
  %9 = load i8, i8* %arrayidx7, align 1, !dbg !16420
  %idxprom8 = zext i8 %9 to i64, !dbg !16421
  %arrayidx9 = getelementptr inbounds [256 x float], [256 x float]* @BLI_color_from_srgb_table, i64 0, i64 %idxprom8, !dbg !16421
  %10 = load float, float* %arrayidx9, align 4, !dbg !16421
  %11 = load float*, float** %linear.addr, align 8, !dbg !16422
  %arrayidx10 = getelementptr inbounds float, float* %11, i64 2, !dbg !16422
  store float %10, float* %arrayidx10, align 4, !dbg !16423
  %12 = load i8*, i8** %srgb.addr, align 8, !dbg !16424
  %arrayidx11 = getelementptr inbounds i8, i8* %12, i64 3, !dbg !16424
  %13 = load i8, i8* %arrayidx11, align 1, !dbg !16424
  %conv = zext i8 %13 to i32, !dbg !16424
  %conv12 = sitofp i32 %conv to float, !dbg !16424
  %mul = fmul float %conv12, 0x3F70101020000000, !dbg !16425
  %14 = load float*, float** %linear.addr, align 8, !dbg !16426
  %arrayidx13 = getelementptr inbounds float, float* %14, i64 3, !dbg !16426
  store float %mul, float* %arrayidx13, align 4, !dbg !16427
  ret void, !dbg !16428
}

; Function Attrs: noinline nounwind uwtable
define internal void @straight_to_premul_v4_v4(float* %premul, float* %straight) #0 !dbg !16429 {
entry:
  %premul.addr = alloca float*, align 8
  %straight.addr = alloca float*, align 8
  %alpha = alloca float, align 4
  store float* %premul, float** %premul.addr, align 8
  call void @llvm.dbg.declare(metadata float** %premul.addr, metadata !16430, metadata !DIExpression()), !dbg !16431
  store float* %straight, float** %straight.addr, align 8
  call void @llvm.dbg.declare(metadata float** %straight.addr, metadata !16432, metadata !DIExpression()), !dbg !16433
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !16434, metadata !DIExpression()), !dbg !16435
  %0 = load float*, float** %straight.addr, align 8, !dbg !16436
  %arrayidx = getelementptr inbounds float, float* %0, i64 3, !dbg !16436
  %1 = load float, float* %arrayidx, align 4, !dbg !16436
  store float %1, float* %alpha, align 4, !dbg !16435
  %2 = load float*, float** %straight.addr, align 8, !dbg !16437
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !16437
  %3 = load float, float* %arrayidx1, align 4, !dbg !16437
  %4 = load float, float* %alpha, align 4, !dbg !16438
  %mul = fmul float %3, %4, !dbg !16439
  %5 = load float*, float** %premul.addr, align 8, !dbg !16440
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 0, !dbg !16440
  store float %mul, float* %arrayidx2, align 4, !dbg !16441
  %6 = load float*, float** %straight.addr, align 8, !dbg !16442
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !16442
  %7 = load float, float* %arrayidx3, align 4, !dbg !16442
  %8 = load float, float* %alpha, align 4, !dbg !16443
  %mul4 = fmul float %7, %8, !dbg !16444
  %9 = load float*, float** %premul.addr, align 8, !dbg !16445
  %arrayidx5 = getelementptr inbounds float, float* %9, i64 1, !dbg !16445
  store float %mul4, float* %arrayidx5, align 4, !dbg !16446
  %10 = load float*, float** %straight.addr, align 8, !dbg !16447
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !16447
  %11 = load float, float* %arrayidx6, align 4, !dbg !16447
  %12 = load float, float* %alpha, align 4, !dbg !16448
  %mul7 = fmul float %11, %12, !dbg !16449
  %13 = load float*, float** %premul.addr, align 8, !dbg !16450
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 2, !dbg !16450
  store float %mul7, float* %arrayidx8, align 4, !dbg !16451
  %14 = load float*, float** %straight.addr, align 8, !dbg !16452
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 3, !dbg !16452
  %15 = load float, float* %arrayidx9, align 4, !dbg !16452
  %16 = load float*, float** %premul.addr, align 8, !dbg !16453
  %arrayidx10 = getelementptr inbounds float, float* %16, i64 3, !dbg !16453
  store float %15, float* %arrayidx10, align 4, !dbg !16454
  ret void, !dbg !16455
}

; Function Attrs: noinline nounwind uwtable
define internal void @premul_to_straight_v4(float* %color) #0 !dbg !16456 {
entry:
  %color.addr = alloca float*, align 8
  store float* %color, float** %color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %color.addr, metadata !16457, metadata !DIExpression()), !dbg !16458
  %0 = load float*, float** %color.addr, align 8, !dbg !16459
  %1 = load float*, float** %color.addr, align 8, !dbg !16460
  call void @premul_to_straight_v4_v4(float* %0, float* %1), !dbg !16461
  ret void, !dbg !16462
}

; Function Attrs: noinline nounwind uwtable
define internal void @linearrgb_to_srgb_uchar3(i8* %srgb, float* %linear) #0 !dbg !16463 {
entry:
  %srgb.addr = alloca i8*, align 8
  %linear.addr = alloca float*, align 8
  %srgb_f = alloca [3 x float], align 4
  store i8* %srgb, i8** %srgb.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srgb.addr, metadata !16466, metadata !DIExpression()), !dbg !16467
  store float* %linear, float** %linear.addr, align 8
  call void @llvm.dbg.declare(metadata float** %linear.addr, metadata !16468, metadata !DIExpression()), !dbg !16469
  call void @llvm.dbg.declare(metadata [3 x float]* %srgb_f, metadata !16470, metadata !DIExpression()), !dbg !16471
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %srgb_f, i64 0, i64 0, !dbg !16472
  %0 = load float*, float** %linear.addr, align 8, !dbg !16473
  call void @linearrgb_to_srgb_v3_v3(float* %arraydecay, float* %0), !dbg !16474
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %srgb_f, i64 0, i64 0, !dbg !16475
  %1 = load float, float* %arrayidx, align 4, !dbg !16475
  %cmp = fcmp ole float %1, 0.000000e+00, !dbg !16475
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16475

cond.true:                                        ; preds = %entry
  br label %cond.end6, !dbg !16475

cond.false:                                       ; preds = %entry
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %srgb_f, i64 0, i64 0, !dbg !16475
  %2 = load float, float* %arrayidx1, align 4, !dbg !16475
  %cmp2 = fcmp ogt float %2, 0x3FEFEFEFE0000000, !dbg !16475
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !16475

cond.true3:                                       ; preds = %cond.false
  br label %cond.end, !dbg !16475

cond.false4:                                      ; preds = %cond.false
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %srgb_f, i64 0, i64 0, !dbg !16475
  %3 = load float, float* %arrayidx5, align 4, !dbg !16475
  %mul = fmul float 2.550000e+02, %3, !dbg !16475
  %add = fadd float %mul, 5.000000e-01, !dbg !16475
  br label %cond.end, !dbg !16475

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi float [ 2.550000e+02, %cond.true3 ], [ %add, %cond.false4 ], !dbg !16475
  br label %cond.end6, !dbg !16475

cond.end6:                                        ; preds = %cond.end, %cond.true
  %cond7 = phi float [ 0.000000e+00, %cond.true ], [ %cond, %cond.end ], !dbg !16475
  %conv = fptoui float %cond7 to i8, !dbg !16475
  %4 = load i8*, i8** %srgb.addr, align 8, !dbg !16475
  %arrayidx8 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !16475
  store i8 %conv, i8* %arrayidx8, align 1, !dbg !16475
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %srgb_f, i64 0, i64 1, !dbg !16475
  %5 = load float, float* %arrayidx9, align 4, !dbg !16475
  %cmp10 = fcmp ole float %5, 0.000000e+00, !dbg !16475
  br i1 %cmp10, label %cond.true12, label %cond.false13, !dbg !16475

cond.true12:                                      ; preds = %cond.end6
  br label %cond.end24, !dbg !16475

cond.false13:                                     ; preds = %cond.end6
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %srgb_f, i64 0, i64 1, !dbg !16475
  %6 = load float, float* %arrayidx14, align 4, !dbg !16475
  %cmp15 = fcmp ogt float %6, 0x3FEFEFEFE0000000, !dbg !16475
  br i1 %cmp15, label %cond.true17, label %cond.false18, !dbg !16475

cond.true17:                                      ; preds = %cond.false13
  br label %cond.end22, !dbg !16475

cond.false18:                                     ; preds = %cond.false13
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %srgb_f, i64 0, i64 1, !dbg !16475
  %7 = load float, float* %arrayidx19, align 4, !dbg !16475
  %mul20 = fmul float 2.550000e+02, %7, !dbg !16475
  %add21 = fadd float %mul20, 5.000000e-01, !dbg !16475
  br label %cond.end22, !dbg !16475

cond.end22:                                       ; preds = %cond.false18, %cond.true17
  %cond23 = phi float [ 2.550000e+02, %cond.true17 ], [ %add21, %cond.false18 ], !dbg !16475
  br label %cond.end24, !dbg !16475

cond.end24:                                       ; preds = %cond.end22, %cond.true12
  %cond25 = phi float [ 0.000000e+00, %cond.true12 ], [ %cond23, %cond.end22 ], !dbg !16475
  %conv26 = fptoui float %cond25 to i8, !dbg !16475
  %8 = load i8*, i8** %srgb.addr, align 8, !dbg !16475
  %arrayidx27 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !16475
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !16475
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %srgb_f, i64 0, i64 2, !dbg !16475
  %9 = load float, float* %arrayidx28, align 4, !dbg !16475
  %cmp29 = fcmp ole float %9, 0.000000e+00, !dbg !16475
  br i1 %cmp29, label %cond.true31, label %cond.false32, !dbg !16475

cond.true31:                                      ; preds = %cond.end24
  br label %cond.end43, !dbg !16475

cond.false32:                                     ; preds = %cond.end24
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %srgb_f, i64 0, i64 2, !dbg !16475
  %10 = load float, float* %arrayidx33, align 4, !dbg !16475
  %cmp34 = fcmp ogt float %10, 0x3FEFEFEFE0000000, !dbg !16475
  br i1 %cmp34, label %cond.true36, label %cond.false37, !dbg !16475

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end41, !dbg !16475

cond.false37:                                     ; preds = %cond.false32
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %srgb_f, i64 0, i64 2, !dbg !16475
  %11 = load float, float* %arrayidx38, align 4, !dbg !16475
  %mul39 = fmul float 2.550000e+02, %11, !dbg !16475
  %add40 = fadd float %mul39, 5.000000e-01, !dbg !16475
  br label %cond.end41, !dbg !16475

cond.end41:                                       ; preds = %cond.false37, %cond.true36
  %cond42 = phi float [ 2.550000e+02, %cond.true36 ], [ %add40, %cond.false37 ], !dbg !16475
  br label %cond.end43, !dbg !16475

cond.end43:                                       ; preds = %cond.end41, %cond.true31
  %cond44 = phi float [ 0.000000e+00, %cond.true31 ], [ %cond42, %cond.end41 ], !dbg !16475
  %conv45 = fptoui float %cond44 to i8, !dbg !16475
  %12 = load i8*, i8** %srgb.addr, align 8, !dbg !16475
  %arrayidx46 = getelementptr inbounds i8, i8* %12, i64 2, !dbg !16475
  store i8 %conv45, i8* %arrayidx46, align 1, !dbg !16475
  ret void, !dbg !16477
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @project_paint_PickColor(%struct.ProjPaintState* %ps, float* %pt, float* %rgba_fp, i8* %rgba, i8 zeroext %interp) #0 !dbg !16478 {
entry:
  %retval = alloca i8, align 1
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %pt.addr = alloca float*, align 8
  %rgba_fp.addr = alloca float*, align 8
  %rgba.addr = alloca i8*, align 8
  %interp.addr = alloca i8, align 1
  %w = alloca [3 x float], align 4
  %uv = alloca [2 x float], align 4
  %side = alloca i32, align 4
  %face_index = alloca i32, align 4
  %tf = alloca %struct.MTFace*, align 8
  %ima = alloca %struct.Image*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %xi = alloca i32, align 4
  %yi = alloca i32, align 4
  %x = alloca float, align 4
  %y = alloca float, align 4
  %rgba_tmp_f = alloca [4 x float], align 16
  %rgba_tmp = alloca [4 x i8], align 1
  %rgba_tmp_fp = alloca float*, align 8
  %tmp_ch = alloca i8*, align 8
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !16481, metadata !DIExpression()), !dbg !16482
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !16483, metadata !DIExpression()), !dbg !16484
  store float* %rgba_fp, float** %rgba_fp.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rgba_fp.addr, metadata !16485, metadata !DIExpression()), !dbg !16486
  store i8* %rgba, i8** %rgba.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rgba.addr, metadata !16487, metadata !DIExpression()), !dbg !16488
  store i8 %interp, i8* %interp.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %interp.addr, metadata !16489, metadata !DIExpression()), !dbg !16490
  call void @llvm.dbg.declare(metadata [3 x float]* %w, metadata !16491, metadata !DIExpression()), !dbg !16492
  call void @llvm.dbg.declare(metadata [2 x float]* %uv, metadata !16493, metadata !DIExpression()), !dbg !16494
  call void @llvm.dbg.declare(metadata i32* %side, metadata !16495, metadata !DIExpression()), !dbg !16496
  call void @llvm.dbg.declare(metadata i32* %face_index, metadata !16497, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf, metadata !16499, metadata !DIExpression()), !dbg !16500
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !16501, metadata !DIExpression()), !dbg !16502
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !16503, metadata !DIExpression()), !dbg !16504
  call void @llvm.dbg.declare(metadata i32* %xi, metadata !16505, metadata !DIExpression()), !dbg !16506
  call void @llvm.dbg.declare(metadata i32* %yi, metadata !16507, metadata !DIExpression()), !dbg !16508
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !16509
  %1 = load float*, float** %pt.addr, align 8, !dbg !16510
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !16511
  %call = call i32 @project_paint_PickFace(%struct.ProjPaintState* %0, float* %1, float* %arraydecay, i32* %side), !dbg !16512
  store i32 %call, i32* %face_index, align 4, !dbg !16513
  %2 = load i32, i32* %face_index, align 4, !dbg !16514
  %cmp = icmp eq i32 %2, -1, !dbg !16516
  br i1 %cmp, label %if.then, label %if.end, !dbg !16517

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !16518
  br label %return, !dbg !16518

if.end:                                           ; preds = %entry
  %3 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !16519
  %dm_mtface = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %3, i32 0, i32 20, !dbg !16520
  %4 = load %struct.MTFace**, %struct.MTFace*** %dm_mtface, align 8, !dbg !16520
  %5 = load i32, i32* %face_index, align 4, !dbg !16521
  %idx.ext = sext i32 %5 to i64, !dbg !16522
  %add.ptr = getelementptr inbounds %struct.MTFace*, %struct.MTFace** %4, i64 %idx.ext, !dbg !16522
  %6 = load %struct.MTFace*, %struct.MTFace** %add.ptr, align 8, !dbg !16523
  store %struct.MTFace* %6, %struct.MTFace** %tf, align 8, !dbg !16524
  %7 = load i32, i32* %side, align 4, !dbg !16525
  %cmp1 = icmp eq i32 %7, 0, !dbg !16527
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !16528

if.then2:                                         ; preds = %if.end
  %arraydecay3 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !16529
  %8 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !16531
  %uv4 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %8, i32 0, i32 0, !dbg !16532
  %arrayidx = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv4, i64 0, i64 0, !dbg !16531
  %arraydecay5 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !16531
  %9 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !16533
  %uv6 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %9, i32 0, i32 0, !dbg !16534
  %arrayidx7 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv6, i64 0, i64 1, !dbg !16533
  %arraydecay8 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx7, i64 0, i64 0, !dbg !16533
  %10 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !16535
  %uv9 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %10, i32 0, i32 0, !dbg !16536
  %arrayidx10 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv9, i64 0, i64 2, !dbg !16535
  %arraydecay11 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx10, i64 0, i64 0, !dbg !16535
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !16537
  call void @interp_v2_v2v2v2(float* %arraydecay3, float* %arraydecay5, float* %arraydecay8, float* %arraydecay11, float* %arraydecay12), !dbg !16538
  br label %if.end24, !dbg !16539

if.else:                                          ; preds = %if.end
  %arraydecay13 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !16540
  %11 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !16542
  %uv14 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %11, i32 0, i32 0, !dbg !16543
  %arrayidx15 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv14, i64 0, i64 0, !dbg !16542
  %arraydecay16 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx15, i64 0, i64 0, !dbg !16542
  %12 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !16544
  %uv17 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %12, i32 0, i32 0, !dbg !16545
  %arrayidx18 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv17, i64 0, i64 2, !dbg !16544
  %arraydecay19 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx18, i64 0, i64 0, !dbg !16544
  %13 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !16546
  %uv20 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %13, i32 0, i32 0, !dbg !16547
  %arrayidx21 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv20, i64 0, i64 3, !dbg !16546
  %arraydecay22 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx21, i64 0, i64 0, !dbg !16546
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %w, i64 0, i64 0, !dbg !16548
  call void @interp_v2_v2v2v2(float* %arraydecay13, float* %arraydecay16, float* %arraydecay19, float* %arraydecay22, float* %arraydecay23), !dbg !16549
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then2
  %14 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !16550
  %15 = load i32, i32* %face_index, align 4, !dbg !16551
  %call25 = call %struct.Image* @project_paint_face_paint_image(%struct.ProjPaintState* %14, i32 %15), !dbg !16552
  store %struct.Image* %call25, %struct.Image** %ima, align 8, !dbg !16553
  %16 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !16554
  %call26 = call %struct.ImBuf* @BKE_image_get_first_ibuf(%struct.Image* %16), !dbg !16555
  store %struct.ImBuf* %call26, %struct.ImBuf** %ibuf, align 8, !dbg !16556
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16557
  %tobool = icmp ne %struct.ImBuf* %17, null, !dbg !16557
  br i1 %tobool, label %if.end28, label %if.then27, !dbg !16559

if.then27:                                        ; preds = %if.end24
  store i8 0, i8* %retval, align 1, !dbg !16560
  br label %return, !dbg !16560

if.end28:                                         ; preds = %if.end24
  %18 = load i8, i8* %interp.addr, align 1, !dbg !16561
  %tobool29 = icmp ne i8 %18, 0, !dbg !16561
  br i1 %tobool29, label %if.then30, label %if.else50, !dbg !16563

if.then30:                                        ; preds = %if.end28
  call void @llvm.dbg.declare(metadata float* %x, metadata !16564, metadata !DIExpression()), !dbg !16566
  call void @llvm.dbg.declare(metadata float* %y, metadata !16567, metadata !DIExpression()), !dbg !16568
  %arraydecay31 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !16569
  %19 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16570
  %x32 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %19, i32 0, i32 2, !dbg !16571
  %20 = load i32, i32* %x32, align 8, !dbg !16571
  %21 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16572
  %y33 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %21, i32 0, i32 3, !dbg !16573
  %22 = load i32, i32* %y33, align 4, !dbg !16573
  call void @uvco_to_wrapped_pxco(float* %arraydecay31, i32 %20, i32 %22, float* %x, float* %y), !dbg !16574
  %23 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16575
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %23, i32 0, i32 9, !dbg !16577
  %24 = load float*, float** %rect_float, align 8, !dbg !16577
  %tobool34 = icmp ne float* %24, null, !dbg !16575
  br i1 %tobool34, label %if.then35, label %if.else42, !dbg !16578

if.then35:                                        ; preds = %if.then30
  %25 = load float*, float** %rgba_fp.addr, align 8, !dbg !16579
  %tobool36 = icmp ne float* %25, null, !dbg !16579
  br i1 %tobool36, label %if.then37, label %if.else38, !dbg !16582

if.then37:                                        ; preds = %if.then35
  %26 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16583
  %27 = load float*, float** %rgba_fp.addr, align 8, !dbg !16585
  %28 = load float, float* %x, align 4, !dbg !16586
  %29 = load float, float* %y, align 4, !dbg !16587
  call void @bilinear_interpolation_color_wrap(%struct.ImBuf* %26, i8* null, float* %27, float %28, float %29), !dbg !16588
  br label %if.end41, !dbg !16589

if.else38:                                        ; preds = %if.then35
  call void @llvm.dbg.declare(metadata [4 x float]* %rgba_tmp_f, metadata !16590, metadata !DIExpression()), !dbg !16592
  %30 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16593
  %arraydecay39 = getelementptr inbounds [4 x float], [4 x float]* %rgba_tmp_f, i64 0, i64 0, !dbg !16594
  %31 = load float, float* %x, align 4, !dbg !16595
  %32 = load float, float* %y, align 4, !dbg !16596
  call void @bilinear_interpolation_color_wrap(%struct.ImBuf* %30, i8* null, float* %arraydecay39, float %31, float %32), !dbg !16597
  %33 = load i8*, i8** %rgba.addr, align 8, !dbg !16598
  %arraydecay40 = getelementptr inbounds [4 x float], [4 x float]* %rgba_tmp_f, i64 0, i64 0, !dbg !16599
  call void @premul_float_to_straight_uchar(i8* %33, float* %arraydecay40), !dbg !16600
  br label %if.end41

if.end41:                                         ; preds = %if.else38, %if.then37
  br label %if.end49, !dbg !16601

if.else42:                                        ; preds = %if.then30
  %34 = load i8*, i8** %rgba.addr, align 8, !dbg !16602
  %tobool43 = icmp ne i8* %34, null, !dbg !16602
  br i1 %tobool43, label %if.then44, label %if.else45, !dbg !16605

if.then44:                                        ; preds = %if.else42
  %35 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16606
  %36 = load i8*, i8** %rgba.addr, align 8, !dbg !16608
  %37 = load float, float* %x, align 4, !dbg !16609
  %38 = load float, float* %y, align 4, !dbg !16610
  call void @bilinear_interpolation_color_wrap(%struct.ImBuf* %35, i8* %36, float* null, float %37, float %38), !dbg !16611
  br label %if.end48, !dbg !16612

if.else45:                                        ; preds = %if.else42
  call void @llvm.dbg.declare(metadata [4 x i8]* %rgba_tmp, metadata !16613, metadata !DIExpression()), !dbg !16615
  %39 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16616
  %arraydecay46 = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_tmp, i64 0, i64 0, !dbg !16617
  %40 = load float, float* %x, align 4, !dbg !16618
  %41 = load float, float* %y, align 4, !dbg !16619
  call void @bilinear_interpolation_color_wrap(%struct.ImBuf* %39, i8* %arraydecay46, float* null, float %40, float %41), !dbg !16620
  %42 = load float*, float** %rgba_fp.addr, align 8, !dbg !16621
  %arraydecay47 = getelementptr inbounds [4 x i8], [4 x i8]* %rgba_tmp, i64 0, i64 0, !dbg !16622
  call void @straight_uchar_to_premul_float(float* %42, i8* %arraydecay47), !dbg !16623
  br label %if.end48

if.end48:                                         ; preds = %if.else45, %if.then44
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.end41
  br label %if.end105, !dbg !16624

if.else50:                                        ; preds = %if.end28
  %arrayidx51 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !16625
  %43 = load float, float* %arrayidx51, align 4, !dbg !16625
  %44 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16627
  %x52 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %44, i32 0, i32 2, !dbg !16628
  %45 = load i32, i32* %x52, align 8, !dbg !16628
  %conv = sitofp i32 %45 to float, !dbg !16627
  %mul = fmul float %43, %conv, !dbg !16629
  %conv53 = fptosi float %mul to i32, !dbg !16630
  %46 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16631
  %x54 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %46, i32 0, i32 2, !dbg !16632
  %47 = load i32, i32* %x54, align 8, !dbg !16632
  %call55 = call i32 @mod_i(i32 %conv53, i32 %47), !dbg !16633
  store i32 %call55, i32* %xi, align 4, !dbg !16634
  %arrayidx56 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !16635
  %48 = load float, float* %arrayidx56, align 4, !dbg !16635
  %49 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16636
  %y57 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %49, i32 0, i32 3, !dbg !16637
  %50 = load i32, i32* %y57, align 4, !dbg !16637
  %conv58 = sitofp i32 %50 to float, !dbg !16636
  %mul59 = fmul float %48, %conv58, !dbg !16638
  %conv60 = fptosi float %mul59 to i32, !dbg !16639
  %51 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16640
  %y61 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %51, i32 0, i32 3, !dbg !16641
  %52 = load i32, i32* %y61, align 4, !dbg !16641
  %call62 = call i32 @mod_i(i32 %conv60, i32 %52), !dbg !16642
  store i32 %call62, i32* %yi, align 4, !dbg !16643
  %53 = load i8*, i8** %rgba.addr, align 8, !dbg !16644
  %tobool63 = icmp ne i8* %53, null, !dbg !16644
  br i1 %tobool63, label %if.then64, label %if.end82, !dbg !16646

if.then64:                                        ; preds = %if.else50
  %54 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16647
  %rect_float65 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %54, i32 0, i32 9, !dbg !16650
  %55 = load float*, float** %rect_float65, align 8, !dbg !16650
  %tobool66 = icmp ne float* %55, null, !dbg !16647
  br i1 %tobool66, label %if.then67, label %if.else74, !dbg !16651

if.then67:                                        ; preds = %if.then64
  call void @llvm.dbg.declare(metadata float** %rgba_tmp_fp, metadata !16652, metadata !DIExpression()), !dbg !16654
  %56 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16655
  %rect_float68 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %56, i32 0, i32 9, !dbg !16656
  %57 = load float*, float** %rect_float68, align 8, !dbg !16656
  %58 = load i32, i32* %xi, align 4, !dbg !16657
  %59 = load i32, i32* %yi, align 4, !dbg !16658
  %60 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16659
  %x69 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %60, i32 0, i32 2, !dbg !16660
  %61 = load i32, i32* %x69, align 8, !dbg !16660
  %mul70 = mul nsw i32 %59, %61, !dbg !16661
  %mul71 = mul nsw i32 %mul70, 4, !dbg !16662
  %add = add nsw i32 %58, %mul71, !dbg !16663
  %idx.ext72 = sext i32 %add to i64, !dbg !16664
  %add.ptr73 = getelementptr inbounds float, float* %57, i64 %idx.ext72, !dbg !16664
  store float* %add.ptr73, float** %rgba_tmp_fp, align 8, !dbg !16654
  %62 = load i8*, i8** %rgba.addr, align 8, !dbg !16665
  %63 = load float*, float** %rgba_tmp_fp, align 8, !dbg !16666
  call void @premul_float_to_straight_uchar(i8* %62, float* %63), !dbg !16667
  br label %if.end81, !dbg !16668

if.else74:                                        ; preds = %if.then64
  %64 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16669
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %64, i32 0, i32 8, !dbg !16671
  %65 = load i32*, i32** %rect, align 8, !dbg !16671
  %66 = bitcast i32* %65 to i8*, !dbg !16672
  %67 = load i32, i32* %xi, align 4, !dbg !16673
  %68 = load i32, i32* %yi, align 4, !dbg !16674
  %69 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16675
  %x75 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %69, i32 0, i32 2, !dbg !16676
  %70 = load i32, i32* %x75, align 8, !dbg !16676
  %mul76 = mul nsw i32 %68, %70, !dbg !16677
  %add77 = add nsw i32 %67, %mul76, !dbg !16678
  %mul78 = mul nsw i32 %add77, 4, !dbg !16679
  %idx.ext79 = sext i32 %mul78 to i64, !dbg !16680
  %add.ptr80 = getelementptr inbounds i8, i8* %66, i64 %idx.ext79, !dbg !16680
  %71 = bitcast i8* %add.ptr80 to i32*, !dbg !16681
  %72 = load i32, i32* %71, align 4, !dbg !16681
  %73 = load i8*, i8** %rgba.addr, align 8, !dbg !16682
  %74 = bitcast i8* %73 to i32*, !dbg !16683
  store i32 %72, i32* %74, align 4, !dbg !16684
  br label %if.end81

if.end81:                                         ; preds = %if.else74, %if.then67
  br label %if.end82, !dbg !16685

if.end82:                                         ; preds = %if.end81, %if.else50
  %75 = load float*, float** %rgba_fp.addr, align 8, !dbg !16686
  %tobool83 = icmp ne float* %75, null, !dbg !16686
  br i1 %tobool83, label %if.then84, label %if.end104, !dbg !16688

if.then84:                                        ; preds = %if.end82
  %76 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16689
  %rect_float85 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %76, i32 0, i32 9, !dbg !16692
  %77 = load float*, float** %rect_float85, align 8, !dbg !16692
  %tobool86 = icmp ne float* %77, null, !dbg !16689
  br i1 %tobool86, label %if.then87, label %if.else95, !dbg !16693

if.then87:                                        ; preds = %if.then84
  %78 = load float*, float** %rgba_fp.addr, align 8, !dbg !16694
  %79 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16696
  %rect_float88 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %79, i32 0, i32 9, !dbg !16697
  %80 = load float*, float** %rect_float88, align 8, !dbg !16697
  %81 = load i32, i32* %xi, align 4, !dbg !16698
  %82 = load i32, i32* %yi, align 4, !dbg !16699
  %83 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16700
  %x89 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %83, i32 0, i32 2, !dbg !16701
  %84 = load i32, i32* %x89, align 8, !dbg !16701
  %mul90 = mul nsw i32 %82, %84, !dbg !16702
  %add91 = add nsw i32 %81, %mul90, !dbg !16703
  %mul92 = mul nsw i32 %add91, 4, !dbg !16704
  %idx.ext93 = sext i32 %mul92 to i64, !dbg !16705
  %add.ptr94 = getelementptr inbounds float, float* %80, i64 %idx.ext93, !dbg !16705
  call void @copy_v4_v4(float* %78, float* %add.ptr94), !dbg !16706
  br label %if.end103, !dbg !16707

if.else95:                                        ; preds = %if.then84
  call void @llvm.dbg.declare(metadata i8** %tmp_ch, metadata !16708, metadata !DIExpression()), !dbg !16710
  %85 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16711
  %rect96 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %85, i32 0, i32 8, !dbg !16712
  %86 = load i32*, i32** %rect96, align 8, !dbg !16712
  %87 = bitcast i32* %86 to i8*, !dbg !16713
  %88 = load i32, i32* %xi, align 4, !dbg !16714
  %89 = load i32, i32* %yi, align 4, !dbg !16715
  %90 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16716
  %x97 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %90, i32 0, i32 2, !dbg !16717
  %91 = load i32, i32* %x97, align 8, !dbg !16717
  %mul98 = mul nsw i32 %89, %91, !dbg !16718
  %add99 = add nsw i32 %88, %mul98, !dbg !16719
  %mul100 = mul nsw i32 %add99, 4, !dbg !16720
  %idx.ext101 = sext i32 %mul100 to i64, !dbg !16721
  %add.ptr102 = getelementptr inbounds i8, i8* %87, i64 %idx.ext101, !dbg !16721
  store i8* %add.ptr102, i8** %tmp_ch, align 8, !dbg !16710
  %92 = load float*, float** %rgba_fp.addr, align 8, !dbg !16722
  %93 = load i8*, i8** %tmp_ch, align 8, !dbg !16723
  call void @straight_uchar_to_premul_float(float* %92, i8* %93), !dbg !16724
  br label %if.end103

if.end103:                                        ; preds = %if.else95, %if.then87
  br label %if.end104, !dbg !16725

if.end104:                                        ; preds = %if.end103, %if.end82
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end49
  %94 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !16726
  %95 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !16727
  call void @BKE_image_release_ibuf(%struct.Image* %94, %struct.ImBuf* %95, i8* null), !dbg !16728
  store i8 1, i8* %retval, align 1, !dbg !16729
  br label %return, !dbg !16729

return:                                           ; preds = %if.end105, %if.then27, %if.then
  %96 = load i8, i8* %retval, align 1, !dbg !16730
  ret i8 %96, !dbg !16730
}

declare dso_local void @BLI_spin_lock(i32*) #2

declare dso_local void @BLI_spin_unlock(i32*) #2

declare dso_local i8* @image_undo_push_tile(%struct.Image*, %struct.ImBuf*, %struct.ImBuf**, i32, i32, i16**, i8**, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @premul_to_straight_v4_v4(float* %straight, float* %premul) #0 !dbg !16731 {
entry:
  %straight.addr = alloca float*, align 8
  %premul.addr = alloca float*, align 8
  %alpha_inv = alloca float, align 4
  store float* %straight, float** %straight.addr, align 8
  call void @llvm.dbg.declare(metadata float** %straight.addr, metadata !16732, metadata !DIExpression()), !dbg !16733
  store float* %premul, float** %premul.addr, align 8
  call void @llvm.dbg.declare(metadata float** %premul.addr, metadata !16734, metadata !DIExpression()), !dbg !16735
  %0 = load float*, float** %premul.addr, align 8, !dbg !16736
  %arrayidx = getelementptr inbounds float, float* %0, i64 3, !dbg !16736
  %1 = load float, float* %arrayidx, align 4, !dbg !16736
  %cmp = fcmp oeq float %1, 0.000000e+00, !dbg !16738
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16739

lor.lhs.false:                                    ; preds = %entry
  %2 = load float*, float** %premul.addr, align 8, !dbg !16740
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 3, !dbg !16740
  %3 = load float, float* %arrayidx1, align 4, !dbg !16740
  %cmp2 = fcmp oeq float %3, 1.000000e+00, !dbg !16741
  br i1 %cmp2, label %if.then, label %if.else, !dbg !16742

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load float*, float** %premul.addr, align 8, !dbg !16743
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 0, !dbg !16743
  %5 = load float, float* %arrayidx3, align 4, !dbg !16743
  %6 = load float*, float** %straight.addr, align 8, !dbg !16745
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 0, !dbg !16745
  store float %5, float* %arrayidx4, align 4, !dbg !16746
  %7 = load float*, float** %premul.addr, align 8, !dbg !16747
  %arrayidx5 = getelementptr inbounds float, float* %7, i64 1, !dbg !16747
  %8 = load float, float* %arrayidx5, align 4, !dbg !16747
  %9 = load float*, float** %straight.addr, align 8, !dbg !16748
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !16748
  store float %8, float* %arrayidx6, align 4, !dbg !16749
  %10 = load float*, float** %premul.addr, align 8, !dbg !16750
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !16750
  %11 = load float, float* %arrayidx7, align 4, !dbg !16750
  %12 = load float*, float** %straight.addr, align 8, !dbg !16751
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !16751
  store float %11, float* %arrayidx8, align 4, !dbg !16752
  %13 = load float*, float** %premul.addr, align 8, !dbg !16753
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 3, !dbg !16753
  %14 = load float, float* %arrayidx9, align 4, !dbg !16753
  %15 = load float*, float** %straight.addr, align 8, !dbg !16754
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 3, !dbg !16754
  store float %14, float* %arrayidx10, align 4, !dbg !16755
  br label %if.end, !dbg !16756

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata float* %alpha_inv, metadata !16757, metadata !DIExpression()), !dbg !16759
  %16 = load float*, float** %premul.addr, align 8, !dbg !16760
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 3, !dbg !16760
  %17 = load float, float* %arrayidx11, align 4, !dbg !16760
  %div = fdiv float 1.000000e+00, %17, !dbg !16761
  store float %div, float* %alpha_inv, align 4, !dbg !16759
  %18 = load float*, float** %premul.addr, align 8, !dbg !16762
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 0, !dbg !16762
  %19 = load float, float* %arrayidx12, align 4, !dbg !16762
  %20 = load float, float* %alpha_inv, align 4, !dbg !16763
  %mul = fmul float %19, %20, !dbg !16764
  %21 = load float*, float** %straight.addr, align 8, !dbg !16765
  %arrayidx13 = getelementptr inbounds float, float* %21, i64 0, !dbg !16765
  store float %mul, float* %arrayidx13, align 4, !dbg !16766
  %22 = load float*, float** %premul.addr, align 8, !dbg !16767
  %arrayidx14 = getelementptr inbounds float, float* %22, i64 1, !dbg !16767
  %23 = load float, float* %arrayidx14, align 4, !dbg !16767
  %24 = load float, float* %alpha_inv, align 4, !dbg !16768
  %mul15 = fmul float %23, %24, !dbg !16769
  %25 = load float*, float** %straight.addr, align 8, !dbg !16770
  %arrayidx16 = getelementptr inbounds float, float* %25, i64 1, !dbg !16770
  store float %mul15, float* %arrayidx16, align 4, !dbg !16771
  %26 = load float*, float** %premul.addr, align 8, !dbg !16772
  %arrayidx17 = getelementptr inbounds float, float* %26, i64 2, !dbg !16772
  %27 = load float, float* %arrayidx17, align 4, !dbg !16772
  %28 = load float, float* %alpha_inv, align 4, !dbg !16773
  %mul18 = fmul float %27, %28, !dbg !16774
  %29 = load float*, float** %straight.addr, align 8, !dbg !16775
  %arrayidx19 = getelementptr inbounds float, float* %29, i64 2, !dbg !16775
  store float %mul18, float* %arrayidx19, align 4, !dbg !16776
  %30 = load float*, float** %premul.addr, align 8, !dbg !16777
  %arrayidx20 = getelementptr inbounds float, float* %30, i64 3, !dbg !16777
  %31 = load float, float* %arrayidx20, align 4, !dbg !16777
  %32 = load float*, float** %straight.addr, align 8, !dbg !16778
  %arrayidx21 = getelementptr inbounds float, float* %32, i64 3, !dbg !16778
  store float %31, float* %arrayidx21, align 4, !dbg !16779
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !16780
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @project_paint_PickFace(%struct.ProjPaintState* %ps, float* %pt, float* %w, i32* %side) #0 !dbg !16781 {
entry:
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %pt.addr = alloca float*, align 8
  %w.addr = alloca float*, align 8
  %side.addr = alloca i32*, align 8
  %node = alloca %struct.LinkNode*, align 8
  %w_tmp = alloca [3 x float], align 4
  %v1 = alloca float*, align 8
  %v2 = alloca float*, align 8
  %v3 = alloca float*, align 8
  %v4 = alloca float*, align 8
  %bucket_index = alloca i32, align 4
  %face_index = alloca i32, align 4
  %best_side = alloca i32, align 4
  %best_face_index = alloca i32, align 4
  %z_depth_best = alloca float, align 4
  %z_depth = alloca float, align 4
  %mf = alloca %struct.MFace*, align 8
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !16784, metadata !DIExpression()), !dbg !16785
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !16786, metadata !DIExpression()), !dbg !16787
  store float* %w, float** %w.addr, align 8
  call void @llvm.dbg.declare(metadata float** %w.addr, metadata !16788, metadata !DIExpression()), !dbg !16789
  store i32* %side, i32** %side.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %side.addr, metadata !16790, metadata !DIExpression()), !dbg !16791
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %node, metadata !16792, metadata !DIExpression()), !dbg !16793
  call void @llvm.dbg.declare(metadata [3 x float]* %w_tmp, metadata !16794, metadata !DIExpression()), !dbg !16795
  call void @llvm.dbg.declare(metadata float** %v1, metadata !16796, metadata !DIExpression()), !dbg !16797
  call void @llvm.dbg.declare(metadata float** %v2, metadata !16798, metadata !DIExpression()), !dbg !16799
  call void @llvm.dbg.declare(metadata float** %v3, metadata !16800, metadata !DIExpression()), !dbg !16801
  call void @llvm.dbg.declare(metadata float** %v4, metadata !16802, metadata !DIExpression()), !dbg !16803
  call void @llvm.dbg.declare(metadata i32* %bucket_index, metadata !16804, metadata !DIExpression()), !dbg !16805
  call void @llvm.dbg.declare(metadata i32* %face_index, metadata !16806, metadata !DIExpression()), !dbg !16807
  call void @llvm.dbg.declare(metadata i32* %best_side, metadata !16808, metadata !DIExpression()), !dbg !16809
  store i32 -1, i32* %best_side, align 4, !dbg !16809
  call void @llvm.dbg.declare(metadata i32* %best_face_index, metadata !16810, metadata !DIExpression()), !dbg !16811
  store i32 -1, i32* %best_face_index, align 4, !dbg !16811
  call void @llvm.dbg.declare(metadata float* %z_depth_best, metadata !16812, metadata !DIExpression()), !dbg !16813
  store float 0x47EFFFFFE0000000, float* %z_depth_best, align 4, !dbg !16813
  call void @llvm.dbg.declare(metadata float* %z_depth, metadata !16814, metadata !DIExpression()), !dbg !16815
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !16816, metadata !DIExpression()), !dbg !16817
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !16818
  %1 = load float*, float** %pt.addr, align 8, !dbg !16819
  %call = call i32 @project_bucket_offset_safe(%struct.ProjPaintState* %0, float* %1), !dbg !16820
  store i32 %call, i32* %bucket_index, align 4, !dbg !16821
  %2 = load i32, i32* %bucket_index, align 4, !dbg !16822
  %cmp = icmp eq i32 %2, -1, !dbg !16824
  br i1 %cmp, label %if.then, label %if.end, !dbg !16825

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !16826
  br label %return, !dbg !16826

if.end:                                           ; preds = %entry
  %3 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !16827
  %bucketFaces = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %3, i32 0, i32 29, !dbg !16829
  %4 = load %struct.LinkNode**, %struct.LinkNode*** %bucketFaces, align 8, !dbg !16829
  %5 = load i32, i32* %bucket_index, align 4, !dbg !16830
  %idxprom = sext i32 %5 to i64, !dbg !16827
  %arrayidx = getelementptr inbounds %struct.LinkNode*, %struct.LinkNode** %4, i64 %idxprom, !dbg !16827
  %6 = load %struct.LinkNode*, %struct.LinkNode** %arrayidx, align 8, !dbg !16827
  store %struct.LinkNode* %6, %struct.LinkNode** %node, align 8, !dbg !16831
  br label %for.cond, !dbg !16832

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !16833
  %tobool = icmp ne %struct.LinkNode* %7, null, !dbg !16835
  br i1 %tobool, label %for.body, label %for.end, !dbg !16835

for.body:                                         ; preds = %for.cond
  %8 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !16836
  %link = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %8, i32 0, i32 1, !dbg !16836
  %9 = load i8*, i8** %link, align 8, !dbg !16836
  %10 = ptrtoint i8* %9 to i64, !dbg !16836
  %conv = trunc i64 %10 to i32, !dbg !16836
  store i32 %conv, i32* %face_index, align 4, !dbg !16838
  %11 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !16839
  %dm_mface = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %11, i32 0, i32 19, !dbg !16840
  %12 = load %struct.MFace*, %struct.MFace** %dm_mface, align 8, !dbg !16840
  %13 = load i32, i32* %face_index, align 4, !dbg !16841
  %idx.ext = sext i32 %13 to i64, !dbg !16842
  %add.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %12, i64 %idx.ext, !dbg !16842
  store %struct.MFace* %add.ptr, %struct.MFace** %mf, align 8, !dbg !16843
  %14 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !16844
  %screenCoords = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %14, i32 0, i32 41, !dbg !16845
  %15 = load [4 x float]*, [4 x float]** %screenCoords, align 8, !dbg !16845
  %16 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !16846
  %v11 = getelementptr inbounds %struct.MFace, %struct.MFace* %16, i32 0, i32 0, !dbg !16847
  %17 = load i32, i32* %v11, align 4, !dbg !16847
  %idxprom2 = zext i32 %17 to i64, !dbg !16844
  %arrayidx3 = getelementptr inbounds [4 x float], [4 x float]* %15, i64 %idxprom2, !dbg !16844
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %arrayidx3, i64 0, i64 0, !dbg !16844
  store float* %arraydecay, float** %v1, align 8, !dbg !16848
  %18 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !16849
  %screenCoords4 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %18, i32 0, i32 41, !dbg !16850
  %19 = load [4 x float]*, [4 x float]** %screenCoords4, align 8, !dbg !16850
  %20 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !16851
  %v25 = getelementptr inbounds %struct.MFace, %struct.MFace* %20, i32 0, i32 1, !dbg !16852
  %21 = load i32, i32* %v25, align 4, !dbg !16852
  %idxprom6 = zext i32 %21 to i64, !dbg !16849
  %arrayidx7 = getelementptr inbounds [4 x float], [4 x float]* %19, i64 %idxprom6, !dbg !16849
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx7, i64 0, i64 0, !dbg !16849
  store float* %arraydecay8, float** %v2, align 8, !dbg !16853
  %22 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !16854
  %screenCoords9 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %22, i32 0, i32 41, !dbg !16855
  %23 = load [4 x float]*, [4 x float]** %screenCoords9, align 8, !dbg !16855
  %24 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !16856
  %v310 = getelementptr inbounds %struct.MFace, %struct.MFace* %24, i32 0, i32 2, !dbg !16857
  %25 = load i32, i32* %v310, align 4, !dbg !16857
  %idxprom11 = zext i32 %25 to i64, !dbg !16854
  %arrayidx12 = getelementptr inbounds [4 x float], [4 x float]* %23, i64 %idxprom11, !dbg !16854
  %arraydecay13 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx12, i64 0, i64 0, !dbg !16854
  store float* %arraydecay13, float** %v3, align 8, !dbg !16858
  %26 = load float*, float** %pt.addr, align 8, !dbg !16859
  %27 = load float*, float** %v1, align 8, !dbg !16861
  %28 = load float*, float** %v2, align 8, !dbg !16862
  %29 = load float*, float** %v3, align 8, !dbg !16863
  %call14 = call i32 @isect_point_tri_v2(float* %26, float* %27, float* %28, float* %29), !dbg !16864
  %tobool15 = icmp ne i32 %call14, 0, !dbg !16864
  br i1 %tobool15, label %if.then16, label %if.else29, !dbg !16865

if.then16:                                        ; preds = %for.body
  %30 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !16866
  %is_ortho = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %30, i32 0, i32 61, !dbg !16869
  %31 = load i8, i8* %is_ortho, align 1, !dbg !16869
  %tobool17 = icmp ne i8 %31, 0, !dbg !16866
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !16870

if.then18:                                        ; preds = %if.then16
  %32 = load float*, float** %pt.addr, align 8, !dbg !16871
  %33 = load float*, float** %v1, align 8, !dbg !16872
  %34 = load float*, float** %v2, align 8, !dbg !16873
  %35 = load float*, float** %v3, align 8, !dbg !16874
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 0, !dbg !16875
  %call20 = call float @VecZDepthOrtho(float* %32, float* %33, float* %34, float* %35, float* %arraydecay19), !dbg !16876
  store float %call20, float* %z_depth, align 4, !dbg !16877
  br label %if.end23, !dbg !16878

if.else:                                          ; preds = %if.then16
  %36 = load float*, float** %pt.addr, align 8, !dbg !16879
  %37 = load float*, float** %v1, align 8, !dbg !16880
  %38 = load float*, float** %v2, align 8, !dbg !16881
  %39 = load float*, float** %v3, align 8, !dbg !16882
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 0, !dbg !16883
  %call22 = call float @VecZDepthPersp(float* %36, float* %37, float* %38, float* %39, float* %arraydecay21), !dbg !16884
  store float %call22, float* %z_depth, align 4, !dbg !16885
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %40 = load float, float* %z_depth, align 4, !dbg !16886
  %41 = load float, float* %z_depth_best, align 4, !dbg !16888
  %cmp24 = fcmp olt float %40, %41, !dbg !16889
  br i1 %cmp24, label %if.then26, label %if.end28, !dbg !16890

if.then26:                                        ; preds = %if.end23
  %42 = load i32, i32* %face_index, align 4, !dbg !16891
  store i32 %42, i32* %best_face_index, align 4, !dbg !16893
  store i32 0, i32* %best_side, align 4, !dbg !16894
  %43 = load float, float* %z_depth, align 4, !dbg !16895
  store float %43, float* %z_depth_best, align 4, !dbg !16896
  %44 = load float*, float** %w.addr, align 8, !dbg !16897
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 0, !dbg !16898
  call void @copy_v3_v3(float* %44, float* %arraydecay27), !dbg !16899
  br label %if.end28, !dbg !16900

if.end28:                                         ; preds = %if.then26, %if.end23
  br label %if.end57, !dbg !16901

if.else29:                                        ; preds = %for.body
  %45 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !16902
  %v430 = getelementptr inbounds %struct.MFace, %struct.MFace* %45, i32 0, i32 3, !dbg !16904
  %46 = load i32, i32* %v430, align 4, !dbg !16904
  %tobool31 = icmp ne i32 %46, 0, !dbg !16902
  br i1 %tobool31, label %if.then32, label %if.end56, !dbg !16905

if.then32:                                        ; preds = %if.else29
  %47 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !16906
  %screenCoords33 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %47, i32 0, i32 41, !dbg !16908
  %48 = load [4 x float]*, [4 x float]** %screenCoords33, align 8, !dbg !16908
  %49 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !16909
  %v434 = getelementptr inbounds %struct.MFace, %struct.MFace* %49, i32 0, i32 3, !dbg !16910
  %50 = load i32, i32* %v434, align 4, !dbg !16910
  %idxprom35 = zext i32 %50 to i64, !dbg !16906
  %arrayidx36 = getelementptr inbounds [4 x float], [4 x float]* %48, i64 %idxprom35, !dbg !16906
  %arraydecay37 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx36, i64 0, i64 0, !dbg !16906
  store float* %arraydecay37, float** %v4, align 8, !dbg !16911
  %51 = load float*, float** %pt.addr, align 8, !dbg !16912
  %52 = load float*, float** %v1, align 8, !dbg !16914
  %53 = load float*, float** %v3, align 8, !dbg !16915
  %54 = load float*, float** %v4, align 8, !dbg !16916
  %call38 = call i32 @isect_point_tri_v2(float* %51, float* %52, float* %53, float* %54), !dbg !16917
  %tobool39 = icmp ne i32 %call38, 0, !dbg !16917
  br i1 %tobool39, label %if.then40, label %if.end55, !dbg !16918

if.then40:                                        ; preds = %if.then32
  %55 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !16919
  %is_ortho41 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %55, i32 0, i32 61, !dbg !16922
  %56 = load i8, i8* %is_ortho41, align 1, !dbg !16922
  %tobool42 = icmp ne i8 %56, 0, !dbg !16919
  br i1 %tobool42, label %if.then43, label %if.else46, !dbg !16923

if.then43:                                        ; preds = %if.then40
  %57 = load float*, float** %pt.addr, align 8, !dbg !16924
  %58 = load float*, float** %v1, align 8, !dbg !16925
  %59 = load float*, float** %v3, align 8, !dbg !16926
  %60 = load float*, float** %v4, align 8, !dbg !16927
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 0, !dbg !16928
  %call45 = call float @VecZDepthOrtho(float* %57, float* %58, float* %59, float* %60, float* %arraydecay44), !dbg !16929
  store float %call45, float* %z_depth, align 4, !dbg !16930
  br label %if.end49, !dbg !16931

if.else46:                                        ; preds = %if.then40
  %61 = load float*, float** %pt.addr, align 8, !dbg !16932
  %62 = load float*, float** %v1, align 8, !dbg !16933
  %63 = load float*, float** %v3, align 8, !dbg !16934
  %64 = load float*, float** %v4, align 8, !dbg !16935
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 0, !dbg !16936
  %call48 = call float @VecZDepthPersp(float* %61, float* %62, float* %63, float* %64, float* %arraydecay47), !dbg !16937
  store float %call48, float* %z_depth, align 4, !dbg !16938
  br label %if.end49

if.end49:                                         ; preds = %if.else46, %if.then43
  %65 = load float, float* %z_depth, align 4, !dbg !16939
  %66 = load float, float* %z_depth_best, align 4, !dbg !16941
  %cmp50 = fcmp olt float %65, %66, !dbg !16942
  br i1 %cmp50, label %if.then52, label %if.end54, !dbg !16943

if.then52:                                        ; preds = %if.end49
  %67 = load i32, i32* %face_index, align 4, !dbg !16944
  store i32 %67, i32* %best_face_index, align 4, !dbg !16946
  store i32 1, i32* %best_side, align 4, !dbg !16947
  %68 = load float, float* %z_depth, align 4, !dbg !16948
  store float %68, float* %z_depth_best, align 4, !dbg !16949
  %69 = load float*, float** %w.addr, align 8, !dbg !16950
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %w_tmp, i64 0, i64 0, !dbg !16951
  call void @copy_v3_v3(float* %69, float* %arraydecay53), !dbg !16952
  br label %if.end54, !dbg !16953

if.end54:                                         ; preds = %if.then52, %if.end49
  br label %if.end55, !dbg !16954

if.end55:                                         ; preds = %if.end54, %if.then32
  br label %if.end56, !dbg !16955

if.end56:                                         ; preds = %if.end55, %if.else29
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.end28
  br label %for.inc, !dbg !16956

for.inc:                                          ; preds = %if.end57
  %70 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !16957
  %next = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %70, i32 0, i32 0, !dbg !16958
  %71 = load %struct.LinkNode*, %struct.LinkNode** %next, align 8, !dbg !16958
  store %struct.LinkNode* %71, %struct.LinkNode** %node, align 8, !dbg !16959
  br label %for.cond, !dbg !16960, !llvm.loop !16961

for.end:                                          ; preds = %for.cond
  %72 = load i32, i32* %best_side, align 4, !dbg !16963
  %73 = load i32*, i32** %side.addr, align 8, !dbg !16964
  store i32 %72, i32* %73, align 4, !dbg !16965
  %74 = load i32, i32* %best_face_index, align 4, !dbg !16966
  store i32 %74, i32* %retval, align 4, !dbg !16967
  br label %return, !dbg !16967

return:                                           ; preds = %for.end, %if.then
  %75 = load i32, i32* %retval, align 4, !dbg !16968
  ret i32 %75, !dbg !16968
}

declare dso_local %struct.ImBuf* @BKE_image_get_first_ibuf(%struct.Image*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @premul_float_to_straight_uchar(i8* %result, float* %color) #0 !dbg !16969 {
entry:
  %result.addr = alloca i8*, align 8
  %color.addr = alloca float*, align 8
  %alpha_inv = alloca float, align 4
  store i8* %result, i8** %result.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %result.addr, metadata !16970, metadata !DIExpression()), !dbg !16971
  store float* %color, float** %color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %color.addr, metadata !16972, metadata !DIExpression()), !dbg !16973
  %0 = load float*, float** %color.addr, align 8, !dbg !16974
  %arrayidx = getelementptr inbounds float, float* %0, i64 3, !dbg !16974
  %1 = load float, float* %arrayidx, align 4, !dbg !16974
  %cmp = fcmp oeq float %1, 0.000000e+00, !dbg !16976
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16977

lor.lhs.false:                                    ; preds = %entry
  %2 = load float*, float** %color.addr, align 8, !dbg !16978
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 3, !dbg !16978
  %3 = load float, float* %arrayidx1, align 4, !dbg !16978
  %cmp2 = fcmp oeq float %3, 1.000000e+00, !dbg !16979
  br i1 %cmp2, label %if.then, label %if.else, !dbg !16980

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load float*, float** %color.addr, align 8, !dbg !16981
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 0, !dbg !16981
  %5 = load float, float* %arrayidx3, align 4, !dbg !16981
  %cmp4 = fcmp ole float %5, 0.000000e+00, !dbg !16981
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !16981

cond.true:                                        ; preds = %if.then
  br label %cond.end10, !dbg !16981

cond.false:                                       ; preds = %if.then
  %6 = load float*, float** %color.addr, align 8, !dbg !16981
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 0, !dbg !16981
  %7 = load float, float* %arrayidx5, align 4, !dbg !16981
  %cmp6 = fcmp ogt float %7, 0x3FEFEFEFE0000000, !dbg !16981
  br i1 %cmp6, label %cond.true7, label %cond.false8, !dbg !16981

cond.true7:                                       ; preds = %cond.false
  br label %cond.end, !dbg !16981

cond.false8:                                      ; preds = %cond.false
  %8 = load float*, float** %color.addr, align 8, !dbg !16981
  %arrayidx9 = getelementptr inbounds float, float* %8, i64 0, !dbg !16981
  %9 = load float, float* %arrayidx9, align 4, !dbg !16981
  %mul = fmul float 2.550000e+02, %9, !dbg !16981
  %add = fadd float %mul, 5.000000e-01, !dbg !16981
  br label %cond.end, !dbg !16981

cond.end:                                         ; preds = %cond.false8, %cond.true7
  %cond = phi float [ 2.550000e+02, %cond.true7 ], [ %add, %cond.false8 ], !dbg !16981
  br label %cond.end10, !dbg !16981

cond.end10:                                       ; preds = %cond.end, %cond.true
  %cond11 = phi float [ 0.000000e+00, %cond.true ], [ %cond, %cond.end ], !dbg !16981
  %conv = fptoui float %cond11 to i8, !dbg !16981
  %10 = load i8*, i8** %result.addr, align 8, !dbg !16983
  %arrayidx12 = getelementptr inbounds i8, i8* %10, i64 0, !dbg !16983
  store i8 %conv, i8* %arrayidx12, align 1, !dbg !16984
  %11 = load float*, float** %color.addr, align 8, !dbg !16985
  %arrayidx13 = getelementptr inbounds float, float* %11, i64 1, !dbg !16985
  %12 = load float, float* %arrayidx13, align 4, !dbg !16985
  %cmp14 = fcmp ole float %12, 0.000000e+00, !dbg !16985
  br i1 %cmp14, label %cond.true16, label %cond.false17, !dbg !16985

cond.true16:                                      ; preds = %cond.end10
  br label %cond.end28, !dbg !16985

cond.false17:                                     ; preds = %cond.end10
  %13 = load float*, float** %color.addr, align 8, !dbg !16985
  %arrayidx18 = getelementptr inbounds float, float* %13, i64 1, !dbg !16985
  %14 = load float, float* %arrayidx18, align 4, !dbg !16985
  %cmp19 = fcmp ogt float %14, 0x3FEFEFEFE0000000, !dbg !16985
  br i1 %cmp19, label %cond.true21, label %cond.false22, !dbg !16985

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end26, !dbg !16985

cond.false22:                                     ; preds = %cond.false17
  %15 = load float*, float** %color.addr, align 8, !dbg !16985
  %arrayidx23 = getelementptr inbounds float, float* %15, i64 1, !dbg !16985
  %16 = load float, float* %arrayidx23, align 4, !dbg !16985
  %mul24 = fmul float 2.550000e+02, %16, !dbg !16985
  %add25 = fadd float %mul24, 5.000000e-01, !dbg !16985
  br label %cond.end26, !dbg !16985

cond.end26:                                       ; preds = %cond.false22, %cond.true21
  %cond27 = phi float [ 2.550000e+02, %cond.true21 ], [ %add25, %cond.false22 ], !dbg !16985
  br label %cond.end28, !dbg !16985

cond.end28:                                       ; preds = %cond.end26, %cond.true16
  %cond29 = phi float [ 0.000000e+00, %cond.true16 ], [ %cond27, %cond.end26 ], !dbg !16985
  %conv30 = fptoui float %cond29 to i8, !dbg !16985
  %17 = load i8*, i8** %result.addr, align 8, !dbg !16986
  %arrayidx31 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !16986
  store i8 %conv30, i8* %arrayidx31, align 1, !dbg !16987
  %18 = load float*, float** %color.addr, align 8, !dbg !16988
  %arrayidx32 = getelementptr inbounds float, float* %18, i64 2, !dbg !16988
  %19 = load float, float* %arrayidx32, align 4, !dbg !16988
  %cmp33 = fcmp ole float %19, 0.000000e+00, !dbg !16988
  br i1 %cmp33, label %cond.true35, label %cond.false36, !dbg !16988

cond.true35:                                      ; preds = %cond.end28
  br label %cond.end47, !dbg !16988

cond.false36:                                     ; preds = %cond.end28
  %20 = load float*, float** %color.addr, align 8, !dbg !16988
  %arrayidx37 = getelementptr inbounds float, float* %20, i64 2, !dbg !16988
  %21 = load float, float* %arrayidx37, align 4, !dbg !16988
  %cmp38 = fcmp ogt float %21, 0x3FEFEFEFE0000000, !dbg !16988
  br i1 %cmp38, label %cond.true40, label %cond.false41, !dbg !16988

cond.true40:                                      ; preds = %cond.false36
  br label %cond.end45, !dbg !16988

cond.false41:                                     ; preds = %cond.false36
  %22 = load float*, float** %color.addr, align 8, !dbg !16988
  %arrayidx42 = getelementptr inbounds float, float* %22, i64 2, !dbg !16988
  %23 = load float, float* %arrayidx42, align 4, !dbg !16988
  %mul43 = fmul float 2.550000e+02, %23, !dbg !16988
  %add44 = fadd float %mul43, 5.000000e-01, !dbg !16988
  br label %cond.end45, !dbg !16988

cond.end45:                                       ; preds = %cond.false41, %cond.true40
  %cond46 = phi float [ 2.550000e+02, %cond.true40 ], [ %add44, %cond.false41 ], !dbg !16988
  br label %cond.end47, !dbg !16988

cond.end47:                                       ; preds = %cond.end45, %cond.true35
  %cond48 = phi float [ 0.000000e+00, %cond.true35 ], [ %cond46, %cond.end45 ], !dbg !16988
  %conv49 = fptoui float %cond48 to i8, !dbg !16988
  %24 = load i8*, i8** %result.addr, align 8, !dbg !16989
  %arrayidx50 = getelementptr inbounds i8, i8* %24, i64 2, !dbg !16989
  store i8 %conv49, i8* %arrayidx50, align 1, !dbg !16990
  %25 = load float*, float** %color.addr, align 8, !dbg !16991
  %arrayidx51 = getelementptr inbounds float, float* %25, i64 3, !dbg !16991
  %26 = load float, float* %arrayidx51, align 4, !dbg !16991
  %cmp52 = fcmp ole float %26, 0.000000e+00, !dbg !16991
  br i1 %cmp52, label %cond.true54, label %cond.false55, !dbg !16991

cond.true54:                                      ; preds = %cond.end47
  br label %cond.end66, !dbg !16991

cond.false55:                                     ; preds = %cond.end47
  %27 = load float*, float** %color.addr, align 8, !dbg !16991
  %arrayidx56 = getelementptr inbounds float, float* %27, i64 3, !dbg !16991
  %28 = load float, float* %arrayidx56, align 4, !dbg !16991
  %cmp57 = fcmp ogt float %28, 0x3FEFEFEFE0000000, !dbg !16991
  br i1 %cmp57, label %cond.true59, label %cond.false60, !dbg !16991

cond.true59:                                      ; preds = %cond.false55
  br label %cond.end64, !dbg !16991

cond.false60:                                     ; preds = %cond.false55
  %29 = load float*, float** %color.addr, align 8, !dbg !16991
  %arrayidx61 = getelementptr inbounds float, float* %29, i64 3, !dbg !16991
  %30 = load float, float* %arrayidx61, align 4, !dbg !16991
  %mul62 = fmul float 2.550000e+02, %30, !dbg !16991
  %add63 = fadd float %mul62, 5.000000e-01, !dbg !16991
  br label %cond.end64, !dbg !16991

cond.end64:                                       ; preds = %cond.false60, %cond.true59
  %cond65 = phi float [ 2.550000e+02, %cond.true59 ], [ %add63, %cond.false60 ], !dbg !16991
  br label %cond.end66, !dbg !16991

cond.end66:                                       ; preds = %cond.end64, %cond.true54
  %cond67 = phi float [ 0.000000e+00, %cond.true54 ], [ %cond65, %cond.end64 ], !dbg !16991
  %conv68 = fptoui float %cond67 to i8, !dbg !16991
  %31 = load i8*, i8** %result.addr, align 8, !dbg !16992
  %arrayidx69 = getelementptr inbounds i8, i8* %31, i64 3, !dbg !16992
  store i8 %conv68, i8* %arrayidx69, align 1, !dbg !16993
  br label %if.end, !dbg !16994

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata float* %alpha_inv, metadata !16995, metadata !DIExpression()), !dbg !16997
  %32 = load float*, float** %color.addr, align 8, !dbg !16998
  %arrayidx70 = getelementptr inbounds float, float* %32, i64 3, !dbg !16998
  %33 = load float, float* %arrayidx70, align 4, !dbg !16998
  %div = fdiv float 1.000000e+00, %33, !dbg !16999
  store float %div, float* %alpha_inv, align 4, !dbg !16997
  %34 = load float*, float** %color.addr, align 8, !dbg !17000
  %arrayidx71 = getelementptr inbounds float, float* %34, i64 0, !dbg !17000
  %35 = load float, float* %arrayidx71, align 4, !dbg !17000
  %36 = load float, float* %alpha_inv, align 4, !dbg !17000
  %mul72 = fmul float %35, %36, !dbg !17000
  %cmp73 = fcmp ole float %mul72, 0.000000e+00, !dbg !17000
  br i1 %cmp73, label %cond.true75, label %cond.false76, !dbg !17000

cond.true75:                                      ; preds = %if.else
  br label %cond.end89, !dbg !17000

cond.false76:                                     ; preds = %if.else
  %37 = load float*, float** %color.addr, align 8, !dbg !17000
  %arrayidx77 = getelementptr inbounds float, float* %37, i64 0, !dbg !17000
  %38 = load float, float* %arrayidx77, align 4, !dbg !17000
  %39 = load float, float* %alpha_inv, align 4, !dbg !17000
  %mul78 = fmul float %38, %39, !dbg !17000
  %cmp79 = fcmp ogt float %mul78, 0x3FEFEFEFE0000000, !dbg !17000
  br i1 %cmp79, label %cond.true81, label %cond.false82, !dbg !17000

cond.true81:                                      ; preds = %cond.false76
  br label %cond.end87, !dbg !17000

cond.false82:                                     ; preds = %cond.false76
  %40 = load float*, float** %color.addr, align 8, !dbg !17000
  %arrayidx83 = getelementptr inbounds float, float* %40, i64 0, !dbg !17000
  %41 = load float, float* %arrayidx83, align 4, !dbg !17000
  %42 = load float, float* %alpha_inv, align 4, !dbg !17000
  %mul84 = fmul float %41, %42, !dbg !17000
  %mul85 = fmul float 2.550000e+02, %mul84, !dbg !17000
  %add86 = fadd float %mul85, 5.000000e-01, !dbg !17000
  br label %cond.end87, !dbg !17000

cond.end87:                                       ; preds = %cond.false82, %cond.true81
  %cond88 = phi float [ 2.550000e+02, %cond.true81 ], [ %add86, %cond.false82 ], !dbg !17000
  br label %cond.end89, !dbg !17000

cond.end89:                                       ; preds = %cond.end87, %cond.true75
  %cond90 = phi float [ 0.000000e+00, %cond.true75 ], [ %cond88, %cond.end87 ], !dbg !17000
  %conv91 = fptoui float %cond90 to i8, !dbg !17000
  %43 = load i8*, i8** %result.addr, align 8, !dbg !17001
  %arrayidx92 = getelementptr inbounds i8, i8* %43, i64 0, !dbg !17001
  store i8 %conv91, i8* %arrayidx92, align 1, !dbg !17002
  %44 = load float*, float** %color.addr, align 8, !dbg !17003
  %arrayidx93 = getelementptr inbounds float, float* %44, i64 1, !dbg !17003
  %45 = load float, float* %arrayidx93, align 4, !dbg !17003
  %46 = load float, float* %alpha_inv, align 4, !dbg !17003
  %mul94 = fmul float %45, %46, !dbg !17003
  %cmp95 = fcmp ole float %mul94, 0.000000e+00, !dbg !17003
  br i1 %cmp95, label %cond.true97, label %cond.false98, !dbg !17003

cond.true97:                                      ; preds = %cond.end89
  br label %cond.end111, !dbg !17003

cond.false98:                                     ; preds = %cond.end89
  %47 = load float*, float** %color.addr, align 8, !dbg !17003
  %arrayidx99 = getelementptr inbounds float, float* %47, i64 1, !dbg !17003
  %48 = load float, float* %arrayidx99, align 4, !dbg !17003
  %49 = load float, float* %alpha_inv, align 4, !dbg !17003
  %mul100 = fmul float %48, %49, !dbg !17003
  %cmp101 = fcmp ogt float %mul100, 0x3FEFEFEFE0000000, !dbg !17003
  br i1 %cmp101, label %cond.true103, label %cond.false104, !dbg !17003

cond.true103:                                     ; preds = %cond.false98
  br label %cond.end109, !dbg !17003

cond.false104:                                    ; preds = %cond.false98
  %50 = load float*, float** %color.addr, align 8, !dbg !17003
  %arrayidx105 = getelementptr inbounds float, float* %50, i64 1, !dbg !17003
  %51 = load float, float* %arrayidx105, align 4, !dbg !17003
  %52 = load float, float* %alpha_inv, align 4, !dbg !17003
  %mul106 = fmul float %51, %52, !dbg !17003
  %mul107 = fmul float 2.550000e+02, %mul106, !dbg !17003
  %add108 = fadd float %mul107, 5.000000e-01, !dbg !17003
  br label %cond.end109, !dbg !17003

cond.end109:                                      ; preds = %cond.false104, %cond.true103
  %cond110 = phi float [ 2.550000e+02, %cond.true103 ], [ %add108, %cond.false104 ], !dbg !17003
  br label %cond.end111, !dbg !17003

cond.end111:                                      ; preds = %cond.end109, %cond.true97
  %cond112 = phi float [ 0.000000e+00, %cond.true97 ], [ %cond110, %cond.end109 ], !dbg !17003
  %conv113 = fptoui float %cond112 to i8, !dbg !17003
  %53 = load i8*, i8** %result.addr, align 8, !dbg !17004
  %arrayidx114 = getelementptr inbounds i8, i8* %53, i64 1, !dbg !17004
  store i8 %conv113, i8* %arrayidx114, align 1, !dbg !17005
  %54 = load float*, float** %color.addr, align 8, !dbg !17006
  %arrayidx115 = getelementptr inbounds float, float* %54, i64 2, !dbg !17006
  %55 = load float, float* %arrayidx115, align 4, !dbg !17006
  %56 = load float, float* %alpha_inv, align 4, !dbg !17006
  %mul116 = fmul float %55, %56, !dbg !17006
  %cmp117 = fcmp ole float %mul116, 0.000000e+00, !dbg !17006
  br i1 %cmp117, label %cond.true119, label %cond.false120, !dbg !17006

cond.true119:                                     ; preds = %cond.end111
  br label %cond.end133, !dbg !17006

cond.false120:                                    ; preds = %cond.end111
  %57 = load float*, float** %color.addr, align 8, !dbg !17006
  %arrayidx121 = getelementptr inbounds float, float* %57, i64 2, !dbg !17006
  %58 = load float, float* %arrayidx121, align 4, !dbg !17006
  %59 = load float, float* %alpha_inv, align 4, !dbg !17006
  %mul122 = fmul float %58, %59, !dbg !17006
  %cmp123 = fcmp ogt float %mul122, 0x3FEFEFEFE0000000, !dbg !17006
  br i1 %cmp123, label %cond.true125, label %cond.false126, !dbg !17006

cond.true125:                                     ; preds = %cond.false120
  br label %cond.end131, !dbg !17006

cond.false126:                                    ; preds = %cond.false120
  %60 = load float*, float** %color.addr, align 8, !dbg !17006
  %arrayidx127 = getelementptr inbounds float, float* %60, i64 2, !dbg !17006
  %61 = load float, float* %arrayidx127, align 4, !dbg !17006
  %62 = load float, float* %alpha_inv, align 4, !dbg !17006
  %mul128 = fmul float %61, %62, !dbg !17006
  %mul129 = fmul float 2.550000e+02, %mul128, !dbg !17006
  %add130 = fadd float %mul129, 5.000000e-01, !dbg !17006
  br label %cond.end131, !dbg !17006

cond.end131:                                      ; preds = %cond.false126, %cond.true125
  %cond132 = phi float [ 2.550000e+02, %cond.true125 ], [ %add130, %cond.false126 ], !dbg !17006
  br label %cond.end133, !dbg !17006

cond.end133:                                      ; preds = %cond.end131, %cond.true119
  %cond134 = phi float [ 0.000000e+00, %cond.true119 ], [ %cond132, %cond.end131 ], !dbg !17006
  %conv135 = fptoui float %cond134 to i8, !dbg !17006
  %63 = load i8*, i8** %result.addr, align 8, !dbg !17007
  %arrayidx136 = getelementptr inbounds i8, i8* %63, i64 2, !dbg !17007
  store i8 %conv135, i8* %arrayidx136, align 1, !dbg !17008
  %64 = load float*, float** %color.addr, align 8, !dbg !17009
  %arrayidx137 = getelementptr inbounds float, float* %64, i64 3, !dbg !17009
  %65 = load float, float* %arrayidx137, align 4, !dbg !17009
  %cmp138 = fcmp ole float %65, 0.000000e+00, !dbg !17009
  br i1 %cmp138, label %cond.true140, label %cond.false141, !dbg !17009

cond.true140:                                     ; preds = %cond.end133
  br label %cond.end152, !dbg !17009

cond.false141:                                    ; preds = %cond.end133
  %66 = load float*, float** %color.addr, align 8, !dbg !17009
  %arrayidx142 = getelementptr inbounds float, float* %66, i64 3, !dbg !17009
  %67 = load float, float* %arrayidx142, align 4, !dbg !17009
  %cmp143 = fcmp ogt float %67, 0x3FEFEFEFE0000000, !dbg !17009
  br i1 %cmp143, label %cond.true145, label %cond.false146, !dbg !17009

cond.true145:                                     ; preds = %cond.false141
  br label %cond.end150, !dbg !17009

cond.false146:                                    ; preds = %cond.false141
  %68 = load float*, float** %color.addr, align 8, !dbg !17009
  %arrayidx147 = getelementptr inbounds float, float* %68, i64 3, !dbg !17009
  %69 = load float, float* %arrayidx147, align 4, !dbg !17009
  %mul148 = fmul float 2.550000e+02, %69, !dbg !17009
  %add149 = fadd float %mul148, 5.000000e-01, !dbg !17009
  br label %cond.end150, !dbg !17009

cond.end150:                                      ; preds = %cond.false146, %cond.true145
  %cond151 = phi float [ 2.550000e+02, %cond.true145 ], [ %add149, %cond.false146 ], !dbg !17009
  br label %cond.end152, !dbg !17009

cond.end152:                                      ; preds = %cond.end150, %cond.true140
  %cond153 = phi float [ 0.000000e+00, %cond.true140 ], [ %cond151, %cond.end150 ], !dbg !17009
  %conv154 = fptoui float %cond153 to i8, !dbg !17009
  %70 = load i8*, i8** %result.addr, align 8, !dbg !17010
  %arrayidx155 = getelementptr inbounds i8, i8* %70, i64 3, !dbg !17010
  store i8 %conv154, i8* %arrayidx155, align 1, !dbg !17011
  br label %if.end

if.end:                                           ; preds = %cond.end152, %cond.end66
  ret void, !dbg !17012
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @project_bucket_offset_safe(%struct.ProjPaintState* %ps, float* %projCoSS) #0 !dbg !17013 {
entry:
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %projCoSS.addr = alloca float*, align 8
  %bucket_index = alloca i32, align 4
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !17016, metadata !DIExpression()), !dbg !17017
  store float* %projCoSS, float** %projCoSS.addr, align 8
  call void @llvm.dbg.declare(metadata float** %projCoSS.addr, metadata !17018, metadata !DIExpression()), !dbg !17019
  call void @llvm.dbg.declare(metadata i32* %bucket_index, metadata !17020, metadata !DIExpression()), !dbg !17021
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17022
  %1 = load float*, float** %projCoSS.addr, align 8, !dbg !17023
  %call = call i32 @project_bucket_offset(%struct.ProjPaintState* %0, float* %1), !dbg !17024
  store i32 %call, i32* %bucket_index, align 4, !dbg !17021
  %2 = load i32, i32* %bucket_index, align 4, !dbg !17025
  %cmp = icmp slt i32 %2, 0, !dbg !17027
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17028

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %bucket_index, align 4, !dbg !17029
  %4 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17030
  %buckets_x = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %4, i32 0, i32 36, !dbg !17031
  %5 = load i32, i32* %buckets_x, align 8, !dbg !17031
  %6 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17032
  %buckets_y = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %6, i32 0, i32 37, !dbg !17033
  %7 = load i32, i32* %buckets_y, align 4, !dbg !17033
  %mul = mul nsw i32 %5, %7, !dbg !17034
  %cmp1 = icmp sge i32 %3, %mul, !dbg !17035
  br i1 %cmp1, label %if.then, label %if.else, !dbg !17036

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !17037
  br label %return, !dbg !17037

if.else:                                          ; preds = %lor.lhs.false
  %8 = load i32, i32* %bucket_index, align 4, !dbg !17039
  store i32 %8, i32* %retval, align 4, !dbg !17041
  br label %return, !dbg !17041

return:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !17042
  ret i32 %9, !dbg !17042
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @project_bucket_offset(%struct.ProjPaintState* %ps, float* %projCoSS) #0 !dbg !17043 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %projCoSS.addr = alloca float*, align 8
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !17044, metadata !DIExpression()), !dbg !17045
  store float* %projCoSS, float** %projCoSS.addr, align 8
  call void @llvm.dbg.declare(metadata float** %projCoSS.addr, metadata !17046, metadata !DIExpression()), !dbg !17047
  %0 = load float*, float** %projCoSS.addr, align 8, !dbg !17048
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !17048
  %1 = load float, float* %arrayidx, align 4, !dbg !17048
  %2 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17049
  %screenMin = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %2, i32 0, i32 42, !dbg !17050
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %screenMin, i64 0, i64 0, !dbg !17049
  %3 = load float, float* %arrayidx1, align 8, !dbg !17049
  %sub = fsub float %1, %3, !dbg !17051
  %4 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17052
  %screen_width = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %4, i32 0, i32 44, !dbg !17053
  %5 = load float, float* %screen_width, align 8, !dbg !17053
  %div = fdiv float %sub, %5, !dbg !17054
  %6 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17055
  %buckets_x = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %6, i32 0, i32 36, !dbg !17056
  %7 = load i32, i32* %buckets_x, align 8, !dbg !17056
  %conv = sitofp i32 %7 to float, !dbg !17055
  %mul = fmul float %div, %conv, !dbg !17057
  %conv2 = fptosi float %mul to i32, !dbg !17058
  %8 = load float*, float** %projCoSS.addr, align 8, !dbg !17059
  %arrayidx3 = getelementptr inbounds float, float* %8, i64 1, !dbg !17059
  %9 = load float, float* %arrayidx3, align 4, !dbg !17059
  %10 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17060
  %screenMin4 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %10, i32 0, i32 42, !dbg !17061
  %arrayidx5 = getelementptr inbounds [2 x float], [2 x float]* %screenMin4, i64 0, i64 1, !dbg !17060
  %11 = load float, float* %arrayidx5, align 4, !dbg !17060
  %sub6 = fsub float %9, %11, !dbg !17062
  %12 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17063
  %screen_height = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %12, i32 0, i32 45, !dbg !17064
  %13 = load float, float* %screen_height, align 4, !dbg !17064
  %div7 = fdiv float %sub6, %13, !dbg !17065
  %14 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17066
  %buckets_y = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %14, i32 0, i32 37, !dbg !17067
  %15 = load i32, i32* %buckets_y, align 4, !dbg !17067
  %conv8 = sitofp i32 %15 to float, !dbg !17066
  %mul9 = fmul float %div7, %conv8, !dbg !17068
  %conv10 = fptosi float %mul9 to i32, !dbg !17069
  %16 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17070
  %buckets_x11 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %16, i32 0, i32 36, !dbg !17071
  %17 = load i32, i32* %buckets_x11, align 8, !dbg !17071
  %mul12 = mul nsw i32 %conv10, %17, !dbg !17072
  %add = add nsw i32 %conv2, %mul12, !dbg !17073
  ret i32 %add, !dbg !17074
}

; Function Attrs: noinline nounwind uwtable
define internal void @project_face_winding_init(%struct.ProjPaintState* %ps, i32 %face_index) #0 !dbg !17075 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %face_index.addr = alloca i32, align 4
  %tf = alloca %struct.MTFace*, align 8
  %winding = alloca float, align 4
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !17078, metadata !DIExpression()), !dbg !17079
  store i32 %face_index, i32* %face_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_index.addr, metadata !17080, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf, metadata !17082, metadata !DIExpression()), !dbg !17083
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17084
  %dm_mtface = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 20, !dbg !17085
  %1 = load %struct.MTFace**, %struct.MTFace*** %dm_mtface, align 8, !dbg !17085
  %2 = load i32, i32* %face_index.addr, align 4, !dbg !17086
  %idxprom = sext i32 %2 to i64, !dbg !17084
  %arrayidx = getelementptr inbounds %struct.MTFace*, %struct.MTFace** %1, i64 %idxprom, !dbg !17084
  %3 = load %struct.MTFace*, %struct.MTFace** %arrayidx, align 8, !dbg !17084
  store %struct.MTFace* %3, %struct.MTFace** %tf, align 8, !dbg !17083
  call void @llvm.dbg.declare(metadata float* %winding, metadata !17087, metadata !DIExpression()), !dbg !17088
  %4 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !17089
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %4, i32 0, i32 0, !dbg !17090
  %arrayidx1 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 0, !dbg !17089
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx1, i64 0, i64 0, !dbg !17089
  %5 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !17091
  %uv2 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %5, i32 0, i32 0, !dbg !17092
  %arrayidx3 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv2, i64 0, i64 1, !dbg !17091
  %arraydecay4 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx3, i64 0, i64 0, !dbg !17091
  %6 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !17093
  %uv5 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %6, i32 0, i32 0, !dbg !17094
  %arrayidx6 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv5, i64 0, i64 2, !dbg !17093
  %arraydecay7 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx6, i64 0, i64 0, !dbg !17093
  %call = call float @cross_tri_v2(float* %arraydecay, float* %arraydecay4, float* %arraydecay7), !dbg !17095
  store float %call, float* %winding, align 4, !dbg !17088
  %7 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17096
  %dm_mface = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %7, i32 0, i32 19, !dbg !17098
  %8 = load %struct.MFace*, %struct.MFace** %dm_mface, align 8, !dbg !17098
  %9 = load i32, i32* %face_index.addr, align 4, !dbg !17099
  %idxprom8 = sext i32 %9 to i64, !dbg !17096
  %arrayidx9 = getelementptr inbounds %struct.MFace, %struct.MFace* %8, i64 %idxprom8, !dbg !17096
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx9, i32 0, i32 3, !dbg !17100
  %10 = load i32, i32* %v4, align 4, !dbg !17100
  %tobool = icmp ne i32 %10, 0, !dbg !17096
  br i1 %tobool, label %if.then, label %if.end, !dbg !17101

if.then:                                          ; preds = %entry
  %11 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !17102
  %uv10 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %11, i32 0, i32 0, !dbg !17103
  %arrayidx11 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv10, i64 0, i64 2, !dbg !17102
  %arraydecay12 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx11, i64 0, i64 0, !dbg !17102
  %12 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !17104
  %uv13 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %12, i32 0, i32 0, !dbg !17105
  %arrayidx14 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv13, i64 0, i64 3, !dbg !17104
  %arraydecay15 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx14, i64 0, i64 0, !dbg !17104
  %13 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !17106
  %uv16 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %13, i32 0, i32 0, !dbg !17107
  %arrayidx17 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv16, i64 0, i64 0, !dbg !17106
  %arraydecay18 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx17, i64 0, i64 0, !dbg !17106
  %call19 = call float @cross_tri_v2(float* %arraydecay12, float* %arraydecay15, float* %arraydecay18), !dbg !17108
  %14 = load float, float* %winding, align 4, !dbg !17109
  %add = fadd float %14, %call19, !dbg !17109
  store float %add, float* %winding, align 4, !dbg !17109
  br label %if.end, !dbg !17110

if.end:                                           ; preds = %if.then, %entry
  %15 = load float, float* %winding, align 4, !dbg !17111
  %cmp = fcmp ogt float %15, 0.000000e+00, !dbg !17113
  br i1 %cmp, label %if.then20, label %if.end24, !dbg !17114

if.then20:                                        ; preds = %if.end
  %16 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17115
  %faceWindingFlags = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %16, i32 0, i32 32, !dbg !17116
  %17 = load i8*, i8** %faceWindingFlags, align 8, !dbg !17116
  %18 = load i32, i32* %face_index.addr, align 4, !dbg !17117
  %idxprom21 = sext i32 %18 to i64, !dbg !17115
  %arrayidx22 = getelementptr inbounds i8, i8* %17, i64 %idxprom21, !dbg !17115
  %19 = load i8, i8* %arrayidx22, align 1, !dbg !17118
  %conv = zext i8 %19 to i32, !dbg !17118
  %or = or i32 %conv, 2, !dbg !17118
  %conv23 = trunc i32 %or to i8, !dbg !17118
  store i8 %conv23, i8* %arrayidx22, align 1, !dbg !17118
  br label %if.end24, !dbg !17115

if.end24:                                         ; preds = %if.then20, %if.end
  %20 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17119
  %faceWindingFlags25 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %20, i32 0, i32 32, !dbg !17120
  %21 = load i8*, i8** %faceWindingFlags25, align 8, !dbg !17120
  %22 = load i32, i32* %face_index.addr, align 4, !dbg !17121
  %idxprom26 = sext i32 %22 to i64, !dbg !17119
  %arrayidx27 = getelementptr inbounds i8, i8* %21, i64 %idxprom26, !dbg !17119
  %23 = load i8, i8* %arrayidx27, align 1, !dbg !17122
  %conv28 = zext i8 %23 to i32, !dbg !17122
  %or29 = or i32 %conv28, 1, !dbg !17122
  %conv30 = trunc i32 %or29 to i8, !dbg !17122
  store i8 %conv30, i8* %arrayidx27, align 1, !dbg !17122
  ret void, !dbg !17123
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @check_seam(%struct.ProjPaintState* %ps, i32 %orig_face, i32 %orig_i1_fidx, i32 %orig_i2_fidx, i32* %other_face, i32* %orig_fidx) #0 !dbg !17124 {
entry:
  %retval = alloca i8, align 1
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %orig_face.addr = alloca i32, align 4
  %orig_i1_fidx.addr = alloca i32, align 4
  %orig_i2_fidx.addr = alloca i32, align 4
  %other_face.addr = alloca i32*, align 8
  %orig_fidx.addr = alloca i32*, align 8
  %node = alloca %struct.LinkNode*, align 8
  %face_index = alloca i32, align 4
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %i1_fidx = alloca i32, align 4
  %i2_fidx = alloca i32, align 4
  %mf = alloca %struct.MFace*, align 8
  %tf = alloca %struct.MTFace*, align 8
  %orig_mf = alloca %struct.MFace*, align 8
  %orig_tf = alloca %struct.MTFace*, align 8
  %tpage = alloca %struct.Image*, align 8
  %orig_tpage = alloca %struct.Image*, align 8
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !17127, metadata !DIExpression()), !dbg !17128
  store i32 %orig_face, i32* %orig_face.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %orig_face.addr, metadata !17129, metadata !DIExpression()), !dbg !17130
  store i32 %orig_i1_fidx, i32* %orig_i1_fidx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %orig_i1_fidx.addr, metadata !17131, metadata !DIExpression()), !dbg !17132
  store i32 %orig_i2_fidx, i32* %orig_i2_fidx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %orig_i2_fidx.addr, metadata !17133, metadata !DIExpression()), !dbg !17134
  store i32* %other_face, i32** %other_face.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %other_face.addr, metadata !17135, metadata !DIExpression()), !dbg !17136
  store i32* %orig_fidx, i32** %orig_fidx.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %orig_fidx.addr, metadata !17137, metadata !DIExpression()), !dbg !17138
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %node, metadata !17139, metadata !DIExpression()), !dbg !17140
  call void @llvm.dbg.declare(metadata i32* %face_index, metadata !17141, metadata !DIExpression()), !dbg !17142
  call void @llvm.dbg.declare(metadata i32* %i1, metadata !17143, metadata !DIExpression()), !dbg !17144
  call void @llvm.dbg.declare(metadata i32* %i2, metadata !17145, metadata !DIExpression()), !dbg !17146
  call void @llvm.dbg.declare(metadata i32* %i1_fidx, metadata !17147, metadata !DIExpression()), !dbg !17148
  store i32 -1, i32* %i1_fidx, align 4, !dbg !17148
  call void @llvm.dbg.declare(metadata i32* %i2_fidx, metadata !17149, metadata !DIExpression()), !dbg !17150
  store i32 -1, i32* %i2_fidx, align 4, !dbg !17150
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !17151, metadata !DIExpression()), !dbg !17152
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf, metadata !17153, metadata !DIExpression()), !dbg !17154
  call void @llvm.dbg.declare(metadata %struct.MFace** %orig_mf, metadata !17155, metadata !DIExpression()), !dbg !17156
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17157
  %dm_mface = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 19, !dbg !17158
  %1 = load %struct.MFace*, %struct.MFace** %dm_mface, align 8, !dbg !17158
  %2 = load i32, i32* %orig_face.addr, align 4, !dbg !17159
  %idx.ext = sext i32 %2 to i64, !dbg !17160
  %add.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %1, i64 %idx.ext, !dbg !17160
  store %struct.MFace* %add.ptr, %struct.MFace** %orig_mf, align 8, !dbg !17156
  call void @llvm.dbg.declare(metadata %struct.MTFace** %orig_tf, metadata !17161, metadata !DIExpression()), !dbg !17162
  %3 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17163
  %dm_mtface = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %3, i32 0, i32 20, !dbg !17164
  %4 = load %struct.MTFace**, %struct.MTFace*** %dm_mtface, align 8, !dbg !17164
  %5 = load i32, i32* %orig_face.addr, align 4, !dbg !17165
  %idxprom = sext i32 %5 to i64, !dbg !17163
  %arrayidx = getelementptr inbounds %struct.MTFace*, %struct.MTFace** %4, i64 %idxprom, !dbg !17163
  %6 = load %struct.MTFace*, %struct.MTFace** %arrayidx, align 8, !dbg !17163
  store %struct.MTFace* %6, %struct.MTFace** %orig_tf, align 8, !dbg !17162
  %7 = load %struct.MFace*, %struct.MFace** %orig_mf, align 8, !dbg !17166
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %7, i32 0, i32 0, !dbg !17167
  %8 = load i32, i32* %orig_i1_fidx.addr, align 4, !dbg !17168
  %idx.ext1 = sext i32 %8 to i64, !dbg !17169
  %add.ptr2 = getelementptr inbounds i32, i32* %v1, i64 %idx.ext1, !dbg !17169
  %9 = load i32, i32* %add.ptr2, align 4, !dbg !17170
  store i32 %9, i32* %i1, align 4, !dbg !17171
  %10 = load %struct.MFace*, %struct.MFace** %orig_mf, align 8, !dbg !17172
  %v13 = getelementptr inbounds %struct.MFace, %struct.MFace* %10, i32 0, i32 0, !dbg !17173
  %11 = load i32, i32* %orig_i2_fidx.addr, align 4, !dbg !17174
  %idx.ext4 = sext i32 %11 to i64, !dbg !17175
  %add.ptr5 = getelementptr inbounds i32, i32* %v13, i64 %idx.ext4, !dbg !17175
  %12 = load i32, i32* %add.ptr5, align 4, !dbg !17176
  store i32 %12, i32* %i2, align 4, !dbg !17177
  %13 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17178
  %vertFaces = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %13, i32 0, i32 34, !dbg !17180
  %14 = load %struct.LinkNode**, %struct.LinkNode*** %vertFaces, align 8, !dbg !17180
  %15 = load i32, i32* %i1, align 4, !dbg !17181
  %idxprom6 = zext i32 %15 to i64, !dbg !17178
  %arrayidx7 = getelementptr inbounds %struct.LinkNode*, %struct.LinkNode** %14, i64 %idxprom6, !dbg !17178
  %16 = load %struct.LinkNode*, %struct.LinkNode** %arrayidx7, align 8, !dbg !17178
  store %struct.LinkNode* %16, %struct.LinkNode** %node, align 8, !dbg !17182
  br label %for.cond, !dbg !17183

for.cond:                                         ; preds = %for.inc, %entry
  %17 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !17184
  %tobool = icmp ne %struct.LinkNode* %17, null, !dbg !17186
  br i1 %tobool, label %for.body, label %for.end, !dbg !17186

for.body:                                         ; preds = %for.cond
  %18 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !17187
  %link = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %18, i32 0, i32 1, !dbg !17187
  %19 = load i8*, i8** %link, align 8, !dbg !17187
  %20 = ptrtoint i8* %19 to i64, !dbg !17187
  %conv = trunc i64 %20 to i32, !dbg !17187
  store i32 %conv, i32* %face_index, align 4, !dbg !17189
  %21 = load i32, i32* %face_index, align 4, !dbg !17190
  %22 = load i32, i32* %orig_face.addr, align 4, !dbg !17192
  %cmp = icmp ne i32 %21, %22, !dbg !17193
  br i1 %cmp, label %if.then, label %if.end122, !dbg !17194

if.then:                                          ; preds = %for.body
  %23 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17195
  %dm_mface9 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %23, i32 0, i32 19, !dbg !17197
  %24 = load %struct.MFace*, %struct.MFace** %dm_mface9, align 8, !dbg !17197
  %25 = load i32, i32* %face_index, align 4, !dbg !17198
  %idx.ext10 = sext i32 %25 to i64, !dbg !17199
  %add.ptr11 = getelementptr inbounds %struct.MFace, %struct.MFace* %24, i64 %idx.ext10, !dbg !17199
  store %struct.MFace* %add.ptr11, %struct.MFace** %mf, align 8, !dbg !17200
  %26 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !17201
  %v112 = getelementptr inbounds %struct.MFace, %struct.MFace* %26, i32 0, i32 0, !dbg !17201
  %27 = load i32, i32* %v112, align 4, !dbg !17201
  %28 = load i32, i32* %i1, align 4, !dbg !17201
  %cmp13 = icmp eq i32 %27, %28, !dbg !17201
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !17201

cond.true:                                        ; preds = %if.then
  br label %cond.end30, !dbg !17201

cond.false:                                       ; preds = %if.then
  %29 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !17201
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %29, i32 0, i32 1, !dbg !17201
  %30 = load i32, i32* %v2, align 4, !dbg !17201
  %31 = load i32, i32* %i1, align 4, !dbg !17201
  %cmp15 = icmp eq i32 %30, %31, !dbg !17201
  br i1 %cmp15, label %cond.true17, label %cond.false18, !dbg !17201

cond.true17:                                      ; preds = %cond.false
  br label %cond.end28, !dbg !17201

cond.false18:                                     ; preds = %cond.false
  %32 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !17201
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %32, i32 0, i32 2, !dbg !17201
  %33 = load i32, i32* %v3, align 4, !dbg !17201
  %34 = load i32, i32* %i1, align 4, !dbg !17201
  %cmp19 = icmp eq i32 %33, %34, !dbg !17201
  br i1 %cmp19, label %cond.true21, label %cond.false22, !dbg !17201

cond.true21:                                      ; preds = %cond.false18
  br label %cond.end, !dbg !17201

cond.false22:                                     ; preds = %cond.false18
  %35 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !17201
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %35, i32 0, i32 3, !dbg !17201
  %36 = load i32, i32* %v4, align 4, !dbg !17201
  %tobool23 = icmp ne i32 %36, 0, !dbg !17201
  br i1 %tobool23, label %land.rhs, label %land.end, !dbg !17201

land.rhs:                                         ; preds = %cond.false22
  %37 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !17201
  %v424 = getelementptr inbounds %struct.MFace, %struct.MFace* %37, i32 0, i32 3, !dbg !17201
  %38 = load i32, i32* %v424, align 4, !dbg !17201
  %39 = load i32, i32* %i1, align 4, !dbg !17201
  %cmp25 = icmp eq i32 %38, %39, !dbg !17201
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.false22
  %40 = phi i1 [ false, %cond.false22 ], [ %cmp25, %land.rhs ], !dbg !17202
  %41 = zext i1 %40 to i64, !dbg !17201
  %cond = select i1 %40, i32 3, i32 -1, !dbg !17201
  br label %cond.end, !dbg !17201

cond.end:                                         ; preds = %land.end, %cond.true21
  %cond27 = phi i32 [ 2, %cond.true21 ], [ %cond, %land.end ], !dbg !17201
  br label %cond.end28, !dbg !17201

cond.end28:                                       ; preds = %cond.end, %cond.true17
  %cond29 = phi i32 [ 1, %cond.true17 ], [ %cond27, %cond.end ], !dbg !17201
  br label %cond.end30, !dbg !17201

cond.end30:                                       ; preds = %cond.end28, %cond.true
  %cond31 = phi i32 [ 0, %cond.true ], [ %cond29, %cond.end28 ], !dbg !17201
  store i32 %cond31, i32* %i1_fidx, align 4, !dbg !17203
  %42 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !17204
  %v132 = getelementptr inbounds %struct.MFace, %struct.MFace* %42, i32 0, i32 0, !dbg !17204
  %43 = load i32, i32* %v132, align 4, !dbg !17204
  %44 = load i32, i32* %i2, align 4, !dbg !17204
  %cmp33 = icmp eq i32 %43, %44, !dbg !17204
  br i1 %cmp33, label %cond.true35, label %cond.false36, !dbg !17204

cond.true35:                                      ; preds = %cond.end30
  br label %cond.end59, !dbg !17204

cond.false36:                                     ; preds = %cond.end30
  %45 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !17204
  %v237 = getelementptr inbounds %struct.MFace, %struct.MFace* %45, i32 0, i32 1, !dbg !17204
  %46 = load i32, i32* %v237, align 4, !dbg !17204
  %47 = load i32, i32* %i2, align 4, !dbg !17204
  %cmp38 = icmp eq i32 %46, %47, !dbg !17204
  br i1 %cmp38, label %cond.true40, label %cond.false41, !dbg !17204

cond.true40:                                      ; preds = %cond.false36
  br label %cond.end57, !dbg !17204

cond.false41:                                     ; preds = %cond.false36
  %48 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !17204
  %v342 = getelementptr inbounds %struct.MFace, %struct.MFace* %48, i32 0, i32 2, !dbg !17204
  %49 = load i32, i32* %v342, align 4, !dbg !17204
  %50 = load i32, i32* %i2, align 4, !dbg !17204
  %cmp43 = icmp eq i32 %49, %50, !dbg !17204
  br i1 %cmp43, label %cond.true45, label %cond.false46, !dbg !17204

cond.true45:                                      ; preds = %cond.false41
  br label %cond.end55, !dbg !17204

cond.false46:                                     ; preds = %cond.false41
  %51 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !17204
  %v447 = getelementptr inbounds %struct.MFace, %struct.MFace* %51, i32 0, i32 3, !dbg !17204
  %52 = load i32, i32* %v447, align 4, !dbg !17204
  %tobool48 = icmp ne i32 %52, 0, !dbg !17204
  br i1 %tobool48, label %land.rhs49, label %land.end53, !dbg !17204

land.rhs49:                                       ; preds = %cond.false46
  %53 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !17204
  %v450 = getelementptr inbounds %struct.MFace, %struct.MFace* %53, i32 0, i32 3, !dbg !17204
  %54 = load i32, i32* %v450, align 4, !dbg !17204
  %55 = load i32, i32* %i2, align 4, !dbg !17204
  %cmp51 = icmp eq i32 %54, %55, !dbg !17204
  br label %land.end53

land.end53:                                       ; preds = %land.rhs49, %cond.false46
  %56 = phi i1 [ false, %cond.false46 ], [ %cmp51, %land.rhs49 ], !dbg !17202
  %57 = zext i1 %56 to i64, !dbg !17204
  %cond54 = select i1 %56, i32 3, i32 -1, !dbg !17204
  br label %cond.end55, !dbg !17204

cond.end55:                                       ; preds = %land.end53, %cond.true45
  %cond56 = phi i32 [ 2, %cond.true45 ], [ %cond54, %land.end53 ], !dbg !17204
  br label %cond.end57, !dbg !17204

cond.end57:                                       ; preds = %cond.end55, %cond.true40
  %cond58 = phi i32 [ 1, %cond.true40 ], [ %cond56, %cond.end55 ], !dbg !17204
  br label %cond.end59, !dbg !17204

cond.end59:                                       ; preds = %cond.end57, %cond.true35
  %cond60 = phi i32 [ 0, %cond.true35 ], [ %cond58, %cond.end57 ], !dbg !17204
  store i32 %cond60, i32* %i2_fidx, align 4, !dbg !17205
  %58 = load i32, i32* %i2_fidx, align 4, !dbg !17206
  %cmp61 = icmp ne i32 %58, -1, !dbg !17208
  br i1 %cmp61, label %if.then63, label %if.end121, !dbg !17209

if.then63:                                        ; preds = %cond.end59
  call void @llvm.dbg.declare(metadata %struct.Image** %tpage, metadata !17210, metadata !DIExpression()), !dbg !17212
  %59 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17213
  %60 = load i32, i32* %face_index, align 4, !dbg !17214
  %call = call %struct.Image* @project_paint_face_paint_image(%struct.ProjPaintState* %59, i32 %60), !dbg !17215
  store %struct.Image* %call, %struct.Image** %tpage, align 8, !dbg !17212
  call void @llvm.dbg.declare(metadata %struct.Image** %orig_tpage, metadata !17216, metadata !DIExpression()), !dbg !17217
  %61 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17218
  %62 = load i32, i32* %orig_face.addr, align 4, !dbg !17219
  %call64 = call %struct.Image* @project_paint_face_paint_image(%struct.ProjPaintState* %61, i32 %62), !dbg !17220
  store %struct.Image* %call64, %struct.Image** %orig_tpage, align 8, !dbg !17217
  %63 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17221
  %dm_mtface65 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %63, i32 0, i32 20, !dbg !17222
  %64 = load %struct.MTFace**, %struct.MTFace*** %dm_mtface65, align 8, !dbg !17222
  %65 = load i32, i32* %face_index, align 4, !dbg !17223
  %idxprom66 = sext i32 %65 to i64, !dbg !17221
  %arrayidx67 = getelementptr inbounds %struct.MTFace*, %struct.MTFace** %64, i64 %idxprom66, !dbg !17221
  %66 = load %struct.MTFace*, %struct.MTFace** %arrayidx67, align 8, !dbg !17221
  store %struct.MTFace* %66, %struct.MTFace** %tf, align 8, !dbg !17224
  %67 = load i32, i32* %face_index, align 4, !dbg !17225
  %68 = load i32*, i32** %other_face.addr, align 8, !dbg !17226
  store i32 %67, i32* %68, align 4, !dbg !17227
  %69 = load i32, i32* %i1_fidx, align 4, !dbg !17228
  %70 = load i32, i32* %i2_fidx, align 4, !dbg !17229
  %cmp68 = icmp slt i32 %69, %70, !dbg !17230
  br i1 %cmp68, label %land.lhs.true, label %cond.false73, !dbg !17231

land.lhs.true:                                    ; preds = %if.then63
  %71 = load i32, i32* %i2_fidx, align 4, !dbg !17232
  %72 = load i32, i32* %i1_fidx, align 4, !dbg !17233
  %sub = sub nsw i32 %71, %72, !dbg !17234
  %cmp70 = icmp eq i32 %sub, 1, !dbg !17235
  br i1 %cmp70, label %cond.true72, label %cond.false73, !dbg !17236

cond.true72:                                      ; preds = %land.lhs.true
  %73 = load i32, i32* %i1_fidx, align 4, !dbg !17237
  br label %cond.end74, !dbg !17236

cond.false73:                                     ; preds = %land.lhs.true, %if.then63
  %74 = load i32, i32* %i2_fidx, align 4, !dbg !17238
  br label %cond.end74, !dbg !17236

cond.end74:                                       ; preds = %cond.false73, %cond.true72
  %cond75 = phi i32 [ %73, %cond.true72 ], [ %74, %cond.false73 ], !dbg !17236
  %75 = load i32*, i32** %orig_fidx.addr, align 8, !dbg !17239
  store i32 %cond75, i32* %75, align 4, !dbg !17240
  %76 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17241
  %faceWindingFlags = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %76, i32 0, i32 32, !dbg !17243
  %77 = load i8*, i8** %faceWindingFlags, align 8, !dbg !17243
  %78 = load i32, i32* %face_index, align 4, !dbg !17244
  %idxprom76 = sext i32 %78 to i64, !dbg !17241
  %arrayidx77 = getelementptr inbounds i8, i8* %77, i64 %idxprom76, !dbg !17241
  %79 = load i8, i8* %arrayidx77, align 1, !dbg !17241
  %conv78 = zext i8 %79 to i32, !dbg !17241
  %and = and i32 %conv78, 1, !dbg !17245
  %cmp79 = icmp eq i32 %and, 0, !dbg !17246
  br i1 %cmp79, label %if.then81, label %if.end, !dbg !17247

if.then81:                                        ; preds = %cond.end74
  %80 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17248
  %81 = load i32, i32* %face_index, align 4, !dbg !17249
  call void @project_face_winding_init(%struct.ProjPaintState* %80, i32 %81), !dbg !17250
  br label %if.end, !dbg !17250

if.end:                                           ; preds = %if.then81, %cond.end74
  %82 = load %struct.Image*, %struct.Image** %orig_tpage, align 8, !dbg !17251
  %83 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !17253
  %cmp82 = icmp eq %struct.Image* %82, %83, !dbg !17254
  br i1 %cmp82, label %land.lhs.true84, label %if.else, !dbg !17255

land.lhs.true84:                                  ; preds = %if.end
  %84 = load %struct.MTFace*, %struct.MTFace** %orig_tf, align 8, !dbg !17256
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %84, i32 0, i32 0, !dbg !17257
  %85 = load i32, i32* %orig_i1_fidx.addr, align 4, !dbg !17258
  %idxprom85 = sext i32 %85 to i64, !dbg !17256
  %arrayidx86 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 %idxprom85, !dbg !17256
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx86, i64 0, i64 0, !dbg !17256
  %86 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !17259
  %uv87 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %86, i32 0, i32 0, !dbg !17260
  %87 = load i32, i32* %i1_fidx, align 4, !dbg !17261
  %idxprom88 = sext i32 %87 to i64, !dbg !17259
  %arrayidx89 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv87, i64 0, i64 %idxprom88, !dbg !17259
  %arraydecay90 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx89, i64 0, i64 0, !dbg !17259
  %call91 = call zeroext i8 @cmp_uv(float* %arraydecay, float* %arraydecay90), !dbg !17262
  %conv92 = zext i8 %call91 to i32, !dbg !17262
  %tobool93 = icmp ne i32 %conv92, 0, !dbg !17262
  br i1 %tobool93, label %land.lhs.true94, label %if.else, !dbg !17263

land.lhs.true94:                                  ; preds = %land.lhs.true84
  %88 = load %struct.MTFace*, %struct.MTFace** %orig_tf, align 8, !dbg !17264
  %uv95 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %88, i32 0, i32 0, !dbg !17265
  %89 = load i32, i32* %orig_i2_fidx.addr, align 4, !dbg !17266
  %idxprom96 = sext i32 %89 to i64, !dbg !17264
  %arrayidx97 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv95, i64 0, i64 %idxprom96, !dbg !17264
  %arraydecay98 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx97, i64 0, i64 0, !dbg !17264
  %90 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !17267
  %uv99 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %90, i32 0, i32 0, !dbg !17268
  %91 = load i32, i32* %i2_fidx, align 4, !dbg !17269
  %idxprom100 = sext i32 %91 to i64, !dbg !17267
  %arrayidx101 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv99, i64 0, i64 %idxprom100, !dbg !17267
  %arraydecay102 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx101, i64 0, i64 0, !dbg !17267
  %call103 = call zeroext i8 @cmp_uv(float* %arraydecay98, float* %arraydecay102), !dbg !17270
  %conv104 = zext i8 %call103 to i32, !dbg !17270
  %tobool105 = icmp ne i32 %conv104, 0, !dbg !17270
  br i1 %tobool105, label %if.then106, label %if.else, !dbg !17271

if.then106:                                       ; preds = %land.lhs.true94
  %92 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17272
  %faceWindingFlags107 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %92, i32 0, i32 32, !dbg !17275
  %93 = load i8*, i8** %faceWindingFlags107, align 8, !dbg !17275
  %94 = load i32, i32* %face_index, align 4, !dbg !17276
  %idxprom108 = sext i32 %94 to i64, !dbg !17272
  %arrayidx109 = getelementptr inbounds i8, i8* %93, i64 %idxprom108, !dbg !17272
  %95 = load i8, i8* %arrayidx109, align 1, !dbg !17272
  %conv110 = zext i8 %95 to i32, !dbg !17272
  %and111 = and i32 %conv110, 2, !dbg !17277
  %96 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !17278
  %faceWindingFlags112 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %96, i32 0, i32 32, !dbg !17279
  %97 = load i8*, i8** %faceWindingFlags112, align 8, !dbg !17279
  %98 = load i32, i32* %orig_face.addr, align 4, !dbg !17280
  %idxprom113 = sext i32 %98 to i64, !dbg !17278
  %arrayidx114 = getelementptr inbounds i8, i8* %97, i64 %idxprom113, !dbg !17278
  %99 = load i8, i8* %arrayidx114, align 1, !dbg !17278
  %conv115 = zext i8 %99 to i32, !dbg !17278
  %and116 = and i32 %conv115, 2, !dbg !17281
  %cmp117 = icmp ne i32 %and111, %and116, !dbg !17282
  br i1 %cmp117, label %if.then119, label %if.end120, !dbg !17283

if.then119:                                       ; preds = %if.then106
  store i8 1, i8* %retval, align 1, !dbg !17284
  br label %return, !dbg !17284

if.end120:                                        ; preds = %if.then106
  store i8 0, i8* %retval, align 1, !dbg !17286
  br label %return, !dbg !17286

if.else:                                          ; preds = %land.lhs.true94, %land.lhs.true84, %if.end
  store i8 1, i8* %retval, align 1, !dbg !17287
  br label %return, !dbg !17287

if.end121:                                        ; preds = %cond.end59
  br label %if.end122, !dbg !17289

if.end122:                                        ; preds = %if.end121, %for.body
  br label %for.inc, !dbg !17290

for.inc:                                          ; preds = %if.end122
  %100 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !17291
  %next = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %100, i32 0, i32 0, !dbg !17292
  %101 = load %struct.LinkNode*, %struct.LinkNode** %next, align 8, !dbg !17292
  store %struct.LinkNode* %101, %struct.LinkNode** %node, align 8, !dbg !17293
  br label %for.cond, !dbg !17294, !llvm.loop !17295

for.end:                                          ; preds = %for.cond
  %102 = load i32*, i32** %other_face.addr, align 8, !dbg !17297
  store i32 -1, i32* %102, align 4, !dbg !17298
  store i8 1, i8* %retval, align 1, !dbg !17299
  br label %return, !dbg !17299

return:                                           ; preds = %for.end, %if.else, %if.end120, %if.then119
  %103 = load i8, i8* %retval, align 1, !dbg !17300
  ret i8 %103, !dbg !17300
}

; Function Attrs: noinline nounwind uwtable
define internal float @cross_tri_v2(float* %v1, float* %v2, float* %v3) #0 !dbg !17301 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !17302, metadata !DIExpression()), !dbg !17303
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !17304, metadata !DIExpression()), !dbg !17305
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !17306, metadata !DIExpression()), !dbg !17307
  %0 = load float*, float** %v1.addr, align 8, !dbg !17308
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !17308
  %1 = load float, float* %arrayidx, align 4, !dbg !17308
  %2 = load float*, float** %v2.addr, align 8, !dbg !17309
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !17309
  %3 = load float, float* %arrayidx1, align 4, !dbg !17309
  %sub = fsub float %1, %3, !dbg !17310
  %4 = load float*, float** %v2.addr, align 8, !dbg !17311
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !17311
  %5 = load float, float* %arrayidx2, align 4, !dbg !17311
  %6 = load float*, float** %v3.addr, align 8, !dbg !17312
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !17312
  %7 = load float, float* %arrayidx3, align 4, !dbg !17312
  %sub4 = fsub float %5, %7, !dbg !17313
  %mul = fmul float %sub, %sub4, !dbg !17314
  %8 = load float*, float** %v1.addr, align 8, !dbg !17315
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 1, !dbg !17315
  %9 = load float, float* %arrayidx5, align 4, !dbg !17315
  %10 = load float*, float** %v2.addr, align 8, !dbg !17316
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 1, !dbg !17316
  %11 = load float, float* %arrayidx6, align 4, !dbg !17316
  %sub7 = fsub float %9, %11, !dbg !17317
  %12 = load float*, float** %v3.addr, align 8, !dbg !17318
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 0, !dbg !17318
  %13 = load float, float* %arrayidx8, align 4, !dbg !17318
  %14 = load float*, float** %v2.addr, align 8, !dbg !17319
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 0, !dbg !17319
  %15 = load float, float* %arrayidx9, align 4, !dbg !17319
  %sub10 = fsub float %13, %15, !dbg !17320
  %mul11 = fmul float %sub7, %sub10, !dbg !17321
  %add = fadd float %mul, %mul11, !dbg !17322
  ret float %add, !dbg !17323
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @cmp_uv(float* %vec2a, float* %vec2b) #0 !dbg !17324 {
entry:
  %vec2a.addr = alloca float*, align 8
  %vec2b.addr = alloca float*, align 8
  %xa = alloca float, align 4
  %ya = alloca float, align 4
  %xb = alloca float, align 4
  %yb = alloca float, align 4
  store float* %vec2a, float** %vec2a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec2a.addr, metadata !17327, metadata !DIExpression()), !dbg !17328
  store float* %vec2b, float** %vec2b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec2b.addr, metadata !17329, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.declare(metadata float* %xa, metadata !17331, metadata !DIExpression()), !dbg !17332
  %0 = load float*, float** %vec2a.addr, align 8, !dbg !17333
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !17333
  %1 = load float, float* %arrayidx, align 4, !dbg !17333
  %call = call float @fmodf(float %1, float 1.000000e+00) #5, !dbg !17334
  store float %call, float* %xa, align 4, !dbg !17332
  call void @llvm.dbg.declare(metadata float* %ya, metadata !17335, metadata !DIExpression()), !dbg !17336
  %2 = load float*, float** %vec2a.addr, align 8, !dbg !17337
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !17337
  %3 = load float, float* %arrayidx1, align 4, !dbg !17337
  %call2 = call float @fmodf(float %3, float 1.000000e+00) #5, !dbg !17338
  store float %call2, float* %ya, align 4, !dbg !17336
  call void @llvm.dbg.declare(metadata float* %xb, metadata !17339, metadata !DIExpression()), !dbg !17340
  %4 = load float*, float** %vec2b.addr, align 8, !dbg !17341
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 0, !dbg !17341
  %5 = load float, float* %arrayidx3, align 4, !dbg !17341
  %call4 = call float @fmodf(float %5, float 1.000000e+00) #5, !dbg !17342
  store float %call4, float* %xb, align 4, !dbg !17340
  call void @llvm.dbg.declare(metadata float* %yb, metadata !17343, metadata !DIExpression()), !dbg !17344
  %6 = load float*, float** %vec2b.addr, align 8, !dbg !17345
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 1, !dbg !17345
  %7 = load float, float* %arrayidx5, align 4, !dbg !17345
  %call6 = call float @fmodf(float %7, float 1.000000e+00) #5, !dbg !17346
  store float %call6, float* %yb, align 4, !dbg !17344
  %8 = load float, float* %xa, align 4, !dbg !17347
  %cmp = fcmp olt float %8, 0.000000e+00, !dbg !17349
  br i1 %cmp, label %if.then, label %if.end, !dbg !17350

if.then:                                          ; preds = %entry
  %9 = load float, float* %xa, align 4, !dbg !17351
  %add = fadd float %9, 1.000000e+00, !dbg !17351
  store float %add, float* %xa, align 4, !dbg !17351
  br label %if.end, !dbg !17352

if.end:                                           ; preds = %if.then, %entry
  %10 = load float, float* %ya, align 4, !dbg !17353
  %cmp7 = fcmp olt float %10, 0.000000e+00, !dbg !17355
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !17356

if.then8:                                         ; preds = %if.end
  %11 = load float, float* %ya, align 4, !dbg !17357
  %add9 = fadd float %11, 1.000000e+00, !dbg !17357
  store float %add9, float* %ya, align 4, !dbg !17357
  br label %if.end10, !dbg !17358

if.end10:                                         ; preds = %if.then8, %if.end
  %12 = load float, float* %xb, align 4, !dbg !17359
  %cmp11 = fcmp olt float %12, 0.000000e+00, !dbg !17361
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !17362

if.then12:                                        ; preds = %if.end10
  %13 = load float, float* %xb, align 4, !dbg !17363
  %add13 = fadd float %13, 1.000000e+00, !dbg !17363
  store float %add13, float* %xb, align 4, !dbg !17363
  br label %if.end14, !dbg !17364

if.end14:                                         ; preds = %if.then12, %if.end10
  %14 = load float, float* %yb, align 4, !dbg !17365
  %cmp15 = fcmp olt float %14, 0.000000e+00, !dbg !17367
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !17368

if.then16:                                        ; preds = %if.end14
  %15 = load float, float* %yb, align 4, !dbg !17369
  %add17 = fadd float %15, 1.000000e+00, !dbg !17369
  store float %add17, float* %yb, align 4, !dbg !17369
  br label %if.end18, !dbg !17370

if.end18:                                         ; preds = %if.then16, %if.end14
  %16 = load float, float* %xa, align 4, !dbg !17371
  %17 = load float, float* %xb, align 4, !dbg !17372
  %sub = fsub float %16, %17, !dbg !17373
  %18 = call float @llvm.fabs.f32(float %sub), !dbg !17374
  %cmp19 = fcmp olt float %18, 0x3F489374C0000000, !dbg !17375
  br i1 %cmp19, label %land.rhs, label %land.end, !dbg !17376

land.rhs:                                         ; preds = %if.end18
  %19 = load float, float* %ya, align 4, !dbg !17377
  %20 = load float, float* %yb, align 4, !dbg !17378
  %sub20 = fsub float %19, %20, !dbg !17379
  %21 = call float @llvm.fabs.f32(float %sub20), !dbg !17380
  %cmp21 = fcmp olt float %21, 0x3F489374C0000000, !dbg !17381
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end18
  %22 = phi i1 [ false, %if.end18 ], [ %cmp21, %land.rhs ], !dbg !17382
  %23 = zext i1 %22 to i64, !dbg !17383
  %cond = select i1 %22, i32 1, i32 0, !dbg !17383
  %conv = trunc i32 %cond to i8, !dbg !17383
  ret i8 %conv, !dbg !17384
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v2(float* %n) #0 !dbg !17385 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !17386, metadata !DIExpression()), !dbg !17387
  %0 = load float*, float** %n.addr, align 8, !dbg !17388
  %1 = load float*, float** %n.addr, align 8, !dbg !17389
  %call = call float @normalize_v2_v2(float* %0, float* %1), !dbg !17390
  ret float %call, !dbg !17391
}

; Function Attrs: noinline nounwind uwtable
define internal float @shell_v2v2_mid_normalized_to_dist(float* %a, float* %b) #0 !dbg !17392 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %angle_cos = alloca float, align 4
  %ab = alloca [2 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !17393, metadata !DIExpression()), !dbg !17394
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !17395, metadata !DIExpression()), !dbg !17396
  call void @llvm.dbg.declare(metadata float* %angle_cos, metadata !17397, metadata !DIExpression()), !dbg !17398
  call void @llvm.dbg.declare(metadata [2 x float]* %ab, metadata !17399, metadata !DIExpression()), !dbg !17400
  %0 = load float*, float** %a.addr, align 8, !dbg !17401
  %1 = load float*, float** %b.addr, align 8, !dbg !17402
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %ab, i64 0, i64 0, !dbg !17403
  %2 = load float*, float** %a.addr, align 8, !dbg !17404
  %3 = load float*, float** %b.addr, align 8, !dbg !17405
  call void @add_v2_v2v2(float* %arraydecay, float* %2, float* %3), !dbg !17406
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %ab, i64 0, i64 0, !dbg !17407
  %call = call float @normalize_v2(float* %arraydecay1), !dbg !17408
  %cmp = fcmp une float %call, 0.000000e+00, !dbg !17409
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !17410

cond.true:                                        ; preds = %entry
  %4 = load float*, float** %a.addr, align 8, !dbg !17411
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %ab, i64 0, i64 0, !dbg !17412
  %call3 = call float @dot_v2v2(float* %4, float* %arraydecay2), !dbg !17413
  %5 = call float @llvm.fabs.f32(float %call3), !dbg !17414
  br label %cond.end, !dbg !17410

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17410

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %5, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !17410
  store float %cond, float* %angle_cos, align 4, !dbg !17415
  %6 = load float, float* %angle_cos, align 4, !dbg !17416
  %cmp4 = fcmp olt float %6, 0x3E45798EE0000000, !dbg !17416
  br i1 %cmp4, label %cond.true5, label %cond.false6, !dbg !17417

cond.true5:                                       ; preds = %cond.end
  br label %cond.end7, !dbg !17417

cond.false6:                                      ; preds = %cond.end
  %7 = load float, float* %angle_cos, align 4, !dbg !17418
  %div = fdiv float 1.000000e+00, %7, !dbg !17419
  br label %cond.end7, !dbg !17417

cond.end7:                                        ; preds = %cond.false6, %cond.true5
  %cond8 = phi float [ 1.000000e+00, %cond.true5 ], [ %div, %cond.false6 ], !dbg !17417
  ret float %cond8, !dbg !17420
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v2_fl(float* %r, float %f) #0 !dbg !17421 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !17422, metadata !DIExpression()), !dbg !17423
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !17424, metadata !DIExpression()), !dbg !17425
  %0 = load float, float* %f.addr, align 4, !dbg !17426
  %1 = load float*, float** %r.addr, align 8, !dbg !17427
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !17427
  %2 = load float, float* %arrayidx, align 4, !dbg !17428
  %mul = fmul float %2, %0, !dbg !17428
  store float %mul, float* %arrayidx, align 4, !dbg !17428
  %3 = load float, float* %f.addr, align 4, !dbg !17429
  %4 = load float*, float** %r.addr, align 8, !dbg !17430
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !17430
  %5 = load float, float* %arrayidx1, align 4, !dbg !17431
  %mul2 = fmul float %5, %3, !dbg !17431
  store float %mul2, float* %arrayidx1, align 4, !dbg !17431
  ret void, !dbg !17432
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !17433 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !17434, metadata !DIExpression()), !dbg !17435
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !17436, metadata !DIExpression()), !dbg !17437
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !17438, metadata !DIExpression()), !dbg !17439
  %0 = load float*, float** %a.addr, align 8, !dbg !17440
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !17440
  %1 = load float, float* %arrayidx, align 4, !dbg !17440
  %2 = load float*, float** %b.addr, align 8, !dbg !17441
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !17441
  %3 = load float, float* %arrayidx1, align 4, !dbg !17441
  %add = fadd float %1, %3, !dbg !17442
  %4 = load float*, float** %r.addr, align 8, !dbg !17443
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !17443
  store float %add, float* %arrayidx2, align 4, !dbg !17444
  %5 = load float*, float** %a.addr, align 8, !dbg !17445
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !17445
  %6 = load float, float* %arrayidx3, align 4, !dbg !17445
  %7 = load float*, float** %b.addr, align 8, !dbg !17446
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !17446
  %8 = load float, float* %arrayidx4, align 4, !dbg !17446
  %add5 = fadd float %6, %8, !dbg !17447
  %9 = load float*, float** %r.addr, align 8, !dbg !17448
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !17448
  store float %add5, float* %arrayidx6, align 4, !dbg !17449
  ret void, !dbg !17450
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v2_v2(float* %r, float* %a) #0 !dbg !17451 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !17452, metadata !DIExpression()), !dbg !17453
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !17454, metadata !DIExpression()), !dbg !17455
  %0 = load float*, float** %a.addr, align 8, !dbg !17456
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !17456
  %1 = load float, float* %arrayidx, align 4, !dbg !17456
  %2 = load float*, float** %r.addr, align 8, !dbg !17457
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !17457
  %3 = load float, float* %arrayidx1, align 4, !dbg !17458
  %mul = fmul float %3, %1, !dbg !17458
  store float %mul, float* %arrayidx1, align 4, !dbg !17458
  %4 = load float*, float** %a.addr, align 8, !dbg !17459
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !17459
  %5 = load float, float* %arrayidx2, align 4, !dbg !17459
  %6 = load float*, float** %r.addr, align 8, !dbg !17460
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !17460
  %7 = load float, float* %arrayidx3, align 4, !dbg !17461
  %mul4 = fmul float %7, %5, !dbg !17461
  store float %mul4, float* %arrayidx3, align 4, !dbg !17461
  ret void, !dbg !17462
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v2_v2(float* %r, float* %a) #0 !dbg !17463 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !17464, metadata !DIExpression()), !dbg !17465
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !17466, metadata !DIExpression()), !dbg !17467
  call void @llvm.dbg.declare(metadata float* %d, metadata !17468, metadata !DIExpression()), !dbg !17469
  %0 = load float*, float** %a.addr, align 8, !dbg !17470
  %1 = load float*, float** %a.addr, align 8, !dbg !17471
  %call = call float @dot_v2v2(float* %0, float* %1), !dbg !17472
  store float %call, float* %d, align 4, !dbg !17469
  %2 = load float, float* %d, align 4, !dbg !17473
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !17475
  br i1 %cmp, label %if.then, label %if.else, !dbg !17476

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !17477
  %call1 = call float @sqrtf(float %3) #5, !dbg !17479
  store float %call1, float* %d, align 4, !dbg !17480
  %4 = load float*, float** %r.addr, align 8, !dbg !17481
  %5 = load float*, float** %a.addr, align 8, !dbg !17482
  %6 = load float, float* %d, align 4, !dbg !17483
  %div = fdiv float 1.000000e+00, %6, !dbg !17484
  call void @mul_v2_v2fl(float* %4, float* %5, float %div), !dbg !17485
  br label %if.end, !dbg !17486

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !17487
  call void @zero_v2(float* %7), !dbg !17489
  store float 0.000000e+00, float* %d, align 4, !dbg !17490
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !17491
  ret float %8, !dbg !17492
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v2_v2fl(float* %r, float* %a, float %f) #0 !dbg !17493 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !17494, metadata !DIExpression()), !dbg !17495
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !17496, metadata !DIExpression()), !dbg !17497
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !17498, metadata !DIExpression()), !dbg !17499
  %0 = load float*, float** %a.addr, align 8, !dbg !17500
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !17500
  %1 = load float, float* %arrayidx, align 4, !dbg !17500
  %2 = load float, float* %f.addr, align 4, !dbg !17501
  %mul = fmul float %1, %2, !dbg !17502
  %3 = load float*, float** %r.addr, align 8, !dbg !17503
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !17503
  store float %mul, float* %arrayidx1, align 4, !dbg !17504
  %4 = load float*, float** %a.addr, align 8, !dbg !17505
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !17505
  %5 = load float, float* %arrayidx2, align 4, !dbg !17505
  %6 = load float, float* %f.addr, align 4, !dbg !17506
  %mul3 = fmul float %5, %6, !dbg !17507
  %7 = load float*, float** %r.addr, align 8, !dbg !17508
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !17508
  store float %mul3, float* %arrayidx4, align 4, !dbg !17509
  ret void, !dbg !17510
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v2(float* %r) #0 !dbg !17511 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !17512, metadata !DIExpression()), !dbg !17513
  %0 = load float*, float** %r.addr, align 8, !dbg !17514
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !17514
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !17515
  %1 = load float*, float** %r.addr, align 8, !dbg !17516
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !17516
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !17517
  ret void, !dbg !17518
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !17519 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !17520, metadata !DIExpression()), !dbg !17521
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !17522, metadata !DIExpression()), !dbg !17523
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !17524, metadata !DIExpression()), !dbg !17525
  %0 = load float*, float** %a.addr, align 8, !dbg !17526
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !17526
  %1 = load float, float* %arrayidx, align 4, !dbg !17526
  %2 = load float*, float** %b.addr, align 8, !dbg !17527
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !17527
  %3 = load float, float* %arrayidx1, align 4, !dbg !17527
  %sub = fsub float %1, %3, !dbg !17528
  %4 = load float*, float** %r.addr, align 8, !dbg !17529
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !17529
  store float %sub, float* %arrayidx2, align 4, !dbg !17530
  %5 = load float*, float** %a.addr, align 8, !dbg !17531
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !17531
  %6 = load float, float* %arrayidx3, align 4, !dbg !17531
  %7 = load float*, float** %b.addr, align 8, !dbg !17532
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !17532
  %8 = load float, float* %arrayidx4, align 4, !dbg !17532
  %sub5 = fsub float %6, %8, !dbg !17533
  %9 = load float*, float** %r.addr, align 8, !dbg !17534
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !17534
  store float %sub5, float* %arrayidx6, align 4, !dbg !17535
  %10 = load float*, float** %a.addr, align 8, !dbg !17536
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !17536
  %11 = load float, float* %arrayidx7, align 4, !dbg !17536
  %12 = load float*, float** %b.addr, align 8, !dbg !17537
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !17537
  %13 = load float, float* %arrayidx8, align 4, !dbg !17537
  %sub9 = fsub float %11, %13, !dbg !17538
  %14 = load float*, float** %r.addr, align 8, !dbg !17539
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !17539
  store float %sub9, float* %arrayidx10, align 4, !dbg !17540
  ret void, !dbg !17541
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !17542 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !17543, metadata !DIExpression()), !dbg !17544
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !17545, metadata !DIExpression()), !dbg !17546
  %0 = load float*, float** %a.addr, align 8, !dbg !17547
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !17547
  %1 = load float, float* %arrayidx, align 4, !dbg !17547
  %2 = load float*, float** %r.addr, align 8, !dbg !17548
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !17548
  %3 = load float, float* %arrayidx1, align 4, !dbg !17549
  %add = fadd float %3, %1, !dbg !17549
  store float %add, float* %arrayidx1, align 4, !dbg !17549
  %4 = load float*, float** %a.addr, align 8, !dbg !17550
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !17550
  %5 = load float, float* %arrayidx2, align 4, !dbg !17550
  %6 = load float*, float** %r.addr, align 8, !dbg !17551
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !17551
  %7 = load float, float* %arrayidx3, align 4, !dbg !17552
  %add4 = fadd float %7, %5, !dbg !17552
  store float %add4, float* %arrayidx3, align 4, !dbg !17552
  %8 = load float*, float** %a.addr, align 8, !dbg !17553
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !17553
  %9 = load float, float* %arrayidx5, align 4, !dbg !17553
  %10 = load float*, float** %r.addr, align 8, !dbg !17554
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !17554
  %11 = load float, float* %arrayidx6, align 4, !dbg !17555
  %add7 = fadd float %11, %9, !dbg !17555
  store float %add7, float* %arrayidx6, align 4, !dbg !17555
  ret void, !dbg !17556
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @line_isect_y(float* %p1, float* %p2, float %y_level, float* %x_isect) #0 !dbg !17557 {
entry:
  %retval = alloca i32, align 4
  %p1.addr = alloca float*, align 8
  %p2.addr = alloca float*, align 8
  %y_level.addr = alloca float, align 4
  %x_isect.addr = alloca float*, align 8
  %y_diff = alloca float, align 4
  store float* %p1, float** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p1.addr, metadata !17560, metadata !DIExpression()), !dbg !17561
  store float* %p2, float** %p2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p2.addr, metadata !17562, metadata !DIExpression()), !dbg !17563
  store float %y_level, float* %y_level.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y_level.addr, metadata !17564, metadata !DIExpression()), !dbg !17565
  store float* %x_isect, float** %x_isect.addr, align 8
  call void @llvm.dbg.declare(metadata float** %x_isect.addr, metadata !17566, metadata !DIExpression()), !dbg !17567
  call void @llvm.dbg.declare(metadata float* %y_diff, metadata !17568, metadata !DIExpression()), !dbg !17569
  %0 = load float, float* %y_level.addr, align 4, !dbg !17570
  %1 = load float*, float** %p1.addr, align 8, !dbg !17572
  %arrayidx = getelementptr inbounds float, float* %1, i64 1, !dbg !17572
  %2 = load float, float* %arrayidx, align 4, !dbg !17572
  %cmp = fcmp oeq float %0, %2, !dbg !17573
  br i1 %cmp, label %if.then, label %if.end, !dbg !17574

if.then:                                          ; preds = %entry
  %3 = load float*, float** %p1.addr, align 8, !dbg !17575
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !17575
  %4 = load float, float* %arrayidx1, align 4, !dbg !17575
  %5 = load float*, float** %x_isect.addr, align 8, !dbg !17577
  store float %4, float* %5, align 4, !dbg !17578
  store i32 2, i32* %retval, align 4, !dbg !17579
  br label %return, !dbg !17579

if.end:                                           ; preds = %entry
  %6 = load float, float* %y_level.addr, align 4, !dbg !17580
  %7 = load float*, float** %p2.addr, align 8, !dbg !17582
  %arrayidx2 = getelementptr inbounds float, float* %7, i64 1, !dbg !17582
  %8 = load float, float* %arrayidx2, align 4, !dbg !17582
  %cmp3 = fcmp oeq float %6, %8, !dbg !17583
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !17584

if.then4:                                         ; preds = %if.end
  %9 = load float*, float** %p2.addr, align 8, !dbg !17585
  %arrayidx5 = getelementptr inbounds float, float* %9, i64 0, !dbg !17585
  %10 = load float, float* %arrayidx5, align 4, !dbg !17585
  %11 = load float*, float** %x_isect.addr, align 8, !dbg !17587
  store float %10, float* %11, align 4, !dbg !17588
  store i32 3, i32* %retval, align 4, !dbg !17589
  br label %return, !dbg !17589

if.end6:                                          ; preds = %if.end
  %12 = load float*, float** %p1.addr, align 8, !dbg !17590
  %arrayidx7 = getelementptr inbounds float, float* %12, i64 1, !dbg !17590
  %13 = load float, float* %arrayidx7, align 4, !dbg !17590
  %14 = load float*, float** %p2.addr, align 8, !dbg !17591
  %arrayidx8 = getelementptr inbounds float, float* %14, i64 1, !dbg !17591
  %15 = load float, float* %arrayidx8, align 4, !dbg !17591
  %sub = fsub float %13, %15, !dbg !17592
  %16 = call float @llvm.fabs.f32(float %sub), !dbg !17593
  store float %16, float* %y_diff, align 4, !dbg !17594
  %17 = load float, float* %y_diff, align 4, !dbg !17595
  %cmp9 = fcmp olt float %17, 0x3EB0C6F7A0000000, !dbg !17597
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !17598

if.then10:                                        ; preds = %if.end6
  %18 = load float*, float** %p1.addr, align 8, !dbg !17599
  %arrayidx11 = getelementptr inbounds float, float* %18, i64 0, !dbg !17599
  %19 = load float, float* %arrayidx11, align 4, !dbg !17599
  %20 = load float*, float** %p2.addr, align 8, !dbg !17601
  %arrayidx12 = getelementptr inbounds float, float* %20, i64 0, !dbg !17601
  %21 = load float, float* %arrayidx12, align 4, !dbg !17601
  %add = fadd float %19, %21, !dbg !17602
  %mul = fmul float %add, 5.000000e-01, !dbg !17603
  %22 = load float*, float** %x_isect.addr, align 8, !dbg !17604
  store float %mul, float* %22, align 4, !dbg !17605
  store i32 1, i32* %retval, align 4, !dbg !17606
  br label %return, !dbg !17606

if.end13:                                         ; preds = %if.end6
  %23 = load float*, float** %p1.addr, align 8, !dbg !17607
  %arrayidx14 = getelementptr inbounds float, float* %23, i64 1, !dbg !17607
  %24 = load float, float* %arrayidx14, align 4, !dbg !17607
  %25 = load float, float* %y_level.addr, align 4, !dbg !17609
  %cmp15 = fcmp ogt float %24, %25, !dbg !17610
  br i1 %cmp15, label %land.lhs.true, label %if.else, !dbg !17611

land.lhs.true:                                    ; preds = %if.end13
  %26 = load float*, float** %p2.addr, align 8, !dbg !17612
  %arrayidx16 = getelementptr inbounds float, float* %26, i64 1, !dbg !17612
  %27 = load float, float* %arrayidx16, align 4, !dbg !17612
  %28 = load float, float* %y_level.addr, align 4, !dbg !17613
  %cmp17 = fcmp olt float %27, %28, !dbg !17614
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !17615

if.then18:                                        ; preds = %land.lhs.true
  %29 = load float*, float** %p2.addr, align 8, !dbg !17616
  %arrayidx19 = getelementptr inbounds float, float* %29, i64 0, !dbg !17616
  %30 = load float, float* %arrayidx19, align 4, !dbg !17616
  %31 = load float*, float** %p1.addr, align 8, !dbg !17618
  %arrayidx20 = getelementptr inbounds float, float* %31, i64 1, !dbg !17618
  %32 = load float, float* %arrayidx20, align 4, !dbg !17618
  %33 = load float, float* %y_level.addr, align 4, !dbg !17619
  %sub21 = fsub float %32, %33, !dbg !17620
  %mul22 = fmul float %30, %sub21, !dbg !17621
  %34 = load float*, float** %p1.addr, align 8, !dbg !17622
  %arrayidx23 = getelementptr inbounds float, float* %34, i64 0, !dbg !17622
  %35 = load float, float* %arrayidx23, align 4, !dbg !17622
  %36 = load float, float* %y_level.addr, align 4, !dbg !17623
  %37 = load float*, float** %p2.addr, align 8, !dbg !17624
  %arrayidx24 = getelementptr inbounds float, float* %37, i64 1, !dbg !17624
  %38 = load float, float* %arrayidx24, align 4, !dbg !17624
  %sub25 = fsub float %36, %38, !dbg !17625
  %mul26 = fmul float %35, %sub25, !dbg !17626
  %add27 = fadd float %mul22, %mul26, !dbg !17627
  %39 = load float, float* %y_diff, align 4, !dbg !17628
  %div = fdiv float %add27, %39, !dbg !17629
  %40 = load float*, float** %x_isect.addr, align 8, !dbg !17630
  store float %div, float* %40, align 4, !dbg !17631
  store i32 1, i32* %retval, align 4, !dbg !17632
  br label %return, !dbg !17632

if.else:                                          ; preds = %land.lhs.true, %if.end13
  %41 = load float*, float** %p1.addr, align 8, !dbg !17633
  %arrayidx28 = getelementptr inbounds float, float* %41, i64 1, !dbg !17633
  %42 = load float, float* %arrayidx28, align 4, !dbg !17633
  %43 = load float, float* %y_level.addr, align 4, !dbg !17635
  %cmp29 = fcmp olt float %42, %43, !dbg !17636
  br i1 %cmp29, label %land.lhs.true30, label %if.else44, !dbg !17637

land.lhs.true30:                                  ; preds = %if.else
  %44 = load float*, float** %p2.addr, align 8, !dbg !17638
  %arrayidx31 = getelementptr inbounds float, float* %44, i64 1, !dbg !17638
  %45 = load float, float* %arrayidx31, align 4, !dbg !17638
  %46 = load float, float* %y_level.addr, align 4, !dbg !17639
  %cmp32 = fcmp ogt float %45, %46, !dbg !17640
  br i1 %cmp32, label %if.then33, label %if.else44, !dbg !17641

if.then33:                                        ; preds = %land.lhs.true30
  %47 = load float*, float** %p2.addr, align 8, !dbg !17642
  %arrayidx34 = getelementptr inbounds float, float* %47, i64 0, !dbg !17642
  %48 = load float, float* %arrayidx34, align 4, !dbg !17642
  %49 = load float, float* %y_level.addr, align 4, !dbg !17644
  %50 = load float*, float** %p1.addr, align 8, !dbg !17645
  %arrayidx35 = getelementptr inbounds float, float* %50, i64 1, !dbg !17645
  %51 = load float, float* %arrayidx35, align 4, !dbg !17645
  %sub36 = fsub float %49, %51, !dbg !17646
  %mul37 = fmul float %48, %sub36, !dbg !17647
  %52 = load float*, float** %p1.addr, align 8, !dbg !17648
  %arrayidx38 = getelementptr inbounds float, float* %52, i64 0, !dbg !17648
  %53 = load float, float* %arrayidx38, align 4, !dbg !17648
  %54 = load float*, float** %p2.addr, align 8, !dbg !17649
  %arrayidx39 = getelementptr inbounds float, float* %54, i64 1, !dbg !17649
  %55 = load float, float* %arrayidx39, align 4, !dbg !17649
  %56 = load float, float* %y_level.addr, align 4, !dbg !17650
  %sub40 = fsub float %55, %56, !dbg !17651
  %mul41 = fmul float %53, %sub40, !dbg !17652
  %add42 = fadd float %mul37, %mul41, !dbg !17653
  %57 = load float, float* %y_diff, align 4, !dbg !17654
  %div43 = fdiv float %add42, %57, !dbg !17655
  %58 = load float*, float** %x_isect.addr, align 8, !dbg !17656
  store float %div43, float* %58, align 4, !dbg !17657
  store i32 1, i32* %retval, align 4, !dbg !17658
  br label %return, !dbg !17658

if.else44:                                        ; preds = %land.lhs.true30, %if.else
  store i32 0, i32* %retval, align 4, !dbg !17659
  br label %return, !dbg !17659

return:                                           ; preds = %if.else44, %if.then33, %if.then18, %if.then10, %if.then4, %if.then
  %59 = load i32, i32* %retval, align 4, !dbg !17661
  ret i32 %59, !dbg !17661
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @line_isect_x(float* %p1, float* %p2, float %x_level, float* %y_isect) #0 !dbg !17662 {
entry:
  %retval = alloca i32, align 4
  %p1.addr = alloca float*, align 8
  %p2.addr = alloca float*, align 8
  %x_level.addr = alloca float, align 4
  %y_isect.addr = alloca float*, align 8
  %x_diff = alloca float, align 4
  store float* %p1, float** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p1.addr, metadata !17663, metadata !DIExpression()), !dbg !17664
  store float* %p2, float** %p2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p2.addr, metadata !17665, metadata !DIExpression()), !dbg !17666
  store float %x_level, float* %x_level.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x_level.addr, metadata !17667, metadata !DIExpression()), !dbg !17668
  store float* %y_isect, float** %y_isect.addr, align 8
  call void @llvm.dbg.declare(metadata float** %y_isect.addr, metadata !17669, metadata !DIExpression()), !dbg !17670
  call void @llvm.dbg.declare(metadata float* %x_diff, metadata !17671, metadata !DIExpression()), !dbg !17672
  %0 = load float, float* %x_level.addr, align 4, !dbg !17673
  %1 = load float*, float** %p1.addr, align 8, !dbg !17675
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !17675
  %2 = load float, float* %arrayidx, align 4, !dbg !17675
  %cmp = fcmp oeq float %0, %2, !dbg !17676
  br i1 %cmp, label %if.then, label %if.end, !dbg !17677

if.then:                                          ; preds = %entry
  %3 = load float*, float** %p1.addr, align 8, !dbg !17678
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !17678
  %4 = load float, float* %arrayidx1, align 4, !dbg !17678
  %5 = load float*, float** %y_isect.addr, align 8, !dbg !17680
  store float %4, float* %5, align 4, !dbg !17681
  store i32 2, i32* %retval, align 4, !dbg !17682
  br label %return, !dbg !17682

if.end:                                           ; preds = %entry
  %6 = load float, float* %x_level.addr, align 4, !dbg !17683
  %7 = load float*, float** %p2.addr, align 8, !dbg !17685
  %arrayidx2 = getelementptr inbounds float, float* %7, i64 0, !dbg !17685
  %8 = load float, float* %arrayidx2, align 4, !dbg !17685
  %cmp3 = fcmp oeq float %6, %8, !dbg !17686
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !17687

if.then4:                                         ; preds = %if.end
  %9 = load float*, float** %p2.addr, align 8, !dbg !17688
  %arrayidx5 = getelementptr inbounds float, float* %9, i64 1, !dbg !17688
  %10 = load float, float* %arrayidx5, align 4, !dbg !17688
  %11 = load float*, float** %y_isect.addr, align 8, !dbg !17690
  store float %10, float* %11, align 4, !dbg !17691
  store i32 3, i32* %retval, align 4, !dbg !17692
  br label %return, !dbg !17692

if.end6:                                          ; preds = %if.end
  %12 = load float*, float** %p1.addr, align 8, !dbg !17693
  %arrayidx7 = getelementptr inbounds float, float* %12, i64 0, !dbg !17693
  %13 = load float, float* %arrayidx7, align 4, !dbg !17693
  %14 = load float*, float** %p2.addr, align 8, !dbg !17694
  %arrayidx8 = getelementptr inbounds float, float* %14, i64 0, !dbg !17694
  %15 = load float, float* %arrayidx8, align 4, !dbg !17694
  %sub = fsub float %13, %15, !dbg !17695
  %16 = call float @llvm.fabs.f32(float %sub), !dbg !17696
  store float %16, float* %x_diff, align 4, !dbg !17697
  %17 = load float, float* %x_diff, align 4, !dbg !17698
  %cmp9 = fcmp olt float %17, 0x3EB0C6F7A0000000, !dbg !17700
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !17701

if.then10:                                        ; preds = %if.end6
  %18 = load float*, float** %p1.addr, align 8, !dbg !17702
  %arrayidx11 = getelementptr inbounds float, float* %18, i64 0, !dbg !17702
  %19 = load float, float* %arrayidx11, align 4, !dbg !17702
  %20 = load float*, float** %p2.addr, align 8, !dbg !17704
  %arrayidx12 = getelementptr inbounds float, float* %20, i64 0, !dbg !17704
  %21 = load float, float* %arrayidx12, align 4, !dbg !17704
  %add = fadd float %19, %21, !dbg !17705
  %mul = fmul float %add, 5.000000e-01, !dbg !17706
  %22 = load float*, float** %y_isect.addr, align 8, !dbg !17707
  store float %mul, float* %22, align 4, !dbg !17708
  store i32 1, i32* %retval, align 4, !dbg !17709
  br label %return, !dbg !17709

if.end13:                                         ; preds = %if.end6
  %23 = load float*, float** %p1.addr, align 8, !dbg !17710
  %arrayidx14 = getelementptr inbounds float, float* %23, i64 0, !dbg !17710
  %24 = load float, float* %arrayidx14, align 4, !dbg !17710
  %25 = load float, float* %x_level.addr, align 4, !dbg !17712
  %cmp15 = fcmp ogt float %24, %25, !dbg !17713
  br i1 %cmp15, label %land.lhs.true, label %if.else, !dbg !17714

land.lhs.true:                                    ; preds = %if.end13
  %26 = load float*, float** %p2.addr, align 8, !dbg !17715
  %arrayidx16 = getelementptr inbounds float, float* %26, i64 0, !dbg !17715
  %27 = load float, float* %arrayidx16, align 4, !dbg !17715
  %28 = load float, float* %x_level.addr, align 4, !dbg !17716
  %cmp17 = fcmp olt float %27, %28, !dbg !17717
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !17718

if.then18:                                        ; preds = %land.lhs.true
  %29 = load float*, float** %p2.addr, align 8, !dbg !17719
  %arrayidx19 = getelementptr inbounds float, float* %29, i64 1, !dbg !17719
  %30 = load float, float* %arrayidx19, align 4, !dbg !17719
  %31 = load float*, float** %p1.addr, align 8, !dbg !17721
  %arrayidx20 = getelementptr inbounds float, float* %31, i64 0, !dbg !17721
  %32 = load float, float* %arrayidx20, align 4, !dbg !17721
  %33 = load float, float* %x_level.addr, align 4, !dbg !17722
  %sub21 = fsub float %32, %33, !dbg !17723
  %mul22 = fmul float %30, %sub21, !dbg !17724
  %34 = load float*, float** %p1.addr, align 8, !dbg !17725
  %arrayidx23 = getelementptr inbounds float, float* %34, i64 1, !dbg !17725
  %35 = load float, float* %arrayidx23, align 4, !dbg !17725
  %36 = load float, float* %x_level.addr, align 4, !dbg !17726
  %37 = load float*, float** %p2.addr, align 8, !dbg !17727
  %arrayidx24 = getelementptr inbounds float, float* %37, i64 0, !dbg !17727
  %38 = load float, float* %arrayidx24, align 4, !dbg !17727
  %sub25 = fsub float %36, %38, !dbg !17728
  %mul26 = fmul float %35, %sub25, !dbg !17729
  %add27 = fadd float %mul22, %mul26, !dbg !17730
  %39 = load float, float* %x_diff, align 4, !dbg !17731
  %div = fdiv float %add27, %39, !dbg !17732
  %40 = load float*, float** %y_isect.addr, align 8, !dbg !17733
  store float %div, float* %40, align 4, !dbg !17734
  store i32 1, i32* %retval, align 4, !dbg !17735
  br label %return, !dbg !17735

if.else:                                          ; preds = %land.lhs.true, %if.end13
  %41 = load float*, float** %p1.addr, align 8, !dbg !17736
  %arrayidx28 = getelementptr inbounds float, float* %41, i64 0, !dbg !17736
  %42 = load float, float* %arrayidx28, align 4, !dbg !17736
  %43 = load float, float* %x_level.addr, align 4, !dbg !17738
  %cmp29 = fcmp olt float %42, %43, !dbg !17739
  br i1 %cmp29, label %land.lhs.true30, label %if.else44, !dbg !17740

land.lhs.true30:                                  ; preds = %if.else
  %44 = load float*, float** %p2.addr, align 8, !dbg !17741
  %arrayidx31 = getelementptr inbounds float, float* %44, i64 0, !dbg !17741
  %45 = load float, float* %arrayidx31, align 4, !dbg !17741
  %46 = load float, float* %x_level.addr, align 4, !dbg !17742
  %cmp32 = fcmp ogt float %45, %46, !dbg !17743
  br i1 %cmp32, label %if.then33, label %if.else44, !dbg !17744

if.then33:                                        ; preds = %land.lhs.true30
  %47 = load float*, float** %p2.addr, align 8, !dbg !17745
  %arrayidx34 = getelementptr inbounds float, float* %47, i64 1, !dbg !17745
  %48 = load float, float* %arrayidx34, align 4, !dbg !17745
  %49 = load float, float* %x_level.addr, align 4, !dbg !17747
  %50 = load float*, float** %p1.addr, align 8, !dbg !17748
  %arrayidx35 = getelementptr inbounds float, float* %50, i64 0, !dbg !17748
  %51 = load float, float* %arrayidx35, align 4, !dbg !17748
  %sub36 = fsub float %49, %51, !dbg !17749
  %mul37 = fmul float %48, %sub36, !dbg !17750
  %52 = load float*, float** %p1.addr, align 8, !dbg !17751
  %arrayidx38 = getelementptr inbounds float, float* %52, i64 1, !dbg !17751
  %53 = load float, float* %arrayidx38, align 4, !dbg !17751
  %54 = load float*, float** %p2.addr, align 8, !dbg !17752
  %arrayidx39 = getelementptr inbounds float, float* %54, i64 0, !dbg !17752
  %55 = load float, float* %arrayidx39, align 4, !dbg !17752
  %56 = load float, float* %x_level.addr, align 4, !dbg !17753
  %sub40 = fsub float %55, %56, !dbg !17754
  %mul41 = fmul float %53, %sub40, !dbg !17755
  %add42 = fadd float %mul37, %mul41, !dbg !17756
  %57 = load float, float* %x_diff, align 4, !dbg !17757
  %div43 = fdiv float %add42, %57, !dbg !17758
  %58 = load float*, float** %y_isect.addr, align 8, !dbg !17759
  store float %div43, float* %58, align 4, !dbg !17760
  store i32 1, i32* %retval, align 4, !dbg !17761
  br label %return, !dbg !17761

if.else44:                                        ; preds = %land.lhs.true30, %if.else
  store i32 0, i32* %retval, align 4, !dbg !17762
  br label %return, !dbg !17762

return:                                           ; preds = %if.else44, %if.then33, %if.then18, %if.then10, %if.then4, %if.then
  %59 = load i32, i32* %retval, align 4, !dbg !17764
  ret i32 %59, !dbg !17764
}

declare dso_local float @linearrgb_to_srgb(float) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @divide_round_i(i32 %a, i32 %b) #0 !dbg !17765 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !17766, metadata !DIExpression()), !dbg !17767
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !17768, metadata !DIExpression()), !dbg !17769
  %0 = load i32, i32* %a.addr, align 4, !dbg !17770
  %mul = mul nsw i32 2, %0, !dbg !17771
  %1 = load i32, i32* %b.addr, align 4, !dbg !17772
  %add = add nsw i32 %mul, %1, !dbg !17773
  %2 = load i32, i32* %b.addr, align 4, !dbg !17774
  %mul1 = mul nsw i32 2, %2, !dbg !17775
  %div = sdiv i32 %add, %mul1, !dbg !17776
  ret i32 %div, !dbg !17777
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4_char(i8* %r, i8* %a) #0 !dbg !17778 {
entry:
  %r.addr = alloca i8*, align 8
  %a.addr = alloca i8*, align 8
  store i8* %r, i8** %r.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r.addr, metadata !17781, metadata !DIExpression()), !dbg !17782
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !17783, metadata !DIExpression()), !dbg !17784
  %0 = load i8*, i8** %a.addr, align 8, !dbg !17785
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !17785
  %1 = load i8, i8* %arrayidx, align 1, !dbg !17785
  %2 = load i8*, i8** %r.addr, align 8, !dbg !17786
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i64 0, !dbg !17786
  store i8 %1, i8* %arrayidx1, align 1, !dbg !17787
  %3 = load i8*, i8** %a.addr, align 8, !dbg !17788
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !17788
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !17788
  %5 = load i8*, i8** %r.addr, align 8, !dbg !17789
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !17789
  store i8 %4, i8* %arrayidx3, align 1, !dbg !17790
  %6 = load i8*, i8** %a.addr, align 8, !dbg !17791
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !17791
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !17791
  %8 = load i8*, i8** %r.addr, align 8, !dbg !17792
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 2, !dbg !17792
  store i8 %7, i8* %arrayidx5, align 1, !dbg !17793
  %9 = load i8*, i8** %a.addr, align 8, !dbg !17794
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 3, !dbg !17794
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !17794
  %11 = load i8*, i8** %r.addr, align 8, !dbg !17795
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !17795
  store i8 %10, i8* %arrayidx7, align 1, !dbg !17796
  ret void, !dbg !17797
}

; Function Attrs: noinline nounwind uwtable
define internal void @blend_color_interpolate_float(float* %dst, float* %src1, float* %src2, float %t) #0 !dbg !17798 {
entry:
  %dst.addr = alloca float*, align 8
  %src1.addr = alloca float*, align 8
  %src2.addr = alloca float*, align 8
  %t.addr = alloca float, align 4
  %mt = alloca float, align 4
  store float* %dst, float** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dst.addr, metadata !17801, metadata !DIExpression()), !dbg !17802
  store float* %src1, float** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %src1.addr, metadata !17803, metadata !DIExpression()), !dbg !17804
  store float* %src2, float** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %src2.addr, metadata !17805, metadata !DIExpression()), !dbg !17806
  store float %t, float* %t.addr, align 4
  call void @llvm.dbg.declare(metadata float* %t.addr, metadata !17807, metadata !DIExpression()), !dbg !17808
  call void @llvm.dbg.declare(metadata float* %mt, metadata !17809, metadata !DIExpression()), !dbg !17810
  %0 = load float, float* %t.addr, align 4, !dbg !17811
  %sub = fsub float 1.000000e+00, %0, !dbg !17812
  store float %sub, float* %mt, align 4, !dbg !17810
  %1 = load float, float* %mt, align 4, !dbg !17813
  %2 = load float*, float** %src1.addr, align 8, !dbg !17814
  %arrayidx = getelementptr inbounds float, float* %2, i64 0, !dbg !17814
  %3 = load float, float* %arrayidx, align 4, !dbg !17814
  %mul = fmul float %1, %3, !dbg !17815
  %4 = load float, float* %t.addr, align 4, !dbg !17816
  %5 = load float*, float** %src2.addr, align 8, !dbg !17817
  %arrayidx1 = getelementptr inbounds float, float* %5, i64 0, !dbg !17817
  %6 = load float, float* %arrayidx1, align 4, !dbg !17817
  %mul2 = fmul float %4, %6, !dbg !17818
  %add = fadd float %mul, %mul2, !dbg !17819
  %7 = load float*, float** %dst.addr, align 8, !dbg !17820
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 0, !dbg !17820
  store float %add, float* %arrayidx3, align 4, !dbg !17821
  %8 = load float, float* %mt, align 4, !dbg !17822
  %9 = load float*, float** %src1.addr, align 8, !dbg !17823
  %arrayidx4 = getelementptr inbounds float, float* %9, i64 1, !dbg !17823
  %10 = load float, float* %arrayidx4, align 4, !dbg !17823
  %mul5 = fmul float %8, %10, !dbg !17824
  %11 = load float, float* %t.addr, align 4, !dbg !17825
  %12 = load float*, float** %src2.addr, align 8, !dbg !17826
  %arrayidx6 = getelementptr inbounds float, float* %12, i64 1, !dbg !17826
  %13 = load float, float* %arrayidx6, align 4, !dbg !17826
  %mul7 = fmul float %11, %13, !dbg !17827
  %add8 = fadd float %mul5, %mul7, !dbg !17828
  %14 = load float*, float** %dst.addr, align 8, !dbg !17829
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 1, !dbg !17829
  store float %add8, float* %arrayidx9, align 4, !dbg !17830
  %15 = load float, float* %mt, align 4, !dbg !17831
  %16 = load float*, float** %src1.addr, align 8, !dbg !17832
  %arrayidx10 = getelementptr inbounds float, float* %16, i64 2, !dbg !17832
  %17 = load float, float* %arrayidx10, align 4, !dbg !17832
  %mul11 = fmul float %15, %17, !dbg !17833
  %18 = load float, float* %t.addr, align 4, !dbg !17834
  %19 = load float*, float** %src2.addr, align 8, !dbg !17835
  %arrayidx12 = getelementptr inbounds float, float* %19, i64 2, !dbg !17835
  %20 = load float, float* %arrayidx12, align 4, !dbg !17835
  %mul13 = fmul float %18, %20, !dbg !17836
  %add14 = fadd float %mul11, %mul13, !dbg !17837
  %21 = load float*, float** %dst.addr, align 8, !dbg !17838
  %arrayidx15 = getelementptr inbounds float, float* %21, i64 2, !dbg !17838
  store float %add14, float* %arrayidx15, align 4, !dbg !17839
  %22 = load float, float* %mt, align 4, !dbg !17840
  %23 = load float*, float** %src1.addr, align 8, !dbg !17841
  %arrayidx16 = getelementptr inbounds float, float* %23, i64 3, !dbg !17841
  %24 = load float, float* %arrayidx16, align 4, !dbg !17841
  %mul17 = fmul float %22, %24, !dbg !17842
  %25 = load float, float* %t.addr, align 4, !dbg !17843
  %26 = load float*, float** %src2.addr, align 8, !dbg !17844
  %arrayidx18 = getelementptr inbounds float, float* %26, i64 3, !dbg !17844
  %27 = load float, float* %arrayidx18, align 4, !dbg !17844
  %mul19 = fmul float %25, %27, !dbg !17845
  %add20 = fadd float %mul17, %mul19, !dbg !17846
  %28 = load float*, float** %dst.addr, align 8, !dbg !17847
  %arrayidx21 = getelementptr inbounds float, float* %28, i64 3, !dbg !17847
  store float %add20, float* %arrayidx21, align 4, !dbg !17848
  ret void, !dbg !17849
}

; Function Attrs: noinline nounwind uwtable
define internal void @blend_color_interpolate_byte(i8* %dst, i8* %src1, i8* %src2, float %ft) #0 !dbg !17850 {
entry:
  %dst.addr = alloca i8*, align 8
  %src1.addr = alloca i8*, align 8
  %src2.addr = alloca i8*, align 8
  %ft.addr = alloca float, align 4
  %t = alloca i32, align 4
  %mt = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !17853, metadata !DIExpression()), !dbg !17854
  store i8* %src1, i8** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src1.addr, metadata !17855, metadata !DIExpression()), !dbg !17856
  store i8* %src2, i8** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src2.addr, metadata !17857, metadata !DIExpression()), !dbg !17858
  store float %ft, float* %ft.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ft.addr, metadata !17859, metadata !DIExpression()), !dbg !17860
  call void @llvm.dbg.declare(metadata i32* %t, metadata !17861, metadata !DIExpression()), !dbg !17862
  %0 = load float, float* %ft.addr, align 4, !dbg !17863
  %mul = fmul float 2.550000e+02, %0, !dbg !17864
  %conv = fptosi float %mul to i32, !dbg !17865
  store i32 %conv, i32* %t, align 4, !dbg !17862
  call void @llvm.dbg.declare(metadata i32* %mt, metadata !17866, metadata !DIExpression()), !dbg !17867
  %1 = load i32, i32* %t, align 4, !dbg !17868
  %sub = sub nsw i32 255, %1, !dbg !17869
  store i32 %sub, i32* %mt, align 4, !dbg !17867
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !17870, metadata !DIExpression()), !dbg !17871
  %2 = load i32, i32* %mt, align 4, !dbg !17872
  %3 = load i8*, i8** %src1.addr, align 8, !dbg !17873
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 3, !dbg !17873
  %4 = load i8, i8* %arrayidx, align 1, !dbg !17873
  %conv1 = zext i8 %4 to i32, !dbg !17873
  %mul2 = mul nsw i32 %2, %conv1, !dbg !17874
  %5 = load i32, i32* %t, align 4, !dbg !17875
  %6 = load i8*, i8** %src2.addr, align 8, !dbg !17876
  %arrayidx3 = getelementptr inbounds i8, i8* %6, i64 3, !dbg !17876
  %7 = load i8, i8* %arrayidx3, align 1, !dbg !17876
  %conv4 = zext i8 %7 to i32, !dbg !17876
  %mul5 = mul nsw i32 %5, %conv4, !dbg !17877
  %add = add nsw i32 %mul2, %mul5, !dbg !17878
  store i32 %add, i32* %tmp, align 4, !dbg !17871
  %8 = load i32, i32* %tmp, align 4, !dbg !17879
  %cmp = icmp sgt i32 %8, 0, !dbg !17881
  br i1 %cmp, label %if.then, label %if.else, !dbg !17882

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %mt, align 4, !dbg !17883
  %10 = load i8*, i8** %src1.addr, align 8, !dbg !17885
  %arrayidx7 = getelementptr inbounds i8, i8* %10, i64 0, !dbg !17885
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !17885
  %conv8 = zext i8 %11 to i32, !dbg !17885
  %mul9 = mul nsw i32 %9, %conv8, !dbg !17886
  %12 = load i8*, i8** %src1.addr, align 8, !dbg !17887
  %arrayidx10 = getelementptr inbounds i8, i8* %12, i64 3, !dbg !17887
  %13 = load i8, i8* %arrayidx10, align 1, !dbg !17887
  %conv11 = zext i8 %13 to i32, !dbg !17887
  %mul12 = mul nsw i32 %mul9, %conv11, !dbg !17888
  %14 = load i32, i32* %t, align 4, !dbg !17889
  %15 = load i8*, i8** %src2.addr, align 8, !dbg !17890
  %arrayidx13 = getelementptr inbounds i8, i8* %15, i64 0, !dbg !17890
  %16 = load i8, i8* %arrayidx13, align 1, !dbg !17890
  %conv14 = zext i8 %16 to i32, !dbg !17890
  %mul15 = mul nsw i32 %14, %conv14, !dbg !17891
  %17 = load i8*, i8** %src2.addr, align 8, !dbg !17892
  %arrayidx16 = getelementptr inbounds i8, i8* %17, i64 3, !dbg !17892
  %18 = load i8, i8* %arrayidx16, align 1, !dbg !17892
  %conv17 = zext i8 %18 to i32, !dbg !17892
  %mul18 = mul nsw i32 %mul15, %conv17, !dbg !17893
  %add19 = add nsw i32 %mul12, %mul18, !dbg !17894
  %19 = load i32, i32* %tmp, align 4, !dbg !17895
  %call = call i32 @divide_round_i(i32 %add19, i32 %19), !dbg !17896
  %conv20 = trunc i32 %call to i8, !dbg !17897
  %20 = load i8*, i8** %dst.addr, align 8, !dbg !17898
  %arrayidx21 = getelementptr inbounds i8, i8* %20, i64 0, !dbg !17898
  store i8 %conv20, i8* %arrayidx21, align 1, !dbg !17899
  %21 = load i32, i32* %mt, align 4, !dbg !17900
  %22 = load i8*, i8** %src1.addr, align 8, !dbg !17901
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 1, !dbg !17901
  %23 = load i8, i8* %arrayidx22, align 1, !dbg !17901
  %conv23 = zext i8 %23 to i32, !dbg !17901
  %mul24 = mul nsw i32 %21, %conv23, !dbg !17902
  %24 = load i8*, i8** %src1.addr, align 8, !dbg !17903
  %arrayidx25 = getelementptr inbounds i8, i8* %24, i64 3, !dbg !17903
  %25 = load i8, i8* %arrayidx25, align 1, !dbg !17903
  %conv26 = zext i8 %25 to i32, !dbg !17903
  %mul27 = mul nsw i32 %mul24, %conv26, !dbg !17904
  %26 = load i32, i32* %t, align 4, !dbg !17905
  %27 = load i8*, i8** %src2.addr, align 8, !dbg !17906
  %arrayidx28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !17906
  %28 = load i8, i8* %arrayidx28, align 1, !dbg !17906
  %conv29 = zext i8 %28 to i32, !dbg !17906
  %mul30 = mul nsw i32 %26, %conv29, !dbg !17907
  %29 = load i8*, i8** %src2.addr, align 8, !dbg !17908
  %arrayidx31 = getelementptr inbounds i8, i8* %29, i64 3, !dbg !17908
  %30 = load i8, i8* %arrayidx31, align 1, !dbg !17908
  %conv32 = zext i8 %30 to i32, !dbg !17908
  %mul33 = mul nsw i32 %mul30, %conv32, !dbg !17909
  %add34 = add nsw i32 %mul27, %mul33, !dbg !17910
  %31 = load i32, i32* %tmp, align 4, !dbg !17911
  %call35 = call i32 @divide_round_i(i32 %add34, i32 %31), !dbg !17912
  %conv36 = trunc i32 %call35 to i8, !dbg !17913
  %32 = load i8*, i8** %dst.addr, align 8, !dbg !17914
  %arrayidx37 = getelementptr inbounds i8, i8* %32, i64 1, !dbg !17914
  store i8 %conv36, i8* %arrayidx37, align 1, !dbg !17915
  %33 = load i32, i32* %mt, align 4, !dbg !17916
  %34 = load i8*, i8** %src1.addr, align 8, !dbg !17917
  %arrayidx38 = getelementptr inbounds i8, i8* %34, i64 2, !dbg !17917
  %35 = load i8, i8* %arrayidx38, align 1, !dbg !17917
  %conv39 = zext i8 %35 to i32, !dbg !17917
  %mul40 = mul nsw i32 %33, %conv39, !dbg !17918
  %36 = load i8*, i8** %src1.addr, align 8, !dbg !17919
  %arrayidx41 = getelementptr inbounds i8, i8* %36, i64 3, !dbg !17919
  %37 = load i8, i8* %arrayidx41, align 1, !dbg !17919
  %conv42 = zext i8 %37 to i32, !dbg !17919
  %mul43 = mul nsw i32 %mul40, %conv42, !dbg !17920
  %38 = load i32, i32* %t, align 4, !dbg !17921
  %39 = load i8*, i8** %src2.addr, align 8, !dbg !17922
  %arrayidx44 = getelementptr inbounds i8, i8* %39, i64 2, !dbg !17922
  %40 = load i8, i8* %arrayidx44, align 1, !dbg !17922
  %conv45 = zext i8 %40 to i32, !dbg !17922
  %mul46 = mul nsw i32 %38, %conv45, !dbg !17923
  %41 = load i8*, i8** %src2.addr, align 8, !dbg !17924
  %arrayidx47 = getelementptr inbounds i8, i8* %41, i64 3, !dbg !17924
  %42 = load i8, i8* %arrayidx47, align 1, !dbg !17924
  %conv48 = zext i8 %42 to i32, !dbg !17924
  %mul49 = mul nsw i32 %mul46, %conv48, !dbg !17925
  %add50 = add nsw i32 %mul43, %mul49, !dbg !17926
  %43 = load i32, i32* %tmp, align 4, !dbg !17927
  %call51 = call i32 @divide_round_i(i32 %add50, i32 %43), !dbg !17928
  %conv52 = trunc i32 %call51 to i8, !dbg !17929
  %44 = load i8*, i8** %dst.addr, align 8, !dbg !17930
  %arrayidx53 = getelementptr inbounds i8, i8* %44, i64 2, !dbg !17930
  store i8 %conv52, i8* %arrayidx53, align 1, !dbg !17931
  %45 = load i32, i32* %tmp, align 4, !dbg !17932
  %call54 = call i32 @divide_round_i(i32 %45, i32 255), !dbg !17933
  %conv55 = trunc i32 %call54 to i8, !dbg !17934
  %46 = load i8*, i8** %dst.addr, align 8, !dbg !17935
  %arrayidx56 = getelementptr inbounds i8, i8* %46, i64 3, !dbg !17935
  store i8 %conv55, i8* %arrayidx56, align 1, !dbg !17936
  br label %if.end, !dbg !17937

if.else:                                          ; preds = %entry
  %47 = load i8*, i8** %dst.addr, align 8, !dbg !17938
  %48 = load i8*, i8** %src1.addr, align 8, !dbg !17940
  call void @copy_v4_v4_char(i8* %47, i8* %48), !dbg !17941
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !17942
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v2_v2(float* %r, float* %a) #0 !dbg !17943 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !17944, metadata !DIExpression()), !dbg !17945
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !17946, metadata !DIExpression()), !dbg !17947
  %0 = load float*, float** %a.addr, align 8, !dbg !17948
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !17948
  %1 = load float, float* %arrayidx, align 4, !dbg !17948
  %2 = load float*, float** %r.addr, align 8, !dbg !17949
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !17949
  %3 = load float, float* %arrayidx1, align 4, !dbg !17950
  %add = fadd float %3, %1, !dbg !17950
  store float %add, float* %arrayidx1, align 4, !dbg !17950
  %4 = load float*, float** %a.addr, align 8, !dbg !17951
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !17951
  %5 = load float, float* %arrayidx2, align 4, !dbg !17951
  %6 = load float*, float** %r.addr, align 8, !dbg !17952
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !17952
  %7 = load float, float* %arrayidx3, align 4, !dbg !17953
  %add4 = fadd float %7, %5, !dbg !17953
  store float %add4, float* %arrayidx3, align 4, !dbg !17953
  ret void, !dbg !17954
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v4_fl(float* %r, float %f) #0 !dbg !17955 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !17956, metadata !DIExpression()), !dbg !17957
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !17958, metadata !DIExpression()), !dbg !17959
  %0 = load float, float* %f.addr, align 4, !dbg !17960
  %1 = load float*, float** %r.addr, align 8, !dbg !17961
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !17961
  %2 = load float, float* %arrayidx, align 4, !dbg !17962
  %mul = fmul float %2, %0, !dbg !17962
  store float %mul, float* %arrayidx, align 4, !dbg !17962
  %3 = load float, float* %f.addr, align 4, !dbg !17963
  %4 = load float*, float** %r.addr, align 8, !dbg !17964
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !17964
  %5 = load float, float* %arrayidx1, align 4, !dbg !17965
  %mul2 = fmul float %5, %3, !dbg !17965
  store float %mul2, float* %arrayidx1, align 4, !dbg !17965
  %6 = load float, float* %f.addr, align 4, !dbg !17966
  %7 = load float*, float** %r.addr, align 8, !dbg !17967
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !17967
  %8 = load float, float* %arrayidx3, align 4, !dbg !17968
  %mul4 = fmul float %8, %6, !dbg !17968
  store float %mul4, float* %arrayidx3, align 4, !dbg !17968
  %9 = load float, float* %f.addr, align 4, !dbg !17969
  %10 = load float*, float** %r.addr, align 8, !dbg !17970
  %arrayidx5 = getelementptr inbounds float, float* %10, i64 3, !dbg !17970
  %11 = load float, float* %arrayidx5, align 4, !dbg !17971
  %mul6 = fmul float %11, %9, !dbg !17971
  store float %mul6, float* %arrayidx5, align 4, !dbg !17971
  ret void, !dbg !17972
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v4_v4(float* %r, float* %a) #0 !dbg !17973 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !17974, metadata !DIExpression()), !dbg !17975
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !17976, metadata !DIExpression()), !dbg !17977
  %0 = load float*, float** %a.addr, align 8, !dbg !17978
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !17978
  %1 = load float, float* %arrayidx, align 4, !dbg !17978
  %2 = load float*, float** %r.addr, align 8, !dbg !17979
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !17979
  %3 = load float, float* %arrayidx1, align 4, !dbg !17980
  %add = fadd float %3, %1, !dbg !17980
  store float %add, float* %arrayidx1, align 4, !dbg !17980
  %4 = load float*, float** %a.addr, align 8, !dbg !17981
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !17981
  %5 = load float, float* %arrayidx2, align 4, !dbg !17981
  %6 = load float*, float** %r.addr, align 8, !dbg !17982
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !17982
  %7 = load float, float* %arrayidx3, align 4, !dbg !17983
  %add4 = fadd float %7, %5, !dbg !17983
  store float %add4, float* %arrayidx3, align 4, !dbg !17983
  %8 = load float*, float** %a.addr, align 8, !dbg !17984
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !17984
  %9 = load float, float* %arrayidx5, align 4, !dbg !17984
  %10 = load float*, float** %r.addr, align 8, !dbg !17985
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !17985
  %11 = load float, float* %arrayidx6, align 4, !dbg !17986
  %add7 = fadd float %11, %9, !dbg !17986
  store float %add7, float* %arrayidx6, align 4, !dbg !17986
  %12 = load float*, float** %a.addr, align 8, !dbg !17987
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 3, !dbg !17987
  %13 = load float, float* %arrayidx8, align 4, !dbg !17987
  %14 = load float*, float** %r.addr, align 8, !dbg !17988
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 3, !dbg !17988
  %15 = load float, float* %arrayidx9, align 4, !dbg !17989
  %add10 = fadd float %15, %13, !dbg !17989
  store float %add10, float* %arrayidx9, align 4, !dbg !17989
  ret void, !dbg !17990
}

; Function Attrs: noinline nounwind uwtable
define internal float @rgb_to_grayscale(float* %rgb) #0 !dbg !17991 {
entry:
  %rgb.addr = alloca float*, align 8
  store float* %rgb, float** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rgb.addr, metadata !17992, metadata !DIExpression()), !dbg !17993
  %0 = load float*, float** %rgb.addr, align 8, !dbg !17994
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !17994
  %1 = load float, float* %arrayidx, align 4, !dbg !17994
  %mul = fmul float 0x3FD3333340000000, %1, !dbg !17995
  %2 = load float*, float** %rgb.addr, align 8, !dbg !17996
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !17996
  %3 = load float, float* %arrayidx1, align 4, !dbg !17996
  %mul2 = fmul float 0x3FE28F5C20000000, %3, !dbg !17997
  %add = fadd float %mul, %mul2, !dbg !17998
  %4 = load float*, float** %rgb.addr, align 8, !dbg !17999
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 2, !dbg !17999
  %5 = load float, float* %arrayidx3, align 4, !dbg !17999
  %mul4 = fmul float 0x3FBEB851E0000000, %5, !dbg !18000
  %add5 = fadd float %add, %mul4, !dbg !18001
  ret float %add5, !dbg !18002
}

; Function Attrs: noinline nounwind uwtable
define internal void @blend_color_add_float(float* %dst, float* %src1, float* %src2) #0 !dbg !18003 {
entry:
  %dst.addr = alloca float*, align 8
  %src1.addr = alloca float*, align 8
  %src2.addr = alloca float*, align 8
  store float* %dst, float** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dst.addr, metadata !18004, metadata !DIExpression()), !dbg !18005
  store float* %src1, float** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %src1.addr, metadata !18006, metadata !DIExpression()), !dbg !18007
  store float* %src2, float** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %src2.addr, metadata !18008, metadata !DIExpression()), !dbg !18009
  %0 = load float*, float** %src2.addr, align 8, !dbg !18010
  %arrayidx = getelementptr inbounds float, float* %0, i64 3, !dbg !18010
  %1 = load float, float* %arrayidx, align 4, !dbg !18010
  %cmp = fcmp une float %1, 0.000000e+00, !dbg !18012
  br i1 %cmp, label %if.then, label %if.else, !dbg !18013

if.then:                                          ; preds = %entry
  %2 = load float*, float** %src1.addr, align 8, !dbg !18014
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !18014
  %3 = load float, float* %arrayidx1, align 4, !dbg !18014
  %4 = load float*, float** %src2.addr, align 8, !dbg !18016
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !18016
  %5 = load float, float* %arrayidx2, align 4, !dbg !18016
  %6 = load float*, float** %src1.addr, align 8, !dbg !18017
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 3, !dbg !18017
  %7 = load float, float* %arrayidx3, align 4, !dbg !18017
  %mul = fmul float %5, %7, !dbg !18018
  %add = fadd float %3, %mul, !dbg !18019
  %8 = load float*, float** %dst.addr, align 8, !dbg !18020
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 0, !dbg !18020
  store float %add, float* %arrayidx4, align 4, !dbg !18021
  %9 = load float*, float** %src1.addr, align 8, !dbg !18022
  %arrayidx5 = getelementptr inbounds float, float* %9, i64 1, !dbg !18022
  %10 = load float, float* %arrayidx5, align 4, !dbg !18022
  %11 = load float*, float** %src2.addr, align 8, !dbg !18023
  %arrayidx6 = getelementptr inbounds float, float* %11, i64 1, !dbg !18023
  %12 = load float, float* %arrayidx6, align 4, !dbg !18023
  %13 = load float*, float** %src1.addr, align 8, !dbg !18024
  %arrayidx7 = getelementptr inbounds float, float* %13, i64 3, !dbg !18024
  %14 = load float, float* %arrayidx7, align 4, !dbg !18024
  %mul8 = fmul float %12, %14, !dbg !18025
  %add9 = fadd float %10, %mul8, !dbg !18026
  %15 = load float*, float** %dst.addr, align 8, !dbg !18027
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 1, !dbg !18027
  store float %add9, float* %arrayidx10, align 4, !dbg !18028
  %16 = load float*, float** %src1.addr, align 8, !dbg !18029
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 2, !dbg !18029
  %17 = load float, float* %arrayidx11, align 4, !dbg !18029
  %18 = load float*, float** %src2.addr, align 8, !dbg !18030
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 2, !dbg !18030
  %19 = load float, float* %arrayidx12, align 4, !dbg !18030
  %20 = load float*, float** %src1.addr, align 8, !dbg !18031
  %arrayidx13 = getelementptr inbounds float, float* %20, i64 3, !dbg !18031
  %21 = load float, float* %arrayidx13, align 4, !dbg !18031
  %mul14 = fmul float %19, %21, !dbg !18032
  %add15 = fadd float %17, %mul14, !dbg !18033
  %22 = load float*, float** %dst.addr, align 8, !dbg !18034
  %arrayidx16 = getelementptr inbounds float, float* %22, i64 2, !dbg !18034
  store float %add15, float* %arrayidx16, align 4, !dbg !18035
  %23 = load float*, float** %src1.addr, align 8, !dbg !18036
  %arrayidx17 = getelementptr inbounds float, float* %23, i64 3, !dbg !18036
  %24 = load float, float* %arrayidx17, align 4, !dbg !18036
  %25 = load float*, float** %dst.addr, align 8, !dbg !18037
  %arrayidx18 = getelementptr inbounds float, float* %25, i64 3, !dbg !18037
  store float %24, float* %arrayidx18, align 4, !dbg !18038
  br label %if.end, !dbg !18039

if.else:                                          ; preds = %entry
  %26 = load float*, float** %dst.addr, align 8, !dbg !18040
  %27 = load float*, float** %src1.addr, align 8, !dbg !18042
  call void @copy_v4_v4(float* %26, float* %27), !dbg !18043
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !18044
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @f_to_char(float %val) #0 !dbg !18045 {
entry:
  %val.addr = alloca float, align 4
  store float %val, float* %val.addr, align 4
  call void @llvm.dbg.declare(metadata float* %val.addr, metadata !18048, metadata !DIExpression()), !dbg !18049
  %0 = load float, float* %val.addr, align 4, !dbg !18050
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !18050
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !18050

cond.true:                                        ; preds = %entry
  br label %cond.end4, !dbg !18050

cond.false:                                       ; preds = %entry
  %1 = load float, float* %val.addr, align 4, !dbg !18050
  %cmp1 = fcmp ogt float %1, 0x3FEFEFEFE0000000, !dbg !18050
  br i1 %cmp1, label %cond.true2, label %cond.false3, !dbg !18050

cond.true2:                                       ; preds = %cond.false
  br label %cond.end, !dbg !18050

cond.false3:                                      ; preds = %cond.false
  %2 = load float, float* %val.addr, align 4, !dbg !18050
  %mul = fmul float 2.550000e+02, %2, !dbg !18050
  %add = fadd float %mul, 5.000000e-01, !dbg !18050
  br label %cond.end, !dbg !18050

cond.end:                                         ; preds = %cond.false3, %cond.true2
  %cond = phi float [ 2.550000e+02, %cond.true2 ], [ %add, %cond.false3 ], !dbg !18050
  br label %cond.end4, !dbg !18050

cond.end4:                                        ; preds = %cond.end, %cond.true
  %cond5 = phi float [ 0.000000e+00, %cond.true ], [ %cond, %cond.end ], !dbg !18050
  %conv = fptoui float %cond5 to i8, !dbg !18050
  ret i8 %conv, !dbg !18051
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3(float* %r, float* %a) #0 !dbg !18052 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !18053, metadata !DIExpression()), !dbg !18054
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !18055, metadata !DIExpression()), !dbg !18056
  %0 = load float*, float** %a.addr, align 8, !dbg !18057
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !18057
  %1 = load float, float* %arrayidx, align 4, !dbg !18057
  %2 = load float*, float** %r.addr, align 8, !dbg !18058
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !18058
  %3 = load float, float* %arrayidx1, align 4, !dbg !18059
  %mul = fmul float %3, %1, !dbg !18059
  store float %mul, float* %arrayidx1, align 4, !dbg !18059
  %4 = load float*, float** %a.addr, align 8, !dbg !18060
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !18060
  %5 = load float, float* %arrayidx2, align 4, !dbg !18060
  %6 = load float*, float** %r.addr, align 8, !dbg !18061
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !18061
  %7 = load float, float* %arrayidx3, align 4, !dbg !18062
  %mul4 = fmul float %7, %5, !dbg !18062
  store float %mul4, float* %arrayidx3, align 4, !dbg !18062
  %8 = load float*, float** %a.addr, align 8, !dbg !18063
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !18063
  %9 = load float, float* %arrayidx5, align 4, !dbg !18063
  %10 = load float*, float** %r.addr, align 8, !dbg !18064
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !18064
  %11 = load float, float* %arrayidx6, align 4, !dbg !18065
  %mul7 = fmul float %11, %9, !dbg !18065
  store float %mul7, float* %arrayidx6, align 4, !dbg !18065
  ret void, !dbg !18066
}

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

declare dso_local %struct.BlurKernel* @paint_new_blur_kernel(%struct.Brush*, i8 zeroext) #2

declare dso_local zeroext i8 @paint_use_opacity_masking(%struct.Brush*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @project_paint_pixel_sizeof(i16 signext %tool) #0 !dbg !18067 {
entry:
  %retval = alloca i32, align 4
  %tool.addr = alloca i16, align 2
  store i16 %tool, i16* %tool.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %tool.addr, metadata !18070, metadata !DIExpression()), !dbg !18071
  %0 = load i16, i16* %tool.addr, align 2, !dbg !18072
  %conv = sext i16 %0 to i32, !dbg !18072
  %cmp = icmp eq i32 %conv, 3, !dbg !18074
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !18075

lor.lhs.false:                                    ; preds = %entry
  %1 = load i16, i16* %tool.addr, align 2, !dbg !18076
  %conv2 = sext i16 %1 to i32, !dbg !18076
  %cmp3 = icmp eq i32 %conv2, 2, !dbg !18077
  br i1 %cmp3, label %if.then, label %if.else, !dbg !18078

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 104, i32* %retval, align 4, !dbg !18079
  br label %return, !dbg !18079

if.else:                                          ; preds = %lor.lhs.false
  store i32 88, i32* %retval, align 4, !dbg !18081
  br label %return, !dbg !18081

return:                                           ; preds = %if.else, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !18083
  ret i32 %2, !dbg !18083
}

declare dso_local %struct.View3D* @CTX_wm_view3d(%struct.bContext*) #2

declare dso_local %struct.RegionView3D* @CTX_wm_region_view3d(%struct.bContext*) #2

declare dso_local zeroext i8 @BKE_scene_use_new_shading_nodes(%struct.Scene*) #2

declare dso_local void @ED_view3d_clipping_local(%struct.RegionView3D*, [4 x float]*) #2

declare dso_local %struct.DerivedMesh* @mesh_create_derived_render(%struct.Scene*, %struct.Object*, i64) #2

declare dso_local zeroext i8 @CustomData_has_layer(%struct.CustomData*, i32) #2

declare dso_local %struct.DerivedMesh* @mesh_get_derived_final(%struct.Scene*, %struct.Object*, i64) #2

declare dso_local void @DM_update_materials(%struct.DerivedMesh*, %struct.Object*) #2

declare dso_local i32 @CustomData_get_stencil_layer(%struct.CustomData*, i32) #2

declare dso_local i8* @CustomData_get_layer_n(%struct.CustomData*, i32, i32) #2

declare dso_local i8* @CustomData_get_layer(%struct.CustomData*, i32) #2

declare dso_local i32 @CustomData_get_clone_layer(%struct.CustomData*, i32) #2

declare dso_local zeroext i8 @invert_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local void @copy_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local void @ED_view3d_ob_project_mat_get(%struct.RegionView3D*, %struct.Object*, [4 x float]*) #2

declare dso_local zeroext i8 @ED_view3d_clip_range_get(%struct.View3D*, %struct.RegionView3D*, float*, float*, i8 zeroext) #2

declare dso_local %struct.IDProperty* @IDP_GetProperties(%struct.ID*, i8 zeroext) #2

declare dso_local %struct.IDProperty* @IDP_GetPropertyFromGroup(%struct.IDProperty*, i8*) #2

declare dso_local void @normalize_m4([4 x float]*) #2

declare dso_local void @BKE_camera_params_init(%struct.CameraParams*) #2

declare dso_local void @BKE_camera_params_from_object(%struct.CameraParams*, %struct.Object*) #2

declare dso_local void @BKE_camera_params_compute_viewplane(%struct.CameraParams*, i32, i32, float, float) #2

declare dso_local void @BKE_camera_params_compute_matrix(%struct.CameraParams*) #2

declare dso_local void @mul_m4_m4m4([4 x float]*, [4 x float]*, [4 x float]*) #2

declare dso_local void @copy_m3_m4([3 x float]*, [4 x float]*) #2

declare dso_local void @mul_m3_v3([3 x float]*, float*) #2

declare dso_local void @mul_v3_m4v3(float*, [4 x float]*, float*) #2

declare dso_local i32 @BKE_scene_num_threads(%struct.Scene*) #2

declare dso_local void @BLI_spin_init(i32*) #2

declare dso_local void @image_undo_init_locks() #2

; Function Attrs: noinline nounwind uwtable
define internal void @normal_short_to_float_v3(float* %out, i16* %in) #0 !dbg !18084 {
entry:
  %out.addr = alloca float*, align 8
  %in.addr = alloca i16*, align 8
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !18087, metadata !DIExpression()), !dbg !18088
  store i16* %in, i16** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %in.addr, metadata !18089, metadata !DIExpression()), !dbg !18090
  %0 = load i16*, i16** %in.addr, align 8, !dbg !18091
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 0, !dbg !18091
  %1 = load i16, i16* %arrayidx, align 2, !dbg !18091
  %conv = sext i16 %1 to i32, !dbg !18091
  %conv1 = sitofp i32 %conv to float, !dbg !18091
  %mul = fmul float %conv1, 0x3F00002000000000, !dbg !18092
  %2 = load float*, float** %out.addr, align 8, !dbg !18093
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 0, !dbg !18093
  store float %mul, float* %arrayidx2, align 4, !dbg !18094
  %3 = load i16*, i16** %in.addr, align 8, !dbg !18095
  %arrayidx3 = getelementptr inbounds i16, i16* %3, i64 1, !dbg !18095
  %4 = load i16, i16* %arrayidx3, align 2, !dbg !18095
  %conv4 = sext i16 %4 to i32, !dbg !18095
  %conv5 = sitofp i32 %conv4 to float, !dbg !18095
  %mul6 = fmul float %conv5, 0x3F00002000000000, !dbg !18096
  %5 = load float*, float** %out.addr, align 8, !dbg !18097
  %arrayidx7 = getelementptr inbounds float, float* %5, i64 1, !dbg !18097
  store float %mul6, float* %arrayidx7, align 4, !dbg !18098
  %6 = load i16*, i16** %in.addr, align 8, !dbg !18099
  %arrayidx8 = getelementptr inbounds i16, i16* %6, i64 2, !dbg !18099
  %7 = load i16, i16* %arrayidx8, align 2, !dbg !18099
  %conv9 = sext i16 %7 to i32, !dbg !18099
  %conv10 = sitofp i32 %conv9 to float, !dbg !18099
  %mul11 = fmul float %conv10, 0x3F00002000000000, !dbg !18100
  %8 = load float*, float** %out.addr, align 8, !dbg !18101
  %arrayidx12 = getelementptr inbounds float, float* %8, i64 2, !dbg !18101
  store float %mul11, float* %arrayidx12, align 4, !dbg !18102
  ret void, !dbg !18103
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @DM_origindex_mface_mpoly(i32* %index_mf_to_mpoly, i32* %index_mp_to_orig, i32 %i) #0 !dbg !18104 {
entry:
  %index_mf_to_mpoly.addr = alloca i32*, align 8
  %index_mp_to_orig.addr = alloca i32*, align 8
  %i.addr = alloca i32, align 4
  %j = alloca i32, align 4
  store i32* %index_mf_to_mpoly, i32** %index_mf_to_mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index_mf_to_mpoly.addr, metadata !18107, metadata !DIExpression()), !dbg !18108
  store i32* %index_mp_to_orig, i32** %index_mp_to_orig.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index_mp_to_orig.addr, metadata !18109, metadata !DIExpression()), !dbg !18110
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !18111, metadata !DIExpression()), !dbg !18112
  call void @llvm.dbg.declare(metadata i32* %j, metadata !18113, metadata !DIExpression()), !dbg !18114
  %0 = load i32*, i32** %index_mf_to_mpoly.addr, align 8, !dbg !18115
  %1 = load i32, i32* %i.addr, align 4, !dbg !18116
  %idxprom = sext i32 %1 to i64, !dbg !18115
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !18115
  %2 = load i32, i32* %arrayidx, align 4, !dbg !18115
  store i32 %2, i32* %j, align 4, !dbg !18114
  %3 = load i32, i32* %j, align 4, !dbg !18117
  %cmp = icmp ne i32 %3, -1, !dbg !18118
  br i1 %cmp, label %cond.true, label %cond.false4, !dbg !18119

cond.true:                                        ; preds = %entry
  %4 = load i32*, i32** %index_mp_to_orig.addr, align 8, !dbg !18120
  %tobool = icmp ne i32* %4, null, !dbg !18120
  br i1 %tobool, label %cond.true1, label %cond.false, !dbg !18120

cond.true1:                                       ; preds = %cond.true
  %5 = load i32*, i32** %index_mp_to_orig.addr, align 8, !dbg !18121
  %6 = load i32, i32* %j, align 4, !dbg !18122
  %idxprom2 = sext i32 %6 to i64, !dbg !18121
  %arrayidx3 = getelementptr inbounds i32, i32* %5, i64 %idxprom2, !dbg !18121
  %7 = load i32, i32* %arrayidx3, align 4, !dbg !18121
  br label %cond.end, !dbg !18120

cond.false:                                       ; preds = %cond.true
  %8 = load i32, i32* %j, align 4, !dbg !18123
  br label %cond.end, !dbg !18120

cond.end:                                         ; preds = %cond.false, %cond.true1
  %cond = phi i32 [ %7, %cond.true1 ], [ %8, %cond.false ], !dbg !18120
  br label %cond.end5, !dbg !18119

cond.false4:                                      ; preds = %entry
  br label %cond.end5, !dbg !18119

cond.end5:                                        ; preds = %cond.false4, %cond.end
  %cond6 = phi i32 [ %cond, %cond.end ], [ -1, %cond.false4 ], !dbg !18119
  ret i32 %cond6, !dbg !18124
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.TexPaintSlot* @project_paint_face_paint_slot(%struct.ProjPaintState* %ps, i32 %face_index) #0 !dbg !18125 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %face_index.addr = alloca i32, align 4
  %mf = alloca %struct.MFace*, align 8
  %ma = alloca %struct.Material*, align 8
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !18128, metadata !DIExpression()), !dbg !18129
  store i32 %face_index, i32* %face_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_index.addr, metadata !18130, metadata !DIExpression()), !dbg !18131
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !18132, metadata !DIExpression()), !dbg !18133
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !18134
  %dm_mface = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 19, !dbg !18135
  %1 = load %struct.MFace*, %struct.MFace** %dm_mface, align 8, !dbg !18135
  %2 = load i32, i32* %face_index.addr, align 4, !dbg !18136
  %idx.ext = sext i32 %2 to i64, !dbg !18137
  %add.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %1, i64 %idx.ext, !dbg !18137
  store %struct.MFace* %add.ptr, %struct.MFace** %mf, align 8, !dbg !18133
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !18138, metadata !DIExpression()), !dbg !18139
  %3 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !18140
  %dm = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %3, i32 0, i32 14, !dbg !18141
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !18141
  %mat = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 18, !dbg !18142
  %5 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !18142
  %6 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !18143
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %6, i32 0, i32 4, !dbg !18144
  %7 = load i16, i16* %mat_nr, align 4, !dbg !18144
  %idxprom = sext i16 %7 to i64, !dbg !18140
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %5, i64 %idxprom, !dbg !18140
  %8 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !18140
  store %struct.Material* %8, %struct.Material** %ma, align 8, !dbg !18139
  %9 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !18145
  %tobool = icmp ne %struct.Material* %9, null, !dbg !18145
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18145

cond.true:                                        ; preds = %entry
  %10 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !18146
  %texpaintslot = getelementptr inbounds %struct.Material, %struct.Material* %10, i32 0, i32 135, !dbg !18147
  %11 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %texpaintslot, align 8, !dbg !18147
  %12 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !18148
  %paint_active_slot = getelementptr inbounds %struct.Material, %struct.Material* %12, i32 0, i32 131, !dbg !18149
  %13 = load i16, i16* %paint_active_slot, align 4, !dbg !18149
  %conv = sext i16 %13 to i32, !dbg !18148
  %idx.ext1 = sext i32 %conv to i64, !dbg !18150
  %add.ptr2 = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %11, i64 %idx.ext1, !dbg !18150
  br label %cond.end, !dbg !18145

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18145

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.TexPaintSlot* [ %add.ptr2, %cond.true ], [ null, %cond.false ], !dbg !18145
  ret %struct.TexPaintSlot* %cond, !dbg !18151
}

declare dso_local i8* @CustomData_get_layer_named(%struct.CustomData*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.TexPaintSlot* @project_paint_face_clone_slot(%struct.ProjPaintState* %ps, i32 %face_index) #0 !dbg !18152 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %face_index.addr = alloca i32, align 4
  %mf = alloca %struct.MFace*, align 8
  %ma = alloca %struct.Material*, align 8
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !18153, metadata !DIExpression()), !dbg !18154
  store i32 %face_index, i32* %face_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_index.addr, metadata !18155, metadata !DIExpression()), !dbg !18156
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !18157, metadata !DIExpression()), !dbg !18158
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !18159
  %dm_mface = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 19, !dbg !18160
  %1 = load %struct.MFace*, %struct.MFace** %dm_mface, align 8, !dbg !18160
  %2 = load i32, i32* %face_index.addr, align 4, !dbg !18161
  %idx.ext = sext i32 %2 to i64, !dbg !18162
  %add.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %1, i64 %idx.ext, !dbg !18162
  store %struct.MFace* %add.ptr, %struct.MFace** %mf, align 8, !dbg !18158
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !18163, metadata !DIExpression()), !dbg !18164
  %3 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !18165
  %dm = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %3, i32 0, i32 14, !dbg !18166
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !18166
  %mat = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 18, !dbg !18167
  %5 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !18167
  %6 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !18168
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %6, i32 0, i32 4, !dbg !18169
  %7 = load i16, i16* %mat_nr, align 4, !dbg !18169
  %idxprom = sext i16 %7 to i64, !dbg !18165
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %5, i64 %idxprom, !dbg !18165
  %8 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !18165
  store %struct.Material* %8, %struct.Material** %ma, align 8, !dbg !18164
  %9 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !18170
  %tobool = icmp ne %struct.Material* %9, null, !dbg !18170
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18170

cond.true:                                        ; preds = %entry
  %10 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !18171
  %texpaintslot = getelementptr inbounds %struct.Material, %struct.Material* %10, i32 0, i32 135, !dbg !18172
  %11 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %texpaintslot, align 8, !dbg !18172
  %12 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !18173
  %paint_clone_slot = getelementptr inbounds %struct.Material, %struct.Material* %12, i32 0, i32 132, !dbg !18174
  %13 = load i16, i16* %paint_clone_slot, align 2, !dbg !18174
  %conv = sext i16 %13 to i32, !dbg !18173
  %idx.ext1 = sext i32 %conv to i64, !dbg !18175
  %add.ptr2 = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %11, i64 %idx.ext1, !dbg !18175
  br label %cond.end, !dbg !18170

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18170

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.TexPaintSlot* [ %add.ptr2, %cond.true ], [ null, %cond.false ], !dbg !18170
  ret %struct.TexPaintSlot* %cond, !dbg !18176
}

declare dso_local i32 @BLI_linklist_index(%struct.LinkNode*, i8*) #2

declare dso_local zeroext i8 @BKE_image_has_ibuf(%struct.Image*, %struct.ImageUser*) #2

declare dso_local void @BLI_linklist_append(%struct.LinkNode**, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @project_paint_delayed_face_init(%struct.ProjPaintState* %ps, %struct.MFace* %mf, i32 %face_index) #0 !dbg !18177 {
entry:
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %mf.addr = alloca %struct.MFace*, align 8
  %face_index.addr = alloca i32, align 4
  %min = alloca [2 x float], align 4
  %max = alloca [2 x float], align 4
  %vCoSS = alloca float*, align 8
  %bucketMin = alloca [2 x i32], align 4
  %bucketMax = alloca [2 x i32], align 4
  %fidx = alloca i32, align 4
  %bucket_x = alloca i32, align 4
  %bucket_y = alloca i32, align 4
  %has_x_isect = alloca i32, align 4
  %has_isect = alloca i32, align 4
  %arena = alloca %struct.MemArena*, align 8
  %bucket_index = alloca i32, align 4
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !18180, metadata !DIExpression()), !dbg !18181
  store %struct.MFace* %mf, %struct.MFace** %mf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf.addr, metadata !18182, metadata !DIExpression()), !dbg !18183
  store i32 %face_index, i32* %face_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_index.addr, metadata !18184, metadata !DIExpression()), !dbg !18185
  call void @llvm.dbg.declare(metadata [2 x float]* %min, metadata !18186, metadata !DIExpression()), !dbg !18187
  call void @llvm.dbg.declare(metadata [2 x float]* %max, metadata !18188, metadata !DIExpression()), !dbg !18189
  call void @llvm.dbg.declare(metadata float** %vCoSS, metadata !18190, metadata !DIExpression()), !dbg !18191
  call void @llvm.dbg.declare(metadata [2 x i32]* %bucketMin, metadata !18192, metadata !DIExpression()), !dbg !18193
  call void @llvm.dbg.declare(metadata [2 x i32]* %bucketMax, metadata !18194, metadata !DIExpression()), !dbg !18195
  call void @llvm.dbg.declare(metadata i32* %fidx, metadata !18196, metadata !DIExpression()), !dbg !18197
  call void @llvm.dbg.declare(metadata i32* %bucket_x, metadata !18198, metadata !DIExpression()), !dbg !18199
  call void @llvm.dbg.declare(metadata i32* %bucket_y, metadata !18200, metadata !DIExpression()), !dbg !18201
  call void @llvm.dbg.declare(metadata i32* %has_x_isect, metadata !18202, metadata !DIExpression()), !dbg !18203
  store i32 -1, i32* %has_x_isect, align 4, !dbg !18203
  call void @llvm.dbg.declare(metadata i32* %has_isect, metadata !18204, metadata !DIExpression()), !dbg !18205
  store i32 0, i32* %has_isect, align 4, !dbg !18205
  call void @llvm.dbg.declare(metadata %struct.MemArena** %arena, metadata !18206, metadata !DIExpression()), !dbg !18207
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !18208
  %arena_mt = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %0, i32 0, i32 27, !dbg !18209
  %arrayidx = getelementptr inbounds [1 x %struct.MemArena*], [1 x %struct.MemArena*]* %arena_mt, i64 0, i64 0, !dbg !18208
  %1 = load %struct.MemArena*, %struct.MemArena** %arrayidx, align 8, !dbg !18208
  store %struct.MemArena* %1, %struct.MemArena** %arena, align 8, !dbg !18207
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 1, !dbg !18210
  store float 0x46293E5940000000, float* %arrayidx1, align 4, !dbg !18210
  %arrayidx2 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 0, !dbg !18210
  store float 0x46293E5940000000, float* %arrayidx2, align 4, !dbg !18210
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 1, !dbg !18210
  store float 0xC6293E5940000000, float* %arrayidx3, align 4, !dbg !18210
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 0, !dbg !18210
  store float 0xC6293E5940000000, float* %arrayidx4, align 4, !dbg !18210
  %2 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !18212
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %2, i32 0, i32 3, !dbg !18213
  %3 = load i32, i32* %v4, align 4, !dbg !18213
  %tobool = icmp ne i32 %3, 0, !dbg !18212
  %4 = zext i1 %tobool to i64, !dbg !18212
  %cond = select i1 %tobool, i32 3, i32 2, !dbg !18212
  store i32 %cond, i32* %fidx, align 4, !dbg !18214
  br label %do.body, !dbg !18215

do.body:                                          ; preds = %do.cond, %entry
  %5 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !18216
  %screenCoords = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %5, i32 0, i32 41, !dbg !18218
  %6 = load [4 x float]*, [4 x float]** %screenCoords, align 8, !dbg !18218
  %7 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !18219
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %7, i32 0, i32 0, !dbg !18220
  %8 = load i32, i32* %fidx, align 4, !dbg !18221
  %idx.ext = sext i32 %8 to i64, !dbg !18222
  %add.ptr = getelementptr inbounds i32, i32* %v1, i64 %idx.ext, !dbg !18222
  %9 = load i32, i32* %add.ptr, align 4, !dbg !18223
  %idxprom = zext i32 %9 to i64, !dbg !18216
  %arrayidx5 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 %idxprom, !dbg !18216
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %arrayidx5, i64 0, i64 0, !dbg !18216
  store float* %arraydecay, float** %vCoSS, align 8, !dbg !18224
  %arraydecay6 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 0, !dbg !18225
  %arraydecay7 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 0, !dbg !18226
  %10 = load float*, float** %vCoSS, align 8, !dbg !18227
  call void @minmax_v2v2_v2(float* %arraydecay6, float* %arraydecay7, float* %10), !dbg !18228
  br label %do.cond, !dbg !18229

do.cond:                                          ; preds = %do.body
  %11 = load i32, i32* %fidx, align 4, !dbg !18230
  %dec = add nsw i32 %11, -1, !dbg !18230
  store i32 %dec, i32* %fidx, align 4, !dbg !18230
  %tobool8 = icmp ne i32 %11, 0, !dbg !18229
  br i1 %tobool8, label %do.body, label %do.end, !dbg !18229, !llvm.loop !18231

do.end:                                           ; preds = %do.cond
  %12 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !18233
  %arraydecay9 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 0, !dbg !18234
  %arraydecay10 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 0, !dbg !18235
  %arraydecay11 = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMin, i64 0, i64 0, !dbg !18236
  %arraydecay12 = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMax, i64 0, i64 0, !dbg !18237
  call void @project_paint_bucket_bounds(%struct.ProjPaintState* %12, float* %arraydecay9, float* %arraydecay10, i32* %arraydecay11, i32* %arraydecay12), !dbg !18238
  %arrayidx13 = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMin, i64 0, i64 1, !dbg !18239
  %13 = load i32, i32* %arrayidx13, align 4, !dbg !18239
  store i32 %13, i32* %bucket_y, align 4, !dbg !18241
  br label %for.cond, !dbg !18242

for.cond:                                         ; preds = %for.inc31, %do.end
  %14 = load i32, i32* %bucket_y, align 4, !dbg !18243
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMax, i64 0, i64 1, !dbg !18245
  %15 = load i32, i32* %arrayidx14, align 4, !dbg !18245
  %cmp = icmp slt i32 %14, %15, !dbg !18246
  br i1 %cmp, label %for.body, label %for.end33, !dbg !18247

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %has_x_isect, align 4, !dbg !18248
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMin, i64 0, i64 0, !dbg !18250
  %16 = load i32, i32* %arrayidx15, align 4, !dbg !18250
  store i32 %16, i32* %bucket_x, align 4, !dbg !18252
  br label %for.cond16, !dbg !18253

for.cond16:                                       ; preds = %for.inc, %for.body
  %17 = load i32, i32* %bucket_x, align 4, !dbg !18254
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %bucketMax, i64 0, i64 0, !dbg !18256
  %18 = load i32, i32* %arrayidx17, align 4, !dbg !18256
  %cmp18 = icmp slt i32 %17, %18, !dbg !18257
  br i1 %cmp18, label %for.body19, label %for.end, !dbg !18258

for.body19:                                       ; preds = %for.cond16
  %19 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !18259
  %20 = load i32, i32* %bucket_x, align 4, !dbg !18262
  %21 = load i32, i32* %bucket_y, align 4, !dbg !18263
  %22 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !18264
  %call = call zeroext i8 @project_bucket_face_isect(%struct.ProjPaintState* %19, i32 %20, i32 %21, %struct.MFace* %22), !dbg !18265
  %tobool20 = icmp ne i8 %call, 0, !dbg !18265
  br i1 %tobool20, label %if.then, label %if.else, !dbg !18266

if.then:                                          ; preds = %for.body19
  call void @llvm.dbg.declare(metadata i32* %bucket_index, metadata !18267, metadata !DIExpression()), !dbg !18269
  %23 = load i32, i32* %bucket_x, align 4, !dbg !18270
  %24 = load i32, i32* %bucket_y, align 4, !dbg !18271
  %25 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !18272
  %buckets_x = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %25, i32 0, i32 36, !dbg !18273
  %26 = load i32, i32* %buckets_x, align 8, !dbg !18273
  %mul = mul nsw i32 %24, %26, !dbg !18274
  %add = add nsw i32 %23, %mul, !dbg !18275
  store i32 %add, i32* %bucket_index, align 4, !dbg !18269
  %27 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !18276
  %bucketFaces = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %27, i32 0, i32 29, !dbg !18277
  %28 = load %struct.LinkNode**, %struct.LinkNode*** %bucketFaces, align 8, !dbg !18277
  %29 = load i32, i32* %bucket_index, align 4, !dbg !18278
  %idxprom21 = sext i32 %29 to i64, !dbg !18276
  %arrayidx22 = getelementptr inbounds %struct.LinkNode*, %struct.LinkNode** %28, i64 %idxprom21, !dbg !18276
  %30 = load i32, i32* %face_index.addr, align 4, !dbg !18279
  %conv = sext i32 %30 to i64, !dbg !18279
  %31 = inttoptr i64 %conv to i8*, !dbg !18279
  %32 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !18280
  call void @BLI_linklist_prepend_arena(%struct.LinkNode** %arrayidx22, i8* %31, %struct.MemArena* %32), !dbg !18281
  store i32 1, i32* %has_isect, align 4, !dbg !18282
  store i32 1, i32* %has_x_isect, align 4, !dbg !18283
  br label %if.end25, !dbg !18284

if.else:                                          ; preds = %for.body19
  %33 = load i32, i32* %has_x_isect, align 4, !dbg !18285
  %tobool23 = icmp ne i32 %33, 0, !dbg !18285
  br i1 %tobool23, label %if.then24, label %if.end, !dbg !18287

if.then24:                                        ; preds = %if.else
  br label %for.end, !dbg !18288

if.end:                                           ; preds = %if.else
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !18290

for.inc:                                          ; preds = %if.end25
  %34 = load i32, i32* %bucket_x, align 4, !dbg !18291
  %inc = add nsw i32 %34, 1, !dbg !18291
  store i32 %inc, i32* %bucket_x, align 4, !dbg !18291
  br label %for.cond16, !dbg !18292, !llvm.loop !18293

for.end:                                          ; preds = %if.then24, %for.cond16
  %35 = load i32, i32* %has_x_isect, align 4, !dbg !18295
  %cmp26 = icmp eq i32 %35, 0, !dbg !18297
  br i1 %cmp26, label %land.lhs.true, label %if.end30, !dbg !18298

land.lhs.true:                                    ; preds = %for.end
  %36 = load i32, i32* %has_isect, align 4, !dbg !18299
  %tobool28 = icmp ne i32 %36, 0, !dbg !18299
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !18300

if.then29:                                        ; preds = %land.lhs.true
  br label %for.end33, !dbg !18301

if.end30:                                         ; preds = %land.lhs.true, %for.end
  br label %for.inc31, !dbg !18303

for.inc31:                                        ; preds = %if.end30
  %37 = load i32, i32* %bucket_y, align 4, !dbg !18304
  %inc32 = add nsw i32 %37, 1, !dbg !18304
  store i32 %inc32, i32* %bucket_y, align 4, !dbg !18304
  br label %for.cond, !dbg !18305, !llvm.loop !18306

for.end33:                                        ; preds = %if.then29, %for.cond
  %38 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !18308
  %seam_bleed_px = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %38, i32 0, i32 65, !dbg !18310
  %39 = load float, float* %seam_bleed_px, align 8, !dbg !18310
  %cmp34 = fcmp ogt float %39, 0.000000e+00, !dbg !18311
  br i1 %cmp34, label %if.then36, label %if.end49, !dbg !18312

if.then36:                                        ; preds = %for.end33
  %40 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !18313
  %v437 = getelementptr inbounds %struct.MFace, %struct.MFace* %40, i32 0, i32 3, !dbg !18316
  %41 = load i32, i32* %v437, align 4, !dbg !18316
  %tobool38 = icmp ne i32 %41, 0, !dbg !18313
  br i1 %tobool38, label %if.end44, label %if.then39, !dbg !18317

if.then39:                                        ; preds = %if.then36
  %42 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !18318
  %faceSeamFlags = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %42, i32 0, i32 31, !dbg !18320
  %43 = load i8*, i8** %faceSeamFlags, align 8, !dbg !18320
  %44 = load i32, i32* %face_index.addr, align 4, !dbg !18321
  %idxprom40 = sext i32 %44 to i64, !dbg !18318
  %arrayidx41 = getelementptr inbounds i8, i8* %43, i64 %idxprom40, !dbg !18318
  %45 = load i8, i8* %arrayidx41, align 1, !dbg !18322
  %conv42 = zext i8 %45 to i32, !dbg !18322
  %or = or i32 %conv42, 128, !dbg !18322
  %conv43 = trunc i32 %or to i8, !dbg !18322
  store i8 %conv43, i8* %arrayidx41, align 1, !dbg !18322
  br label %if.end44, !dbg !18323

if.end44:                                         ; preds = %if.then39, %if.then36
  %46 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !18324
  %faceSeamUVs = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %46, i32 0, i32 33, !dbg !18325
  %47 = load [4 x [2 x float]]*, [4 x [2 x float]]** %faceSeamUVs, align 8, !dbg !18325
  %48 = load i32, i32* %face_index.addr, align 4, !dbg !18326
  %idxprom45 = sext i32 %48 to i64, !dbg !18324
  %arrayidx46 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %47, i64 %idxprom45, !dbg !18324
  %arraydecay47 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %arrayidx46, i64 0, i64 0, !dbg !18327
  %arraydecay48 = getelementptr inbounds [2 x float], [2 x float]* %arraydecay47, i64 0, i64 0, !dbg !18328
  store float 0x47EFFFFFE0000000, float* %arraydecay48, align 4, !dbg !18329
  br label %if.end49, !dbg !18330

if.end49:                                         ; preds = %if.end44, %for.end33
  ret void, !dbg !18331
}

declare dso_local void @BLI_linklist_free(%struct.LinkNode*, void (i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @project_bucket_face_isect(%struct.ProjPaintState* %ps, i32 %bucket_x, i32 %bucket_y, %struct.MFace* %mf) #0 !dbg !18332 {
entry:
  %retval = alloca i8, align 1
  %ps.addr = alloca %struct.ProjPaintState*, align 8
  %bucket_x.addr = alloca i32, align 4
  %bucket_y.addr = alloca i32, align 4
  %mf.addr = alloca %struct.MFace*, align 8
  %bucket_bounds = alloca %struct.rctf, align 4
  %p1 = alloca [2 x float], align 4
  %p2 = alloca [2 x float], align 4
  %p3 = alloca [2 x float], align 4
  %p4 = alloca [2 x float], align 4
  %v = alloca float*, align 8
  %v1 = alloca float*, align 8
  %v2 = alloca float*, align 8
  %v3 = alloca float*, align 8
  %v4 = alloca float*, align 8
  %fidx = alloca i32, align 4
  store %struct.ProjPaintState* %ps, %struct.ProjPaintState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ProjPaintState** %ps.addr, metadata !18335, metadata !DIExpression()), !dbg !18336
  store i32 %bucket_x, i32* %bucket_x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bucket_x.addr, metadata !18337, metadata !DIExpression()), !dbg !18338
  store i32 %bucket_y, i32* %bucket_y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bucket_y.addr, metadata !18339, metadata !DIExpression()), !dbg !18340
  store %struct.MFace* %mf, %struct.MFace** %mf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf.addr, metadata !18341, metadata !DIExpression()), !dbg !18342
  call void @llvm.dbg.declare(metadata %struct.rctf* %bucket_bounds, metadata !18343, metadata !DIExpression()), !dbg !18344
  call void @llvm.dbg.declare(metadata [2 x float]* %p1, metadata !18345, metadata !DIExpression()), !dbg !18346
  call void @llvm.dbg.declare(metadata [2 x float]* %p2, metadata !18347, metadata !DIExpression()), !dbg !18348
  call void @llvm.dbg.declare(metadata [2 x float]* %p3, metadata !18349, metadata !DIExpression()), !dbg !18350
  call void @llvm.dbg.declare(metadata [2 x float]* %p4, metadata !18351, metadata !DIExpression()), !dbg !18352
  call void @llvm.dbg.declare(metadata float** %v, metadata !18353, metadata !DIExpression()), !dbg !18354
  call void @llvm.dbg.declare(metadata float** %v1, metadata !18355, metadata !DIExpression()), !dbg !18356
  call void @llvm.dbg.declare(metadata float** %v2, metadata !18357, metadata !DIExpression()), !dbg !18358
  call void @llvm.dbg.declare(metadata float** %v3, metadata !18359, metadata !DIExpression()), !dbg !18360
  call void @llvm.dbg.declare(metadata float** %v4, metadata !18361, metadata !DIExpression()), !dbg !18362
  store float* null, float** %v4, align 8, !dbg !18362
  call void @llvm.dbg.declare(metadata i32* %fidx, metadata !18363, metadata !DIExpression()), !dbg !18364
  %0 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !18365
  %1 = load i32, i32* %bucket_x.addr, align 4, !dbg !18366
  %2 = load i32, i32* %bucket_y.addr, align 4, !dbg !18367
  call void @project_bucket_bounds(%struct.ProjPaintState* %0, i32 %1, i32 %2, %struct.rctf* %bucket_bounds), !dbg !18368
  %3 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !18369
  %v41 = getelementptr inbounds %struct.MFace, %struct.MFace* %3, i32 0, i32 3, !dbg !18370
  %4 = load i32, i32* %v41, align 4, !dbg !18370
  %tobool = icmp ne i32 %4, 0, !dbg !18369
  %5 = zext i1 %tobool to i64, !dbg !18369
  %cond = select i1 %tobool, i32 3, i32 2, !dbg !18369
  store i32 %cond, i32* %fidx, align 4, !dbg !18371
  br label %do.body, !dbg !18372

do.body:                                          ; preds = %do.cond, %entry
  %6 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !18373
  %screenCoords = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %6, i32 0, i32 41, !dbg !18375
  %7 = load [4 x float]*, [4 x float]** %screenCoords, align 8, !dbg !18375
  %8 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !18376
  %v12 = getelementptr inbounds %struct.MFace, %struct.MFace* %8, i32 0, i32 0, !dbg !18377
  %9 = load i32, i32* %fidx, align 4, !dbg !18378
  %idx.ext = sext i32 %9 to i64, !dbg !18379
  %add.ptr = getelementptr inbounds i32, i32* %v12, i64 %idx.ext, !dbg !18379
  %10 = load i32, i32* %add.ptr, align 4, !dbg !18380
  %idxprom = zext i32 %10 to i64, !dbg !18373
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %7, i64 %idxprom, !dbg !18373
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !18373
  store float* %arraydecay, float** %v, align 8, !dbg !18381
  %11 = load float*, float** %v, align 8, !dbg !18382
  %call = call zeroext i8 @BLI_rctf_isect_pt_v(%struct.rctf* %bucket_bounds, float* %11), !dbg !18384
  %tobool3 = icmp ne i8 %call, 0, !dbg !18384
  br i1 %tobool3, label %if.then, label %if.end, !dbg !18385

if.then:                                          ; preds = %do.body
  store i8 1, i8* %retval, align 1, !dbg !18386
  br label %return, !dbg !18386

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !18388

do.cond:                                          ; preds = %if.end
  %12 = load i32, i32* %fidx, align 4, !dbg !18389
  %dec = add nsw i32 %12, -1, !dbg !18389
  store i32 %dec, i32* %fidx, align 4, !dbg !18389
  %tobool4 = icmp ne i32 %12, 0, !dbg !18388
  br i1 %tobool4, label %do.body, label %do.end, !dbg !18388, !llvm.loop !18390

do.end:                                           ; preds = %do.cond
  %13 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !18392
  %screenCoords5 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %13, i32 0, i32 41, !dbg !18393
  %14 = load [4 x float]*, [4 x float]** %screenCoords5, align 8, !dbg !18393
  %15 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !18394
  %v16 = getelementptr inbounds %struct.MFace, %struct.MFace* %15, i32 0, i32 0, !dbg !18395
  %16 = load i32, i32* %v16, align 4, !dbg !18395
  %idxprom7 = zext i32 %16 to i64, !dbg !18392
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %14, i64 %idxprom7, !dbg !18392
  %arraydecay9 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx8, i64 0, i64 0, !dbg !18392
  store float* %arraydecay9, float** %v1, align 8, !dbg !18396
  %17 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !18397
  %screenCoords10 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %17, i32 0, i32 41, !dbg !18398
  %18 = load [4 x float]*, [4 x float]** %screenCoords10, align 8, !dbg !18398
  %19 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !18399
  %v211 = getelementptr inbounds %struct.MFace, %struct.MFace* %19, i32 0, i32 1, !dbg !18400
  %20 = load i32, i32* %v211, align 4, !dbg !18400
  %idxprom12 = zext i32 %20 to i64, !dbg !18397
  %arrayidx13 = getelementptr inbounds [4 x float], [4 x float]* %18, i64 %idxprom12, !dbg !18397
  %arraydecay14 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx13, i64 0, i64 0, !dbg !18397
  store float* %arraydecay14, float** %v2, align 8, !dbg !18401
  %21 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !18402
  %screenCoords15 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %21, i32 0, i32 41, !dbg !18403
  %22 = load [4 x float]*, [4 x float]** %screenCoords15, align 8, !dbg !18403
  %23 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !18404
  %v316 = getelementptr inbounds %struct.MFace, %struct.MFace* %23, i32 0, i32 2, !dbg !18405
  %24 = load i32, i32* %v316, align 4, !dbg !18405
  %idxprom17 = zext i32 %24 to i64, !dbg !18402
  %arrayidx18 = getelementptr inbounds [4 x float], [4 x float]* %22, i64 %idxprom17, !dbg !18402
  %arraydecay19 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx18, i64 0, i64 0, !dbg !18402
  store float* %arraydecay19, float** %v3, align 8, !dbg !18406
  %25 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !18407
  %v420 = getelementptr inbounds %struct.MFace, %struct.MFace* %25, i32 0, i32 3, !dbg !18409
  %26 = load i32, i32* %v420, align 4, !dbg !18409
  %tobool21 = icmp ne i32 %26, 0, !dbg !18407
  br i1 %tobool21, label %if.then22, label %if.end28, !dbg !18410

if.then22:                                        ; preds = %do.end
  %27 = load %struct.ProjPaintState*, %struct.ProjPaintState** %ps.addr, align 8, !dbg !18411
  %screenCoords23 = getelementptr inbounds %struct.ProjPaintState, %struct.ProjPaintState* %27, i32 0, i32 41, !dbg !18413
  %28 = load [4 x float]*, [4 x float]** %screenCoords23, align 8, !dbg !18413
  %29 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !18414
  %v424 = getelementptr inbounds %struct.MFace, %struct.MFace* %29, i32 0, i32 3, !dbg !18415
  %30 = load i32, i32* %v424, align 4, !dbg !18415
  %idxprom25 = zext i32 %30 to i64, !dbg !18411
  %arrayidx26 = getelementptr inbounds [4 x float], [4 x float]* %28, i64 %idxprom25, !dbg !18411
  %arraydecay27 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx26, i64 0, i64 0, !dbg !18411
  store float* %arraydecay27, float** %v4, align 8, !dbg !18416
  br label %if.end28, !dbg !18417

if.end28:                                         ; preds = %if.then22, %do.end
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %bucket_bounds, i32 0, i32 0, !dbg !18418
  %31 = load float, float* %xmin, align 4, !dbg !18418
  %arrayidx29 = getelementptr inbounds [2 x float], [2 x float]* %p1, i64 0, i64 0, !dbg !18419
  store float %31, float* %arrayidx29, align 4, !dbg !18420
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %bucket_bounds, i32 0, i32 2, !dbg !18421
  %32 = load float, float* %ymin, align 4, !dbg !18421
  %arrayidx30 = getelementptr inbounds [2 x float], [2 x float]* %p1, i64 0, i64 1, !dbg !18422
  store float %32, float* %arrayidx30, align 4, !dbg !18423
  %xmin31 = getelementptr inbounds %struct.rctf, %struct.rctf* %bucket_bounds, i32 0, i32 0, !dbg !18424
  %33 = load float, float* %xmin31, align 4, !dbg !18424
  %arrayidx32 = getelementptr inbounds [2 x float], [2 x float]* %p2, i64 0, i64 0, !dbg !18425
  store float %33, float* %arrayidx32, align 4, !dbg !18426
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %bucket_bounds, i32 0, i32 3, !dbg !18427
  %34 = load float, float* %ymax, align 4, !dbg !18427
  %arrayidx33 = getelementptr inbounds [2 x float], [2 x float]* %p2, i64 0, i64 1, !dbg !18428
  store float %34, float* %arrayidx33, align 4, !dbg !18429
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %bucket_bounds, i32 0, i32 1, !dbg !18430
  %35 = load float, float* %xmax, align 4, !dbg !18430
  %arrayidx34 = getelementptr inbounds [2 x float], [2 x float]* %p3, i64 0, i64 0, !dbg !18431
  store float %35, float* %arrayidx34, align 4, !dbg !18432
  %ymax35 = getelementptr inbounds %struct.rctf, %struct.rctf* %bucket_bounds, i32 0, i32 3, !dbg !18433
  %36 = load float, float* %ymax35, align 4, !dbg !18433
  %arrayidx36 = getelementptr inbounds [2 x float], [2 x float]* %p3, i64 0, i64 1, !dbg !18434
  store float %36, float* %arrayidx36, align 4, !dbg !18435
  %xmax37 = getelementptr inbounds %struct.rctf, %struct.rctf* %bucket_bounds, i32 0, i32 1, !dbg !18436
  %37 = load float, float* %xmax37, align 4, !dbg !18436
  %arrayidx38 = getelementptr inbounds [2 x float], [2 x float]* %p4, i64 0, i64 0, !dbg !18437
  store float %37, float* %arrayidx38, align 4, !dbg !18438
  %ymin39 = getelementptr inbounds %struct.rctf, %struct.rctf* %bucket_bounds, i32 0, i32 2, !dbg !18439
  %38 = load float, float* %ymin39, align 4, !dbg !18439
  %arrayidx40 = getelementptr inbounds [2 x float], [2 x float]* %p4, i64 0, i64 1, !dbg !18440
  store float %38, float* %arrayidx40, align 4, !dbg !18441
  %39 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !18442
  %v441 = getelementptr inbounds %struct.MFace, %struct.MFace* %39, i32 0, i32 3, !dbg !18444
  %40 = load i32, i32* %v441, align 4, !dbg !18444
  %tobool42 = icmp ne i32 %40, 0, !dbg !18442
  br i1 %tobool42, label %if.then43, label %if.else, !dbg !18445

if.then43:                                        ; preds = %if.end28
  %arraydecay44 = getelementptr inbounds [2 x float], [2 x float]* %p1, i64 0, i64 0, !dbg !18446
  %41 = load float*, float** %v1, align 8, !dbg !18449
  %42 = load float*, float** %v2, align 8, !dbg !18450
  %43 = load float*, float** %v3, align 8, !dbg !18451
  %44 = load float*, float** %v4, align 8, !dbg !18452
  %call45 = call i32 @isect_point_quad_v2(float* %arraydecay44, float* %41, float* %42, float* %43, float* %44), !dbg !18453
  %tobool46 = icmp ne i32 %call45, 0, !dbg !18453
  br i1 %tobool46, label %if.then118, label %lor.lhs.false, !dbg !18454

lor.lhs.false:                                    ; preds = %if.then43
  %arraydecay47 = getelementptr inbounds [2 x float], [2 x float]* %p2, i64 0, i64 0, !dbg !18455
  %45 = load float*, float** %v1, align 8, !dbg !18456
  %46 = load float*, float** %v2, align 8, !dbg !18457
  %47 = load float*, float** %v3, align 8, !dbg !18458
  %48 = load float*, float** %v4, align 8, !dbg !18459
  %call48 = call i32 @isect_point_quad_v2(float* %arraydecay47, float* %45, float* %46, float* %47, float* %48), !dbg !18460
  %tobool49 = icmp ne i32 %call48, 0, !dbg !18460
  br i1 %tobool49, label %if.then118, label %lor.lhs.false50, !dbg !18461

lor.lhs.false50:                                  ; preds = %lor.lhs.false
  %arraydecay51 = getelementptr inbounds [2 x float], [2 x float]* %p3, i64 0, i64 0, !dbg !18462
  %49 = load float*, float** %v1, align 8, !dbg !18463
  %50 = load float*, float** %v2, align 8, !dbg !18464
  %51 = load float*, float** %v3, align 8, !dbg !18465
  %52 = load float*, float** %v4, align 8, !dbg !18466
  %call52 = call i32 @isect_point_quad_v2(float* %arraydecay51, float* %49, float* %50, float* %51, float* %52), !dbg !18467
  %tobool53 = icmp ne i32 %call52, 0, !dbg !18467
  br i1 %tobool53, label %if.then118, label %lor.lhs.false54, !dbg !18468

lor.lhs.false54:                                  ; preds = %lor.lhs.false50
  %arraydecay55 = getelementptr inbounds [2 x float], [2 x float]* %p4, i64 0, i64 0, !dbg !18469
  %53 = load float*, float** %v1, align 8, !dbg !18470
  %54 = load float*, float** %v2, align 8, !dbg !18471
  %55 = load float*, float** %v3, align 8, !dbg !18472
  %56 = load float*, float** %v4, align 8, !dbg !18473
  %call56 = call i32 @isect_point_quad_v2(float* %arraydecay55, float* %53, float* %54, float* %55, float* %56), !dbg !18474
  %tobool57 = icmp ne i32 %call56, 0, !dbg !18474
  br i1 %tobool57, label %if.then118, label %lor.lhs.false58, !dbg !18475

lor.lhs.false58:                                  ; preds = %lor.lhs.false54
  %arraydecay59 = getelementptr inbounds [2 x float], [2 x float]* %p1, i64 0, i64 0, !dbg !18476
  %arraydecay60 = getelementptr inbounds [2 x float], [2 x float]* %p2, i64 0, i64 0, !dbg !18477
  %57 = load float*, float** %v1, align 8, !dbg !18478
  %58 = load float*, float** %v2, align 8, !dbg !18479
  %call61 = call i32 @isect_line_line_v2(float* %arraydecay59, float* %arraydecay60, float* %57, float* %58), !dbg !18480
  %tobool62 = icmp ne i32 %call61, 0, !dbg !18480
  br i1 %tobool62, label %if.then118, label %lor.lhs.false63, !dbg !18481

lor.lhs.false63:                                  ; preds = %lor.lhs.false58
  %arraydecay64 = getelementptr inbounds [2 x float], [2 x float]* %p1, i64 0, i64 0, !dbg !18482
  %arraydecay65 = getelementptr inbounds [2 x float], [2 x float]* %p2, i64 0, i64 0, !dbg !18483
  %59 = load float*, float** %v2, align 8, !dbg !18484
  %60 = load float*, float** %v3, align 8, !dbg !18485
  %call66 = call i32 @isect_line_line_v2(float* %arraydecay64, float* %arraydecay65, float* %59, float* %60), !dbg !18486
  %tobool67 = icmp ne i32 %call66, 0, !dbg !18486
  br i1 %tobool67, label %if.then118, label %lor.lhs.false68, !dbg !18487

lor.lhs.false68:                                  ; preds = %lor.lhs.false63
  %arraydecay69 = getelementptr inbounds [2 x float], [2 x float]* %p1, i64 0, i64 0, !dbg !18488
  %arraydecay70 = getelementptr inbounds [2 x float], [2 x float]* %p2, i64 0, i64 0, !dbg !18489
  %61 = load float*, float** %v3, align 8, !dbg !18490
  %62 = load float*, float** %v4, align 8, !dbg !18491
  %call71 = call i32 @isect_line_line_v2(float* %arraydecay69, float* %arraydecay70, float* %61, float* %62), !dbg !18492
  %tobool72 = icmp ne i32 %call71, 0, !dbg !18492
  br i1 %tobool72, label %if.then118, label %lor.lhs.false73, !dbg !18493

lor.lhs.false73:                                  ; preds = %lor.lhs.false68
  %arraydecay74 = getelementptr inbounds [2 x float], [2 x float]* %p2, i64 0, i64 0, !dbg !18494
  %arraydecay75 = getelementptr inbounds [2 x float], [2 x float]* %p3, i64 0, i64 0, !dbg !18495
  %63 = load float*, float** %v1, align 8, !dbg !18496
  %64 = load float*, float** %v2, align 8, !dbg !18497
  %call76 = call i32 @isect_line_line_v2(float* %arraydecay74, float* %arraydecay75, float* %63, float* %64), !dbg !18498
  %tobool77 = icmp ne i32 %call76, 0, !dbg !18498
  br i1 %tobool77, label %if.then118, label %lor.lhs.false78, !dbg !18499

lor.lhs.false78:                                  ; preds = %lor.lhs.false73
  %arraydecay79 = getelementptr inbounds [2 x float], [2 x float]* %p2, i64 0, i64 0, !dbg !18500
  %arraydecay80 = getelementptr inbounds [2 x float], [2 x float]* %p3, i64 0, i64 0, !dbg !18501
  %65 = load float*, float** %v2, align 8, !dbg !18502
  %66 = load float*, float** %v3, align 8, !dbg !18503
  %call81 = call i32 @isect_line_line_v2(float* %arraydecay79, float* %arraydecay80, float* %65, float* %66), !dbg !18504
  %tobool82 = icmp ne i32 %call81, 0, !dbg !18504
  br i1 %tobool82, label %if.then118, label %lor.lhs.false83, !dbg !18505

lor.lhs.false83:                                  ; preds = %lor.lhs.false78
  %arraydecay84 = getelementptr inbounds [2 x float], [2 x float]* %p2, i64 0, i64 0, !dbg !18506
  %arraydecay85 = getelementptr inbounds [2 x float], [2 x float]* %p3, i64 0, i64 0, !dbg !18507
  %67 = load float*, float** %v3, align 8, !dbg !18508
  %68 = load float*, float** %v4, align 8, !dbg !18509
  %call86 = call i32 @isect_line_line_v2(float* %arraydecay84, float* %arraydecay85, float* %67, float* %68), !dbg !18510
  %tobool87 = icmp ne i32 %call86, 0, !dbg !18510
  br i1 %tobool87, label %if.then118, label %lor.lhs.false88, !dbg !18511

lor.lhs.false88:                                  ; preds = %lor.lhs.false83
  %arraydecay89 = getelementptr inbounds [2 x float], [2 x float]* %p3, i64 0, i64 0, !dbg !18512
  %arraydecay90 = getelementptr inbounds [2 x float], [2 x float]* %p4, i64 0, i64 0, !dbg !18513
  %69 = load float*, float** %v1, align 8, !dbg !18514
  %70 = load float*, float** %v2, align 8, !dbg !18515
  %call91 = call i32 @isect_line_line_v2(float* %arraydecay89, float* %arraydecay90, float* %69, float* %70), !dbg !18516
  %tobool92 = icmp ne i32 %call91, 0, !dbg !18516
  br i1 %tobool92, label %if.then118, label %lor.lhs.false93, !dbg !18517

lor.lhs.false93:                                  ; preds = %lor.lhs.false88
  %arraydecay94 = getelementptr inbounds [2 x float], [2 x float]* %p3, i64 0, i64 0, !dbg !18518
  %arraydecay95 = getelementptr inbounds [2 x float], [2 x float]* %p4, i64 0, i64 0, !dbg !18519
  %71 = load float*, float** %v2, align 8, !dbg !18520
  %72 = load float*, float** %v3, align 8, !dbg !18521
  %call96 = call i32 @isect_line_line_v2(float* %arraydecay94, float* %arraydecay95, float* %71, float* %72), !dbg !18522
  %tobool97 = icmp ne i32 %call96, 0, !dbg !18522
  br i1 %tobool97, label %if.then118, label %lor.lhs.false98, !dbg !18523

lor.lhs.false98:                                  ; preds = %lor.lhs.false93
  %arraydecay99 = getelementptr inbounds [2 x float], [2 x float]* %p3, i64 0, i64 0, !dbg !18524
  %arraydecay100 = getelementptr inbounds [2 x float], [2 x float]* %p4, i64 0, i64 0, !dbg !18525
  %73 = load float*, float** %v3, align 8, !dbg !18526
  %74 = load float*, float** %v4, align 8, !dbg !18527
  %call101 = call i32 @isect_line_line_v2(float* %arraydecay99, float* %arraydecay100, float* %73, float* %74), !dbg !18528
  %tobool102 = icmp ne i32 %call101, 0, !dbg !18528
  br i1 %tobool102, label %if.then118, label %lor.lhs.false103, !dbg !18529

lor.lhs.false103:                                 ; preds = %lor.lhs.false98
  %arraydecay104 = getelementptr inbounds [2 x float], [2 x float]* %p4, i64 0, i64 0, !dbg !18530
  %arraydecay105 = getelementptr inbounds [2 x float], [2 x float]* %p1, i64 0, i64 0, !dbg !18531
  %75 = load float*, float** %v1, align 8, !dbg !18532
  %76 = load float*, float** %v2, align 8, !dbg !18533
  %call106 = call i32 @isect_line_line_v2(float* %arraydecay104, float* %arraydecay105, float* %75, float* %76), !dbg !18534
  %tobool107 = icmp ne i32 %call106, 0, !dbg !18534
  br i1 %tobool107, label %if.then118, label %lor.lhs.false108, !dbg !18535

lor.lhs.false108:                                 ; preds = %lor.lhs.false103
  %arraydecay109 = getelementptr inbounds [2 x float], [2 x float]* %p4, i64 0, i64 0, !dbg !18536
  %arraydecay110 = getelementptr inbounds [2 x float], [2 x float]* %p1, i64 0, i64 0, !dbg !18537
  %77 = load float*, float** %v2, align 8, !dbg !18538
  %78 = load float*, float** %v3, align 8, !dbg !18539
  %call111 = call i32 @isect_line_line_v2(float* %arraydecay109, float* %arraydecay110, float* %77, float* %78), !dbg !18540
  %tobool112 = icmp ne i32 %call111, 0, !dbg !18540
  br i1 %tobool112, label %if.then118, label %lor.lhs.false113, !dbg !18541

lor.lhs.false113:                                 ; preds = %lor.lhs.false108
  %arraydecay114 = getelementptr inbounds [2 x float], [2 x float]* %p4, i64 0, i64 0, !dbg !18542
  %arraydecay115 = getelementptr inbounds [2 x float], [2 x float]* %p1, i64 0, i64 0, !dbg !18543
  %79 = load float*, float** %v3, align 8, !dbg !18544
  %80 = load float*, float** %v4, align 8, !dbg !18545
  %call116 = call i32 @isect_line_line_v2(float* %arraydecay114, float* %arraydecay115, float* %79, float* %80), !dbg !18546
  %tobool117 = icmp ne i32 %call116, 0, !dbg !18546
  br i1 %tobool117, label %if.then118, label %if.end119, !dbg !18547

if.then118:                                       ; preds = %lor.lhs.false113, %lor.lhs.false108, %lor.lhs.false103, %lor.lhs.false98, %lor.lhs.false93, %lor.lhs.false88, %lor.lhs.false83, %lor.lhs.false78, %lor.lhs.false73, %lor.lhs.false68, %lor.lhs.false63, %lor.lhs.false58, %lor.lhs.false54, %lor.lhs.false50, %lor.lhs.false, %if.then43
  store i8 1, i8* %retval, align 1, !dbg !18548
  br label %return, !dbg !18548

if.end119:                                        ; preds = %lor.lhs.false113
  br label %if.end177, !dbg !18550

if.else:                                          ; preds = %if.end28
  %arraydecay120 = getelementptr inbounds [2 x float], [2 x float]* %p1, i64 0, i64 0, !dbg !18551
  %81 = load float*, float** %v1, align 8, !dbg !18554
  %82 = load float*, float** %v2, align 8, !dbg !18555
  %83 = load float*, float** %v3, align 8, !dbg !18556
  %call121 = call i32 @isect_point_tri_v2(float* %arraydecay120, float* %81, float* %82, float* %83), !dbg !18557
  %tobool122 = icmp ne i32 %call121, 0, !dbg !18557
  br i1 %tobool122, label %if.then175, label %lor.lhs.false123, !dbg !18558

lor.lhs.false123:                                 ; preds = %if.else
  %arraydecay124 = getelementptr inbounds [2 x float], [2 x float]* %p2, i64 0, i64 0, !dbg !18559
  %84 = load float*, float** %v1, align 8, !dbg !18560
  %85 = load float*, float** %v2, align 8, !dbg !18561
  %86 = load float*, float** %v3, align 8, !dbg !18562
  %call125 = call i32 @isect_point_tri_v2(float* %arraydecay124, float* %84, float* %85, float* %86), !dbg !18563
  %tobool126 = icmp ne i32 %call125, 0, !dbg !18563
  br i1 %tobool126, label %if.then175, label %lor.lhs.false127, !dbg !18564

lor.lhs.false127:                                 ; preds = %lor.lhs.false123
  %arraydecay128 = getelementptr inbounds [2 x float], [2 x float]* %p3, i64 0, i64 0, !dbg !18565
  %87 = load float*, float** %v1, align 8, !dbg !18566
  %88 = load float*, float** %v2, align 8, !dbg !18567
  %89 = load float*, float** %v3, align 8, !dbg !18568
  %call129 = call i32 @isect_point_tri_v2(float* %arraydecay128, float* %87, float* %88, float* %89), !dbg !18569
  %tobool130 = icmp ne i32 %call129, 0, !dbg !18569
  br i1 %tobool130, label %if.then175, label %lor.lhs.false131, !dbg !18570

lor.lhs.false131:                                 ; preds = %lor.lhs.false127
  %arraydecay132 = getelementptr inbounds [2 x float], [2 x float]* %p4, i64 0, i64 0, !dbg !18571
  %90 = load float*, float** %v1, align 8, !dbg !18572
  %91 = load float*, float** %v2, align 8, !dbg !18573
  %92 = load float*, float** %v3, align 8, !dbg !18574
  %call133 = call i32 @isect_point_tri_v2(float* %arraydecay132, float* %90, float* %91, float* %92), !dbg !18575
  %tobool134 = icmp ne i32 %call133, 0, !dbg !18575
  br i1 %tobool134, label %if.then175, label %lor.lhs.false135, !dbg !18576

lor.lhs.false135:                                 ; preds = %lor.lhs.false131
  %arraydecay136 = getelementptr inbounds [2 x float], [2 x float]* %p1, i64 0, i64 0, !dbg !18577
  %arraydecay137 = getelementptr inbounds [2 x float], [2 x float]* %p2, i64 0, i64 0, !dbg !18578
  %93 = load float*, float** %v1, align 8, !dbg !18579
  %94 = load float*, float** %v2, align 8, !dbg !18580
  %call138 = call i32 @isect_line_line_v2(float* %arraydecay136, float* %arraydecay137, float* %93, float* %94), !dbg !18581
  %tobool139 = icmp ne i32 %call138, 0, !dbg !18581
  br i1 %tobool139, label %if.then175, label %lor.lhs.false140, !dbg !18582

lor.lhs.false140:                                 ; preds = %lor.lhs.false135
  %arraydecay141 = getelementptr inbounds [2 x float], [2 x float]* %p1, i64 0, i64 0, !dbg !18583
  %arraydecay142 = getelementptr inbounds [2 x float], [2 x float]* %p2, i64 0, i64 0, !dbg !18584
  %95 = load float*, float** %v2, align 8, !dbg !18585
  %96 = load float*, float** %v3, align 8, !dbg !18586
  %call143 = call i32 @isect_line_line_v2(float* %arraydecay141, float* %arraydecay142, float* %95, float* %96), !dbg !18587
  %tobool144 = icmp ne i32 %call143, 0, !dbg !18587
  br i1 %tobool144, label %if.then175, label %lor.lhs.false145, !dbg !18588

lor.lhs.false145:                                 ; preds = %lor.lhs.false140
  %arraydecay146 = getelementptr inbounds [2 x float], [2 x float]* %p2, i64 0, i64 0, !dbg !18589
  %arraydecay147 = getelementptr inbounds [2 x float], [2 x float]* %p3, i64 0, i64 0, !dbg !18590
  %97 = load float*, float** %v1, align 8, !dbg !18591
  %98 = load float*, float** %v2, align 8, !dbg !18592
  %call148 = call i32 @isect_line_line_v2(float* %arraydecay146, float* %arraydecay147, float* %97, float* %98), !dbg !18593
  %tobool149 = icmp ne i32 %call148, 0, !dbg !18593
  br i1 %tobool149, label %if.then175, label %lor.lhs.false150, !dbg !18594

lor.lhs.false150:                                 ; preds = %lor.lhs.false145
  %arraydecay151 = getelementptr inbounds [2 x float], [2 x float]* %p2, i64 0, i64 0, !dbg !18595
  %arraydecay152 = getelementptr inbounds [2 x float], [2 x float]* %p3, i64 0, i64 0, !dbg !18596
  %99 = load float*, float** %v2, align 8, !dbg !18597
  %100 = load float*, float** %v3, align 8, !dbg !18598
  %call153 = call i32 @isect_line_line_v2(float* %arraydecay151, float* %arraydecay152, float* %99, float* %100), !dbg !18599
  %tobool154 = icmp ne i32 %call153, 0, !dbg !18599
  br i1 %tobool154, label %if.then175, label %lor.lhs.false155, !dbg !18600

lor.lhs.false155:                                 ; preds = %lor.lhs.false150
  %arraydecay156 = getelementptr inbounds [2 x float], [2 x float]* %p3, i64 0, i64 0, !dbg !18601
  %arraydecay157 = getelementptr inbounds [2 x float], [2 x float]* %p4, i64 0, i64 0, !dbg !18602
  %101 = load float*, float** %v1, align 8, !dbg !18603
  %102 = load float*, float** %v2, align 8, !dbg !18604
  %call158 = call i32 @isect_line_line_v2(float* %arraydecay156, float* %arraydecay157, float* %101, float* %102), !dbg !18605
  %tobool159 = icmp ne i32 %call158, 0, !dbg !18605
  br i1 %tobool159, label %if.then175, label %lor.lhs.false160, !dbg !18606

lor.lhs.false160:                                 ; preds = %lor.lhs.false155
  %arraydecay161 = getelementptr inbounds [2 x float], [2 x float]* %p3, i64 0, i64 0, !dbg !18607
  %arraydecay162 = getelementptr inbounds [2 x float], [2 x float]* %p4, i64 0, i64 0, !dbg !18608
  %103 = load float*, float** %v2, align 8, !dbg !18609
  %104 = load float*, float** %v3, align 8, !dbg !18610
  %call163 = call i32 @isect_line_line_v2(float* %arraydecay161, float* %arraydecay162, float* %103, float* %104), !dbg !18611
  %tobool164 = icmp ne i32 %call163, 0, !dbg !18611
  br i1 %tobool164, label %if.then175, label %lor.lhs.false165, !dbg !18612

lor.lhs.false165:                                 ; preds = %lor.lhs.false160
  %arraydecay166 = getelementptr inbounds [2 x float], [2 x float]* %p4, i64 0, i64 0, !dbg !18613
  %arraydecay167 = getelementptr inbounds [2 x float], [2 x float]* %p1, i64 0, i64 0, !dbg !18614
  %105 = load float*, float** %v1, align 8, !dbg !18615
  %106 = load float*, float** %v2, align 8, !dbg !18616
  %call168 = call i32 @isect_line_line_v2(float* %arraydecay166, float* %arraydecay167, float* %105, float* %106), !dbg !18617
  %tobool169 = icmp ne i32 %call168, 0, !dbg !18617
  br i1 %tobool169, label %if.then175, label %lor.lhs.false170, !dbg !18618

lor.lhs.false170:                                 ; preds = %lor.lhs.false165
  %arraydecay171 = getelementptr inbounds [2 x float], [2 x float]* %p4, i64 0, i64 0, !dbg !18619
  %arraydecay172 = getelementptr inbounds [2 x float], [2 x float]* %p1, i64 0, i64 0, !dbg !18620
  %107 = load float*, float** %v2, align 8, !dbg !18621
  %108 = load float*, float** %v3, align 8, !dbg !18622
  %call173 = call i32 @isect_line_line_v2(float* %arraydecay171, float* %arraydecay172, float* %107, float* %108), !dbg !18623
  %tobool174 = icmp ne i32 %call173, 0, !dbg !18623
  br i1 %tobool174, label %if.then175, label %if.end176, !dbg !18624

if.then175:                                       ; preds = %lor.lhs.false170, %lor.lhs.false165, %lor.lhs.false160, %lor.lhs.false155, %lor.lhs.false150, %lor.lhs.false145, %lor.lhs.false140, %lor.lhs.false135, %lor.lhs.false131, %lor.lhs.false127, %lor.lhs.false123, %if.else
  store i8 1, i8* %retval, align 1, !dbg !18625
  br label %return, !dbg !18625

if.end176:                                        ; preds = %lor.lhs.false170
  br label %if.end177

if.end177:                                        ; preds = %if.end176, %if.end119
  store i8 0, i8* %retval, align 1, !dbg !18627
  br label %return, !dbg !18627

return:                                           ; preds = %if.end177, %if.then175, %if.then118, %if.then
  %109 = load i8, i8* %retval, align 1, !dbg !18628
  ret i8 %109, !dbg !18628
}

declare dso_local i32 @isect_line_line_v2(float*, float*, float*, float*) #2

declare dso_local void @mul_m4_v3([4 x float]*, float*) #2

declare dso_local void @set_imapaintpartial(%struct.ImagePaintPartialRedraw*) #2

declare dso_local void @imapaint_image_update(%struct.SpaceImage*, %struct.Image*, %struct.ImBuf*, i16 signext) #2

declare dso_local void @image_undo_remove_masks() #2

declare dso_local void @DAG_id_tag_update(%struct.ID*, i16 signext) #2

declare dso_local void @BLI_spin_end(i32*) #2

declare dso_local void @image_undo_end_locks() #2

declare dso_local void @paint_delete_blur_kernel(%struct.BlurKernel*) #2

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #2

declare dso_local %struct.Main* @CTX_data_main(%struct.bContext*) #2

declare dso_local i32 @RNA_enum_get(%struct.PointerRNA*, i8*) #2

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

declare dso_local %struct.IDProperty* @IDP_GetPropertyTypeFromGroup(%struct.IDProperty*, i8*, i8 zeroext) #2

declare dso_local void @ED_undo_paint_push_begin(i32, i8*, void (%struct.bContext*, %struct.ListBase*)*, void (%struct.ListBase*)*, i8 (%struct.bContext*, %struct.ListBase*)*) #2

declare dso_local void @ED_image_undo_restore(%struct.bContext*, %struct.ListBase*) #2

declare dso_local void @ED_image_undo_free(%struct.ListBase*) #2

declare dso_local void @GPU_free_image(%struct.Image*) #2

declare dso_local void @RNA_string_get(%struct.PointerRNA*, i8*, i8*) #2

declare dso_local i32 @GPU_max_texture_size() #2

declare dso_local %struct.ImBuf* @ED_view3d_draw_offscreen_imbuf(%struct.Scene*, %struct.View3D*, %struct.ARegion*, i32, i32, i32, i8 zeroext, i32, i8*) #2

declare dso_local %struct.Image* @BKE_image_add_from_imbuf(%struct.ImBuf*) #2

declare dso_local %struct.IDProperty* @IDP_New(i32, %union.IDPropertyTemplate*, i8*) #2

declare dso_local zeroext i8 @IDP_AddToGroup(%struct.IDProperty*, %struct.IDProperty*) #2

declare dso_local void @rename_id(%struct.ID*, i8*) #2

declare dso_local %struct.Object* @CTX_data_active_object(%struct.bContext*) #2

declare dso_local %struct.Material* @BKE_material_add(%struct.Main*, i8*) #2

declare dso_local void @assign_material(%struct.Object*, %struct.Material*, i16 signext, i32) #2

declare dso_local i32 @RNA_enum_from_value(%struct.EnumPropertyItem*, i32) #2

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #2

declare dso_local void @RNA_string_set(%struct.PointerRNA*, i8*, i8*) #2

declare dso_local i32 @WM_operator_props_dialog_popup(%struct.bContext*, %struct.wmOperator*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @proj_paint_add_slot(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !18629 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ma = alloca %struct.Material*, align 8
  %is_bi = alloca i8, align 1
  %ima = alloca %struct.Image*, align 8
  %bmain = alloca %struct.Main*, align 8
  %imanode = alloca %struct.bNode*, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %mtex = alloca %struct.MTex*, align 8
  %type = alloca i32, align 4
  %type_id = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !18632, metadata !DIExpression()), !dbg !18633
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !18634, metadata !DIExpression()), !dbg !18635
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !18636, metadata !DIExpression()), !dbg !18637
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !18638
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !18639
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !18637
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !18640, metadata !DIExpression()), !dbg !18641
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !18642
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !18643
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !18641
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !18644, metadata !DIExpression()), !dbg !18645
  call void @llvm.dbg.declare(metadata i8* %is_bi, metadata !18646, metadata !DIExpression()), !dbg !18647
  %2 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !18648
  %call2 = call zeroext i8 @BKE_scene_uses_blender_internal(%struct.Scene* %2), !dbg !18649
  %conv = zext i8 %call2 to i32, !dbg !18649
  %tobool = icmp ne i32 %conv, 0, !dbg !18649
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !18650

lor.rhs:                                          ; preds = %entry
  %3 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !18651
  %call3 = call zeroext i8 @BKE_scene_uses_blender_game(%struct.Scene* %3), !dbg !18652
  %conv4 = zext i8 %call3 to i32, !dbg !18652
  %tobool5 = icmp ne i32 %conv4, 0, !dbg !18650
  br label %lor.end, !dbg !18650

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool5, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32, !dbg !18650
  %conv6 = trunc i32 %lor.ext to i8, !dbg !18649
  store i8 %conv6, i8* %is_bi, align 1, !dbg !18647
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !18653, metadata !DIExpression()), !dbg !18654
  store %struct.Image* null, %struct.Image** %ima, align 8, !dbg !18654
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !18655
  %tobool7 = icmp ne %struct.Object* %5, null, !dbg !18655
  br i1 %tobool7, label %if.end, label %if.then, !dbg !18657

if.then:                                          ; preds = %lor.end
  store i8 0, i8* %retval, align 1, !dbg !18658
  br label %return, !dbg !18658

if.end:                                           ; preds = %lor.end
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !18659
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !18660
  %actcol = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 32, !dbg !18661
  %8 = load i32, i32* %actcol, align 4, !dbg !18661
  %conv8 = trunc i32 %8 to i16, !dbg !18660
  %call9 = call %struct.Material* @give_current_material(%struct.Object* %6, i16 signext %conv8), !dbg !18662
  store %struct.Material* %call9, %struct.Material** %ma, align 8, !dbg !18663
  %9 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !18664
  %tobool10 = icmp ne %struct.Material* %9, null, !dbg !18664
  br i1 %tobool10, label %if.then11, label %if.end60, !dbg !18666

if.then11:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !18667, metadata !DIExpression()), !dbg !18733
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !18734
  %call12 = call %struct.Main* @CTX_data_main(%struct.bContext* %10), !dbg !18735
  store %struct.Main* %call12, %struct.Main** %bmain, align 8, !dbg !18733
  %11 = load i8, i8* %is_bi, align 1, !dbg !18736
  %tobool13 = icmp ne i8 %11, 0, !dbg !18736
  br i1 %tobool13, label %if.else, label %land.lhs.true, !dbg !18738

land.lhs.true:                                    ; preds = %if.then11
  %12 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !18739
  %call14 = call zeroext i8 @BKE_scene_use_new_shading_nodes(%struct.Scene* %12), !dbg !18740
  %conv15 = zext i8 %call14 to i32, !dbg !18740
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !18740
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !18741

if.then17:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bNode** %imanode, metadata !18742, metadata !DIExpression()), !dbg !18744
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !18745, metadata !DIExpression()), !dbg !18748
  %13 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !18749
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %13, i32 0, i32 103, !dbg !18750
  %14 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !18750
  store %struct.bNodeTree* %14, %struct.bNodeTree** %ntree, align 8, !dbg !18748
  %15 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !18751
  %tobool18 = icmp ne %struct.bNodeTree* %15, null, !dbg !18751
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !18753

if.then19:                                        ; preds = %if.then17
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !18754
  %17 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !18756
  %id = getelementptr inbounds %struct.Material, %struct.Material* %17, i32 0, i32 0, !dbg !18757
  call void @ED_node_shader_default(%struct.bContext* %16, %struct.ID* %id), !dbg !18758
  %18 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !18759
  %nodetree20 = getelementptr inbounds %struct.Material, %struct.Material* %18, i32 0, i32 103, !dbg !18760
  %19 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree20, align 8, !dbg !18760
  store %struct.bNodeTree* %19, %struct.bNodeTree** %ntree, align 8, !dbg !18761
  br label %if.end21, !dbg !18762

if.end21:                                         ; preds = %if.then19, %if.then17
  %20 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !18763
  %use_nodes = getelementptr inbounds %struct.Material, %struct.Material* %20, i32 0, i32 77, !dbg !18764
  store i8 1, i8* %use_nodes, align 1, !dbg !18765
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !18766
  %22 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !18767
  %call22 = call %struct.bNode* @nodeAddStaticNode(%struct.bContext* %21, %struct.bNodeTree* %22, i32 143), !dbg !18768
  store %struct.bNode* %call22, %struct.bNode** %imanode, align 8, !dbg !18769
  %23 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !18770
  %24 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !18771
  %call23 = call %struct.Image* @proj_paint_image_create(%struct.wmOperator* %23, %struct.Main* %24), !dbg !18772
  store %struct.Image* %call23, %struct.Image** %ima, align 8, !dbg !18773
  %25 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !18774
  %id24 = getelementptr inbounds %struct.Image, %struct.Image* %25, i32 0, i32 0, !dbg !18775
  %26 = load %struct.bNode*, %struct.bNode** %imanode, align 8, !dbg !18776
  %id25 = getelementptr inbounds %struct.bNode, %struct.bNode* %26, i32 0, i32 20, !dbg !18777
  store %struct.ID* %id24, %struct.ID** %id25, align 8, !dbg !18778
  %27 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !18779
  %28 = load %struct.bNode*, %struct.bNode** %imanode, align 8, !dbg !18780
  call void @nodeSetActive(%struct.bNodeTree* %27, %struct.bNode* %28), !dbg !18781
  %29 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !18782
  %call26 = call %struct.Main* @CTX_data_main(%struct.bContext* %29), !dbg !18783
  %30 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !18784
  call void @ntreeUpdateTree(%struct.Main* %call26, %struct.bNodeTree* %30), !dbg !18785
  br label %if.end54, !dbg !18786

if.else:                                          ; preds = %land.lhs.true, %if.then11
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex, metadata !18787, metadata !DIExpression()), !dbg !18789
  %31 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !18790
  %id27 = getelementptr inbounds %struct.Material, %struct.Material* %31, i32 0, i32 0, !dbg !18791
  %call28 = call %struct.MTex* @add_mtex_id(%struct.ID* %id27, i32 -1), !dbg !18792
  store %struct.MTex* %call28, %struct.MTex** %mtex, align 8, !dbg !18789
  %32 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !18793
  %tobool29 = icmp ne %struct.MTex* %32, null, !dbg !18793
  br i1 %tobool29, label %if.then30, label %if.end53, !dbg !18795

if.then30:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %type, metadata !18796, metadata !DIExpression()), !dbg !18798
  store i32 1, i32* %type, align 4, !dbg !18798
  call void @llvm.dbg.declare(metadata i32* %type_id, metadata !18799, metadata !DIExpression()), !dbg !18800
  store i32 0, i32* %type_id, align 4, !dbg !18800
  %33 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !18801
  %tobool31 = icmp ne %struct.wmOperator* %33, null, !dbg !18801
  br i1 %tobool31, label %if.then32, label %if.end40, !dbg !18803

if.then32:                                        ; preds = %if.then30
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18804, metadata !DIExpression()), !dbg !18806
  %34 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !18807
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %34, i32 0, i32 7, !dbg !18808
  %35 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !18808
  %call33 = call i32 @RNA_enum_get(%struct.PointerRNA* %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0)), !dbg !18809
  store i32 %call33, i32* %type, align 4, !dbg !18810
  store i32 0, i32* %i, align 4, !dbg !18811
  br label %for.cond, !dbg !18813

for.cond:                                         ; preds = %for.inc, %if.then32
  %36 = load i32, i32* %i, align 4, !dbg !18814
  %conv34 = sext i32 %36 to i64, !dbg !18814
  %cmp = icmp ult i64 %conv34, 15, !dbg !18816
  br i1 %cmp, label %for.body, label %for.end, !dbg !18817

for.body:                                         ; preds = %for.cond
  %37 = load i32, i32* %i, align 4, !dbg !18818
  %idxprom = sext i32 %37 to i64, !dbg !18821
  %arrayidx = getelementptr inbounds [15 x %struct.EnumPropertyItem], [15 x %struct.EnumPropertyItem]* @layer_type_items, i64 0, i64 %idxprom, !dbg !18821
  %value = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx, i32 0, i32 0, !dbg !18822
  %38 = load i32, i32* %value, align 8, !dbg !18822
  %39 = load i32, i32* %type, align 4, !dbg !18823
  %cmp36 = icmp eq i32 %38, %39, !dbg !18824
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !18825

if.then38:                                        ; preds = %for.body
  %40 = load i32, i32* %i, align 4, !dbg !18826
  store i32 %40, i32* %type_id, align 4, !dbg !18828
  br label %for.end, !dbg !18829

if.end39:                                         ; preds = %for.body
  br label %for.inc, !dbg !18830

for.inc:                                          ; preds = %if.end39
  %41 = load i32, i32* %i, align 4, !dbg !18831
  %inc = add nsw i32 %41, 1, !dbg !18831
  store i32 %inc, i32* %i, align 4, !dbg !18831
  br label %for.cond, !dbg !18832, !llvm.loop !18833

for.end:                                          ; preds = %if.then38, %for.cond
  br label %if.end40, !dbg !18835

if.end40:                                         ; preds = %for.end, %if.then30
  %42 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !18836
  %43 = load i32, i32* %type_id, align 4, !dbg !18837
  %idxprom41 = sext i32 %43 to i64, !dbg !18837
  %arrayidx42 = getelementptr inbounds [15 x %struct.EnumPropertyItem], [15 x %struct.EnumPropertyItem]* @layer_type_items, i64 0, i64 %idxprom41, !dbg !18837
  %name = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx42, i32 0, i32 3, !dbg !18837
  %44 = load i8*, i8** %name, align 8, !dbg !18837
  %call43 = call %struct.Tex* @add_texture(%struct.Main* %42, i8* %44), !dbg !18838
  %45 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !18839
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %45, i32 0, i32 5, !dbg !18840
  store %struct.Tex* %call43, %struct.Tex** %tex, align 8, !dbg !18841
  %46 = load i32, i32* %type, align 4, !dbg !18842
  %conv44 = trunc i32 %46 to i16, !dbg !18842
  %47 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !18843
  %mapto = getelementptr inbounds %struct.MTex, %struct.MTex* %47, i32 0, i32 1, !dbg !18844
  store i16 %conv44, i16* %mapto, align 2, !dbg !18845
  %48 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !18846
  %tex45 = getelementptr inbounds %struct.MTex, %struct.MTex* %48, i32 0, i32 5, !dbg !18848
  %49 = load %struct.Tex*, %struct.Tex** %tex45, align 8, !dbg !18848
  %tobool46 = icmp ne %struct.Tex* %49, null, !dbg !18846
  br i1 %tobool46, label %if.then47, label %if.end51, !dbg !18849

if.then47:                                        ; preds = %if.end40
  %50 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !18850
  %51 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !18852
  %call48 = call %struct.Image* @proj_paint_image_create(%struct.wmOperator* %50, %struct.Main* %51), !dbg !18853
  %52 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !18854
  %tex49 = getelementptr inbounds %struct.MTex, %struct.MTex* %52, i32 0, i32 5, !dbg !18855
  %53 = load %struct.Tex*, %struct.Tex** %tex49, align 8, !dbg !18855
  %ima50 = getelementptr inbounds %struct.Tex, %struct.Tex* %53, i32 0, i32 54, !dbg !18856
  store %struct.Image* %call48, %struct.Image** %ima50, align 8, !dbg !18857
  store %struct.Image* %call48, %struct.Image** %ima, align 8, !dbg !18858
  br label %if.end51, !dbg !18859

if.end51:                                         ; preds = %if.then47, %if.end40
  %54 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !18860
  %55 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !18861
  %tex52 = getelementptr inbounds %struct.MTex, %struct.MTex* %55, i32 0, i32 5, !dbg !18862
  %56 = load %struct.Tex*, %struct.Tex** %tex52, align 8, !dbg !18862
  %57 = bitcast %struct.Tex* %56 to i8*, !dbg !18861
  call void @WM_event_add_notifier(%struct.bContext* %54, i32 117440515, i8* %57), !dbg !18863
  br label %if.end53, !dbg !18864

if.end53:                                         ; preds = %if.end51, %if.else
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.end21
  %58 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !18865
  %tobool55 = icmp ne %struct.Image* %58, null, !dbg !18865
  br i1 %tobool55, label %if.then56, label %if.end59, !dbg !18867

if.then56:                                        ; preds = %if.end54
  %59 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !18868
  %60 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !18870
  call void @BKE_texpaint_slot_refresh_cache(%struct.Scene* %59, %struct.Material* %60), !dbg !18871
  %61 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !18872
  call void @BKE_image_signal(%struct.Image* %61, %struct.ImageUser* null, i32 6), !dbg !18873
  %62 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !18874
  %63 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !18875
  %64 = bitcast %struct.Image* %63 to i8*, !dbg !18875
  call void @WM_event_add_notifier(%struct.bContext* %62, i32 167772163, i8* %64), !dbg !18876
  %65 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !18877
  %id57 = getelementptr inbounds %struct.Material, %struct.Material* %65, i32 0, i32 0, !dbg !18878
  call void @DAG_id_tag_update(%struct.ID* %id57, i16 signext 0), !dbg !18879
  %66 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !18880
  %call58 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %66), !dbg !18881
  call void @ED_area_tag_redraw(%struct.ScrArea* %call58), !dbg !18882
  store i8 1, i8* %retval, align 1, !dbg !18883
  br label %return, !dbg !18883

if.end59:                                         ; preds = %if.end54
  br label %if.end60, !dbg !18884

if.end60:                                         ; preds = %if.end59, %if.end
  store i8 0, i8* %retval, align 1, !dbg !18885
  br label %return, !dbg !18885

return:                                           ; preds = %if.end60, %if.then56, %if.then
  %67 = load i8, i8* %retval, align 1, !dbg !18886
  ret i8 %67, !dbg !18886
}

declare dso_local zeroext i8 @BKE_scene_uses_blender_internal(%struct.Scene*) #2

declare dso_local zeroext i8 @BKE_scene_uses_blender_game(%struct.Scene*) #2

declare dso_local void @ED_node_shader_default(%struct.bContext*, %struct.ID*) #2

declare dso_local %struct.bNode* @nodeAddStaticNode(%struct.bContext*, %struct.bNodeTree*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.Image* @proj_paint_image_create(%struct.wmOperator* %op, %struct.Main* %bmain) #0 !dbg !18887 {
entry:
  %op.addr = alloca %struct.wmOperator*, align 8
  %bmain.addr = alloca %struct.Main*, align 8
  %ima = alloca %struct.Image*, align 8
  %color = alloca [4 x float], align 16
  %imagename = alloca [64 x i8], align 16
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %use_float = alloca i8, align 1
  %gen_type = alloca i16, align 2
  %alpha = alloca i8, align 1
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !18890, metadata !DIExpression()), !dbg !18891
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !18892, metadata !DIExpression()), !dbg !18893
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !18894, metadata !DIExpression()), !dbg !18895
  call void @llvm.dbg.declare(metadata [4 x float]* %color, metadata !18896, metadata !DIExpression()), !dbg !18897
  %0 = bitcast [4 x float]* %color to i8*, !dbg !18897
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([4 x float]* @__const.proj_paint_image_create.color to i8*), i64 16, i1 false), !dbg !18897
  call void @llvm.dbg.declare(metadata [64 x i8]* %imagename, metadata !18898, metadata !DIExpression()), !dbg !18899
  %1 = bitcast [64 x i8]* %imagename to i8*, !dbg !18899
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %1, i8* align 16 getelementptr inbounds ([64 x i8], [64 x i8]* @__const.proj_paint_image_create.imagename, i32 0, i32 0), i64 64, i1 false), !dbg !18899
  call void @llvm.dbg.declare(metadata i32* %width, metadata !18900, metadata !DIExpression()), !dbg !18901
  store i32 1024, i32* %width, align 4, !dbg !18901
  call void @llvm.dbg.declare(metadata i32* %height, metadata !18902, metadata !DIExpression()), !dbg !18903
  store i32 1024, i32* %height, align 4, !dbg !18903
  call void @llvm.dbg.declare(metadata i8* %use_float, metadata !18904, metadata !DIExpression()), !dbg !18905
  store i8 0, i8* %use_float, align 1, !dbg !18905
  call void @llvm.dbg.declare(metadata i16* %gen_type, metadata !18906, metadata !DIExpression()), !dbg !18907
  store i16 0, i16* %gen_type, align 2, !dbg !18907
  call void @llvm.dbg.declare(metadata i8* %alpha, metadata !18908, metadata !DIExpression()), !dbg !18909
  store i8 0, i8* %alpha, align 1, !dbg !18909
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !18910
  %tobool = icmp ne %struct.wmOperator* %2, null, !dbg !18910
  br i1 %tobool, label %if.then, label %if.end, !dbg !18912

if.then:                                          ; preds = %entry
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !18913
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !18915
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !18915
  %call = call i32 @RNA_int_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0)), !dbg !18916
  store i32 %call, i32* %width, align 4, !dbg !18917
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !18918
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !18919
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !18919
  %call2 = call i32 @RNA_int_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)), !dbg !18920
  store i32 %call2, i32* %height, align 4, !dbg !18921
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !18922
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 7, !dbg !18923
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !18923
  %call4 = call i32 @RNA_boolean_get(%struct.PointerRNA* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0)), !dbg !18924
  %conv = trunc i32 %call4 to i8, !dbg !18924
  store i8 %conv, i8* %use_float, align 1, !dbg !18925
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !18926
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 7, !dbg !18927
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !18927
  %call6 = call i32 @RNA_enum_get(%struct.PointerRNA* %10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i64 0, i64 0)), !dbg !18928
  %conv7 = trunc i32 %call6 to i16, !dbg !18928
  store i16 %conv7, i16* %gen_type, align 2, !dbg !18929
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !18930
  %ptr8 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %11, i32 0, i32 7, !dbg !18931
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr8, align 8, !dbg !18931
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %color, i64 0, i64 0, !dbg !18932
  call void @RNA_float_get_array(%struct.PointerRNA* %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0), float* %arraydecay), !dbg !18933
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !18934
  %ptr9 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 7, !dbg !18935
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr9, align 8, !dbg !18935
  %call10 = call i32 @RNA_boolean_get(%struct.PointerRNA* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0)), !dbg !18936
  %conv11 = trunc i32 %call10 to i8, !dbg !18936
  store i8 %conv11, i8* %alpha, align 1, !dbg !18937
  %15 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !18938
  %ptr12 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %15, i32 0, i32 7, !dbg !18939
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr12, align 8, !dbg !18939
  %arraydecay13 = getelementptr inbounds [64 x i8], [64 x i8]* %imagename, i64 0, i64 0, !dbg !18940
  call void @RNA_string_get(%struct.PointerRNA* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i8* %arraydecay13), !dbg !18941
  br label %if.end, !dbg !18942

if.end:                                           ; preds = %if.then, %entry
  %17 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !18943
  %18 = load i32, i32* %width, align 4, !dbg !18944
  %19 = load i32, i32* %height, align 4, !dbg !18945
  %arraydecay14 = getelementptr inbounds [64 x i8], [64 x i8]* %imagename, i64 0, i64 0, !dbg !18946
  %20 = load i8, i8* %alpha, align 1, !dbg !18947
  %conv15 = zext i8 %20 to i32, !dbg !18947
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !18947
  %21 = zext i1 %tobool16 to i64, !dbg !18947
  %cond = select i1 %tobool16, i32 32, i32 24, !dbg !18947
  %22 = load i8, i8* %use_float, align 1, !dbg !18948
  %conv17 = zext i8 %22 to i32, !dbg !18948
  %23 = load i16, i16* %gen_type, align 2, !dbg !18949
  %arraydecay18 = getelementptr inbounds [4 x float], [4 x float]* %color, i64 0, i64 0, !dbg !18950
  %call19 = call %struct.Image* @BKE_image_add_generated(%struct.Main* %17, i32 %18, i32 %19, i8* %arraydecay14, i32 %cond, i32 %conv17, i16 signext %23, float* %arraydecay18), !dbg !18951
  store %struct.Image* %call19, %struct.Image** %ima, align 8, !dbg !18952
  %24 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !18953
  ret %struct.Image* %24, !dbg !18954
}

declare dso_local void @nodeSetActive(%struct.bNodeTree*, %struct.bNode*) #2

declare dso_local void @ntreeUpdateTree(%struct.Main*, %struct.bNodeTree*) #2

declare dso_local %struct.MTex* @add_mtex_id(%struct.ID*, i32) #2

declare dso_local %struct.Tex* @add_texture(%struct.Main*, i8*) #2

declare dso_local void @BKE_image_signal(%struct.Image*, %struct.ImageUser*, i32) #2

declare dso_local void @ED_area_tag_redraw(%struct.ScrArea*) #2

declare dso_local %struct.ScrArea* @CTX_wm_area(%struct.bContext*) #2

declare dso_local i32 @RNA_int_get(%struct.PointerRNA*, i8*) #2

declare dso_local i32 @RNA_boolean_get(%struct.PointerRNA*, i8*) #2

declare dso_local void @RNA_float_get_array(%struct.PointerRNA*, i8*, float*) #2

declare dso_local %struct.Image* @BKE_image_add_generated(%struct.Main*, i32, i32, i8*, i32, i32, i16 signext, float*) #2

declare dso_local void @id_us_min(%struct.ID*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!3431}
!llvm.module.flags = !{!4157, !4158, !4159}
!llvm.ident = !{!4160}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "default_color", scope: !2, file: !3, line: 5149, type: !496, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "PAINT_OT_add_texture_paint_slot", scope: !3, file: !3, line: 5146, type: !4, scopeLine: 5147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!3 = !DIFile(filename: "blender/source/blender/editors/sculpt_paint/paint_image_proj.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{null, !6}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !8, line: 568, baseType: !9)
!8 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !8, line: 508, size: 1536, elements: !10)
!10 = !{!11, !15, !16, !17, !18, !3382, !3386, !3392, !3396, !3397, !3401, !3402, !3403, !3404, !3408, !3409, !3424, !3425, !3429, !3430}
!11 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9, file: !8, line: 509, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14)
!14 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !9, file: !8, line: 510, baseType: !12, size: 64, offset: 64)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !9, file: !8, line: 511, baseType: !12, size: 64, offset: 128)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !9, file: !8, line: 512, baseType: !12, size: 64, offset: 192)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !9, file: !8, line: 518, baseType: !19, size: 64, offset: 256)
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!20 = !DISubroutineType(types: !21)
!21 = !{!22, !23, !26}
!22 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!24 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !25, line: 44, flags: DIFlagFwdDecl)
!25 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!27 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !28, line: 328, size: 1344, elements: !29)
!28 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!29 = !{!30, !31, !32, !36, !68, !70, !71, !72, !85, !3377, !3378, !3379, !3380, !3381}
!30 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !27, file: !28, line: 329, baseType: !26, size: 64)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !27, file: !28, line: 329, baseType: !26, size: 64, offset: 64)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !27, file: !28, line: 332, baseType: !33, size: 512, offset: 128)
!33 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 512, elements: !34)
!34 = !{!35}
!35 = !DISubrange(count: 64)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !27, file: !28, line: 333, baseType: !37, size: 64, offset: 640)
!37 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !39, line: 75, baseType: !40)
!39 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!40 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !39, line: 62, size: 1024, elements: !41)
!41 = !{!42, !44, !45, !46, !47, !49, !50, !51, !66, !67}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !40, file: !39, line: 63, baseType: !43, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !40, file: !39, line: 63, baseType: !43, size: 64, offset: 64)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !40, file: !39, line: 64, baseType: !14, size: 8, offset: 128)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !40, file: !39, line: 64, baseType: !14, size: 8, offset: 136)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !40, file: !39, line: 65, baseType: !48, size: 16, offset: 144)
!48 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !40, file: !39, line: 66, baseType: !33, size: 512, offset: 160)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !40, file: !39, line: 67, baseType: !22, size: 32, offset: 672)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !40, file: !39, line: 69, baseType: !52, size: 256, offset: 704)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !39, line: 60, baseType: !53)
!53 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !39, line: 48, size: 256, elements: !54)
!54 = !{!55, !57, !64, !65}
!55 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !53, file: !39, line: 49, baseType: !56, size: 64)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !53, file: !39, line: 58, baseType: !58, size: 128, offset: 64)
!58 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !59, line: 71, baseType: !60)
!59 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!60 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !59, line: 69, size: 128, elements: !61)
!61 = !{!62, !63}
!62 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !60, file: !59, line: 70, baseType: !56, size: 64)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !60, file: !59, line: 70, baseType: !56, size: 64, offset: 64)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !53, file: !39, line: 59, baseType: !22, size: 32, offset: 192)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !53, file: !39, line: 59, baseType: !22, size: 32, offset: 224)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !40, file: !39, line: 70, baseType: !22, size: 32, offset: 960)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !40, file: !39, line: 74, baseType: !22, size: 32, offset: 992)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !27, file: !28, line: 336, baseType: !69, size: 64, offset: 704)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !27, file: !28, line: 337, baseType: !56, size: 64, offset: 768)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !27, file: !28, line: 338, baseType: !56, size: 64, offset: 832)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !27, file: !28, line: 340, baseType: !73, size: 64, offset: 896)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!74 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !25, line: 55, size: 192, elements: !75)
!75 = !{!76, !80, !84}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !74, file: !25, line: 58, baseType: !77, size: 64)
!77 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !74, file: !25, line: 56, size: 64, elements: !78)
!78 = !{!79}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !77, file: !25, line: 57, baseType: !56, size: 64)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !74, file: !25, line: 60, baseType: !81, size: 64, offset: 64)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!82 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !83, line: 335, flags: DIFlagFwdDecl)
!83 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!84 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !74, file: !25, line: 61, baseType: !56, size: 64, offset: 128)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !27, file: !28, line: 341, baseType: !86, size: 64, offset: 960)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 64)
!87 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !28, line: 106, size: 320, elements: !88)
!88 = !{!89, !90, !91, !92, !93, !94}
!89 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !87, file: !28, line: 107, baseType: !58, size: 128)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !87, file: !28, line: 108, baseType: !22, size: 32, offset: 128)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !87, file: !28, line: 109, baseType: !22, size: 32, offset: 160)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !87, file: !28, line: 110, baseType: !22, size: 32, offset: 192)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !87, file: !28, line: 110, baseType: !22, size: 32, offset: 224)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !87, file: !28, line: 111, baseType: !95, size: 64, offset: 256)
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64)
!96 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !8, line: 490, size: 768, elements: !97)
!97 = !{!98, !99, !100, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376}
!98 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !96, file: !8, line: 491, baseType: !95, size: 64)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !96, file: !8, line: 491, baseType: !95, size: 64, offset: 64)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !96, file: !8, line: 493, baseType: !101, size: 64, offset: 128)
!101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 64)
!102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !28, line: 169, size: 2048, elements: !103)
!103 = !{!104, !105, !106, !107, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3343, !3346, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367}
!104 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !102, file: !28, line: 170, baseType: !101, size: 64)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !102, file: !28, line: 170, baseType: !101, size: 64, offset: 64)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !102, file: !28, line: 172, baseType: !56, size: 64, offset: 128)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !102, file: !28, line: 174, baseType: !108, size: 64, offset: 192)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !110, line: 49, size: 1984, elements: !111)
!110 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!111 = !{!112, !148, !149, !150, !151, !152, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !109, file: !110, line: 50, baseType: !113, size: 960)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !39, line: 130, baseType: !114)
!114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !39, line: 117, size: 960, elements: !115)
!115 = !{!116, !117, !118, !120, !139, !143, !144, !145, !146, !147}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !114, file: !39, line: 118, baseType: !56, size: 64)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !114, file: !39, line: 118, baseType: !56, size: 64, offset: 64)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !114, file: !39, line: 119, baseType: !119, size: 64, offset: 128)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !114, file: !39, line: 120, baseType: !121, size: 64, offset: 192)
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 64)
!122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !39, line: 136, size: 17600, elements: !123)
!123 = !{!124, !125, !127, !130, !134, !135, !136}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !122, file: !39, line: 137, baseType: !113, size: 960)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !122, file: !39, line: 138, baseType: !126, size: 64, offset: 960)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !122, file: !39, line: 139, baseType: !128, size: 64, offset: 1024)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64)
!129 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !39, line: 43, flags: DIFlagFwdDecl)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !122, file: !39, line: 140, baseType: !131, size: 8192, offset: 1088)
!131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 8192, elements: !132)
!132 = !{!133}
!133 = !DISubrange(count: 1024)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !122, file: !39, line: 141, baseType: !131, size: 8192, offset: 9280)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !122, file: !39, line: 148, baseType: !121, size: 64, offset: 17472)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !122, file: !39, line: 150, baseType: !137, size: 64, offset: 17536)
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 64)
!138 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !39, line: 45, flags: DIFlagFwdDecl)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !114, file: !39, line: 121, baseType: !140, size: 528, offset: 256)
!140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 528, elements: !141)
!141 = !{!142}
!142 = !DISubrange(count: 66)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !114, file: !39, line: 126, baseType: !48, size: 16, offset: 784)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !114, file: !39, line: 127, baseType: !22, size: 32, offset: 800)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !114, file: !39, line: 128, baseType: !22, size: 32, offset: 832)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !114, file: !39, line: 128, baseType: !22, size: 32, offset: 864)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !114, file: !39, line: 129, baseType: !37, size: 64, offset: 896)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !109, file: !110, line: 52, baseType: !58, size: 128, offset: 960)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !109, file: !110, line: 53, baseType: !58, size: 128, offset: 1088)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !109, file: !110, line: 54, baseType: !58, size: 128, offset: 1216)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !109, file: !110, line: 55, baseType: !58, size: 128, offset: 1344)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !109, file: !110, line: 57, baseType: !153, size: 64, offset: 1472)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64)
!154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !155, line: 1216, size: 39680, elements: !156)
!155 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!156 = !{!157, !158, !162, !2126, !2207, !2208, !2209, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2576, !2902, !2905, !3145, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3167, !3168, !3169, !3170, !3171, !3179, !3245, !3252, !3253, !3260, !3261, !3262, !3263, !3264, !3265, !3266}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !154, file: !155, line: 1217, baseType: !113, size: 960)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !154, file: !155, line: 1218, baseType: !159, size: 64, offset: 960)
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64)
!160 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !161, line: 45, flags: DIFlagFwdDecl)
!161 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!162 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !154, file: !155, line: 1220, baseType: !163, size: 64, offset: 1024)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64)
!164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !165, line: 115, size: 11392, elements: !166)
!165 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!166 = !{!167, !168, !169, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !282, !292, !306, !307, !349, !350, !353, !354, !370, !371, !372, !373, !374, !375, !376, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1639, !1642, !1643, !1644, !1645, !1646, !1647, !1650, !1653, !2090, !2091, !2097, !2098, !2099, !2100, !2101, !2102, !2104, !2107, !2110, !2111, !2114, !2115}
!167 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !164, file: !165, line: 116, baseType: !113, size: 960)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !164, file: !165, line: 117, baseType: !159, size: 64, offset: 960)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !164, file: !165, line: 119, baseType: !170, size: 64, offset: 1024)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64)
!171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !172, line: 155, size: 1856, elements: !173)
!172 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_paint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!173 = !{!174, !177, !191, !200, !207, !208, !209, !211, !215, !217, !226, !230, !231, !232, !234, !237, !240, !241, !242, !243, !244, !248, !249, !250, !252, !253, !257, !258, !261, !264, !265, !266, !267}
!174 = !DIDerivedType(tag: DW_TAG_member, name: "multires", scope: !171, file: !172, line: 157, baseType: !175, size: 64)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!176 = !DICompositeType(tag: DW_TAG_structure_type, name: "MultiresModifierData", file: !172, line: 157, flags: DIFlagFwdDecl)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !171, file: !172, line: 158, baseType: !178, size: 64, offset: 64)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64)
!179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !180, line: 65, size: 160, elements: !181)
!180 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!181 = !{!182, !187, !189, !190}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !179, file: !180, line: 66, baseType: !183, size: 96)
!183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 96, elements: !185)
!184 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!185 = !{!186}
!186 = !DISubrange(count: 3)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !179, file: !180, line: 67, baseType: !188, size: 48, offset: 96)
!188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 48, elements: !185)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !179, file: !180, line: 68, baseType: !14, size: 8, offset: 144)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !179, file: !180, line: 68, baseType: !14, size: 8, offset: 152)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !171, file: !172, line: 159, baseType: !192, size: 64, offset: 128)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64)
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !180, line: 79, size: 96, elements: !194)
!194 = !{!195, !196, !197, !198, !199}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !193, file: !180, line: 81, baseType: !22, size: 32)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !193, file: !180, line: 82, baseType: !22, size: 32, offset: 32)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !193, file: !180, line: 83, baseType: !48, size: 16, offset: 64)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !193, file: !180, line: 84, baseType: !14, size: 8, offset: 80)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !193, file: !180, line: 84, baseType: !14, size: 8, offset: 88)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !171, file: !172, line: 160, baseType: !201, size: 64, offset: 192)
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !180, line: 88, size: 64, elements: !203)
!203 = !{!204, !206}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !202, file: !180, line: 89, baseType: !205, size: 32)
!205 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !202, file: !180, line: 90, baseType: !205, size: 32, offset: 32)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !171, file: !172, line: 161, baseType: !22, size: 32, offset: 256)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !171, file: !172, line: 161, baseType: !22, size: 32, offset: 288)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "face_normals", scope: !171, file: !172, line: 162, baseType: !210, size: 64, offset: 320)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "kb", scope: !171, file: !172, line: 163, baseType: !212, size: 64, offset: 384)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!213 = !DICompositeType(tag: DW_TAG_structure_type, name: "KeyBlock", file: !214, line: 92, flags: DIFlagFwdDecl)
!214 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!215 = !DIDerivedType(tag: DW_TAG_member, name: "vmask", scope: !171, file: !172, line: 164, baseType: !216, size: 64, offset: 448)
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "pmap", scope: !171, file: !172, line: 167, baseType: !218, size: 64, offset: 512)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !220)
!220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !221, line: 96, size: 128, elements: !222)
!221 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_mesh_mapping.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!222 = !{!223, !225}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !220, file: !221, line: 97, baseType: !224, size: 64)
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !220, file: !221, line: 98, baseType: !22, size: 32, offset: 64)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !171, file: !172, line: 170, baseType: !227, size: 64, offset: 576)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64)
!228 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !229, line: 44, flags: DIFlagFwdDecl)
!229 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!230 = !DIDerivedType(tag: DW_TAG_member, name: "cd_vert_node_offset", scope: !171, file: !172, line: 171, baseType: !22, size: 32, offset: 640)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "cd_face_node_offset", scope: !171, file: !172, line: 172, baseType: !22, size: 32, offset: 672)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "bm_smooth_shading", scope: !171, file: !172, line: 173, baseType: !233, size: 8, offset: 704)
!233 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "bm_log", scope: !171, file: !172, line: 175, baseType: !235, size: 64, offset: 768)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64)
!236 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMLog", file: !172, line: 175, flags: DIFlagFwdDecl)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "pbvh", scope: !171, file: !172, line: 178, baseType: !238, size: 64, offset: 832)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !214, line: 100, flags: DIFlagFwdDecl)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "show_diffuse_color", scope: !171, file: !172, line: 179, baseType: !233, size: 8, offset: 896)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers_active", scope: !171, file: !172, line: 182, baseType: !233, size: 8, offset: 904)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "orig_cos", scope: !171, file: !172, line: 183, baseType: !210, size: 64, offset: 960)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "deform_cos", scope: !171, file: !172, line: 184, baseType: !210, size: 64, offset: 1024)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "deform_imats", scope: !171, file: !172, line: 185, baseType: !245, size: 64, offset: 1088)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 288, elements: !247)
!247 = !{!186, !186}
!248 = !DIDerivedType(tag: DW_TAG_member, name: "partial_redraw", scope: !171, file: !172, line: 188, baseType: !233, size: 8, offset: 1152)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_side", scope: !171, file: !172, line: 191, baseType: !205, size: 32, offset: 1184)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "texcache", scope: !171, file: !172, line: 191, baseType: !251, size: 64, offset: 1216)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_actual", scope: !171, file: !172, line: 191, baseType: !205, size: 32, offset: 1280)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "tex_pool", scope: !171, file: !172, line: 192, baseType: !254, size: 64, offset: 1344)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 64)
!255 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !256, line: 33, flags: DIFlagFwdDecl)
!256 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_brush.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!257 = !DIDerivedType(tag: DW_TAG_member, name: "layer_co", scope: !171, file: !172, line: 195, baseType: !210, size: 64, offset: 1408)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "stroke", scope: !171, file: !172, line: 197, baseType: !259, size: 64, offset: 1472)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!260 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptStroke", file: !172, line: 197, flags: DIFlagFwdDecl)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !171, file: !172, line: 198, baseType: !262, size: 64, offset: 1536)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!263 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrokeCache", file: !172, line: 59, flags: DIFlagFwdDecl)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke_valid", scope: !171, file: !172, line: 201, baseType: !233, size: 8, offset: 1600)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke", scope: !171, file: !172, line: 202, baseType: !183, size: 96, offset: 1632)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_accum", scope: !171, file: !172, line: 204, baseType: !183, size: 96, offset: 1728)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_counter", scope: !171, file: !172, line: 205, baseType: !22, size: 32, offset: 1824)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !164, file: !165, line: 121, baseType: !48, size: 16, offset: 1088)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !164, file: !165, line: 121, baseType: !48, size: 16, offset: 1104)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !164, file: !165, line: 122, baseType: !22, size: 32, offset: 1120)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !164, file: !165, line: 122, baseType: !22, size: 32, offset: 1152)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !164, file: !165, line: 122, baseType: !22, size: 32, offset: 1184)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !164, file: !165, line: 123, baseType: !33, size: 512, offset: 1216)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !164, file: !165, line: 124, baseType: !163, size: 64, offset: 1728)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !164, file: !165, line: 124, baseType: !163, size: 64, offset: 1792)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !164, file: !165, line: 127, baseType: !163, size: 64, offset: 1856)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !164, file: !165, line: 127, baseType: !163, size: 64, offset: 1920)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !164, file: !165, line: 127, baseType: !163, size: 64, offset: 1984)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !164, file: !165, line: 128, baseType: !280, size: 64, offset: 2048)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!281 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !161, line: 46, flags: DIFlagFwdDecl)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !164, file: !165, line: 130, baseType: !283, size: 64, offset: 2112)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !165, line: 97, size: 832, elements: !285)
!285 = !{!286, !290, !291}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !284, file: !165, line: 98, baseType: !287, size: 768)
!287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 768, elements: !288)
!288 = !{!289, !186}
!289 = !DISubrange(count: 8)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !284, file: !165, line: 99, baseType: !22, size: 32, offset: 768)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !284, file: !165, line: 99, baseType: !22, size: 32, offset: 800)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !164, file: !165, line: 131, baseType: !293, size: 64, offset: 2176)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !295, line: 486, size: 1600, elements: !296)
!295 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!296 = !{!297, !298, !299, !300, !301, !302, !303, !304, !305}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !294, file: !295, line: 487, baseType: !113, size: 960)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !294, file: !295, line: 489, baseType: !58, size: 128, offset: 960)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !294, file: !295, line: 490, baseType: !58, size: 128, offset: 1088)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !294, file: !295, line: 491, baseType: !58, size: 128, offset: 1216)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !294, file: !295, line: 492, baseType: !58, size: 128, offset: 1344)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !294, file: !295, line: 494, baseType: !22, size: 32, offset: 1472)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !294, file: !295, line: 495, baseType: !22, size: 32, offset: 1504)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !294, file: !295, line: 497, baseType: !22, size: 32, offset: 1536)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !294, file: !295, line: 498, baseType: !22, size: 32, offset: 1568)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !164, file: !165, line: 132, baseType: !293, size: 64, offset: 2240)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !164, file: !165, line: 133, baseType: !308, size: 64, offset: 2304)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !295, line: 334, size: 1728, elements: !310)
!310 = !{!311, !312, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !348}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !309, file: !295, line: 335, baseType: !58, size: 128)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !309, file: !295, line: 336, baseType: !313, size: 64, offset: 128)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!314 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !315, line: 51, flags: DIFlagFwdDecl)
!315 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!316 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !309, file: !295, line: 338, baseType: !48, size: 16, offset: 192)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !309, file: !295, line: 338, baseType: !48, size: 16, offset: 208)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !309, file: !295, line: 339, baseType: !205, size: 32, offset: 224)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !309, file: !295, line: 340, baseType: !22, size: 32, offset: 256)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !309, file: !295, line: 342, baseType: !184, size: 32, offset: 288)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !309, file: !295, line: 343, baseType: !183, size: 96, offset: 320)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !309, file: !295, line: 344, baseType: !183, size: 96, offset: 416)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !309, file: !295, line: 347, baseType: !58, size: 128, offset: 512)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !309, file: !295, line: 349, baseType: !22, size: 32, offset: 640)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !309, file: !295, line: 350, baseType: !22, size: 32, offset: 672)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !309, file: !295, line: 351, baseType: !56, size: 64, offset: 704)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !309, file: !295, line: 352, baseType: !56, size: 64, offset: 768)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !309, file: !295, line: 354, baseType: !329, size: 384, offset: 832)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !295, line: 116, baseType: !330)
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !295, line: 94, size: 384, elements: !331)
!331 = !{!332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !330, file: !295, line: 96, baseType: !22, size: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !330, file: !295, line: 96, baseType: !22, size: 32, offset: 32)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !330, file: !295, line: 97, baseType: !22, size: 32, offset: 64)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !330, file: !295, line: 97, baseType: !22, size: 32, offset: 96)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !330, file: !295, line: 99, baseType: !48, size: 16, offset: 128)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !330, file: !295, line: 100, baseType: !48, size: 16, offset: 144)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !330, file: !295, line: 102, baseType: !48, size: 16, offset: 160)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !330, file: !295, line: 105, baseType: !48, size: 16, offset: 176)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !330, file: !295, line: 108, baseType: !48, size: 16, offset: 192)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !330, file: !295, line: 109, baseType: !48, size: 16, offset: 208)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !330, file: !295, line: 111, baseType: !48, size: 16, offset: 224)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !330, file: !295, line: 112, baseType: !48, size: 16, offset: 240)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !330, file: !295, line: 114, baseType: !22, size: 32, offset: 256)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !330, file: !295, line: 114, baseType: !22, size: 32, offset: 288)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !330, file: !295, line: 115, baseType: !22, size: 32, offset: 320)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !330, file: !295, line: 115, baseType: !22, size: 32, offset: 352)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !309, file: !295, line: 355, baseType: !33, size: 512, offset: 1216)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !164, file: !165, line: 134, baseType: !56, size: 64, offset: 2368)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !164, file: !165, line: 136, baseType: !351, size: 64, offset: 2432)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!352 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !155, line: 61, flags: DIFlagFwdDecl)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !164, file: !165, line: 138, baseType: !329, size: 384, offset: 2496)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !164, file: !165, line: 139, baseType: !355, size: 64, offset: 2880)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !295, line: 80, baseType: !357)
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !295, line: 72, size: 192, elements: !358)
!358 = !{!359, !366, !367, !368, !369}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !357, file: !295, line: 73, baseType: !360, size: 64)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !295, line: 59, baseType: !362)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !295, line: 56, size: 128, elements: !363)
!363 = !{!364, !365}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !362, file: !295, line: 57, baseType: !183, size: 96)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !362, file: !295, line: 58, baseType: !22, size: 32, offset: 96)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !357, file: !295, line: 74, baseType: !22, size: 32, offset: 64)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !357, file: !295, line: 76, baseType: !22, size: 32, offset: 96)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !357, file: !295, line: 77, baseType: !22, size: 32, offset: 128)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !357, file: !295, line: 79, baseType: !22, size: 32, offset: 160)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !164, file: !165, line: 141, baseType: !58, size: 128, offset: 2944)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !164, file: !165, line: 142, baseType: !58, size: 128, offset: 3072)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !164, file: !165, line: 143, baseType: !58, size: 128, offset: 3200)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !164, file: !165, line: 144, baseType: !58, size: 128, offset: 3328)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !164, file: !165, line: 146, baseType: !22, size: 32, offset: 3456)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !164, file: !165, line: 147, baseType: !22, size: 32, offset: 3488)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !164, file: !165, line: 150, baseType: !377, size: 64, offset: 3520)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !380, line: 93, size: 7552, elements: !381)
!380 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!381 = !{!382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !430, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !499, !500, !501, !502, !503, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !1510, !1511, !1512, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1552}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !379, file: !380, line: 94, baseType: !113, size: 960)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !379, file: !380, line: 95, baseType: !159, size: 64, offset: 960)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !379, file: !380, line: 97, baseType: !48, size: 16, offset: 1024)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !379, file: !380, line: 97, baseType: !48, size: 16, offset: 1040)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !379, file: !380, line: 99, baseType: !184, size: 32, offset: 1056)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !379, file: !380, line: 99, baseType: !184, size: 32, offset: 1088)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !379, file: !380, line: 99, baseType: !184, size: 32, offset: 1120)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !379, file: !380, line: 100, baseType: !184, size: 32, offset: 1152)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !379, file: !380, line: 100, baseType: !184, size: 32, offset: 1184)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !379, file: !380, line: 100, baseType: !184, size: 32, offset: 1216)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !379, file: !380, line: 101, baseType: !184, size: 32, offset: 1248)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !379, file: !380, line: 101, baseType: !184, size: 32, offset: 1280)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !379, file: !380, line: 101, baseType: !184, size: 32, offset: 1312)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !379, file: !380, line: 102, baseType: !184, size: 32, offset: 1344)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !379, file: !380, line: 102, baseType: !184, size: 32, offset: 1376)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !379, file: !380, line: 102, baseType: !184, size: 32, offset: 1408)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !379, file: !380, line: 103, baseType: !184, size: 32, offset: 1440)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !379, file: !380, line: 103, baseType: !184, size: 32, offset: 1472)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !379, file: !380, line: 103, baseType: !184, size: 32, offset: 1504)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !379, file: !380, line: 103, baseType: !184, size: 32, offset: 1536)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !379, file: !380, line: 103, baseType: !184, size: 32, offset: 1568)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !379, file: !380, line: 104, baseType: !184, size: 32, offset: 1600)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !379, file: !380, line: 104, baseType: !184, size: 32, offset: 1632)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !379, file: !380, line: 104, baseType: !184, size: 32, offset: 1664)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !379, file: !380, line: 104, baseType: !184, size: 32, offset: 1696)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !379, file: !380, line: 104, baseType: !184, size: 32, offset: 1728)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !379, file: !380, line: 105, baseType: !184, size: 32, offset: 1760)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !379, file: !380, line: 108, baseType: !410, size: 704, offset: 1792)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !380, line: 53, size: 704, elements: !411)
!411 = !{!412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !410, file: !380, line: 54, baseType: !184, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !410, file: !380, line: 55, baseType: !184, size: 32, offset: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !410, file: !380, line: 56, baseType: !184, size: 32, offset: 64)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !410, file: !380, line: 57, baseType: !184, size: 32, offset: 96)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !410, file: !380, line: 59, baseType: !183, size: 96, offset: 128)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !410, file: !380, line: 60, baseType: !183, size: 96, offset: 224)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !410, file: !380, line: 61, baseType: !183, size: 96, offset: 320)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !410, file: !380, line: 63, baseType: !184, size: 32, offset: 416)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !410, file: !380, line: 64, baseType: !184, size: 32, offset: 448)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !410, file: !380, line: 65, baseType: !184, size: 32, offset: 480)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !410, file: !380, line: 67, baseType: !48, size: 16, offset: 512)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !410, file: !380, line: 68, baseType: !48, size: 16, offset: 528)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !410, file: !380, line: 69, baseType: !48, size: 16, offset: 544)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !410, file: !380, line: 70, baseType: !48, size: 16, offset: 560)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !410, file: !380, line: 72, baseType: !184, size: 32, offset: 576)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !410, file: !380, line: 73, baseType: !184, size: 32, offset: 608)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !410, file: !380, line: 74, baseType: !184, size: 32, offset: 640)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !410, file: !380, line: 75, baseType: !184, size: 32, offset: 672)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !379, file: !380, line: 109, baseType: !431, size: 128, offset: 2496)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !380, line: 79, size: 128, elements: !432)
!432 = !{!433, !434, !435, !436}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !431, file: !380, line: 80, baseType: !22, size: 32)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !431, file: !380, line: 81, baseType: !22, size: 32, offset: 32)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !431, file: !380, line: 82, baseType: !22, size: 32, offset: 64)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !431, file: !380, line: 83, baseType: !22, size: 32, offset: 96)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !379, file: !380, line: 111, baseType: !184, size: 32, offset: 2624)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !379, file: !380, line: 111, baseType: !184, size: 32, offset: 2656)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !379, file: !380, line: 112, baseType: !184, size: 32, offset: 2688)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !379, file: !380, line: 112, baseType: !184, size: 32, offset: 2720)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !379, file: !380, line: 113, baseType: !184, size: 32, offset: 2752)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !379, file: !380, line: 114, baseType: !184, size: 32, offset: 2784)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !379, file: !380, line: 114, baseType: !184, size: 32, offset: 2816)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !379, file: !380, line: 115, baseType: !48, size: 16, offset: 2848)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !379, file: !380, line: 115, baseType: !48, size: 16, offset: 2864)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !379, file: !380, line: 116, baseType: !48, size: 16, offset: 2880)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !379, file: !380, line: 117, baseType: !14, size: 8, offset: 2896)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !379, file: !380, line: 117, baseType: !14, size: 8, offset: 2904)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !379, file: !380, line: 119, baseType: !184, size: 32, offset: 2912)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !379, file: !380, line: 119, baseType: !184, size: 32, offset: 2944)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !379, file: !380, line: 120, baseType: !48, size: 16, offset: 2976)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !379, file: !380, line: 120, baseType: !48, size: 16, offset: 2992)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !379, file: !380, line: 121, baseType: !184, size: 32, offset: 3008)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !379, file: !380, line: 121, baseType: !184, size: 32, offset: 3040)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !379, file: !380, line: 122, baseType: !184, size: 32, offset: 3072)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !379, file: !380, line: 123, baseType: !184, size: 32, offset: 3104)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !379, file: !380, line: 124, baseType: !48, size: 16, offset: 3136)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !379, file: !380, line: 125, baseType: !48, size: 16, offset: 3152)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !379, file: !380, line: 127, baseType: !22, size: 32, offset: 3168)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !379, file: !380, line: 127, baseType: !22, size: 32, offset: 3200)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !379, file: !380, line: 128, baseType: !22, size: 32, offset: 3232)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !379, file: !380, line: 128, baseType: !22, size: 32, offset: 3264)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !379, file: !380, line: 129, baseType: !48, size: 16, offset: 3296)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !379, file: !380, line: 129, baseType: !48, size: 16, offset: 3312)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !379, file: !380, line: 129, baseType: !48, size: 16, offset: 3328)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !379, file: !380, line: 129, baseType: !48, size: 16, offset: 3344)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !379, file: !380, line: 130, baseType: !184, size: 32, offset: 3360)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !379, file: !380, line: 130, baseType: !184, size: 32, offset: 3392)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !379, file: !380, line: 130, baseType: !184, size: 32, offset: 3424)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !379, file: !380, line: 130, baseType: !184, size: 32, offset: 3456)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !379, file: !380, line: 131, baseType: !184, size: 32, offset: 3488)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !379, file: !380, line: 131, baseType: !184, size: 32, offset: 3520)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !379, file: !380, line: 131, baseType: !184, size: 32, offset: 3552)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !379, file: !380, line: 131, baseType: !184, size: 32, offset: 3584)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !379, file: !380, line: 132, baseType: !184, size: 32, offset: 3616)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !379, file: !380, line: 132, baseType: !184, size: 32, offset: 3648)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !379, file: !380, line: 133, baseType: !33, size: 512, offset: 3680)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !379, file: !380, line: 135, baseType: !184, size: 32, offset: 4192)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !379, file: !380, line: 136, baseType: !184, size: 32, offset: 4224)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !379, file: !380, line: 137, baseType: !184, size: 32, offset: 4256)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !379, file: !380, line: 138, baseType: !22, size: 32, offset: 4288)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !379, file: !380, line: 141, baseType: !14, size: 8, offset: 4320)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !379, file: !380, line: 141, baseType: !14, size: 8, offset: 4328)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !379, file: !380, line: 141, baseType: !14, size: 8, offset: 4336)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !379, file: !380, line: 141, baseType: !14, size: 8, offset: 4344)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !379, file: !380, line: 142, baseType: !48, size: 16, offset: 4352)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !379, file: !380, line: 142, baseType: !48, size: 16, offset: 4368)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !379, file: !380, line: 142, baseType: !48, size: 16, offset: 4384)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !379, file: !380, line: 145, baseType: !14, size: 8, offset: 4400)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !379, file: !380, line: 145, baseType: !14, size: 8, offset: 4408)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !379, file: !380, line: 148, baseType: !48, size: 16, offset: 4416)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !379, file: !380, line: 148, baseType: !48, size: 16, offset: 4432)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !379, file: !380, line: 149, baseType: !184, size: 32, offset: 4448)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !379, file: !380, line: 149, baseType: !184, size: 32, offset: 4480)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !379, file: !380, line: 152, baseType: !496, size: 128, offset: 4512)
!496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 128, elements: !497)
!497 = !{!498}
!498 = !DISubrange(count: 4)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !379, file: !380, line: 153, baseType: !184, size: 32, offset: 4640)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !379, file: !380, line: 154, baseType: !184, size: 32, offset: 4672)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !379, file: !380, line: 157, baseType: !48, size: 16, offset: 4704)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !379, file: !380, line: 157, baseType: !48, size: 16, offset: 4720)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !379, file: !380, line: 160, baseType: !504, size: 64, offset: 4736)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !161, line: 113, size: 6208, elements: !506)
!506 = !{!507, !508, !509, !510, !511, !512, !516}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !505, file: !161, line: 114, baseType: !48, size: 16)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !505, file: !161, line: 114, baseType: !48, size: 16, offset: 16)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !505, file: !161, line: 115, baseType: !14, size: 8, offset: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !505, file: !161, line: 115, baseType: !14, size: 8, offset: 40)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !505, file: !161, line: 116, baseType: !14, size: 8, offset: 48)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !505, file: !161, line: 117, baseType: !513, size: 8, offset: 56)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 8, elements: !514)
!514 = !{!515}
!515 = !DISubrange(count: 1)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !505, file: !161, line: 119, baseType: !517, size: 6144, offset: 64)
!517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !518, size: 6144, elements: !527)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !161, line: 109, baseType: !519)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !161, line: 106, size: 192, elements: !520)
!520 = !{!521, !522, !523, !524, !525, !526}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !519, file: !161, line: 107, baseType: !184, size: 32)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !519, file: !161, line: 107, baseType: !184, size: 32, offset: 32)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !519, file: !161, line: 107, baseType: !184, size: 32, offset: 64)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !519, file: !161, line: 107, baseType: !184, size: 32, offset: 96)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !519, file: !161, line: 107, baseType: !184, size: 32, offset: 128)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !519, file: !161, line: 108, baseType: !22, size: 32, offset: 160)
!527 = !{!528}
!528 = !DISubrange(count: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !379, file: !380, line: 161, baseType: !504, size: 64, offset: 4800)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !379, file: !380, line: 162, baseType: !14, size: 8, offset: 4864)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !379, file: !380, line: 162, baseType: !14, size: 8, offset: 4872)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !379, file: !380, line: 163, baseType: !14, size: 8, offset: 4880)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !379, file: !380, line: 163, baseType: !14, size: 8, offset: 4888)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !379, file: !380, line: 164, baseType: !48, size: 16, offset: 4896)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !379, file: !380, line: 164, baseType: !48, size: 16, offset: 4912)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !379, file: !380, line: 165, baseType: !184, size: 32, offset: 4928)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !379, file: !380, line: 165, baseType: !184, size: 32, offset: 4960)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !379, file: !380, line: 167, baseType: !539, size: 1152, offset: 4992)
!539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !540, size: 1152, elements: !1508)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !161, line: 57, size: 2496, elements: !542)
!542 = !{!543, !544, !545, !546, !547, !548, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !541, file: !161, line: 59, baseType: !48, size: 16)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !541, file: !161, line: 59, baseType: !48, size: 16, offset: 16)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !541, file: !161, line: 59, baseType: !48, size: 16, offset: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !541, file: !161, line: 59, baseType: !48, size: 16, offset: 48)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !541, file: !161, line: 60, baseType: !163, size: 64, offset: 64)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !541, file: !161, line: 61, baseType: !549, size: 64, offset: 128)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !161, line: 202, size: 3328, elements: !551)
!551 = !{!552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !621, !1243, !1244, !1323, !1324, !1350, !1351, !1418, !1439, !1447, !1448}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !550, file: !161, line: 203, baseType: !113, size: 960)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !550, file: !161, line: 204, baseType: !159, size: 64, offset: 960)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !550, file: !161, line: 206, baseType: !184, size: 32, offset: 1024)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !550, file: !161, line: 206, baseType: !184, size: 32, offset: 1056)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !550, file: !161, line: 207, baseType: !184, size: 32, offset: 1088)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !550, file: !161, line: 207, baseType: !184, size: 32, offset: 1120)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !550, file: !161, line: 207, baseType: !184, size: 32, offset: 1152)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !550, file: !161, line: 207, baseType: !184, size: 32, offset: 1184)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !550, file: !161, line: 207, baseType: !184, size: 32, offset: 1216)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !550, file: !161, line: 207, baseType: !184, size: 32, offset: 1248)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !550, file: !161, line: 208, baseType: !184, size: 32, offset: 1280)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !550, file: !161, line: 208, baseType: !184, size: 32, offset: 1312)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !550, file: !161, line: 211, baseType: !184, size: 32, offset: 1344)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !550, file: !161, line: 211, baseType: !184, size: 32, offset: 1376)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !550, file: !161, line: 211, baseType: !184, size: 32, offset: 1408)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !550, file: !161, line: 211, baseType: !184, size: 32, offset: 1440)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !550, file: !161, line: 211, baseType: !184, size: 32, offset: 1472)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !550, file: !161, line: 214, baseType: !184, size: 32, offset: 1504)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !550, file: !161, line: 214, baseType: !184, size: 32, offset: 1536)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !550, file: !161, line: 217, baseType: !184, size: 32, offset: 1568)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !550, file: !161, line: 218, baseType: !184, size: 32, offset: 1600)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !550, file: !161, line: 219, baseType: !184, size: 32, offset: 1632)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !550, file: !161, line: 220, baseType: !184, size: 32, offset: 1664)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !550, file: !161, line: 221, baseType: !184, size: 32, offset: 1696)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !550, file: !161, line: 222, baseType: !48, size: 16, offset: 1728)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !550, file: !161, line: 222, baseType: !48, size: 16, offset: 1744)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !550, file: !161, line: 224, baseType: !48, size: 16, offset: 1760)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !550, file: !161, line: 224, baseType: !48, size: 16, offset: 1776)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !550, file: !161, line: 227, baseType: !48, size: 16, offset: 1792)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !550, file: !161, line: 227, baseType: !48, size: 16, offset: 1808)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !550, file: !161, line: 229, baseType: !48, size: 16, offset: 1824)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !550, file: !161, line: 229, baseType: !48, size: 16, offset: 1840)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !550, file: !161, line: 230, baseType: !48, size: 16, offset: 1856)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !550, file: !161, line: 230, baseType: !48, size: 16, offset: 1872)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !550, file: !161, line: 232, baseType: !184, size: 32, offset: 1888)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !550, file: !161, line: 232, baseType: !184, size: 32, offset: 1920)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !550, file: !161, line: 232, baseType: !184, size: 32, offset: 1952)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !550, file: !161, line: 232, baseType: !184, size: 32, offset: 1984)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !550, file: !161, line: 233, baseType: !22, size: 32, offset: 2016)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !550, file: !161, line: 234, baseType: !22, size: 32, offset: 2048)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !550, file: !161, line: 235, baseType: !48, size: 16, offset: 2080)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !550, file: !161, line: 235, baseType: !48, size: 16, offset: 2096)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !550, file: !161, line: 236, baseType: !48, size: 16, offset: 2112)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !550, file: !161, line: 239, baseType: !48, size: 16, offset: 2128)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !550, file: !161, line: 240, baseType: !22, size: 32, offset: 2144)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !550, file: !161, line: 241, baseType: !22, size: 32, offset: 2176)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !550, file: !161, line: 241, baseType: !22, size: 32, offset: 2208)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !550, file: !161, line: 241, baseType: !22, size: 32, offset: 2240)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !550, file: !161, line: 243, baseType: !184, size: 32, offset: 2272)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !550, file: !161, line: 243, baseType: !184, size: 32, offset: 2304)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !550, file: !161, line: 244, baseType: !184, size: 32, offset: 2336)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !550, file: !161, line: 246, baseType: !604, size: 320, offset: 2368)
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !605, line: 50, size: 320, elements: !606)
!605 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!606 = !{!607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !604, file: !605, line: 51, baseType: !153, size: 64)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !604, file: !605, line: 53, baseType: !22, size: 32, offset: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !604, file: !605, line: 54, baseType: !22, size: 32, offset: 96)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !604, file: !605, line: 55, baseType: !22, size: 32, offset: 128)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !604, file: !605, line: 55, baseType: !22, size: 32, offset: 160)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !604, file: !605, line: 56, baseType: !14, size: 8, offset: 192)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !604, file: !605, line: 56, baseType: !14, size: 8, offset: 200)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !604, file: !605, line: 57, baseType: !14, size: 8, offset: 208)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !604, file: !605, line: 57, baseType: !14, size: 8, offset: 216)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !604, file: !605, line: 59, baseType: !48, size: 16, offset: 224)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !604, file: !605, line: 59, baseType: !48, size: 16, offset: 240)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !604, file: !605, line: 59, baseType: !48, size: 16, offset: 256)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !604, file: !605, line: 61, baseType: !48, size: 16, offset: 272)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !604, file: !605, line: 63, baseType: !22, size: 32, offset: 288)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !550, file: !161, line: 248, baseType: !622, size: 64, offset: 2688)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !83, line: 328, size: 3456, elements: !624)
!624 = !{!625, !626, !627, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1221, !1222, !1223, !1226, !1230, !1234, !1238, !1239, !1240, !1241, !1242}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !623, file: !83, line: 329, baseType: !113, size: 960)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !623, file: !83, line: 330, baseType: !159, size: 64, offset: 960)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !623, file: !83, line: 332, baseType: !628, size: 64, offset: 1024)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !630, line: 283, size: 4096, elements: !631)
!630 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_node.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!631 = !{!632, !633, !634, !635, !639, !640, !644, !1161, !1169, !1173, !1179, !1183, !1184, !1185, !1186, !1190, !1191}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !629, file: !630, line: 284, baseType: !22, size: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !629, file: !630, line: 285, baseType: !33, size: 512, offset: 32)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !629, file: !630, line: 287, baseType: !33, size: 512, offset: 544)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !629, file: !630, line: 288, baseType: !636, size: 2048, offset: 1056)
!636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 2048, elements: !637)
!637 = !{!638}
!638 = !DISubrange(count: 256)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !629, file: !630, line: 289, baseType: !22, size: 32, offset: 3104)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "free_cache", scope: !629, file: !630, line: 292, baseType: !641, size: 64, offset: 3136)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!642 = !DISubroutineType(types: !643)
!643 = !{null, !622}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "free_node_cache", scope: !629, file: !630, line: 293, baseType: !645, size: 64, offset: 3200)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = !DISubroutineType(types: !647)
!647 = !{null, !622, !648}
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNode", file: !83, line: 167, size: 3712, elements: !650)
!650 = !{!651, !652, !653, !654, !655, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !649, file: !83, line: 168, baseType: !648, size: 64)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !649, file: !83, line: 168, baseType: !648, size: 64, offset: 64)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "new_node", scope: !649, file: !83, line: 168, baseType: !648, size: 64, offset: 128)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !649, file: !83, line: 170, baseType: !37, size: 64, offset: 192)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !649, file: !83, line: 172, baseType: !656, size: 64, offset: 256)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeType", file: !630, line: 144, size: 6016, elements: !658)
!658 = !{!659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !821, !822, !823, !965, !969, !973, !974, !1044, !1048, !1052, !1053, !1054, !1055, !1059, !1060, !1064, !1068, !1072, !1076, !1080, !1084, !1088, !1089, !1096, !1098, !1107, !1116}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !657, file: !630, line: 145, baseType: !56, size: 64)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !657, file: !630, line: 145, baseType: !56, size: 64, offset: 64)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free", scope: !657, file: !630, line: 146, baseType: !48, size: 16, offset: 128)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !657, file: !630, line: 148, baseType: !33, size: 512, offset: 144)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !657, file: !630, line: 149, baseType: !22, size: 32, offset: 672)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !657, file: !630, line: 151, baseType: !33, size: 512, offset: 704)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !657, file: !630, line: 152, baseType: !636, size: 2048, offset: 1216)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !657, file: !630, line: 153, baseType: !22, size: 32, offset: 3264)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !657, file: !630, line: 155, baseType: !184, size: 32, offset: 3296)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !657, file: !630, line: 155, baseType: !184, size: 32, offset: 3328)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !657, file: !630, line: 155, baseType: !184, size: 32, offset: 3360)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !657, file: !630, line: 156, baseType: !184, size: 32, offset: 3392)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "minheight", scope: !657, file: !630, line: 156, baseType: !184, size: 32, offset: 3424)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "maxheight", scope: !657, file: !630, line: 156, baseType: !184, size: 32, offset: 3456)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "nclass", scope: !657, file: !630, line: 157, baseType: !48, size: 16, offset: 3488)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !657, file: !630, line: 157, baseType: !48, size: 16, offset: 3504)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility", scope: !657, file: !630, line: 157, baseType: !48, size: 16, offset: 3520)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !657, file: !630, line: 160, baseType: !677, size: 64, offset: 3584)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocketTemplate", file: !630, line: 109, baseType: !679)
!679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketTemplate", file: !630, line: 98, size: 1408, elements: !680)
!680 = !{!681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !820}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !679, file: !630, line: 99, baseType: !22, size: 32)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !679, file: !630, line: 99, baseType: !22, size: 32, offset: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !679, file: !630, line: 100, baseType: !33, size: 512, offset: 64)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "val1", scope: !679, file: !630, line: 101, baseType: !184, size: 32, offset: 576)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !679, file: !630, line: 101, baseType: !184, size: 32, offset: 608)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "val3", scope: !679, file: !630, line: 101, baseType: !184, size: 32, offset: 640)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "val4", scope: !679, file: !630, line: 101, baseType: !184, size: 32, offset: 672)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !679, file: !630, line: 102, baseType: !184, size: 32, offset: 704)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !679, file: !630, line: 102, baseType: !184, size: 32, offset: 736)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !679, file: !630, line: 103, baseType: !22, size: 32, offset: 768)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !679, file: !630, line: 104, baseType: !22, size: 32, offset: 800)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !679, file: !630, line: 107, baseType: !693, size: 64, offset: 832)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocket", file: !83, line: 87, size: 2816, elements: !695)
!695 = !{!696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !802}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !694, file: !83, line: 88, baseType: !693, size: 64)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !694, file: !83, line: 88, baseType: !693, size: 64, offset: 64)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "new_sock", scope: !694, file: !83, line: 88, baseType: !693, size: 64, offset: 128)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !694, file: !83, line: 90, baseType: !37, size: 64, offset: 192)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !694, file: !83, line: 92, baseType: !33, size: 512, offset: 256)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !694, file: !83, line: 94, baseType: !33, size: 512, offset: 768)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !694, file: !83, line: 99, baseType: !56, size: 64, offset: 1280)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !694, file: !83, line: 101, baseType: !48, size: 16, offset: 1344)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !694, file: !83, line: 101, baseType: !48, size: 16, offset: 1360)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !694, file: !83, line: 102, baseType: !48, size: 16, offset: 1376)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "in_out", scope: !694, file: !83, line: 103, baseType: !48, size: 16, offset: 1392)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !694, file: !83, line: 104, baseType: !708, size: 64, offset: 1408)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketType", file: !630, line: 114, size: 1600, elements: !710)
!710 = !{!711, !712, !718, !722, !726, !730, !734, !738, !739, !743, !772, !773, !774}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !709, file: !630, line: 115, baseType: !33, size: 512)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !709, file: !630, line: 117, baseType: !713, size: 64, offset: 512)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DISubroutineType(types: !715)
!715 = !{null, !23, !716, !73, !73, !12}
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !630, line: 73, flags: DIFlagFwdDecl)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "draw_color", scope: !709, file: !630, line: 118, baseType: !719, size: 64, offset: 576)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = !DISubroutineType(types: !721)
!721 = !{null, !23, !73, !73, !216}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw", scope: !709, file: !630, line: 120, baseType: !723, size: 64, offset: 640)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = !DISubroutineType(types: !725)
!725 = !{null, !23, !716, !73}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw_color", scope: !709, file: !630, line: 121, baseType: !727, size: 64, offset: 704)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = !DISubroutineType(types: !729)
!729 = !{null, !23, !73, !216}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "interface_register_properties", scope: !709, file: !630, line: 122, baseType: !731, size: 64, offset: 768)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!732 = !DISubroutineType(types: !733)
!733 = !{null, !622, !693, !81}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "interface_init_socket", scope: !709, file: !630, line: 123, baseType: !735, size: 64, offset: 832)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DISubroutineType(types: !737)
!737 = !{null, !622, !693, !648, !693, !12}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "interface_verify_socket", scope: !709, file: !630, line: 124, baseType: !735, size: 64, offset: 896)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "interface_from_socket", scope: !709, file: !630, line: 125, baseType: !740, size: 64, offset: 960)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = !DISubroutineType(types: !742)
!742 = !{null, !622, !693, !648, !693}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "ext_socket", scope: !709, file: !630, line: 128, baseType: !744, size: 256, offset: 1024)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !25, line: 436, baseType: !745)
!745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !25, line: 430, size: 256, elements: !746)
!746 = !{!747, !748, !751, !767}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !745, file: !25, line: 431, baseType: !56, size: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !745, file: !25, line: 432, baseType: !749, size: 64, offset: 64)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !25, line: 417, baseType: !82)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !745, file: !25, line: 433, baseType: !752, size: 64, offset: 128)
!752 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !25, line: 408, baseType: !753)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = !DISubroutineType(types: !755)
!755 = !{!22, !23, !73, !756, !758}
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !25, line: 38, flags: DIFlagFwdDecl)
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !25, line: 348, baseType: !760)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !25, line: 337, size: 256, elements: !761)
!761 = !{!762, !763, !764, !765, !766}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !760, file: !25, line: 339, baseType: !56, size: 64)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !760, file: !25, line: 342, baseType: !756, size: 64, offset: 64)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !760, file: !25, line: 345, baseType: !22, size: 32, offset: 128)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !760, file: !25, line: 347, baseType: !22, size: 32, offset: 160)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !760, file: !25, line: 347, baseType: !22, size: 32, offset: 192)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !745, file: !25, line: 434, baseType: !768, size: 64, offset: 192)
!768 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !25, line: 409, baseType: !769)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DISubroutineType(types: !771)
!771 = !{null, !56}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "ext_interface", scope: !709, file: !630, line: 129, baseType: !744, size: 256, offset: 1280)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !709, file: !630, line: 132, baseType: !22, size: 32, offset: 1536)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !709, file: !630, line: 132, baseType: !22, size: 32, offset: 1568)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !694, file: !83, line: 105, baseType: !33, size: 512, offset: 1472)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !694, file: !83, line: 107, baseType: !184, size: 32, offset: 1984)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !694, file: !83, line: 107, baseType: !184, size: 32, offset: 2016)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !694, file: !83, line: 109, baseType: !56, size: 64, offset: 2048)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !694, file: !83, line: 112, baseType: !48, size: 16, offset: 2112)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "stack_type", scope: !694, file: !83, line: 114, baseType: !48, size: 16, offset: 2128)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !694, file: !83, line: 115, baseType: !22, size: 32, offset: 2144)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !694, file: !83, line: 117, baseType: !56, size: 64, offset: 2176)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "own_index", scope: !694, file: !83, line: 122, baseType: !22, size: 32, offset: 2240)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "to_index", scope: !694, file: !83, line: 124, baseType: !22, size: 32, offset: 2272)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "groupsock", scope: !694, file: !83, line: 126, baseType: !693, size: 64, offset: 2304)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !694, file: !83, line: 128, baseType: !787, size: 64, offset: 2368)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeLink", file: !83, line: 298, size: 448, elements: !789)
!789 = !{!790, !791, !792, !795, !796, !799, !800, !801}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !788, file: !83, line: 299, baseType: !787, size: 64)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !788, file: !83, line: 299, baseType: !787, size: 64, offset: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "fromnode", scope: !788, file: !83, line: 301, baseType: !793, size: 64, offset: 128)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNode", file: !83, line: 218, baseType: !649)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "tonode", scope: !788, file: !83, line: 301, baseType: !793, size: 64, offset: 192)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "fromsock", scope: !788, file: !83, line: 302, baseType: !797, size: 64, offset: 256)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocket", file: !83, line: 132, baseType: !694)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "tosock", scope: !788, file: !83, line: 302, baseType: !797, size: 64, offset: 320)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !788, file: !83, line: 304, baseType: !22, size: 32, offset: 384)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !788, file: !83, line: 305, baseType: !22, size: 32, offset: 416)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !694, file: !83, line: 131, baseType: !803, size: 384, offset: 2432)
!803 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeStack", file: !83, line: 73, baseType: !804)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeStack", file: !83, line: 62, size: 384, elements: !805)
!805 = !{!806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !804, file: !83, line: 63, baseType: !496, size: 128)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !804, file: !83, line: 64, baseType: !184, size: 32, offset: 128)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !804, file: !83, line: 64, baseType: !184, size: 32, offset: 160)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !804, file: !83, line: 65, baseType: !56, size: 64, offset: 192)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "hasinput", scope: !804, file: !83, line: 66, baseType: !48, size: 16, offset: 256)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "hasoutput", scope: !804, file: !83, line: 67, baseType: !48, size: 16, offset: 272)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "datatype", scope: !804, file: !83, line: 68, baseType: !48, size: 16, offset: 288)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "sockettype", scope: !804, file: !83, line: 69, baseType: !48, size: 16, offset: 304)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !804, file: !83, line: 70, baseType: !48, size: 16, offset: 320)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !804, file: !83, line: 71, baseType: !48, size: 16, offset: 336)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !804, file: !83, line: 72, baseType: !817, size: 32, offset: 352)
!817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 32, elements: !818)
!818 = !{!819}
!819 = !DISubrange(count: 2)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !679, file: !630, line: 108, baseType: !33, size: 512, offset: 896)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !657, file: !630, line: 160, baseType: !677, size: 64, offset: 3648)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "storagename", scope: !657, file: !630, line: 162, baseType: !33, size: 512, offset: 3712)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype", scope: !657, file: !630, line: 165, baseType: !824, size: 64, offset: 4224)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DISubroutineType(types: !826)
!826 = !{null, !827, !829, !915, !622, !648, !961}
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !24)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !110, line: 230, size: 3072, elements: !831)
!831 = !{!832, !833, !834, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !904, !905, !906, !907, !908, !909, !910, !911, !912, !914}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !830, file: !110, line: 231, baseType: !829, size: 64)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !830, file: !110, line: 231, baseType: !829, size: 64, offset: 64)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !830, file: !110, line: 233, baseType: !835, size: 1280, offset: 128)
!835 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !836, line: 71, baseType: !837)
!836 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !836, line: 40, size: 1280, elements: !838)
!838 = !{!839, !848, !849, !857, !858, !859, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !882}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !837, file: !836, line: 41, baseType: !840, size: 128)
!840 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !841, line: 95, baseType: !842)
!841 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !841, line: 92, size: 128, elements: !843)
!843 = !{!844, !845, !846, !847}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !842, file: !841, line: 93, baseType: !184, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !842, file: !841, line: 93, baseType: !184, size: 32, offset: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !842, file: !841, line: 94, baseType: !184, size: 32, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !842, file: !841, line: 94, baseType: !184, size: 32, offset: 96)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !837, file: !836, line: 41, baseType: !840, size: 128, offset: 128)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !837, file: !836, line: 42, baseType: !850, size: 128, offset: 256)
!850 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !841, line: 89, baseType: !851)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !841, line: 86, size: 128, elements: !852)
!852 = !{!853, !854, !855, !856}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !851, file: !841, line: 87, baseType: !22, size: 32)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !851, file: !841, line: 87, baseType: !22, size: 32, offset: 32)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !851, file: !841, line: 88, baseType: !22, size: 32, offset: 64)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !851, file: !841, line: 88, baseType: !22, size: 32, offset: 96)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !837, file: !836, line: 42, baseType: !850, size: 128, offset: 384)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !837, file: !836, line: 43, baseType: !850, size: 128, offset: 512)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !837, file: !836, line: 45, baseType: !860, size: 64, offset: 640)
!860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 64, elements: !818)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !837, file: !836, line: 45, baseType: !860, size: 64, offset: 704)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !837, file: !836, line: 46, baseType: !184, size: 32, offset: 768)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !837, file: !836, line: 46, baseType: !184, size: 32, offset: 800)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !837, file: !836, line: 48, baseType: !48, size: 16, offset: 832)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !837, file: !836, line: 49, baseType: !48, size: 16, offset: 848)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !837, file: !836, line: 51, baseType: !48, size: 16, offset: 864)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !837, file: !836, line: 52, baseType: !48, size: 16, offset: 880)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !837, file: !836, line: 53, baseType: !48, size: 16, offset: 896)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !837, file: !836, line: 55, baseType: !48, size: 16, offset: 912)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !837, file: !836, line: 56, baseType: !48, size: 16, offset: 928)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !837, file: !836, line: 58, baseType: !48, size: 16, offset: 944)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !837, file: !836, line: 58, baseType: !48, size: 16, offset: 960)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !837, file: !836, line: 59, baseType: !48, size: 16, offset: 976)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !837, file: !836, line: 59, baseType: !48, size: 16, offset: 992)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !837, file: !836, line: 61, baseType: !48, size: 16, offset: 1008)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !837, file: !836, line: 63, baseType: !216, size: 64, offset: 1024)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !837, file: !836, line: 64, baseType: !22, size: 32, offset: 1088)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !837, file: !836, line: 65, baseType: !22, size: 32, offset: 1120)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !837, file: !836, line: 68, baseType: !880, size: 64, offset: 1152)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !836, line: 68, flags: DIFlagFwdDecl)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !837, file: !836, line: 69, baseType: !95, size: 64, offset: 1216)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !830, file: !110, line: 234, baseType: !850, size: 128, offset: 1408)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !830, file: !110, line: 235, baseType: !850, size: 128, offset: 1536)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !830, file: !110, line: 236, baseType: !48, size: 16, offset: 1664)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !830, file: !110, line: 236, baseType: !48, size: 16, offset: 1680)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !830, file: !110, line: 238, baseType: !48, size: 16, offset: 1696)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !830, file: !110, line: 239, baseType: !48, size: 16, offset: 1712)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !830, file: !110, line: 240, baseType: !48, size: 16, offset: 1728)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !830, file: !110, line: 241, baseType: !48, size: 16, offset: 1744)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !830, file: !110, line: 243, baseType: !184, size: 32, offset: 1760)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !830, file: !110, line: 244, baseType: !48, size: 16, offset: 1792)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !830, file: !110, line: 244, baseType: !48, size: 16, offset: 1808)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !830, file: !110, line: 246, baseType: !48, size: 16, offset: 1824)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !830, file: !110, line: 247, baseType: !48, size: 16, offset: 1840)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !830, file: !110, line: 248, baseType: !48, size: 16, offset: 1856)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !830, file: !110, line: 249, baseType: !48, size: 16, offset: 1872)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !830, file: !110, line: 250, baseType: !48, size: 16, offset: 1888)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !830, file: !110, line: 251, baseType: !48, size: 16, offset: 1904)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !830, file: !110, line: 253, baseType: !901, size: 64, offset: 1920)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !903, line: 46, flags: DIFlagFwdDecl)
!903 = !DIFile(filename: "blender/source/blender/editors/include/UI_interface.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!904 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !830, file: !110, line: 255, baseType: !58, size: 128, offset: 1984)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !830, file: !110, line: 256, baseType: !58, size: 128, offset: 2112)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !830, file: !110, line: 257, baseType: !58, size: 128, offset: 2240)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !830, file: !110, line: 258, baseType: !58, size: 128, offset: 2368)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !830, file: !110, line: 259, baseType: !58, size: 128, offset: 2496)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !830, file: !110, line: 260, baseType: !58, size: 128, offset: 2624)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !830, file: !110, line: 261, baseType: !58, size: 128, offset: 2752)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !830, file: !110, line: 263, baseType: !95, size: 64, offset: 2880)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !830, file: !110, line: 265, baseType: !913, size: 64, offset: 2944)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !830, file: !110, line: 266, baseType: !56, size: 64, offset: 3008)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNode", file: !917, line: 925, size: 3200, elements: !918)
!917 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!918 = !{!919, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !916, file: !917, line: 926, baseType: !920, size: 64)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !917, line: 91, baseType: !922)
!922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !917, line: 85, size: 448, elements: !923)
!923 = !{!924, !926, !927, !928, !929, !930}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !922, file: !917, line: 86, baseType: !925, size: 64)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !922, file: !917, line: 86, baseType: !925, size: 64, offset: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !922, file: !917, line: 87, baseType: !58, size: 128, offset: 128)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !922, file: !917, line: 88, baseType: !22, size: 32, offset: 256)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !922, file: !917, line: 89, baseType: !184, size: 32, offset: 288)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !922, file: !917, line: 90, baseType: !931, size: 128, offset: 320)
!931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 128, elements: !932)
!932 = !{!289}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !916, file: !917, line: 926, baseType: !920, size: 64, offset: 64)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !916, file: !917, line: 927, baseType: !58, size: 128, offset: 128)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !916, file: !917, line: 928, baseType: !22, size: 32, offset: 256)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !916, file: !917, line: 929, baseType: !184, size: 32, offset: 288)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !916, file: !917, line: 930, baseType: !931, size: 128, offset: 320)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !916, file: !917, line: 932, baseType: !835, size: 1280, offset: 448)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !916, file: !917, line: 934, baseType: !119, size: 64, offset: 1728)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !916, file: !917, line: 934, baseType: !119, size: 64, offset: 1792)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !916, file: !917, line: 935, baseType: !48, size: 16, offset: 1856)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !916, file: !917, line: 935, baseType: !48, size: 16, offset: 1872)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "aspect", scope: !916, file: !917, line: 936, baseType: !184, size: 32, offset: 1888)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !916, file: !917, line: 936, baseType: !184, size: 32, offset: 1920)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !916, file: !917, line: 938, baseType: !184, size: 32, offset: 1952)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !916, file: !917, line: 938, baseType: !184, size: 32, offset: 1984)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !916, file: !917, line: 939, baseType: !184, size: 32, offset: 2016)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !916, file: !917, line: 940, baseType: !860, size: 64, offset: 2048)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "treepath", scope: !916, file: !917, line: 947, baseType: !58, size: 128, offset: 2112)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !916, file: !917, line: 949, baseType: !622, size: 64, offset: 2240)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "edittree", scope: !916, file: !917, line: 949, baseType: !622, size: 64, offset: 2304)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "tree_idname", scope: !916, file: !917, line: 952, baseType: !33, size: 512, offset: 2368)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "treetype", scope: !916, file: !917, line: 953, baseType: !22, size: 32, offset: 2880)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !916, file: !917, line: 954, baseType: !22, size: 32, offset: 2912)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "texfrom", scope: !916, file: !917, line: 956, baseType: !48, size: 16, offset: 2944)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "shaderfrom", scope: !916, file: !917, line: 957, baseType: !48, size: 16, offset: 2960)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !916, file: !917, line: 958, baseType: !48, size: 16, offset: 2976)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !916, file: !917, line: 959, baseType: !48, size: 16, offset: 2992)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "linkdrag", scope: !916, file: !917, line: 960, baseType: !58, size: 128, offset: 3008)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !916, file: !917, line: 962, baseType: !351, size: 64, offset: 3136)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !83, line: 274, baseType: !962)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !83, line: 271, size: 32, elements: !963)
!963 = !{!964}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !962, file: !83, line: 273, baseType: !205, size: 32)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype_prepare", scope: !657, file: !630, line: 168, baseType: !966, size: 64, offset: 4288)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DISubroutineType(types: !968)
!968 = !{null, !827, !622, !648}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons", scope: !657, file: !630, line: 171, baseType: !970, size: 64, offset: 4352)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64)
!971 = !DISubroutineType(types: !972)
!972 = !{null, !716, !23, !73}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons_ex", scope: !657, file: !630, line: 173, baseType: !970, size: 64, offset: 4416)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "draw_backdrop", scope: !657, file: !630, line: 176, baseType: !975, size: 64, offset: 4480)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{null, !915, !978, !648, !22, !22}
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !980, line: 70, size: 19840, elements: !981)
!980 = !DIFile(filename: "blender/source/blender/imbuf/IMB_imbuf_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!981 = !{!982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !995, !996, !997, !998, !999, !1001, !1002, !1003, !1004, !1008, !1009, !1010, !1011, !1012, !1015, !1016, !1017, !1018, !1019, !1022, !1023, !1025, !1026, !1027, !1030, !1031, !1032, !1035, !1036, !1037}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !979, file: !980, line: 71, baseType: !978, size: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !979, file: !980, line: 71, baseType: !978, size: 64, offset: 64)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !979, file: !980, line: 74, baseType: !22, size: 32, offset: 128)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !979, file: !980, line: 74, baseType: !22, size: 32, offset: 160)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !979, file: !980, line: 79, baseType: !233, size: 8, offset: 192)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !979, file: !980, line: 80, baseType: !22, size: 32, offset: 224)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !979, file: !980, line: 83, baseType: !22, size: 32, offset: 256)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "mall", scope: !979, file: !980, line: 84, baseType: !22, size: 32, offset: 288)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !979, file: !980, line: 87, baseType: !251, size: 64, offset: 320)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "rect_float", scope: !979, file: !980, line: 88, baseType: !216, size: 64, offset: 384)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "ppm", scope: !979, file: !980, line: 93, baseType: !993, size: 128, offset: 448)
!993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !994, size: 128, elements: !818)
!994 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !979, file: !980, line: 96, baseType: !22, size: 32, offset: 576)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !979, file: !980, line: 96, baseType: !22, size: 32, offset: 608)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "xtiles", scope: !979, file: !980, line: 97, baseType: !22, size: 32, offset: 640)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "ytiles", scope: !979, file: !980, line: 97, baseType: !22, size: 32, offset: 672)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "tiles", scope: !979, file: !980, line: 98, baseType: !1000, size: 64, offset: 704)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !979, file: !980, line: 101, baseType: !224, size: 64, offset: 768)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf_float", scope: !979, file: !980, line: 102, baseType: !216, size: 64, offset: 832)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !979, file: !980, line: 105, baseType: !184, size: 32, offset: 896)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "mipmap", scope: !979, file: !980, line: 108, baseType: !1005, size: 1280, offset: 960)
!1005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !978, size: 1280, elements: !1006)
!1006 = !{!1007}
!1007 = !DISubrange(count: 20)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "miptot", scope: !979, file: !980, line: 109, baseType: !22, size: 32, offset: 2240)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "miplevel", scope: !979, file: !980, line: 109, baseType: !22, size: 32, offset: 2272)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !979, file: !980, line: 112, baseType: !22, size: 32, offset: 2304)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "userflags", scope: !979, file: !980, line: 113, baseType: !22, size: 32, offset: 2336)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !979, file: !980, line: 114, baseType: !1013, size: 64, offset: 2368)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImMetaData", file: !980, line: 50, flags: DIFlagFwdDecl)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !979, file: !980, line: 115, baseType: !56, size: 64, offset: 2432)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "ftype", scope: !979, file: !980, line: 118, baseType: !22, size: 32, offset: 2496)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !979, file: !980, line: 119, baseType: !131, size: 8192, offset: 2528)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "cachename", scope: !979, file: !980, line: 120, baseType: !131, size: 8192, offset: 10720)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "c_handle", scope: !979, file: !980, line: 123, baseType: !1020, size: 64, offset: 18944)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DICompositeType(tag: DW_TAG_structure_type, name: "MEM_CacheLimiterHandle_s", file: !980, line: 123, flags: DIFlagFwdDecl)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "refcounter", scope: !979, file: !980, line: 124, baseType: !22, size: 32, offset: 19008)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffer", scope: !979, file: !980, line: 127, baseType: !1024, size: 64, offset: 19072)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "encodedsize", scope: !979, file: !980, line: 128, baseType: !205, size: 32, offset: 19136)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffersize", scope: !979, file: !980, line: 129, baseType: !205, size: 32, offset: 19168)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "rect_colorspace", scope: !979, file: !980, line: 132, baseType: !1028, size: 64, offset: 19200)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1029 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !980, line: 132, flags: DIFlagFwdDecl)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "float_colorspace", scope: !979, file: !980, line: 133, baseType: !1028, size: 64, offset: 19264)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer_flags", scope: !979, file: !980, line: 134, baseType: !251, size: 64, offset: 19328)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_cache", scope: !979, file: !980, line: 135, baseType: !1033, size: 64, offset: 19392)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1034 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColormanageCache", file: !980, line: 135, flags: DIFlagFwdDecl)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_flag", scope: !979, file: !980, line: 136, baseType: !22, size: 32, offset: 19456)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "invalid_rect", scope: !979, file: !980, line: 137, baseType: !850, size: 128, offset: 19488)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "dds_data", scope: !979, file: !980, line: 140, baseType: !1038, size: 192, offset: 19648)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DDSData", file: !980, line: 55, size: 192, elements: !1039)
!1039 = !{!1040, !1041, !1042, !1043}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "fourcc", scope: !1038, file: !980, line: 56, baseType: !205, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "nummipmaps", scope: !1038, file: !980, line: 57, baseType: !205, size: 32, offset: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1038, file: !980, line: 58, baseType: !1024, size: 64, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1038, file: !980, line: 59, baseType: !205, size: 32, offset: 128)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "labelfunc", scope: !657, file: !630, line: 179, baseType: !1045, size: 64, offset: 4544)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{null, !622, !648, !913, !22}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "resize_area_func", scope: !657, file: !630, line: 181, baseType: !1049, size: 64, offset: 4608)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DISubroutineType(types: !1051)
!1051 = !{!22, !648, !22, !22}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "select_area_func", scope: !657, file: !630, line: 183, baseType: !1049, size: 64, offset: 4672)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "tweak_area_func", scope: !657, file: !630, line: 185, baseType: !1049, size: 64, offset: 4736)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "updatefunc", scope: !657, file: !630, line: 188, baseType: !645, size: 64, offset: 4800)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "verifyfunc", scope: !657, file: !630, line: 190, baseType: !1056, size: 64, offset: 4864)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{null, !622, !648, !119}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc", scope: !657, file: !630, line: 193, baseType: !645, size: 64, offset: 4928)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc", scope: !657, file: !630, line: 195, baseType: !1061, size: 64, offset: 4992)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{null, !648}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc", scope: !657, file: !630, line: 197, baseType: !1065, size: 64, offset: 5056)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{null, !622, !648, !648}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc_api", scope: !657, file: !630, line: 200, baseType: !1069, size: 64, offset: 5120)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{null, !827, !73}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc_api", scope: !657, file: !630, line: 201, baseType: !1073, size: 64, offset: 5184)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{null, !73}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc_api", scope: !657, file: !630, line: 202, baseType: !1077, size: 64, offset: 5248)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{null, !73, !648}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !657, file: !630, line: 205, baseType: !1081, size: 64, offset: 5312)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!22, !656, !622}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "poll_instance", scope: !657, file: !630, line: 207, baseType: !1085, size: 64, offset: 5376)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!22, !648, !622}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "update_internal_links", scope: !657, file: !630, line: 210, baseType: !645, size: 64, offset: 5440)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "initexecfunc", scope: !657, file: !630, line: 213, baseType: !1090, size: 64, offset: 5504)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeInitExecFunction", file: !630, line: 135, baseType: !1091)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!56, !1094, !648, !961}
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecContext", file: !630, line: 62, flags: DIFlagFwdDecl)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "freeexecfunc", scope: !657, file: !630, line: 214, baseType: !1097, size: 64, offset: 5568)
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeFreeExecFunction", file: !630, line: 136, baseType: !769)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "execfunc", scope: !657, file: !630, line: 215, baseType: !1099, size: 64, offset: 5632)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeExecFunction", file: !630, line: 137, baseType: !1100)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{null, !56, !22, !648, !1103, !1105, !1105}
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecData", file: !630, line: 63, flags: DIFlagFwdDecl)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "gpufunc", scope: !657, file: !630, line: 217, baseType: !1108, size: 64, offset: 5696)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeGPUExecFunction", file: !630, line: 138, baseType: !1109)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!22, !1112, !648, !1103, !1114, !1114}
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64)
!1113 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUMaterial", file: !630, line: 64, flags: DIFlagFwdDecl)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUNodeStack", file: !630, line: 66, flags: DIFlagFwdDecl)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !657, file: !630, line: 220, baseType: !744, size: 256, offset: 5760)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !649, file: !83, line: 173, baseType: !33, size: 512, offset: 320)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !649, file: !83, line: 175, baseType: !33, size: 512, offset: 832)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !649, file: !83, line: 176, baseType: !22, size: 32, offset: 1344)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !649, file: !83, line: 177, baseType: !48, size: 16, offset: 1376)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !649, file: !83, line: 177, baseType: !48, size: 16, offset: 1392)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !649, file: !83, line: 178, baseType: !48, size: 16, offset: 1408)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !649, file: !83, line: 178, baseType: !48, size: 16, offset: 1424)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "lasty", scope: !649, file: !83, line: 179, baseType: !48, size: 16, offset: 1440)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !649, file: !83, line: 179, baseType: !48, size: 16, offset: 1456)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !649, file: !83, line: 180, baseType: !48, size: 16, offset: 1472)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !649, file: !83, line: 181, baseType: !48, size: 16, offset: 1488)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !649, file: !83, line: 182, baseType: !183, size: 96, offset: 1504)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !649, file: !83, line: 184, baseType: !58, size: 128, offset: 1600)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !649, file: !83, line: 184, baseType: !58, size: 128, offset: 1728)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !649, file: !83, line: 185, baseType: !648, size: 64, offset: 1856)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !649, file: !83, line: 186, baseType: !119, size: 64, offset: 1920)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !649, file: !83, line: 187, baseType: !56, size: 64, offset: 1984)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !649, file: !83, line: 188, baseType: !648, size: 64, offset: 2048)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "internal_links", scope: !649, file: !83, line: 189, baseType: !58, size: 128, offset: 2112)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !649, file: !83, line: 191, baseType: !184, size: 32, offset: 2240)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !649, file: !83, line: 191, baseType: !184, size: 32, offset: 2272)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !649, file: !83, line: 192, baseType: !184, size: 32, offset: 2304)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !649, file: !83, line: 192, baseType: !184, size: 32, offset: 2336)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "miniwidth", scope: !649, file: !83, line: 193, baseType: !184, size: 32, offset: 2368)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "offsetx", scope: !649, file: !83, line: 194, baseType: !184, size: 32, offset: 2400)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "offsety", scope: !649, file: !83, line: 194, baseType: !184, size: 32, offset: 2432)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !649, file: !83, line: 196, baseType: !22, size: 32, offset: 2464)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !649, file: !83, line: 198, baseType: !33, size: 512, offset: 2496)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "custom1", scope: !649, file: !83, line: 199, baseType: !48, size: 16, offset: 3008)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "custom2", scope: !649, file: !83, line: 199, baseType: !48, size: 16, offset: 3024)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "custom3", scope: !649, file: !83, line: 200, baseType: !184, size: 32, offset: 3040)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "custom4", scope: !649, file: !83, line: 200, baseType: !184, size: 32, offset: 3072)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "need_exec", scope: !649, file: !83, line: 202, baseType: !48, size: 16, offset: 3104)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !649, file: !83, line: 202, baseType: !48, size: 16, offset: 3120)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "threaddata", scope: !649, file: !83, line: 203, baseType: !56, size: 64, offset: 3136)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "totr", scope: !649, file: !83, line: 204, baseType: !840, size: 128, offset: 3200)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "butr", scope: !649, file: !83, line: 205, baseType: !840, size: 128, offset: 3328)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "prvr", scope: !649, file: !83, line: 206, baseType: !840, size: 128, offset: 3456)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "preview_xsize", scope: !649, file: !83, line: 215, baseType: !48, size: 16, offset: 3584)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "preview_ysize", scope: !649, file: !83, line: 215, baseType: !48, size: 16, offset: 3600)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !649, file: !83, line: 216, baseType: !22, size: 32, offset: 3616)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !649, file: !83, line: 217, baseType: !1159, size: 64, offset: 3648)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!1160 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !83, line: 51, flags: DIFlagFwdDecl)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "foreach_nodeclass", scope: !629, file: !630, line: 294, baseType: !1162, size: 64, offset: 3264)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{null, !153, !56, !1165}
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeClassCallback", file: !630, line: 282, baseType: !1166)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{null, !56, !22, !12}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !629, file: !630, line: 296, baseType: !1170, size: 64, offset: 3328)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!22, !827, !628}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "get_from_context", scope: !629, file: !630, line: 298, baseType: !1174, size: 64, offset: 3392)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{null, !827, !628, !1177, !1178, !1178}
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "localize", scope: !629, file: !630, line: 302, baseType: !1180, size: 64, offset: 3456)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{null, !622, !622}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "local_sync", scope: !629, file: !630, line: 303, baseType: !1180, size: 64, offset: 3520)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "local_merge", scope: !629, file: !630, line: 304, baseType: !1180, size: 64, offset: 3584)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !629, file: !630, line: 307, baseType: !641, size: 64, offset: 3648)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "validate_link", scope: !629, file: !630, line: 309, baseType: !1187, size: 64, offset: 3712)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{!22, !622, !787}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "node_add_init", scope: !629, file: !630, line: 311, baseType: !645, size: 64, offset: 3776)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !629, file: !630, line: 314, baseType: !744, size: 256, offset: 3840)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !623, file: !83, line: 333, baseType: !33, size: 512, offset: 1088)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !623, file: !83, line: 335, baseType: !81, size: 64, offset: 1600)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !623, file: !83, line: 337, baseType: !351, size: 64, offset: 1664)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !623, file: !83, line: 338, baseType: !860, size: 64, offset: 1728)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !623, file: !83, line: 340, baseType: !58, size: 128, offset: 1792)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !623, file: !83, line: 340, baseType: !58, size: 128, offset: 1920)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !623, file: !83, line: 342, baseType: !22, size: 32, offset: 2048)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !623, file: !83, line: 342, baseType: !22, size: 32, offset: 2080)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !623, file: !83, line: 343, baseType: !22, size: 32, offset: 2112)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !623, file: !83, line: 345, baseType: !22, size: 32, offset: 2144)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !623, file: !83, line: 346, baseType: !22, size: 32, offset: 2176)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !623, file: !83, line: 347, baseType: !48, size: 16, offset: 2208)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !623, file: !83, line: 348, baseType: !48, size: 16, offset: 2224)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !623, file: !83, line: 349, baseType: !22, size: 32, offset: 2240)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !623, file: !83, line: 351, baseType: !22, size: 32, offset: 2272)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !623, file: !83, line: 353, baseType: !48, size: 16, offset: 2304)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !623, file: !83, line: 354, baseType: !48, size: 16, offset: 2320)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !623, file: !83, line: 355, baseType: !22, size: 32, offset: 2336)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !623, file: !83, line: 357, baseType: !840, size: 128, offset: 2368)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !623, file: !83, line: 363, baseType: !58, size: 128, offset: 2496)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !623, file: !83, line: 363, baseType: !58, size: 128, offset: 2624)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !623, file: !83, line: 368, baseType: !1214, size: 64, offset: 2752)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !630, line: 500, size: 64, elements: !1216)
!1216 = !{!1217}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !1215, file: !630, line: 502, baseType: !1218, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !1220, line: 48, baseType: !314)
!1220 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !623, file: !83, line: 372, baseType: !961, size: 32, offset: 2816)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !623, file: !83, line: 373, baseType: !22, size: 32, offset: 2848)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !623, file: !83, line: 382, baseType: !1224, size: 64, offset: 2880)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 64)
!1225 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !83, line: 46, flags: DIFlagFwdDecl)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !623, file: !83, line: 385, baseType: !1227, size: 64, offset: 2944)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{null, !56, !184}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !623, file: !83, line: 386, baseType: !1231, size: 64, offset: 3008)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{null, !56, !913}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !623, file: !83, line: 387, baseType: !1235, size: 64, offset: 3072)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{!22, !56}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !623, file: !83, line: 388, baseType: !769, size: 64, offset: 3136)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !623, file: !83, line: 389, baseType: !56, size: 64, offset: 3200)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !623, file: !83, line: 389, baseType: !56, size: 64, offset: 3264)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !623, file: !83, line: 389, baseType: !56, size: 64, offset: 3328)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !623, file: !83, line: 389, baseType: !56, size: 64, offset: 3392)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !550, file: !161, line: 249, baseType: !280, size: 64, offset: 2752)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !550, file: !161, line: 250, baseType: !1245, size: 64, offset: 2816)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !605, line: 77, size: 15424, elements: !1247)
!1247 = !{!1248, !1249, !1250, !1253, !1256, !1260, !1263, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1312, !1313, !1317}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1246, file: !605, line: 78, baseType: !113, size: 960)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1246, file: !605, line: 80, baseType: !131, size: 8192, offset: 960)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1246, file: !605, line: 82, baseType: !1251, size: 64, offset: 9152)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !605, line: 43, flags: DIFlagFwdDecl)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1246, file: !605, line: 83, baseType: !1254, size: 64, offset: 9216)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64)
!1255 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !39, line: 46, flags: DIFlagFwdDecl)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1246, file: !605, line: 86, baseType: !1257, size: 64, offset: 9280)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1259, line: 85, flags: DIFlagFwdDecl)
!1259 = !DIFile(filename: "blender/source/blender/imbuf/IMB_imbuf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1246, file: !605, line: 87, baseType: !1261, size: 64, offset: 9344)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !605, line: 44, flags: DIFlagFwdDecl)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1246, file: !605, line: 89, baseType: !1264, size: 512, offset: 9408)
!1264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1261, size: 512, elements: !932)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1246, file: !605, line: 90, baseType: !48, size: 16, offset: 9920)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1246, file: !605, line: 90, baseType: !48, size: 16, offset: 9936)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1246, file: !605, line: 92, baseType: !48, size: 16, offset: 9952)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1246, file: !605, line: 92, baseType: !48, size: 16, offset: 9968)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1246, file: !605, line: 93, baseType: !48, size: 16, offset: 9984)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1246, file: !605, line: 93, baseType: !48, size: 16, offset: 10000)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1246, file: !605, line: 94, baseType: !22, size: 32, offset: 10016)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1246, file: !605, line: 97, baseType: !48, size: 16, offset: 10048)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1246, file: !605, line: 97, baseType: !48, size: 16, offset: 10064)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1246, file: !605, line: 98, baseType: !48, size: 16, offset: 10080)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1246, file: !605, line: 98, baseType: !48, size: 16, offset: 10096)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1246, file: !605, line: 99, baseType: !48, size: 16, offset: 10112)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1246, file: !605, line: 99, baseType: !48, size: 16, offset: 10128)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1246, file: !605, line: 100, baseType: !205, size: 32, offset: 10144)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1246, file: !605, line: 101, baseType: !251, size: 64, offset: 10176)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1246, file: !605, line: 103, baseType: !137, size: 64, offset: 10240)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1246, file: !605, line: 104, baseType: !1282, size: 64, offset: 10304)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !39, line: 159, size: 448, elements: !1284)
!1284 = !{!1285, !1287, !1288, !1289, !1290, !1292}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1283, file: !39, line: 161, baseType: !1286, size: 64)
!1286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 64, elements: !818)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1283, file: !39, line: 162, baseType: !1286, size: 64, offset: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1283, file: !39, line: 163, baseType: !817, size: 32, offset: 128)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1283, file: !39, line: 164, baseType: !817, size: 32, offset: 160)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1283, file: !39, line: 165, baseType: !1291, size: 128, offset: 192)
!1291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !251, size: 128, elements: !818)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1283, file: !39, line: 166, baseType: !1293, size: 128, offset: 320)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1254, size: 128, elements: !818)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1246, file: !605, line: 107, baseType: !184, size: 32, offset: 10368)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1246, file: !605, line: 108, baseType: !22, size: 32, offset: 10400)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1246, file: !605, line: 109, baseType: !48, size: 16, offset: 10432)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1246, file: !605, line: 110, baseType: !48, size: 16, offset: 10448)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1246, file: !605, line: 113, baseType: !22, size: 32, offset: 10464)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1246, file: !605, line: 113, baseType: !22, size: 32, offset: 10496)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1246, file: !605, line: 114, baseType: !14, size: 8, offset: 10528)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1246, file: !605, line: 114, baseType: !14, size: 8, offset: 10536)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1246, file: !605, line: 115, baseType: !48, size: 16, offset: 10544)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1246, file: !605, line: 116, baseType: !496, size: 128, offset: 10560)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1246, file: !605, line: 119, baseType: !184, size: 32, offset: 10688)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1246, file: !605, line: 119, baseType: !184, size: 32, offset: 10720)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1246, file: !605, line: 122, baseType: !1307, size: 512, offset: 10752)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1308, line: 182, baseType: !1309)
!1308 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1308, line: 180, size: 512, elements: !1310)
!1310 = !{!1311}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1309, file: !1308, line: 181, baseType: !33, size: 512)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1246, file: !605, line: 123, baseType: !14, size: 8, offset: 11264)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1246, file: !605, line: 125, baseType: !1314, size: 56, offset: 11272)
!1314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 56, elements: !1315)
!1315 = !{!1316}
!1316 = !DISubrange(count: 7)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1246, file: !605, line: 126, baseType: !1318, size: 4096, offset: 11328)
!1318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1319, size: 4096, elements: !932)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !605, line: 69, baseType: !1320)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !605, line: 67, size: 512, elements: !1321)
!1321 = !{!1322}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1320, file: !605, line: 68, baseType: !33, size: 512)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !550, file: !161, line: 251, baseType: !504, size: 64, offset: 2880)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !550, file: !161, line: 252, baseType: !1325, size: 64, offset: 2944)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !161, line: 122, size: 1600, elements: !1327)
!1327 = !{!1328, !1329, !1330, !1334, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1326, file: !161, line: 123, baseType: !163, size: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1326, file: !161, line: 124, baseType: !1245, size: 64, offset: 64)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1326, file: !161, line: 125, baseType: !1331, size: 384, offset: 128)
!1331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !978, size: 384, elements: !1332)
!1332 = !{!1333}
!1333 = !DISubrange(count: 6)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1326, file: !161, line: 126, baseType: !1335, size: 512, offset: 512)
!1335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 512, elements: !1336)
!1336 = !{!498, !498}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1326, file: !161, line: 127, baseType: !246, size: 288, offset: 1024)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1326, file: !161, line: 128, baseType: !48, size: 16, offset: 1312)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1326, file: !161, line: 128, baseType: !48, size: 16, offset: 1328)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1326, file: !161, line: 129, baseType: !184, size: 32, offset: 1344)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1326, file: !161, line: 129, baseType: !184, size: 32, offset: 1376)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1326, file: !161, line: 130, baseType: !184, size: 32, offset: 1408)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1326, file: !161, line: 131, baseType: !205, size: 32, offset: 1440)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1326, file: !161, line: 132, baseType: !48, size: 16, offset: 1472)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1326, file: !161, line: 132, baseType: !48, size: 16, offset: 1488)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1326, file: !161, line: 133, baseType: !22, size: 32, offset: 1504)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1326, file: !161, line: 133, baseType: !22, size: 32, offset: 1536)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1326, file: !161, line: 134, baseType: !48, size: 16, offset: 1568)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1326, file: !161, line: 134, baseType: !48, size: 16, offset: 1584)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !550, file: !161, line: 253, baseType: !1282, size: 64, offset: 3008)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !550, file: !161, line: 254, baseType: !1352, size: 64, offset: 3072)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !161, line: 137, size: 832, elements: !1354)
!1354 = !{!1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1353, file: !161, line: 138, baseType: !48, size: 16)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1353, file: !161, line: 140, baseType: !48, size: 16, offset: 16)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1353, file: !161, line: 141, baseType: !184, size: 32, offset: 32)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1353, file: !161, line: 142, baseType: !184, size: 32, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1353, file: !161, line: 143, baseType: !48, size: 16, offset: 96)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1353, file: !161, line: 144, baseType: !48, size: 16, offset: 112)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1353, file: !161, line: 145, baseType: !22, size: 32, offset: 128)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1353, file: !161, line: 147, baseType: !22, size: 32, offset: 160)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1353, file: !161, line: 149, baseType: !163, size: 64, offset: 192)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1353, file: !161, line: 150, baseType: !22, size: 32, offset: 256)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1353, file: !161, line: 151, baseType: !48, size: 16, offset: 288)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1353, file: !161, line: 152, baseType: !48, size: 16, offset: 304)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1353, file: !161, line: 154, baseType: !56, size: 64, offset: 320)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1353, file: !161, line: 155, baseType: !216, size: 64, offset: 384)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1353, file: !161, line: 157, baseType: !184, size: 32, offset: 448)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1353, file: !161, line: 158, baseType: !48, size: 16, offset: 480)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1353, file: !161, line: 159, baseType: !48, size: 16, offset: 496)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1353, file: !161, line: 160, baseType: !48, size: 16, offset: 512)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1353, file: !161, line: 161, baseType: !188, size: 48, offset: 528)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1353, file: !161, line: 162, baseType: !184, size: 32, offset: 576)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1353, file: !161, line: 164, baseType: !184, size: 32, offset: 608)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1353, file: !161, line: 164, baseType: !184, size: 32, offset: 640)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1353, file: !161, line: 164, baseType: !184, size: 32, offset: 672)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1353, file: !161, line: 165, baseType: !504, size: 64, offset: 704)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1353, file: !161, line: 167, baseType: !1380, size: 64, offset: 768)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1308, line: 72, size: 3072, elements: !1382)
!1382 = !{!1383, !1384, !1385, !1386, !1387, !1388, !1389, !1414, !1415, !1416, !1417}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1381, file: !1308, line: 73, baseType: !22, size: 32)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1381, file: !1308, line: 73, baseType: !22, size: 32, offset: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1381, file: !1308, line: 74, baseType: !22, size: 32, offset: 64)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1381, file: !1308, line: 75, baseType: !22, size: 32, offset: 96)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1381, file: !1308, line: 77, baseType: !840, size: 128, offset: 128)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1381, file: !1308, line: 77, baseType: !840, size: 128, offset: 256)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1381, file: !1308, line: 79, baseType: !1390, size: 2304, offset: 384)
!1390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1391, size: 2304, elements: !497)
!1391 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1308, line: 67, baseType: !1392)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1308, line: 55, size: 576, elements: !1393)
!1393 = !{!1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1410, !1411, !1412, !1413}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1392, file: !1308, line: 56, baseType: !48, size: 16)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1392, file: !1308, line: 56, baseType: !48, size: 16, offset: 16)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1392, file: !1308, line: 58, baseType: !184, size: 32, offset: 32)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1392, file: !1308, line: 59, baseType: !184, size: 32, offset: 64)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1392, file: !1308, line: 59, baseType: !184, size: 32, offset: 96)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1392, file: !1308, line: 60, baseType: !860, size: 64, offset: 128)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1392, file: !1308, line: 60, baseType: !860, size: 64, offset: 192)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1392, file: !1308, line: 61, baseType: !1402, size: 64, offset: 256)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1308, line: 47, baseType: !1404)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1308, line: 44, size: 96, elements: !1405)
!1405 = !{!1406, !1407, !1408, !1409}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1404, file: !1308, line: 45, baseType: !184, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1404, file: !1308, line: 45, baseType: !184, size: 32, offset: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1404, file: !1308, line: 46, baseType: !48, size: 16, offset: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1404, file: !1308, line: 46, baseType: !48, size: 16, offset: 80)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1392, file: !1308, line: 62, baseType: !1402, size: 64, offset: 320)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1392, file: !1308, line: 64, baseType: !1402, size: 64, offset: 384)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1392, file: !1308, line: 65, baseType: !860, size: 64, offset: 448)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1392, file: !1308, line: 66, baseType: !860, size: 64, offset: 512)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1381, file: !1308, line: 80, baseType: !183, size: 96, offset: 2688)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1381, file: !1308, line: 80, baseType: !183, size: 96, offset: 2784)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1381, file: !1308, line: 81, baseType: !183, size: 96, offset: 2880)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1381, file: !1308, line: 83, baseType: !183, size: 96, offset: 2976)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !550, file: !161, line: 255, baseType: !1419, size: 64, offset: 3136)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !161, line: 170, size: 8704, elements: !1421)
!1421 = !{!1422, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1420, file: !161, line: 171, baseType: !1423, size: 96)
!1423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 96, elements: !185)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1420, file: !161, line: 172, baseType: !22, size: 32, offset: 96)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1420, file: !161, line: 173, baseType: !48, size: 16, offset: 128)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1420, file: !161, line: 174, baseType: !48, size: 16, offset: 144)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1420, file: !161, line: 175, baseType: !48, size: 16, offset: 160)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1420, file: !161, line: 176, baseType: !48, size: 16, offset: 176)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1420, file: !161, line: 177, baseType: !48, size: 16, offset: 192)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1420, file: !161, line: 178, baseType: !48, size: 16, offset: 208)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1420, file: !161, line: 179, baseType: !22, size: 32, offset: 224)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1420, file: !161, line: 181, baseType: !163, size: 64, offset: 256)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1420, file: !161, line: 182, baseType: !184, size: 32, offset: 320)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1420, file: !161, line: 183, baseType: !22, size: 32, offset: 352)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1420, file: !161, line: 184, baseType: !131, size: 8192, offset: 384)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1420, file: !161, line: 187, baseType: !216, size: 64, offset: 8576)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1420, file: !161, line: 188, baseType: !22, size: 32, offset: 8640)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1420, file: !161, line: 189, baseType: !22, size: 32, offset: 8672)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !550, file: !161, line: 256, baseType: !1440, size: 64, offset: 3200)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !161, line: 193, size: 640, elements: !1442)
!1442 = !{!1443, !1444, !1445, !1446}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1441, file: !161, line: 194, baseType: !163, size: 64)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1441, file: !161, line: 195, baseType: !33, size: 512, offset: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1441, file: !161, line: 197, baseType: !22, size: 32, offset: 576)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1441, file: !161, line: 198, baseType: !22, size: 32, offset: 608)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !550, file: !161, line: 258, baseType: !14, size: 8, offset: 3264)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !550, file: !161, line: 259, baseType: !1314, size: 56, offset: 3272)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !541, file: !161, line: 62, baseType: !33, size: 512, offset: 192)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !541, file: !161, line: 64, baseType: !14, size: 8, offset: 704)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !541, file: !161, line: 64, baseType: !14, size: 8, offset: 712)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !541, file: !161, line: 64, baseType: !14, size: 8, offset: 720)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !541, file: !161, line: 64, baseType: !14, size: 8, offset: 728)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !541, file: !161, line: 65, baseType: !183, size: 96, offset: 736)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !541, file: !161, line: 65, baseType: !183, size: 96, offset: 832)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !541, file: !161, line: 65, baseType: !184, size: 32, offset: 928)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !541, file: !161, line: 67, baseType: !48, size: 16, offset: 960)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !541, file: !161, line: 67, baseType: !48, size: 16, offset: 976)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !541, file: !161, line: 67, baseType: !48, size: 16, offset: 992)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !541, file: !161, line: 67, baseType: !48, size: 16, offset: 1008)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !541, file: !161, line: 68, baseType: !48, size: 16, offset: 1024)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !541, file: !161, line: 68, baseType: !48, size: 16, offset: 1040)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !541, file: !161, line: 69, baseType: !14, size: 8, offset: 1056)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !541, file: !161, line: 69, baseType: !1314, size: 56, offset: 1064)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !541, file: !161, line: 70, baseType: !184, size: 32, offset: 1120)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !541, file: !161, line: 70, baseType: !184, size: 32, offset: 1152)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !541, file: !161, line: 70, baseType: !184, size: 32, offset: 1184)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !541, file: !161, line: 70, baseType: !184, size: 32, offset: 1216)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !541, file: !161, line: 71, baseType: !184, size: 32, offset: 1248)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !541, file: !161, line: 71, baseType: !184, size: 32, offset: 1280)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !541, file: !161, line: 74, baseType: !184, size: 32, offset: 1312)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !541, file: !161, line: 74, baseType: !184, size: 32, offset: 1344)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !541, file: !161, line: 77, baseType: !184, size: 32, offset: 1376)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !541, file: !161, line: 77, baseType: !184, size: 32, offset: 1408)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !541, file: !161, line: 77, baseType: !184, size: 32, offset: 1440)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !541, file: !161, line: 78, baseType: !184, size: 32, offset: 1472)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !541, file: !161, line: 78, baseType: !184, size: 32, offset: 1504)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !541, file: !161, line: 78, baseType: !184, size: 32, offset: 1536)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !541, file: !161, line: 79, baseType: !184, size: 32, offset: 1568)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !541, file: !161, line: 79, baseType: !184, size: 32, offset: 1600)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !541, file: !161, line: 79, baseType: !184, size: 32, offset: 1632)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !541, file: !161, line: 79, baseType: !184, size: 32, offset: 1664)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !541, file: !161, line: 80, baseType: !184, size: 32, offset: 1696)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !541, file: !161, line: 80, baseType: !184, size: 32, offset: 1728)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !541, file: !161, line: 80, baseType: !184, size: 32, offset: 1760)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !541, file: !161, line: 81, baseType: !184, size: 32, offset: 1792)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !541, file: !161, line: 81, baseType: !184, size: 32, offset: 1824)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !541, file: !161, line: 81, baseType: !184, size: 32, offset: 1856)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !541, file: !161, line: 82, baseType: !184, size: 32, offset: 1888)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !541, file: !161, line: 82, baseType: !184, size: 32, offset: 1920)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !541, file: !161, line: 82, baseType: !184, size: 32, offset: 1952)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !541, file: !161, line: 85, baseType: !184, size: 32, offset: 1984)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !541, file: !161, line: 85, baseType: !184, size: 32, offset: 2016)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !541, file: !161, line: 85, baseType: !184, size: 32, offset: 2048)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !541, file: !161, line: 85, baseType: !184, size: 32, offset: 2080)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !541, file: !161, line: 86, baseType: !184, size: 32, offset: 2112)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !541, file: !161, line: 86, baseType: !184, size: 32, offset: 2144)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !541, file: !161, line: 86, baseType: !184, size: 32, offset: 2176)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !541, file: !161, line: 86, baseType: !184, size: 32, offset: 2208)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !541, file: !161, line: 87, baseType: !184, size: 32, offset: 2240)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !541, file: !161, line: 87, baseType: !184, size: 32, offset: 2272)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !541, file: !161, line: 87, baseType: !184, size: 32, offset: 2304)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !541, file: !161, line: 87, baseType: !184, size: 32, offset: 2336)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !541, file: !161, line: 90, baseType: !184, size: 32, offset: 2368)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !541, file: !161, line: 93, baseType: !184, size: 32, offset: 2400)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !541, file: !161, line: 93, baseType: !184, size: 32, offset: 2432)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !541, file: !161, line: 93, baseType: !184, size: 32, offset: 2464)
!1508 = !{!1509}
!1509 = !DISubrange(count: 18)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !379, file: !380, line: 168, baseType: !622, size: 64, offset: 6144)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !379, file: !380, line: 169, baseType: !280, size: 64, offset: 6208)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !379, file: !380, line: 170, baseType: !1513, size: 64, offset: 6272)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1514 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !380, line: 46, flags: DIFlagFwdDecl)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !379, file: !380, line: 171, baseType: !1282, size: 64, offset: 6336)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !379, file: !380, line: 174, baseType: !184, size: 32, offset: 6400)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !379, file: !380, line: 174, baseType: !184, size: 32, offset: 6432)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !379, file: !380, line: 174, baseType: !184, size: 32, offset: 6464)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !379, file: !380, line: 175, baseType: !184, size: 32, offset: 6496)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !379, file: !380, line: 175, baseType: !184, size: 32, offset: 6528)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !379, file: !380, line: 176, baseType: !48, size: 16, offset: 6560)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !379, file: !380, line: 176, baseType: !48, size: 16, offset: 6576)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !379, file: !380, line: 179, baseType: !183, size: 96, offset: 6592)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !379, file: !380, line: 179, baseType: !183, size: 96, offset: 6688)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !379, file: !380, line: 180, baseType: !184, size: 32, offset: 6784)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !379, file: !380, line: 180, baseType: !184, size: 32, offset: 6816)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !379, file: !380, line: 180, baseType: !184, size: 32, offset: 6848)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !379, file: !380, line: 181, baseType: !184, size: 32, offset: 6880)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !379, file: !380, line: 181, baseType: !184, size: 32, offset: 6912)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !379, file: !380, line: 182, baseType: !184, size: 32, offset: 6944)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !379, file: !380, line: 182, baseType: !184, size: 32, offset: 6976)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !379, file: !380, line: 183, baseType: !48, size: 16, offset: 7008)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !379, file: !380, line: 183, baseType: !48, size: 16, offset: 7024)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !379, file: !380, line: 185, baseType: !22, size: 32, offset: 7040)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !379, file: !380, line: 186, baseType: !48, size: 16, offset: 7072)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !379, file: !380, line: 187, baseType: !48, size: 16, offset: 7088)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !379, file: !380, line: 190, baseType: !496, size: 128, offset: 7104)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !379, file: !380, line: 191, baseType: !48, size: 16, offset: 7232)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !379, file: !380, line: 192, baseType: !48, size: 16, offset: 7248)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !379, file: !380, line: 195, baseType: !48, size: 16, offset: 7264)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !379, file: !380, line: 196, baseType: !48, size: 16, offset: 7280)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !379, file: !380, line: 197, baseType: !48, size: 16, offset: 7296)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !379, file: !380, line: 198, baseType: !188, size: 48, offset: 7312)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !379, file: !380, line: 200, baseType: !1545, size: 64, offset: 7360)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !380, line: 86, size: 192, elements: !1547)
!1547 = !{!1548, !1549, !1550, !1551}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1546, file: !380, line: 87, baseType: !1245, size: 64)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !1546, file: !380, line: 88, baseType: !913, size: 64, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1546, file: !380, line: 89, baseType: !22, size: 32, offset: 128)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1546, file: !380, line: 90, baseType: !22, size: 32, offset: 160)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !379, file: !380, line: 202, baseType: !58, size: 128, offset: 7424)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !164, file: !165, line: 151, baseType: !913, size: 64, offset: 3584)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !164, file: !165, line: 152, baseType: !22, size: 32, offset: 3648)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !164, file: !165, line: 153, baseType: !22, size: 32, offset: 3680)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !164, file: !165, line: 156, baseType: !183, size: 96, offset: 3712)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !164, file: !165, line: 156, baseType: !183, size: 96, offset: 3808)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !164, file: !165, line: 156, baseType: !183, size: 96, offset: 3904)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !164, file: !165, line: 157, baseType: !183, size: 96, offset: 4000)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !164, file: !165, line: 158, baseType: !183, size: 96, offset: 4096)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !164, file: !165, line: 159, baseType: !183, size: 96, offset: 4192)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !164, file: !165, line: 160, baseType: !183, size: 96, offset: 4288)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !164, file: !165, line: 160, baseType: !183, size: 96, offset: 4384)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !164, file: !165, line: 161, baseType: !496, size: 128, offset: 4480)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !164, file: !165, line: 161, baseType: !496, size: 128, offset: 4608)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !164, file: !165, line: 162, baseType: !183, size: 96, offset: 4736)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !164, file: !165, line: 162, baseType: !183, size: 96, offset: 4832)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !164, file: !165, line: 163, baseType: !184, size: 32, offset: 4928)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !164, file: !165, line: 163, baseType: !184, size: 32, offset: 4960)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !164, file: !165, line: 164, baseType: !1335, size: 512, offset: 4992)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !164, file: !165, line: 165, baseType: !1335, size: 512, offset: 5504)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !164, file: !165, line: 166, baseType: !1335, size: 512, offset: 6016)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !164, file: !165, line: 167, baseType: !1335, size: 512, offset: 6528)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !164, file: !165, line: 176, baseType: !1335, size: 512, offset: 7040)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !164, file: !165, line: 178, baseType: !205, size: 32, offset: 7552)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !164, file: !165, line: 180, baseType: !48, size: 16, offset: 7584)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !164, file: !165, line: 181, baseType: !48, size: 16, offset: 7600)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !164, file: !165, line: 183, baseType: !48, size: 16, offset: 7616)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !164, file: !165, line: 183, baseType: !48, size: 16, offset: 7632)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !164, file: !165, line: 184, baseType: !48, size: 16, offset: 7648)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !164, file: !165, line: 184, baseType: !48, size: 16, offset: 7664)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !164, file: !165, line: 185, baseType: !48, size: 16, offset: 7680)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !164, file: !165, line: 186, baseType: !48, size: 16, offset: 7696)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !164, file: !165, line: 187, baseType: !48, size: 16, offset: 7712)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !164, file: !165, line: 188, baseType: !14, size: 8, offset: 7728)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !164, file: !165, line: 189, baseType: !14, size: 8, offset: 7736)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !164, file: !165, line: 192, baseType: !22, size: 32, offset: 7744)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !164, file: !165, line: 192, baseType: !22, size: 32, offset: 7776)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !164, file: !165, line: 192, baseType: !22, size: 32, offset: 7808)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !164, file: !165, line: 192, baseType: !22, size: 32, offset: 7840)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !164, file: !165, line: 194, baseType: !22, size: 32, offset: 7872)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !164, file: !165, line: 202, baseType: !184, size: 32, offset: 7904)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !164, file: !165, line: 202, baseType: !184, size: 32, offset: 7936)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !164, file: !165, line: 202, baseType: !184, size: 32, offset: 7968)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !164, file: !165, line: 211, baseType: !184, size: 32, offset: 8000)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !164, file: !165, line: 212, baseType: !184, size: 32, offset: 8032)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !164, file: !165, line: 213, baseType: !184, size: 32, offset: 8064)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !164, file: !165, line: 214, baseType: !184, size: 32, offset: 8096)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !164, file: !165, line: 215, baseType: !184, size: 32, offset: 8128)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !164, file: !165, line: 216, baseType: !184, size: 32, offset: 8160)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !164, file: !165, line: 219, baseType: !184, size: 32, offset: 8192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !164, file: !165, line: 220, baseType: !184, size: 32, offset: 8224)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !164, file: !165, line: 221, baseType: !184, size: 32, offset: 8256)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !164, file: !165, line: 224, baseType: !1605, size: 16, offset: 8288)
!1605 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !164, file: !165, line: 224, baseType: !1605, size: 16, offset: 8304)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !164, file: !165, line: 226, baseType: !48, size: 16, offset: 8320)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !164, file: !165, line: 228, baseType: !14, size: 8, offset: 8336)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !164, file: !165, line: 229, baseType: !14, size: 8, offset: 8344)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !164, file: !165, line: 231, baseType: !48, size: 16, offset: 8352)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !164, file: !165, line: 232, baseType: !14, size: 8, offset: 8368)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !164, file: !165, line: 233, baseType: !14, size: 8, offset: 8376)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !164, file: !165, line: 234, baseType: !184, size: 32, offset: 8384)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !164, file: !165, line: 235, baseType: !184, size: 32, offset: 8416)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !164, file: !165, line: 237, baseType: !58, size: 128, offset: 8448)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !164, file: !165, line: 238, baseType: !58, size: 128, offset: 8576)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !164, file: !165, line: 239, baseType: !58, size: 128, offset: 8704)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !164, file: !165, line: 240, baseType: !58, size: 128, offset: 8832)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !164, file: !165, line: 242, baseType: !184, size: 32, offset: 8960)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !164, file: !165, line: 244, baseType: !48, size: 16, offset: 8992)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !164, file: !165, line: 245, baseType: !1605, size: 16, offset: 9008)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !164, file: !165, line: 246, baseType: !496, size: 128, offset: 9024)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !164, file: !165, line: 248, baseType: !22, size: 32, offset: 9152)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !164, file: !165, line: 249, baseType: !22, size: 32, offset: 9184)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !164, file: !165, line: 251, baseType: !1626, size: 64, offset: 9216)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !165, line: 251, flags: DIFlagFwdDecl)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !164, file: !165, line: 253, baseType: !14, size: 8, offset: 9280)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !164, file: !165, line: 254, baseType: !14, size: 8, offset: 9288)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !164, file: !165, line: 255, baseType: !48, size: 16, offset: 9296)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !164, file: !165, line: 256, baseType: !183, size: 96, offset: 9312)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !164, file: !165, line: 258, baseType: !58, size: 128, offset: 9408)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !164, file: !165, line: 259, baseType: !58, size: 128, offset: 9536)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !164, file: !165, line: 260, baseType: !58, size: 128, offset: 9664)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !164, file: !165, line: 261, baseType: !58, size: 128, offset: 9792)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !164, file: !165, line: 263, baseType: !1637, size: 64, offset: 9920)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64)
!1638 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !165, line: 52, flags: DIFlagFwdDecl)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !164, file: !165, line: 264, baseType: !1640, size: 64, offset: 9984)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64)
!1641 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !165, line: 53, flags: DIFlagFwdDecl)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !164, file: !165, line: 265, baseType: !1513, size: 64, offset: 10048)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !164, file: !165, line: 267, baseType: !14, size: 8, offset: 10112)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !164, file: !165, line: 268, baseType: !14, size: 8, offset: 10120)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !164, file: !165, line: 269, baseType: !48, size: 16, offset: 10128)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !164, file: !165, line: 270, baseType: !184, size: 32, offset: 10144)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !164, file: !165, line: 272, baseType: !1648, size: 64, offset: 10176)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64)
!1649 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !165, line: 54, flags: DIFlagFwdDecl)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !164, file: !165, line: 275, baseType: !1651, size: 64, offset: 10240)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64)
!1652 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !165, line: 275, flags: DIFlagFwdDecl)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !164, file: !165, line: 277, baseType: !1654, size: 64, offset: 10304)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !214, line: 178, size: 13504, elements: !1656)
!1656 = !{!1657, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1713, !1750, !1757, !1758, !1765, !1766, !1767, !1768, !1774, !1779, !1780, !1784, !1785, !1786, !1787, !1788, !1792, !1804, !1818, !1822, !1826, !1830, !1834, !1838, !1842, !1846, !1850, !1854, !1858, !1859, !1860, !1861, !1862, !1863, !1867, !1868, !1869, !1870, !1874, !1875, !1876, !1877, !1878, !1883, !1884, !1885, !1886, !1887, !1891, !1892, !1893, !1894, !1895, !1902, !1913, !1917, !1923, !1933, !1937, !1952, !1959, !1966, !1970, !1974, !1978, !1982, !1983, !1984, !1988, !1992, !1993, !1994, !1998, !1999, !2008, !2047, !2051, !2059, !2063, !2067, !2071, !2079, !2089}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !1655, file: !214, line: 180, baseType: !1658, size: 1600)
!1658 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !1659, line: 73, baseType: !1660)
!1659 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !1659, line: 64, size: 1600, elements: !1661)
!1661 = !{!1662, !1677, !1681, !1682, !1683, !1684, !1688}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1660, file: !1659, line: 65, baseType: !1663, size: 64)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 64)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !1659, line: 53, baseType: !1665)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !1659, line: 42, size: 832, elements: !1666)
!1666 = !{!1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1665, file: !1659, line: 43, baseType: !22, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1665, file: !1659, line: 44, baseType: !22, size: 32, offset: 32)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1665, file: !1659, line: 45, baseType: !22, size: 32, offset: 64)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1665, file: !1659, line: 46, baseType: !22, size: 32, offset: 96)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !1665, file: !1659, line: 47, baseType: !22, size: 32, offset: 128)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !1665, file: !1659, line: 48, baseType: !22, size: 32, offset: 160)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !1665, file: !1659, line: 49, baseType: !22, size: 32, offset: 192)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1665, file: !1659, line: 50, baseType: !22, size: 32, offset: 224)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1665, file: !1659, line: 51, baseType: !33, size: 512, offset: 256)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1665, file: !1659, line: 52, baseType: !56, size: 64, offset: 768)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !1660, file: !1659, line: 66, baseType: !1678, size: 1312, offset: 64)
!1678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1312, elements: !1679)
!1679 = !{!1680}
!1680 = !DISubrange(count: 41)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !1660, file: !1659, line: 69, baseType: !22, size: 32, offset: 1376)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !1660, file: !1659, line: 69, baseType: !22, size: 32, offset: 1408)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !1660, file: !1659, line: 70, baseType: !22, size: 32, offset: 1440)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1660, file: !1659, line: 71, baseType: !1685, size: 64, offset: 1472)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64)
!1686 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !1687, line: 39, flags: DIFlagFwdDecl)
!1687 = !DIFile(filename: "blender/source/blender/blenlib/BLI_linklist.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !1660, file: !1659, line: 72, baseType: !1689, size: 64, offset: 1536)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64)
!1690 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !1659, line: 59, baseType: !1691)
!1691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !1659, line: 57, size: 8192, elements: !1692)
!1692 = !{!1693}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1691, file: !1659, line: 58, baseType: !131, size: 8192)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !1655, file: !214, line: 180, baseType: !1658, size: 1600, offset: 1600)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !1655, file: !214, line: 180, baseType: !1658, size: 1600, offset: 3200)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !1655, file: !214, line: 180, baseType: !1658, size: 1600, offset: 4800)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !1655, file: !214, line: 180, baseType: !1658, size: 1600, offset: 6400)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !1655, file: !214, line: 181, baseType: !22, size: 32, offset: 8000)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !1655, file: !214, line: 181, baseType: !22, size: 32, offset: 8032)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !1655, file: !214, line: 181, baseType: !22, size: 32, offset: 8064)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !1655, file: !214, line: 181, baseType: !22, size: 32, offset: 8096)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !1655, file: !214, line: 181, baseType: !22, size: 32, offset: 8128)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !1655, file: !214, line: 182, baseType: !22, size: 32, offset: 8160)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !1655, file: !214, line: 183, baseType: !22, size: 32, offset: 8192)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !1655, file: !214, line: 184, baseType: !1706, size: 64, offset: 8256)
!1706 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !1707, line: 124, baseType: !1708)
!1707 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 64)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !1687, line: 45, size: 128, elements: !1710)
!1710 = !{!1711, !1712}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1709, file: !1687, line: 46, baseType: !1708, size: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1709, file: !1687, line: 47, baseType: !56, size: 64, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !1655, file: !214, line: 185, baseType: !1714, size: 64, offset: 8320)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !1716, line: 84, size: 832, elements: !1717)
!1716 = !DIFile(filename: "blender/source/blender/gpu/GPU_buffers.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1717 = !{!1718, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1735, !1736, !1744, !1745, !1746, !1747, !1748, !1749}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1715, file: !1716, line: 85, baseType: !1719, size: 64)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1720 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUBuffer", file: !1716, line: 57, baseType: !1721)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUBuffer", file: !1716, line: 53, size: 192, elements: !1722)
!1722 = !{!1723, !1724, !1725}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1721, file: !1716, line: 54, baseType: !22, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1721, file: !1716, line: 55, baseType: !56, size: 64, offset: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1721, file: !1716, line: 56, baseType: !205, size: 32, offset: 128)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "normals", scope: !1715, file: !1716, line: 86, baseType: !1719, size: 64, offset: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !1715, file: !1716, line: 87, baseType: !1719, size: 64, offset: 128)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !1715, file: !1716, line: 88, baseType: !1719, size: 64, offset: 192)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !1715, file: !1716, line: 89, baseType: !1719, size: 64, offset: 256)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "uvedges", scope: !1715, file: !1716, line: 90, baseType: !1719, size: 64, offset: 320)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "triangle_to_mface", scope: !1715, file: !1716, line: 93, baseType: !224, size: 64, offset: 384)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "vert_points", scope: !1715, file: !1716, line: 96, baseType: !1733, size: 64, offset: 448)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64)
!1734 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUVertPointLink", file: !1716, line: 50, flags: DIFlagFwdDecl)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "colType", scope: !1715, file: !1716, line: 105, baseType: !22, size: 32, offset: 512)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "materials", scope: !1715, file: !1716, line: 107, baseType: !1737, size: 64, offset: 576)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!1738 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUBufferMaterial", file: !1716, line: 66, baseType: !1739)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUBufferMaterial", file: !1716, line: 59, size: 96, elements: !1740)
!1740 = !{!1741, !1742, !1743}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1739, file: !1716, line: 61, baseType: !22, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1739, file: !1716, line: 62, baseType: !22, size: 32, offset: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1739, file: !1716, line: 65, baseType: !48, size: 16, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "totmaterial", scope: !1715, file: !1716, line: 108, baseType: !22, size: 32, offset: 640)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "tot_triangle_point", scope: !1715, file: !1716, line: 110, baseType: !22, size: 32, offset: 672)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "tot_loose_point", scope: !1715, file: !1716, line: 111, baseType: !22, size: 32, offset: 704)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !1715, file: !1716, line: 114, baseType: !22, size: 32, offset: 736)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !1715, file: !1716, line: 115, baseType: !22, size: 32, offset: 768)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "legacy", scope: !1715, file: !1716, line: 119, baseType: !233, size: 8, offset: 800)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1655, file: !214, line: 186, baseType: !1751, size: 32, offset: 8384)
!1751 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !214, line: 132, baseType: !1752)
!1752 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !214, line: 128, baseType: !205, size: 32, elements: !1753)
!1753 = !{!1754, !1755, !1756}
!1754 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!1755 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!1756 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !1655, file: !214, line: 187, baseType: !184, size: 32, offset: 8416)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !1655, file: !214, line: 188, baseType: !1759, size: 32, offset: 8448)
!1759 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !214, line: 175, baseType: !1760)
!1760 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !214, line: 164, baseType: !205, size: 32, elements: !1761)
!1761 = !{!1762, !1763, !1764}
!1762 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!1763 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!1764 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !1655, file: !214, line: 189, baseType: !22, size: 32, offset: 8480)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1655, file: !214, line: 190, baseType: !377, size: 64, offset: 8512)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !1655, file: !214, line: 193, baseType: !14, size: 8, offset: 8576)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !1655, file: !214, line: 196, baseType: !1769, size: 64, offset: 8640)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 64)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{null, !1772}
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !214, line: 177, baseType: !1655)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !1655, file: !214, line: 199, baseType: !1775, size: 64, offset: 8704)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64)
!1776 = !DISubroutineType(types: !1777)
!1777 = !{null, !1772, !1778}
!1778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !184)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !1655, file: !214, line: 202, baseType: !1769, size: 64, offset: 8768)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !1655, file: !214, line: 207, baseType: !1781, size: 64, offset: 8832)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 64)
!1782 = !DISubroutineType(types: !1783)
!1783 = !{!22, !1772}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !1655, file: !214, line: 208, baseType: !1781, size: 64, offset: 8896)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !1655, file: !214, line: 209, baseType: !1781, size: 64, offset: 8960)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !1655, file: !214, line: 210, baseType: !1781, size: 64, offset: 9024)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !1655, file: !214, line: 211, baseType: !1781, size: 64, offset: 9088)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !1655, file: !214, line: 218, baseType: !1789, size: 64, offset: 9152)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64)
!1790 = !DISubroutineType(types: !1791)
!1791 = !{null, !1772, !22, !178}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !1655, file: !214, line: 219, baseType: !1793, size: 64, offset: 9216)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64)
!1794 = !DISubroutineType(types: !1795)
!1795 = !{null, !1772, !22, !1796}
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !180, line: 48, size: 96, elements: !1798)
!1798 = !{!1799, !1800, !1801, !1802, !1803}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1797, file: !180, line: 49, baseType: !205, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1797, file: !180, line: 49, baseType: !205, size: 32, offset: 32)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !1797, file: !180, line: 50, baseType: !14, size: 8, offset: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !1797, file: !180, line: 50, baseType: !14, size: 8, offset: 72)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1797, file: !180, line: 51, baseType: !48, size: 16, offset: 80)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !1655, file: !214, line: 220, baseType: !1805, size: 64, offset: 9280)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = !DISubroutineType(types: !1807)
!1807 = !{null, !1772, !22, !1808}
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !180, line: 42, size: 160, elements: !1810)
!1810 = !{!1811, !1812, !1813, !1814, !1815, !1816, !1817}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1809, file: !180, line: 43, baseType: !205, size: 32)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1809, file: !180, line: 43, baseType: !205, size: 32, offset: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1809, file: !180, line: 43, baseType: !205, size: 32, offset: 64)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1809, file: !180, line: 43, baseType: !205, size: 32, offset: 96)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1809, file: !180, line: 44, baseType: !48, size: 16, offset: 128)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !1809, file: !180, line: 45, baseType: !14, size: 8, offset: 144)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1809, file: !180, line: 45, baseType: !14, size: 8, offset: 152)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !1655, file: !214, line: 227, baseType: !1819, size: 64, offset: 9344)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 64)
!1820 = !DISubroutineType(types: !1821)
!1821 = !{!178, !1772}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !1655, file: !214, line: 228, baseType: !1823, size: 64, offset: 9408)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!1796, !1772}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !1655, file: !214, line: 229, baseType: !1827, size: 64, offset: 9472)
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 64)
!1828 = !DISubroutineType(types: !1829)
!1829 = !{!1808, !1772}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !1655, file: !214, line: 230, baseType: !1831, size: 64, offset: 9536)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1832 = !DISubroutineType(types: !1833)
!1833 = !{!201, !1772}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !1655, file: !214, line: 231, baseType: !1835, size: 64, offset: 9600)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64)
!1836 = !DISubroutineType(types: !1837)
!1837 = !{!192, !1772}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !1655, file: !214, line: 236, baseType: !1839, size: 64, offset: 9664)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 64)
!1840 = !DISubroutineType(types: !1841)
!1841 = !{null, !1772, !178}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !1655, file: !214, line: 237, baseType: !1843, size: 64, offset: 9728)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 64)
!1844 = !DISubroutineType(types: !1845)
!1845 = !{null, !1772, !1796}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !1655, file: !214, line: 238, baseType: !1847, size: 64, offset: 9792)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = !DISubroutineType(types: !1849)
!1849 = !{null, !1772, !1808}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !1655, file: !214, line: 239, baseType: !1851, size: 64, offset: 9856)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{null, !1772, !201}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !1655, file: !214, line: 240, baseType: !1855, size: 64, offset: 9920)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!1856 = !DISubroutineType(types: !1857)
!1857 = !{null, !1772, !192}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !1655, file: !214, line: 245, baseType: !1819, size: 64, offset: 9984)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !1655, file: !214, line: 246, baseType: !1823, size: 64, offset: 10048)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !1655, file: !214, line: 247, baseType: !1827, size: 64, offset: 10112)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !1655, file: !214, line: 248, baseType: !1831, size: 64, offset: 10176)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !1655, file: !214, line: 249, baseType: !1835, size: 64, offset: 10240)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !1655, file: !214, line: 255, baseType: !1864, size: 64, offset: 10304)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = !DISubroutineType(types: !1866)
!1866 = !{!56, !1772, !22, !22}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !1655, file: !214, line: 256, baseType: !1864, size: 64, offset: 10368)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !1655, file: !214, line: 257, baseType: !1864, size: 64, offset: 10432)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !1655, file: !214, line: 258, baseType: !1864, size: 64, offset: 10496)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !1655, file: !214, line: 264, baseType: !1871, size: 64, offset: 10560)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 64)
!1872 = !DISubroutineType(types: !1873)
!1873 = !{!56, !1772, !22}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !1655, file: !214, line: 265, baseType: !1871, size: 64, offset: 10624)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !1655, file: !214, line: 266, baseType: !1871, size: 64, offset: 10688)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !1655, file: !214, line: 267, baseType: !1871, size: 64, offset: 10752)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !1655, file: !214, line: 268, baseType: !1871, size: 64, offset: 10816)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !1655, file: !214, line: 272, baseType: !1879, size: 64, offset: 10880)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{!1882, !1772}
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !1655, file: !214, line: 273, baseType: !1879, size: 64, offset: 10944)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !1655, file: !214, line: 274, baseType: !1879, size: 64, offset: 11008)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !1655, file: !214, line: 275, baseType: !1879, size: 64, offset: 11072)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !1655, file: !214, line: 276, baseType: !1879, size: 64, offset: 11136)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !1655, file: !214, line: 279, baseType: !1888, size: 64, offset: 11200)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = !DISubroutineType(types: !1890)
!1890 = !{null, !1772, !22, !1882, !22}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !1655, file: !214, line: 280, baseType: !1888, size: 64, offset: 11264)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !1655, file: !214, line: 281, baseType: !1888, size: 64, offset: 11328)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !1655, file: !214, line: 284, baseType: !1781, size: 64, offset: 11392)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !1655, file: !214, line: 285, baseType: !1781, size: 64, offset: 11456)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !1655, file: !214, line: 286, baseType: !1896, size: 64, offset: 11520)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 64)
!1897 = !DISubroutineType(types: !1898)
!1898 = !{!1899, !1772}
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 64)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64)
!1901 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !214, line: 82, flags: DIFlagFwdDecl)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !1655, file: !214, line: 287, baseType: !1903, size: 64, offset: 11584)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64)
!1904 = !DISubroutineType(types: !1905)
!1905 = !{!1906, !1772}
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 64)
!1907 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !214, line: 120, baseType: !1908)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !214, line: 117, size: 256, elements: !1909)
!1909 = !{!1910, !1912}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1908, file: !214, line: 118, baseType: !1911, size: 128)
!1911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 128, elements: !497)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !1908, file: !214, line: 119, baseType: !1911, size: 128, offset: 128)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !1655, file: !214, line: 288, baseType: !1914, size: 64, offset: 11648)
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 64)
!1915 = !DISubroutineType(types: !1916)
!1916 = !{!224, !1772}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !1655, file: !214, line: 289, baseType: !1918, size: 64, offset: 11712)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!1919 = !DISubroutineType(types: !1920)
!1920 = !{null, !1772, !1921}
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 64)
!1922 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !214, line: 83, flags: DIFlagFwdDecl)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !1655, file: !214, line: 290, baseType: !1924, size: 64, offset: 11776)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!1925 = !DISubroutineType(types: !1926)
!1926 = !{!1927, !1772}
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 64)
!1928 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !214, line: 126, baseType: !1929)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !214, line: 123, size: 32, elements: !1930)
!1930 = !{!1931, !1932}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1929, file: !214, line: 124, baseType: !48, size: 16)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1929, file: !214, line: 125, baseType: !14, size: 8, offset: 16)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !1655, file: !214, line: 291, baseType: !1934, size: 64, offset: 11840)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = !DISubroutineType(types: !1936)
!1936 = !{!1000, !1772}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !1655, file: !214, line: 299, baseType: !1938, size: 64, offset: 11904)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{null, !1772, !1941, !56, !1947}
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64)
!1942 = !DISubroutineType(types: !1943)
!1943 = !{null, !56, !22, !1944, !1944, !1945}
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !48)
!1947 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !214, line: 162, baseType: !1948)
!1948 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !214, line: 159, baseType: !205, size: 32, elements: !1949)
!1949 = !{!1950, !1951}
!1950 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!1951 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !1655, file: !214, line: 309, baseType: !1953, size: 64, offset: 11968)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = !DISubroutineType(types: !1955)
!1955 = !{null, !1772, !1956, !56}
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64)
!1957 = !DISubroutineType(types: !1958)
!1958 = !{null, !56, !22, !1944, !1944}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !1655, file: !214, line: 317, baseType: !1960, size: 64, offset: 12032)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 64)
!1961 = !DISubroutineType(types: !1962)
!1962 = !{null, !1772, !1963, !56, !1947}
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!1964 = !DISubroutineType(types: !1965)
!1965 = !{null, !56, !22, !22, !1944, !1944}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !1655, file: !214, line: 327, baseType: !1967, size: 64, offset: 12096)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = !DISubroutineType(types: !1969)
!1969 = !{null, !1772, !1956, !56, !1947}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !1655, file: !214, line: 337, baseType: !1971, size: 64, offset: 12160)
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 64)
!1972 = !DISubroutineType(types: !1973)
!1973 = !{null, !1772, !216, !216}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !1655, file: !214, line: 344, baseType: !1975, size: 64, offset: 12224)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 64)
!1976 = !DISubroutineType(types: !1977)
!1977 = !{null, !1772, !22, !216}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !1655, file: !214, line: 347, baseType: !1979, size: 64, offset: 12288)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64)
!1980 = !DISubroutineType(types: !1981)
!1981 = !{null, !1772, !210}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !1655, file: !214, line: 350, baseType: !1975, size: 64, offset: 12352)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !1655, file: !214, line: 351, baseType: !1975, size: 64, offset: 12416)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !1655, file: !214, line: 355, baseType: !1985, size: 64, offset: 12480)
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64)
!1986 = !DISubroutineType(types: !1987)
!1987 = !{!218, !163, !1772}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !1655, file: !214, line: 359, baseType: !1989, size: 64, offset: 12544)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!1990 = !DISubroutineType(types: !1991)
!1991 = !{!238, !163, !1772}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !1655, file: !214, line: 364, baseType: !1769, size: 64, offset: 12608)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !1655, file: !214, line: 367, baseType: !1769, size: 64, offset: 12672)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !1655, file: !214, line: 373, baseType: !1995, size: 64, offset: 12736)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = !DISubroutineType(types: !1997)
!1997 = !{null, !1772, !233, !233}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !1655, file: !214, line: 376, baseType: !1769, size: 64, offset: 12800)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !1655, file: !214, line: 385, baseType: !2000, size: 64, offset: 12864)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{null, !1772, !2003, !233, !2004}
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!2004 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !214, line: 146, baseType: !2005)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2006 = !DISubroutineType(types: !2007)
!2007 = !{!22, !22, !56}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !1655, file: !214, line: 391, baseType: !2009, size: 64, offset: 12928)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{null, !1772, !2012, !2036, !56, !2040}
!2012 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !214, line: 150, baseType: !2013)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!2016, !2023, !2035, !22}
!2016 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !214, line: 143, baseType: !2017)
!2017 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !214, line: 134, baseType: !205, size: 32, elements: !2018)
!2018 = !{!2019, !2020, !2021, !2022}
!2019 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!2020 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!2021 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!2022 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 64)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !180, line: 160, size: 384, elements: !2025)
!2025 = !{!2026, !2029, !2030, !2031, !2032, !2033, !2034}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2024, file: !180, line: 161, baseType: !2027, size: 256)
!2027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 256, elements: !2028)
!2028 = !{!498, !819}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !2024, file: !180, line: 162, baseType: !1245, size: 64, offset: 256)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2024, file: !180, line: 163, baseType: !14, size: 8, offset: 320)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2024, file: !180, line: 163, baseType: !14, size: 8, offset: 328)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2024, file: !180, line: 164, baseType: !48, size: 16, offset: 336)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !2024, file: !180, line: 164, baseType: !48, size: 16, offset: 352)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !2024, file: !180, line: 164, baseType: !48, size: 16, offset: 368)
!2035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !233)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !214, line: 147, baseType: !2037)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2038 = !DISubroutineType(types: !2039)
!2039 = !{!22, !56, !22, !22}
!2040 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !214, line: 157, baseType: !2041)
!2041 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !214, line: 152, baseType: !205, size: 32, elements: !2042)
!2042 = !{!2043, !2044, !2045, !2046}
!2043 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!2044 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!2045 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!2046 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !1655, file: !214, line: 400, baseType: !2048, size: 64, offset: 12992)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = !DISubroutineType(types: !2050)
!2050 = !{null, !1772, !2004}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !1655, file: !214, line: 415, baseType: !2052, size: 64, offset: 13056)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{null, !1772, !2055, !2004, !2036, !56, !2040}
!2055 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !214, line: 149, baseType: !2056)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!2057 = !DISubroutineType(types: !2058)
!2058 = !{!2016, !56, !22}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !1655, file: !214, line: 425, baseType: !2060, size: 64, offset: 13120)
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64)
!2061 = !DISubroutineType(types: !2062)
!2062 = !{null, !1772, !2055, !2036, !56, !2040}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !1655, file: !214, line: 435, baseType: !2064, size: 64, offset: 13184)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!2065 = !DISubroutineType(types: !2066)
!2066 = !{null, !1772, !2004, !2055, !56}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !1655, file: !214, line: 444, baseType: !2068, size: 64, offset: 13248)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!2069 = !DISubroutineType(types: !2070)
!2070 = !{null, !1772, !2055, !56}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !1655, file: !214, line: 455, baseType: !2072, size: 64, offset: 13312)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 64)
!2073 = !DISubroutineType(types: !2074)
!2074 = !{null, !1772, !2055, !2075, !56}
!2075 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !214, line: 148, baseType: !2076)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64)
!2077 = !DISubroutineType(types: !2078)
!2078 = !{null, !56, !22, !184}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !1655, file: !214, line: 464, baseType: !2080, size: 64, offset: 13376)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!2081 = !DISubroutineType(types: !2082)
!2082 = !{null, !1772, !2083, !2086, !56}
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = !DISubroutineType(types: !2085)
!2085 = !{null, !56, !22, !56}
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64)
!2087 = !DISubroutineType(types: !2088)
!2088 = !{!233, !56, !22}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1655, file: !214, line: 470, baseType: !1769, size: 64, offset: 13440)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !164, file: !165, line: 277, baseType: !1654, size: 64, offset: 10368)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !164, file: !165, line: 278, baseType: !2092, size: 64, offset: 10432)
!2092 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !2093, line: 27, baseType: !2094)
!2093 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!2094 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !2095, line: 45, baseType: !2096)
!2095 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2096 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !164, file: !165, line: 279, baseType: !2092, size: 64, offset: 10496)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !164, file: !165, line: 280, baseType: !205, size: 32, offset: 10560)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !164, file: !165, line: 281, baseType: !205, size: 32, offset: 10592)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !164, file: !165, line: 283, baseType: !58, size: 128, offset: 10624)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !164, file: !165, line: 284, baseType: !58, size: 128, offset: 10752)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !164, file: !165, line: 285, baseType: !2103, size: 64, offset: 10880)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !164, file: !165, line: 287, baseType: !2105, size: 64, offset: 10944)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !165, line: 59, flags: DIFlagFwdDecl)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !164, file: !165, line: 288, baseType: !2108, size: 64, offset: 11008)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2109 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !165, line: 288, flags: DIFlagFwdDecl)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !164, file: !165, line: 290, baseType: !860, size: 64, offset: 11072)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !164, file: !165, line: 291, baseType: !2112, size: 64, offset: 11136)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !605, line: 65, baseType: !604)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !164, file: !165, line: 293, baseType: !58, size: 128, offset: 11200)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !164, file: !165, line: 294, baseType: !2116, size: 64, offset: 11328)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !165, line: 113, baseType: !2118)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !165, line: 108, size: 256, elements: !2119)
!2119 = !{!2120, !2122, !2123, !2124, !2125}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2118, file: !165, line: 109, baseType: !2121, size: 64)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2118, file: !165, line: 109, baseType: !2121, size: 64, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2118, file: !165, line: 110, baseType: !163, size: 64, offset: 128)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2118, file: !165, line: 111, baseType: !22, size: 32, offset: 192)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2118, file: !165, line: 112, baseType: !184, size: 32, offset: 224)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !154, file: !155, line: 1221, baseType: !2127, size: 64, offset: 1088)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 64)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !2129, line: 52, size: 4224, elements: !2130)
!2129 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2130 = !{!2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2128, file: !2129, line: 53, baseType: !113, size: 960)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2128, file: !2129, line: 54, baseType: !159, size: 64, offset: 960)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !2128, file: !2129, line: 56, baseType: !48, size: 16, offset: 1024)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !2128, file: !2129, line: 56, baseType: !48, size: 16, offset: 1040)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !2128, file: !2129, line: 57, baseType: !48, size: 16, offset: 1056)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !2128, file: !2129, line: 57, baseType: !48, size: 16, offset: 1072)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !2128, file: !2129, line: 59, baseType: !184, size: 32, offset: 1088)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !2128, file: !2129, line: 59, baseType: !184, size: 32, offset: 1120)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !2128, file: !2129, line: 59, baseType: !184, size: 32, offset: 1152)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !2128, file: !2129, line: 60, baseType: !184, size: 32, offset: 1184)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !2128, file: !2129, line: 60, baseType: !184, size: 32, offset: 1216)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !2128, file: !2129, line: 60, baseType: !184, size: 32, offset: 1248)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !2128, file: !2129, line: 61, baseType: !184, size: 32, offset: 1280)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !2128, file: !2129, line: 61, baseType: !184, size: 32, offset: 1312)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !2128, file: !2129, line: 61, baseType: !184, size: 32, offset: 1344)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2128, file: !2129, line: 68, baseType: !184, size: 32, offset: 1376)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !2128, file: !2129, line: 68, baseType: !184, size: 32, offset: 1408)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2128, file: !2129, line: 68, baseType: !184, size: 32, offset: 1440)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !2128, file: !2129, line: 69, baseType: !184, size: 32, offset: 1472)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !2128, file: !2129, line: 69, baseType: !184, size: 32, offset: 1504)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2128, file: !2129, line: 74, baseType: !184, size: 32, offset: 1536)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2128, file: !2129, line: 79, baseType: !184, size: 32, offset: 1568)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !2128, file: !2129, line: 81, baseType: !48, size: 16, offset: 1600)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2128, file: !2129, line: 91, baseType: !48, size: 16, offset: 1616)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2128, file: !2129, line: 92, baseType: !48, size: 16, offset: 1632)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2128, file: !2129, line: 93, baseType: !48, size: 16, offset: 1648)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2128, file: !2129, line: 94, baseType: !48, size: 16, offset: 1664)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2128, file: !2129, line: 94, baseType: !48, size: 16, offset: 1680)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2128, file: !2129, line: 94, baseType: !48, size: 16, offset: 1696)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2128, file: !2129, line: 94, baseType: !48, size: 16, offset: 1712)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !2128, file: !2129, line: 96, baseType: !184, size: 32, offset: 1728)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !2128, file: !2129, line: 96, baseType: !184, size: 32, offset: 1760)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !2128, file: !2129, line: 96, baseType: !184, size: 32, offset: 1792)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !2128, file: !2129, line: 96, baseType: !184, size: 32, offset: 1824)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !2128, file: !2129, line: 98, baseType: !184, size: 32, offset: 1856)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !2128, file: !2129, line: 98, baseType: !184, size: 32, offset: 1888)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !2128, file: !2129, line: 98, baseType: !184, size: 32, offset: 1920)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !2128, file: !2129, line: 98, baseType: !184, size: 32, offset: 1952)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !2128, file: !2129, line: 99, baseType: !184, size: 32, offset: 1984)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !2128, file: !2129, line: 99, baseType: !184, size: 32, offset: 2016)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !2128, file: !2129, line: 100, baseType: !184, size: 32, offset: 2048)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !2128, file: !2129, line: 100, baseType: !184, size: 32, offset: 2080)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !2128, file: !2129, line: 103, baseType: !48, size: 16, offset: 2112)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !2128, file: !2129, line: 103, baseType: !48, size: 16, offset: 2128)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !2128, file: !2129, line: 103, baseType: !48, size: 16, offset: 2144)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !2128, file: !2129, line: 103, baseType: !48, size: 16, offset: 2160)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !2128, file: !2129, line: 106, baseType: !184, size: 32, offset: 2176)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !2128, file: !2129, line: 106, baseType: !184, size: 32, offset: 2208)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !2128, file: !2129, line: 106, baseType: !184, size: 32, offset: 2240)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !2128, file: !2129, line: 106, baseType: !184, size: 32, offset: 2272)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !2128, file: !2129, line: 107, baseType: !48, size: 16, offset: 2304)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !2128, file: !2129, line: 107, baseType: !48, size: 16, offset: 2320)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !2128, file: !2129, line: 107, baseType: !48, size: 16, offset: 2336)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !2128, file: !2129, line: 107, baseType: !48, size: 16, offset: 2352)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !2128, file: !2129, line: 108, baseType: !184, size: 32, offset: 2368)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !2128, file: !2129, line: 108, baseType: !184, size: 32, offset: 2400)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !2128, file: !2129, line: 109, baseType: !184, size: 32, offset: 2432)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !2128, file: !2129, line: 109, baseType: !184, size: 32, offset: 2464)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !2128, file: !2129, line: 110, baseType: !184, size: 32, offset: 2496)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !2128, file: !2129, line: 110, baseType: !184, size: 32, offset: 2528)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !2128, file: !2129, line: 110, baseType: !184, size: 32, offset: 2560)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !2128, file: !2129, line: 111, baseType: !48, size: 16, offset: 2592)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !2128, file: !2129, line: 111, baseType: !48, size: 16, offset: 2608)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !2128, file: !2129, line: 112, baseType: !48, size: 16, offset: 2624)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !2128, file: !2129, line: 112, baseType: !48, size: 16, offset: 2640)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !2128, file: !2129, line: 112, baseType: !48, size: 16, offset: 2656)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2128, file: !2129, line: 115, baseType: !48, size: 16, offset: 2672)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !2128, file: !2129, line: 118, baseType: !216, size: 64, offset: 2688)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !2128, file: !2129, line: 118, baseType: !216, size: 64, offset: 2752)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2128, file: !2129, line: 121, baseType: !280, size: 64, offset: 2816)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !2128, file: !2129, line: 122, baseType: !539, size: 1152, offset: 2880)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !2128, file: !2129, line: 123, baseType: !48, size: 16, offset: 4032)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2128, file: !2129, line: 123, baseType: !48, size: 16, offset: 4048)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2128, file: !2129, line: 123, baseType: !817, size: 32, offset: 4064)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2128, file: !2129, line: 126, baseType: !1282, size: 64, offset: 4096)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2128, file: !2129, line: 129, baseType: !622, size: 64, offset: 4160)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !154, file: !155, line: 1223, baseType: !153, size: 64, offset: 1152)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !154, file: !155, line: 1225, baseType: !58, size: 128, offset: 1216)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !154, file: !155, line: 1226, baseType: !2210, size: 64, offset: 1344)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 64)
!2211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !155, line: 69, size: 320, elements: !2212)
!2212 = !{!2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2211, file: !155, line: 70, baseType: !2210, size: 64)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2211, file: !155, line: 70, baseType: !2210, size: 64, offset: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2211, file: !155, line: 71, baseType: !205, size: 32, offset: 128)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !2211, file: !155, line: 71, baseType: !205, size: 32, offset: 160)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2211, file: !155, line: 72, baseType: !22, size: 32, offset: 192)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !2211, file: !155, line: 73, baseType: !48, size: 16, offset: 224)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !2211, file: !155, line: 73, baseType: !48, size: 16, offset: 240)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2211, file: !155, line: 74, baseType: !163, size: 64, offset: 256)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !154, file: !155, line: 1227, baseType: !163, size: 64, offset: 1408)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !154, file: !155, line: 1229, baseType: !183, size: 96, offset: 1472)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !154, file: !155, line: 1230, baseType: !183, size: 96, offset: 1568)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !154, file: !155, line: 1231, baseType: !183, size: 96, offset: 1664)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !154, file: !155, line: 1231, baseType: !183, size: 96, offset: 1760)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !154, file: !155, line: 1233, baseType: !205, size: 32, offset: 1856)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !154, file: !155, line: 1234, baseType: !22, size: 32, offset: 1888)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !154, file: !155, line: 1235, baseType: !205, size: 32, offset: 1920)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !154, file: !155, line: 1237, baseType: !48, size: 16, offset: 1952)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !154, file: !155, line: 1239, baseType: !14, size: 8, offset: 1968)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !154, file: !155, line: 1240, baseType: !513, size: 8, offset: 1976)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !154, file: !155, line: 1242, baseType: !622, size: 64, offset: 1984)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !154, file: !155, line: 1244, baseType: !2234, size: 64, offset: 2048)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 64)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !2236, line: 200, size: 17024, elements: !2237)
!2236 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2237 = !{!2238, !2239, !2240, !2241, !2569, !2570, !2571, !2572, !2573, !2574, !2575}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !2235, file: !2236, line: 201, baseType: !2103, size: 64)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !2235, file: !2236, line: 202, baseType: !58, size: 128, offset: 64)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !2235, file: !2236, line: 203, baseType: !58, size: 128, offset: 192)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !2235, file: !2236, line: 206, baseType: !2242, size: 64, offset: 320)
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 64)
!2243 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !2236, line: 190, baseType: !2244)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !2236, line: 126, size: 2816, elements: !2245)
!2245 = !{!2246, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2334, !2335, !2336, !2337, !2540, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2568}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2244, file: !2236, line: 127, baseType: !2247, size: 64)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 64)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2244, file: !2236, line: 127, baseType: !2247, size: 64, offset: 64)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !2244, file: !2236, line: 128, baseType: !56, size: 64, offset: 128)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !2244, file: !2236, line: 129, baseType: !56, size: 64, offset: 192)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2244, file: !2236, line: 130, baseType: !33, size: 512, offset: 256)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2244, file: !2236, line: 132, baseType: !22, size: 32, offset: 768)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2244, file: !2236, line: 132, baseType: !22, size: 32, offset: 800)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2244, file: !2236, line: 133, baseType: !22, size: 32, offset: 832)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2244, file: !2236, line: 134, baseType: !22, size: 32, offset: 864)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !2244, file: !2236, line: 134, baseType: !22, size: 32, offset: 896)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !2244, file: !2236, line: 134, baseType: !22, size: 32, offset: 928)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !2244, file: !2236, line: 135, baseType: !22, size: 32, offset: 960)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !2244, file: !2236, line: 135, baseType: !22, size: 32, offset: 992)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !2244, file: !2236, line: 136, baseType: !22, size: 32, offset: 1024)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2244, file: !2236, line: 136, baseType: !22, size: 32, offset: 1056)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !2244, file: !2236, line: 137, baseType: !22, size: 32, offset: 1088)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !2244, file: !2236, line: 137, baseType: !22, size: 32, offset: 1120)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !2244, file: !2236, line: 138, baseType: !184, size: 32, offset: 1152)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !2244, file: !2236, line: 139, baseType: !184, size: 32, offset: 1184)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !2244, file: !2236, line: 139, baseType: !184, size: 32, offset: 1216)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !2244, file: !2236, line: 141, baseType: !48, size: 16, offset: 1248)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !2244, file: !2236, line: 142, baseType: !48, size: 16, offset: 1264)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !2244, file: !2236, line: 143, baseType: !22, size: 32, offset: 1280)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !2244, file: !2236, line: 144, baseType: !22, size: 32, offset: 1312)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !2244, file: !2236, line: 146, baseType: !2272, size: 64, offset: 1344)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2273 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !2236, line: 114, baseType: !2274)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !2236, line: 99, size: 7232, elements: !2275)
!2275 = !{!2276, !2278, !2279, !2280, !2281, !2282, !2283, !2291, !2295, !2307, !2316, !2323, !2333}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2274, file: !2236, line: 100, baseType: !2277, size: 64)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2274, file: !2236, line: 100, baseType: !2277, size: 64, offset: 64)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !2274, file: !2236, line: 101, baseType: !22, size: 32, offset: 128)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2274, file: !2236, line: 101, baseType: !22, size: 32, offset: 160)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !2274, file: !2236, line: 102, baseType: !22, size: 32, offset: 192)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !2274, file: !2236, line: 102, baseType: !22, size: 32, offset: 224)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !2274, file: !2236, line: 103, baseType: !2284, size: 64, offset: 256)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2285 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !2236, line: 59, baseType: !2286)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !2236, line: 56, size: 2112, elements: !2287)
!2287 = !{!2288, !2289, !2290}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2286, file: !2236, line: 57, baseType: !636, size: 2048)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !2286, file: !2236, line: 58, baseType: !22, size: 32, offset: 2048)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !2286, file: !2236, line: 58, baseType: !22, size: 32, offset: 2080)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2274, file: !2236, line: 106, baseType: !2292, size: 6144, offset: 320)
!2292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 6144, elements: !2293)
!2293 = !{!2294}
!2294 = !DISubrange(count: 768)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !2274, file: !2236, line: 107, baseType: !2296, size: 64, offset: 6464)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 64)
!2297 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !2236, line: 97, baseType: !2298)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !2236, line: 83, size: 8320, elements: !2299)
!2299 = !{!2300, !2301, !2302, !2303, !2304, !2305, !2306}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2298, file: !2236, line: 84, baseType: !2292, size: 6144)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2298, file: !2236, line: 87, baseType: !636, size: 2048, offset: 6144)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2298, file: !2236, line: 88, baseType: !1257, size: 64, offset: 8192)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !2298, file: !2236, line: 90, baseType: !48, size: 16, offset: 8256)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2298, file: !2236, line: 92, baseType: !48, size: 16, offset: 8272)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !2298, file: !2236, line: 93, baseType: !48, size: 16, offset: 8288)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !2298, file: !2236, line: 95, baseType: !48, size: 16, offset: 8304)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !2274, file: !2236, line: 108, baseType: !2308, size: 64, offset: 6528)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64)
!2309 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !2236, line: 66, baseType: !2310)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !2236, line: 61, size: 128, elements: !2311)
!2311 = !{!2312, !2313, !2314, !2315}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !2310, file: !2236, line: 62, baseType: !22, size: 32)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !2310, file: !2236, line: 63, baseType: !22, size: 32, offset: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !2310, file: !2236, line: 64, baseType: !22, size: 32, offset: 64)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !2310, file: !2236, line: 65, baseType: !22, size: 32, offset: 96)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !2274, file: !2236, line: 109, baseType: !2317, size: 64, offset: 6592)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 64)
!2318 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !2236, line: 71, baseType: !2319)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !2236, line: 68, size: 64, elements: !2320)
!2320 = !{!2321, !2322}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !2319, file: !2236, line: 69, baseType: !22, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !2319, file: !2236, line: 70, baseType: !22, size: 32, offset: 32)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !2274, file: !2236, line: 110, baseType: !2324, size: 64, offset: 6656)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 64)
!2325 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !2236, line: 81, baseType: !2326)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !2236, line: 73, size: 352, elements: !2327)
!2327 = !{!2328, !2329, !2330, !2331, !2332}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !2326, file: !2236, line: 74, baseType: !183, size: 96)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2326, file: !2236, line: 75, baseType: !183, size: 96, offset: 96)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !2326, file: !2236, line: 76, baseType: !183, size: 96, offset: 192)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2326, file: !2236, line: 77, baseType: !22, size: 32, offset: 288)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2326, file: !2236, line: 78, baseType: !22, size: 32, offset: 320)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2274, file: !2236, line: 113, baseType: !1307, size: 512, offset: 6720)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2244, file: !2236, line: 148, baseType: !280, size: 64, offset: 1408)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2244, file: !2236, line: 151, baseType: !153, size: 64, offset: 1472)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !2244, file: !2236, line: 152, baseType: !163, size: 64, offset: 1536)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2244, file: !2236, line: 153, baseType: !2338, size: 64, offset: 1600)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 64)
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !2340, line: 64, size: 19136, elements: !2341)
!2340 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2341 = !{!2342, !2343, !2344, !2345, !2346, !2347, !2349, !2350, !2351, !2352, !2355, !2356, !2526, !2527, !2535, !2536, !2537, !2538, !2539}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2339, file: !2340, line: 65, baseType: !113, size: 960)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2339, file: !2340, line: 66, baseType: !159, size: 64, offset: 960)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2339, file: !2340, line: 68, baseType: !131, size: 8192, offset: 1024)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2339, file: !2340, line: 70, baseType: !22, size: 32, offset: 9216)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2339, file: !2340, line: 71, baseType: !22, size: 32, offset: 9248)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !2339, file: !2340, line: 72, baseType: !2348, size: 64, offset: 9280)
!2348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 64, elements: !818)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !2339, file: !2340, line: 74, baseType: !184, size: 32, offset: 9344)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !2339, file: !2340, line: 74, baseType: !184, size: 32, offset: 9376)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2339, file: !2340, line: 76, baseType: !1257, size: 64, offset: 9408)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2339, file: !2340, line: 77, baseType: !2353, size: 64, offset: 9472)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 64)
!2354 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !2340, line: 77, flags: DIFlagFwdDecl)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2339, file: !2340, line: 78, baseType: !351, size: 64, offset: 9536)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !2339, file: !2340, line: 80, baseType: !2357, size: 2624, offset: 9600)
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !2358, line: 340, size: 2624, elements: !2359)
!2358 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2359 = !{!2360, !2388, !2406, !2407, !2408, !2423, !2479, !2480, !2506, !2507, !2508, !2509, !2515}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !2357, file: !2358, line: 341, baseType: !2361, size: 576)
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !2358, line: 251, baseType: !2362)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !2358, line: 207, size: 576, elements: !2363)
!2363 = !{!2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2362, file: !2358, line: 208, baseType: !22, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !2362, file: !2358, line: 211, baseType: !48, size: 16, offset: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !2362, file: !2358, line: 212, baseType: !48, size: 16, offset: 48)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !2362, file: !2358, line: 213, baseType: !184, size: 32, offset: 64)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !2362, file: !2358, line: 214, baseType: !48, size: 16, offset: 96)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !2362, file: !2358, line: 215, baseType: !48, size: 16, offset: 112)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !2362, file: !2358, line: 216, baseType: !48, size: 16, offset: 128)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !2362, file: !2358, line: 217, baseType: !48, size: 16, offset: 144)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !2362, file: !2358, line: 218, baseType: !48, size: 16, offset: 160)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !2362, file: !2358, line: 219, baseType: !48, size: 16, offset: 176)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !2362, file: !2358, line: 220, baseType: !184, size: 32, offset: 192)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !2362, file: !2358, line: 222, baseType: !48, size: 16, offset: 224)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !2362, file: !2358, line: 225, baseType: !48, size: 16, offset: 240)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !2362, file: !2358, line: 228, baseType: !22, size: 32, offset: 256)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !2362, file: !2358, line: 229, baseType: !22, size: 32, offset: 288)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !2362, file: !2358, line: 233, baseType: !22, size: 32, offset: 320)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !2362, file: !2358, line: 236, baseType: !48, size: 16, offset: 352)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2362, file: !2358, line: 236, baseType: !48, size: 16, offset: 368)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2362, file: !2358, line: 241, baseType: !184, size: 32, offset: 384)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !2362, file: !2358, line: 244, baseType: !22, size: 32, offset: 416)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !2362, file: !2358, line: 244, baseType: !22, size: 32, offset: 448)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !2362, file: !2358, line: 245, baseType: !184, size: 32, offset: 480)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !2362, file: !2358, line: 248, baseType: !184, size: 32, offset: 512)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2362, file: !2358, line: 250, baseType: !22, size: 32, offset: 544)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2357, file: !2358, line: 342, baseType: !2389, size: 448, offset: 576)
!2389 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !2358, line: 79, baseType: !2390)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !2358, line: 61, size: 448, elements: !2391)
!2391 = !{!2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !2390, file: !2358, line: 62, baseType: !56, size: 64)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !2390, file: !2358, line: 64, baseType: !48, size: 16, offset: 64)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2390, file: !2358, line: 65, baseType: !48, size: 16, offset: 80)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !2390, file: !2358, line: 67, baseType: !184, size: 32, offset: 96)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !2390, file: !2358, line: 68, baseType: !184, size: 32, offset: 128)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !2390, file: !2358, line: 69, baseType: !184, size: 32, offset: 160)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2390, file: !2358, line: 70, baseType: !48, size: 16, offset: 192)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2390, file: !2358, line: 71, baseType: !48, size: 16, offset: 208)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !2390, file: !2358, line: 72, baseType: !860, size: 64, offset: 224)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !2390, file: !2358, line: 75, baseType: !184, size: 32, offset: 288)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !2390, file: !2358, line: 75, baseType: !184, size: 32, offset: 320)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !2390, file: !2358, line: 75, baseType: !184, size: 32, offset: 352)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !2390, file: !2358, line: 78, baseType: !184, size: 32, offset: 384)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !2390, file: !2358, line: 78, baseType: !184, size: 32, offset: 416)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !2357, file: !2358, line: 343, baseType: !58, size: 128, offset: 1024)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !2357, file: !2358, line: 344, baseType: !58, size: 128, offset: 1152)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !2357, file: !2358, line: 345, baseType: !2409, size: 192, offset: 1280)
!2409 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !2358, line: 278, baseType: !2410)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !2358, line: 270, size: 192, elements: !2411)
!2411 = !{!2412, !2413, !2414, !2415, !2416}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2410, file: !2358, line: 271, baseType: !22, size: 32)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2410, file: !2358, line: 273, baseType: !184, size: 32, offset: 32)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !2410, file: !2358, line: 275, baseType: !22, size: 32, offset: 64)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !2410, file: !2358, line: 276, baseType: !22, size: 32, offset: 96)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !2410, file: !2358, line: 277, baseType: !2417, size: 64, offset: 128)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !2358, line: 55, size: 576, elements: !2419)
!2419 = !{!2420, !2421, !2422}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2418, file: !2358, line: 56, baseType: !22, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2418, file: !2358, line: 57, baseType: !184, size: 32, offset: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2418, file: !2358, line: 58, baseType: !1335, size: 512, offset: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !2357, file: !2358, line: 346, baseType: !2424, size: 384, offset: 1472)
!2424 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !2358, line: 268, baseType: !2425)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !2358, line: 253, size: 384, elements: !2426)
!2426 = !{!2427, !2428, !2429, !2430, !2431, !2473, !2474, !2475, !2476, !2477, !2478}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2425, file: !2358, line: 254, baseType: !22, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !2425, file: !2358, line: 255, baseType: !22, size: 32, offset: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2425, file: !2358, line: 255, baseType: !22, size: 32, offset: 64)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !2425, file: !2358, line: 258, baseType: !184, size: 32, offset: 96)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !2425, file: !2358, line: 259, baseType: !2432, size: 64, offset: 128)
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 64)
!2433 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !2358, line: 164, baseType: !2434)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !2358, line: 108, size: 1664, elements: !2435)
!2435 = !{!2436, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2434, file: !2358, line: 109, baseType: !2437, size: 64)
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 64)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2434, file: !2358, line: 109, baseType: !2437, size: 64, offset: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2434, file: !2358, line: 111, baseType: !33, size: 512, offset: 128)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !2434, file: !2358, line: 119, baseType: !860, size: 64, offset: 640)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !2434, file: !2358, line: 119, baseType: !860, size: 64, offset: 704)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !2434, file: !2358, line: 125, baseType: !860, size: 64, offset: 768)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !2434, file: !2358, line: 125, baseType: !860, size: 64, offset: 832)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2434, file: !2358, line: 127, baseType: !860, size: 64, offset: 896)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !2434, file: !2358, line: 130, baseType: !22, size: 32, offset: 960)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !2434, file: !2358, line: 131, baseType: !22, size: 32, offset: 992)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2434, file: !2358, line: 132, baseType: !2448, size: 64, offset: 1024)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 64)
!2449 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !2358, line: 106, baseType: !2450)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !2358, line: 81, size: 512, elements: !2451)
!2451 = !{!2452, !2453, !2454, !2455, !2456, !2457}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2450, file: !2358, line: 82, baseType: !860, size: 64)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !2450, file: !2358, line: 97, baseType: !2027, size: 256, offset: 64)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !2450, file: !2358, line: 102, baseType: !860, size: 64, offset: 320)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !2450, file: !2358, line: 102, baseType: !860, size: 64, offset: 384)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2450, file: !2358, line: 104, baseType: !22, size: 32, offset: 448)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2450, file: !2358, line: 105, baseType: !22, size: 32, offset: 480)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !2434, file: !2358, line: 135, baseType: !183, size: 96, offset: 1088)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2434, file: !2358, line: 136, baseType: !184, size: 32, offset: 1184)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2434, file: !2358, line: 139, baseType: !22, size: 32, offset: 1216)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !2434, file: !2358, line: 139, baseType: !22, size: 32, offset: 1248)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !2434, file: !2358, line: 139, baseType: !22, size: 32, offset: 1280)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !2434, file: !2358, line: 140, baseType: !183, size: 96, offset: 1312)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !2434, file: !2358, line: 143, baseType: !48, size: 16, offset: 1408)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2434, file: !2358, line: 144, baseType: !48, size: 16, offset: 1424)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !2434, file: !2358, line: 145, baseType: !48, size: 16, offset: 1440)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !2434, file: !2358, line: 148, baseType: !48, size: 16, offset: 1456)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !2434, file: !2358, line: 149, baseType: !22, size: 32, offset: 1472)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !2434, file: !2358, line: 150, baseType: !184, size: 32, offset: 1504)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2434, file: !2358, line: 152, baseType: !351, size: 64, offset: 1536)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2434, file: !2358, line: 163, baseType: !184, size: 32, offset: 1600)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2434, file: !2358, line: 163, baseType: !184, size: 32, offset: 1632)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !2425, file: !2358, line: 261, baseType: !184, size: 32, offset: 192)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !2425, file: !2358, line: 261, baseType: !184, size: 32, offset: 224)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !2425, file: !2358, line: 261, baseType: !184, size: 32, offset: 256)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2425, file: !2358, line: 263, baseType: !22, size: 32, offset: 288)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2425, file: !2358, line: 266, baseType: !22, size: 32, offset: 320)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !2425, file: !2358, line: 267, baseType: !184, size: 32, offset: 352)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2357, file: !2358, line: 347, baseType: !2432, size: 64, offset: 1856)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !2357, file: !2358, line: 348, baseType: !2481, size: 64, offset: 1920)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64)
!2482 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !2358, line: 205, baseType: !2483)
!2483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !2358, line: 186, size: 1024, elements: !2484)
!2484 = !{!2485, !2487, !2488, !2489, !2491, !2492, !2493, !2501, !2502, !2503, !2504, !2505}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2483, file: !2358, line: 187, baseType: !2486, size: 64)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 64)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2483, file: !2358, line: 187, baseType: !2486, size: 64, offset: 64)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2483, file: !2358, line: 189, baseType: !33, size: 512, offset: 128)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !2483, file: !2358, line: 191, baseType: !2490, size: 64, offset: 640)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 64)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !2483, file: !2358, line: 193, baseType: !22, size: 32, offset: 704)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2483, file: !2358, line: 193, baseType: !22, size: 32, offset: 736)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2483, file: !2358, line: 195, baseType: !2494, size: 64, offset: 768)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64)
!2495 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !2358, line: 184, baseType: !2496)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !2358, line: 166, size: 320, elements: !2497)
!2497 = !{!2498, !2499, !2500}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !2496, file: !2358, line: 180, baseType: !2027, size: 256)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2496, file: !2358, line: 182, baseType: !22, size: 32, offset: 256)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2496, file: !2358, line: 183, baseType: !22, size: 32, offset: 288)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !2483, file: !2358, line: 196, baseType: !22, size: 32, offset: 832)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2483, file: !2358, line: 198, baseType: !22, size: 32, offset: 864)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2483, file: !2358, line: 200, baseType: !1245, size: 64, offset: 896)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !2483, file: !2358, line: 201, baseType: !184, size: 32, offset: 960)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !2483, file: !2358, line: 204, baseType: !22, size: 32, offset: 992)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2357, file: !2358, line: 350, baseType: !58, size: 128, offset: 1984)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !2357, file: !2358, line: 351, baseType: !22, size: 32, offset: 2112)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !2357, file: !2358, line: 351, baseType: !22, size: 32, offset: 2144)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2357, file: !2358, line: 353, baseType: !2510, size: 64, offset: 2176)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !2358, line: 297, baseType: !2512)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !2358, line: 295, size: 2048, elements: !2513)
!2513 = !{!2514}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !2512, file: !2358, line: 296, baseType: !636, size: 2048)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !2357, file: !2358, line: 355, baseType: !2516, size: 384, offset: 2240)
!2516 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !2358, line: 338, baseType: !2517)
!2517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !2358, line: 322, size: 384, elements: !2518)
!2518 = !{!2519, !2520, !2521, !2522, !2523, !2524, !2525}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2517, file: !2358, line: 323, baseType: !22, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !2517, file: !2358, line: 325, baseType: !48, size: 16, offset: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2517, file: !2358, line: 326, baseType: !48, size: 16, offset: 48)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !2517, file: !2358, line: 331, baseType: !58, size: 128, offset: 64)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2517, file: !2358, line: 334, baseType: !58, size: 128, offset: 192)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !2517, file: !2358, line: 335, baseType: !22, size: 32, offset: 320)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2517, file: !2358, line: 337, baseType: !22, size: 32, offset: 352)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !2339, file: !2340, line: 81, baseType: !56, size: 64, offset: 12224)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !2339, file: !2340, line: 85, baseType: !2528, size: 6208, offset: 12288)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !2340, line: 55, size: 6208, elements: !2529)
!2529 = !{!2530, !2531, !2532, !2533, !2534}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2528, file: !2340, line: 56, baseType: !2292, size: 6144)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !2528, file: !2340, line: 58, baseType: !48, size: 16, offset: 6144)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2528, file: !2340, line: 59, baseType: !48, size: 16, offset: 6160)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !2528, file: !2340, line: 60, baseType: !48, size: 16, offset: 6176)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !2528, file: !2340, line: 61, baseType: !48, size: 16, offset: 6192)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2339, file: !2340, line: 86, baseType: !22, size: 32, offset: 18496)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2339, file: !2340, line: 88, baseType: !22, size: 32, offset: 18528)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2339, file: !2340, line: 90, baseType: !22, size: 32, offset: 18560)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !2339, file: !2340, line: 94, baseType: !22, size: 32, offset: 18592)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2339, file: !2340, line: 100, baseType: !1307, size: 512, offset: 18624)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2244, file: !2236, line: 154, baseType: !2541, size: 64, offset: 1664)
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 64)
!2542 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !2543, line: 264, flags: DIFlagFwdDecl)
!2543 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2244, file: !2236, line: 156, baseType: !1257, size: 64, offset: 1728)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !2244, file: !2236, line: 158, baseType: !184, size: 32, offset: 1792)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !2244, file: !2236, line: 159, baseType: !184, size: 32, offset: 1824)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !2244, file: !2236, line: 162, baseType: !2247, size: 64, offset: 1856)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !2244, file: !2236, line: 162, baseType: !2247, size: 64, offset: 1920)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !2244, file: !2236, line: 162, baseType: !2247, size: 64, offset: 1984)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !2244, file: !2236, line: 164, baseType: !58, size: 128, offset: 2048)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !2244, file: !2236, line: 166, baseType: !2552, size: 64, offset: 2176)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2553 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !2236, line: 51, flags: DIFlagFwdDecl)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !2244, file: !2236, line: 167, baseType: !56, size: 64, offset: 2240)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2244, file: !2236, line: 168, baseType: !184, size: 32, offset: 2304)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !2244, file: !2236, line: 170, baseType: !184, size: 32, offset: 2336)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !2244, file: !2236, line: 170, baseType: !184, size: 32, offset: 2368)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !2244, file: !2236, line: 171, baseType: !184, size: 32, offset: 2400)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !2244, file: !2236, line: 173, baseType: !56, size: 64, offset: 2432)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !2244, file: !2236, line: 175, baseType: !22, size: 32, offset: 2496)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !2244, file: !2236, line: 176, baseType: !22, size: 32, offset: 2528)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !2244, file: !2236, line: 179, baseType: !22, size: 32, offset: 2560)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !2244, file: !2236, line: 180, baseType: !184, size: 32, offset: 2592)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2244, file: !2236, line: 183, baseType: !22, size: 32, offset: 2624)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !2244, file: !2236, line: 185, baseType: !14, size: 8, offset: 2656)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2244, file: !2236, line: 186, baseType: !2567, size: 24, offset: 2664)
!2567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 24, elements: !185)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !2244, file: !2236, line: 189, baseType: !58, size: 128, offset: 2688)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !2235, file: !2236, line: 207, baseType: !131, size: 8192, offset: 384)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !2235, file: !2236, line: 208, baseType: !131, size: 8192, offset: 8576)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !2235, file: !2236, line: 210, baseType: !22, size: 32, offset: 16768)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !2235, file: !2236, line: 210, baseType: !22, size: 32, offset: 16800)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !2235, file: !2236, line: 211, baseType: !22, size: 32, offset: 16832)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2235, file: !2236, line: 211, baseType: !22, size: 32, offset: 16864)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !2235, file: !2236, line: 212, baseType: !840, size: 128, offset: 16896)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !154, file: !155, line: 1246, baseType: !2577, size: 64, offset: 2112)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!2578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !155, line: 1067, size: 5184, elements: !2579)
!2579 = !{!2580, !2724, !2725, !2739, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2761, !2777, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2885}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !2578, file: !155, line: 1068, baseType: !2581, size: 64)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 64)
!2582 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !155, line: 934, baseType: !2583)
!2583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !155, line: 925, size: 576, elements: !2584)
!2584 = !{!2585, !2707, !2708, !2709, !2710, !2711, !2723}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2583, file: !155, line: 926, baseType: !2586, size: 320)
!2586 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !155, line: 830, baseType: !2587)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !155, line: 813, size: 320, elements: !2588)
!2588 = !{!2589, !2692, !2701, !2702, !2704, !2705, !2706}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2587, file: !155, line: 814, baseType: !2590, size: 64)
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 64)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !2592, line: 54, size: 16448, elements: !2593)
!2592 = !DIFile(filename: "blender/source/blender/makesdna/DNA_brush_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2593 = !{!2594, !2595, !2602, !2603, !2604, !2605, !2606, !2607, !2610, !2611, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2591, file: !2592, line: 55, baseType: !113, size: 960)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2591, file: !2592, line: 57, baseType: !2596, size: 192, offset: 960)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BrushClone", file: !2592, line: 48, size: 192, elements: !2597)
!2597 = !{!2598, !2599, !2600, !2601}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2596, file: !2592, line: 49, baseType: !1245, size: 64)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2596, file: !2592, line: 50, baseType: !860, size: 64, offset: 64)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2596, file: !2592, line: 51, baseType: !184, size: 32, offset: 128)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2596, file: !2592, line: 51, baseType: !184, size: 32, offset: 160)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2591, file: !2592, line: 58, baseType: !1380, size: 64, offset: 1152)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !2591, file: !2592, line: 59, baseType: !541, size: 2496, offset: 1216)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "mask_mtex", scope: !2591, file: !2592, line: 60, baseType: !541, size: 2496, offset: 3712)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "toggle_brush", scope: !2591, file: !2592, line: 62, baseType: !2590, size: 64, offset: 6208)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "icon_imbuf", scope: !2591, file: !2592, line: 64, baseType: !978, size: 64, offset: 6272)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2591, file: !2592, line: 65, baseType: !2608, size: 64, offset: 6336)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 64)
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviewImage", file: !39, line: 167, baseType: !1283)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !2591, file: !2592, line: 66, baseType: !504, size: 64, offset: 6400)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "paint_curve", scope: !2591, file: !2592, line: 67, baseType: !2612, size: 64, offset: 6464)
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 64)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurve", file: !2592, line: 166, size: 1088, elements: !2614)
!2614 = !{!2615, !2616, !2643, !2644}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2613, file: !2592, line: 168, baseType: !113, size: 960)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2613, file: !2592, line: 169, baseType: !2617, size: 64, offset: 960)
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 64)
!2618 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintCurvePoint", file: !2592, line: 164, baseType: !2619)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurvePoint", file: !2592, line: 160, size: 608, elements: !2620)
!2620 = !{!2621, !2642}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "bez", scope: !2619, file: !2592, line: 162, baseType: !2622, size: 576)
!2622 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !315, line: 133, baseType: !2623)
!2623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !315, line: 117, size: 576, elements: !2624)
!2624 = !{!2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2623, file: !315, line: 118, baseType: !246, size: 288)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !2623, file: !315, line: 119, baseType: !184, size: 32, offset: 288)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2623, file: !315, line: 119, baseType: !184, size: 32, offset: 320)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2623, file: !315, line: 119, baseType: !184, size: 32, offset: 352)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2623, file: !315, line: 121, baseType: !14, size: 8, offset: 384)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !2623, file: !315, line: 123, baseType: !14, size: 8, offset: 392)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !2623, file: !315, line: 123, baseType: !14, size: 8, offset: 400)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !2623, file: !315, line: 124, baseType: !14, size: 8, offset: 408)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !2623, file: !315, line: 124, baseType: !14, size: 8, offset: 416)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !2623, file: !315, line: 124, baseType: !14, size: 8, offset: 424)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !2623, file: !315, line: 126, baseType: !14, size: 8, offset: 432)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !2623, file: !315, line: 128, baseType: !14, size: 8, offset: 440)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2623, file: !315, line: 129, baseType: !184, size: 32, offset: 448)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !2623, file: !315, line: 130, baseType: !184, size: 32, offset: 480)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2623, file: !315, line: 130, baseType: !184, size: 32, offset: 512)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2623, file: !315, line: 132, baseType: !2641, size: 32, offset: 544)
!2641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 32, elements: !497)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "pressure", scope: !2619, file: !2592, line: 163, baseType: !184, size: 32, offset: 576)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "tot_points", scope: !2613, file: !2592, line: 170, baseType: !22, size: 32, offset: 1024)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "add_index", scope: !2613, file: !2592, line: 171, baseType: !22, size: 32, offset: 1056)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "icon_filepath", scope: !2591, file: !2592, line: 69, baseType: !131, size: 8192, offset: 6528)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "normal_weight", scope: !2591, file: !2592, line: 71, baseType: !184, size: 32, offset: 14720)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !2591, file: !2592, line: 73, baseType: !48, size: 16, offset: 14752)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "ob_mode", scope: !2591, file: !2592, line: 74, baseType: !48, size: 16, offset: 14768)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2591, file: !2592, line: 75, baseType: !184, size: 32, offset: 14784)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2591, file: !2592, line: 76, baseType: !22, size: 32, offset: 14816)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2591, file: !2592, line: 77, baseType: !22, size: 32, offset: 14848)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "mask_pressure", scope: !2591, file: !2592, line: 78, baseType: !22, size: 32, offset: 14880)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "jitter", scope: !2591, file: !2592, line: 79, baseType: !184, size: 32, offset: 14912)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "jitter_absolute", scope: !2591, file: !2592, line: 80, baseType: !22, size: 32, offset: 14944)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_flags", scope: !2591, file: !2592, line: 81, baseType: !22, size: 32, offset: 14976)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !2591, file: !2592, line: 82, baseType: !22, size: 32, offset: 15008)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_radius", scope: !2591, file: !2592, line: 83, baseType: !22, size: 32, offset: 15040)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_factor", scope: !2591, file: !2592, line: 84, baseType: !184, size: 32, offset: 15072)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !2591, file: !2592, line: 85, baseType: !184, size: 32, offset: 15104)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2591, file: !2592, line: 87, baseType: !183, size: 96, offset: 15136)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2591, file: !2592, line: 88, baseType: !184, size: 32, offset: 15232)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2591, file: !2592, line: 90, baseType: !183, size: 96, offset: 15264)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_plane", scope: !2591, file: !2592, line: 92, baseType: !22, size: 32, offset: 15360)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "plane_offset", scope: !2591, file: !2592, line: 94, baseType: !184, size: 32, offset: 15392)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2591, file: !2592, line: 96, baseType: !184, size: 32, offset: 15424)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_spacing", scope: !2591, file: !2592, line: 97, baseType: !22, size: 32, offset: 15456)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_stroke_mode", scope: !2591, file: !2592, line: 98, baseType: !22, size: 32, offset: 15488)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_fill_mode", scope: !2591, file: !2592, line: 99, baseType: !22, size: 32, offset: 15520)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_tool", scope: !2591, file: !2592, line: 101, baseType: !14, size: 8, offset: 15552)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "vertexpaint_tool", scope: !2591, file: !2592, line: 102, baseType: !14, size: 8, offset: 15560)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "imagepaint_tool", scope: !2591, file: !2592, line: 103, baseType: !14, size: 8, offset: 15568)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tool", scope: !2591, file: !2592, line: 104, baseType: !14, size: 8, offset: 15576)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "autosmooth_factor", scope: !2591, file: !2592, line: 106, baseType: !184, size: 32, offset: 15584)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "crease_pinch_factor", scope: !2591, file: !2592, line: 108, baseType: !184, size: 32, offset: 15616)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "plane_trim", scope: !2591, file: !2592, line: 110, baseType: !184, size: 32, offset: 15648)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2591, file: !2592, line: 111, baseType: !184, size: 32, offset: 15680)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "texture_sample_bias", scope: !2591, file: !2592, line: 113, baseType: !184, size: 32, offset: 15712)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "texture_overlay_alpha", scope: !2591, file: !2592, line: 116, baseType: !22, size: 32, offset: 15744)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "mask_overlay_alpha", scope: !2591, file: !2592, line: 117, baseType: !22, size: 32, offset: 15776)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_overlay_alpha", scope: !2591, file: !2592, line: 118, baseType: !22, size: 32, offset: 15808)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2591, file: !2592, line: 120, baseType: !184, size: 32, offset: 15840)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_threshold", scope: !2591, file: !2592, line: 123, baseType: !184, size: 32, offset: 15872)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "blur_kernel_radius", scope: !2591, file: !2592, line: 124, baseType: !22, size: 32, offset: 15904)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "blur_mode", scope: !2591, file: !2592, line: 125, baseType: !22, size: 32, offset: 15936)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "fill_threshold", scope: !2591, file: !2592, line: 128, baseType: !184, size: 32, offset: 15968)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "add_col", scope: !2591, file: !2592, line: 130, baseType: !183, size: 96, offset: 16000)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "sub_col", scope: !2591, file: !2592, line: 131, baseType: !183, size: 96, offset: 16096)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_pos", scope: !2591, file: !2592, line: 133, baseType: !860, size: 64, offset: 16192)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_dimension", scope: !2591, file: !2592, line: 134, baseType: !860, size: 64, offset: 16256)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_pos", scope: !2591, file: !2592, line: 136, baseType: !860, size: 64, offset: 16320)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_dimension", scope: !2591, file: !2592, line: 137, baseType: !860, size: 64, offset: 16384)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !2587, file: !155, line: 815, baseType: !2693, size: 64, offset: 64)
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 64)
!2694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !2592, line: 148, size: 1280, elements: !2695)
!2695 = !{!2696, !2697, !2698, !2699, !2700}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2694, file: !2592, line: 150, baseType: !113, size: 960)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !2694, file: !2592, line: 153, baseType: !58, size: 128, offset: 960)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "deleted", scope: !2694, file: !2592, line: 154, baseType: !58, size: 128, offset: 1088)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "active_color", scope: !2694, file: !2592, line: 156, baseType: !22, size: 32, offset: 1216)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2694, file: !2592, line: 157, baseType: !22, size: 32, offset: 1248)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !2587, file: !155, line: 818, baseType: !56, size: 64, offset: 128)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !2587, file: !155, line: 819, baseType: !2703, size: 32, offset: 192)
!2703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !233, size: 32, elements: !497)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2587, file: !155, line: 822, baseType: !22, size: 32, offset: 224)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !2587, file: !155, line: 826, baseType: !22, size: 32, offset: 256)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !2587, file: !155, line: 829, baseType: !22, size: 32, offset: 288)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2583, file: !155, line: 928, baseType: !48, size: 16, offset: 320)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2583, file: !155, line: 928, baseType: !48, size: 16, offset: 336)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2583, file: !155, line: 929, baseType: !22, size: 32, offset: 352)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !2583, file: !155, line: 930, baseType: !251, size: 64, offset: 384)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !2583, file: !155, line: 931, baseType: !2712, size: 64, offset: 448)
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2713, size: 64)
!2713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !180, line: 59, size: 128, elements: !2714)
!2714 = !{!2715, !2721, !2722}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !2713, file: !180, line: 60, baseType: !2716, size: 64)
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 64)
!2717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !180, line: 54, size: 64, elements: !2718)
!2718 = !{!2719, !2720}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !2717, file: !180, line: 55, baseType: !22, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2717, file: !180, line: 56, baseType: !184, size: 32, offset: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !2713, file: !180, line: 61, baseType: !22, size: 32, offset: 64)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2713, file: !180, line: 62, baseType: !22, size: 32, offset: 96)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2583, file: !155, line: 933, baseType: !56, size: 64, offset: 512)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !2578, file: !155, line: 1069, baseType: !2581, size: 64, offset: 64)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !2578, file: !155, line: 1070, baseType: !2726, size: 64, offset: 128)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 64)
!2727 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !155, line: 916, baseType: !2728)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !155, line: 891, size: 704, elements: !2729)
!2729 = !{!2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2728, file: !155, line: 892, baseType: !2586, size: 320)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2728, file: !155, line: 896, baseType: !22, size: 32, offset: 320)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !2728, file: !155, line: 900, baseType: !1423, size: 96, offset: 352)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !2728, file: !155, line: 903, baseType: !184, size: 32, offset: 448)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !2728, file: !155, line: 906, baseType: !22, size: 32, offset: 480)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !2728, file: !155, line: 909, baseType: !184, size: 32, offset: 512)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !2728, file: !155, line: 912, baseType: !184, size: 32, offset: 544)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !2728, file: !155, line: 914, baseType: !163, size: 64, offset: 576)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2728, file: !155, line: 915, baseType: !56, size: 64, offset: 640)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !2578, file: !155, line: 1071, baseType: !2740, size: 64, offset: 192)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 64)
!2741 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !155, line: 920, baseType: !2742)
!2742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !155, line: 918, size: 320, elements: !2743)
!2743 = !{!2744}
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2742, file: !155, line: 919, baseType: !2586, size: 320)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !2578, file: !155, line: 1075, baseType: !184, size: 32, offset: 256)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !2578, file: !155, line: 1077, baseType: !184, size: 32, offset: 288)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !2578, file: !155, line: 1078, baseType: !184, size: 32, offset: 320)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !2578, file: !155, line: 1079, baseType: !48, size: 16, offset: 352)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2578, file: !155, line: 1082, baseType: !48, size: 16, offset: 368)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !2578, file: !155, line: 1085, baseType: !14, size: 8, offset: 384)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !2578, file: !155, line: 1086, baseType: !14, size: 8, offset: 392)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !2578, file: !155, line: 1087, baseType: !14, size: 8, offset: 400)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !2578, file: !155, line: 1088, baseType: !14, size: 8, offset: 408)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !2578, file: !155, line: 1090, baseType: !184, size: 32, offset: 416)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !2578, file: !155, line: 1093, baseType: !48, size: 16, offset: 448)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !2578, file: !155, line: 1096, baseType: !14, size: 8, offset: 464)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2578, file: !155, line: 1098, baseType: !2758, size: 40, offset: 472)
!2758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 40, elements: !2759)
!2759 = !{!2760}
!2760 = !DISubrange(count: 5)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !2578, file: !155, line: 1101, baseType: !2762, size: 832, offset: 512)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !155, line: 836, size: 832, elements: !2763)
!2763 = !{!2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2762, file: !155, line: 837, baseType: !2586, size: 320)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2762, file: !155, line: 839, baseType: !48, size: 16, offset: 320)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !2762, file: !155, line: 839, baseType: !48, size: 16, offset: 336)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !2762, file: !155, line: 842, baseType: !48, size: 16, offset: 352)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !2762, file: !155, line: 842, baseType: !48, size: 16, offset: 368)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !2762, file: !155, line: 843, baseType: !817, size: 32, offset: 384)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2762, file: !155, line: 845, baseType: !22, size: 32, offset: 416)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2762, file: !155, line: 847, baseType: !56, size: 64, offset: 448)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !2762, file: !155, line: 848, baseType: !1245, size: 64, offset: 512)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2762, file: !155, line: 849, baseType: !1245, size: 64, offset: 576)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2762, file: !155, line: 850, baseType: !1245, size: 64, offset: 640)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !2762, file: !155, line: 851, baseType: !183, size: 96, offset: 704)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2762, file: !155, line: 852, baseType: !184, size: 32, offset: 800)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2578, file: !155, line: 1104, baseType: !2778, size: 1344, offset: 1344)
!2778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !155, line: 867, size: 1344, elements: !2779)
!2779 = !{!2780, !2781, !2782, !2783, !2784, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2778, file: !155, line: 868, baseType: !48, size: 16)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !2778, file: !155, line: 869, baseType: !48, size: 16, offset: 16)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !2778, file: !155, line: 870, baseType: !48, size: 16, offset: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !2778, file: !155, line: 871, baseType: !48, size: 16, offset: 48)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2778, file: !155, line: 873, baseType: !2785, size: 896, offset: 64)
!2785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2786, size: 896, elements: !1315)
!2786 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !155, line: 864, baseType: !2787)
!2787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !155, line: 859, size: 128, elements: !2788)
!2788 = !{!2789, !2790, !2791, !2792, !2793, !2794}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2787, file: !155, line: 860, baseType: !48, size: 16)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2787, file: !155, line: 861, baseType: !48, size: 16, offset: 16)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2787, file: !155, line: 861, baseType: !48, size: 16, offset: 32)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2787, file: !155, line: 861, baseType: !48, size: 16, offset: 48)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2787, file: !155, line: 862, baseType: !22, size: 32, offset: 64)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2787, file: !155, line: 863, baseType: !184, size: 32, offset: 96)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2778, file: !155, line: 874, baseType: !56, size: 64, offset: 960)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !2778, file: !155, line: 876, baseType: !184, size: 32, offset: 1024)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2778, file: !155, line: 876, baseType: !184, size: 32, offset: 1056)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2778, file: !155, line: 878, baseType: !22, size: 32, offset: 1088)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !2778, file: !155, line: 879, baseType: !22, size: 32, offset: 1120)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2778, file: !155, line: 881, baseType: !22, size: 32, offset: 1152)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !2778, file: !155, line: 881, baseType: !22, size: 32, offset: 1184)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2778, file: !155, line: 883, baseType: !153, size: 64, offset: 1216)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2778, file: !155, line: 884, baseType: !163, size: 64, offset: 1280)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !2578, file: !155, line: 1107, baseType: !184, size: 32, offset: 2688)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !2578, file: !155, line: 1110, baseType: !184, size: 32, offset: 2720)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !2578, file: !155, line: 1113, baseType: !48, size: 16, offset: 2752)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !2578, file: !155, line: 1113, baseType: !48, size: 16, offset: 2768)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !2578, file: !155, line: 1116, baseType: !14, size: 8, offset: 2784)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2578, file: !155, line: 1117, baseType: !513, size: 8, offset: 2792)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !2578, file: !155, line: 1120, baseType: !48, size: 16, offset: 2800)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !2578, file: !155, line: 1121, baseType: !184, size: 32, offset: 2816)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !2578, file: !155, line: 1122, baseType: !184, size: 32, offset: 2848)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !2578, file: !155, line: 1123, baseType: !184, size: 32, offset: 2880)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !2578, file: !155, line: 1124, baseType: !184, size: 32, offset: 2912)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !2578, file: !155, line: 1125, baseType: !184, size: 32, offset: 2944)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !2578, file: !155, line: 1126, baseType: !184, size: 32, offset: 2976)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !2578, file: !155, line: 1127, baseType: !184, size: 32, offset: 3008)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !2578, file: !155, line: 1128, baseType: !184, size: 32, offset: 3040)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !2578, file: !155, line: 1129, baseType: !184, size: 32, offset: 3072)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !2578, file: !155, line: 1130, baseType: !184, size: 32, offset: 3104)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !2578, file: !155, line: 1131, baseType: !48, size: 16, offset: 3136)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !2578, file: !155, line: 1132, baseType: !14, size: 8, offset: 3152)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !2578, file: !155, line: 1133, baseType: !14, size: 8, offset: 3160)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !2578, file: !155, line: 1134, baseType: !2567, size: 24, offset: 3168)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !2578, file: !155, line: 1135, baseType: !14, size: 8, offset: 3192)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !2578, file: !155, line: 1138, baseType: !163, size: 64, offset: 3200)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !2578, file: !155, line: 1139, baseType: !14, size: 8, offset: 3264)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !2578, file: !155, line: 1140, baseType: !14, size: 8, offset: 3272)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !2578, file: !155, line: 1141, baseType: !14, size: 8, offset: 3280)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !2578, file: !155, line: 1142, baseType: !14, size: 8, offset: 3288)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !2578, file: !155, line: 1143, baseType: !14, size: 8, offset: 3296)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !2578, file: !155, line: 1144, baseType: !2833, size: 64, offset: 3304)
!2833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 64, elements: !932)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !2578, file: !155, line: 1145, baseType: !2833, size: 64, offset: 3368)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !2578, file: !155, line: 1148, baseType: !14, size: 8, offset: 3432)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !2578, file: !155, line: 1149, baseType: !14, size: 8, offset: 3440)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !2578, file: !155, line: 1152, baseType: !14, size: 8, offset: 3448)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !2578, file: !155, line: 1152, baseType: !14, size: 8, offset: 3456)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !2578, file: !155, line: 1153, baseType: !14, size: 8, offset: 3464)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !2578, file: !155, line: 1154, baseType: !48, size: 16, offset: 3472)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !2578, file: !155, line: 1154, baseType: !48, size: 16, offset: 3488)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !2578, file: !155, line: 1155, baseType: !48, size: 16, offset: 3504)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !2578, file: !155, line: 1155, baseType: !48, size: 16, offset: 3520)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !2578, file: !155, line: 1156, baseType: !14, size: 8, offset: 3536)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !2578, file: !155, line: 1157, baseType: !14, size: 8, offset: 3544)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !2578, file: !155, line: 1159, baseType: !14, size: 8, offset: 3552)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !2578, file: !155, line: 1160, baseType: !14, size: 8, offset: 3560)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !2578, file: !155, line: 1161, baseType: !14, size: 8, offset: 3568)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !2578, file: !155, line: 1162, baseType: !14, size: 8, offset: 3576)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !2578, file: !155, line: 1165, baseType: !22, size: 32, offset: 3584)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !2578, file: !155, line: 1166, baseType: !22, size: 32, offset: 3616)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !2578, file: !155, line: 1167, baseType: !22, size: 32, offset: 3648)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !2578, file: !155, line: 1168, baseType: !22, size: 32, offset: 3680)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !2578, file: !155, line: 1171, baseType: !48, size: 16, offset: 3712)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2578, file: !155, line: 1171, baseType: !48, size: 16, offset: 3728)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !2578, file: !155, line: 1172, baseType: !22, size: 32, offset: 3744)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !2578, file: !155, line: 1173, baseType: !184, size: 32, offset: 3776)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !2578, file: !155, line: 1174, baseType: !184, size: 32, offset: 3808)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !2578, file: !155, line: 1177, baseType: !2860, size: 1024, offset: 3840)
!2860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !155, line: 963, size: 1024, elements: !2861)
!2861 = !{!2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884}
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2860, file: !155, line: 965, baseType: !22, size: 32)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2860, file: !155, line: 968, baseType: !184, size: 32, offset: 32)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2860, file: !155, line: 971, baseType: !184, size: 32, offset: 64)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2860, file: !155, line: 974, baseType: !184, size: 32, offset: 96)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2860, file: !155, line: 977, baseType: !183, size: 96, offset: 128)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2860, file: !155, line: 979, baseType: !183, size: 96, offset: 224)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2860, file: !155, line: 982, baseType: !22, size: 32, offset: 320)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2860, file: !155, line: 987, baseType: !860, size: 64, offset: 352)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2860, file: !155, line: 989, baseType: !184, size: 32, offset: 416)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2860, file: !155, line: 994, baseType: !22, size: 32, offset: 448)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2860, file: !155, line: 995, baseType: !22, size: 32, offset: 480)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2860, file: !155, line: 997, baseType: !14, size: 8, offset: 512)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2860, file: !155, line: 998, baseType: !1314, size: 56, offset: 520)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2860, file: !155, line: 1000, baseType: !184, size: 32, offset: 576)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2860, file: !155, line: 1003, baseType: !860, size: 64, offset: 608)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2860, file: !155, line: 1006, baseType: !22, size: 32, offset: 672)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2860, file: !155, line: 1009, baseType: !184, size: 32, offset: 704)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2860, file: !155, line: 1012, baseType: !860, size: 64, offset: 736)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2860, file: !155, line: 1015, baseType: !860, size: 64, offset: 800)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2860, file: !155, line: 1018, baseType: !22, size: 32, offset: 864)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2860, file: !155, line: 1019, baseType: !1028, size: 64, offset: 896)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2860, file: !155, line: 1023, baseType: !184, size: 32, offset: 960)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2860, file: !155, line: 1024, baseType: !22, size: 32, offset: 992)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !2578, file: !155, line: 1179, baseType: !2886, size: 320, offset: 4864)
!2886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !155, line: 1043, size: 320, elements: !2887)
!2887 = !{!2888, !2889, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2886, file: !155, line: 1044, baseType: !14, size: 8)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2886, file: !155, line: 1045, baseType: !2890, size: 16, offset: 8)
!2890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 16, elements: !818)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2886, file: !155, line: 1048, baseType: !14, size: 8, offset: 24)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2886, file: !155, line: 1049, baseType: !184, size: 32, offset: 32)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2886, file: !155, line: 1049, baseType: !184, size: 32, offset: 64)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2886, file: !155, line: 1052, baseType: !184, size: 32, offset: 96)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2886, file: !155, line: 1052, baseType: !184, size: 32, offset: 128)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2886, file: !155, line: 1053, baseType: !14, size: 8, offset: 160)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2886, file: !155, line: 1054, baseType: !2567, size: 24, offset: 168)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2886, file: !155, line: 1057, baseType: !184, size: 32, offset: 192)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2886, file: !155, line: 1057, baseType: !184, size: 32, offset: 224)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2886, file: !155, line: 1060, baseType: !184, size: 32, offset: 256)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2886, file: !155, line: 1060, baseType: !184, size: 32, offset: 288)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !154, file: !155, line: 1247, baseType: !2903, size: 64, offset: 2176)
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 64)
!2904 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !155, line: 60, flags: DIFlagFwdDecl)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !154, file: !155, line: 1251, baseType: !2906, size: 31872, offset: 2240)
!2906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !155, line: 403, size: 31872, elements: !2907)
!2907 = !{!2908, !2943, !2963, !2972, !2992, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3123, !3124, !3125, !3127, !3143, !3144}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2906, file: !155, line: 404, baseType: !2909, size: 1984)
!2909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !155, line: 259, size: 1984, elements: !2910)
!2910 = !{!2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2926, !2938}
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2909, file: !155, line: 260, baseType: !14, size: 8)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2909, file: !155, line: 263, baseType: !14, size: 8, offset: 8)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2909, file: !155, line: 266, baseType: !14, size: 8, offset: 16)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2909, file: !155, line: 267, baseType: !14, size: 8, offset: 24)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2909, file: !155, line: 269, baseType: !14, size: 8, offset: 32)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2909, file: !155, line: 270, baseType: !14, size: 8, offset: 40)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2909, file: !155, line: 276, baseType: !14, size: 8, offset: 48)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2909, file: !155, line: 279, baseType: !14, size: 8, offset: 56)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2909, file: !155, line: 280, baseType: !48, size: 16, offset: 64)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2909, file: !155, line: 280, baseType: !48, size: 16, offset: 80)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2909, file: !155, line: 281, baseType: !184, size: 32, offset: 96)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2909, file: !155, line: 284, baseType: !14, size: 8, offset: 128)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2909, file: !155, line: 285, baseType: !14, size: 8, offset: 136)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2909, file: !155, line: 287, baseType: !2925, size: 48, offset: 144)
!2925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 48, elements: !1332)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2909, file: !155, line: 290, baseType: !2927, size: 1280, offset: 192)
!2927 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1308, line: 174, baseType: !2928)
!2928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1308, line: 166, size: 1280, elements: !2929)
!2929 = !{!2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2928, file: !1308, line: 167, baseType: !22, size: 32)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2928, file: !1308, line: 167, baseType: !22, size: 32, offset: 32)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2928, file: !1308, line: 168, baseType: !33, size: 512, offset: 64)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2928, file: !1308, line: 169, baseType: !33, size: 512, offset: 576)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2928, file: !1308, line: 170, baseType: !184, size: 32, offset: 1088)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2928, file: !1308, line: 171, baseType: !184, size: 32, offset: 1120)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2928, file: !1308, line: 172, baseType: !1380, size: 64, offset: 1152)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2928, file: !1308, line: 173, baseType: !56, size: 64, offset: 1216)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2909, file: !155, line: 291, baseType: !2939, size: 512, offset: 1472)
!2939 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1308, line: 178, baseType: !2940)
!2940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1308, line: 176, size: 512, elements: !2941)
!2941 = !{!2942}
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2940, file: !1308, line: 177, baseType: !33, size: 512)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2906, file: !155, line: 406, baseType: !2944, size: 64, offset: 1984)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 64)
!2945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !155, line: 80, size: 1472, elements: !2946)
!2946 = !{!2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2945, file: !155, line: 81, baseType: !56, size: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2945, file: !155, line: 82, baseType: !56, size: 64, offset: 64)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2945, file: !155, line: 83, baseType: !205, size: 32, offset: 128)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2945, file: !155, line: 84, baseType: !205, size: 32, offset: 160)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2945, file: !155, line: 86, baseType: !205, size: 32, offset: 192)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2945, file: !155, line: 87, baseType: !205, size: 32, offset: 224)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2945, file: !155, line: 88, baseType: !205, size: 32, offset: 256)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2945, file: !155, line: 89, baseType: !205, size: 32, offset: 288)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2945, file: !155, line: 90, baseType: !205, size: 32, offset: 320)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2945, file: !155, line: 91, baseType: !205, size: 32, offset: 352)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2945, file: !155, line: 92, baseType: !205, size: 32, offset: 384)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2945, file: !155, line: 93, baseType: !205, size: 32, offset: 416)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2945, file: !155, line: 95, baseType: !2960, size: 1024, offset: 448)
!2960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 1024, elements: !2961)
!2961 = !{!2962}
!2962 = !DISubrange(count: 128)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2906, file: !155, line: 407, baseType: !2964, size: 64, offset: 2048)
!2964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2965, size: 64)
!2965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !155, line: 98, size: 1216, elements: !2966)
!2966 = !{!2967, !2968, !2969, !2970, !2971}
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2965, file: !155, line: 100, baseType: !56, size: 64)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2965, file: !155, line: 101, baseType: !56, size: 64, offset: 64)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2965, file: !155, line: 103, baseType: !205, size: 32, offset: 128)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2965, file: !155, line: 104, baseType: !205, size: 32, offset: 160)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2965, file: !155, line: 106, baseType: !2960, size: 1024, offset: 192)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2906, file: !155, line: 408, baseType: !2973, size: 512, offset: 2112)
!2973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !155, line: 109, size: 512, elements: !2974)
!2974 = !{!2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991}
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2973, file: !155, line: 111, baseType: !22, size: 32)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2973, file: !155, line: 112, baseType: !22, size: 32, offset: 32)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2973, file: !155, line: 115, baseType: !22, size: 32, offset: 64)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2973, file: !155, line: 116, baseType: !22, size: 32, offset: 96)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2973, file: !155, line: 117, baseType: !22, size: 32, offset: 128)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2973, file: !155, line: 118, baseType: !22, size: 32, offset: 160)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2973, file: !155, line: 119, baseType: !22, size: 32, offset: 192)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2973, file: !155, line: 120, baseType: !22, size: 32, offset: 224)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2973, file: !155, line: 121, baseType: !22, size: 32, offset: 256)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2973, file: !155, line: 122, baseType: !22, size: 32, offset: 288)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2973, file: !155, line: 125, baseType: !22, size: 32, offset: 320)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2973, file: !155, line: 126, baseType: !22, size: 32, offset: 352)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2973, file: !155, line: 127, baseType: !48, size: 16, offset: 384)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2973, file: !155, line: 128, baseType: !48, size: 16, offset: 400)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2973, file: !155, line: 129, baseType: !22, size: 32, offset: 416)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2973, file: !155, line: 130, baseType: !22, size: 32, offset: 448)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2973, file: !155, line: 131, baseType: !22, size: 32, offset: 480)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2906, file: !155, line: 409, baseType: !2993, size: 576, offset: 2624)
!2993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !155, line: 134, size: 576, elements: !2994)
!2994 = !{!2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2993, file: !155, line: 135, baseType: !22, size: 32)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2993, file: !155, line: 136, baseType: !22, size: 32, offset: 32)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2993, file: !155, line: 137, baseType: !22, size: 32, offset: 64)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2993, file: !155, line: 138, baseType: !22, size: 32, offset: 96)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2993, file: !155, line: 139, baseType: !22, size: 32, offset: 128)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2993, file: !155, line: 140, baseType: !22, size: 32, offset: 160)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2993, file: !155, line: 141, baseType: !22, size: 32, offset: 192)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2993, file: !155, line: 142, baseType: !22, size: 32, offset: 224)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2993, file: !155, line: 143, baseType: !184, size: 32, offset: 256)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2993, file: !155, line: 144, baseType: !22, size: 32, offset: 288)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2993, file: !155, line: 145, baseType: !22, size: 32, offset: 320)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2993, file: !155, line: 147, baseType: !22, size: 32, offset: 352)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2993, file: !155, line: 148, baseType: !22, size: 32, offset: 384)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2993, file: !155, line: 149, baseType: !22, size: 32, offset: 416)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2993, file: !155, line: 150, baseType: !22, size: 32, offset: 448)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2993, file: !155, line: 151, baseType: !22, size: 32, offset: 480)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2993, file: !155, line: 152, baseType: !37, size: 64, offset: 512)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2906, file: !155, line: 411, baseType: !22, size: 32, offset: 3200)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2906, file: !155, line: 411, baseType: !22, size: 32, offset: 3232)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2906, file: !155, line: 411, baseType: !22, size: 32, offset: 3264)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2906, file: !155, line: 412, baseType: !184, size: 32, offset: 3296)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2906, file: !155, line: 413, baseType: !22, size: 32, offset: 3328)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2906, file: !155, line: 413, baseType: !22, size: 32, offset: 3360)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2906, file: !155, line: 415, baseType: !22, size: 32, offset: 3392)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2906, file: !155, line: 415, baseType: !22, size: 32, offset: 3424)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2906, file: !155, line: 416, baseType: !48, size: 16, offset: 3456)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2906, file: !155, line: 416, baseType: !48, size: 16, offset: 3472)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2906, file: !155, line: 418, baseType: !184, size: 32, offset: 3488)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2906, file: !155, line: 418, baseType: !184, size: 32, offset: 3520)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2906, file: !155, line: 421, baseType: !184, size: 32, offset: 3552)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2906, file: !155, line: 421, baseType: !184, size: 32, offset: 3584)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2906, file: !155, line: 421, baseType: !184, size: 32, offset: 3616)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2906, file: !155, line: 425, baseType: !48, size: 16, offset: 3648)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2906, file: !155, line: 425, baseType: !48, size: 16, offset: 3664)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2906, file: !155, line: 425, baseType: !48, size: 16, offset: 3680)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2906, file: !155, line: 426, baseType: !48, size: 16, offset: 3696)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2906, file: !155, line: 428, baseType: !48, size: 16, offset: 3712)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2906, file: !155, line: 428, baseType: !48, size: 16, offset: 3728)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2906, file: !155, line: 431, baseType: !22, size: 32, offset: 3744)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2906, file: !155, line: 433, baseType: !48, size: 16, offset: 3776)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2906, file: !155, line: 435, baseType: !48, size: 16, offset: 3792)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2906, file: !155, line: 437, baseType: !48, size: 16, offset: 3808)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2906, file: !155, line: 439, baseType: !48, size: 16, offset: 3824)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2906, file: !155, line: 441, baseType: !48, size: 16, offset: 3840)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2906, file: !155, line: 443, baseType: !48, size: 16, offset: 3856)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2906, file: !155, line: 449, baseType: !22, size: 32, offset: 3872)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2906, file: !155, line: 453, baseType: !22, size: 32, offset: 3904)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2906, file: !155, line: 458, baseType: !48, size: 16, offset: 3936)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2906, file: !155, line: 462, baseType: !48, size: 16, offset: 3952)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2906, file: !155, line: 467, baseType: !22, size: 32, offset: 3968)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2906, file: !155, line: 467, baseType: !22, size: 32, offset: 4000)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2906, file: !155, line: 469, baseType: !48, size: 16, offset: 4032)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2906, file: !155, line: 469, baseType: !48, size: 16, offset: 4048)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2906, file: !155, line: 469, baseType: !48, size: 16, offset: 4064)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2906, file: !155, line: 469, baseType: !48, size: 16, offset: 4080)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2906, file: !155, line: 474, baseType: !48, size: 16, offset: 4096)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2906, file: !155, line: 475, baseType: !14, size: 8, offset: 4112)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2906, file: !155, line: 476, baseType: !14, size: 8, offset: 4120)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2906, file: !155, line: 481, baseType: !22, size: 32, offset: 4128)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2906, file: !155, line: 486, baseType: !22, size: 32, offset: 4160)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2906, file: !155, line: 491, baseType: !22, size: 32, offset: 4192)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2906, file: !155, line: 496, baseType: !48, size: 16, offset: 4224)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2906, file: !155, line: 498, baseType: !48, size: 16, offset: 4240)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2906, file: !155, line: 501, baseType: !48, size: 16, offset: 4256)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2906, file: !155, line: 502, baseType: !48, size: 16, offset: 4272)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2906, file: !155, line: 508, baseType: !48, size: 16, offset: 4288)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2906, file: !155, line: 513, baseType: !48, size: 16, offset: 4304)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2906, file: !155, line: 515, baseType: !48, size: 16, offset: 4320)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2906, file: !155, line: 515, baseType: !48, size: 16, offset: 4336)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2906, file: !155, line: 519, baseType: !840, size: 128, offset: 4352)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2906, file: !155, line: 519, baseType: !840, size: 128, offset: 4480)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2906, file: !155, line: 520, baseType: !850, size: 128, offset: 4608)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2906, file: !155, line: 523, baseType: !58, size: 128, offset: 4736)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2906, file: !155, line: 524, baseType: !48, size: 16, offset: 4864)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2906, file: !155, line: 527, baseType: !48, size: 16, offset: 4880)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2906, file: !155, line: 532, baseType: !184, size: 32, offset: 4896)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2906, file: !155, line: 532, baseType: !184, size: 32, offset: 4928)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2906, file: !155, line: 534, baseType: !184, size: 32, offset: 4960)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2906, file: !155, line: 538, baseType: !184, size: 32, offset: 4992)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2906, file: !155, line: 542, baseType: !22, size: 32, offset: 5024)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2906, file: !155, line: 545, baseType: !184, size: 32, offset: 5056)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2906, file: !155, line: 545, baseType: !184, size: 32, offset: 5088)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2906, file: !155, line: 545, baseType: !184, size: 32, offset: 5120)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2906, file: !155, line: 548, baseType: !184, size: 32, offset: 5152)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2906, file: !155, line: 551, baseType: !48, size: 16, offset: 5184)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2906, file: !155, line: 551, baseType: !48, size: 16, offset: 5200)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2906, file: !155, line: 551, baseType: !48, size: 16, offset: 5216)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2906, file: !155, line: 551, baseType: !48, size: 16, offset: 5232)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2906, file: !155, line: 552, baseType: !48, size: 16, offset: 5248)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2906, file: !155, line: 552, baseType: !48, size: 16, offset: 5264)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2906, file: !155, line: 553, baseType: !184, size: 32, offset: 5280)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2906, file: !155, line: 553, baseType: !184, size: 32, offset: 5312)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2906, file: !155, line: 554, baseType: !48, size: 16, offset: 5344)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2906, file: !155, line: 554, baseType: !48, size: 16, offset: 5360)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2906, file: !155, line: 555, baseType: !184, size: 32, offset: 5376)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2906, file: !155, line: 555, baseType: !184, size: 32, offset: 5408)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2906, file: !155, line: 558, baseType: !131, size: 8192, offset: 5440)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2906, file: !155, line: 561, baseType: !22, size: 32, offset: 13632)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2906, file: !155, line: 562, baseType: !48, size: 16, offset: 13664)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2906, file: !155, line: 562, baseType: !48, size: 16, offset: 13680)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2906, file: !155, line: 565, baseType: !2292, size: 6144, offset: 13696)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2906, file: !155, line: 568, baseType: !496, size: 128, offset: 19840)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2906, file: !155, line: 569, baseType: !496, size: 128, offset: 19968)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2906, file: !155, line: 572, baseType: !14, size: 8, offset: 20096)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2906, file: !155, line: 573, baseType: !14, size: 8, offset: 20104)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2906, file: !155, line: 574, baseType: !14, size: 8, offset: 20112)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2906, file: !155, line: 575, baseType: !2758, size: 40, offset: 20120)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2906, file: !155, line: 578, baseType: !22, size: 32, offset: 20160)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2906, file: !155, line: 579, baseType: !48, size: 16, offset: 20192)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2906, file: !155, line: 580, baseType: !48, size: 16, offset: 20208)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2906, file: !155, line: 581, baseType: !184, size: 32, offset: 20224)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2906, file: !155, line: 582, baseType: !184, size: 32, offset: 20256)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2906, file: !155, line: 585, baseType: !48, size: 16, offset: 20288)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2906, file: !155, line: 585, baseType: !48, size: 16, offset: 20304)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2906, file: !155, line: 586, baseType: !184, size: 32, offset: 20320)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2906, file: !155, line: 589, baseType: !48, size: 16, offset: 20352)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2906, file: !155, line: 589, baseType: !48, size: 16, offset: 20368)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2906, file: !155, line: 590, baseType: !22, size: 32, offset: 20384)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2906, file: !155, line: 593, baseType: !48, size: 16, offset: 20416)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2906, file: !155, line: 593, baseType: !48, size: 16, offset: 20432)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2906, file: !155, line: 594, baseType: !48, size: 16, offset: 20448)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2906, file: !155, line: 594, baseType: !48, size: 16, offset: 20464)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2906, file: !155, line: 595, baseType: !184, size: 32, offset: 20480)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2906, file: !155, line: 596, baseType: !184, size: 32, offset: 20512)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2906, file: !155, line: 597, baseType: !3120, size: 64, offset: 20544)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 64)
!3121 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !3122, line: 44, flags: DIFlagFwdDecl)
!3122 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2906, file: !155, line: 600, baseType: !22, size: 32, offset: 20608)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2906, file: !155, line: 601, baseType: !184, size: 32, offset: 20640)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2906, file: !155, line: 604, baseType: !3126, size: 256, offset: 20672)
!3126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 256, elements: !527)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2906, file: !155, line: 607, baseType: !3128, size: 10880, offset: 20928)
!3128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !155, line: 364, size: 10880, elements: !3129)
!3129 = !{!3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !3128, file: !155, line: 365, baseType: !2909, size: 1984)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !3128, file: !155, line: 367, baseType: !131, size: 8192, offset: 1984)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !3128, file: !155, line: 369, baseType: !48, size: 16, offset: 10176)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !3128, file: !155, line: 369, baseType: !48, size: 16, offset: 10192)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !3128, file: !155, line: 370, baseType: !48, size: 16, offset: 10208)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3128, file: !155, line: 370, baseType: !48, size: 16, offset: 10224)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !3128, file: !155, line: 372, baseType: !184, size: 32, offset: 10240)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3128, file: !155, line: 373, baseType: !184, size: 32, offset: 10272)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !3128, file: !155, line: 375, baseType: !2567, size: 24, offset: 10304)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !3128, file: !155, line: 376, baseType: !14, size: 8, offset: 10328)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !3128, file: !155, line: 378, baseType: !14, size: 8, offset: 10336)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3128, file: !155, line: 379, baseType: !2567, size: 24, offset: 10344)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !3128, file: !155, line: 381, baseType: !33, size: 512, offset: 10368)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2906, file: !155, line: 609, baseType: !22, size: 32, offset: 31808)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2906, file: !155, line: 610, baseType: !22, size: 32, offset: 31840)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !154, file: !155, line: 1252, baseType: !3146, size: 256, offset: 34112)
!3146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !155, line: 158, size: 256, elements: !3147)
!3147 = !{!3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156}
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !3146, file: !155, line: 159, baseType: !22, size: 32)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !3146, file: !155, line: 160, baseType: !184, size: 32, offset: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !3146, file: !155, line: 161, baseType: !184, size: 32, offset: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !3146, file: !155, line: 162, baseType: !184, size: 32, offset: 96)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !3146, file: !155, line: 163, baseType: !22, size: 32, offset: 128)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3146, file: !155, line: 164, baseType: !48, size: 16, offset: 160)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3146, file: !155, line: 165, baseType: !48, size: 16, offset: 176)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !3146, file: !155, line: 166, baseType: !184, size: 32, offset: 192)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3146, file: !155, line: 167, baseType: !184, size: 32, offset: 224)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !154, file: !155, line: 1254, baseType: !58, size: 128, offset: 34368)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !154, file: !155, line: 1255, baseType: !58, size: 128, offset: 34496)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !154, file: !155, line: 1257, baseType: !56, size: 64, offset: 34624)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !154, file: !155, line: 1258, baseType: !56, size: 64, offset: 34688)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !154, file: !155, line: 1259, baseType: !56, size: 64, offset: 34752)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !154, file: !155, line: 1260, baseType: !56, size: 64, offset: 34816)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !154, file: !155, line: 1262, baseType: !56, size: 64, offset: 34880)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !154, file: !155, line: 1265, baseType: !3165, size: 64, offset: 34944)
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 64)
!3166 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !155, line: 1265, flags: DIFlagFwdDecl)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !154, file: !155, line: 1266, baseType: !48, size: 16, offset: 35008)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !154, file: !155, line: 1267, baseType: !48, size: 16, offset: 35024)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !154, file: !155, line: 1270, baseType: !22, size: 32, offset: 35040)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !154, file: !155, line: 1271, baseType: !58, size: 128, offset: 35072)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !154, file: !155, line: 1274, baseType: !3172, size: 128, offset: 35200)
!3172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !155, line: 650, size: 128, elements: !3173)
!3173 = !{!3174, !3175, !3176, !3177, !3178}
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3172, file: !155, line: 651, baseType: !183, size: 96)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3172, file: !155, line: 652, baseType: !14, size: 8, offset: 96)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3172, file: !155, line: 652, baseType: !14, size: 8, offset: 104)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3172, file: !155, line: 652, baseType: !14, size: 8, offset: 112)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !3172, file: !155, line: 652, baseType: !14, size: 8, offset: 120)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !154, file: !155, line: 1275, baseType: !3180, size: 1472, offset: 35328)
!3180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !155, line: 676, size: 1472, elements: !3181)
!3181 = !{!3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3203, !3204, !3205, !3206, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244}
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !3180, file: !155, line: 679, baseType: !3172, size: 128)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !3180, file: !155, line: 680, baseType: !48, size: 16, offset: 128)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !3180, file: !155, line: 680, baseType: !48, size: 16, offset: 144)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !3180, file: !155, line: 680, baseType: !48, size: 16, offset: 160)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !3180, file: !155, line: 680, baseType: !48, size: 16, offset: 176)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3180, file: !155, line: 681, baseType: !48, size: 16, offset: 192)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !3180, file: !155, line: 681, baseType: !48, size: 16, offset: 208)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !3180, file: !155, line: 681, baseType: !48, size: 16, offset: 224)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !3180, file: !155, line: 681, baseType: !48, size: 16, offset: 240)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !3180, file: !155, line: 682, baseType: !48, size: 16, offset: 256)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !3180, file: !155, line: 682, baseType: !188, size: 48, offset: 272)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !3180, file: !155, line: 685, baseType: !3194, size: 192, offset: 320)
!3194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !155, line: 633, size: 192, elements: !3195)
!3195 = !{!3196, !3197, !3198, !3199, !3200, !3201, !3202}
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !3194, file: !155, line: 634, baseType: !48, size: 16)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3194, file: !155, line: 634, baseType: !48, size: 16, offset: 16)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !3194, file: !155, line: 635, baseType: !48, size: 16, offset: 32)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !3194, file: !155, line: 635, baseType: !48, size: 16, offset: 48)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !3194, file: !155, line: 636, baseType: !184, size: 32, offset: 64)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3194, file: !155, line: 636, baseType: !184, size: 32, offset: 96)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !3194, file: !155, line: 637, baseType: !3120, size: 64, offset: 128)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !3180, file: !155, line: 686, baseType: !48, size: 16, offset: 512)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !3180, file: !155, line: 686, baseType: !48, size: 16, offset: 528)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !3180, file: !155, line: 687, baseType: !184, size: 32, offset: 544)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !3180, file: !155, line: 688, baseType: !3207, size: 448, offset: 576)
!3207 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !155, line: 674, baseType: !3208)
!3208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !155, line: 659, size: 448, elements: !3209)
!3209 = !{!3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224}
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !3208, file: !155, line: 660, baseType: !184, size: 32)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !3208, file: !155, line: 661, baseType: !184, size: 32, offset: 32)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !3208, file: !155, line: 662, baseType: !184, size: 32, offset: 64)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !3208, file: !155, line: 663, baseType: !184, size: 32, offset: 96)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !3208, file: !155, line: 664, baseType: !184, size: 32, offset: 128)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !3208, file: !155, line: 665, baseType: !184, size: 32, offset: 160)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !3208, file: !155, line: 666, baseType: !184, size: 32, offset: 192)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !3208, file: !155, line: 667, baseType: !184, size: 32, offset: 224)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !3208, file: !155, line: 668, baseType: !184, size: 32, offset: 256)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !3208, file: !155, line: 669, baseType: !184, size: 32, offset: 288)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !3208, file: !155, line: 670, baseType: !22, size: 32, offset: 320)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !3208, file: !155, line: 671, baseType: !184, size: 32, offset: 352)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !3208, file: !155, line: 672, baseType: !184, size: 32, offset: 384)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3208, file: !155, line: 673, baseType: !48, size: 16, offset: 416)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3208, file: !155, line: 673, baseType: !48, size: 16, offset: 432)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3180, file: !155, line: 692, baseType: !184, size: 32, offset: 1024)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !3180, file: !155, line: 697, baseType: !184, size: 32, offset: 1056)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3180, file: !155, line: 703, baseType: !22, size: 32, offset: 1088)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3180, file: !155, line: 704, baseType: !48, size: 16, offset: 1120)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !3180, file: !155, line: 704, baseType: !48, size: 16, offset: 1136)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !3180, file: !155, line: 705, baseType: !48, size: 16, offset: 1152)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !3180, file: !155, line: 706, baseType: !48, size: 16, offset: 1168)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !3180, file: !155, line: 707, baseType: !48, size: 16, offset: 1184)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !3180, file: !155, line: 708, baseType: !48, size: 16, offset: 1200)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !3180, file: !155, line: 709, baseType: !48, size: 16, offset: 1216)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !3180, file: !155, line: 709, baseType: !48, size: 16, offset: 1232)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !3180, file: !155, line: 709, baseType: !48, size: 16, offset: 1248)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !3180, file: !155, line: 709, baseType: !48, size: 16, offset: 1264)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !3180, file: !155, line: 710, baseType: !48, size: 16, offset: 1280)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !3180, file: !155, line: 711, baseType: !48, size: 16, offset: 1296)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !3180, file: !155, line: 712, baseType: !184, size: 32, offset: 1312)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !3180, file: !155, line: 713, baseType: !184, size: 32, offset: 1344)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !3180, file: !155, line: 713, baseType: !184, size: 32, offset: 1376)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !3180, file: !155, line: 713, baseType: !184, size: 32, offset: 1408)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3180, file: !155, line: 713, baseType: !184, size: 32, offset: 1440)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !154, file: !155, line: 1278, baseType: !3246, size: 64, offset: 36800)
!3246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !155, line: 1197, size: 64, elements: !3247)
!3247 = !{!3248, !3249, !3250, !3251}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !3246, file: !155, line: 1199, baseType: !184, size: 32)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !3246, file: !155, line: 1200, baseType: !14, size: 8, offset: 32)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !3246, file: !155, line: 1201, baseType: !14, size: 8, offset: 40)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3246, file: !155, line: 1202, baseType: !48, size: 16, offset: 48)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !154, file: !155, line: 1281, baseType: !351, size: 64, offset: 36864)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !154, file: !155, line: 1284, baseType: !3254, size: 192, offset: 36928)
!3254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !155, line: 1208, size: 192, elements: !3255)
!3255 = !{!3256, !3257, !3258, !3259}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3254, file: !155, line: 1209, baseType: !183, size: 96)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3254, file: !155, line: 1210, baseType: !22, size: 32, offset: 96)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !3254, file: !155, line: 1210, baseType: !22, size: 32, offset: 128)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3254, file: !155, line: 1210, baseType: !22, size: 32, offset: 160)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !154, file: !155, line: 1287, baseType: !2338, size: 64, offset: 37120)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !154, file: !155, line: 1289, baseType: !2092, size: 64, offset: 37184)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !154, file: !155, line: 1290, baseType: !2092, size: 64, offset: 37248)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !154, file: !155, line: 1293, baseType: !2927, size: 1280, offset: 37312)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !154, file: !155, line: 1294, baseType: !2939, size: 512, offset: 38592)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !154, file: !155, line: 1295, baseType: !1307, size: 512, offset: 39104)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !154, file: !155, line: 1298, baseType: !3267, size: 64, offset: 39616)
!3267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3268, size: 64)
!3268 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !155, line: 1298, flags: DIFlagFwdDecl)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !109, file: !110, line: 58, baseType: !153, size: 64, offset: 1536)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !109, file: !110, line: 60, baseType: !22, size: 32, offset: 1600)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !109, file: !110, line: 61, baseType: !22, size: 32, offset: 1632)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !109, file: !110, line: 63, baseType: !48, size: 16, offset: 1664)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !109, file: !110, line: 64, baseType: !48, size: 16, offset: 1680)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !109, file: !110, line: 65, baseType: !48, size: 16, offset: 1696)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !109, file: !110, line: 66, baseType: !48, size: 16, offset: 1712)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !109, file: !110, line: 67, baseType: !48, size: 16, offset: 1728)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !109, file: !110, line: 68, baseType: !48, size: 16, offset: 1744)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !109, file: !110, line: 69, baseType: !48, size: 16, offset: 1760)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !109, file: !110, line: 70, baseType: !48, size: 16, offset: 1776)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !109, file: !110, line: 71, baseType: !48, size: 16, offset: 1792)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !109, file: !110, line: 73, baseType: !48, size: 16, offset: 1808)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !109, file: !110, line: 74, baseType: !48, size: 16, offset: 1824)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !109, file: !110, line: 76, baseType: !48, size: 16, offset: 1840)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !109, file: !110, line: 78, baseType: !95, size: 64, offset: 1856)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !109, file: !110, line: 79, baseType: !56, size: 64, offset: 1920)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !102, file: !28, line: 175, baseType: !108, size: 64, offset: 256)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !102, file: !28, line: 176, baseType: !33, size: 512, offset: 320)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !102, file: !28, line: 178, baseType: !48, size: 16, offset: 832)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !102, file: !28, line: 178, baseType: !48, size: 16, offset: 848)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !102, file: !28, line: 178, baseType: !48, size: 16, offset: 864)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !102, file: !28, line: 178, baseType: !48, size: 16, offset: 880)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !102, file: !28, line: 179, baseType: !48, size: 16, offset: 896)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !102, file: !28, line: 180, baseType: !48, size: 16, offset: 912)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !102, file: !28, line: 181, baseType: !48, size: 16, offset: 928)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !102, file: !28, line: 182, baseType: !48, size: 16, offset: 944)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !102, file: !28, line: 183, baseType: !48, size: 16, offset: 960)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !102, file: !28, line: 184, baseType: !48, size: 16, offset: 976)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !102, file: !28, line: 185, baseType: !48, size: 16, offset: 992)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !102, file: !28, line: 186, baseType: !48, size: 16, offset: 1008)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !102, file: !28, line: 188, baseType: !22, size: 32, offset: 1024)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !102, file: !28, line: 190, baseType: !48, size: 16, offset: 1056)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !102, file: !28, line: 191, baseType: !48, size: 16, offset: 1072)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !102, file: !28, line: 194, baseType: !3304, size: 64, offset: 1088)
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3305, size: 64)
!3305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !8, line: 421, size: 960, elements: !3306)
!3306 = !{!3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3339, !3340, !3341, !3342}
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3305, file: !8, line: 422, baseType: !3304, size: 64)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3305, file: !8, line: 422, baseType: !3304, size: 64, offset: 64)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3305, file: !8, line: 424, baseType: !48, size: 16, offset: 128)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3305, file: !8, line: 425, baseType: !48, size: 16, offset: 144)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3305, file: !8, line: 426, baseType: !22, size: 32, offset: 160)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3305, file: !8, line: 426, baseType: !22, size: 32, offset: 192)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !3305, file: !8, line: 427, baseType: !2348, size: 64, offset: 224)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !3305, file: !8, line: 428, baseType: !2925, size: 48, offset: 288)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !3305, file: !8, line: 431, baseType: !14, size: 8, offset: 336)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3305, file: !8, line: 432, baseType: !14, size: 8, offset: 344)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !3305, file: !8, line: 435, baseType: !48, size: 16, offset: 352)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !3305, file: !8, line: 436, baseType: !48, size: 16, offset: 368)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !3305, file: !8, line: 437, baseType: !22, size: 32, offset: 384)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !3305, file: !8, line: 437, baseType: !22, size: 32, offset: 416)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !3305, file: !8, line: 438, baseType: !994, size: 64, offset: 448)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !3305, file: !8, line: 439, baseType: !22, size: 32, offset: 512)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !3305, file: !8, line: 439, baseType: !22, size: 32, offset: 544)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !3305, file: !8, line: 442, baseType: !48, size: 16, offset: 576)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !3305, file: !8, line: 442, baseType: !48, size: 16, offset: 592)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !3305, file: !8, line: 442, baseType: !48, size: 16, offset: 608)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !3305, file: !8, line: 442, baseType: !48, size: 16, offset: 624)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !3305, file: !8, line: 443, baseType: !48, size: 16, offset: 640)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !3305, file: !8, line: 446, baseType: !48, size: 16, offset: 656)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !3305, file: !8, line: 449, baseType: !12, size: 64, offset: 704)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !3305, file: !8, line: 452, baseType: !3332, size: 64, offset: 768)
!3332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3333, size: 64)
!3333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !8, line: 463, size: 128, elements: !3334)
!3334 = !{!3335, !3336, !3337, !3338}
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !3333, file: !8, line: 464, baseType: !22, size: 32)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !3333, file: !8, line: 465, baseType: !184, size: 32, offset: 32)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !3333, file: !8, line: 466, baseType: !184, size: 32, offset: 64)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !3333, file: !8, line: 467, baseType: !184, size: 32, offset: 96)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !3305, file: !8, line: 455, baseType: !48, size: 16, offset: 832)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !3305, file: !8, line: 456, baseType: !48, size: 16, offset: 848)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3305, file: !8, line: 457, baseType: !22, size: 32, offset: 864)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3305, file: !8, line: 458, baseType: !56, size: 64, offset: 896)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !102, file: !28, line: 196, baseType: !3344, size: 64, offset: 1152)
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 64)
!3345 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !28, line: 55, flags: DIFlagFwdDecl)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !102, file: !28, line: 198, baseType: !3347, size: 64, offset: 1216)
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 64)
!3348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !8, line: 398, size: 448, elements: !3349)
!3349 = !{!3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3348, file: !8, line: 399, baseType: !3347, size: 64)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3348, file: !8, line: 399, baseType: !3347, size: 64, offset: 64)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !3348, file: !8, line: 400, baseType: !22, size: 32, offset: 128)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3348, file: !8, line: 401, baseType: !22, size: 32, offset: 160)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3348, file: !8, line: 402, baseType: !22, size: 32, offset: 192)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !3348, file: !8, line: 403, baseType: !22, size: 32, offset: 224)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !3348, file: !8, line: 404, baseType: !22, size: 32, offset: 256)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3348, file: !8, line: 405, baseType: !22, size: 32, offset: 288)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3348, file: !8, line: 407, baseType: !56, size: 64, offset: 320)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !3348, file: !8, line: 414, baseType: !56, size: 64, offset: 384)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !102, file: !28, line: 200, baseType: !22, size: 32, offset: 1280)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !102, file: !28, line: 200, baseType: !22, size: 32, offset: 1312)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !102, file: !28, line: 201, baseType: !56, size: 64, offset: 1344)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !102, file: !28, line: 203, baseType: !58, size: 128, offset: 1408)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !102, file: !28, line: 204, baseType: !58, size: 128, offset: 1536)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !102, file: !28, line: 205, baseType: !58, size: 128, offset: 1664)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !102, file: !28, line: 207, baseType: !58, size: 128, offset: 1792)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !102, file: !28, line: 208, baseType: !58, size: 128, offset: 1920)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !96, file: !8, line: 495, baseType: !994, size: 64, offset: 192)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !96, file: !8, line: 496, baseType: !22, size: 32, offset: 256)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !96, file: !8, line: 497, baseType: !56, size: 64, offset: 320)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !96, file: !8, line: 499, baseType: !994, size: 64, offset: 384)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !96, file: !8, line: 500, baseType: !994, size: 64, offset: 448)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !96, file: !8, line: 502, baseType: !994, size: 64, offset: 512)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !96, file: !8, line: 503, baseType: !994, size: 64, offset: 576)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !96, file: !8, line: 504, baseType: !994, size: 64, offset: 640)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !96, file: !8, line: 505, baseType: !22, size: 32, offset: 704)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !27, file: !28, line: 343, baseType: !58, size: 128, offset: 1024)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !27, file: !28, line: 344, baseType: !26, size: 64, offset: 1152)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !27, file: !28, line: 345, baseType: !716, size: 64, offset: 1216)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !27, file: !28, line: 346, baseType: !48, size: 16, offset: 1280)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !27, file: !28, line: 346, baseType: !188, size: 48, offset: 1296)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !9, file: !8, line: 524, baseType: !3383, size: 64, offset: 320)
!3383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3384, size: 64)
!3384 = !DISubroutineType(types: !3385)
!3385 = !{!233, !23, !26}
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !9, file: !8, line: 530, baseType: !3387, size: 64, offset: 384)
!3387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3388, size: 64)
!3388 = !DISubroutineType(types: !3389)
!3389 = !{!22, !23, !26, !3390}
!3390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3391, size: 64)
!3391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3305)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !9, file: !8, line: 531, baseType: !3393, size: 64, offset: 448)
!3393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3394, size: 64)
!3394 = !DISubroutineType(types: !3395)
!3395 = !{null, !23, !26}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !9, file: !8, line: 532, baseType: !3387, size: 64, offset: 512)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !9, file: !8, line: 536, baseType: !3398, size: 64, offset: 576)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3399, size: 64)
!3399 = !DISubroutineType(types: !3400)
!3400 = !{!22, !23}
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !9, file: !8, line: 539, baseType: !3393, size: 64, offset: 640)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !9, file: !8, line: 542, baseType: !81, size: 64, offset: 704)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !9, file: !8, line: 545, baseType: !43, size: 64, offset: 768)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !9, file: !8, line: 549, baseType: !3405, size: 64, offset: 832)
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3406, size: 64)
!3406 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !25, line: 333, baseType: !3407)
!3407 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !25, line: 39, flags: DIFlagFwdDecl)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !9, file: !8, line: 552, baseType: !58, size: 128, offset: 896)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !9, file: !8, line: 555, baseType: !3410, size: 64, offset: 1024)
!3410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3411, size: 64)
!3411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !28, line: 281, size: 1088, elements: !3412)
!3412 = !{!3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423}
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3411, file: !28, line: 282, baseType: !3410, size: 64)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3411, file: !28, line: 282, baseType: !3410, size: 64, offset: 64)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3411, file: !28, line: 284, baseType: !58, size: 128, offset: 128)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !3411, file: !28, line: 285, baseType: !58, size: 128, offset: 256)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3411, file: !28, line: 287, baseType: !33, size: 512, offset: 384)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !3411, file: !28, line: 288, baseType: !48, size: 16, offset: 896)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !3411, file: !28, line: 289, baseType: !48, size: 16, offset: 912)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3411, file: !28, line: 291, baseType: !48, size: 16, offset: 928)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !3411, file: !28, line: 292, baseType: !48, size: 16, offset: 944)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3411, file: !28, line: 295, baseType: !3398, size: 64, offset: 960)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !3411, file: !28, line: 296, baseType: !56, size: 64, offset: 1024)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !9, file: !8, line: 559, baseType: !56, size: 64, offset: 1088)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !9, file: !8, line: 560, baseType: !3426, size: 64, offset: 1152)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = !DISubroutineType(types: !3428)
!3428 = !{!22, !23, !69}
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !9, file: !8, line: 563, baseType: !744, size: 256, offset: 1216)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9, file: !8, line: 566, baseType: !48, size: 16, offset: 1472)
!3431 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3432, retainedTypes: !3673, globals: !4142, splitDebugInlining: false, nameTableKind: None)
!3432 = !{!1752, !1760, !1948, !2017, !2041, !3433, !3462, !3470, !3476, !3509, !3520, !3524, !3567, !3598, !3604, !3637, !3641, !3654, !3662, !3667}
!3433 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IMB_BlendMode", file: !1259, line: 157, baseType: !205, size: 32, elements: !3434)
!3434 = !{!3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448, !3449, !3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461}
!3435 = !DIEnumerator(name: "IMB_BLEND_MIX", value: 0, isUnsigned: true)
!3436 = !DIEnumerator(name: "IMB_BLEND_ADD", value: 1, isUnsigned: true)
!3437 = !DIEnumerator(name: "IMB_BLEND_SUB", value: 2, isUnsigned: true)
!3438 = !DIEnumerator(name: "IMB_BLEND_MUL", value: 3, isUnsigned: true)
!3439 = !DIEnumerator(name: "IMB_BLEND_LIGHTEN", value: 4, isUnsigned: true)
!3440 = !DIEnumerator(name: "IMB_BLEND_DARKEN", value: 5, isUnsigned: true)
!3441 = !DIEnumerator(name: "IMB_BLEND_ERASE_ALPHA", value: 6, isUnsigned: true)
!3442 = !DIEnumerator(name: "IMB_BLEND_ADD_ALPHA", value: 7, isUnsigned: true)
!3443 = !DIEnumerator(name: "IMB_BLEND_OVERLAY", value: 8, isUnsigned: true)
!3444 = !DIEnumerator(name: "IMB_BLEND_HARDLIGHT", value: 9, isUnsigned: true)
!3445 = !DIEnumerator(name: "IMB_BLEND_COLORBURN", value: 10, isUnsigned: true)
!3446 = !DIEnumerator(name: "IMB_BLEND_LINEARBURN", value: 11, isUnsigned: true)
!3447 = !DIEnumerator(name: "IMB_BLEND_COLORDODGE", value: 12, isUnsigned: true)
!3448 = !DIEnumerator(name: "IMB_BLEND_SCREEN", value: 13, isUnsigned: true)
!3449 = !DIEnumerator(name: "IMB_BLEND_SOFTLIGHT", value: 14, isUnsigned: true)
!3450 = !DIEnumerator(name: "IMB_BLEND_PINLIGHT", value: 15, isUnsigned: true)
!3451 = !DIEnumerator(name: "IMB_BLEND_VIVIDLIGHT", value: 16, isUnsigned: true)
!3452 = !DIEnumerator(name: "IMB_BLEND_LINEARLIGHT", value: 17, isUnsigned: true)
!3453 = !DIEnumerator(name: "IMB_BLEND_DIFFERENCE", value: 18, isUnsigned: true)
!3454 = !DIEnumerator(name: "IMB_BLEND_EXCLUSION", value: 19, isUnsigned: true)
!3455 = !DIEnumerator(name: "IMB_BLEND_HUE", value: 20, isUnsigned: true)
!3456 = !DIEnumerator(name: "IMB_BLEND_SATURATION", value: 21, isUnsigned: true)
!3457 = !DIEnumerator(name: "IMB_BLEND_LUMINOSITY", value: 22, isUnsigned: true)
!3458 = !DIEnumerator(name: "IMB_BLEND_COLOR", value: 23, isUnsigned: true)
!3459 = !DIEnumerator(name: "IMB_BLEND_COPY", value: 1000, isUnsigned: true)
!3460 = !DIEnumerator(name: "IMB_BLEND_COPY_RGB", value: 1001, isUnsigned: true)
!3461 = !DIEnumerator(name: "IMB_BLEND_COPY_ALPHA", value: 1002, isUnsigned: true)
!3462 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BrushImagePaintTool", file: !2592, line: 264, baseType: !205, size: 32, elements: !3463)
!3463 = !{!3464, !3465, !3466, !3467, !3468, !3469}
!3464 = !DIEnumerator(name: "PAINT_TOOL_DRAW", value: 0, isUnsigned: true)
!3465 = !DIEnumerator(name: "PAINT_TOOL_SOFTEN", value: 1, isUnsigned: true)
!3466 = !DIEnumerator(name: "PAINT_TOOL_SMEAR", value: 2, isUnsigned: true)
!3467 = !DIEnumerator(name: "PAINT_TOOL_CLONE", value: 3, isUnsigned: true)
!3468 = !DIEnumerator(name: "PAINT_TOOL_FILL", value: 4, isUnsigned: true)
!3469 = !DIEnumerator(name: "PAINT_TOOL_MASK", value: 5, isUnsigned: true)
!3470 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BrushStrokeMode", file: !3471, line: 248, baseType: !205, size: 32, elements: !3472)
!3471 = !DIFile(filename: "blender/source/blender/editors/sculpt_paint/paint_intern.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3472 = !{!3473, !3474, !3475}
!3473 = !DIEnumerator(name: "BRUSH_STROKE_NORMAL", value: 0, isUnsigned: true)
!3474 = !DIEnumerator(name: "BRUSH_STROKE_INVERT", value: 1, isUnsigned: true)
!3475 = !DIEnumerator(name: "BRUSH_STROKE_SMOOTH", value: 2, isUnsigned: true)
!3476 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyFlag", file: !25, line: 151, baseType: !205, size: 32, elements: !3477)
!3477 = !{!3478, !3479, !3480, !3481, !3482, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3506, !3507, !3508}
!3478 = !DIEnumerator(name: "PROP_EDITABLE", value: 1, isUnsigned: true)
!3479 = !DIEnumerator(name: "PROP_LIB_EXCEPTION", value: 65536, isUnsigned: true)
!3480 = !DIEnumerator(name: "PROP_ANIMATABLE", value: 2, isUnsigned: true)
!3481 = !DIEnumerator(name: "PROP_ICONS_CONSECUTIVE", value: 4096, isUnsigned: true)
!3482 = !DIEnumerator(name: "PROP_HIDDEN", value: 524288, isUnsigned: true)
!3483 = !DIEnumerator(name: "PROP_SKIP_SAVE", value: 268435456, isUnsigned: true)
!3484 = !DIEnumerator(name: "PROP_REQUIRED", value: 4, isUnsigned: true)
!3485 = !DIEnumerator(name: "PROP_OUTPUT", value: 8, isUnsigned: true)
!3486 = !DIEnumerator(name: "PROP_RNAPTR", value: 2048, isUnsigned: true)
!3487 = !DIEnumerator(name: "PROP_PYFUNC_OPTIONAL", value: 1073741824, isUnsigned: true)
!3488 = !DIEnumerator(name: "PROP_REGISTER", value: 16, isUnsigned: true)
!3489 = !DIEnumerator(name: "PROP_REGISTER_OPTIONAL", value: 48, isUnsigned: true)
!3490 = !DIEnumerator(name: "PROP_PROPORTIONAL", value: 67108864, isUnsigned: true)
!3491 = !DIEnumerator(name: "PROP_ID_REFCOUNT", value: 64, isUnsigned: true)
!3492 = !DIEnumerator(name: "PROP_ID_SELF_CHECK", value: 1048576, isUnsigned: true)
!3493 = !DIEnumerator(name: "PROP_NEVER_NULL", value: 262144, isUnsigned: true)
!3494 = !DIEnumerator(name: "PROP_NEVER_UNLINK", value: 33554432, isUnsigned: true)
!3495 = !DIEnumerator(name: "PROP_ENUM_FLAG", value: 2097152, isUnsigned: true)
!3496 = !DIEnumerator(name: "PROP_CONTEXT_UPDATE", value: 4194304, isUnsigned: true)
!3497 = !DIEnumerator(name: "PROP_CONTEXT_PROPERTY_UPDATE", value: 138412032, isUnsigned: true)
!3498 = !DIEnumerator(name: "PROP_THICK_WRAP", value: 8388608, isUnsigned: true)
!3499 = !DIEnumerator(name: "PROP_BUILTIN", value: 128, isUnsigned: true)
!3500 = !DIEnumerator(name: "PROP_EXPORT", value: 256, isUnsigned: true)
!3501 = !DIEnumerator(name: "PROP_RUNTIME", value: 512, isUnsigned: true)
!3502 = !DIEnumerator(name: "PROP_IDPROPERTY", value: 1024, isUnsigned: true)
!3503 = !DIEnumerator(name: "PROP_RAW_ACCESS", value: 8192, isUnsigned: true)
!3504 = !DIEnumerator(name: "PROP_RAW_ARRAY", value: 16384, isUnsigned: true)
!3505 = !DIEnumerator(name: "PROP_FREE_POINTERS", value: 32768, isUnsigned: true)
!3506 = !DIEnumerator(name: "PROP_DYNAMIC", value: 131072, isUnsigned: true)
!3507 = !DIEnumerator(name: "PROP_ENUM_NO_CONTEXT", value: 16777216, isUnsigned: true)
!3508 = !DIEnumerator(name: "PROP_ENUM_NO_TRANSLATE", value: 536870912, isUnsigned: true)
!3509 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !28, line: 67, baseType: !205, size: 32, elements: !3510)
!3510 = !{!3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519}
!3511 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!3512 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!3513 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!3514 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!3515 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!3516 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!3517 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!3518 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!3519 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!3520 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ImagePaintMode", file: !155, line: 1717, baseType: !205, size: 32, elements: !3521)
!3521 = !{!3522, !3523}
!3522 = !DIEnumerator(name: "IMAGEPAINT_MODE_MATERIAL", value: 0, isUnsigned: true)
!3523 = !DIEnumerator(name: "IMAGEPAINT_MODE_IMAGE", value: 1, isUnsigned: true)
!3524 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1659, line: 76, baseType: !205, size: 32, elements: !3525)
!3525 = !{!3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566}
!3526 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!3527 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!3528 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!3529 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!3530 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!3531 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!3532 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!3533 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!3534 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!3535 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!3536 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!3537 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!3538 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!3539 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!3540 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!3541 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!3542 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!3543 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!3544 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!3545 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!3546 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!3547 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!3548 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!3549 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!3550 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!3551 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!3552 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!3553 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!3554 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!3555 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!3556 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!3557 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!3558 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!3559 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!3560 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!3561 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!3562 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!3563 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!3564 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!3565 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!3566 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!3567 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertySubType", file: !25, line: 107, baseType: !205, size: 32, elements: !3568)
!3568 = !{!3569, !3570, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597}
!3569 = !DIEnumerator(name: "PROP_NONE", value: 0, isUnsigned: true)
!3570 = !DIEnumerator(name: "PROP_FILEPATH", value: 1, isUnsigned: true)
!3571 = !DIEnumerator(name: "PROP_DIRPATH", value: 2, isUnsigned: true)
!3572 = !DIEnumerator(name: "PROP_FILENAME", value: 3, isUnsigned: true)
!3573 = !DIEnumerator(name: "PROP_BYTESTRING", value: 4, isUnsigned: true)
!3574 = !DIEnumerator(name: "PROP_PASSWORD", value: 6, isUnsigned: true)
!3575 = !DIEnumerator(name: "PROP_PIXEL", value: 12, isUnsigned: true)
!3576 = !DIEnumerator(name: "PROP_UNSIGNED", value: 13, isUnsigned: true)
!3577 = !DIEnumerator(name: "PROP_PERCENTAGE", value: 14, isUnsigned: true)
!3578 = !DIEnumerator(name: "PROP_FACTOR", value: 15, isUnsigned: true)
!3579 = !DIEnumerator(name: "PROP_ANGLE", value: 327696, isUnsigned: true)
!3580 = !DIEnumerator(name: "PROP_TIME", value: 393233, isUnsigned: true)
!3581 = !DIEnumerator(name: "PROP_DISTANCE", value: 65554, isUnsigned: true)
!3582 = !DIEnumerator(name: "PROP_DISTANCE_CAMERA", value: 589843, isUnsigned: true)
!3583 = !DIEnumerator(name: "PROP_COLOR", value: 20, isUnsigned: true)
!3584 = !DIEnumerator(name: "PROP_TRANSLATION", value: 65557, isUnsigned: true)
!3585 = !DIEnumerator(name: "PROP_DIRECTION", value: 22, isUnsigned: true)
!3586 = !DIEnumerator(name: "PROP_VELOCITY", value: 458775, isUnsigned: true)
!3587 = !DIEnumerator(name: "PROP_ACCELERATION", value: 524312, isUnsigned: true)
!3588 = !DIEnumerator(name: "PROP_MATRIX", value: 25, isUnsigned: true)
!3589 = !DIEnumerator(name: "PROP_EULER", value: 327706, isUnsigned: true)
!3590 = !DIEnumerator(name: "PROP_QUATERNION", value: 27, isUnsigned: true)
!3591 = !DIEnumerator(name: "PROP_AXISANGLE", value: 28, isUnsigned: true)
!3592 = !DIEnumerator(name: "PROP_XYZ", value: 29, isUnsigned: true)
!3593 = !DIEnumerator(name: "PROP_XYZ_LENGTH", value: 65565, isUnsigned: true)
!3594 = !DIEnumerator(name: "PROP_COLOR_GAMMA", value: 30, isUnsigned: true)
!3595 = !DIEnumerator(name: "PROP_COORDS", value: 31, isUnsigned: true)
!3596 = !DIEnumerator(name: "PROP_LAYER", value: 40, isUnsigned: true)
!3597 = !DIEnumerator(name: "PROP_LAYER_MEMBER", value: 41, isUnsigned: true)
!3598 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3599, line: 121, baseType: !205, size: 32, elements: !3600)
!3599 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3600 = !{!3601, !3602, !3603}
!3601 = !DIEnumerator(name: "IMA_GENTYPE_BLANK", value: 0, isUnsigned: true)
!3602 = !DIEnumerator(name: "IMA_GENTYPE_GRID", value: 1, isUnsigned: true)
!3603 = !DIEnumerator(name: "IMA_GENTYPE_GRID_COLOR", value: 2, isUnsigned: true)
!3604 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BrushFlags", file: !2592, line: 187, baseType: !22, size: 32, elements: !3605)
!3605 = !{!3606, !3607, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3624, !3625, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636}
!3606 = !DIEnumerator(name: "BRUSH_AIRBRUSH", value: 1)
!3607 = !DIEnumerator(name: "BRUSH_TORUS", value: 2)
!3608 = !DIEnumerator(name: "BRUSH_ALPHA_PRESSURE", value: 4)
!3609 = !DIEnumerator(name: "BRUSH_SIZE_PRESSURE", value: 8)
!3610 = !DIEnumerator(name: "BRUSH_JITTER_PRESSURE", value: 16)
!3611 = !DIEnumerator(name: "BRUSH_SPACING_PRESSURE", value: 32)
!3612 = !DIEnumerator(name: "BRUSH_UNUSED", value: 64)
!3613 = !DIEnumerator(name: "BRUSH_RAKE", value: 128)
!3614 = !DIEnumerator(name: "BRUSH_ANCHORED", value: 256)
!3615 = !DIEnumerator(name: "BRUSH_DIR_IN", value: 512)
!3616 = !DIEnumerator(name: "BRUSH_SPACE", value: 1024)
!3617 = !DIEnumerator(name: "BRUSH_SMOOTH_STROKE", value: 2048)
!3618 = !DIEnumerator(name: "BRUSH_PERSISTENT", value: 4096)
!3619 = !DIEnumerator(name: "BRUSH_ACCUMULATE", value: 8192)
!3620 = !DIEnumerator(name: "BRUSH_LOCK_ALPHA", value: 16384)
!3621 = !DIEnumerator(name: "BRUSH_ORIGINAL_NORMAL", value: 32768)
!3622 = !DIEnumerator(name: "BRUSH_OFFSET_PRESSURE", value: 65536)
!3623 = !DIEnumerator(name: "BRUSH_SPACE_ATTEN", value: 262144)
!3624 = !DIEnumerator(name: "BRUSH_ADAPTIVE_SPACE", value: 524288)
!3625 = !DIEnumerator(name: "BRUSH_LOCK_SIZE", value: 1048576)
!3626 = !DIEnumerator(name: "BRUSH_USE_GRADIENT", value: 2097152)
!3627 = !DIEnumerator(name: "BRUSH_EDGE_TO_EDGE", value: 4194304)
!3628 = !DIEnumerator(name: "BRUSH_DRAG_DOT", value: 8388608)
!3629 = !DIEnumerator(name: "BRUSH_INVERSE_SMOOTH_PRESSURE", value: 16777216)
!3630 = !DIEnumerator(name: "BRUSH_RANDOM_ROTATION", value: 33554432)
!3631 = !DIEnumerator(name: "BRUSH_PLANE_TRIM", value: 67108864)
!3632 = !DIEnumerator(name: "BRUSH_FRONTFACE", value: 134217728)
!3633 = !DIEnumerator(name: "BRUSH_CUSTOM_ICON", value: 268435456)
!3634 = !DIEnumerator(name: "BRUSH_LINE", value: 536870912)
!3635 = !DIEnumerator(name: "BRUSH_ABSOLUTE_JITTER", value: 1073741824)
!3636 = !DIEnumerator(name: "BRUSH_CURVE", value: -2147483648)
!3637 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !180, line: 341, baseType: !205, size: 32, elements: !3638)
!3638 = !{!3639, !3640}
!3639 = !DIEnumerator(name: "ME_SMOOTH", value: 1, isUnsigned: true)
!3640 = !DIEnumerator(name: "ME_FACE_SEL", value: 2, isUnsigned: true)
!3641 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !165, line: 339, baseType: !205, size: 32, elements: !3642)
!3642 = !{!3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653}
!3643 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!3644 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!3645 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!3646 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!3647 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!3648 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!3649 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!3650 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!3651 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!3652 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!3653 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!3654 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !28, line: 351, baseType: !205, size: 32, elements: !3655)
!3655 = !{!3656, !3657, !3658, !3659, !3660, !3661}
!3656 = !DIEnumerator(name: "OPERATOR_RUNNING_MODAL", value: 1, isUnsigned: true)
!3657 = !DIEnumerator(name: "OPERATOR_CANCELLED", value: 2, isUnsigned: true)
!3658 = !DIEnumerator(name: "OPERATOR_FINISHED", value: 4, isUnsigned: true)
!3659 = !DIEnumerator(name: "OPERATOR_PASS_THROUGH", value: 8, isUnsigned: true)
!3660 = !DIEnumerator(name: "OPERATOR_HANDLED", value: 16, isUnsigned: true)
!3661 = !DIEnumerator(name: "OPERATOR_INTERFACE", value: 32, isUnsigned: true)
!3662 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3663, line: 39, baseType: !205, size: 32, elements: !3664)
!3663 = !DIFile(filename: "blender/source/blender/editors/include/ED_paint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3664 = !{!3665, !3666}
!3665 = !DIEnumerator(name: "UNDO_PAINT_IMAGE", value: 0, isUnsigned: true)
!3666 = !DIEnumerator(name: "UNDO_PAINT_MESH", value: 1, isUnsigned: true)
!3667 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3668, line: 72, baseType: !205, size: 32, elements: !3669)
!3668 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_material.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3669 = !{!3670, !3671, !3672}
!3670 = !DIEnumerator(name: "BKE_MAT_ASSIGN_USERPREF", value: 0, isUnsigned: true)
!3671 = !DIEnumerator(name: "BKE_MAT_ASSIGN_OBDATA", value: 1, isUnsigned: true)
!3672 = !DIEnumerator(name: "BKE_MAT_ASSIGN_OBJECT", value: 2, isUnsigned: true)
!3673 = !{!22, !56, !3674, !3887, !3896, !184, !3973, !3983, !1605, !4011, !4017, !2003, !216, !1024, !251, !14, !913, !3852, !233, !4020, !3873, !3906, !3910, !3913}
!3674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3675, size: 64)
!3675 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProjPaintState", file: !3, line: 308, baseType: !3676)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ProjPaintState", file: !3, line: 198, size: 4288, elements: !3677)
!3677 = !{!3678, !3761, !3824, !3827, !3830, !3831, !3832, !3833, !3836, !3837, !3838, !3839, !3840, !3841, !3844, !3845, !3846, !3847, !3848, !3851, !3854, !3858, !3859, !3860, !3863, !3864, !3865, !3866, !3872, !3876, !3877, !3878, !3879, !3880, !3882, !3883, !3884, !3885, !3886, !3915, !3916, !3917, !3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3929, !3930, !3931, !3932, !3933, !3934, !3935, !3936, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3948, !3949, !3950, !3951, !3952, !3953, !3954, !3955, !3956, !3965}
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "v3d", scope: !3676, file: !3, line: 199, baseType: !3679, size: 64)
!3679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3680, size: 64)
!3680 = !DIDerivedType(tag: DW_TAG_typedef, name: "View3D", file: !3681, line: 221, baseType: !3682)
!3681 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view3d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View3D", file: !3681, line: 151, size: 3008, elements: !3683)
!3683 = !{!3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3726, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760}
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3682, file: !3681, line: 152, baseType: !925, size: 64)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3682, file: !3681, line: 152, baseType: !925, size: 64, offset: 64)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3682, file: !3681, line: 153, baseType: !58, size: 128, offset: 128)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3682, file: !3681, line: 154, baseType: !22, size: 32, offset: 256)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !3682, file: !3681, line: 155, baseType: !184, size: 32, offset: 288)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !3682, file: !3681, line: 156, baseType: !931, size: 128, offset: 320)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !3682, file: !3681, line: 158, baseType: !496, size: 128, offset: 448)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !3682, file: !3681, line: 159, baseType: !184, size: 32, offset: 576)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_size", scope: !3682, file: !3681, line: 161, baseType: !184, size: 32, offset: 608)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_drawtype", scope: !3682, file: !3681, line: 162, baseType: !14, size: 8, offset: 640)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3682, file: !3681, line: 163, baseType: !2567, size: 24, offset: 648)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "lay_prev", scope: !3682, file: !3681, line: 165, baseType: !205, size: 32, offset: 672)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "lay_used", scope: !3682, file: !3681, line: 166, baseType: !205, size: 32, offset: 704)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !3682, file: !3681, line: 168, baseType: !48, size: 16, offset: 736)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !3682, file: !3681, line: 169, baseType: !48, size: 16, offset: 752)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !3682, file: !3681, line: 171, baseType: !163, size: 64, offset: 768)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre", scope: !3682, file: !3681, line: 171, baseType: !163, size: 64, offset: 832)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "render_border", scope: !3682, file: !3681, line: 172, baseType: !840, size: 128, offset: 896)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "bgpicbase", scope: !3682, file: !3681, line: 174, baseType: !60, size: 128, offset: 1024)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "bgpic", scope: !3682, file: !3681, line: 175, baseType: !3704, size: 64, offset: 1152)
!3704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3705, size: 64)
!3705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BGpic", file: !3681, line: 70, size: 832, elements: !3706)
!3706 = !{!3707, !3708, !3709, !3710, !3711, !3712, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725}
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3705, file: !3681, line: 71, baseType: !3704, size: 64)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3705, file: !3681, line: 71, baseType: !3704, size: 64, offset: 64)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !3705, file: !3681, line: 73, baseType: !1245, size: 64, offset: 128)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !3705, file: !3681, line: 74, baseType: !604, size: 320, offset: 192)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !3705, file: !3681, line: 75, baseType: !2338, size: 64, offset: 512)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "cuser", scope: !3705, file: !3681, line: 76, baseType: !3713, size: 64, offset: 576)
!3713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipUser", file: !2340, line: 50, size: 64, elements: !3714)
!3714 = !{!3715, !3716, !3717}
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !3713, file: !2340, line: 51, baseType: !22, size: 32)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "render_size", scope: !3713, file: !2340, line: 52, baseType: !48, size: 16, offset: 32)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "render_flag", scope: !3713, file: !2340, line: 52, baseType: !48, size: 16, offset: 48)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !3705, file: !3681, line: 77, baseType: !184, size: 32, offset: 640)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !3705, file: !3681, line: 77, baseType: !184, size: 32, offset: 672)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3705, file: !3681, line: 77, baseType: !184, size: 32, offset: 704)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !3705, file: !3681, line: 77, baseType: !184, size: 32, offset: 736)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !3705, file: !3681, line: 78, baseType: !48, size: 16, offset: 768)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3705, file: !3681, line: 79, baseType: !48, size: 16, offset: 784)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !3705, file: !3681, line: 80, baseType: !48, size: 16, offset: 800)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3705, file: !3681, line: 80, baseType: !48, size: 16, offset: 816)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !3682, file: !3681, line: 177, baseType: !3727, size: 64, offset: 1216)
!3727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 64)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_bone", scope: !3682, file: !3681, line: 179, baseType: !33, size: 512, offset: 1280)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3682, file: !3681, line: 181, baseType: !205, size: 32, offset: 1792)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !3682, file: !3681, line: 182, baseType: !22, size: 32, offset: 1824)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !3682, file: !3681, line: 187, baseType: !48, size: 16, offset: 1856)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_cursor", scope: !3682, file: !3681, line: 188, baseType: !48, size: 16, offset: 1872)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "scenelock", scope: !3682, file: !3681, line: 189, baseType: !48, size: 16, offset: 1888)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !3682, file: !3681, line: 189, baseType: !48, size: 16, offset: 1904)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3682, file: !3681, line: 190, baseType: !48, size: 16, offset: 1920)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !3682, file: !3681, line: 190, baseType: !48, size: 16, offset: 1936)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !3682, file: !3681, line: 192, baseType: !184, size: 32, offset: 1952)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !3682, file: !3681, line: 192, baseType: !184, size: 32, offset: 1984)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "near", scope: !3682, file: !3681, line: 193, baseType: !184, size: 32, offset: 2016)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "far", scope: !3682, file: !3681, line: 193, baseType: !184, size: 32, offset: 2048)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !3682, file: !3681, line: 194, baseType: !183, size: 96, offset: 2080)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !3682, file: !3681, line: 195, baseType: !183, size: 96, offset: 2176)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "matcap_icon", scope: !3682, file: !3681, line: 197, baseType: !48, size: 16, offset: 2272)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "gridlines", scope: !3682, file: !3681, line: 199, baseType: !48, size: 16, offset: 2288)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "gridsubdiv", scope: !3682, file: !3681, line: 200, baseType: !48, size: 16, offset: 2304)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "gridflag", scope: !3682, file: !3681, line: 201, baseType: !14, size: 8, offset: 2320)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "twtype", scope: !3682, file: !3681, line: 204, baseType: !14, size: 8, offset: 2328)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "twmode", scope: !3682, file: !3681, line: 204, baseType: !14, size: 8, offset: 2336)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "twflag", scope: !3682, file: !3681, line: 204, baseType: !14, size: 8, offset: 2344)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3682, file: !3681, line: 204, baseType: !2890, size: 16, offset: 2352)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_transp", scope: !3682, file: !3681, line: 207, baseType: !60, size: 128, offset: 2368)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xray", scope: !3682, file: !3681, line: 208, baseType: !60, size: 128, offset: 2496)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xraytransp", scope: !3682, file: !3681, line: 209, baseType: !60, size: 128, offset: 2624)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !3682, file: !3681, line: 212, baseType: !14, size: 8, offset: 2752)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !3682, file: !3681, line: 212, baseType: !14, size: 8, offset: 2760)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "xray", scope: !3682, file: !3681, line: 212, baseType: !14, size: 8, offset: 2768)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !3682, file: !3681, line: 213, baseType: !2758, size: 40, offset: 2776)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "properties_storage", scope: !3682, file: !3681, line: 215, baseType: !56, size: 64, offset: 2816)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "defmaterial", scope: !3682, file: !3681, line: 216, baseType: !378, size: 64, offset: 2880)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !3682, file: !3681, line: 219, baseType: !351, size: 64, offset: 2944)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "rv3d", scope: !3676, file: !3, line: 200, baseType: !3762, size: 64, offset: 64)
!3762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3763, size: 64)
!3763 = !DIDerivedType(tag: DW_TAG_typedef, name: "RegionView3D", file: !3681, line: 148, baseType: !3764)
!3764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RegionView3D", file: !3681, line: 85, size: 7040, elements: !3765)
!3765 = !{!3766, !3767, !3768, !3769, !3770, !3771, !3772, !3773, !3776, !3777, !3778, !3780, !3783, !3795, !3796, !3799, !3800, !3801, !3802, !3803, !3804, !3805, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3822, !3823}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !3764, file: !3681, line: 87, baseType: !1335, size: 512)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !3764, file: !3681, line: 88, baseType: !1335, size: 512, offset: 512)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !3764, file: !3681, line: 89, baseType: !1335, size: 512, offset: 1024)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !3764, file: !3681, line: 90, baseType: !1335, size: 512, offset: 1536)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "persinv", scope: !3764, file: !3681, line: 91, baseType: !1335, size: 512, offset: 2048)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "viewmatob", scope: !3764, file: !3681, line: 94, baseType: !1335, size: 512, offset: 2560)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "persmatob", scope: !3764, file: !3681, line: 95, baseType: !1335, size: 512, offset: 3072)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !3764, file: !3681, line: 99, baseType: !3774, size: 768, offset: 3584)
!3774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 768, elements: !3775)
!3775 = !{!1333, !498}
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "clip_local", scope: !3764, file: !3681, line: 100, baseType: !3774, size: 768, offset: 4352)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "clipbb", scope: !3764, file: !3681, line: 101, baseType: !283, size: 64, offset: 5120)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !3764, file: !3681, line: 103, baseType: !3779, size: 64, offset: 5184)
!3779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 64)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "render_engine", scope: !3764, file: !3681, line: 104, baseType: !3781, size: 64, offset: 5248)
!3781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3782, size: 64)
!3782 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !3681, line: 44, flags: DIFlagFwdDecl)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !3764, file: !3681, line: 105, baseType: !3784, size: 64, offset: 5312)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ViewDepths", file: !3786, line: 77, size: 320, elements: !3787)
!3786 = !DIFile(filename: "blender/source/blender/editors/include/ED_view3d.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3787 = !{!3788, !3789, !3790, !3791, !3792, !3793, !3794}
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !3785, file: !3786, line: 78, baseType: !1605, size: 16)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !3785, file: !3786, line: 78, baseType: !1605, size: 16, offset: 16)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3785, file: !3786, line: 79, baseType: !48, size: 16, offset: 32)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3785, file: !3786, line: 79, baseType: !48, size: 16, offset: 48)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !3785, file: !3786, line: 80, baseType: !216, size: 64, offset: 64)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "depth_range", scope: !3785, file: !3786, line: 81, baseType: !993, size: 128, offset: 128)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "damaged", scope: !3785, file: !3786, line: 83, baseType: !233, size: 8, offset: 256)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "gpuoffscreen", scope: !3764, file: !3681, line: 106, baseType: !56, size: 64, offset: 5376)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !3764, file: !3681, line: 109, baseType: !3797, size: 64, offset: 5440)
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3798, size: 64)
!3798 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView3DStore", file: !3681, line: 46, flags: DIFlagFwdDecl)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !3764, file: !3681, line: 110, baseType: !95, size: 64, offset: 5504)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "twmat", scope: !3764, file: !3681, line: 114, baseType: !1335, size: 512, offset: 5568)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !3764, file: !3681, line: 116, baseType: !496, size: 128, offset: 6080)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !3764, file: !3681, line: 117, baseType: !184, size: 32, offset: 6208)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "camdx", scope: !3764, file: !3681, line: 118, baseType: !184, size: 32, offset: 6240)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "camdy", scope: !3764, file: !3681, line: 118, baseType: !184, size: 32, offset: 6272)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !3764, file: !3681, line: 119, baseType: !184, size: 32, offset: 6304)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !3764, file: !3681, line: 120, baseType: !183, size: 96, offset: 6336)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "camzoom", scope: !3764, file: !3681, line: 122, baseType: !184, size: 32, offset: 6432)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "is_persp", scope: !3764, file: !3681, line: 123, baseType: !14, size: 8, offset: 6464)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !3764, file: !3681, line: 125, baseType: !14, size: 8, offset: 6472)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !3764, file: !3681, line: 126, baseType: !14, size: 8, offset: 6480)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock", scope: !3764, file: !3681, line: 127, baseType: !14, size: 8, offset: 6488)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock_quad", scope: !3764, file: !3681, line: 128, baseType: !14, size: 8, offset: 6496)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3764, file: !3681, line: 129, baseType: !2567, size: 24, offset: 6504)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "ofs_lock", scope: !3764, file: !3681, line: 130, baseType: !860, size: 64, offset: 6528)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "twdrawflag", scope: !3764, file: !3681, line: 132, baseType: !48, size: 16, offset: 6592)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !3764, file: !3681, line: 133, baseType: !48, size: 16, offset: 6608)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "lviewquat", scope: !3764, file: !3681, line: 137, baseType: !496, size: 128, offset: 6624)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "lpersp", scope: !3764, file: !3681, line: 138, baseType: !48, size: 16, offset: 6752)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "lview", scope: !3764, file: !3681, line: 138, baseType: !48, size: 16, offset: 6768)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "gridview", scope: !3764, file: !3681, line: 140, baseType: !184, size: 32, offset: 6784)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "tw_idot", scope: !3764, file: !3681, line: 141, baseType: !183, size: 96, offset: 6816)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "rot_angle", scope: !3764, file: !3681, line: 145, baseType: !184, size: 32, offset: 6912)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "rot_axis", scope: !3764, file: !3681, line: 146, baseType: !183, size: 96, offset: 6944)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "ar", scope: !3676, file: !3, line: 201, baseType: !3825, size: 64, offset: 128)
!3825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3826, size: 64)
!3826 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !110, line: 267, baseType: !830)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3676, file: !3, line: 202, baseType: !3828, size: 64, offset: 192)
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 64)
!3829 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !155, line: 1299, baseType: !154)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !3676, file: !3, line: 203, baseType: !22, size: 32, offset: 256)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "paint_color", scope: !3676, file: !3, line: 206, baseType: !183, size: 96, offset: 288)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "paint_color_linear", scope: !3676, file: !3, line: 207, baseType: !183, size: 96, offset: 384)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !3676, file: !3, line: 209, baseType: !3834, size: 64, offset: 512)
!3834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3835, size: 64)
!3835 = !DIDerivedType(tag: DW_TAG_typedef, name: "Brush", file: !2592, line: 138, baseType: !2591)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "tool", scope: !3676, file: !3, line: 210, baseType: !48, size: 16, offset: 576)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !3676, file: !3, line: 210, baseType: !48, size: 16, offset: 592)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3676, file: !3, line: 210, baseType: !48, size: 16, offset: 608)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "orig_brush_size", scope: !3676, file: !3, line: 211, baseType: !22, size: 32, offset: 640)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "brush_size", scope: !3676, file: !3, line: 212, baseType: !184, size: 32, offset: 672)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3676, file: !3, line: 213, baseType: !3842, size: 64, offset: 704)
!3842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3843, size: 64)
!3843 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !165, line: 295, baseType: !164)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !3676, file: !3, line: 216, baseType: !1772, size: 64, offset: 768)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "dm_totface", scope: !3676, file: !3, line: 217, baseType: !22, size: 32, offset: 832)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "dm_totvert", scope: !3676, file: !3, line: 218, baseType: !22, size: 32, offset: 864)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "dm_release", scope: !3676, file: !3, line: 219, baseType: !22, size: 32, offset: 896)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "dm_mvert", scope: !3676, file: !3, line: 221, baseType: !3849, size: 64, offset: 960)
!3849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3850, size: 64)
!3850 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !180, line: 69, baseType: !179)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "dm_mface", scope: !3676, file: !3, line: 222, baseType: !3852, size: 64, offset: 1024)
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 64)
!3853 = !DIDerivedType(tag: DW_TAG_typedef, name: "MFace", file: !180, line: 46, baseType: !1809)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "dm_mtface", scope: !3676, file: !3, line: 223, baseType: !3855, size: 64, offset: 1088)
!3855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3856, size: 64)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3857, size: 64)
!3857 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTFace", file: !180, line: 165, baseType: !2024)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "dm_mtface_clone", scope: !3676, file: !3, line: 224, baseType: !3855, size: 64, offset: 1152)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "dm_mtface_stencil", scope: !3676, file: !3, line: 225, baseType: !3856, size: 64, offset: 1216)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_ima", scope: !3676, file: !3, line: 227, baseType: !3861, size: 64, offset: 1280)
!3861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3862, size: 64)
!3862 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !605, line: 127, baseType: !1246)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "canvas_ima", scope: !3676, file: !3, line: 228, baseType: !3861, size: 64, offset: 1344)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "clone_ima", scope: !3676, file: !3, line: 229, baseType: !3861, size: 64, offset: 1408)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_value", scope: !3676, file: !3, line: 230, baseType: !184, size: 32, offset: 1472)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "arena_mt", scope: !3676, file: !3, line: 233, baseType: !3867, size: 64, offset: 1536)
!3867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3868, size: 64, elements: !514)
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 64)
!3869 = !DIDerivedType(tag: DW_TAG_typedef, name: "MemArena", file: !3870, line: 53, baseType: !3871)
!3870 = !DIFile(filename: "blender/source/blender/blenlib/BLI_memarena.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3871 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !1687, line: 38, flags: DIFlagFwdDecl)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "bucketRect", scope: !3676, file: !3, line: 234, baseType: !3873, size: 64, offset: 1600)
!3873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3874, size: 64)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3875, size: 64)
!3875 = !DIDerivedType(tag: DW_TAG_typedef, name: "LinkNode", file: !1687, line: 48, baseType: !1709)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "bucketFaces", scope: !3676, file: !3, line: 235, baseType: !3873, size: 64, offset: 1664)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "bucketFlags", scope: !3676, file: !3, line: 236, baseType: !1024, size: 64, offset: 1728)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "faceSeamFlags", scope: !3676, file: !3, line: 238, baseType: !913, size: 64, offset: 1792)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "faceWindingFlags", scope: !3676, file: !3, line: 239, baseType: !913, size: 64, offset: 1856)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "faceSeamUVs", scope: !3676, file: !3, line: 240, baseType: !3881, size: 64, offset: 1920)
!3881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "vertFaces", scope: !3676, file: !3, line: 241, baseType: !3873, size: 64, offset: 1984)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "vertFlags", scope: !3676, file: !3, line: 243, baseType: !913, size: 64, offset: 2048)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "buckets_x", scope: !3676, file: !3, line: 244, baseType: !22, size: 32, offset: 2112)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "buckets_y", scope: !3676, file: !3, line: 245, baseType: !22, size: 32, offset: 2144)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "projImages", scope: !3676, file: !3, line: 247, baseType: !3887, size: 64, offset: 2176)
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3888, size: 64)
!3888 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProjPaintImage", file: !3, line: 195, baseType: !3889)
!3889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ProjPaintImage", file: !3, line: 186, size: 448, elements: !3890)
!3890 = !{!3891, !3892, !3895, !3905, !3909, !3912, !3914}
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !3889, file: !3, line: 187, baseType: !3861, size: 64)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "ibuf", scope: !3889, file: !3, line: 188, baseType: !3893, size: 64, offset: 64)
!3893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3894, size: 64)
!3894 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImBuf", file: !980, line: 141, baseType: !979)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "partRedrawRect", scope: !3889, file: !3, line: 189, baseType: !3896, size: 64, offset: 128)
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3897, size: 64)
!3897 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImagePaintPartialRedraw", file: !3471, line: 151, baseType: !3898)
!3898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintPartialRedraw", file: !3471, line: 148, size: 160, elements: !3899)
!3899 = !{!3900, !3901, !3902, !3903, !3904}
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "x1", scope: !3898, file: !3471, line: 149, baseType: !22, size: 32)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "y1", scope: !3898, file: !3471, line: 149, baseType: !22, size: 32, offset: 32)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "x2", scope: !3898, file: !3471, line: 149, baseType: !22, size: 32, offset: 64)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "y2", scope: !3898, file: !3471, line: 149, baseType: !22, size: 32, offset: 96)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !3898, file: !3471, line: 150, baseType: !22, size: 32, offset: 128)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "undoRect", scope: !3889, file: !3, line: 190, baseType: !3906, size: 64, offset: 192)
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3907, size: 64)
!3907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3908, size: 64)
!3908 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "maskRect", scope: !3889, file: !3, line: 191, baseType: !3910, size: 64, offset: 256)
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 64)
!3911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !3889, file: !3, line: 193, baseType: !3913, size: 64, offset: 320)
!3913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "touch", scope: !3889, file: !3, line: 194, baseType: !22, size: 32, offset: 384)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_sizeof", scope: !3676, file: !3, line: 249, baseType: !22, size: 32, offset: 2240)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "image_tot", scope: !3676, file: !3, line: 251, baseType: !22, size: 32, offset: 2272)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "screenCoords", scope: !3676, file: !3, line: 253, baseType: !2003, size: 64, offset: 2304)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "screenMin", scope: !3676, file: !3, line: 255, baseType: !860, size: 64, offset: 2368)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "screenMax", scope: !3676, file: !3, line: 256, baseType: !860, size: 64, offset: 2432)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "screen_width", scope: !3676, file: !3, line: 257, baseType: !184, size: 32, offset: 2496)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "screen_height", scope: !3676, file: !3, line: 258, baseType: !184, size: 32, offset: 2528)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3676, file: !3, line: 259, baseType: !22, size: 32, offset: 2560)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3676, file: !3, line: 259, baseType: !22, size: 32, offset: 2592)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "do_layer_clone", scope: !3676, file: !3, line: 262, baseType: !233, size: 8, offset: 2624)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "do_layer_stencil", scope: !3676, file: !3, line: 263, baseType: !233, size: 8, offset: 2632)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "do_layer_stencil_inv", scope: !3676, file: !3, line: 264, baseType: !233, size: 8, offset: 2640)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "do_stencil_brush", scope: !3676, file: !3, line: 265, baseType: !233, size: 8, offset: 2648)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "do_material_slots", scope: !3676, file: !3, line: 266, baseType: !233, size: 8, offset: 2656)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "do_occlude", scope: !3676, file: !3, line: 268, baseType: !233, size: 8, offset: 2664)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "do_backfacecull", scope: !3676, file: !3, line: 269, baseType: !233, size: 8, offset: 2672)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "do_mask_normal", scope: !3676, file: !3, line: 270, baseType: !233, size: 8, offset: 2680)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "do_new_shading_nodes", scope: !3676, file: !3, line: 271, baseType: !233, size: 8, offset: 2688)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !3676, file: !3, line: 272, baseType: !184, size: 32, offset: 2720)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle_inner", scope: !3676, file: !3, line: 273, baseType: !184, size: 32, offset: 2752)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle_range", scope: !3676, file: !3, line: 274, baseType: !184, size: 32, offset: 2784)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "do_face_sel", scope: !3676, file: !3, line: 276, baseType: !233, size: 8, offset: 2816)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "is_ortho", scope: !3676, file: !3, line: 277, baseType: !233, size: 8, offset: 2824)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "do_masking", scope: !3676, file: !3, line: 278, baseType: !233, size: 8, offset: 2832)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "is_texbrush", scope: !3676, file: !3, line: 279, baseType: !233, size: 8, offset: 2840)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "is_maskbrush", scope: !3676, file: !3, line: 280, baseType: !233, size: 8, offset: 2848)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed_px", scope: !3676, file: !3, line: 282, baseType: !184, size: 32, offset: 2880)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "cloneOffset", scope: !3676, file: !3, line: 285, baseType: !860, size: 64, offset: 2912)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "projectMat", scope: !3676, file: !3, line: 287, baseType: !1335, size: 512, offset: 2976)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "viewDir", scope: !3676, file: !3, line: 288, baseType: !183, size: 96, offset: 3488)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "viewPos", scope: !3676, file: !3, line: 289, baseType: !183, size: 96, offset: 3584)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !3676, file: !3, line: 290, baseType: !184, size: 32, offset: 3680)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !3676, file: !3, line: 290, baseType: !184, size: 32, offset: 3712)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "reproject_image", scope: !3676, file: !3, line: 293, baseType: !3861, size: 64, offset: 3776)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "reproject_ibuf", scope: !3676, file: !3, line: 294, baseType: !3893, size: 64, offset: 3840)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "thread_tot", scope: !3676, file: !3, line: 297, baseType: !22, size: 32, offset: 3904)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "bucketMin", scope: !3676, file: !3, line: 298, baseType: !2348, size: 64, offset: 3936)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "bucketMax", scope: !3676, file: !3, line: 299, baseType: !2348, size: 64, offset: 4000)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "context_bucket_x", scope: !3676, file: !3, line: 300, baseType: !22, size: 32, offset: 4064)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "context_bucket_y", scope: !3676, file: !3, line: 300, baseType: !22, size: 32, offset: 4096)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "need_redraw", scope: !3676, file: !3, line: 303, baseType: !233, size: 8, offset: 4128)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "blurkernel", scope: !3676, file: !3, line: 305, baseType: !3957, size: 64, offset: 4160)
!3957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3958, size: 64)
!3958 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlurKernel", file: !3471, line: 300, baseType: !3959)
!3959 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3471, line: 295, size: 192, elements: !3960)
!3960 = !{!3961, !3962, !3963, !3964}
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "wdata", scope: !3959, file: !3471, line: 296, baseType: !216, size: 64)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "side", scope: !3959, file: !3471, line: 297, baseType: !22, size: 32, offset: 64)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "side_squared", scope: !3959, file: !3471, line: 298, baseType: !22, size: 32, offset: 96)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_len", scope: !3959, file: !3471, line: 299, baseType: !22, size: 32, offset: 128)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "tile_lock", scope: !3676, file: !3, line: 307, baseType: !3966, size: 64, offset: 4224)
!3966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3967, size: 64)
!3967 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpinLock", file: !3968, line: 127, baseType: !3969)
!3968 = !DIFile(filename: "blender/source/blender/blenlib/BLI_threads.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3969 = !DIDerivedType(tag: DW_TAG_typedef, name: "spec_null_spinlock_t", file: !3970, line: 9, baseType: !3971)
!3970 = !DIFile(filename: "include/spec_pthread.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3971 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !2093, line: 26, baseType: !3972)
!3972 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !2095, line: 42, baseType: !205)
!3973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3974, size: 64)
!3974 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProjectHandle", file: !3, line: 3724, baseType: !3975)
!3975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ProjectHandle", file: !3, line: 3711, size: 384, elements: !3976)
!3976 = !{!3977, !3978, !3979, !3980, !3981, !3982}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !3975, file: !3, line: 3713, baseType: !3674, size: 64)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "prevmval", scope: !3975, file: !3, line: 3714, baseType: !860, size: 64, offset: 64)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !3975, file: !3, line: 3715, baseType: !860, size: 64, offset: 128)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "projImages", scope: !3975, file: !3, line: 3718, baseType: !3887, size: 64, offset: 192)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "thread_index", scope: !3975, file: !3, line: 3721, baseType: !22, size: 32, offset: 256)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3975, file: !3, line: 3723, baseType: !254, size: 64, offset: 320)
!3983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3984, size: 64)
!3984 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProjPixel", file: !3, line: 344, baseType: !3985)
!3985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ProjPixel", file: !3, line: 322, size: 704, elements: !3986)
!3986 = !{!3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994, !4001, !4008, !4009, !4010}
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "projCoSS", scope: !3985, file: !3, line: 323, baseType: !860, size: 64)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "worldCoSS", scope: !3985, file: !3, line: 324, baseType: !183, size: 96, offset: 64)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "mask_accum", scope: !3985, file: !3, line: 329, baseType: !3911, size: 64, offset: 192)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3985, file: !3, line: 332, baseType: !1605, size: 16, offset: 256)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "x_px", scope: !3985, file: !3, line: 334, baseType: !48, size: 16, offset: 272)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "y_px", scope: !3985, file: !3, line: 334, baseType: !48, size: 16, offset: 288)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !3985, file: !3, line: 336, baseType: !1024, size: 64, offset: 320)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "origColor", scope: !3985, file: !3, line: 338, baseType: !3995, size: 64, offset: 384)
!3995 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelPointer", file: !3, line: 314, baseType: !3996)
!3996 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "pixelPointer", file: !3, line: 310, size: 64, elements: !3997)
!3997 = !{!3998, !3999, !4000}
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "f_pt", scope: !3996, file: !3, line: 311, baseType: !216, size: 64)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "uint_pt", scope: !3996, file: !3, line: 312, baseType: !251, size: 64)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "ch_pt", scope: !3996, file: !3, line: 313, baseType: !1024, size: 64)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "newColor", scope: !3985, file: !3, line: 339, baseType: !4002, size: 128, offset: 448)
!4002 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelStore", file: !3, line: 320, baseType: !4003)
!4003 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "pixelStore", file: !3, line: 316, size: 128, elements: !4004)
!4004 = !{!4005, !4006, !4007}
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "ch", scope: !4003, file: !3, line: 317, baseType: !2703, size: 32)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4003, file: !3, line: 318, baseType: !205, size: 32)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !4003, file: !3, line: 319, baseType: !496, size: 128)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "pixel", scope: !3985, file: !3, line: 340, baseType: !3995, size: 64, offset: 576)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "image_index", scope: !3985, file: !3, line: 342, baseType: !48, size: 16, offset: 640)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "bb_cell_index", scope: !3985, file: !3, line: 343, baseType: !233, size: 8, offset: 656)
!4011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4012, size: 64)
!4012 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProjPixelClone", file: !3, line: 349, baseType: !4013)
!4013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ProjPixelClone", file: !3, line: 346, size: 832, elements: !4014)
!4014 = !{!4015, !4016}
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "__pp", scope: !4013, file: !3, line: 347, baseType: !3985, size: 704)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "clonepx", scope: !4013, file: !3, line: 348, baseType: !4002, size: 128, offset: 704)
!4017 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !4018, line: 87, baseType: !4019)
!4018 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!4019 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!4020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4021, size: 64)
!4021 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !4022, line: 133, baseType: !4023)
!4022 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !4022, line: 58, size: 11008, elements: !4024)
!4024 = !{!4025, !4026, !4027, !4028, !4029, !4032, !4033, !4039, !4040, !4050, !4051, !4057, !4065, !4066, !4067, !4080, !4081, !4082, !4083, !4091, !4093, !4096, !4097, !4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4106, !4107, !4108, !4109, !4110, !4111, !4112, !4113, !4114, !4115, !4116, !4117, !4118, !4119, !4120, !4121, !4122, !4123}
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4023, file: !4022, line: 59, baseType: !113, size: 960)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !4023, file: !4022, line: 60, baseType: !159, size: 64, offset: 960)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !4023, file: !4022, line: 62, baseType: !283, size: 64, offset: 1024)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !4023, file: !4022, line: 64, baseType: !280, size: 64, offset: 1088)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !4023, file: !4022, line: 65, baseType: !4030, size: 64, offset: 1152)
!4030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4031, size: 64)
!4031 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !315, line: 45, flags: DIFlagFwdDecl)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !4023, file: !4022, line: 66, baseType: !377, size: 64, offset: 1216)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !4023, file: !4022, line: 67, baseType: !4034, size: 64, offset: 1280)
!4034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4035, size: 64)
!4035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !180, line: 154, size: 64, elements: !4036)
!4036 = !{!4037, !4038}
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4035, file: !180, line: 155, baseType: !22, size: 32)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4035, file: !180, line: 156, baseType: !22, size: 32, offset: 32)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !4023, file: !4022, line: 71, baseType: !192, size: 64, offset: 1344)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !4023, file: !4022, line: 72, baseType: !4041, size: 64, offset: 1408)
!4041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4042, size: 64)
!4042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !180, line: 93, size: 128, elements: !4043)
!4043 = !{!4044, !4045, !4046, !4047, !4048, !4049}
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !4042, file: !180, line: 94, baseType: !1245, size: 64)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4042, file: !180, line: 95, baseType: !14, size: 8, offset: 64)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !4042, file: !180, line: 95, baseType: !14, size: 8, offset: 72)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4042, file: !180, line: 96, baseType: !48, size: 16, offset: 80)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !4042, file: !180, line: 96, baseType: !48, size: 16, offset: 96)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4042, file: !180, line: 96, baseType: !48, size: 16, offset: 112)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !4023, file: !4022, line: 73, baseType: !201, size: 64, offset: 1472)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !4023, file: !4022, line: 74, baseType: !4052, size: 64, offset: 1536)
!4052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4053, size: 64)
!4053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !180, line: 109, size: 96, elements: !4054)
!4054 = !{!4055, !4056}
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !4053, file: !180, line: 110, baseType: !860, size: 64)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4053, file: !180, line: 111, baseType: !22, size: 32, offset: 64)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !4023, file: !4022, line: 75, baseType: !4058, size: 64, offset: 1600)
!4058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4059, size: 64)
!4059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !180, line: 129, size: 32, elements: !4060)
!4060 = !{!4061, !4062, !4063, !4064}
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !4059, file: !180, line: 130, baseType: !14, size: 8)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4059, file: !180, line: 130, baseType: !14, size: 8, offset: 8)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4059, file: !180, line: 130, baseType: !14, size: 8, offset: 16)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !4059, file: !180, line: 130, baseType: !14, size: 8, offset: 24)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !4023, file: !4022, line: 80, baseType: !1808, size: 64, offset: 1664)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !4023, file: !4022, line: 81, baseType: !2023, size: 64, offset: 1728)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !4023, file: !4022, line: 82, baseType: !4068, size: 64, offset: 1792)
!4068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4069, size: 64)
!4069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !4022, line: 136, size: 512, elements: !4070)
!4070 = !{!4071, !4072, !4073, !4075, !4076, !4077, !4078, !4079}
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !4069, file: !4022, line: 137, baseType: !56, size: 64)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !4069, file: !4022, line: 138, baseType: !2027, size: 256, offset: 64)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !4069, file: !4022, line: 139, baseType: !4074, size: 128, offset: 320)
!4074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 128, elements: !497)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4069, file: !4022, line: 140, baseType: !14, size: 8, offset: 448)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !4069, file: !4022, line: 140, baseType: !14, size: 8, offset: 456)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4069, file: !4022, line: 141, baseType: !48, size: 16, offset: 464)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !4069, file: !4022, line: 141, baseType: !48, size: 16, offset: 480)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !4069, file: !4022, line: 141, baseType: !48, size: 16, offset: 496)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !4023, file: !4022, line: 83, baseType: !178, size: 64, offset: 1856)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !4023, file: !4022, line: 84, baseType: !1796, size: 64, offset: 1920)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !4023, file: !4022, line: 85, baseType: !2712, size: 64, offset: 1984)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !4023, file: !4022, line: 89, baseType: !4084, size: 64, offset: 2048)
!4084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4085, size: 64)
!4085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !180, line: 74, size: 32, elements: !4086)
!4086 = !{!4087, !4088, !4089, !4090}
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !4085, file: !180, line: 75, baseType: !14, size: 8)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !4085, file: !180, line: 75, baseType: !14, size: 8, offset: 8)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4085, file: !180, line: 75, baseType: !14, size: 8, offset: 16)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4085, file: !180, line: 75, baseType: !14, size: 8, offset: 24)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !4023, file: !4022, line: 90, baseType: !4092, size: 64, offset: 2112)
!4092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4023, size: 64)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !4023, file: !4022, line: 93, baseType: !4094, size: 64, offset: 2176)
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4095, size: 64)
!4095 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !4022, line: 93, flags: DIFlagFwdDecl)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !4023, file: !4022, line: 95, baseType: !1660, size: 1600, offset: 2240)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !4023, file: !4022, line: 95, baseType: !1660, size: 1600, offset: 3840)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !4023, file: !4022, line: 95, baseType: !1660, size: 1600, offset: 5440)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !4023, file: !4022, line: 98, baseType: !1660, size: 1600, offset: 7040)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !4023, file: !4022, line: 98, baseType: !1660, size: 1600, offset: 8640)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !4023, file: !4022, line: 101, baseType: !22, size: 32, offset: 10240)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !4023, file: !4022, line: 101, baseType: !22, size: 32, offset: 10272)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !4023, file: !4022, line: 101, baseType: !22, size: 32, offset: 10304)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !4023, file: !4022, line: 101, baseType: !22, size: 32, offset: 10336)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !4023, file: !4022, line: 104, baseType: !22, size: 32, offset: 10368)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !4023, file: !4022, line: 104, baseType: !22, size: 32, offset: 10400)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !4023, file: !4022, line: 111, baseType: !22, size: 32, offset: 10432)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !4023, file: !4022, line: 114, baseType: !183, size: 96, offset: 10464)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4023, file: !4022, line: 115, baseType: !183, size: 96, offset: 10560)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !4023, file: !4022, line: 116, baseType: !183, size: 96, offset: 10656)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !4023, file: !4022, line: 118, baseType: !22, size: 32, offset: 10752)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !4023, file: !4022, line: 119, baseType: !48, size: 16, offset: 10784)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4023, file: !4022, line: 119, baseType: !48, size: 16, offset: 10800)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !4023, file: !4022, line: 120, baseType: !184, size: 32, offset: 10816)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !4023, file: !4022, line: 121, baseType: !22, size: 32, offset: 10848)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !4023, file: !4022, line: 124, baseType: !14, size: 8, offset: 10880)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4023, file: !4022, line: 124, baseType: !14, size: 8, offset: 10888)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !4023, file: !4022, line: 126, baseType: !14, size: 8, offset: 10896)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !4023, file: !4022, line: 126, baseType: !14, size: 8, offset: 10904)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !4023, file: !4022, line: 127, baseType: !14, size: 8, offset: 10912)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !4023, file: !4022, line: 128, baseType: !14, size: 8, offset: 10920)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !4023, file: !4022, line: 130, baseType: !48, size: 16, offset: 10928)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !4023, file: !4022, line: 132, baseType: !4124, size: 64, offset: 10944)
!4124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4125, size: 64)
!4125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !180, line: 233, size: 3584, elements: !4126)
!4126 = !{!4127, !4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4141}
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !4125, file: !180, line: 234, baseType: !58, size: 128)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !4125, file: !180, line: 235, baseType: !3849, size: 64, offset: 128)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !4125, file: !180, line: 237, baseType: !233, size: 8, offset: 192)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !4125, file: !180, line: 237, baseType: !233, size: 8, offset: 200)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !4125, file: !180, line: 237, baseType: !233, size: 8, offset: 208)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !4125, file: !180, line: 237, baseType: !233, size: 8, offset: 216)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !4125, file: !180, line: 237, baseType: !233, size: 8, offset: 224)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !4125, file: !180, line: 237, baseType: !233, size: 8, offset: 232)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !4125, file: !180, line: 238, baseType: !233, size: 8, offset: 240)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4125, file: !180, line: 238, baseType: !233, size: 8, offset: 248)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !4125, file: !180, line: 241, baseType: !1658, size: 1600, offset: 256)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !4125, file: !180, line: 242, baseType: !1658, size: 1600, offset: 1856)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !4125, file: !180, line: 243, baseType: !4140, size: 64, offset: 3456)
!4140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !4125, file: !180, line: 244, baseType: !913, size: 64, offset: 3520)
!4142 = !{!0, !4143}
!4143 = !DIGlobalVariableExpression(var: !4144, expr: !DIExpression())
!4144 = distinct !DIGlobalVariable(name: "layer_type_items", scope: !3431, file: !3, line: 4981, type: !4145, isLocal: true, isDefinition: true)
!4145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4146, size: 4800, elements: !4154)
!4146 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !25, line: 308, baseType: !4147)
!4147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !25, line: 302, size: 320, elements: !4148)
!4148 = !{!4149, !4150, !4151, !4152, !4153}
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4147, file: !25, line: 303, baseType: !22, size: 32)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !4147, file: !25, line: 304, baseType: !12, size: 64, offset: 64)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !4147, file: !25, line: 305, baseType: !22, size: 32, offset: 128)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4147, file: !25, line: 306, baseType: !12, size: 64, offset: 192)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !4147, file: !25, line: 307, baseType: !12, size: 64, offset: 256)
!4154 = !{!4155}
!4155 = !DISubrange(count: 15)
!4156 = !{}
!4157 = !{i32 7, !"Dwarf Version", i32 4}
!4158 = !{i32 2, !"Debug Info Version", i32 3}
!4159 = !{i32 1, !"wchar_size", i32 4}
!4160 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!4161 = distinct !DISubprogram(name: "paint_proj_stroke", scope: !3, file: !3, line: 4429, type: !4162, scopeLine: 4430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!4162 = !DISubroutineType(types: !4163)
!4163 = !{null, !4164, !56, !1944, !1944, !2035, !184, !184, !184}
!4164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4165, size: 64)
!4165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4166)
!4166 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !2543, line: 69, baseType: !24)
!4167 = !DILocalVariable(name: "C", arg: 1, scope: !4161, file: !3, line: 4429, type: !4164)
!4168 = !DILocation(line: 4429, column: 40, scope: !4161)
!4169 = !DILocalVariable(name: "pps", arg: 2, scope: !4161, file: !3, line: 4429, type: !56)
!4170 = !DILocation(line: 4429, column: 49, scope: !4161)
!4171 = !DILocalVariable(name: "prev_pos", arg: 3, scope: !4161, file: !3, line: 4429, type: !1944)
!4172 = !DILocation(line: 4429, column: 66, scope: !4161)
!4173 = !DILocalVariable(name: "pos", arg: 4, scope: !4161, file: !3, line: 4429, type: !1944)
!4174 = !DILocation(line: 4429, column: 91, scope: !4161)
!4175 = !DILocalVariable(name: "eraser", arg: 5, scope: !4161, file: !3, line: 4429, type: !2035)
!4176 = !DILocation(line: 4429, column: 110, scope: !4161)
!4177 = !DILocalVariable(name: "pressure", arg: 6, scope: !4161, file: !3, line: 4429, type: !184)
!4178 = !DILocation(line: 4429, column: 124, scope: !4161)
!4179 = !DILocalVariable(name: "distance", arg: 7, scope: !4161, file: !3, line: 4429, type: !184)
!4180 = !DILocation(line: 4429, column: 140, scope: !4161)
!4181 = !DILocalVariable(name: "size", arg: 8, scope: !4161, file: !3, line: 4429, type: !184)
!4182 = !DILocation(line: 4429, column: 156, scope: !4161)
!4183 = !DILocalVariable(name: "ps", scope: !4161, file: !3, line: 4431, type: !3674)
!4184 = !DILocation(line: 4431, column: 18, scope: !4161)
!4185 = !DILocation(line: 4431, column: 23, scope: !4161)
!4186 = !DILocalVariable(name: "brush", scope: !4161, file: !3, line: 4432, type: !3834)
!4187 = !DILocation(line: 4432, column: 9, scope: !4161)
!4188 = !DILocation(line: 4432, column: 17, scope: !4161)
!4189 = !DILocation(line: 4432, column: 21, scope: !4161)
!4190 = !DILocalVariable(name: "scene", scope: !4161, file: !3, line: 4433, type: !3828)
!4191 = !DILocation(line: 4433, column: 9, scope: !4161)
!4192 = !DILocation(line: 4433, column: 17, scope: !4161)
!4193 = !DILocation(line: 4433, column: 21, scope: !4161)
!4194 = !DILocalVariable(name: "a", scope: !4161, file: !3, line: 4434, type: !22)
!4195 = !DILocation(line: 4434, column: 6, scope: !4161)
!4196 = !DILocation(line: 4436, column: 19, scope: !4161)
!4197 = !DILocation(line: 4436, column: 2, scope: !4161)
!4198 = !DILocation(line: 4436, column: 6, scope: !4161)
!4199 = !DILocation(line: 4436, column: 17, scope: !4161)
!4200 = !DILocation(line: 4437, column: 14, scope: !4161)
!4201 = !DILocation(line: 4437, column: 21, scope: !4161)
!4202 = !DILocation(line: 4437, column: 2, scope: !4161)
!4203 = !DILocation(line: 4437, column: 6, scope: !4161)
!4204 = !DILocation(line: 4437, column: 12, scope: !4161)
!4205 = !DILocation(line: 4438, column: 6, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 4438, column: 6)
!4207 = !DILocation(line: 4438, column: 6, scope: !4161)
!4208 = !DILocation(line: 4439, column: 3, scope: !4206)
!4209 = !DILocation(line: 4439, column: 7, scope: !4206)
!4210 = !DILocation(line: 4439, column: 13, scope: !4206)
!4211 = !DILocation(line: 4442, column: 6, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 4442, column: 6)
!4213 = !DILocation(line: 4442, column: 10, scope: !4212)
!4214 = !DILocation(line: 4442, column: 15, scope: !4212)
!4215 = !DILocation(line: 4442, column: 35, scope: !4212)
!4216 = !DILocation(line: 4442, column: 38, scope: !4212)
!4217 = !DILocation(line: 4442, column: 42, scope: !4212)
!4218 = !DILocation(line: 4442, column: 47, scope: !4212)
!4219 = !DILocation(line: 4442, column: 6, scope: !4161)
!4220 = !DILocalVariable(name: "v3d", scope: !4221, file: !3, line: 4443, type: !3679)
!4221 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 4442, column: 71)
!4222 = !DILocation(line: 4443, column: 11, scope: !4221)
!4223 = !DILocation(line: 4443, column: 17, scope: !4221)
!4224 = !DILocation(line: 4443, column: 21, scope: !4221)
!4225 = !DILocalVariable(name: "cursor", scope: !4221, file: !3, line: 4444, type: !216)
!4226 = !DILocation(line: 4444, column: 10, scope: !4221)
!4227 = !DILocation(line: 4444, column: 42, scope: !4221)
!4228 = !DILocation(line: 4444, column: 49, scope: !4221)
!4229 = !DILocation(line: 4444, column: 19, scope: !4221)
!4230 = !DILocalVariable(name: "mval_i", scope: !4221, file: !3, line: 4445, type: !2348)
!4231 = !DILocation(line: 4445, column: 7, scope: !4221)
!4232 = !DILocation(line: 4445, column: 19, scope: !4221)
!4233 = !DILocation(line: 4445, column: 25, scope: !4221)
!4234 = !DILocation(line: 4445, column: 20, scope: !4221)
!4235 = !DILocation(line: 4445, column: 38, scope: !4221)
!4236 = !DILocation(line: 4445, column: 33, scope: !4221)
!4237 = !DILocation(line: 4447, column: 32, scope: !4221)
!4238 = !DILocation(line: 4447, column: 3, scope: !4221)
!4239 = !DILocation(line: 4449, column: 27, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4221, file: !3, line: 4449, column: 7)
!4241 = !DILocation(line: 4449, column: 34, scope: !4240)
!4242 = !DILocation(line: 4449, column: 38, scope: !4240)
!4243 = !DILocation(line: 4449, column: 42, scope: !4240)
!4244 = !DILocation(line: 4449, column: 47, scope: !4240)
!4245 = !DILocation(line: 4449, column: 55, scope: !4240)
!4246 = !DILocation(line: 4449, column: 8, scope: !4240)
!4247 = !DILocation(line: 4449, column: 7, scope: !4221)
!4248 = !DILocation(line: 4450, column: 4, scope: !4240)
!4249 = !DILocation(line: 4452, column: 24, scope: !4221)
!4250 = !DILocation(line: 4452, column: 28, scope: !4221)
!4251 = !DILocation(line: 4452, column: 3, scope: !4221)
!4252 = !DILocation(line: 4454, column: 3, scope: !4221)
!4253 = !DILocation(line: 4458, column: 6, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 4458, column: 6)
!4255 = !DILocation(line: 4458, column: 10, scope: !4254)
!4256 = !DILocation(line: 4458, column: 15, scope: !4254)
!4257 = !DILocation(line: 4458, column: 6, scope: !4161)
!4258 = !DILocation(line: 4459, column: 25, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 4458, column: 35)
!4260 = !DILocation(line: 4459, column: 32, scope: !4259)
!4261 = !DILocation(line: 4459, column: 46, scope: !4259)
!4262 = !DILocation(line: 4459, column: 50, scope: !4259)
!4263 = !DILocation(line: 4459, column: 55, scope: !4259)
!4264 = !DILocation(line: 4459, column: 79, scope: !4259)
!4265 = !DILocation(line: 4459, column: 89, scope: !4259)
!4266 = !DILocation(line: 4459, column: 100, scope: !4259)
!4267 = !DILocation(line: 4459, column: 104, scope: !4259)
!4268 = !DILocation(line: 4459, column: 3, scope: !4259)
!4269 = !DILocation(line: 4460, column: 27, scope: !4259)
!4270 = !DILocation(line: 4460, column: 31, scope: !4259)
!4271 = !DILocation(line: 4460, column: 51, scope: !4259)
!4272 = !DILocation(line: 4460, column: 55, scope: !4259)
!4273 = !DILocation(line: 4460, column: 3, scope: !4259)
!4274 = !DILocation(line: 4461, column: 2, scope: !4259)
!4275 = !DILocation(line: 4462, column: 11, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 4462, column: 11)
!4277 = !DILocation(line: 4462, column: 15, scope: !4276)
!4278 = !DILocation(line: 4462, column: 20, scope: !4276)
!4279 = !DILocation(line: 4462, column: 11, scope: !4254)
!4280 = !DILocation(line: 4463, column: 14, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4276, file: !3, line: 4462, column: 40)
!4282 = !DILocation(line: 4463, column: 18, scope: !4281)
!4283 = !DILocation(line: 4463, column: 51, scope: !4281)
!4284 = !DILocation(line: 4463, column: 58, scope: !4281)
!4285 = !DILocation(line: 4463, column: 31, scope: !4281)
!4286 = !DILocation(line: 4463, column: 3, scope: !4281)
!4287 = !DILocation(line: 4464, column: 27, scope: !4281)
!4288 = !DILocation(line: 4464, column: 31, scope: !4281)
!4289 = !DILocation(line: 4464, column: 51, scope: !4281)
!4290 = !DILocation(line: 4464, column: 55, scope: !4281)
!4291 = !DILocation(line: 4464, column: 3, scope: !4281)
!4292 = !DILocation(line: 4465, column: 2, scope: !4281)
!4293 = !DILocation(line: 4466, column: 11, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4276, file: !3, line: 4466, column: 11)
!4295 = !DILocation(line: 4466, column: 15, scope: !4294)
!4296 = !DILocation(line: 4466, column: 20, scope: !4294)
!4297 = !DILocation(line: 4466, column: 11, scope: !4276)
!4298 = !DILocation(line: 4467, column: 23, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 4466, column: 40)
!4300 = !DILocation(line: 4467, column: 30, scope: !4299)
!4301 = !DILocation(line: 4467, column: 3, scope: !4299)
!4302 = !DILocation(line: 4467, column: 7, scope: !4299)
!4303 = !DILocation(line: 4467, column: 21, scope: !4299)
!4304 = !DILocation(line: 4469, column: 8, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 4469, column: 7)
!4306 = !DILocation(line: 4469, column: 12, scope: !4305)
!4307 = !DILocation(line: 4469, column: 17, scope: !4305)
!4308 = !DILocation(line: 4470, column: 9, scope: !4305)
!4309 = !DILocation(line: 4470, column: 16, scope: !4305)
!4310 = !DILocation(line: 4470, column: 30, scope: !4305)
!4311 = !DILocation(line: 4470, column: 39, scope: !4305)
!4312 = !DILocation(line: 4470, column: 44, scope: !4305)
!4313 = !DILocation(line: 4470, column: 84, scope: !4305)
!4314 = !DILocation(line: 4469, column: 41, scope: !4305)
!4315 = !DILocation(line: 4469, column: 7, scope: !4299)
!4316 = !DILocation(line: 4472, column: 31, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4305, file: !3, line: 4471, column: 3)
!4318 = !DILocation(line: 4472, column: 35, scope: !4317)
!4319 = !DILocation(line: 4472, column: 29, scope: !4317)
!4320 = !DILocation(line: 4472, column: 4, scope: !4317)
!4321 = !DILocation(line: 4472, column: 8, scope: !4317)
!4322 = !DILocation(line: 4472, column: 22, scope: !4317)
!4323 = !DILocation(line: 4473, column: 3, scope: !4317)
!4324 = !DILocation(line: 4474, column: 2, scope: !4299)
!4325 = !DILocation(line: 4477, column: 7, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 4477, column: 6)
!4327 = !DILocation(line: 4477, column: 11, scope: !4326)
!4328 = !DILocation(line: 4477, column: 6, scope: !4161)
!4329 = !DILocation(line: 4478, column: 10, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 4478, column: 3)
!4331 = distinct !DILexicalBlock(scope: !4326, file: !3, line: 4477, column: 24)
!4332 = !DILocation(line: 4478, column: 8, scope: !4330)
!4333 = !DILocation(line: 4478, column: 15, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4330, file: !3, line: 4478, column: 3)
!4335 = !DILocation(line: 4478, column: 19, scope: !4334)
!4336 = !DILocation(line: 4478, column: 23, scope: !4334)
!4337 = !DILocation(line: 4478, column: 17, scope: !4334)
!4338 = !DILocation(line: 4478, column: 3, scope: !4330)
!4339 = !DILocation(line: 4479, column: 30, scope: !4334)
!4340 = !DILocation(line: 4479, column: 34, scope: !4334)
!4341 = !DILocation(line: 4479, column: 45, scope: !4334)
!4342 = !DILocation(line: 4479, column: 48, scope: !4334)
!4343 = !DILocation(line: 4479, column: 4, scope: !4334)
!4344 = !DILocation(line: 4478, column: 35, scope: !4334)
!4345 = !DILocation(line: 4478, column: 3, scope: !4334)
!4346 = distinct !{!4346, !4338, !4347}
!4347 = !DILocation(line: 4479, column: 62, scope: !4330)
!4348 = !DILocation(line: 4480, column: 2, scope: !4331)
!4349 = !DILocation(line: 4482, column: 23, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 4482, column: 6)
!4351 = !DILocation(line: 4482, column: 27, scope: !4350)
!4352 = !DILocation(line: 4482, column: 37, scope: !4350)
!4353 = !DILocation(line: 4482, column: 6, scope: !4350)
!4354 = !DILocation(line: 4482, column: 6, scope: !4161)
!4355 = !DILocation(line: 4483, column: 3, scope: !4350)
!4356 = !DILocation(line: 4483, column: 7, scope: !4350)
!4357 = !DILocation(line: 4483, column: 19, scope: !4350)
!4358 = !DILocation(line: 4484, column: 1, scope: !4161)
!4359 = distinct !DISubprogram(name: "srgb_to_linearrgb_v3_v3", scope: !4360, file: !4360, line: 39, type: !4361, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!4360 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_color_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4361 = !DISubroutineType(types: !4362)
!4362 = !{null, !216, !1944}
!4363 = !DILocalVariable(name: "linear", arg: 1, scope: !4359, file: !4360, line: 39, type: !216)
!4364 = !DILocation(line: 39, column: 44, scope: !4359)
!4365 = !DILocalVariable(name: "srgb", arg: 2, scope: !4359, file: !4360, line: 39, type: !1944)
!4366 = !DILocation(line: 39, column: 67, scope: !4359)
!4367 = !DILocation(line: 41, column: 32, scope: !4359)
!4368 = !DILocation(line: 41, column: 14, scope: !4359)
!4369 = !DILocation(line: 41, column: 2, scope: !4359)
!4370 = !DILocation(line: 41, column: 12, scope: !4359)
!4371 = !DILocation(line: 42, column: 32, scope: !4359)
!4372 = !DILocation(line: 42, column: 14, scope: !4359)
!4373 = !DILocation(line: 42, column: 2, scope: !4359)
!4374 = !DILocation(line: 42, column: 12, scope: !4359)
!4375 = !DILocation(line: 43, column: 32, scope: !4359)
!4376 = !DILocation(line: 43, column: 14, scope: !4359)
!4377 = !DILocation(line: 43, column: 2, scope: !4359)
!4378 = !DILocation(line: 43, column: 12, scope: !4359)
!4379 = !DILocation(line: 44, column: 1, scope: !4359)
!4380 = distinct !DISubprogram(name: "copy_v3_v3", scope: !4381, file: !4381, line: 64, type: !4361, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!4381 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4382 = !DILocalVariable(name: "r", arg: 1, scope: !4380, file: !4381, line: 64, type: !216)
!4383 = !DILocation(line: 64, column: 31, scope: !4380)
!4384 = !DILocalVariable(name: "a", arg: 2, scope: !4380, file: !4381, line: 64, type: !1944)
!4385 = !DILocation(line: 64, column: 49, scope: !4380)
!4386 = !DILocation(line: 66, column: 9, scope: !4380)
!4387 = !DILocation(line: 66, column: 2, scope: !4380)
!4388 = !DILocation(line: 66, column: 7, scope: !4380)
!4389 = !DILocation(line: 67, column: 9, scope: !4380)
!4390 = !DILocation(line: 67, column: 2, scope: !4380)
!4391 = !DILocation(line: 67, column: 7, scope: !4380)
!4392 = !DILocation(line: 68, column: 9, scope: !4380)
!4393 = !DILocation(line: 68, column: 2, scope: !4380)
!4394 = !DILocation(line: 68, column: 7, scope: !4380)
!4395 = !DILocation(line: 69, column: 1, scope: !4380)
!4396 = distinct !DISubprogram(name: "partial_redraw_array_init", scope: !3, file: !3, line: 3570, type: !4397, scopeLine: 3571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!4397 = !DISubroutineType(types: !4398)
!4398 = !{null, !3896}
!4399 = !DILocalVariable(name: "pr", arg: 1, scope: !4396, file: !3, line: 3570, type: !3896)
!4400 = !DILocation(line: 3570, column: 64, scope: !4396)
!4401 = !DILocalVariable(name: "tot", scope: !4396, file: !3, line: 3572, type: !22)
!4402 = !DILocation(line: 3572, column: 6, scope: !4396)
!4403 = !DILocation(line: 3573, column: 2, scope: !4396)
!4404 = !DILocation(line: 3573, column: 12, scope: !4396)
!4405 = !DILocation(line: 3574, column: 3, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4396, file: !3, line: 3573, column: 16)
!4407 = !DILocation(line: 3574, column: 7, scope: !4406)
!4408 = !DILocation(line: 3574, column: 10, scope: !4406)
!4409 = !DILocation(line: 3575, column: 3, scope: !4406)
!4410 = !DILocation(line: 3575, column: 7, scope: !4406)
!4411 = !DILocation(line: 3575, column: 10, scope: !4406)
!4412 = !DILocation(line: 3577, column: 3, scope: !4406)
!4413 = !DILocation(line: 3577, column: 7, scope: !4406)
!4414 = !DILocation(line: 3577, column: 10, scope: !4406)
!4415 = !DILocation(line: 3578, column: 3, scope: !4406)
!4416 = !DILocation(line: 3578, column: 7, scope: !4406)
!4417 = !DILocation(line: 3578, column: 10, scope: !4406)
!4418 = !DILocation(line: 3580, column: 3, scope: !4406)
!4419 = !DILocation(line: 3580, column: 7, scope: !4406)
!4420 = !DILocation(line: 3580, column: 15, scope: !4406)
!4421 = !DILocation(line: 3582, column: 5, scope: !4406)
!4422 = distinct !{!4422, !4403, !4423}
!4423 = !DILocation(line: 3583, column: 2, scope: !4396)
!4424 = !DILocation(line: 3584, column: 1, scope: !4396)
!4425 = distinct !DISubprogram(name: "project_paint_op", scope: !3, file: !3, line: 4354, type: !4426, scopeLine: 4355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!4426 = !DISubroutineType(types: !4427)
!4427 = !{!233, !56, !1944, !1944}
!4428 = !DILocalVariable(name: "state", arg: 1, scope: !4425, file: !3, line: 4354, type: !56)
!4429 = !DILocation(line: 4354, column: 36, scope: !4425)
!4430 = !DILocalVariable(name: "lastpos", arg: 2, scope: !4425, file: !3, line: 4354, type: !1944)
!4431 = !DILocation(line: 4354, column: 55, scope: !4425)
!4432 = !DILocalVariable(name: "pos", arg: 3, scope: !4425, file: !3, line: 4354, type: !1944)
!4433 = !DILocation(line: 4354, column: 79, scope: !4425)
!4434 = !DILocalVariable(name: "ps", scope: !4425, file: !3, line: 4357, type: !3674)
!4435 = !DILocation(line: 4357, column: 18, scope: !4425)
!4436 = !DILocation(line: 4357, column: 41, scope: !4425)
!4437 = !DILocation(line: 4357, column: 23, scope: !4425)
!4438 = !DILocalVariable(name: "touch_any", scope: !4425, file: !3, line: 4358, type: !233)
!4439 = !DILocation(line: 4358, column: 7, scope: !4425)
!4440 = !DILocalVariable(name: "handles", scope: !4425, file: !3, line: 4360, type: !4441)
!4441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3974, size: 384, elements: !514)
!4442 = !DILocation(line: 4360, column: 16, scope: !4425)
!4443 = !DILocalVariable(name: "threads", scope: !4425, file: !3, line: 4361, type: !58)
!4444 = !DILocation(line: 4361, column: 11, scope: !4425)
!4445 = !DILocalVariable(name: "a", scope: !4425, file: !3, line: 4362, type: !22)
!4446 = !DILocation(line: 4362, column: 6, scope: !4425)
!4447 = !DILocalVariable(name: "i", scope: !4425, file: !3, line: 4362, type: !22)
!4448 = !DILocation(line: 4362, column: 9, scope: !4425)
!4449 = !DILocalVariable(name: "pool", scope: !4425, file: !3, line: 4364, type: !254)
!4450 = !DILocation(line: 4364, column: 20, scope: !4425)
!4451 = !DILocation(line: 4366, column: 32, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 4366, column: 6)
!4453 = !DILocation(line: 4366, column: 36, scope: !4452)
!4454 = !DILocation(line: 4366, column: 7, scope: !4452)
!4455 = !DILocation(line: 4366, column: 6, scope: !4425)
!4456 = !DILocation(line: 4367, column: 3, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4452, file: !3, line: 4366, column: 42)
!4458 = !DILocation(line: 4370, column: 6, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 4370, column: 6)
!4460 = !DILocation(line: 4370, column: 10, scope: !4459)
!4461 = !DILocation(line: 4370, column: 21, scope: !4459)
!4462 = !DILocation(line: 4370, column: 6, scope: !4425)
!4463 = !DILocation(line: 4371, column: 54, scope: !4459)
!4464 = !DILocation(line: 4371, column: 58, scope: !4459)
!4465 = !DILocation(line: 4371, column: 3, scope: !4459)
!4466 = !DILocation(line: 4373, column: 9, scope: !4425)
!4467 = !DILocation(line: 4373, column: 7, scope: !4425)
!4468 = !DILocation(line: 4376, column: 9, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 4376, column: 2)
!4470 = !DILocation(line: 4376, column: 7, scope: !4469)
!4471 = !DILocation(line: 4376, column: 14, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4469, file: !3, line: 4376, column: 2)
!4473 = !DILocation(line: 4376, column: 18, scope: !4472)
!4474 = !DILocation(line: 4376, column: 22, scope: !4472)
!4475 = !DILocation(line: 4376, column: 16, scope: !4472)
!4476 = !DILocation(line: 4376, column: 2, scope: !4469)
!4477 = !DILocation(line: 4381, column: 19, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 4376, column: 39)
!4479 = !DILocation(line: 4381, column: 11, scope: !4478)
!4480 = !DILocation(line: 4381, column: 3, scope: !4478)
!4481 = !DILocation(line: 4381, column: 14, scope: !4478)
!4482 = !DILocation(line: 4381, column: 17, scope: !4478)
!4483 = !DILocation(line: 4382, column: 22, scope: !4478)
!4484 = !DILocation(line: 4382, column: 14, scope: !4478)
!4485 = !DILocation(line: 4382, column: 25, scope: !4478)
!4486 = !DILocation(line: 4382, column: 31, scope: !4478)
!4487 = !DILocation(line: 4382, column: 3, scope: !4478)
!4488 = !DILocation(line: 4383, column: 22, scope: !4478)
!4489 = !DILocation(line: 4383, column: 14, scope: !4478)
!4490 = !DILocation(line: 4383, column: 25, scope: !4478)
!4491 = !DILocation(line: 4383, column: 35, scope: !4478)
!4492 = !DILocation(line: 4383, column: 3, scope: !4478)
!4493 = !DILocation(line: 4386, column: 29, scope: !4478)
!4494 = !DILocation(line: 4386, column: 11, scope: !4478)
!4495 = !DILocation(line: 4386, column: 3, scope: !4478)
!4496 = !DILocation(line: 4386, column: 14, scope: !4478)
!4497 = !DILocation(line: 4386, column: 27, scope: !4478)
!4498 = !DILocation(line: 4388, column: 64, scope: !4478)
!4499 = !DILocation(line: 4388, column: 68, scope: !4478)
!4500 = !DILocation(line: 4388, column: 77, scope: !4478)
!4501 = !DILocation(line: 4388, column: 81, scope: !4478)
!4502 = !DILocation(line: 4388, column: 85, scope: !4478)
!4503 = !DILocation(line: 4388, column: 95, scope: !4478)
!4504 = !DILocation(line: 4388, column: 45, scope: !4478)
!4505 = !DILocation(line: 4388, column: 27, scope: !4478)
!4506 = !DILocation(line: 4388, column: 11, scope: !4478)
!4507 = !DILocation(line: 4388, column: 3, scope: !4478)
!4508 = !DILocation(line: 4388, column: 14, scope: !4478)
!4509 = !DILocation(line: 4388, column: 25, scope: !4478)
!4510 = !DILocation(line: 4390, column: 18, scope: !4478)
!4511 = !DILocation(line: 4390, column: 10, scope: !4478)
!4512 = !DILocation(line: 4390, column: 21, scope: !4478)
!4513 = !DILocation(line: 4390, column: 3, scope: !4478)
!4514 = !DILocation(line: 4390, column: 33, scope: !4478)
!4515 = !DILocation(line: 4390, column: 37, scope: !4478)
!4516 = !DILocation(line: 4390, column: 49, scope: !4478)
!4517 = !DILocation(line: 4390, column: 53, scope: !4478)
!4518 = !DILocation(line: 4390, column: 63, scope: !4478)
!4519 = !DILocation(line: 4393, column: 10, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 4393, column: 3)
!4521 = !DILocation(line: 4393, column: 8, scope: !4520)
!4522 = !DILocation(line: 4393, column: 15, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4520, file: !3, line: 4393, column: 3)
!4524 = !DILocation(line: 4393, column: 19, scope: !4523)
!4525 = !DILocation(line: 4393, column: 23, scope: !4523)
!4526 = !DILocation(line: 4393, column: 17, scope: !4523)
!4527 = !DILocation(line: 4393, column: 3, scope: !4520)
!4528 = !DILocation(line: 4394, column: 92, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4523, file: !3, line: 4393, column: 39)
!4530 = !DILocation(line: 4394, column: 96, scope: !4529)
!4531 = !DILocation(line: 4394, column: 105, scope: !4529)
!4532 = !DILocation(line: 4394, column: 73, scope: !4529)
!4533 = !DILocation(line: 4394, column: 46, scope: !4529)
!4534 = !DILocation(line: 4394, column: 12, scope: !4529)
!4535 = !DILocation(line: 4394, column: 4, scope: !4529)
!4536 = !DILocation(line: 4394, column: 15, scope: !4529)
!4537 = !DILocation(line: 4394, column: 26, scope: !4529)
!4538 = !DILocation(line: 4394, column: 29, scope: !4529)
!4539 = !DILocation(line: 4394, column: 44, scope: !4529)
!4540 = !DILocation(line: 4395, column: 19, scope: !4529)
!4541 = !DILocation(line: 4395, column: 11, scope: !4529)
!4542 = !DILocation(line: 4395, column: 22, scope: !4529)
!4543 = !DILocation(line: 4395, column: 33, scope: !4529)
!4544 = !DILocation(line: 4395, column: 36, scope: !4529)
!4545 = !DILocation(line: 4395, column: 4, scope: !4529)
!4546 = !DILocation(line: 4395, column: 52, scope: !4529)
!4547 = !DILocation(line: 4395, column: 56, scope: !4529)
!4548 = !DILocation(line: 4395, column: 67, scope: !4529)
!4549 = !DILocation(line: 4395, column: 70, scope: !4529)
!4550 = !DILocation(line: 4396, column: 3, scope: !4529)
!4551 = !DILocation(line: 4393, column: 35, scope: !4523)
!4552 = !DILocation(line: 4393, column: 3, scope: !4523)
!4553 = distinct !{!4553, !4527, !4554}
!4554 = !DILocation(line: 4396, column: 3, scope: !4520)
!4555 = !DILocation(line: 4398, column: 21, scope: !4478)
!4556 = !DILocation(line: 4398, column: 11, scope: !4478)
!4557 = !DILocation(line: 4398, column: 3, scope: !4478)
!4558 = !DILocation(line: 4398, column: 14, scope: !4478)
!4559 = !DILocation(line: 4398, column: 19, scope: !4478)
!4560 = !DILocation(line: 4400, column: 7, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 4400, column: 7)
!4562 = !DILocation(line: 4400, column: 11, scope: !4561)
!4563 = !DILocation(line: 4400, column: 22, scope: !4561)
!4564 = !DILocation(line: 4400, column: 7, scope: !4478)
!4565 = !DILocation(line: 4401, column: 41, scope: !4561)
!4566 = !DILocation(line: 4401, column: 33, scope: !4561)
!4567 = !DILocation(line: 4401, column: 32, scope: !4561)
!4568 = !DILocation(line: 4401, column: 4, scope: !4561)
!4569 = !DILocation(line: 4402, column: 2, scope: !4478)
!4570 = !DILocation(line: 4376, column: 35, scope: !4472)
!4571 = !DILocation(line: 4376, column: 2, scope: !4472)
!4572 = distinct !{!4572, !4476, !4573}
!4573 = !DILocation(line: 4402, column: 2, scope: !4469)
!4574 = !DILocation(line: 4404, column: 6, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 4404, column: 6)
!4576 = !DILocation(line: 4404, column: 10, scope: !4575)
!4577 = !DILocation(line: 4404, column: 21, scope: !4575)
!4578 = !DILocation(line: 4404, column: 6, scope: !4425)
!4579 = !DILocation(line: 4405, column: 3, scope: !4575)
!4580 = !DILocation(line: 4407, column: 27, scope: !4575)
!4581 = !DILocation(line: 4407, column: 26, scope: !4575)
!4582 = !DILocation(line: 4407, column: 3, scope: !4575)
!4583 = !DILocation(line: 4410, column: 22, scope: !4425)
!4584 = !DILocation(line: 4410, column: 2, scope: !4425)
!4585 = !DILocation(line: 4413, column: 9, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 4413, column: 2)
!4587 = !DILocation(line: 4413, column: 7, scope: !4586)
!4588 = !DILocation(line: 4413, column: 14, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4586, file: !3, line: 4413, column: 2)
!4590 = !DILocation(line: 4413, column: 18, scope: !4589)
!4591 = !DILocation(line: 4413, column: 22, scope: !4589)
!4592 = !DILocation(line: 4413, column: 16, scope: !4589)
!4593 = !DILocation(line: 4413, column: 2, scope: !4586)
!4594 = !DILocalVariable(name: "touch", scope: !4595, file: !3, line: 4414, type: !22)
!4595 = distinct !DILexicalBlock(scope: !4589, file: !3, line: 4413, column: 38)
!4596 = !DILocation(line: 4414, column: 7, scope: !4595)
!4597 = !DILocation(line: 4415, column: 10, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 4415, column: 3)
!4599 = !DILocation(line: 4415, column: 8, scope: !4598)
!4600 = !DILocation(line: 4415, column: 15, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4598, file: !3, line: 4415, column: 3)
!4602 = !DILocation(line: 4415, column: 19, scope: !4601)
!4603 = !DILocation(line: 4415, column: 23, scope: !4601)
!4604 = !DILocation(line: 4415, column: 17, scope: !4601)
!4605 = !DILocation(line: 4415, column: 3, scope: !4598)
!4606 = !DILocation(line: 4416, column: 40, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4601, file: !3, line: 4415, column: 40)
!4608 = !DILocation(line: 4416, column: 44, scope: !4607)
!4609 = !DILocation(line: 4416, column: 55, scope: !4607)
!4610 = !DILocation(line: 4416, column: 58, scope: !4607)
!4611 = !DILocation(line: 4416, column: 82, scope: !4607)
!4612 = !DILocation(line: 4416, column: 74, scope: !4607)
!4613 = !DILocation(line: 4416, column: 85, scope: !4607)
!4614 = !DILocation(line: 4416, column: 96, scope: !4607)
!4615 = !DILocation(line: 4416, column: 99, scope: !4607)
!4616 = !DILocation(line: 4416, column: 13, scope: !4607)
!4617 = !DILocation(line: 4416, column: 10, scope: !4607)
!4618 = !DILocation(line: 4417, column: 3, scope: !4607)
!4619 = !DILocation(line: 4415, column: 36, scope: !4601)
!4620 = !DILocation(line: 4415, column: 3, scope: !4601)
!4621 = distinct !{!4621, !4605, !4622}
!4622 = !DILocation(line: 4417, column: 3, scope: !4598)
!4623 = !DILocation(line: 4419, column: 7, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 4419, column: 7)
!4625 = !DILocation(line: 4419, column: 7, scope: !4595)
!4626 = !DILocation(line: 4420, column: 4, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4624, file: !3, line: 4419, column: 14)
!4628 = !DILocation(line: 4420, column: 8, scope: !4627)
!4629 = !DILocation(line: 4420, column: 19, scope: !4627)
!4630 = !DILocation(line: 4420, column: 22, scope: !4627)
!4631 = !DILocation(line: 4420, column: 28, scope: !4627)
!4632 = !DILocation(line: 4421, column: 14, scope: !4627)
!4633 = !DILocation(line: 4422, column: 3, scope: !4627)
!4634 = !DILocation(line: 4423, column: 2, scope: !4595)
!4635 = !DILocation(line: 4413, column: 34, scope: !4589)
!4636 = !DILocation(line: 4413, column: 2, scope: !4589)
!4637 = distinct !{!4637, !4593, !4638}
!4638 = !DILocation(line: 4423, column: 2, scope: !4586)
!4639 = !DILocation(line: 4425, column: 9, scope: !4425)
!4640 = !DILocation(line: 4425, column: 2, scope: !4425)
!4641 = !DILocation(line: 4426, column: 1, scope: !4425)
!4642 = distinct !DISubprogram(name: "paint_proj_new_stroke", scope: !3, file: !3, line: 4583, type: !4643, scopeLine: 4584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!4643 = !DISubroutineType(types: !4644)
!4644 = !{!56, !4645, !3842, !1944, !22}
!4645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4166, size: 64)
!4646 = !DILocalVariable(name: "C", arg: 1, scope: !4642, file: !3, line: 4583, type: !4645)
!4647 = !DILocation(line: 4583, column: 39, scope: !4642)
!4648 = !DILocalVariable(name: "ob", arg: 2, scope: !4642, file: !3, line: 4583, type: !3842)
!4649 = !DILocation(line: 4583, column: 50, scope: !4642)
!4650 = !DILocalVariable(name: "mouse", arg: 3, scope: !4642, file: !3, line: 4583, type: !1944)
!4651 = !DILocation(line: 4583, column: 66, scope: !4642)
!4652 = !DILocalVariable(name: "mode", arg: 4, scope: !4642, file: !3, line: 4583, type: !22)
!4653 = !DILocation(line: 4583, column: 80, scope: !4642)
!4654 = !DILocalVariable(name: "ps", scope: !4642, file: !3, line: 4585, type: !3674)
!4655 = !DILocation(line: 4585, column: 18, scope: !4642)
!4656 = !DILocation(line: 4585, column: 23, scope: !4642)
!4657 = !DILocation(line: 4587, column: 21, scope: !4642)
!4658 = !DILocation(line: 4587, column: 24, scope: !4642)
!4659 = !DILocation(line: 4587, column: 28, scope: !4642)
!4660 = !DILocation(line: 4587, column: 32, scope: !4642)
!4661 = !DILocation(line: 4587, column: 2, scope: !4642)
!4662 = !DILocation(line: 4589, column: 6, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4642, file: !3, line: 4589, column: 6)
!4664 = !DILocation(line: 4589, column: 10, scope: !4663)
!4665 = !DILocation(line: 4589, column: 15, scope: !4663)
!4666 = !DILocation(line: 4589, column: 35, scope: !4663)
!4667 = !DILocation(line: 4589, column: 38, scope: !4663)
!4668 = !DILocation(line: 4589, column: 43, scope: !4663)
!4669 = !DILocation(line: 4589, column: 6, scope: !4642)
!4670 = !DILocation(line: 4590, column: 32, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4663, file: !3, line: 4589, column: 67)
!4672 = !DILocation(line: 4590, column: 3, scope: !4671)
!4673 = !DILocation(line: 4591, column: 10, scope: !4671)
!4674 = !DILocation(line: 4591, column: 3, scope: !4671)
!4675 = !DILocation(line: 4594, column: 23, scope: !4642)
!4676 = !DILocation(line: 4594, column: 27, scope: !4642)
!4677 = !DILocation(line: 4594, column: 2, scope: !4642)
!4678 = !DILocation(line: 4596, column: 2, scope: !4642)
!4679 = !DILocation(line: 4596, column: 6, scope: !4642)
!4680 = !DILocation(line: 4596, column: 13, scope: !4642)
!4681 = !DILocation(line: 4598, column: 6, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4642, file: !3, line: 4598, column: 6)
!4683 = !DILocation(line: 4598, column: 10, scope: !4682)
!4684 = !DILocation(line: 4598, column: 13, scope: !4682)
!4685 = !DILocation(line: 4598, column: 21, scope: !4682)
!4686 = !DILocation(line: 4598, column: 26, scope: !4682)
!4687 = !DILocation(line: 4598, column: 30, scope: !4682)
!4688 = !DILocation(line: 4598, column: 34, scope: !4682)
!4689 = !DILocation(line: 4598, column: 40, scope: !4682)
!4690 = !DILocation(line: 4598, column: 44, scope: !4682)
!4691 = !DILocation(line: 4598, column: 49, scope: !4682)
!4692 = !DILocation(line: 4598, column: 38, scope: !4682)
!4693 = !DILocation(line: 4598, column: 6, scope: !4642)
!4694 = !DILocation(line: 4599, column: 3, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 4598, column: 55)
!4696 = !DILocation(line: 4599, column: 13, scope: !4695)
!4697 = !DILocation(line: 4600, column: 3, scope: !4695)
!4698 = !DILocation(line: 4603, column: 43, scope: !4642)
!4699 = !DILocation(line: 4603, column: 47, scope: !4642)
!4700 = !DILocation(line: 4603, column: 54, scope: !4642)
!4701 = !DILocation(line: 4603, column: 58, scope: !4642)
!4702 = !DILocation(line: 4603, column: 24, scope: !4642)
!4703 = !DILocation(line: 4603, column: 2, scope: !4642)
!4704 = !DILocation(line: 4603, column: 6, scope: !4642)
!4705 = !DILocation(line: 4603, column: 22, scope: !4642)
!4706 = !DILocation(line: 4606, column: 25, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4642, file: !3, line: 4606, column: 6)
!4708 = !DILocation(line: 4606, column: 29, scope: !4707)
!4709 = !DILocation(line: 4606, column: 36, scope: !4707)
!4710 = !DILocation(line: 4606, column: 40, scope: !4707)
!4711 = !DILocation(line: 4606, column: 6, scope: !4707)
!4712 = !DILocation(line: 4606, column: 47, scope: !4707)
!4713 = !DILocation(line: 4606, column: 6, scope: !4642)
!4714 = !DILocation(line: 4607, column: 22, scope: !4707)
!4715 = !DILocation(line: 4607, column: 26, scope: !4707)
!4716 = !DILocation(line: 4607, column: 33, scope: !4707)
!4717 = !DILocation(line: 4607, column: 37, scope: !4707)
!4718 = !DILocation(line: 4607, column: 3, scope: !4707)
!4719 = !DILocation(line: 4610, column: 22, scope: !4642)
!4720 = !DILocation(line: 4610, column: 2, scope: !4642)
!4721 = !DILocation(line: 4612, column: 6, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4642, file: !3, line: 4612, column: 6)
!4723 = !DILocation(line: 4612, column: 10, scope: !4722)
!4724 = !DILocation(line: 4612, column: 13, scope: !4722)
!4725 = !DILocation(line: 4612, column: 6, scope: !4642)
!4726 = !DILocation(line: 4613, column: 3, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4722, file: !3, line: 4612, column: 22)
!4728 = !DILocation(line: 4613, column: 13, scope: !4727)
!4729 = !DILocation(line: 4614, column: 3, scope: !4727)
!4730 = !DILocation(line: 4617, column: 25, scope: !4642)
!4731 = !DILocation(line: 4617, column: 29, scope: !4642)
!4732 = !DILocation(line: 4617, column: 2, scope: !4642)
!4733 = !DILocation(line: 4620, column: 6, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4642, file: !3, line: 4620, column: 6)
!4735 = !DILocation(line: 4620, column: 10, scope: !4734)
!4736 = !DILocation(line: 4620, column: 15, scope: !4734)
!4737 = !DILocation(line: 4620, column: 6, scope: !4642)
!4738 = !DILocation(line: 4621, column: 3, scope: !4734)
!4739 = !DILocation(line: 4621, column: 7, scope: !4734)
!4740 = !DILocation(line: 4621, column: 14, scope: !4734)
!4741 = !DILocation(line: 4623, column: 9, scope: !4642)
!4742 = !DILocation(line: 4623, column: 2, scope: !4642)
!4743 = !DILocation(line: 4624, column: 1, scope: !4642)
!4744 = distinct !DISubprogram(name: "project_state_init", scope: !3, file: !3, line: 4488, type: !4745, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!4745 = !DISubroutineType(types: !4746)
!4746 = !{null, !4645, !3842, !3674, !22}
!4747 = !DILocalVariable(name: "C", arg: 1, scope: !4744, file: !3, line: 4488, type: !4645)
!4748 = !DILocation(line: 4488, column: 42, scope: !4744)
!4749 = !DILocalVariable(name: "ob", arg: 2, scope: !4744, file: !3, line: 4488, type: !3842)
!4750 = !DILocation(line: 4488, column: 53, scope: !4744)
!4751 = !DILocalVariable(name: "ps", arg: 3, scope: !4744, file: !3, line: 4488, type: !3674)
!4752 = !DILocation(line: 4488, column: 73, scope: !4744)
!4753 = !DILocalVariable(name: "mode", arg: 4, scope: !4744, file: !3, line: 4488, type: !22)
!4754 = !DILocation(line: 4488, column: 81, scope: !4744)
!4755 = !DILocalVariable(name: "scene", scope: !4744, file: !3, line: 4490, type: !3828)
!4756 = !DILocation(line: 4490, column: 9, scope: !4744)
!4757 = !DILocation(line: 4490, column: 32, scope: !4744)
!4758 = !DILocation(line: 4490, column: 17, scope: !4744)
!4759 = !DILocalVariable(name: "settings", scope: !4744, file: !3, line: 4491, type: !4760)
!4760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4761, size: 64)
!4761 = !DIDerivedType(tag: DW_TAG_typedef, name: "ToolSettings", file: !155, line: 1180, baseType: !2578)
!4762 = !DILocation(line: 4491, column: 16, scope: !4744)
!4763 = !DILocation(line: 4491, column: 27, scope: !4744)
!4764 = !DILocation(line: 4491, column: 34, scope: !4744)
!4765 = !DILocation(line: 4494, column: 13, scope: !4744)
!4766 = !DILocation(line: 4494, column: 2, scope: !4744)
!4767 = !DILocation(line: 4494, column: 6, scope: !4744)
!4768 = !DILocation(line: 4494, column: 11, scope: !4744)
!4769 = !DILocation(line: 4495, column: 31, scope: !4744)
!4770 = !DILocation(line: 4495, column: 41, scope: !4744)
!4771 = !DILocation(line: 4495, column: 50, scope: !4744)
!4772 = !DILocation(line: 4495, column: 14, scope: !4744)
!4773 = !DILocation(line: 4495, column: 2, scope: !4744)
!4774 = !DILocation(line: 4495, column: 6, scope: !4744)
!4775 = !DILocation(line: 4495, column: 12, scope: !4744)
!4776 = !DILocation(line: 4496, column: 6, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 4496, column: 6)
!4778 = !DILocation(line: 4496, column: 10, scope: !4777)
!4779 = !DILocation(line: 4496, column: 6, scope: !4744)
!4780 = !DILocalVariable(name: "brush", scope: !4781, file: !3, line: 4497, type: !3834)
!4781 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 4496, column: 17)
!4782 = !DILocation(line: 4497, column: 10, scope: !4781)
!4783 = !DILocation(line: 4497, column: 18, scope: !4781)
!4784 = !DILocation(line: 4497, column: 22, scope: !4781)
!4785 = !DILocation(line: 4498, column: 14, scope: !4781)
!4786 = !DILocation(line: 4498, column: 21, scope: !4781)
!4787 = !DILocation(line: 4498, column: 3, scope: !4781)
!4788 = !DILocation(line: 4498, column: 7, scope: !4781)
!4789 = !DILocation(line: 4498, column: 12, scope: !4781)
!4790 = !DILocation(line: 4499, column: 15, scope: !4781)
!4791 = !DILocation(line: 4499, column: 22, scope: !4781)
!4792 = !DILocation(line: 4499, column: 3, scope: !4781)
!4793 = !DILocation(line: 4499, column: 7, scope: !4781)
!4794 = !DILocation(line: 4499, column: 13, scope: !4781)
!4795 = !DILocation(line: 4501, column: 7, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 4501, column: 7)
!4797 = !DILocation(line: 4501, column: 14, scope: !4796)
!4798 = !DILocation(line: 4501, column: 30, scope: !4796)
!4799 = !DILocation(line: 4501, column: 7, scope: !4781)
!4800 = !DILocation(line: 4502, column: 17, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4796, file: !3, line: 4501, column: 52)
!4802 = !DILocation(line: 4502, column: 21, scope: !4801)
!4803 = !DILocation(line: 4502, column: 26, scope: !4801)
!4804 = !DILocation(line: 4502, column: 54, scope: !4801)
!4805 = !DILocation(line: 4502, column: 61, scope: !4801)
!4806 = !DILocation(line: 4502, column: 66, scope: !4801)
!4807 = !DILocation(line: 4502, column: 82, scope: !4801)
!4808 = !DILocation(line: 4502, column: 50, scope: !4801)
!4809 = !DILocation(line: 4502, column: 16, scope: !4801)
!4810 = !DILocation(line: 4502, column: 15, scope: !4801)
!4811 = !DILocation(line: 4502, column: 4, scope: !4801)
!4812 = !DILocation(line: 4502, column: 8, scope: !4801)
!4813 = !DILocation(line: 4502, column: 13, scope: !4801)
!4814 = !DILocation(line: 4505, column: 43, scope: !4801)
!4815 = !DILocation(line: 4505, column: 21, scope: !4801)
!4816 = !DILocation(line: 4505, column: 4, scope: !4801)
!4817 = !DILocation(line: 4505, column: 8, scope: !4801)
!4818 = !DILocation(line: 4505, column: 19, scope: !4801)
!4819 = !DILocation(line: 4506, column: 3, scope: !4801)
!4820 = !DILocation(line: 4509, column: 46, scope: !4781)
!4821 = !DILocation(line: 4509, column: 20, scope: !4781)
!4822 = !DILocation(line: 4509, column: 3, scope: !4781)
!4823 = !DILocation(line: 4509, column: 7, scope: !4781)
!4824 = !DILocation(line: 4509, column: 18, scope: !4781)
!4825 = !DILocation(line: 4510, column: 22, scope: !4781)
!4826 = !DILocation(line: 4510, column: 29, scope: !4781)
!4827 = !DILocation(line: 4510, column: 34, scope: !4781)
!4828 = !DILocation(line: 4510, column: 38, scope: !4781)
!4829 = !DILocation(line: 4510, column: 41, scope: !4781)
!4830 = !DILocation(line: 4510, column: 48, scope: !4781)
!4831 = !DILocation(line: 4510, column: 64, scope: !4781)
!4832 = !DILocation(line: 0, scope: !4781)
!4833 = !DILocation(line: 4510, column: 21, scope: !4781)
!4834 = !DILocation(line: 4510, column: 3, scope: !4781)
!4835 = !DILocation(line: 4510, column: 7, scope: !4781)
!4836 = !DILocation(line: 4510, column: 19, scope: !4781)
!4837 = !DILocation(line: 4511, column: 23, scope: !4781)
!4838 = !DILocation(line: 4511, column: 30, scope: !4781)
!4839 = !DILocation(line: 4511, column: 40, scope: !4781)
!4840 = !DILocation(line: 4511, column: 22, scope: !4781)
!4841 = !DILocation(line: 4511, column: 3, scope: !4781)
!4842 = !DILocation(line: 4511, column: 7, scope: !4781)
!4843 = !DILocation(line: 4511, column: 20, scope: !4781)
!4844 = !DILocation(line: 4512, column: 2, scope: !4781)
!4845 = !DILocation(line: 4515, column: 3, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 4513, column: 7)
!4847 = !DILocation(line: 4515, column: 7, scope: !4846)
!4848 = !DILocation(line: 4515, column: 18, scope: !4846)
!4849 = !DILocation(line: 4516, column: 3, scope: !4846)
!4850 = !DILocation(line: 4516, column: 7, scope: !4846)
!4851 = !DILocation(line: 4516, column: 19, scope: !4846)
!4852 = !DILocation(line: 4517, column: 3, scope: !4846)
!4853 = !DILocation(line: 4517, column: 7, scope: !4846)
!4854 = !DILocation(line: 4517, column: 20, scope: !4846)
!4855 = !DILocation(line: 4521, column: 48, scope: !4744)
!4856 = !DILocation(line: 4521, column: 52, scope: !4744)
!4857 = !DILocation(line: 4521, column: 21, scope: !4744)
!4858 = !DILocation(line: 4521, column: 2, scope: !4744)
!4859 = !DILocation(line: 4521, column: 6, scope: !4744)
!4860 = !DILocation(line: 4521, column: 19, scope: !4744)
!4861 = !DILocation(line: 4525, column: 26, scope: !4744)
!4862 = !DILocation(line: 4525, column: 12, scope: !4744)
!4863 = !DILocation(line: 4525, column: 2, scope: !4744)
!4864 = !DILocation(line: 4525, column: 6, scope: !4744)
!4865 = !DILocation(line: 4525, column: 10, scope: !4744)
!4866 = !DILocation(line: 4526, column: 34, scope: !4744)
!4867 = !DILocation(line: 4526, column: 13, scope: !4744)
!4868 = !DILocation(line: 4526, column: 2, scope: !4744)
!4869 = !DILocation(line: 4526, column: 6, scope: !4744)
!4870 = !DILocation(line: 4526, column: 11, scope: !4744)
!4871 = !DILocation(line: 4527, column: 25, scope: !4744)
!4872 = !DILocation(line: 4527, column: 11, scope: !4744)
!4873 = !DILocation(line: 4527, column: 2, scope: !4744)
!4874 = !DILocation(line: 4527, column: 6, scope: !4744)
!4875 = !DILocation(line: 4527, column: 9, scope: !4744)
!4876 = !DILocation(line: 4529, column: 14, scope: !4744)
!4877 = !DILocation(line: 4529, column: 2, scope: !4744)
!4878 = !DILocation(line: 4529, column: 6, scope: !4744)
!4879 = !DILocation(line: 4529, column: 12, scope: !4744)
!4880 = !DILocation(line: 4530, column: 11, scope: !4744)
!4881 = !DILocation(line: 4530, column: 2, scope: !4744)
!4882 = !DILocation(line: 4530, column: 6, scope: !4744)
!4883 = !DILocation(line: 4530, column: 9, scope: !4744)
!4884 = !DILocation(line: 4532, column: 27, scope: !4744)
!4885 = !DILocation(line: 4532, column: 37, scope: !4744)
!4886 = !DILocation(line: 4532, column: 46, scope: !4744)
!4887 = !DILocation(line: 4532, column: 51, scope: !4744)
!4888 = !DILocation(line: 4532, column: 26, scope: !4744)
!4889 = !DILocation(line: 4532, column: 2, scope: !4744)
!4890 = !DILocation(line: 4532, column: 6, scope: !4744)
!4891 = !DILocation(line: 4532, column: 24, scope: !4744)
!4892 = !DILocation(line: 4533, column: 20, scope: !4744)
!4893 = !DILocation(line: 4533, column: 30, scope: !4744)
!4894 = !DILocation(line: 4533, column: 39, scope: !4744)
!4895 = !DILocation(line: 4533, column: 2, scope: !4744)
!4896 = !DILocation(line: 4533, column: 6, scope: !4744)
!4897 = !DILocation(line: 4533, column: 18, scope: !4744)
!4898 = !DILocation(line: 4534, column: 21, scope: !4744)
!4899 = !DILocation(line: 4534, column: 25, scope: !4744)
!4900 = !DILocation(line: 4534, column: 19, scope: !4744)
!4901 = !DILocation(line: 4535, column: 19, scope: !4744)
!4902 = !DILocation(line: 4535, column: 29, scope: !4744)
!4903 = !DILocation(line: 4535, column: 38, scope: !4744)
!4904 = !DILocation(line: 4534, column: 2, scope: !4744)
!4905 = !DILocation(line: 4534, column: 6, scope: !4744)
!4906 = !DILocation(line: 4534, column: 17, scope: !4744)
!4907 = !DILocation(line: 4536, column: 20, scope: !4744)
!4908 = !DILocation(line: 4536, column: 24, scope: !4744)
!4909 = !DILocation(line: 4536, column: 18, scope: !4744)
!4910 = !DILocation(line: 4537, column: 18, scope: !4744)
!4911 = !DILocation(line: 4537, column: 28, scope: !4744)
!4912 = !DILocation(line: 4537, column: 37, scope: !4744)
!4913 = !DILocation(line: 4536, column: 2, scope: !4744)
!4914 = !DILocation(line: 4536, column: 6, scope: !4744)
!4915 = !DILocation(line: 4536, column: 16, scope: !4744)
!4916 = !DILocation(line: 4540, column: 6, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 4540, column: 6)
!4918 = !DILocation(line: 4540, column: 10, scope: !4917)
!4919 = !DILocation(line: 4540, column: 15, scope: !4917)
!4920 = !DILocation(line: 4540, column: 6, scope: !4744)
!4921 = !DILocation(line: 4541, column: 26, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 4540, column: 35)
!4923 = !DILocation(line: 4541, column: 36, scope: !4922)
!4924 = !DILocation(line: 4541, column: 45, scope: !4922)
!4925 = !DILocation(line: 4541, column: 50, scope: !4922)
!4926 = !DILocation(line: 4541, column: 25, scope: !4922)
!4927 = !DILocation(line: 4541, column: 3, scope: !4922)
!4928 = !DILocation(line: 4541, column: 7, scope: !4922)
!4929 = !DILocation(line: 4541, column: 23, scope: !4922)
!4930 = !DILocation(line: 4542, column: 21, scope: !4922)
!4931 = !DILocation(line: 4542, column: 31, scope: !4922)
!4932 = !DILocation(line: 4542, column: 40, scope: !4922)
!4933 = !DILocation(line: 4542, column: 45, scope: !4922)
!4934 = !DILocation(line: 4542, column: 20, scope: !4922)
!4935 = !DILocation(line: 4542, column: 3, scope: !4922)
!4936 = !DILocation(line: 4542, column: 7, scope: !4922)
!4937 = !DILocation(line: 4542, column: 18, scope: !4922)
!4938 = !DILocation(line: 4543, column: 25, scope: !4922)
!4939 = !DILocation(line: 4543, column: 35, scope: !4922)
!4940 = !DILocation(line: 4543, column: 44, scope: !4922)
!4941 = !DILocation(line: 4543, column: 49, scope: !4922)
!4942 = !DILocation(line: 4543, column: 24, scope: !4922)
!4943 = !DILocation(line: 4543, column: 3, scope: !4922)
!4944 = !DILocation(line: 4543, column: 7, scope: !4922)
!4945 = !DILocation(line: 4543, column: 22, scope: !4922)
!4946 = !DILocation(line: 4544, column: 2, scope: !4922)
!4947 = !DILocation(line: 4546, column: 42, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 4545, column: 7)
!4949 = !DILocation(line: 4546, column: 46, scope: !4948)
!4950 = !DILocation(line: 4546, column: 61, scope: !4948)
!4951 = !DILocation(line: 4546, column: 25, scope: !4948)
!4952 = !DILocation(line: 4546, column: 29, scope: !4948)
!4953 = !DILocation(line: 4546, column: 40, scope: !4948)
!4954 = !DILocation(line: 4546, column: 3, scope: !4948)
!4955 = !DILocation(line: 4546, column: 7, scope: !4948)
!4956 = !DILocation(line: 4546, column: 23, scope: !4948)
!4957 = !DILocation(line: 4548, column: 61, scope: !4744)
!4958 = !DILocation(line: 4548, column: 29, scope: !4744)
!4959 = !DILocation(line: 4548, column: 2, scope: !4744)
!4960 = !DILocation(line: 4548, column: 6, scope: !4744)
!4961 = !DILocation(line: 4548, column: 27, scope: !4744)
!4962 = !DILocation(line: 4550, column: 6, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 4550, column: 6)
!4964 = !DILocation(line: 4550, column: 10, scope: !4963)
!4965 = !DILocation(line: 4550, column: 15, scope: !4963)
!4966 = !DILocation(line: 4550, column: 6, scope: !4744)
!4967 = !DILocation(line: 4551, column: 25, scope: !4963)
!4968 = !DILocation(line: 4551, column: 35, scope: !4963)
!4969 = !DILocation(line: 4551, column: 44, scope: !4963)
!4970 = !DILocation(line: 4551, column: 49, scope: !4963)
!4971 = !DILocation(line: 4551, column: 24, scope: !4963)
!4972 = !DILocation(line: 4551, column: 3, scope: !4963)
!4973 = !DILocation(line: 4551, column: 7, scope: !4963)
!4974 = !DILocation(line: 4551, column: 22, scope: !4963)
!4975 = !DILocation(line: 4554, column: 26, scope: !4744)
!4976 = !DILocation(line: 4554, column: 30, scope: !4744)
!4977 = !DILocation(line: 4554, column: 36, scope: !4744)
!4978 = !DILocation(line: 4554, column: 39, scope: !4744)
!4979 = !DILocation(line: 4554, column: 43, scope: !4744)
!4980 = !DILocation(line: 4554, column: 50, scope: !4744)
!4981 = !DILocation(line: 4554, column: 66, scope: !4744)
!4982 = !DILocation(line: 0, scope: !4744)
!4983 = !DILocation(line: 4554, column: 25, scope: !4744)
!4984 = !DILocation(line: 4554, column: 2, scope: !4744)
!4985 = !DILocation(line: 4554, column: 6, scope: !4744)
!4986 = !DILocation(line: 4554, column: 23, scope: !4744)
!4987 = !DILocation(line: 4556, column: 27, scope: !4744)
!4988 = !DILocation(line: 4556, column: 37, scope: !4744)
!4989 = !DILocation(line: 4556, column: 46, scope: !4744)
!4990 = !DILocation(line: 4556, column: 51, scope: !4744)
!4991 = !DILocation(line: 4556, column: 87, scope: !4744)
!4992 = !DILocation(line: 4557, column: 28, scope: !4744)
!4993 = !DILocation(line: 4557, column: 32, scope: !4744)
!4994 = !DILocation(line: 4557, column: 27, scope: !4744)
!4995 = !DILocation(line: 4557, column: 50, scope: !4744)
!4996 = !DILocation(line: 4557, column: 53, scope: !4744)
!4997 = !DILocation(line: 4557, column: 57, scope: !4744)
!4998 = !DILocation(line: 4556, column: 25, scope: !4744)
!4999 = !DILocation(line: 4556, column: 2, scope: !4744)
!5000 = !DILocation(line: 4556, column: 6, scope: !4744)
!5001 = !DILocation(line: 4556, column: 23, scope: !4744)
!5002 = !DILocation(line: 4558, column: 31, scope: !4744)
!5003 = !DILocation(line: 4558, column: 41, scope: !4744)
!5004 = !DILocation(line: 4558, column: 50, scope: !4744)
!5005 = !DILocation(line: 4558, column: 55, scope: !4744)
!5006 = !DILocation(line: 4558, column: 95, scope: !4744)
!5007 = !DILocation(line: 4558, column: 29, scope: !4744)
!5008 = !DILocation(line: 4558, column: 2, scope: !4744)
!5009 = !DILocation(line: 4558, column: 6, scope: !4744)
!5010 = !DILocation(line: 4558, column: 27, scope: !4744)
!5011 = !DILocation(line: 4562, column: 22, scope: !4744)
!5012 = !DILocation(line: 4562, column: 32, scope: !4744)
!5013 = !DILocation(line: 4562, column: 41, scope: !4744)
!5014 = !DILocation(line: 4562, column: 2, scope: !4744)
!5015 = !DILocation(line: 4562, column: 6, scope: !4744)
!5016 = !DILocation(line: 4562, column: 20, scope: !4744)
!5017 = !DILocation(line: 4565, column: 6, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 4565, column: 6)
!5019 = !DILocation(line: 4565, column: 10, scope: !5018)
!5020 = !DILocation(line: 4565, column: 6, scope: !4744)
!5021 = !DILocation(line: 4566, column: 28, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5018, file: !3, line: 4565, column: 26)
!5023 = !DILocation(line: 4566, column: 38, scope: !5022)
!5024 = !DILocation(line: 4566, column: 47, scope: !5022)
!5025 = !DILocation(line: 4566, column: 3, scope: !5022)
!5026 = !DILocation(line: 4566, column: 7, scope: !5022)
!5027 = !DILocation(line: 4566, column: 26, scope: !5022)
!5028 = !DILocation(line: 4567, column: 23, scope: !5022)
!5029 = !DILocation(line: 4567, column: 27, scope: !5022)
!5030 = !DILocation(line: 4567, column: 46, scope: !5022)
!5031 = !DILocation(line: 4567, column: 55, scope: !5022)
!5032 = !DILocation(line: 4567, column: 3, scope: !5022)
!5033 = !DILocation(line: 4567, column: 7, scope: !5022)
!5034 = !DILocation(line: 4567, column: 20, scope: !5022)
!5035 = !DILocation(line: 4568, column: 2, scope: !5022)
!5036 = !DILocation(line: 4570, column: 47, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5018, file: !3, line: 4569, column: 7)
!5038 = !DILocation(line: 4570, column: 57, scope: !5037)
!5039 = !DILocation(line: 4570, column: 66, scope: !5037)
!5040 = !DILocation(line: 4570, column: 28, scope: !5037)
!5041 = !DILocation(line: 4570, column: 32, scope: !5037)
!5042 = !DILocation(line: 4570, column: 45, scope: !5037)
!5043 = !DILocation(line: 4570, column: 3, scope: !5037)
!5044 = !DILocation(line: 4570, column: 7, scope: !5037)
!5045 = !DILocation(line: 4570, column: 26, scope: !5037)
!5046 = !DILocation(line: 4573, column: 2, scope: !4744)
!5047 = !DILocation(line: 4573, column: 6, scope: !4744)
!5048 = !DILocation(line: 4573, column: 25, scope: !4744)
!5049 = !DILocation(line: 4574, column: 2, scope: !4744)
!5050 = !DILocation(line: 4574, column: 6, scope: !4744)
!5051 = !DILocation(line: 4574, column: 19, scope: !4744)
!5052 = !DILocation(line: 4575, column: 27, scope: !4744)
!5053 = !DILocation(line: 4575, column: 31, scope: !4744)
!5054 = !DILocation(line: 4575, column: 46, scope: !4744)
!5055 = !DILocation(line: 4575, column: 50, scope: !4744)
!5056 = !DILocation(line: 4575, column: 44, scope: !4744)
!5057 = !DILocation(line: 4575, column: 2, scope: !4744)
!5058 = !DILocation(line: 4575, column: 6, scope: !4744)
!5059 = !DILocation(line: 4575, column: 25, scope: !4744)
!5060 = !DILocation(line: 4577, column: 6, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 4577, column: 6)
!5062 = !DILocation(line: 4577, column: 10, scope: !5061)
!5063 = !DILocation(line: 4577, column: 29, scope: !5061)
!5064 = !DILocation(line: 4577, column: 6, scope: !4744)
!5065 = !DILocation(line: 4578, column: 3, scope: !5061)
!5066 = !DILocation(line: 4578, column: 7, scope: !5061)
!5067 = !DILocation(line: 4578, column: 22, scope: !5061)
!5068 = !DILocation(line: 4580, column: 2, scope: !4744)
!5069 = distinct !DISubprogram(name: "project_paint_begin", scope: !3, file: !3, line: 2903, type: !5070, scopeLine: 2904, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!5070 = !DISubroutineType(types: !5071)
!5071 = !{null, !3674}
!5072 = !DILocalVariable(name: "ps", arg: 1, scope: !5069, file: !3, line: 2903, type: !3674)
!5073 = !DILocation(line: 2903, column: 49, scope: !5069)
!5074 = !DILocalVariable(name: "mat", scope: !5069, file: !3, line: 2906, type: !246)
!5075 = !DILocation(line: 2906, column: 8, scope: !5069)
!5076 = !DILocalVariable(name: "no", scope: !5069, file: !3, line: 2908, type: !183)
!5077 = !DILocation(line: 2908, column: 8, scope: !5069)
!5078 = !DILocalVariable(name: "projScreenCo", scope: !5069, file: !3, line: 2910, type: !216)
!5079 = !DILocation(line: 2910, column: 9, scope: !5069)
!5080 = !DILocalVariable(name: "projMargin", scope: !5069, file: !3, line: 2911, type: !184)
!5081 = !DILocation(line: 2911, column: 8, scope: !5069)
!5082 = !DILocalVariable(name: "image_LinkList", scope: !5069, file: !3, line: 2914, type: !3874)
!5083 = !DILocation(line: 2914, column: 12, scope: !5069)
!5084 = !DILocalVariable(name: "node", scope: !5069, file: !3, line: 2915, type: !3874)
!5085 = !DILocation(line: 2915, column: 12, scope: !5069)
!5086 = !DILocalVariable(name: "projIma", scope: !5069, file: !3, line: 2917, type: !3887)
!5087 = !DILocation(line: 2917, column: 18, scope: !5069)
!5088 = !DILocalVariable(name: "tpage_last", scope: !5069, file: !3, line: 2918, type: !3861)
!5089 = !DILocation(line: 2918, column: 9, scope: !5069)
!5090 = !DILocalVariable(name: "tpage", scope: !5069, file: !3, line: 2918, type: !3861)
!5091 = !DILocation(line: 2918, column: 29, scope: !5069)
!5092 = !DILocalVariable(name: "slot_last", scope: !5069, file: !3, line: 2919, type: !5093)
!5093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5094, size: 64)
!5094 = !DIDerivedType(tag: DW_TAG_typedef, name: "TexPaintSlot", file: !380, line: 91, baseType: !1546)
!5095 = !DILocation(line: 2919, column: 16, scope: !5069)
!5096 = !DILocalVariable(name: "slot", scope: !5069, file: !3, line: 2919, type: !5093)
!5097 = !DILocation(line: 2919, column: 35, scope: !5069)
!5098 = !DILocalVariable(name: "slot_last_clone", scope: !5069, file: !3, line: 2920, type: !5093)
!5099 = !DILocation(line: 2920, column: 16, scope: !5069)
!5100 = !DILocalVariable(name: "slot_clone", scope: !5069, file: !3, line: 2920, type: !5093)
!5101 = !DILocation(line: 2920, column: 41, scope: !5069)
!5102 = !DILocalVariable(name: "mpoly_orig", scope: !5069, file: !3, line: 2923, type: !5103)
!5103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5104, size: 64)
!5104 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPoly", file: !180, line: 85, baseType: !193)
!5105 = !DILocation(line: 2923, column: 9, scope: !5069)
!5106 = !DILocalVariable(name: "mf", scope: !5069, file: !3, line: 2924, type: !3852)
!5107 = !DILocation(line: 2924, column: 9, scope: !5069)
!5108 = !DILocalVariable(name: "tf", scope: !5069, file: !3, line: 2925, type: !3855)
!5109 = !DILocation(line: 2925, column: 11, scope: !5069)
!5110 = !DILocalVariable(name: "tf_base", scope: !5069, file: !3, line: 2926, type: !3856)
!5111 = !DILocation(line: 2926, column: 10, scope: !5069)
!5112 = !DILocalVariable(name: "tf_clone", scope: !5069, file: !3, line: 2928, type: !3855)
!5113 = !DILocation(line: 2928, column: 11, scope: !5069)
!5114 = !DILocalVariable(name: "tf_clone_base", scope: !5069, file: !3, line: 2929, type: !3856)
!5115 = !DILocation(line: 2929, column: 10, scope: !5069)
!5116 = !DILocalVariable(name: "a", scope: !5069, file: !3, line: 2931, type: !22)
!5117 = !DILocation(line: 2931, column: 6, scope: !5069)
!5118 = !DILocalVariable(name: "i", scope: !5069, file: !3, line: 2931, type: !22)
!5119 = !DILocation(line: 2931, column: 9, scope: !5069)
!5120 = !DILocalVariable(name: "image_index", scope: !5069, file: !3, line: 2932, type: !22)
!5121 = !DILocation(line: 2932, column: 6, scope: !5069)
!5122 = !DILocalVariable(name: "face_index", scope: !5069, file: !3, line: 2932, type: !22)
!5123 = !DILocation(line: 2932, column: 24, scope: !5069)
!5124 = !DILocalVariable(name: "index_mf_to_mpoly", scope: !5069, file: !3, line: 2935, type: !5125)
!5125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5126, size: 64)
!5126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !22)
!5127 = !DILocation(line: 2935, column: 13, scope: !5069)
!5128 = !DILocalVariable(name: "index_mp_to_orig", scope: !5069, file: !3, line: 2936, type: !5125)
!5129 = !DILocation(line: 2936, column: 13, scope: !5069)
!5130 = !DILocalVariable(name: "mv", scope: !5069, file: !3, line: 2938, type: !3849)
!5131 = !DILocation(line: 2938, column: 9, scope: !5069)
!5132 = !DILocalVariable(name: "arena", scope: !5069, file: !3, line: 2940, type: !3868)
!5133 = !DILocation(line: 2940, column: 12, scope: !5069)
!5134 = !DILocalVariable(name: "diameter", scope: !5069, file: !3, line: 2942, type: !5126)
!5135 = !DILocation(line: 2942, column: 12, scope: !5069)
!5136 = !DILocation(line: 2942, column: 46, scope: !5069)
!5137 = !DILocation(line: 2942, column: 50, scope: !5069)
!5138 = !DILocation(line: 2942, column: 57, scope: !5069)
!5139 = !DILocation(line: 2942, column: 61, scope: !5069)
!5140 = !DILocation(line: 2942, column: 27, scope: !5069)
!5141 = !DILocation(line: 2942, column: 25, scope: !5069)
!5142 = !DILocalVariable(name: "reset_threads", scope: !5069, file: !3, line: 2944, type: !233)
!5143 = !DILocation(line: 2944, column: 7, scope: !5069)
!5144 = !DILocation(line: 2948, column: 6, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 2948, column: 6)
!5146 = !DILocation(line: 2948, column: 10, scope: !5145)
!5147 = !DILocation(line: 2948, column: 17, scope: !5145)
!5148 = !DILocation(line: 2948, column: 6, scope: !5069)
!5149 = !DILocation(line: 2949, column: 28, scope: !5145)
!5150 = !DILocation(line: 2949, column: 32, scope: !5145)
!5151 = !DILocation(line: 2949, column: 38, scope: !5145)
!5152 = !DILocation(line: 2949, column: 42, scope: !5145)
!5153 = !DILocation(line: 2949, column: 46, scope: !5145)
!5154 = !DILocation(line: 2949, column: 3, scope: !5145)
!5155 = !DILocation(line: 2951, column: 31, scope: !5069)
!5156 = !DILocation(line: 2951, column: 35, scope: !5069)
!5157 = !DILocation(line: 2951, column: 39, scope: !5069)
!5158 = !DILocation(line: 2951, column: 23, scope: !5069)
!5159 = !DILocation(line: 2951, column: 46, scope: !5069)
!5160 = !DILocation(line: 2951, column: 22, scope: !5069)
!5161 = !DILocation(line: 2951, column: 55, scope: !5069)
!5162 = !DILocation(line: 2951, column: 81, scope: !5069)
!5163 = !DILocation(line: 2951, column: 20, scope: !5069)
!5164 = !DILocation(line: 2951, column: 2, scope: !5069)
!5165 = !DILocation(line: 2951, column: 6, scope: !5069)
!5166 = !DILocation(line: 2951, column: 18, scope: !5069)
!5167 = !DILocation(line: 2956, column: 6, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 2956, column: 6)
!5169 = !DILocation(line: 2956, column: 10, scope: !5168)
!5170 = !DILocation(line: 2956, column: 17, scope: !5168)
!5171 = !DILocation(line: 2956, column: 6, scope: !5069)
!5172 = !DILocation(line: 2958, column: 39, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5168, file: !3, line: 2956, column: 40)
!5174 = !DILocation(line: 2958, column: 43, scope: !5173)
!5175 = !DILocation(line: 2958, column: 50, scope: !5173)
!5176 = !DILocation(line: 2958, column: 54, scope: !5173)
!5177 = !DILocation(line: 2958, column: 58, scope: !5173)
!5178 = !DILocation(line: 2958, column: 62, scope: !5173)
!5179 = !DILocation(line: 2958, column: 69, scope: !5173)
!5180 = !DILocation(line: 2958, column: 85, scope: !5173)
!5181 = !DILocation(line: 2958, column: 12, scope: !5173)
!5182 = !DILocation(line: 2958, column: 3, scope: !5173)
!5183 = !DILocation(line: 2958, column: 7, scope: !5173)
!5184 = !DILocation(line: 2958, column: 10, scope: !5173)
!5185 = !DILocation(line: 2959, column: 3, scope: !5173)
!5186 = !DILocation(line: 2959, column: 7, scope: !5173)
!5187 = !DILocation(line: 2959, column: 18, scope: !5173)
!5188 = !DILocation(line: 2960, column: 2, scope: !5173)
!5189 = !DILocation(line: 2961, column: 11, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5168, file: !3, line: 2961, column: 11)
!5191 = !DILocation(line: 2961, column: 15, scope: !5190)
!5192 = !DILocation(line: 2961, column: 19, scope: !5190)
!5193 = !DILocation(line: 2961, column: 32, scope: !5190)
!5194 = !DILocation(line: 2962, column: 33, scope: !5190)
!5195 = !DILocation(line: 2962, column: 37, scope: !5190)
!5196 = !DILocation(line: 2962, column: 41, scope: !5190)
!5197 = !DILocation(line: 2962, column: 55, scope: !5190)
!5198 = !DILocation(line: 2962, column: 11, scope: !5190)
!5199 = !DILocation(line: 2962, column: 76, scope: !5190)
!5200 = !DILocation(line: 2963, column: 12, scope: !5190)
!5201 = !DILocation(line: 2963, column: 16, scope: !5190)
!5202 = !DILocation(line: 2963, column: 28, scope: !5190)
!5203 = !DILocation(line: 2963, column: 37, scope: !5190)
!5204 = !DILocation(line: 2963, column: 62, scope: !5190)
!5205 = !DILocation(line: 2963, column: 66, scope: !5190)
!5206 = !DILocation(line: 2963, column: 70, scope: !5190)
!5207 = !DILocation(line: 2963, column: 84, scope: !5190)
!5208 = !DILocation(line: 2963, column: 40, scope: !5190)
!5209 = !DILocation(line: 2961, column: 11, scope: !5168)
!5210 = !DILocation(line: 2965, column: 12, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 2964, column: 2)
!5212 = !DILocation(line: 2965, column: 16, scope: !5211)
!5213 = !DILocation(line: 2965, column: 20, scope: !5211)
!5214 = !DILocation(line: 2965, column: 3, scope: !5211)
!5215 = !DILocation(line: 2965, column: 7, scope: !5211)
!5216 = !DILocation(line: 2965, column: 10, scope: !5211)
!5217 = !DILocation(line: 2966, column: 3, scope: !5211)
!5218 = !DILocation(line: 2966, column: 7, scope: !5211)
!5219 = !DILocation(line: 2966, column: 18, scope: !5211)
!5220 = !DILocation(line: 2967, column: 2, scope: !5211)
!5221 = !DILocation(line: 2970, column: 16, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 2968, column: 7)
!5223 = !DILocation(line: 2970, column: 20, scope: !5222)
!5224 = !DILocation(line: 2970, column: 27, scope: !5222)
!5225 = !DILocation(line: 2970, column: 31, scope: !5222)
!5226 = !DILocation(line: 2971, column: 16, scope: !5222)
!5227 = !DILocation(line: 2971, column: 20, scope: !5222)
!5228 = !DILocation(line: 2971, column: 27, scope: !5222)
!5229 = !DILocation(line: 2971, column: 43, scope: !5222)
!5230 = !DILocation(line: 2971, column: 63, scope: !5222)
!5231 = !DILocation(line: 2971, column: 67, scope: !5222)
!5232 = !DILocation(line: 2971, column: 62, scope: !5222)
!5233 = !DILocation(line: 2971, column: 60, scope: !5222)
!5234 = !DILocation(line: 2969, column: 12, scope: !5222)
!5235 = !DILocation(line: 2969, column: 3, scope: !5222)
!5236 = !DILocation(line: 2969, column: 7, scope: !5222)
!5237 = !DILocation(line: 2969, column: 10, scope: !5222)
!5238 = !DILocation(line: 2972, column: 3, scope: !5222)
!5239 = !DILocation(line: 2972, column: 7, scope: !5222)
!5240 = !DILocation(line: 2972, column: 18, scope: !5222)
!5241 = !DILocation(line: 2975, column: 29, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 2975, column: 6)
!5243 = !DILocation(line: 2975, column: 33, scope: !5242)
!5244 = !DILocation(line: 2975, column: 37, scope: !5242)
!5245 = !DILocation(line: 2975, column: 7, scope: !5242)
!5246 = !DILocation(line: 2975, column: 6, scope: !5069)
!5247 = !DILocation(line: 2977, column: 7, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 2977, column: 7)
!5249 = distinct !DILexicalBlock(scope: !5242, file: !3, line: 2975, column: 59)
!5250 = !DILocation(line: 2977, column: 11, scope: !5248)
!5251 = !DILocation(line: 2977, column: 7, scope: !5249)
!5252 = !DILocation(line: 2978, column: 4, scope: !5248)
!5253 = !DILocation(line: 2978, column: 8, scope: !5248)
!5254 = !DILocation(line: 2978, column: 12, scope: !5248)
!5255 = !DILocation(line: 2978, column: 20, scope: !5248)
!5256 = !DILocation(line: 2978, column: 24, scope: !5248)
!5257 = !DILocation(line: 2980, column: 3, scope: !5249)
!5258 = !DILocation(line: 2980, column: 7, scope: !5249)
!5259 = !DILocation(line: 2980, column: 10, scope: !5249)
!5260 = !DILocation(line: 2981, column: 3, scope: !5249)
!5261 = !DILocation(line: 2984, column: 22, scope: !5069)
!5262 = !DILocation(line: 2984, column: 26, scope: !5069)
!5263 = !DILocation(line: 2984, column: 30, scope: !5069)
!5264 = !DILocation(line: 2984, column: 34, scope: !5069)
!5265 = !DILocation(line: 2984, column: 2, scope: !5069)
!5266 = !DILocation(line: 2986, column: 19, scope: !5069)
!5267 = !DILocation(line: 2986, column: 23, scope: !5069)
!5268 = !DILocation(line: 2986, column: 27, scope: !5069)
!5269 = !DILocation(line: 2986, column: 39, scope: !5069)
!5270 = !DILocation(line: 2986, column: 43, scope: !5069)
!5271 = !DILocation(line: 2986, column: 2, scope: !5069)
!5272 = !DILocation(line: 2986, column: 6, scope: !5069)
!5273 = !DILocation(line: 2986, column: 17, scope: !5069)
!5274 = !DILocation(line: 2987, column: 19, scope: !5069)
!5275 = !DILocation(line: 2987, column: 23, scope: !5069)
!5276 = !DILocation(line: 2987, column: 27, scope: !5069)
!5277 = !DILocation(line: 2987, column: 43, scope: !5069)
!5278 = !DILocation(line: 2987, column: 47, scope: !5069)
!5279 = !DILocation(line: 2987, column: 2, scope: !5069)
!5280 = !DILocation(line: 2987, column: 6, scope: !5069)
!5281 = !DILocation(line: 2987, column: 17, scope: !5069)
!5282 = !DILocation(line: 2989, column: 17, scope: !5069)
!5283 = !DILocation(line: 2989, column: 21, scope: !5069)
!5284 = !DILocation(line: 2989, column: 25, scope: !5069)
!5285 = !DILocation(line: 2989, column: 38, scope: !5069)
!5286 = !DILocation(line: 2989, column: 42, scope: !5069)
!5287 = !DILocation(line: 2989, column: 2, scope: !5069)
!5288 = !DILocation(line: 2989, column: 6, scope: !5069)
!5289 = !DILocation(line: 2989, column: 15, scope: !5069)
!5290 = !DILocation(line: 2990, column: 17, scope: !5069)
!5291 = !DILocation(line: 2990, column: 21, scope: !5069)
!5292 = !DILocation(line: 2990, column: 25, scope: !5069)
!5293 = !DILocation(line: 2990, column: 42, scope: !5069)
!5294 = !DILocation(line: 2990, column: 46, scope: !5069)
!5295 = !DILocation(line: 2990, column: 2, scope: !5069)
!5296 = !DILocation(line: 2990, column: 6, scope: !5069)
!5297 = !DILocation(line: 2990, column: 15, scope: !5069)
!5298 = !DILocation(line: 2991, column: 18, scope: !5069)
!5299 = !DILocation(line: 2991, column: 30, scope: !5069)
!5300 = !DILocation(line: 2991, column: 34, scope: !5069)
!5301 = !DILocation(line: 2991, column: 45, scope: !5069)
!5302 = !DILocation(line: 2991, column: 2, scope: !5069)
!5303 = !DILocation(line: 2991, column: 6, scope: !5069)
!5304 = !DILocation(line: 2991, column: 16, scope: !5069)
!5305 = !DILocation(line: 2993, column: 6, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 2993, column: 6)
!5307 = !DILocation(line: 2993, column: 10, scope: !5306)
!5308 = !DILocation(line: 2993, column: 6, scope: !5069)
!5309 = !DILocation(line: 2994, column: 23, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5306, file: !3, line: 2993, column: 23)
!5311 = !DILocation(line: 2994, column: 27, scope: !5310)
!5312 = !DILocation(line: 2994, column: 31, scope: !5310)
!5313 = !DILocation(line: 2994, column: 52, scope: !5310)
!5314 = !DILocation(line: 2994, column: 56, scope: !5310)
!5315 = !DILocation(line: 2994, column: 21, scope: !5310)
!5316 = !DILocation(line: 2995, column: 23, scope: !5310)
!5317 = !DILocation(line: 2995, column: 27, scope: !5310)
!5318 = !DILocation(line: 2995, column: 31, scope: !5310)
!5319 = !DILocation(line: 2995, column: 48, scope: !5310)
!5320 = !DILocation(line: 2995, column: 52, scope: !5310)
!5321 = !DILocation(line: 2995, column: 21, scope: !5310)
!5322 = !DILocation(line: 2996, column: 7, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 2996, column: 7)
!5324 = !DILocation(line: 2996, column: 25, scope: !5323)
!5325 = !DILocation(line: 2996, column: 7, scope: !5310)
!5326 = !DILocation(line: 2997, column: 21, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 2996, column: 34)
!5328 = !DILocation(line: 2998, column: 3, scope: !5327)
!5329 = !DILocation(line: 3000, column: 26, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 2999, column: 8)
!5331 = !DILocation(line: 3000, column: 30, scope: !5330)
!5332 = !DILocation(line: 3000, column: 34, scope: !5330)
!5333 = !DILocation(line: 3000, column: 18, scope: !5330)
!5334 = !DILocation(line: 3000, column: 41, scope: !5330)
!5335 = !DILocation(line: 3000, column: 15, scope: !5330)
!5336 = !DILocation(line: 3002, column: 2, scope: !5310)
!5337 = !DILocation(line: 3004, column: 14, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5306, file: !3, line: 3003, column: 7)
!5339 = !DILocation(line: 3008, column: 6, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 3008, column: 6)
!5341 = !DILocation(line: 3008, column: 10, scope: !5340)
!5342 = !DILocation(line: 3008, column: 6, scope: !5069)
!5343 = !DILocation(line: 3009, column: 25, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 3008, column: 26)
!5345 = !DILocation(line: 3009, column: 37, scope: !5344)
!5346 = !DILocation(line: 3009, column: 41, scope: !5344)
!5347 = !DILocation(line: 3009, column: 52, scope: !5344)
!5348 = !DILocation(line: 3009, column: 3, scope: !5344)
!5349 = !DILocation(line: 3009, column: 7, scope: !5344)
!5350 = !DILocation(line: 3009, column: 23, scope: !5344)
!5351 = !DILocation(line: 3010, column: 2, scope: !5344)
!5352 = !DILocation(line: 3012, column: 6, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 3012, column: 6)
!5354 = !DILocation(line: 3012, column: 10, scope: !5353)
!5355 = !DILocation(line: 3012, column: 27, scope: !5353)
!5356 = !DILocation(line: 3012, column: 30, scope: !5353)
!5357 = !DILocation(line: 3012, column: 34, scope: !5353)
!5358 = !DILocation(line: 3012, column: 6, scope: !5069)
!5359 = !DILocalVariable(name: "layer_num", scope: !5360, file: !3, line: 3014, type: !22)
!5360 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 3012, column: 52)
!5361 = !DILocation(line: 3014, column: 7, scope: !5360)
!5362 = !DILocation(line: 3014, column: 58, scope: !5360)
!5363 = !DILocation(line: 3014, column: 62, scope: !5360)
!5364 = !DILocation(line: 3014, column: 66, scope: !5360)
!5365 = !DILocation(line: 3014, column: 50, scope: !5360)
!5366 = !DILocation(line: 3014, column: 73, scope: !5360)
!5367 = !DILocation(line: 3014, column: 19, scope: !5360)
!5368 = !DILocation(line: 3015, column: 7, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5360, file: !3, line: 3015, column: 7)
!5370 = !DILocation(line: 3015, column: 17, scope: !5369)
!5371 = !DILocation(line: 3015, column: 7, scope: !5360)
!5372 = !DILocation(line: 3016, column: 52, scope: !5369)
!5373 = !DILocation(line: 3016, column: 56, scope: !5369)
!5374 = !DILocation(line: 3016, column: 60, scope: !5369)
!5375 = !DILocation(line: 3016, column: 81, scope: !5369)
!5376 = !DILocation(line: 3016, column: 28, scope: !5369)
!5377 = !DILocation(line: 3016, column: 4, scope: !5369)
!5378 = !DILocation(line: 3016, column: 8, scope: !5369)
!5379 = !DILocation(line: 3016, column: 26, scope: !5369)
!5380 = !DILocation(line: 3018, column: 7, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5360, file: !3, line: 3018, column: 7)
!5382 = !DILocation(line: 3018, column: 11, scope: !5381)
!5383 = !DILocation(line: 3018, column: 29, scope: !5381)
!5384 = !DILocation(line: 3018, column: 7, scope: !5360)
!5385 = !DILocation(line: 3020, column: 50, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5381, file: !3, line: 3018, column: 38)
!5387 = !DILocation(line: 3020, column: 54, scope: !5386)
!5388 = !DILocation(line: 3020, column: 58, scope: !5386)
!5389 = !DILocation(line: 3020, column: 28, scope: !5386)
!5390 = !DILocation(line: 3020, column: 4, scope: !5386)
!5391 = !DILocation(line: 3020, column: 8, scope: !5386)
!5392 = !DILocation(line: 3020, column: 26, scope: !5386)
!5393 = !DILocation(line: 3021, column: 3, scope: !5386)
!5394 = !DILocation(line: 3023, column: 7, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5360, file: !3, line: 3023, column: 7)
!5396 = !DILocation(line: 3023, column: 11, scope: !5395)
!5397 = !DILocation(line: 3023, column: 7, scope: !5360)
!5398 = !DILocation(line: 3024, column: 14, scope: !5395)
!5399 = !DILocation(line: 3024, column: 18, scope: !5395)
!5400 = !DILocation(line: 3024, column: 12, scope: !5395)
!5401 = !DILocation(line: 3024, column: 4, scope: !5395)
!5402 = !DILocation(line: 3025, column: 2, scope: !5360)
!5403 = !DILocation(line: 3027, column: 6, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 3027, column: 6)
!5405 = !DILocation(line: 3027, column: 10, scope: !5404)
!5406 = !DILocation(line: 3027, column: 6, scope: !5069)
!5407 = !DILocalVariable(name: "layer_num", scope: !5408, file: !3, line: 3028, type: !22)
!5408 = distinct !DILexicalBlock(scope: !5404, file: !3, line: 3027, column: 26)
!5409 = !DILocation(line: 3028, column: 7, scope: !5408)
!5410 = !DILocation(line: 3028, column: 56, scope: !5408)
!5411 = !DILocation(line: 3028, column: 60, scope: !5408)
!5412 = !DILocation(line: 3028, column: 64, scope: !5408)
!5413 = !DILocation(line: 3028, column: 48, scope: !5408)
!5414 = !DILocation(line: 3028, column: 71, scope: !5408)
!5415 = !DILocation(line: 3028, column: 19, scope: !5408)
!5416 = !DILocation(line: 3030, column: 7, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5408, file: !3, line: 3030, column: 7)
!5418 = !DILocation(line: 3030, column: 17, scope: !5417)
!5419 = !DILocation(line: 3030, column: 7, scope: !5408)
!5420 = !DILocation(line: 3031, column: 44, scope: !5417)
!5421 = !DILocation(line: 3031, column: 48, scope: !5417)
!5422 = !DILocation(line: 3031, column: 52, scope: !5417)
!5423 = !DILocation(line: 3031, column: 73, scope: !5417)
!5424 = !DILocation(line: 3031, column: 20, scope: !5417)
!5425 = !DILocation(line: 3031, column: 18, scope: !5417)
!5426 = !DILocation(line: 3031, column: 4, scope: !5417)
!5427 = !DILocation(line: 3033, column: 7, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5408, file: !3, line: 3033, column: 7)
!5429 = !DILocation(line: 3033, column: 21, scope: !5428)
!5430 = !DILocation(line: 3033, column: 7, scope: !5408)
!5431 = !DILocation(line: 3035, column: 42, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5428, file: !3, line: 3033, column: 30)
!5433 = !DILocation(line: 3035, column: 46, scope: !5432)
!5434 = !DILocation(line: 3035, column: 50, scope: !5432)
!5435 = !DILocation(line: 3035, column: 20, scope: !5432)
!5436 = !DILocation(line: 3035, column: 18, scope: !5432)
!5437 = !DILocation(line: 3036, column: 3, scope: !5432)
!5438 = !DILocation(line: 3038, column: 2, scope: !5408)
!5439 = !DILocation(line: 3041, column: 6, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 3041, column: 6)
!5441 = !DILocation(line: 3041, column: 10, scope: !5440)
!5442 = !DILocation(line: 3041, column: 14, scope: !5440)
!5443 = !DILocation(line: 3041, column: 19, scope: !5440)
!5444 = !DILocation(line: 3041, column: 6, scope: !5069)
!5445 = !DILocation(line: 3042, column: 18, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 3041, column: 36)
!5447 = !DILocation(line: 3042, column: 32, scope: !5446)
!5448 = !DILocation(line: 3042, column: 36, scope: !5446)
!5449 = !DILocation(line: 3042, column: 3, scope: !5446)
!5450 = !DILocation(line: 3042, column: 7, scope: !5446)
!5451 = !DILocation(line: 3042, column: 16, scope: !5446)
!5452 = !DILocation(line: 3043, column: 18, scope: !5446)
!5453 = !DILocation(line: 3043, column: 32, scope: !5446)
!5454 = !DILocation(line: 3043, column: 36, scope: !5446)
!5455 = !DILocation(line: 3043, column: 3, scope: !5446)
!5456 = !DILocation(line: 3043, column: 7, scope: !5446)
!5457 = !DILocation(line: 3043, column: 16, scope: !5446)
!5458 = !DILocation(line: 3050, column: 2, scope: !5446)
!5459 = !DILocation(line: 3052, column: 2, scope: !5069)
!5460 = !DILocation(line: 3052, column: 6, scope: !5069)
!5461 = !DILocation(line: 3052, column: 17, scope: !5069)
!5462 = !DILocation(line: 3053, column: 2, scope: !5069)
!5463 = !DILocation(line: 3053, column: 6, scope: !5069)
!5464 = !DILocation(line: 3053, column: 17, scope: !5069)
!5465 = !DILocation(line: 3054, column: 2, scope: !5069)
!5466 = !DILocation(line: 3054, column: 6, scope: !5069)
!5467 = !DILocation(line: 3054, column: 17, scope: !5069)
!5468 = !DILocalVariable(name: "viewmat", scope: !5469, file: !3, line: 3057, type: !1335)
!5469 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 3056, column: 2)
!5470 = !DILocation(line: 3057, column: 9, scope: !5469)
!5471 = !DILocalVariable(name: "viewinv", scope: !5469, file: !3, line: 3058, type: !1335)
!5472 = !DILocation(line: 3058, column: 9, scope: !5469)
!5473 = !DILocation(line: 3060, column: 16, scope: !5469)
!5474 = !DILocation(line: 3060, column: 20, scope: !5469)
!5475 = !DILocation(line: 3060, column: 24, scope: !5469)
!5476 = !DILocation(line: 3060, column: 30, scope: !5469)
!5477 = !DILocation(line: 3060, column: 34, scope: !5469)
!5478 = !DILocation(line: 3060, column: 38, scope: !5469)
!5479 = !DILocation(line: 3060, column: 3, scope: !5469)
!5480 = !DILocation(line: 3062, column: 7, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5469, file: !3, line: 3062, column: 7)
!5482 = !DILocation(line: 3062, column: 11, scope: !5481)
!5483 = !DILocation(line: 3062, column: 18, scope: !5481)
!5484 = !DILocation(line: 3062, column: 7, scope: !5469)
!5485 = !DILocation(line: 3064, column: 15, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5481, file: !3, line: 3062, column: 36)
!5487 = !DILocation(line: 3064, column: 19, scope: !5486)
!5488 = !DILocation(line: 3064, column: 23, scope: !5486)
!5489 = !DILocation(line: 3064, column: 4, scope: !5486)
!5490 = !DILocation(line: 3064, column: 8, scope: !5486)
!5491 = !DILocation(line: 3064, column: 13, scope: !5486)
!5492 = !DILocation(line: 3065, column: 15, scope: !5486)
!5493 = !DILocation(line: 3065, column: 19, scope: !5486)
!5494 = !DILocation(line: 3065, column: 23, scope: !5486)
!5495 = !DILocation(line: 3065, column: 4, scope: !5486)
!5496 = !DILocation(line: 3065, column: 8, scope: !5486)
!5497 = !DILocation(line: 3065, column: 13, scope: !5486)
!5498 = !DILocation(line: 3067, column: 15, scope: !5486)
!5499 = !DILocation(line: 3067, column: 24, scope: !5486)
!5500 = !DILocation(line: 3067, column: 28, scope: !5486)
!5501 = !DILocation(line: 3067, column: 34, scope: !5486)
!5502 = !DILocation(line: 3067, column: 4, scope: !5486)
!5503 = !DILocation(line: 3068, column: 15, scope: !5486)
!5504 = !DILocation(line: 3068, column: 24, scope: !5486)
!5505 = !DILocation(line: 3068, column: 28, scope: !5486)
!5506 = !DILocation(line: 3068, column: 34, scope: !5486)
!5507 = !DILocation(line: 3068, column: 4, scope: !5486)
!5508 = !DILocation(line: 3070, column: 33, scope: !5486)
!5509 = !DILocation(line: 3070, column: 37, scope: !5486)
!5510 = !DILocation(line: 3070, column: 43, scope: !5486)
!5511 = !DILocation(line: 3070, column: 47, scope: !5486)
!5512 = !DILocation(line: 3070, column: 51, scope: !5486)
!5513 = !DILocation(line: 3070, column: 55, scope: !5486)
!5514 = !DILocation(line: 3070, column: 4, scope: !5486)
!5515 = !DILocation(line: 3072, column: 44, scope: !5486)
!5516 = !DILocation(line: 3072, column: 48, scope: !5486)
!5517 = !DILocation(line: 3072, column: 53, scope: !5486)
!5518 = !DILocation(line: 3072, column: 57, scope: !5486)
!5519 = !DILocation(line: 3072, column: 64, scope: !5486)
!5520 = !DILocation(line: 3072, column: 68, scope: !5486)
!5521 = !DILocation(line: 3072, column: 78, scope: !5486)
!5522 = !DILocation(line: 3072, column: 82, scope: !5486)
!5523 = !DILocation(line: 3072, column: 19, scope: !5486)
!5524 = !DILocation(line: 3072, column: 4, scope: !5486)
!5525 = !DILocation(line: 3072, column: 8, scope: !5486)
!5526 = !DILocation(line: 3072, column: 17, scope: !5486)
!5527 = !DILocation(line: 3073, column: 3, scope: !5486)
!5528 = !DILocalVariable(name: "winmat", scope: !5529, file: !3, line: 3076, type: !1335)
!5529 = distinct !DILexicalBlock(scope: !5481, file: !3, line: 3074, column: 8)
!5530 = !DILocation(line: 3076, column: 10, scope: !5529)
!5531 = !DILocalVariable(name: "vmat", scope: !5529, file: !3, line: 3077, type: !1335)
!5532 = !DILocation(line: 3077, column: 10, scope: !5529)
!5533 = !DILocation(line: 3079, column: 15, scope: !5529)
!5534 = !DILocation(line: 3079, column: 19, scope: !5529)
!5535 = !DILocation(line: 3079, column: 35, scope: !5529)
!5536 = !DILocation(line: 3079, column: 4, scope: !5529)
!5537 = !DILocation(line: 3079, column: 8, scope: !5529)
!5538 = !DILocation(line: 3079, column: 13, scope: !5529)
!5539 = !DILocation(line: 3080, column: 15, scope: !5529)
!5540 = !DILocation(line: 3080, column: 19, scope: !5529)
!5541 = !DILocation(line: 3080, column: 35, scope: !5529)
!5542 = !DILocation(line: 3080, column: 4, scope: !5529)
!5543 = !DILocation(line: 3080, column: 8, scope: !5529)
!5544 = !DILocation(line: 3080, column: 13, scope: !5529)
!5545 = !DILocation(line: 3082, column: 8, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5529, file: !3, line: 3082, column: 8)
!5547 = !DILocation(line: 3082, column: 12, scope: !5546)
!5548 = !DILocation(line: 3082, column: 19, scope: !5546)
!5549 = !DILocation(line: 3082, column: 8, scope: !5529)
!5550 = !DILocalVariable(name: "idgroup", scope: !5551, file: !3, line: 3084, type: !37)
!5551 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 3082, column: 43)
!5552 = !DILocation(line: 3084, column: 17, scope: !5551)
!5553 = !DILocation(line: 3084, column: 46, scope: !5551)
!5554 = !DILocation(line: 3084, column: 50, scope: !5551)
!5555 = !DILocation(line: 3084, column: 67, scope: !5551)
!5556 = !DILocation(line: 3084, column: 27, scope: !5551)
!5557 = !DILocalVariable(name: "view_data", scope: !5551, file: !3, line: 3085, type: !37)
!5558 = !DILocation(line: 3085, column: 17, scope: !5551)
!5559 = !DILocation(line: 3085, column: 54, scope: !5551)
!5560 = !DILocation(line: 3085, column: 29, scope: !5551)
!5561 = !DILocalVariable(name: "array", scope: !5551, file: !3, line: 3087, type: !1944)
!5562 = !DILocation(line: 3087, column: 18, scope: !5551)
!5563 = !DILocation(line: 3087, column: 35, scope: !5551)
!5564 = !DILocation(line: 3087, column: 26, scope: !5551)
!5565 = !DILocation(line: 3090, column: 5, scope: !5551)
!5566 = !DILocation(line: 3090, column: 20, scope: !5551)
!5567 = !DILocation(line: 3090, column: 50, scope: !5551)
!5568 = !DILocation(line: 3091, column: 5, scope: !5551)
!5569 = !DILocation(line: 3091, column: 21, scope: !5551)
!5570 = !DILocation(line: 3091, column: 52, scope: !5551)
!5571 = !DILocation(line: 3092, column: 19, scope: !5551)
!5572 = !DILocation(line: 3092, column: 5, scope: !5551)
!5573 = !DILocation(line: 3092, column: 9, scope: !5551)
!5574 = !DILocation(line: 3092, column: 17, scope: !5551)
!5575 = !DILocation(line: 3093, column: 19, scope: !5551)
!5576 = !DILocation(line: 3093, column: 5, scope: !5551)
!5577 = !DILocation(line: 3093, column: 9, scope: !5551)
!5578 = !DILocation(line: 3093, column: 17, scope: !5551)
!5579 = !DILocation(line: 3094, column: 20, scope: !5551)
!5580 = !DILocation(line: 3094, column: 5, scope: !5551)
!5581 = !DILocation(line: 3094, column: 9, scope: !5551)
!5582 = !DILocation(line: 3094, column: 18, scope: !5551)
!5583 = !DILocation(line: 3096, column: 18, scope: !5551)
!5584 = !DILocation(line: 3096, column: 27, scope: !5551)
!5585 = !DILocation(line: 3096, column: 5, scope: !5551)
!5586 = !DILocation(line: 3097, column: 4, scope: !5551)
!5587 = !DILocation(line: 3098, column: 13, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 3098, column: 13)
!5589 = !DILocation(line: 3098, column: 17, scope: !5588)
!5590 = !DILocation(line: 3098, column: 24, scope: !5588)
!5591 = !DILocation(line: 3098, column: 13, scope: !5546)
!5592 = !DILocalVariable(name: "cam_ob", scope: !5593, file: !3, line: 3099, type: !3842)
!5593 = distinct !DILexicalBlock(scope: !5588, file: !3, line: 3098, column: 47)
!5594 = !DILocation(line: 3099, column: 13, scope: !5593)
!5595 = !DILocation(line: 3099, column: 22, scope: !5593)
!5596 = !DILocation(line: 3099, column: 26, scope: !5593)
!5597 = !DILocation(line: 3099, column: 33, scope: !5593)
!5598 = !DILocalVariable(name: "params", scope: !5593, file: !3, line: 3100, type: !5599)
!5599 = !DIDerivedType(tag: DW_TAG_typedef, name: "CameraParams", file: !5600, line: 104, baseType: !5601)
!5600 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_camera.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CameraParams", file: !5600, line: 70, size: 1248, elements: !5602)
!5602 = !{!5603, !5604, !5605, !5606, !5607, !5608, !5609, !5610, !5611, !5612, !5613, !5614, !5615, !5616, !5617, !5618, !5619, !5620, !5621, !5622, !5623}
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "is_ortho", scope: !5601, file: !5600, line: 72, baseType: !233, size: 8)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !5601, file: !5600, line: 73, baseType: !184, size: 32, offset: 32)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "ortho_scale", scope: !5601, file: !5600, line: 74, baseType: !184, size: 32, offset: 64)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !5601, file: !5600, line: 75, baseType: !184, size: 32, offset: 96)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "shiftx", scope: !5601, file: !5600, line: 77, baseType: !184, size: 32, offset: 128)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "shifty", scope: !5601, file: !5600, line: 78, baseType: !184, size: 32, offset: 160)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "offsetx", scope: !5601, file: !5600, line: 79, baseType: !184, size: 32, offset: 192)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "offsety", scope: !5601, file: !5600, line: 80, baseType: !184, size: 32, offset: 224)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_x", scope: !5601, file: !5600, line: 83, baseType: !184, size: 32, offset: 256)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_y", scope: !5601, file: !5600, line: 84, baseType: !184, size: 32, offset: 288)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_fit", scope: !5601, file: !5600, line: 85, baseType: !22, size: 32, offset: 320)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !5601, file: !5600, line: 88, baseType: !184, size: 32, offset: 352)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !5601, file: !5600, line: 89, baseType: !184, size: 32, offset: 384)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "use_fields", scope: !5601, file: !5600, line: 92, baseType: !22, size: 32, offset: 416)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "field_second", scope: !5601, file: !5600, line: 93, baseType: !22, size: 32, offset: 448)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "field_odd", scope: !5601, file: !5600, line: 94, baseType: !22, size: 32, offset: 480)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "ycor", scope: !5601, file: !5600, line: 97, baseType: !184, size: 32, offset: 512)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "viewdx", scope: !5601, file: !5600, line: 98, baseType: !184, size: 32, offset: 544)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "viewdy", scope: !5601, file: !5600, line: 99, baseType: !184, size: 32, offset: 576)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "viewplane", scope: !5601, file: !5600, line: 100, baseType: !840, size: 128, offset: 608)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !5601, file: !5600, line: 103, baseType: !1335, size: 512, offset: 736)
!5624 = !DILocation(line: 3100, column: 18, scope: !5593)
!5625 = !DILocation(line: 3103, column: 16, scope: !5593)
!5626 = !DILocation(line: 3103, column: 25, scope: !5593)
!5627 = !DILocation(line: 3103, column: 33, scope: !5593)
!5628 = !DILocation(line: 3103, column: 5, scope: !5593)
!5629 = !DILocation(line: 3104, column: 18, scope: !5593)
!5630 = !DILocation(line: 3104, column: 5, scope: !5593)
!5631 = !DILocation(line: 3105, column: 18, scope: !5593)
!5632 = !DILocation(line: 3105, column: 27, scope: !5593)
!5633 = !DILocation(line: 3105, column: 5, scope: !5593)
!5634 = !DILocation(line: 3108, column: 5, scope: !5593)
!5635 = !DILocation(line: 3109, column: 44, scope: !5593)
!5636 = !DILocation(line: 3109, column: 5, scope: !5593)
!5637 = !DILocation(line: 3110, column: 50, scope: !5593)
!5638 = !DILocation(line: 3110, column: 54, scope: !5593)
!5639 = !DILocation(line: 3110, column: 60, scope: !5593)
!5640 = !DILocation(line: 3110, column: 64, scope: !5593)
!5641 = !DILocation(line: 3110, column: 5, scope: !5593)
!5642 = !DILocation(line: 3111, column: 5, scope: !5593)
!5643 = !DILocation(line: 3113, column: 16, scope: !5593)
!5644 = !DILocation(line: 3113, column: 31, scope: !5593)
!5645 = !DILocation(line: 3113, column: 24, scope: !5593)
!5646 = !DILocation(line: 3113, column: 5, scope: !5593)
!5647 = !DILocation(line: 3114, column: 26, scope: !5593)
!5648 = !DILocation(line: 3114, column: 5, scope: !5593)
!5649 = !DILocation(line: 3114, column: 9, scope: !5593)
!5650 = !DILocation(line: 3114, column: 17, scope: !5593)
!5651 = !DILocation(line: 3115, column: 26, scope: !5593)
!5652 = !DILocation(line: 3115, column: 5, scope: !5593)
!5653 = !DILocation(line: 3115, column: 9, scope: !5593)
!5654 = !DILocation(line: 3115, column: 17, scope: !5593)
!5655 = !DILocation(line: 3116, column: 27, scope: !5593)
!5656 = !DILocation(line: 3116, column: 5, scope: !5593)
!5657 = !DILocation(line: 3116, column: 9, scope: !5593)
!5658 = !DILocation(line: 3116, column: 18, scope: !5593)
!5659 = !DILocation(line: 3117, column: 4, scope: !5593)
!5660 = !DILocation(line: 3120, column: 16, scope: !5529)
!5661 = !DILocation(line: 3120, column: 22, scope: !5529)
!5662 = !DILocation(line: 3120, column: 31, scope: !5529)
!5663 = !DILocation(line: 3120, column: 35, scope: !5529)
!5664 = !DILocation(line: 3120, column: 39, scope: !5529)
!5665 = !DILocation(line: 3120, column: 4, scope: !5529)
!5666 = !DILocation(line: 3121, column: 16, scope: !5529)
!5667 = !DILocation(line: 3121, column: 20, scope: !5529)
!5668 = !DILocation(line: 3121, column: 32, scope: !5529)
!5669 = !DILocation(line: 3121, column: 40, scope: !5529)
!5670 = !DILocation(line: 3121, column: 4, scope: !5529)
!5671 = !DILocation(line: 3126, column: 16, scope: !5469)
!5672 = !DILocation(line: 3126, column: 20, scope: !5469)
!5673 = !DILocation(line: 3126, column: 24, scope: !5469)
!5674 = !DILocation(line: 3126, column: 30, scope: !5469)
!5675 = !DILocation(line: 3126, column: 34, scope: !5469)
!5676 = !DILocation(line: 3126, column: 38, scope: !5469)
!5677 = !DILocation(line: 3126, column: 3, scope: !5469)
!5678 = !DILocation(line: 3127, column: 14, scope: !5469)
!5679 = !DILocation(line: 3127, column: 19, scope: !5469)
!5680 = !DILocation(line: 3127, column: 3, scope: !5469)
!5681 = !DILocation(line: 3128, column: 13, scope: !5469)
!5682 = !DILocation(line: 3128, column: 18, scope: !5469)
!5683 = !DILocation(line: 3128, column: 22, scope: !5469)
!5684 = !DILocation(line: 3128, column: 3, scope: !5469)
!5685 = !DILocation(line: 3129, column: 14, scope: !5469)
!5686 = !DILocation(line: 3129, column: 19, scope: !5469)
!5687 = !DILocation(line: 3129, column: 23, scope: !5469)
!5688 = !DILocation(line: 3129, column: 27, scope: !5469)
!5689 = !DILocation(line: 3129, column: 3, scope: !5469)
!5690 = !DILocation(line: 3130, column: 13, scope: !5469)
!5691 = !DILocation(line: 3130, column: 18, scope: !5469)
!5692 = !DILocation(line: 3130, column: 22, scope: !5469)
!5693 = !DILocation(line: 3130, column: 3, scope: !5469)
!5694 = !DILocation(line: 3131, column: 16, scope: !5469)
!5695 = !DILocation(line: 3131, column: 20, scope: !5469)
!5696 = !DILocation(line: 3131, column: 3, scope: !5469)
!5697 = !DILocation(line: 3134, column: 14, scope: !5469)
!5698 = !DILocation(line: 3134, column: 18, scope: !5469)
!5699 = !DILocation(line: 3134, column: 27, scope: !5469)
!5700 = !DILocation(line: 3134, column: 3, scope: !5469)
!5701 = !DILocation(line: 3135, column: 14, scope: !5469)
!5702 = !DILocation(line: 3135, column: 19, scope: !5469)
!5703 = !DILocation(line: 3135, column: 23, scope: !5469)
!5704 = !DILocation(line: 3135, column: 27, scope: !5469)
!5705 = !DILocation(line: 3135, column: 3, scope: !5469)
!5706 = !DILocation(line: 3136, column: 13, scope: !5469)
!5707 = !DILocation(line: 3136, column: 18, scope: !5469)
!5708 = !DILocation(line: 3136, column: 22, scope: !5469)
!5709 = !DILocation(line: 3136, column: 3, scope: !5469)
!5710 = !DILocation(line: 3137, column: 13, scope: !5469)
!5711 = !DILocation(line: 3137, column: 17, scope: !5469)
!5712 = !DILocation(line: 3137, column: 26, scope: !5469)
!5713 = !DILocation(line: 3137, column: 30, scope: !5469)
!5714 = !DILocation(line: 3137, column: 34, scope: !5469)
!5715 = !DILocation(line: 3137, column: 3, scope: !5469)
!5716 = !DILocation(line: 3142, column: 2, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 3142, column: 2)
!5718 = !DILocation(line: 3144, column: 21, scope: !5069)
!5719 = !DILocation(line: 3144, column: 49, scope: !5069)
!5720 = !DILocation(line: 3144, column: 53, scope: !5069)
!5721 = !DILocation(line: 3144, column: 47, scope: !5069)
!5722 = !DILocation(line: 3144, column: 64, scope: !5069)
!5723 = !DILocation(line: 3144, column: 2, scope: !5069)
!5724 = !DILocation(line: 3144, column: 6, scope: !5069)
!5725 = !DILocation(line: 3144, column: 19, scope: !5069)
!5726 = !DILocation(line: 3145, column: 18, scope: !5069)
!5727 = !DILocation(line: 3145, column: 22, scope: !5069)
!5728 = !DILocation(line: 3145, column: 17, scope: !5069)
!5729 = !DILocation(line: 3145, column: 15, scope: !5069)
!5730 = !DILocation(line: 3147, column: 6, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 3147, column: 6)
!5732 = !DILocation(line: 3147, column: 10, scope: !5731)
!5733 = !DILocation(line: 3147, column: 6, scope: !5069)
!5734 = !DILocation(line: 3148, column: 10, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 3148, column: 3)
!5736 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 3147, column: 20)
!5737 = !DILocation(line: 3148, column: 20, scope: !5735)
!5738 = !DILocation(line: 3148, column: 24, scope: !5735)
!5739 = !DILocation(line: 3148, column: 18, scope: !5735)
!5740 = !DILocation(line: 3148, column: 8, scope: !5735)
!5741 = !DILocation(line: 3148, column: 34, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 3148, column: 3)
!5743 = !DILocation(line: 3148, column: 38, scope: !5742)
!5744 = !DILocation(line: 3148, column: 42, scope: !5742)
!5745 = !DILocation(line: 3148, column: 36, scope: !5742)
!5746 = !DILocation(line: 3148, column: 3, scope: !5735)
!5747 = !DILocation(line: 3149, column: 16, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5742, file: !3, line: 3148, column: 84)
!5749 = !DILocation(line: 3149, column: 30, scope: !5748)
!5750 = !DILocation(line: 3149, column: 34, scope: !5748)
!5751 = !DILocation(line: 3149, column: 46, scope: !5748)
!5752 = !DILocation(line: 3149, column: 50, scope: !5748)
!5753 = !DILocation(line: 3149, column: 4, scope: !5748)
!5754 = !DILocation(line: 3152, column: 30, scope: !5748)
!5755 = !DILocation(line: 3152, column: 34, scope: !5748)
!5756 = !DILocation(line: 3152, column: 39, scope: !5748)
!5757 = !DILocation(line: 3152, column: 50, scope: !5748)
!5758 = !DILocation(line: 3152, column: 54, scope: !5748)
!5759 = !DILocation(line: 3152, column: 59, scope: !5748)
!5760 = !DILocation(line: 3152, column: 69, scope: !5748)
!5761 = !DILocation(line: 3152, column: 67, scope: !5748)
!5762 = !DILocation(line: 3152, column: 47, scope: !5748)
!5763 = !DILocation(line: 3152, column: 4, scope: !5748)
!5764 = !DILocation(line: 3152, column: 20, scope: !5748)
!5765 = !DILocation(line: 3153, column: 30, scope: !5748)
!5766 = !DILocation(line: 3153, column: 34, scope: !5748)
!5767 = !DILocation(line: 3153, column: 39, scope: !5748)
!5768 = !DILocation(line: 3153, column: 50, scope: !5748)
!5769 = !DILocation(line: 3153, column: 54, scope: !5748)
!5770 = !DILocation(line: 3153, column: 59, scope: !5748)
!5771 = !DILocation(line: 3153, column: 69, scope: !5748)
!5772 = !DILocation(line: 3153, column: 67, scope: !5748)
!5773 = !DILocation(line: 3153, column: 47, scope: !5748)
!5774 = !DILocation(line: 3153, column: 4, scope: !5748)
!5775 = !DILocation(line: 3153, column: 20, scope: !5748)
!5776 = !DILocation(line: 3154, column: 19, scope: !5748)
!5777 = !DILocation(line: 3154, column: 23, scope: !5748)
!5778 = !DILocation(line: 3154, column: 34, scope: !5748)
!5779 = !DILocation(line: 3154, column: 38, scope: !5748)
!5780 = !DILocation(line: 3154, column: 49, scope: !5748)
!5781 = !DILocation(line: 3154, column: 4, scope: !5748)
!5782 = !DILocation(line: 3155, column: 3, scope: !5748)
!5783 = !DILocation(line: 3148, column: 55, scope: !5742)
!5784 = !DILocation(line: 3148, column: 61, scope: !5742)
!5785 = !DILocation(line: 3148, column: 78, scope: !5742)
!5786 = !DILocation(line: 3148, column: 3, scope: !5742)
!5787 = distinct !{!5787, !5746, !5788}
!5788 = !DILocation(line: 3155, column: 3, scope: !5735)
!5789 = !DILocation(line: 3156, column: 2, scope: !5736)
!5790 = !DILocation(line: 3158, column: 10, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5792, file: !3, line: 3158, column: 3)
!5792 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 3157, column: 7)
!5793 = !DILocation(line: 3158, column: 20, scope: !5791)
!5794 = !DILocation(line: 3158, column: 24, scope: !5791)
!5795 = !DILocation(line: 3158, column: 18, scope: !5791)
!5796 = !DILocation(line: 3158, column: 8, scope: !5791)
!5797 = !DILocation(line: 3158, column: 34, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5791, file: !3, line: 3158, column: 3)
!5799 = !DILocation(line: 3158, column: 38, scope: !5798)
!5800 = !DILocation(line: 3158, column: 42, scope: !5798)
!5801 = !DILocation(line: 3158, column: 36, scope: !5798)
!5802 = !DILocation(line: 3158, column: 3, scope: !5791)
!5803 = !DILocation(line: 3159, column: 15, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 3158, column: 84)
!5805 = !DILocation(line: 3159, column: 29, scope: !5804)
!5806 = !DILocation(line: 3159, column: 33, scope: !5804)
!5807 = !DILocation(line: 3159, column: 4, scope: !5804)
!5808 = !DILocation(line: 3160, column: 4, scope: !5804)
!5809 = !DILocation(line: 3160, column: 20, scope: !5804)
!5810 = !DILocation(line: 3162, column: 14, scope: !5804)
!5811 = !DILocation(line: 3162, column: 18, scope: !5804)
!5812 = !DILocation(line: 3162, column: 30, scope: !5804)
!5813 = !DILocation(line: 3162, column: 4, scope: !5804)
!5814 = !DILocation(line: 3164, column: 8, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5804, file: !3, line: 3164, column: 8)
!5816 = !DILocation(line: 3164, column: 26, scope: !5815)
!5817 = !DILocation(line: 3164, column: 30, scope: !5815)
!5818 = !DILocation(line: 3164, column: 24, scope: !5815)
!5819 = !DILocation(line: 3164, column: 8, scope: !5804)
!5820 = !DILocation(line: 3166, column: 31, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5815, file: !3, line: 3164, column: 39)
!5822 = !DILocation(line: 3166, column: 35, scope: !5821)
!5823 = !DILocation(line: 3166, column: 40, scope: !5821)
!5824 = !DILocation(line: 3166, column: 51, scope: !5821)
!5825 = !DILocation(line: 3166, column: 55, scope: !5821)
!5826 = !DILocation(line: 3166, column: 60, scope: !5821)
!5827 = !DILocation(line: 3166, column: 70, scope: !5821)
!5828 = !DILocation(line: 3166, column: 68, scope: !5821)
!5829 = !DILocation(line: 3166, column: 88, scope: !5821)
!5830 = !DILocation(line: 3166, column: 86, scope: !5821)
!5831 = !DILocation(line: 3166, column: 48, scope: !5821)
!5832 = !DILocation(line: 3166, column: 5, scope: !5821)
!5833 = !DILocation(line: 3166, column: 21, scope: !5821)
!5834 = !DILocation(line: 3167, column: 31, scope: !5821)
!5835 = !DILocation(line: 3167, column: 35, scope: !5821)
!5836 = !DILocation(line: 3167, column: 40, scope: !5821)
!5837 = !DILocation(line: 3167, column: 51, scope: !5821)
!5838 = !DILocation(line: 3167, column: 55, scope: !5821)
!5839 = !DILocation(line: 3167, column: 60, scope: !5821)
!5840 = !DILocation(line: 3167, column: 70, scope: !5821)
!5841 = !DILocation(line: 3167, column: 68, scope: !5821)
!5842 = !DILocation(line: 3167, column: 88, scope: !5821)
!5843 = !DILocation(line: 3167, column: 86, scope: !5821)
!5844 = !DILocation(line: 3167, column: 48, scope: !5821)
!5845 = !DILocation(line: 3167, column: 5, scope: !5821)
!5846 = !DILocation(line: 3167, column: 21, scope: !5821)
!5847 = !DILocation(line: 3168, column: 23, scope: !5821)
!5848 = !DILocation(line: 3168, column: 41, scope: !5821)
!5849 = !DILocation(line: 3168, column: 39, scope: !5821)
!5850 = !DILocation(line: 3168, column: 5, scope: !5821)
!5851 = !DILocation(line: 3168, column: 21, scope: !5821)
!5852 = !DILocation(line: 3169, column: 20, scope: !5821)
!5853 = !DILocation(line: 3169, column: 24, scope: !5821)
!5854 = !DILocation(line: 3169, column: 35, scope: !5821)
!5855 = !DILocation(line: 3169, column: 39, scope: !5821)
!5856 = !DILocation(line: 3169, column: 50, scope: !5821)
!5857 = !DILocation(line: 3169, column: 5, scope: !5821)
!5858 = !DILocation(line: 3170, column: 4, scope: !5821)
!5859 = !DILocation(line: 3176, column: 5, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5815, file: !3, line: 3171, column: 9)
!5861 = !DILocation(line: 3176, column: 21, scope: !5860)
!5862 = !DILocation(line: 3178, column: 3, scope: !5804)
!5863 = !DILocation(line: 3158, column: 55, scope: !5798)
!5864 = !DILocation(line: 3158, column: 61, scope: !5798)
!5865 = !DILocation(line: 3158, column: 78, scope: !5798)
!5866 = !DILocation(line: 3158, column: 3, scope: !5798)
!5867 = distinct !{!5867, !5802, !5868}
!5868 = !DILocation(line: 3178, column: 3, scope: !5791)
!5869 = !DILocation(line: 3184, column: 16, scope: !5069)
!5870 = !DILocation(line: 3184, column: 20, scope: !5069)
!5871 = !DILocation(line: 3184, column: 35, scope: !5069)
!5872 = !DILocation(line: 3184, column: 39, scope: !5069)
!5873 = !DILocation(line: 3184, column: 33, scope: !5069)
!5874 = !DILocation(line: 3184, column: 53, scope: !5069)
!5875 = !DILocation(line: 3184, column: 13, scope: !5069)
!5876 = !DILocation(line: 3185, column: 22, scope: !5069)
!5877 = !DILocation(line: 3185, column: 2, scope: !5069)
!5878 = !DILocation(line: 3185, column: 6, scope: !5069)
!5879 = !DILocation(line: 3185, column: 19, scope: !5069)
!5880 = !DILocation(line: 3186, column: 22, scope: !5069)
!5881 = !DILocation(line: 3186, column: 2, scope: !5069)
!5882 = !DILocation(line: 3186, column: 6, scope: !5069)
!5883 = !DILocation(line: 3186, column: 19, scope: !5069)
!5884 = !DILocation(line: 3187, column: 16, scope: !5069)
!5885 = !DILocation(line: 3187, column: 20, scope: !5069)
!5886 = !DILocation(line: 3187, column: 35, scope: !5069)
!5887 = !DILocation(line: 3187, column: 39, scope: !5069)
!5888 = !DILocation(line: 3187, column: 33, scope: !5069)
!5889 = !DILocation(line: 3187, column: 53, scope: !5069)
!5890 = !DILocation(line: 3187, column: 13, scope: !5069)
!5891 = !DILocation(line: 3188, column: 22, scope: !5069)
!5892 = !DILocation(line: 3188, column: 2, scope: !5069)
!5893 = !DILocation(line: 3188, column: 6, scope: !5069)
!5894 = !DILocation(line: 3188, column: 19, scope: !5069)
!5895 = !DILocation(line: 3189, column: 22, scope: !5069)
!5896 = !DILocation(line: 3189, column: 2, scope: !5069)
!5897 = !DILocation(line: 3189, column: 6, scope: !5069)
!5898 = !DILocation(line: 3189, column: 19, scope: !5069)
!5899 = !DILocation(line: 3191, column: 6, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 3191, column: 6)
!5901 = !DILocation(line: 3191, column: 10, scope: !5900)
!5902 = !DILocation(line: 3191, column: 17, scope: !5900)
!5903 = !DILocation(line: 3191, column: 6, scope: !5069)
!5904 = !DILocation(line: 3193, column: 3, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5906, file: !3, line: 3193, column: 3)
!5906 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 3193, column: 3)
!5907 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 3191, column: 35)
!5908 = !DILocation(line: 3193, column: 3, scope: !5906)
!5909 = !DILocation(line: 3193, column: 3, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5905, file: !3, line: 3193, column: 3)
!5911 = !DILocation(line: 3194, column: 3, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 3194, column: 3)
!5913 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 3194, column: 3)
!5914 = !DILocation(line: 3194, column: 3, scope: !5913)
!5915 = !DILocation(line: 3194, column: 3, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5912, file: !3, line: 3194, column: 3)
!5917 = !DILocation(line: 3196, column: 3, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 3196, column: 3)
!5919 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 3196, column: 3)
!5920 = !DILocation(line: 3196, column: 3, scope: !5919)
!5921 = !DILocation(line: 3196, column: 3, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5918, file: !3, line: 3196, column: 3)
!5923 = !DILocation(line: 3197, column: 3, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 3197, column: 3)
!5925 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 3197, column: 3)
!5926 = !DILocation(line: 3197, column: 3, scope: !5925)
!5927 = !DILocation(line: 3197, column: 3, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 3197, column: 3)
!5929 = !DILocation(line: 3199, column: 2, scope: !5907)
!5930 = !DILocation(line: 3201, column: 3, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 3200, column: 7)
!5932 = !DILocation(line: 3201, column: 7, scope: !5931)
!5933 = !DILocation(line: 3201, column: 20, scope: !5931)
!5934 = !DILocation(line: 3202, column: 30, scope: !5931)
!5935 = !DILocation(line: 3202, column: 34, scope: !5931)
!5936 = !DILocation(line: 3202, column: 22, scope: !5931)
!5937 = !DILocation(line: 3202, column: 3, scope: !5931)
!5938 = !DILocation(line: 3202, column: 7, scope: !5931)
!5939 = !DILocation(line: 3202, column: 20, scope: !5931)
!5940 = !DILocation(line: 3204, column: 3, scope: !5931)
!5941 = !DILocation(line: 3204, column: 7, scope: !5931)
!5942 = !DILocation(line: 3204, column: 20, scope: !5931)
!5943 = !DILocation(line: 3205, column: 30, scope: !5931)
!5944 = !DILocation(line: 3205, column: 34, scope: !5931)
!5945 = !DILocation(line: 3205, column: 22, scope: !5931)
!5946 = !DILocation(line: 3205, column: 3, scope: !5931)
!5947 = !DILocation(line: 3205, column: 7, scope: !5931)
!5948 = !DILocation(line: 3205, column: 20, scope: !5931)
!5949 = !DILocation(line: 3209, column: 22, scope: !5069)
!5950 = !DILocation(line: 3209, column: 26, scope: !5069)
!5951 = !DILocation(line: 3209, column: 41, scope: !5069)
!5952 = !DILocation(line: 3209, column: 45, scope: !5069)
!5953 = !DILocation(line: 3209, column: 39, scope: !5069)
!5954 = !DILocation(line: 3209, column: 2, scope: !5069)
!5955 = !DILocation(line: 3209, column: 6, scope: !5069)
!5956 = !DILocation(line: 3209, column: 20, scope: !5069)
!5957 = !DILocation(line: 3210, column: 22, scope: !5069)
!5958 = !DILocation(line: 3210, column: 26, scope: !5069)
!5959 = !DILocation(line: 3210, column: 41, scope: !5069)
!5960 = !DILocation(line: 3210, column: 45, scope: !5069)
!5961 = !DILocation(line: 3210, column: 39, scope: !5069)
!5962 = !DILocation(line: 3210, column: 2, scope: !5069)
!5963 = !DILocation(line: 3210, column: 6, scope: !5069)
!5964 = !DILocation(line: 3210, column: 20, scope: !5069)
!5965 = !DILocation(line: 3212, column: 24, scope: !5069)
!5966 = !DILocation(line: 3212, column: 28, scope: !5069)
!5967 = !DILocation(line: 3212, column: 52, scope: !5069)
!5968 = !DILocation(line: 3212, column: 45, scope: !5069)
!5969 = !DILocation(line: 3212, column: 62, scope: !5069)
!5970 = !DILocation(line: 3212, column: 41, scope: !5069)
!5971 = !DILocation(line: 3212, column: 18, scope: !5069)
!5972 = !DILocation(line: 3212, column: 2, scope: !5069)
!5973 = !DILocation(line: 3212, column: 6, scope: !5069)
!5974 = !DILocation(line: 3212, column: 16, scope: !5069)
!5975 = !DILocation(line: 3213, column: 24, scope: !5069)
!5976 = !DILocation(line: 3213, column: 28, scope: !5069)
!5977 = !DILocation(line: 3213, column: 53, scope: !5069)
!5978 = !DILocation(line: 3213, column: 46, scope: !5069)
!5979 = !DILocation(line: 3213, column: 63, scope: !5069)
!5980 = !DILocation(line: 3213, column: 42, scope: !5069)
!5981 = !DILocation(line: 3213, column: 18, scope: !5069)
!5982 = !DILocation(line: 3213, column: 2, scope: !5069)
!5983 = !DILocation(line: 3213, column: 6, scope: !5069)
!5984 = !DILocation(line: 3213, column: 16, scope: !5069)
!5985 = !DILocation(line: 3217, column: 6, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 3217, column: 6)
!5987 = !DILocation(line: 3217, column: 10, scope: !5986)
!5988 = !DILocation(line: 3217, column: 20, scope: !5986)
!5989 = !DILocation(line: 3217, column: 43, scope: !5986)
!5990 = !DILocation(line: 3217, column: 46, scope: !5986)
!5991 = !DILocation(line: 3217, column: 50, scope: !5986)
!5992 = !DILocation(line: 3217, column: 60, scope: !5986)
!5993 = !DILocation(line: 3217, column: 6, scope: !5069)
!5994 = !DILocation(line: 3218, column: 17, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 3217, column: 84)
!5996 = !DILocation(line: 3219, column: 2, scope: !5995)
!5997 = !DILocation(line: 3223, column: 2, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5999, file: !3, line: 3223, column: 2)
!5999 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 3223, column: 2)
!6000 = !DILocation(line: 3223, column: 2, scope: !5999)
!6001 = !DILocation(line: 3223, column: 2, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5998, file: !3, line: 3223, column: 2)
!6003 = !DILocation(line: 3224, column: 2, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !6005, file: !3, line: 3224, column: 2)
!6005 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 3224, column: 2)
!6006 = !DILocation(line: 3224, column: 2, scope: !6005)
!6007 = !DILocation(line: 3224, column: 2, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6004, file: !3, line: 3224, column: 2)
!6009 = !DILocation(line: 3226, column: 32, scope: !5069)
!6010 = !DILocation(line: 3226, column: 65, scope: !5069)
!6011 = !DILocation(line: 3226, column: 69, scope: !5069)
!6012 = !DILocation(line: 3226, column: 63, scope: !5069)
!6013 = !DILocation(line: 3226, column: 81, scope: !5069)
!6014 = !DILocation(line: 3226, column: 85, scope: !5069)
!6015 = !DILocation(line: 3226, column: 79, scope: !5069)
!6016 = !DILocation(line: 3226, column: 19, scope: !5069)
!6017 = !DILocation(line: 3226, column: 2, scope: !5069)
!6018 = !DILocation(line: 3226, column: 6, scope: !5069)
!6019 = !DILocation(line: 3226, column: 17, scope: !5069)
!6020 = !DILocation(line: 3227, column: 33, scope: !5069)
!6021 = !DILocation(line: 3227, column: 66, scope: !5069)
!6022 = !DILocation(line: 3227, column: 70, scope: !5069)
!6023 = !DILocation(line: 3227, column: 64, scope: !5069)
!6024 = !DILocation(line: 3227, column: 82, scope: !5069)
!6025 = !DILocation(line: 3227, column: 86, scope: !5069)
!6026 = !DILocation(line: 3227, column: 80, scope: !5069)
!6027 = !DILocation(line: 3227, column: 20, scope: !5069)
!6028 = !DILocation(line: 3227, column: 2, scope: !5069)
!6029 = !DILocation(line: 3227, column: 6, scope: !5069)
!6030 = !DILocation(line: 3227, column: 18, scope: !5069)
!6031 = !DILocation(line: 3229, column: 37, scope: !5069)
!6032 = !DILocation(line: 3229, column: 64, scope: !5069)
!6033 = !DILocation(line: 3229, column: 68, scope: !5069)
!6034 = !DILocation(line: 3229, column: 62, scope: !5069)
!6035 = !DILocation(line: 3229, column: 80, scope: !5069)
!6036 = !DILocation(line: 3229, column: 84, scope: !5069)
!6037 = !DILocation(line: 3229, column: 78, scope: !5069)
!6038 = !DILocation(line: 3229, column: 2, scope: !5069)
!6039 = !DILocation(line: 3229, column: 6, scope: !5069)
!6040 = !DILocation(line: 3229, column: 18, scope: !5069)
!6041 = !DILocation(line: 3231, column: 6, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 3231, column: 6)
!6043 = !DILocation(line: 3231, column: 10, scope: !6042)
!6044 = !DILocation(line: 3231, column: 24, scope: !6042)
!6045 = !DILocation(line: 3231, column: 6, scope: !5069)
!6046 = !DILocation(line: 3232, column: 32, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 3231, column: 32)
!6048 = !DILocation(line: 3232, column: 65, scope: !6047)
!6049 = !DILocation(line: 3232, column: 69, scope: !6047)
!6050 = !DILocation(line: 3232, column: 63, scope: !6047)
!6051 = !DILocation(line: 3232, column: 19, scope: !6047)
!6052 = !DILocation(line: 3232, column: 3, scope: !6047)
!6053 = !DILocation(line: 3232, column: 7, scope: !6047)
!6054 = !DILocation(line: 3232, column: 17, scope: !6047)
!6055 = !DILocation(line: 3233, column: 31, scope: !6047)
!6056 = !DILocation(line: 3233, column: 58, scope: !6047)
!6057 = !DILocation(line: 3233, column: 62, scope: !6047)
!6058 = !DILocation(line: 3233, column: 56, scope: !6047)
!6059 = !DILocation(line: 3233, column: 3, scope: !6047)
!6060 = !DILocation(line: 3233, column: 7, scope: !6047)
!6061 = !DILocation(line: 3233, column: 21, scope: !6047)
!6062 = !DILocation(line: 3234, column: 34, scope: !6047)
!6063 = !DILocation(line: 3234, column: 61, scope: !6047)
!6064 = !DILocation(line: 3234, column: 65, scope: !6047)
!6065 = !DILocation(line: 3234, column: 59, scope: !6047)
!6066 = !DILocation(line: 3234, column: 3, scope: !6047)
!6067 = !DILocation(line: 3234, column: 7, scope: !6047)
!6068 = !DILocation(line: 3234, column: 24, scope: !6047)
!6069 = !DILocation(line: 3235, column: 21, scope: !6047)
!6070 = !DILocation(line: 3235, column: 49, scope: !6047)
!6071 = !DILocation(line: 3235, column: 53, scope: !6047)
!6072 = !DILocation(line: 3235, column: 47, scope: !6047)
!6073 = !DILocation(line: 3235, column: 64, scope: !6047)
!6074 = !DILocation(line: 3235, column: 3, scope: !6047)
!6075 = !DILocation(line: 3235, column: 7, scope: !6047)
!6076 = !DILocation(line: 3235, column: 19, scope: !6047)
!6077 = !DILocation(line: 3236, column: 2, scope: !6047)
!6078 = !DILocation(line: 3245, column: 41, scope: !5069)
!6079 = !DILocation(line: 3245, column: 45, scope: !5069)
!6080 = !DILocation(line: 3245, column: 19, scope: !5069)
!6081 = !DILocation(line: 3245, column: 2, scope: !5069)
!6082 = !DILocation(line: 3245, column: 6, scope: !5069)
!6083 = !DILocation(line: 3245, column: 17, scope: !5069)
!6084 = !DILocation(line: 3249, column: 6, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 3249, column: 6)
!6086 = !DILocation(line: 3249, column: 6, scope: !5069)
!6087 = !DILocation(line: 3250, column: 3, scope: !6085)
!6088 = !DILocation(line: 3250, column: 7, scope: !6085)
!6089 = !DILocation(line: 3250, column: 18, scope: !6085)
!6090 = !DILocation(line: 3252, column: 6, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 3252, column: 6)
!6092 = !DILocation(line: 3252, column: 10, scope: !6091)
!6093 = !DILocation(line: 3252, column: 21, scope: !6091)
!6094 = !DILocation(line: 3252, column: 6, scope: !5069)
!6095 = !DILocation(line: 3253, column: 19, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 3252, column: 26)
!6097 = !DILocation(line: 3253, column: 3, scope: !6096)
!6098 = !DILocation(line: 3253, column: 7, scope: !6096)
!6099 = !DILocation(line: 3253, column: 17, scope: !6096)
!6100 = !DILocation(line: 3254, column: 17, scope: !6096)
!6101 = !DILocation(line: 3254, column: 21, scope: !6096)
!6102 = !DILocation(line: 3254, column: 3, scope: !6096)
!6103 = !DILocation(line: 3255, column: 2, scope: !6096)
!6104 = !DILocation(line: 3257, column: 2, scope: !5069)
!6105 = !DILocation(line: 3259, column: 9, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 3259, column: 2)
!6107 = !DILocation(line: 3259, column: 7, scope: !6106)
!6108 = !DILocation(line: 3259, column: 14, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 3259, column: 2)
!6110 = !DILocation(line: 3259, column: 18, scope: !6109)
!6111 = !DILocation(line: 3259, column: 22, scope: !6109)
!6112 = !DILocation(line: 3259, column: 16, scope: !6109)
!6113 = !DILocation(line: 3259, column: 2, scope: !6106)
!6114 = !DILocation(line: 3260, column: 21, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 3259, column: 39)
!6116 = !DILocation(line: 3260, column: 3, scope: !6115)
!6117 = !DILocation(line: 3260, column: 7, scope: !6115)
!6118 = !DILocation(line: 3260, column: 16, scope: !6115)
!6119 = !DILocation(line: 3260, column: 19, scope: !6115)
!6120 = !DILocation(line: 3261, column: 2, scope: !6115)
!6121 = !DILocation(line: 3259, column: 35, scope: !6109)
!6122 = !DILocation(line: 3259, column: 2, scope: !6109)
!6123 = distinct !{!6123, !6113, !6124}
!6124 = !DILocation(line: 3261, column: 2, scope: !6106)
!6125 = !DILocation(line: 3263, column: 10, scope: !5069)
!6126 = !DILocation(line: 3263, column: 14, scope: !5069)
!6127 = !DILocation(line: 3263, column: 8, scope: !5069)
!6128 = !DILocation(line: 3265, column: 6, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 3265, column: 6)
!6130 = !DILocation(line: 3265, column: 10, scope: !6129)
!6131 = !DILocation(line: 3265, column: 26, scope: !6129)
!6132 = !DILocation(line: 3265, column: 29, scope: !6129)
!6133 = !DILocation(line: 3265, column: 33, scope: !6129)
!6134 = !DILocation(line: 3265, column: 6, scope: !5069)
!6135 = !DILocalVariable(name: "viewDirPersp", scope: !6136, file: !3, line: 3266, type: !183)
!6136 = distinct !DILexicalBlock(scope: !6129, file: !3, line: 3265, column: 49)
!6137 = !DILocation(line: 3266, column: 9, scope: !6136)
!6138 = !DILocation(line: 3268, column: 19, scope: !6136)
!6139 = !DILocation(line: 3268, column: 46, scope: !6136)
!6140 = !DILocation(line: 3268, column: 50, scope: !6136)
!6141 = !DILocation(line: 3268, column: 44, scope: !6136)
!6142 = !DILocation(line: 3268, column: 3, scope: !6136)
!6143 = !DILocation(line: 3268, column: 7, scope: !6136)
!6144 = !DILocation(line: 3268, column: 17, scope: !6136)
!6145 = !DILocation(line: 3270, column: 10, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6136, file: !3, line: 3270, column: 3)
!6147 = !DILocation(line: 3270, column: 20, scope: !6146)
!6148 = !DILocation(line: 3270, column: 24, scope: !6146)
!6149 = !DILocation(line: 3270, column: 18, scope: !6146)
!6150 = !DILocation(line: 3270, column: 8, scope: !6146)
!6151 = !DILocation(line: 3270, column: 34, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 3270, column: 3)
!6153 = !DILocation(line: 3270, column: 38, scope: !6152)
!6154 = !DILocation(line: 3270, column: 42, scope: !6152)
!6155 = !DILocation(line: 3270, column: 36, scope: !6152)
!6156 = !DILocation(line: 3270, column: 3, scope: !6146)
!6157 = !DILocation(line: 3271, column: 29, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6152, file: !3, line: 3270, column: 65)
!6159 = !DILocation(line: 3271, column: 33, scope: !6158)
!6160 = !DILocation(line: 3271, column: 37, scope: !6158)
!6161 = !DILocation(line: 3271, column: 4, scope: !6158)
!6162 = !DILocation(line: 3273, column: 8, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6158, file: !3, line: 3273, column: 8)
!6164 = !DILocation(line: 3273, column: 12, scope: !6163)
!6165 = !DILocation(line: 3273, column: 8, scope: !6158)
!6166 = !DILocation(line: 3274, column: 31, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 3274, column: 9)
!6168 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 3273, column: 22)
!6169 = !DILocation(line: 3274, column: 35, scope: !6167)
!6170 = !DILocation(line: 3274, column: 44, scope: !6167)
!6171 = !DILocation(line: 3274, column: 9, scope: !6167)
!6172 = !DILocation(line: 3274, column: 51, scope: !6167)
!6173 = !DILocation(line: 3274, column: 55, scope: !6167)
!6174 = !DILocation(line: 3274, column: 48, scope: !6167)
!6175 = !DILocation(line: 3274, column: 9, scope: !6168)
!6176 = !DILocation(line: 3275, column: 6, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6167, file: !3, line: 3274, column: 69)
!6178 = !DILocation(line: 3275, column: 10, scope: !6177)
!6179 = !DILocation(line: 3275, column: 20, scope: !6177)
!6180 = !DILocation(line: 3275, column: 23, scope: !6177)
!6181 = !DILocation(line: 3276, column: 5, scope: !6177)
!6182 = !DILocation(line: 3277, column: 4, scope: !6168)
!6183 = !DILocation(line: 3279, column: 17, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 3278, column: 9)
!6185 = !DILocation(line: 3279, column: 31, scope: !6184)
!6186 = !DILocation(line: 3279, column: 35, scope: !6184)
!6187 = !DILocation(line: 3279, column: 44, scope: !6184)
!6188 = !DILocation(line: 3279, column: 48, scope: !6184)
!6189 = !DILocation(line: 3279, column: 5, scope: !6184)
!6190 = !DILocation(line: 3280, column: 18, scope: !6184)
!6191 = !DILocation(line: 3280, column: 5, scope: !6184)
!6192 = !DILocation(line: 3281, column: 31, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 3281, column: 9)
!6194 = !DILocation(line: 3281, column: 45, scope: !6193)
!6195 = !DILocation(line: 3281, column: 9, scope: !6193)
!6196 = !DILocation(line: 3281, column: 52, scope: !6193)
!6197 = !DILocation(line: 3281, column: 56, scope: !6193)
!6198 = !DILocation(line: 3281, column: 49, scope: !6193)
!6199 = !DILocation(line: 3281, column: 9, scope: !6184)
!6200 = !DILocation(line: 3282, column: 6, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6193, file: !3, line: 3281, column: 70)
!6202 = !DILocation(line: 3282, column: 10, scope: !6201)
!6203 = !DILocation(line: 3282, column: 20, scope: !6201)
!6204 = !DILocation(line: 3282, column: 23, scope: !6201)
!6205 = !DILocation(line: 3283, column: 5, scope: !6201)
!6206 = !DILocation(line: 3285, column: 3, scope: !6158)
!6207 = !DILocation(line: 3270, column: 55, scope: !6152)
!6208 = !DILocation(line: 3270, column: 61, scope: !6152)
!6209 = !DILocation(line: 3270, column: 3, scope: !6152)
!6210 = distinct !{!6210, !6156, !6211}
!6211 = !DILocation(line: 3285, column: 3, scope: !6146)
!6212 = !DILocation(line: 3286, column: 2, scope: !6136)
!6213 = !DILocation(line: 3288, column: 18, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 3288, column: 2)
!6215 = !DILocation(line: 3288, column: 28, scope: !6214)
!6216 = !DILocation(line: 3288, column: 32, scope: !6214)
!6217 = !DILocation(line: 3288, column: 26, scope: !6214)
!6218 = !DILocation(line: 3288, column: 48, scope: !6214)
!6219 = !DILocation(line: 3288, column: 52, scope: !6214)
!6220 = !DILocation(line: 3288, column: 46, scope: !6214)
!6221 = !DILocation(line: 3288, column: 7, scope: !6214)
!6222 = !DILocation(line: 3288, column: 62, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6214, file: !3, line: 3288, column: 2)
!6224 = !DILocation(line: 3288, column: 75, scope: !6223)
!6225 = !DILocation(line: 3288, column: 79, scope: !6223)
!6226 = !DILocation(line: 3288, column: 73, scope: !6223)
!6227 = !DILocation(line: 3288, column: 2, scope: !6214)
!6228 = !DILocalVariable(name: "is_face_sel", scope: !6229, file: !3, line: 3289, type: !233)
!6229 = distinct !DILexicalBlock(scope: !6223, file: !3, line: 3288, column: 117)
!6230 = !DILocation(line: 3289, column: 8, scope: !6229)
!6231 = !DILocation(line: 3294, column: 7, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 3294, column: 7)
!6233 = !DILocation(line: 3294, column: 11, scope: !6232)
!6234 = !DILocation(line: 3294, column: 25, scope: !6232)
!6235 = !DILocation(line: 3294, column: 7, scope: !6229)
!6236 = !DILocation(line: 3295, column: 32, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 3294, column: 33)
!6238 = !DILocation(line: 3295, column: 36, scope: !6237)
!6239 = !DILocation(line: 3295, column: 46, scope: !6237)
!6240 = !DILocation(line: 3295, column: 50, scope: !6237)
!6241 = !DILocation(line: 3295, column: 55, scope: !6237)
!6242 = !DILocation(line: 3295, column: 87, scope: !6237)
!6243 = !DILocation(line: 3295, column: 4, scope: !6237)
!6244 = !DILocation(line: 3296, column: 32, scope: !6237)
!6245 = !DILocation(line: 3296, column: 36, scope: !6237)
!6246 = !DILocation(line: 3296, column: 46, scope: !6237)
!6247 = !DILocation(line: 3296, column: 50, scope: !6237)
!6248 = !DILocation(line: 3296, column: 55, scope: !6237)
!6249 = !DILocation(line: 3296, column: 87, scope: !6237)
!6250 = !DILocation(line: 3296, column: 4, scope: !6237)
!6251 = !DILocation(line: 3297, column: 32, scope: !6237)
!6252 = !DILocation(line: 3297, column: 36, scope: !6237)
!6253 = !DILocation(line: 3297, column: 46, scope: !6237)
!6254 = !DILocation(line: 3297, column: 50, scope: !6237)
!6255 = !DILocation(line: 3297, column: 55, scope: !6237)
!6256 = !DILocation(line: 3297, column: 87, scope: !6237)
!6257 = !DILocation(line: 3297, column: 4, scope: !6237)
!6258 = !DILocation(line: 3298, column: 8, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6237, file: !3, line: 3298, column: 8)
!6260 = !DILocation(line: 3298, column: 12, scope: !6259)
!6261 = !DILocation(line: 3298, column: 8, scope: !6237)
!6262 = !DILocation(line: 3299, column: 33, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6259, file: !3, line: 3298, column: 16)
!6264 = !DILocation(line: 3299, column: 37, scope: !6263)
!6265 = !DILocation(line: 3299, column: 47, scope: !6263)
!6266 = !DILocation(line: 3299, column: 51, scope: !6263)
!6267 = !DILocation(line: 3299, column: 56, scope: !6263)
!6268 = !DILocation(line: 3299, column: 88, scope: !6263)
!6269 = !DILocation(line: 3299, column: 5, scope: !6263)
!6270 = !DILocation(line: 3300, column: 4, scope: !6263)
!6271 = !DILocation(line: 3301, column: 3, scope: !6237)
!6272 = !DILocation(line: 3304, column: 7, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 3304, column: 7)
!6274 = !DILocation(line: 3304, column: 11, scope: !6273)
!6275 = !DILocation(line: 3304, column: 7, scope: !6229)
!6276 = !DILocalVariable(name: "orig_index", scope: !6277, file: !3, line: 3305, type: !22)
!6277 = distinct !DILexicalBlock(scope: !6273, file: !3, line: 3304, column: 24)
!6278 = !DILocation(line: 3305, column: 8, scope: !6277)
!6279 = !DILocation(line: 3306, column: 8, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6277, file: !3, line: 3306, column: 8)
!6281 = !DILocation(line: 3306, column: 25, scope: !6280)
!6282 = !DILocation(line: 3306, column: 68, scope: !6280)
!6283 = !DILocation(line: 3306, column: 87, scope: !6280)
!6284 = !DILocation(line: 3307, column: 68, scope: !6280)
!6285 = !DILocation(line: 3306, column: 43, scope: !6280)
!6286 = !DILocation(line: 3306, column: 41, scope: !6280)
!6287 = !DILocation(line: 3307, column: 82, scope: !6280)
!6288 = !DILocation(line: 3306, column: 8, scope: !6277)
!6289 = !DILocalVariable(name: "mp", scope: !6290, file: !3, line: 3309, type: !5103)
!6290 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 3308, column: 4)
!6291 = !DILocation(line: 3309, column: 12, scope: !6290)
!6292 = !DILocation(line: 3309, column: 18, scope: !6290)
!6293 = !DILocation(line: 3309, column: 29, scope: !6290)
!6294 = !DILocation(line: 3310, column: 21, scope: !6290)
!6295 = !DILocation(line: 3310, column: 25, scope: !6290)
!6296 = !DILocation(line: 3310, column: 30, scope: !6290)
!6297 = !DILocation(line: 3310, column: 45, scope: !6290)
!6298 = !DILocation(line: 3310, column: 19, scope: !6290)
!6299 = !DILocation(line: 3310, column: 17, scope: !6290)
!6300 = !DILocation(line: 3311, column: 4, scope: !6290)
!6301 = !DILocation(line: 3313, column: 21, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 3312, column: 9)
!6303 = !DILocation(line: 3313, column: 25, scope: !6302)
!6304 = !DILocation(line: 3313, column: 30, scope: !6302)
!6305 = !DILocation(line: 3313, column: 45, scope: !6302)
!6306 = !DILocation(line: 3313, column: 19, scope: !6302)
!6307 = !DILocation(line: 3313, column: 17, scope: !6302)
!6308 = !DILocation(line: 3315, column: 3, scope: !6277)
!6309 = !DILocation(line: 3317, column: 16, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6273, file: !3, line: 3316, column: 8)
!6311 = !DILocation(line: 3320, column: 8, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 3320, column: 7)
!6313 = !DILocation(line: 3320, column: 12, scope: !6312)
!6314 = !DILocation(line: 3320, column: 7, scope: !6229)
!6315 = !DILocation(line: 3321, column: 41, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 3320, column: 30)
!6317 = !DILocation(line: 3321, column: 45, scope: !6316)
!6318 = !DILocation(line: 3321, column: 11, scope: !6316)
!6319 = !DILocation(line: 3321, column: 9, scope: !6316)
!6320 = !DILocation(line: 3323, column: 8, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6316, file: !3, line: 3323, column: 8)
!6322 = !DILocation(line: 3323, column: 13, scope: !6321)
!6323 = !DILocation(line: 3323, column: 8, scope: !6316)
!6324 = !DILocation(line: 3324, column: 37, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 3323, column: 22)
!6326 = !DILocation(line: 3324, column: 41, scope: !6325)
!6327 = !DILocation(line: 3324, column: 45, scope: !6325)
!6328 = !DILocation(line: 3324, column: 15, scope: !6325)
!6329 = !DILocation(line: 3324, column: 13, scope: !6325)
!6330 = !DILocation(line: 3325, column: 13, scope: !6325)
!6331 = !DILocation(line: 3325, column: 17, scope: !6325)
!6332 = !DILocation(line: 3325, column: 11, scope: !6325)
!6333 = !DILocation(line: 3326, column: 4, scope: !6325)
!6334 = !DILocation(line: 3328, column: 9, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 3328, column: 9)
!6336 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 3327, column: 9)
!6337 = !DILocation(line: 3328, column: 17, scope: !6335)
!6338 = !DILocation(line: 3328, column: 14, scope: !6335)
!6339 = !DILocation(line: 3328, column: 9, scope: !6336)
!6340 = !DILocation(line: 3329, column: 11, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6342, file: !3, line: 3329, column: 10)
!6342 = distinct !DILexicalBlock(scope: !6335, file: !3, line: 3328, column: 28)
!6343 = !DILocation(line: 3329, column: 17, scope: !6341)
!6344 = !DILocation(line: 3329, column: 24, scope: !6341)
!6345 = !DILocation(line: 3329, column: 67, scope: !6341)
!6346 = !DILocation(line: 3329, column: 71, scope: !6341)
!6347 = !DILocation(line: 3329, column: 75, scope: !6341)
!6348 = !DILocation(line: 3329, column: 96, scope: !6341)
!6349 = !DILocation(line: 3329, column: 102, scope: !6341)
!6350 = !DILocation(line: 3329, column: 39, scope: !6341)
!6351 = !DILocation(line: 3329, column: 37, scope: !6341)
!6352 = !DILocation(line: 3329, column: 10, scope: !6342)
!6353 = !DILocation(line: 3330, column: 39, scope: !6341)
!6354 = !DILocation(line: 3330, column: 43, scope: !6341)
!6355 = !DILocation(line: 3330, column: 47, scope: !6341)
!6356 = !DILocation(line: 3330, column: 17, scope: !6341)
!6357 = !DILocation(line: 3330, column: 15, scope: !6341)
!6358 = !DILocation(line: 3330, column: 7, scope: !6341)
!6359 = !DILocation(line: 3331, column: 18, scope: !6342)
!6360 = !DILocation(line: 3331, column: 16, scope: !6342)
!6361 = !DILocation(line: 3332, column: 5, scope: !6342)
!6362 = !DILocation(line: 3335, column: 9, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 3335, column: 9)
!6364 = !DILocation(line: 3335, column: 15, scope: !6363)
!6365 = !DILocation(line: 3335, column: 22, scope: !6363)
!6366 = !DILocation(line: 3335, column: 26, scope: !6363)
!6367 = !DILocation(line: 3335, column: 19, scope: !6363)
!6368 = !DILocation(line: 3335, column: 9, scope: !6336)
!6369 = !DILocation(line: 3336, column: 6, scope: !6363)
!6370 = !DILocation(line: 3338, column: 13, scope: !6336)
!6371 = !DILocation(line: 3338, column: 19, scope: !6336)
!6372 = !DILocation(line: 3338, column: 11, scope: !6336)
!6373 = !DILocation(line: 3340, column: 3, scope: !6316)
!6374 = !DILocation(line: 3342, column: 12, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 3341, column: 8)
!6376 = !DILocation(line: 3342, column: 16, scope: !6375)
!6377 = !DILocation(line: 3342, column: 10, scope: !6375)
!6378 = !DILocation(line: 3345, column: 9, scope: !6229)
!6379 = !DILocation(line: 3345, column: 19, scope: !6229)
!6380 = !DILocation(line: 3345, column: 17, scope: !6229)
!6381 = !DILocation(line: 3345, column: 4, scope: !6229)
!6382 = !DILocation(line: 3345, column: 7, scope: !6229)
!6383 = !DILocation(line: 3347, column: 7, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 3347, column: 7)
!6385 = !DILocation(line: 3347, column: 11, scope: !6384)
!6386 = !DILocation(line: 3347, column: 7, scope: !6229)
!6387 = !DILocation(line: 3348, column: 8, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6389, file: !3, line: 3348, column: 8)
!6389 = distinct !DILexicalBlock(scope: !6384, file: !3, line: 3347, column: 27)
!6390 = !DILocation(line: 3348, column: 12, scope: !6388)
!6391 = !DILocation(line: 3348, column: 8, scope: !6389)
!6392 = !DILocation(line: 3349, column: 48, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 3348, column: 31)
!6394 = !DILocation(line: 3349, column: 52, scope: !6393)
!6395 = !DILocation(line: 3349, column: 18, scope: !6393)
!6396 = !DILocation(line: 3349, column: 16, scope: !6393)
!6397 = !DILocation(line: 3351, column: 9, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6393, file: !3, line: 3351, column: 9)
!6399 = !DILocation(line: 3351, column: 9, scope: !6393)
!6400 = !DILocation(line: 3352, column: 6, scope: !6398)
!6401 = !DILocation(line: 3353, column: 4, scope: !6393)
!6402 = !DILocation(line: 3354, column: 13, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 3354, column: 13)
!6404 = !DILocation(line: 3354, column: 17, scope: !6403)
!6405 = !DILocation(line: 3354, column: 30, scope: !6403)
!6406 = !DILocation(line: 3354, column: 34, scope: !6403)
!6407 = !DILocation(line: 3354, column: 27, scope: !6403)
!6408 = !DILocation(line: 3354, column: 13, scope: !6388)
!6409 = !DILocation(line: 3355, column: 5, scope: !6403)
!6410 = !DILocation(line: 3357, column: 15, scope: !6389)
!6411 = !DILocation(line: 3357, column: 19, scope: !6389)
!6412 = !DILocation(line: 3357, column: 37, scope: !6389)
!6413 = !DILocation(line: 3357, column: 35, scope: !6389)
!6414 = !DILocation(line: 3357, column: 13, scope: !6389)
!6415 = !DILocation(line: 3359, column: 8, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6389, file: !3, line: 3359, column: 8)
!6417 = !DILocation(line: 3359, column: 12, scope: !6416)
!6418 = !DILocation(line: 3359, column: 8, scope: !6389)
!6419 = !DILocation(line: 3360, column: 9, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6421, file: !3, line: 3360, column: 9)
!6421 = distinct !DILexicalBlock(scope: !6416, file: !3, line: 3359, column: 31)
!6422 = !DILocation(line: 3360, column: 23, scope: !6420)
!6423 = !DILocation(line: 3360, column: 20, scope: !6420)
!6424 = !DILocation(line: 3360, column: 9, scope: !6421)
!6425 = !DILocation(line: 3361, column: 11, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6427, file: !3, line: 3361, column: 10)
!6427 = distinct !DILexicalBlock(scope: !6420, file: !3, line: 3360, column: 40)
!6428 = !DILocation(line: 3361, column: 17, scope: !6426)
!6429 = !DILocation(line: 3361, column: 24, scope: !6426)
!6430 = !DILocation(line: 3361, column: 73, scope: !6426)
!6431 = !DILocation(line: 3361, column: 77, scope: !6426)
!6432 = !DILocation(line: 3361, column: 81, scope: !6426)
!6433 = !DILocation(line: 3361, column: 102, scope: !6426)
!6434 = !DILocation(line: 3361, column: 114, scope: !6426)
!6435 = !DILocation(line: 3361, column: 45, scope: !6426)
!6436 = !DILocation(line: 3361, column: 43, scope: !6426)
!6437 = !DILocation(line: 3361, column: 10, scope: !6427)
!6438 = !DILocation(line: 3362, column: 45, scope: !6426)
!6439 = !DILocation(line: 3362, column: 49, scope: !6426)
!6440 = !DILocation(line: 3362, column: 53, scope: !6426)
!6441 = !DILocation(line: 3362, column: 23, scope: !6426)
!6442 = !DILocation(line: 3362, column: 21, scope: !6426)
!6443 = !DILocation(line: 3362, column: 7, scope: !6426)
!6444 = !DILocation(line: 3363, column: 24, scope: !6427)
!6445 = !DILocation(line: 3363, column: 22, scope: !6427)
!6446 = !DILocation(line: 3364, column: 5, scope: !6427)
!6447 = !DILocation(line: 3365, column: 4, scope: !6421)
!6448 = !DILocation(line: 3367, column: 16, scope: !6389)
!6449 = !DILocation(line: 3367, column: 32, scope: !6389)
!6450 = !DILocation(line: 3367, column: 30, scope: !6389)
!6451 = !DILocation(line: 3367, column: 5, scope: !6389)
!6452 = !DILocation(line: 3367, column: 14, scope: !6389)
!6453 = !DILocation(line: 3368, column: 3, scope: !6389)
!6454 = !DILocation(line: 3373, column: 7, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 3373, column: 7)
!6456 = !DILocation(line: 3373, column: 19, scope: !6455)
!6457 = !DILocation(line: 3373, column: 22, scope: !6455)
!6458 = !DILocation(line: 3373, column: 7, scope: !6229)
!6459 = !DILocalVariable(name: "v1coSS", scope: !6460, file: !3, line: 3374, type: !1944)
!6460 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 3373, column: 29)
!6461 = !DILocation(line: 3374, column: 17, scope: !6460)
!6462 = !DILocalVariable(name: "v2coSS", scope: !6460, file: !3, line: 3374, type: !1944)
!6463 = !DILocation(line: 3374, column: 26, scope: !6460)
!6464 = !DILocalVariable(name: "v3coSS", scope: !6460, file: !3, line: 3374, type: !1944)
!6465 = !DILocation(line: 3374, column: 35, scope: !6460)
!6466 = !DILocalVariable(name: "v4coSS", scope: !6460, file: !3, line: 3374, type: !1944)
!6467 = !DILocation(line: 3374, column: 44, scope: !6460)
!6468 = !DILocation(line: 3376, column: 13, scope: !6460)
!6469 = !DILocation(line: 3376, column: 17, scope: !6460)
!6470 = !DILocation(line: 3376, column: 30, scope: !6460)
!6471 = !DILocation(line: 3376, column: 34, scope: !6460)
!6472 = !DILocation(line: 3376, column: 11, scope: !6460)
!6473 = !DILocation(line: 3377, column: 13, scope: !6460)
!6474 = !DILocation(line: 3377, column: 17, scope: !6460)
!6475 = !DILocation(line: 3377, column: 30, scope: !6460)
!6476 = !DILocation(line: 3377, column: 34, scope: !6460)
!6477 = !DILocation(line: 3377, column: 11, scope: !6460)
!6478 = !DILocation(line: 3378, column: 13, scope: !6460)
!6479 = !DILocation(line: 3378, column: 17, scope: !6460)
!6480 = !DILocation(line: 3378, column: 30, scope: !6460)
!6481 = !DILocation(line: 3378, column: 34, scope: !6460)
!6482 = !DILocation(line: 3378, column: 11, scope: !6460)
!6483 = !DILocation(line: 3379, column: 8, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 3379, column: 8)
!6485 = !DILocation(line: 3379, column: 12, scope: !6484)
!6486 = !DILocation(line: 3379, column: 8, scope: !6460)
!6487 = !DILocation(line: 3380, column: 14, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6484, file: !3, line: 3379, column: 16)
!6489 = !DILocation(line: 3380, column: 18, scope: !6488)
!6490 = !DILocation(line: 3380, column: 31, scope: !6488)
!6491 = !DILocation(line: 3380, column: 35, scope: !6488)
!6492 = !DILocation(line: 3380, column: 12, scope: !6488)
!6493 = !DILocation(line: 3381, column: 4, scope: !6488)
!6494 = !DILocation(line: 3384, column: 9, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 3384, column: 8)
!6496 = !DILocation(line: 3384, column: 13, scope: !6495)
!6497 = !DILocation(line: 3384, column: 8, scope: !6460)
!6498 = !DILocation(line: 3385, column: 9, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 3385, column: 9)
!6500 = distinct !DILexicalBlock(scope: !6495, file: !3, line: 3384, column: 23)
!6501 = !DILocation(line: 3385, column: 19, scope: !6499)
!6502 = !DILocation(line: 3385, column: 30, scope: !6499)
!6503 = !DILocation(line: 3386, column: 9, scope: !6499)
!6504 = !DILocation(line: 3386, column: 19, scope: !6499)
!6505 = !DILocation(line: 3386, column: 30, scope: !6499)
!6506 = !DILocation(line: 3387, column: 9, scope: !6499)
!6507 = !DILocation(line: 3387, column: 19, scope: !6499)
!6508 = !DILocation(line: 3387, column: 30, scope: !6499)
!6509 = !DILocation(line: 3388, column: 10, scope: !6499)
!6510 = !DILocation(line: 3388, column: 14, scope: !6499)
!6511 = !DILocation(line: 3388, column: 17, scope: !6499)
!6512 = !DILocation(line: 3388, column: 20, scope: !6499)
!6513 = !DILocation(line: 3388, column: 30, scope: !6499)
!6514 = !DILocation(line: 3385, column: 9, scope: !6500)
!6515 = !DILocation(line: 3390, column: 6, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 3389, column: 5)
!6517 = !DILocation(line: 3392, column: 4, scope: !6500)
!6518 = !DILocation(line: 3397, column: 9, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 3397, column: 8)
!6520 = !DILocation(line: 3397, column: 21, scope: !6519)
!6521 = !DILocation(line: 3397, column: 25, scope: !6519)
!6522 = !DILocation(line: 3397, column: 19, scope: !6519)
!6523 = !DILocation(line: 3397, column: 38, scope: !6519)
!6524 = !DILocation(line: 3398, column: 9, scope: !6519)
!6525 = !DILocation(line: 3398, column: 21, scope: !6519)
!6526 = !DILocation(line: 3398, column: 25, scope: !6519)
!6527 = !DILocation(line: 3398, column: 19, scope: !6519)
!6528 = !DILocation(line: 3398, column: 38, scope: !6519)
!6529 = !DILocation(line: 3399, column: 9, scope: !6519)
!6530 = !DILocation(line: 3399, column: 21, scope: !6519)
!6531 = !DILocation(line: 3399, column: 25, scope: !6519)
!6532 = !DILocation(line: 3399, column: 19, scope: !6519)
!6533 = !DILocation(line: 3399, column: 38, scope: !6519)
!6534 = !DILocation(line: 3400, column: 10, scope: !6519)
!6535 = !DILocation(line: 3400, column: 14, scope: !6519)
!6536 = !DILocation(line: 3400, column: 17, scope: !6519)
!6537 = !DILocation(line: 3400, column: 20, scope: !6519)
!6538 = !DILocation(line: 3400, column: 32, scope: !6519)
!6539 = !DILocation(line: 3400, column: 36, scope: !6519)
!6540 = !DILocation(line: 3400, column: 30, scope: !6519)
!6541 = !DILocation(line: 3400, column: 51, scope: !6519)
!6542 = !DILocation(line: 3402, column: 9, scope: !6519)
!6543 = !DILocation(line: 3402, column: 21, scope: !6519)
!6544 = !DILocation(line: 3402, column: 25, scope: !6519)
!6545 = !DILocation(line: 3402, column: 19, scope: !6519)
!6546 = !DILocation(line: 3402, column: 38, scope: !6519)
!6547 = !DILocation(line: 3403, column: 9, scope: !6519)
!6548 = !DILocation(line: 3403, column: 21, scope: !6519)
!6549 = !DILocation(line: 3403, column: 25, scope: !6519)
!6550 = !DILocation(line: 3403, column: 19, scope: !6519)
!6551 = !DILocation(line: 3403, column: 38, scope: !6519)
!6552 = !DILocation(line: 3404, column: 9, scope: !6519)
!6553 = !DILocation(line: 3404, column: 21, scope: !6519)
!6554 = !DILocation(line: 3404, column: 25, scope: !6519)
!6555 = !DILocation(line: 3404, column: 19, scope: !6519)
!6556 = !DILocation(line: 3404, column: 38, scope: !6519)
!6557 = !DILocation(line: 3405, column: 10, scope: !6519)
!6558 = !DILocation(line: 3405, column: 14, scope: !6519)
!6559 = !DILocation(line: 3405, column: 17, scope: !6519)
!6560 = !DILocation(line: 3405, column: 20, scope: !6519)
!6561 = !DILocation(line: 3405, column: 32, scope: !6519)
!6562 = !DILocation(line: 3405, column: 36, scope: !6519)
!6563 = !DILocation(line: 3405, column: 30, scope: !6519)
!6564 = !DILocation(line: 3405, column: 51, scope: !6519)
!6565 = !DILocation(line: 3407, column: 9, scope: !6519)
!6566 = !DILocation(line: 3407, column: 21, scope: !6519)
!6567 = !DILocation(line: 3407, column: 25, scope: !6519)
!6568 = !DILocation(line: 3407, column: 19, scope: !6519)
!6569 = !DILocation(line: 3407, column: 38, scope: !6519)
!6570 = !DILocation(line: 3408, column: 9, scope: !6519)
!6571 = !DILocation(line: 3408, column: 21, scope: !6519)
!6572 = !DILocation(line: 3408, column: 25, scope: !6519)
!6573 = !DILocation(line: 3408, column: 19, scope: !6519)
!6574 = !DILocation(line: 3408, column: 38, scope: !6519)
!6575 = !DILocation(line: 3409, column: 9, scope: !6519)
!6576 = !DILocation(line: 3409, column: 21, scope: !6519)
!6577 = !DILocation(line: 3409, column: 25, scope: !6519)
!6578 = !DILocation(line: 3409, column: 19, scope: !6519)
!6579 = !DILocation(line: 3409, column: 38, scope: !6519)
!6580 = !DILocation(line: 3410, column: 10, scope: !6519)
!6581 = !DILocation(line: 3410, column: 14, scope: !6519)
!6582 = !DILocation(line: 3410, column: 17, scope: !6519)
!6583 = !DILocation(line: 3410, column: 20, scope: !6519)
!6584 = !DILocation(line: 3410, column: 32, scope: !6519)
!6585 = !DILocation(line: 3410, column: 36, scope: !6519)
!6586 = !DILocation(line: 3410, column: 30, scope: !6519)
!6587 = !DILocation(line: 3410, column: 51, scope: !6519)
!6588 = !DILocation(line: 3412, column: 9, scope: !6519)
!6589 = !DILocation(line: 3412, column: 21, scope: !6519)
!6590 = !DILocation(line: 3412, column: 25, scope: !6519)
!6591 = !DILocation(line: 3412, column: 19, scope: !6519)
!6592 = !DILocation(line: 3412, column: 38, scope: !6519)
!6593 = !DILocation(line: 3413, column: 9, scope: !6519)
!6594 = !DILocation(line: 3413, column: 21, scope: !6519)
!6595 = !DILocation(line: 3413, column: 25, scope: !6519)
!6596 = !DILocation(line: 3413, column: 19, scope: !6519)
!6597 = !DILocation(line: 3413, column: 38, scope: !6519)
!6598 = !DILocation(line: 3414, column: 9, scope: !6519)
!6599 = !DILocation(line: 3414, column: 21, scope: !6519)
!6600 = !DILocation(line: 3414, column: 25, scope: !6519)
!6601 = !DILocation(line: 3414, column: 19, scope: !6519)
!6602 = !DILocation(line: 3414, column: 38, scope: !6519)
!6603 = !DILocation(line: 3415, column: 10, scope: !6519)
!6604 = !DILocation(line: 3415, column: 14, scope: !6519)
!6605 = !DILocation(line: 3415, column: 17, scope: !6519)
!6606 = !DILocation(line: 3415, column: 20, scope: !6519)
!6607 = !DILocation(line: 3415, column: 32, scope: !6519)
!6608 = !DILocation(line: 3415, column: 36, scope: !6519)
!6609 = !DILocation(line: 3415, column: 30, scope: !6519)
!6610 = !DILocation(line: 3397, column: 8, scope: !6460)
!6611 = !DILocation(line: 3418, column: 5, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6519, file: !3, line: 3417, column: 4)
!6613 = !DILocation(line: 3424, column: 8, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 3424, column: 8)
!6615 = !DILocation(line: 3424, column: 12, scope: !6614)
!6616 = !DILocation(line: 3424, column: 8, scope: !6460)
!6617 = !DILocation(line: 3425, column: 9, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6619, file: !3, line: 3425, column: 9)
!6619 = distinct !DILexicalBlock(scope: !6614, file: !3, line: 3424, column: 29)
!6620 = !DILocation(line: 3425, column: 13, scope: !6618)
!6621 = !DILocation(line: 3425, column: 9, scope: !6619)
!6622 = !DILocation(line: 3429, column: 11, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6624, file: !3, line: 3429, column: 10)
!6624 = distinct !DILexicalBlock(scope: !6618, file: !3, line: 3425, column: 29)
!6625 = !DILocation(line: 3429, column: 15, scope: !6623)
!6626 = !DILocation(line: 3429, column: 25, scope: !6623)
!6627 = !DILocation(line: 3429, column: 29, scope: !6623)
!6628 = !DILocation(line: 3429, column: 33, scope: !6623)
!6629 = !DILocation(line: 3429, column: 51, scope: !6623)
!6630 = !DILocation(line: 3430, column: 11, scope: !6623)
!6631 = !DILocation(line: 3430, column: 15, scope: !6623)
!6632 = !DILocation(line: 3430, column: 25, scope: !6623)
!6633 = !DILocation(line: 3430, column: 29, scope: !6623)
!6634 = !DILocation(line: 3430, column: 33, scope: !6623)
!6635 = !DILocation(line: 3430, column: 51, scope: !6623)
!6636 = !DILocation(line: 3431, column: 11, scope: !6623)
!6637 = !DILocation(line: 3431, column: 15, scope: !6623)
!6638 = !DILocation(line: 3431, column: 25, scope: !6623)
!6639 = !DILocation(line: 3431, column: 29, scope: !6623)
!6640 = !DILocation(line: 3431, column: 33, scope: !6623)
!6641 = !DILocation(line: 3431, column: 51, scope: !6623)
!6642 = !DILocation(line: 3432, column: 11, scope: !6623)
!6643 = !DILocation(line: 3432, column: 15, scope: !6623)
!6644 = !DILocation(line: 3432, column: 18, scope: !6623)
!6645 = !DILocation(line: 3432, column: 23, scope: !6623)
!6646 = !DILocation(line: 3432, column: 26, scope: !6623)
!6647 = !DILocation(line: 3432, column: 30, scope: !6623)
!6648 = !DILocation(line: 3432, column: 40, scope: !6623)
!6649 = !DILocation(line: 3432, column: 44, scope: !6623)
!6650 = !DILocation(line: 3432, column: 48, scope: !6623)
!6651 = !DILocation(line: 3429, column: 10, scope: !6624)
!6652 = !DILocation(line: 3435, column: 7, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 3434, column: 6)
!6654 = !DILocation(line: 3437, column: 5, scope: !6624)
!6655 = !DILocation(line: 3439, column: 29, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6657, file: !3, line: 3439, column: 10)
!6657 = distinct !DILexicalBlock(scope: !6618, file: !3, line: 3438, column: 10)
!6658 = !DILocation(line: 3439, column: 37, scope: !6656)
!6659 = !DILocation(line: 3439, column: 45, scope: !6656)
!6660 = !DILocation(line: 3439, column: 10, scope: !6656)
!6661 = !DILocation(line: 3439, column: 53, scope: !6656)
!6662 = !DILocation(line: 3439, column: 10, scope: !6657)
!6663 = !DILocation(line: 3440, column: 7, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6656, file: !3, line: 3439, column: 61)
!6665 = !DILocation(line: 3444, column: 4, scope: !6619)
!6666 = !DILocation(line: 3446, column: 8, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 3446, column: 8)
!6668 = !DILocation(line: 3446, column: 22, scope: !6667)
!6669 = !DILocation(line: 3446, column: 19, scope: !6667)
!6670 = !DILocation(line: 3446, column: 8, scope: !6460)
!6671 = !DILocation(line: 3448, column: 38, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6667, file: !3, line: 3446, column: 29)
!6673 = !DILocation(line: 3448, column: 54, scope: !6672)
!6674 = !DILocation(line: 3448, column: 19, scope: !6672)
!6675 = !DILocation(line: 3448, column: 17, scope: !6672)
!6676 = !DILocation(line: 3450, column: 9, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6672, file: !3, line: 3450, column: 9)
!6678 = !DILocation(line: 3450, column: 21, scope: !6677)
!6679 = !DILocation(line: 3450, column: 27, scope: !6677)
!6680 = !DILocation(line: 3450, column: 49, scope: !6677)
!6681 = !DILocation(line: 3450, column: 30, scope: !6677)
!6682 = !DILocation(line: 3450, column: 9, scope: !6672)
!6683 = !DILocation(line: 3451, column: 43, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 3450, column: 63)
!6685 = !DILocation(line: 3451, column: 6, scope: !6684)
!6686 = !DILocation(line: 3452, column: 20, scope: !6684)
!6687 = !DILocation(line: 3452, column: 24, scope: !6684)
!6688 = !DILocation(line: 3452, column: 18, scope: !6684)
!6689 = !DILocation(line: 3453, column: 6, scope: !6684)
!6690 = !DILocation(line: 3453, column: 10, scope: !6684)
!6691 = !DILocation(line: 3453, column: 19, scope: !6684)
!6692 = !DILocation(line: 3454, column: 5, scope: !6684)
!6693 = !DILocation(line: 3456, column: 18, scope: !6672)
!6694 = !DILocation(line: 3456, column: 16, scope: !6672)
!6695 = !DILocation(line: 3457, column: 4, scope: !6672)
!6696 = !DILocation(line: 3459, column: 8, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 3459, column: 8)
!6698 = !DILocation(line: 3459, column: 20, scope: !6697)
!6699 = !DILocation(line: 3459, column: 8, scope: !6460)
!6700 = !DILocation(line: 3462, column: 37, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 3459, column: 27)
!6702 = !DILocation(line: 3462, column: 41, scope: !6701)
!6703 = !DILocation(line: 3462, column: 45, scope: !6701)
!6704 = !DILocation(line: 3462, column: 5, scope: !6701)
!6705 = !DILocation(line: 3463, column: 4, scope: !6701)
!6706 = !DILocation(line: 3464, column: 3, scope: !6460)
!6707 = !DILocation(line: 3465, column: 2, scope: !6229)
!6708 = !DILocation(line: 3288, column: 93, scope: !6223)
!6709 = !DILocation(line: 3288, column: 99, scope: !6223)
!6710 = !DILocation(line: 3288, column: 113, scope: !6223)
!6711 = !DILocation(line: 3288, column: 2, scope: !6223)
!6712 = distinct !{!6712, !6227, !6713}
!6713 = !DILocation(line: 3465, column: 2, scope: !6214)
!6714 = !DILocation(line: 3468, column: 66, scope: !5069)
!6715 = !DILocation(line: 3468, column: 98, scope: !5069)
!6716 = !DILocation(line: 3468, column: 102, scope: !5069)
!6717 = !DILocation(line: 3468, column: 96, scope: !5069)
!6718 = !DILocation(line: 3468, column: 47, scope: !5069)
!6719 = !DILocation(line: 3468, column: 29, scope: !5069)
!6720 = !DILocation(line: 3468, column: 12, scope: !5069)
!6721 = !DILocation(line: 3468, column: 16, scope: !5069)
!6722 = !DILocation(line: 3468, column: 27, scope: !5069)
!6723 = !DILocation(line: 3468, column: 10, scope: !5069)
!6724 = !DILocation(line: 3470, column: 14, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 3470, column: 2)
!6726 = !DILocation(line: 3470, column: 12, scope: !6725)
!6727 = !DILocation(line: 3470, column: 32, scope: !6725)
!6728 = !DILocation(line: 3470, column: 7, scope: !6725)
!6729 = !DILocation(line: 3470, column: 37, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 3470, column: 2)
!6731 = !DILocation(line: 3470, column: 2, scope: !6725)
!6732 = !DILocalVariable(name: "size", scope: !6733, file: !3, line: 3471, type: !22)
!6733 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 3470, column: 78)
!6734 = !DILocation(line: 3471, column: 7, scope: !6733)
!6735 = !DILocation(line: 3472, column: 18, scope: !6733)
!6736 = !DILocation(line: 3472, column: 24, scope: !6733)
!6737 = !DILocation(line: 3472, column: 3, scope: !6733)
!6738 = !DILocation(line: 3472, column: 12, scope: !6733)
!6739 = !DILocation(line: 3472, column: 16, scope: !6733)
!6740 = !DILocation(line: 3473, column: 3, scope: !6733)
!6741 = !DILocation(line: 3473, column: 12, scope: !6733)
!6742 = !DILocation(line: 3473, column: 18, scope: !6733)
!6743 = !DILocation(line: 3474, column: 42, scope: !6733)
!6744 = !DILocation(line: 3474, column: 51, scope: !6733)
!6745 = !DILocation(line: 3474, column: 19, scope: !6733)
!6746 = !DILocation(line: 3474, column: 3, scope: !6733)
!6747 = !DILocation(line: 3474, column: 12, scope: !6733)
!6748 = !DILocation(line: 3474, column: 17, scope: !6733)
!6749 = !DILocation(line: 3475, column: 28, scope: !6733)
!6750 = !DILocation(line: 3475, column: 26, scope: !6733)
!6751 = !DILocation(line: 3475, column: 69, scope: !6733)
!6752 = !DILocation(line: 3475, column: 67, scope: !6733)
!6753 = !DILocation(line: 3475, column: 10, scope: !6733)
!6754 = !DILocation(line: 3475, column: 8, scope: !6733)
!6755 = !DILocation(line: 3476, column: 49, scope: !6733)
!6756 = !DILocation(line: 3476, column: 30, scope: !6733)
!6757 = !DILocation(line: 3476, column: 3, scope: !6733)
!6758 = !DILocation(line: 3476, column: 12, scope: !6733)
!6759 = !DILocation(line: 3476, column: 27, scope: !6733)
!6760 = !DILocation(line: 3477, column: 10, scope: !6733)
!6761 = !DILocation(line: 3477, column: 19, scope: !6733)
!6762 = !DILocation(line: 3477, column: 3, scope: !6733)
!6763 = !DILocation(line: 3478, column: 61, scope: !6733)
!6764 = !DILocation(line: 3478, column: 68, scope: !6733)
!6765 = !DILocation(line: 3478, column: 42, scope: !6733)
!6766 = !DILocation(line: 3478, column: 23, scope: !6733)
!6767 = !DILocation(line: 3478, column: 3, scope: !6733)
!6768 = !DILocation(line: 3478, column: 12, scope: !6733)
!6769 = !DILocation(line: 3478, column: 21, scope: !6733)
!6770 = !DILocation(line: 3479, column: 10, scope: !6733)
!6771 = !DILocation(line: 3479, column: 19, scope: !6733)
!6772 = !DILocation(line: 3479, column: 3, scope: !6733)
!6773 = !DILocation(line: 3479, column: 32, scope: !6733)
!6774 = !DILocation(line: 3480, column: 62, scope: !6733)
!6775 = !DILocation(line: 3480, column: 69, scope: !6733)
!6776 = !DILocation(line: 3480, column: 43, scope: !6733)
!6777 = !DILocation(line: 3480, column: 23, scope: !6733)
!6778 = !DILocation(line: 3480, column: 3, scope: !6733)
!6779 = !DILocation(line: 3480, column: 12, scope: !6733)
!6780 = !DILocation(line: 3480, column: 21, scope: !6733)
!6781 = !DILocation(line: 3481, column: 10, scope: !6733)
!6782 = !DILocation(line: 3481, column: 19, scope: !6733)
!6783 = !DILocation(line: 3481, column: 3, scope: !6733)
!6784 = !DILocation(line: 3481, column: 32, scope: !6733)
!6785 = !DILocation(line: 3482, column: 49, scope: !6733)
!6786 = !DILocation(line: 3482, column: 56, scope: !6733)
!6787 = !DILocation(line: 3482, column: 30, scope: !6733)
!6788 = !DILocation(line: 3482, column: 20, scope: !6733)
!6789 = !DILocation(line: 3482, column: 3, scope: !6733)
!6790 = !DILocation(line: 3482, column: 12, scope: !6733)
!6791 = !DILocation(line: 3482, column: 18, scope: !6733)
!6792 = !DILocation(line: 3483, column: 10, scope: !6733)
!6793 = !DILocation(line: 3483, column: 19, scope: !6733)
!6794 = !DILocation(line: 3483, column: 3, scope: !6733)
!6795 = !DILocation(line: 3483, column: 29, scope: !6733)
!6796 = !DILocation(line: 3484, column: 2, scope: !6733)
!6797 = !DILocation(line: 3470, column: 50, scope: !6730)
!6798 = !DILocation(line: 3470, column: 56, scope: !6730)
!6799 = !DILocation(line: 3470, column: 48, scope: !6730)
!6800 = !DILocation(line: 3470, column: 63, scope: !6730)
!6801 = !DILocation(line: 3470, column: 74, scope: !6730)
!6802 = !DILocation(line: 3470, column: 2, scope: !6730)
!6803 = distinct !{!6803, !6731, !6804}
!6804 = !DILocation(line: 3484, column: 2, scope: !6725)
!6805 = !DILocation(line: 3487, column: 20, scope: !5069)
!6806 = !DILocation(line: 3487, column: 2, scope: !5069)
!6807 = !DILocation(line: 3488, column: 1, scope: !5069)
!6808 = distinct !DISubprogram(name: "paint_proj_begin_clone", scope: !3, file: !3, line: 3490, type: !6809, scopeLine: 3491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!6809 = !DISubroutineType(types: !6810)
!6810 = !{null, !3674, !1944}
!6811 = !DILocalVariable(name: "ps", arg: 1, scope: !6808, file: !3, line: 3490, type: !3674)
!6812 = !DILocation(line: 3490, column: 52, scope: !6808)
!6813 = !DILocalVariable(name: "mouse", arg: 2, scope: !6808, file: !3, line: 3490, type: !1944)
!6814 = !DILocation(line: 3490, column: 68, scope: !6808)
!6815 = !DILocation(line: 3493, column: 6, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6808, file: !3, line: 3493, column: 6)
!6817 = !DILocation(line: 3493, column: 10, scope: !6816)
!6818 = !DILocation(line: 3493, column: 15, scope: !6816)
!6819 = !DILocation(line: 3493, column: 6, scope: !6808)
!6820 = !DILocalVariable(name: "projCo", scope: !6821, file: !3, line: 3494, type: !496)
!6821 = distinct !DILexicalBlock(scope: !6816, file: !3, line: 3493, column: 36)
!6822 = !DILocation(line: 3494, column: 9, scope: !6821)
!6823 = !DILocation(line: 3495, column: 14, scope: !6821)
!6824 = !DILocation(line: 3495, column: 45, scope: !6821)
!6825 = !DILocation(line: 3495, column: 49, scope: !6821)
!6826 = !DILocation(line: 3495, column: 56, scope: !6821)
!6827 = !DILocation(line: 3495, column: 60, scope: !6821)
!6828 = !DILocation(line: 3495, column: 22, scope: !6821)
!6829 = !DILocation(line: 3495, column: 3, scope: !6821)
!6830 = !DILocation(line: 3496, column: 13, scope: !6821)
!6831 = !DILocation(line: 3496, column: 17, scope: !6821)
!6832 = !DILocation(line: 3496, column: 21, scope: !6821)
!6833 = !DILocation(line: 3496, column: 27, scope: !6821)
!6834 = !DILocation(line: 3496, column: 3, scope: !6821)
!6835 = !DILocation(line: 3498, column: 3, scope: !6821)
!6836 = !DILocation(line: 3498, column: 13, scope: !6821)
!6837 = !DILocation(line: 3499, column: 13, scope: !6821)
!6838 = !DILocation(line: 3499, column: 17, scope: !6821)
!6839 = !DILocation(line: 3499, column: 29, scope: !6821)
!6840 = !DILocation(line: 3499, column: 3, scope: !6821)
!6841 = !DILocation(line: 3500, column: 24, scope: !6821)
!6842 = !DILocation(line: 3500, column: 44, scope: !6821)
!6843 = !DILocation(line: 3500, column: 48, scope: !6821)
!6844 = !DILocation(line: 3500, column: 53, scope: !6821)
!6845 = !DILocation(line: 3500, column: 64, scope: !6821)
!6846 = !DILocation(line: 3500, column: 68, scope: !6821)
!6847 = !DILocation(line: 3500, column: 73, scope: !6821)
!6848 = !DILocation(line: 3500, column: 83, scope: !6821)
!6849 = !DILocation(line: 3500, column: 81, scope: !6821)
!6850 = !DILocation(line: 3500, column: 95, scope: !6821)
!6851 = !DILocation(line: 3500, column: 93, scope: !6821)
!6852 = !DILocation(line: 3500, column: 61, scope: !6821)
!6853 = !DILocation(line: 3500, column: 33, scope: !6821)
!6854 = !DILocation(line: 3500, column: 3, scope: !6821)
!6855 = !DILocation(line: 3500, column: 7, scope: !6821)
!6856 = !DILocation(line: 3500, column: 22, scope: !6821)
!6857 = !DILocation(line: 3501, column: 24, scope: !6821)
!6858 = !DILocation(line: 3501, column: 44, scope: !6821)
!6859 = !DILocation(line: 3501, column: 48, scope: !6821)
!6860 = !DILocation(line: 3501, column: 53, scope: !6821)
!6861 = !DILocation(line: 3501, column: 64, scope: !6821)
!6862 = !DILocation(line: 3501, column: 68, scope: !6821)
!6863 = !DILocation(line: 3501, column: 73, scope: !6821)
!6864 = !DILocation(line: 3501, column: 83, scope: !6821)
!6865 = !DILocation(line: 3501, column: 81, scope: !6821)
!6866 = !DILocation(line: 3501, column: 95, scope: !6821)
!6867 = !DILocation(line: 3501, column: 93, scope: !6821)
!6868 = !DILocation(line: 3501, column: 61, scope: !6821)
!6869 = !DILocation(line: 3501, column: 33, scope: !6821)
!6870 = !DILocation(line: 3501, column: 3, scope: !6821)
!6871 = !DILocation(line: 3501, column: 7, scope: !6821)
!6872 = !DILocation(line: 3501, column: 22, scope: !6821)
!6873 = !DILocation(line: 3502, column: 2, scope: !6821)
!6874 = !DILocation(line: 3503, column: 1, scope: !6808)
!6875 = distinct !DISubprogram(name: "paint_proj_redraw", scope: !3, file: !3, line: 4626, type: !6876, scopeLine: 4627, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!6876 = !DISubroutineType(types: !6877)
!6877 = !{null, !4164, !56, !233}
!6878 = !DILocalVariable(name: "C", arg: 1, scope: !6875, file: !3, line: 4626, type: !4164)
!6879 = !DILocation(line: 4626, column: 40, scope: !6875)
!6880 = !DILocalVariable(name: "pps", arg: 2, scope: !6875, file: !3, line: 4626, type: !56)
!6881 = !DILocation(line: 4626, column: 49, scope: !6875)
!6882 = !DILocalVariable(name: "final", arg: 3, scope: !6875, file: !3, line: 4626, type: !233)
!6883 = !DILocation(line: 4626, column: 59, scope: !6875)
!6884 = !DILocalVariable(name: "ps", scope: !6875, file: !3, line: 4628, type: !3674)
!6885 = !DILocation(line: 4628, column: 18, scope: !6875)
!6886 = !DILocation(line: 4628, column: 23, scope: !6875)
!6887 = !DILocation(line: 4630, column: 6, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 4630, column: 6)
!6889 = !DILocation(line: 4630, column: 10, scope: !6888)
!6890 = !DILocation(line: 4630, column: 6, scope: !6875)
!6891 = !DILocation(line: 4631, column: 32, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 4630, column: 23)
!6893 = !DILocation(line: 4631, column: 3, scope: !6892)
!6894 = !DILocation(line: 4633, column: 3, scope: !6892)
!6895 = !DILocation(line: 4633, column: 7, scope: !6892)
!6896 = !DILocation(line: 4633, column: 19, scope: !6892)
!6897 = !DILocation(line: 4634, column: 2, scope: !6892)
!6898 = !DILocation(line: 4635, column: 12, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 4635, column: 11)
!6900 = !DILocation(line: 4635, column: 11, scope: !6888)
!6901 = !DILocation(line: 4636, column: 3, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6899, file: !3, line: 4635, column: 19)
!6903 = !DILocation(line: 4639, column: 6, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 4639, column: 6)
!6905 = !DILocation(line: 4639, column: 6, scope: !6875)
!6906 = !DILocation(line: 4641, column: 25, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6904, file: !3, line: 4639, column: 13)
!6908 = !DILocation(line: 4641, column: 3, scope: !6907)
!6909 = !DILocation(line: 4642, column: 2, scope: !6907)
!6910 = !DILocation(line: 4644, column: 38, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6904, file: !3, line: 4643, column: 7)
!6912 = !DILocation(line: 4644, column: 24, scope: !6911)
!6913 = !DILocation(line: 4644, column: 3, scope: !6911)
!6914 = !DILocation(line: 4646, column: 1, scope: !6875)
!6915 = distinct !DISubprogram(name: "project_image_refresh_tagged", scope: !3, file: !3, line: 3607, type: !6916, scopeLine: 3608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!6916 = !DISubroutineType(types: !6917)
!6917 = !{!233, !3674}
!6918 = !DILocalVariable(name: "ps", arg: 1, scope: !6915, file: !3, line: 3607, type: !3674)
!6919 = !DILocation(line: 3607, column: 58, scope: !6915)
!6920 = !DILocalVariable(name: "pr", scope: !6915, file: !3, line: 3609, type: !3896)
!6921 = !DILocation(line: 3609, column: 27, scope: !6915)
!6922 = !DILocalVariable(name: "projIma", scope: !6915, file: !3, line: 3610, type: !3887)
!6923 = !DILocation(line: 3610, column: 18, scope: !6915)
!6924 = !DILocalVariable(name: "a", scope: !6915, file: !3, line: 3611, type: !22)
!6925 = !DILocation(line: 3611, column: 6, scope: !6915)
!6926 = !DILocalVariable(name: "i", scope: !6915, file: !3, line: 3611, type: !22)
!6927 = !DILocation(line: 3611, column: 9, scope: !6915)
!6928 = !DILocalVariable(name: "redraw", scope: !6915, file: !3, line: 3612, type: !233)
!6929 = !DILocation(line: 3612, column: 7, scope: !6915)
!6930 = !DILocation(line: 3615, column: 9, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6915, file: !3, line: 3615, column: 2)
!6932 = !DILocation(line: 3615, column: 24, scope: !6931)
!6933 = !DILocation(line: 3615, column: 28, scope: !6931)
!6934 = !DILocation(line: 3615, column: 22, scope: !6931)
!6935 = !DILocation(line: 3615, column: 7, scope: !6931)
!6936 = !DILocation(line: 3615, column: 40, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 3615, column: 2)
!6938 = !DILocation(line: 3615, column: 44, scope: !6937)
!6939 = !DILocation(line: 3615, column: 48, scope: !6937)
!6940 = !DILocation(line: 3615, column: 42, scope: !6937)
!6941 = !DILocation(line: 3615, column: 2, scope: !6931)
!6942 = !DILocation(line: 3616, column: 7, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6944, file: !3, line: 3616, column: 7)
!6944 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 3615, column: 75)
!6945 = !DILocation(line: 3616, column: 16, scope: !6943)
!6946 = !DILocation(line: 3616, column: 7, scope: !6944)
!6947 = !DILocation(line: 3618, column: 11, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 3618, column: 4)
!6949 = distinct !DILexicalBlock(scope: !6943, file: !3, line: 3616, column: 23)
!6950 = !DILocation(line: 3618, column: 9, scope: !6948)
!6951 = !DILocation(line: 3618, column: 16, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6948, file: !3, line: 3618, column: 4)
!6953 = !DILocation(line: 3618, column: 18, scope: !6952)
!6954 = !DILocation(line: 3618, column: 4, scope: !6948)
!6955 = !DILocation(line: 3619, column: 12, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6952, file: !3, line: 3618, column: 48)
!6957 = !DILocation(line: 3619, column: 21, scope: !6956)
!6958 = !DILocation(line: 3619, column: 36, scope: !6956)
!6959 = !DILocation(line: 3619, column: 8, scope: !6956)
!6960 = !DILocation(line: 3620, column: 9, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 3620, column: 9)
!6962 = !DILocation(line: 3620, column: 13, scope: !6961)
!6963 = !DILocation(line: 3620, column: 16, scope: !6961)
!6964 = !DILocation(line: 3620, column: 9, scope: !6956)
!6965 = !DILocation(line: 3621, column: 26, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6961, file: !3, line: 3620, column: 23)
!6967 = !DILocation(line: 3621, column: 6, scope: !6966)
!6968 = !DILocation(line: 3622, column: 34, scope: !6966)
!6969 = !DILocation(line: 3622, column: 43, scope: !6966)
!6970 = !DILocation(line: 3622, column: 48, scope: !6966)
!6971 = !DILocation(line: 3622, column: 57, scope: !6966)
!6972 = !DILocation(line: 3622, column: 6, scope: !6966)
!6973 = !DILocation(line: 3623, column: 13, scope: !6966)
!6974 = !DILocation(line: 3624, column: 5, scope: !6966)
!6975 = !DILocation(line: 3625, column: 4, scope: !6956)
!6976 = !DILocation(line: 3618, column: 44, scope: !6952)
!6977 = !DILocation(line: 3618, column: 4, scope: !6952)
!6978 = distinct !{!6978, !6954, !6979}
!6979 = !DILocation(line: 3625, column: 4, scope: !6948)
!6980 = !DILocation(line: 3627, column: 4, scope: !6949)
!6981 = !DILocation(line: 3627, column: 13, scope: !6949)
!6982 = !DILocation(line: 3627, column: 19, scope: !6949)
!6983 = !DILocation(line: 3628, column: 3, scope: !6949)
!6984 = !DILocation(line: 3629, column: 2, scope: !6944)
!6985 = !DILocation(line: 3615, column: 60, scope: !6937)
!6986 = !DILocation(line: 3615, column: 71, scope: !6937)
!6987 = !DILocation(line: 3615, column: 2, scope: !6937)
!6988 = distinct !{!6988, !6941, !6989}
!6989 = !DILocation(line: 3629, column: 2, scope: !6931)
!6990 = !DILocation(line: 3631, column: 9, scope: !6915)
!6991 = !DILocation(line: 3631, column: 2, scope: !6915)
!6992 = distinct !DISubprogram(name: "paint_proj_stroke_done", scope: !3, file: !3, line: 4648, type: !770, scopeLine: 4649, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!6993 = !DILocalVariable(name: "pps", arg: 1, scope: !6992, file: !3, line: 4648, type: !56)
!6994 = !DILocation(line: 4648, column: 35, scope: !6992)
!6995 = !DILocalVariable(name: "ps", scope: !6992, file: !3, line: 4650, type: !3674)
!6996 = !DILocation(line: 4650, column: 18, scope: !6992)
!6997 = !DILocation(line: 4650, column: 23, scope: !6992)
!6998 = !DILocation(line: 4651, column: 6, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6992, file: !3, line: 4651, column: 6)
!7000 = !DILocation(line: 4651, column: 10, scope: !6999)
!7001 = !DILocation(line: 4651, column: 15, scope: !6999)
!7002 = !DILocation(line: 4651, column: 35, scope: !6999)
!7003 = !DILocation(line: 4651, column: 38, scope: !6999)
!7004 = !DILocation(line: 4651, column: 42, scope: !6999)
!7005 = !DILocation(line: 4651, column: 47, scope: !6999)
!7006 = !DILocation(line: 4651, column: 6, scope: !6992)
!7007 = !DILocation(line: 4652, column: 3, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !6999, file: !3, line: 4651, column: 71)
!7009 = !DILocation(line: 4652, column: 13, scope: !7008)
!7010 = !DILocation(line: 4653, column: 3, scope: !7008)
!7011 = !DILocation(line: 4655, column: 21, scope: !6992)
!7012 = !DILocation(line: 4655, column: 25, scope: !6992)
!7013 = !DILocation(line: 4655, column: 32, scope: !6992)
!7014 = !DILocation(line: 4655, column: 36, scope: !6992)
!7015 = !DILocation(line: 4655, column: 43, scope: !6992)
!7016 = !DILocation(line: 4655, column: 47, scope: !6992)
!7017 = !DILocation(line: 4655, column: 2, scope: !6992)
!7018 = !DILocation(line: 4657, column: 23, scope: !6992)
!7019 = !DILocation(line: 4657, column: 27, scope: !6992)
!7020 = !DILocation(line: 4657, column: 2, scope: !6992)
!7021 = !DILocation(line: 4659, column: 20, scope: !6992)
!7022 = !DILocation(line: 4659, column: 2, scope: !6992)
!7023 = !DILocation(line: 4660, column: 2, scope: !6992)
!7024 = !DILocation(line: 4660, column: 12, scope: !6992)
!7025 = !DILocation(line: 4661, column: 1, scope: !6992)
!7026 = distinct !DISubprogram(name: "project_paint_end", scope: !3, file: !3, line: 3505, type: !5070, scopeLine: 3506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!7027 = !DILocalVariable(name: "ps", arg: 1, scope: !7026, file: !3, line: 3505, type: !3674)
!7028 = !DILocation(line: 3505, column: 47, scope: !7026)
!7029 = !DILocalVariable(name: "a", scope: !7026, file: !3, line: 3507, type: !22)
!7030 = !DILocation(line: 3507, column: 6, scope: !7026)
!7031 = !DILocalVariable(name: "projIma", scope: !7026, file: !3, line: 3508, type: !3887)
!7032 = !DILocation(line: 3508, column: 18, scope: !7026)
!7033 = !DILocation(line: 3510, column: 2, scope: !7026)
!7034 = !DILocation(line: 3513, column: 9, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 3513, column: 2)
!7036 = !DILocation(line: 3513, column: 24, scope: !7035)
!7037 = !DILocation(line: 3513, column: 28, scope: !7035)
!7038 = !DILocation(line: 3513, column: 22, scope: !7035)
!7039 = !DILocation(line: 3513, column: 7, scope: !7035)
!7040 = !DILocation(line: 3513, column: 40, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 3513, column: 2)
!7042 = !DILocation(line: 3513, column: 44, scope: !7041)
!7043 = !DILocation(line: 3513, column: 48, scope: !7041)
!7044 = !DILocation(line: 3513, column: 42, scope: !7041)
!7045 = !DILocation(line: 3513, column: 2, scope: !7035)
!7046 = !DILocation(line: 3514, column: 26, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 3513, column: 75)
!7048 = !DILocation(line: 3514, column: 35, scope: !7047)
!7049 = !DILocation(line: 3514, column: 40, scope: !7047)
!7050 = !DILocation(line: 3514, column: 49, scope: !7047)
!7051 = !DILocation(line: 3514, column: 3, scope: !7047)
!7052 = !DILocation(line: 3515, column: 22, scope: !7047)
!7053 = !DILocation(line: 3515, column: 31, scope: !7047)
!7054 = !DILocation(line: 3515, column: 36, scope: !7047)
!7055 = !DILocation(line: 3515, column: 3, scope: !7047)
!7056 = !DILocation(line: 3516, column: 2, scope: !7047)
!7057 = !DILocation(line: 3513, column: 60, scope: !7041)
!7058 = !DILocation(line: 3513, column: 71, scope: !7041)
!7059 = !DILocation(line: 3513, column: 2, scope: !7041)
!7060 = distinct !{!7060, !7045, !7061}
!7061 = !DILocation(line: 3516, column: 2, scope: !7035)
!7062 = !DILocation(line: 3518, column: 25, scope: !7026)
!7063 = !DILocation(line: 3518, column: 29, scope: !7026)
!7064 = !DILocation(line: 3518, column: 46, scope: !7026)
!7065 = !DILocation(line: 3518, column: 50, scope: !7026)
!7066 = !DILocation(line: 3518, column: 2, scope: !7026)
!7067 = !DILocation(line: 3520, column: 2, scope: !7026)
!7068 = !DILocation(line: 3520, column: 12, scope: !7026)
!7069 = !DILocation(line: 3520, column: 16, scope: !7026)
!7070 = !DILocation(line: 3521, column: 2, scope: !7026)
!7071 = !DILocation(line: 3521, column: 12, scope: !7026)
!7072 = !DILocation(line: 3521, column: 16, scope: !7026)
!7073 = !DILocation(line: 3522, column: 2, scope: !7026)
!7074 = !DILocation(line: 3522, column: 12, scope: !7026)
!7075 = !DILocation(line: 3522, column: 16, scope: !7026)
!7076 = !DILocation(line: 3523, column: 2, scope: !7026)
!7077 = !DILocation(line: 3523, column: 12, scope: !7026)
!7078 = !DILocation(line: 3523, column: 16, scope: !7026)
!7079 = !DILocation(line: 3524, column: 2, scope: !7026)
!7080 = !DILocation(line: 3524, column: 12, scope: !7026)
!7081 = !DILocation(line: 3524, column: 16, scope: !7026)
!7082 = !DILocation(line: 3525, column: 6, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 3525, column: 6)
!7084 = !DILocation(line: 3525, column: 10, scope: !7083)
!7085 = !DILocation(line: 3525, column: 6, scope: !7026)
!7086 = !DILocation(line: 3526, column: 3, scope: !7083)
!7087 = !DILocation(line: 3526, column: 13, scope: !7083)
!7088 = !DILocation(line: 3526, column: 17, scope: !7083)
!7089 = !DILocation(line: 3527, column: 6, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 3527, column: 6)
!7091 = !DILocation(line: 3527, column: 10, scope: !7090)
!7092 = !DILocation(line: 3527, column: 21, scope: !7090)
!7093 = !DILocation(line: 3527, column: 6, scope: !7026)
!7094 = !DILocation(line: 3528, column: 16, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 3527, column: 26)
!7096 = !DILocation(line: 3528, column: 20, scope: !7095)
!7097 = !DILocation(line: 3528, column: 3, scope: !7095)
!7098 = !DILocation(line: 3529, column: 3, scope: !7095)
!7099 = !DILocation(line: 3529, column: 21, scope: !7095)
!7100 = !DILocation(line: 3529, column: 25, scope: !7095)
!7101 = !DILocation(line: 3529, column: 13, scope: !7095)
!7102 = !DILocation(line: 3530, column: 2, scope: !7095)
!7103 = !DILocation(line: 3531, column: 2, scope: !7026)
!7104 = !DILocation(line: 3534, column: 6, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 3534, column: 6)
!7106 = !DILocation(line: 3534, column: 10, scope: !7105)
!7107 = !DILocation(line: 3534, column: 24, scope: !7105)
!7108 = !DILocation(line: 3534, column: 6, scope: !7026)
!7109 = !DILocation(line: 3535, column: 3, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7105, file: !3, line: 3534, column: 32)
!7111 = !DILocation(line: 3535, column: 13, scope: !7110)
!7112 = !DILocation(line: 3535, column: 17, scope: !7110)
!7113 = !DILocation(line: 3536, column: 3, scope: !7110)
!7114 = !DILocation(line: 3536, column: 13, scope: !7110)
!7115 = !DILocation(line: 3536, column: 17, scope: !7110)
!7116 = !DILocation(line: 3537, column: 3, scope: !7110)
!7117 = !DILocation(line: 3537, column: 13, scope: !7110)
!7118 = !DILocation(line: 3537, column: 17, scope: !7110)
!7119 = !DILocation(line: 3538, column: 3, scope: !7110)
!7120 = !DILocation(line: 3538, column: 13, scope: !7110)
!7121 = !DILocation(line: 3538, column: 17, scope: !7110)
!7122 = !DILocation(line: 3539, column: 2, scope: !7110)
!7123 = !DILocation(line: 3542, column: 6, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 3542, column: 6)
!7125 = !DILocation(line: 3542, column: 10, scope: !7124)
!7126 = !DILocation(line: 3542, column: 6, scope: !7026)
!7127 = !DILocation(line: 3543, column: 28, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7124, file: !3, line: 3542, column: 22)
!7129 = !DILocation(line: 3543, column: 32, scope: !7128)
!7130 = !DILocation(line: 3543, column: 3, scope: !7128)
!7131 = !DILocation(line: 3544, column: 3, scope: !7128)
!7132 = !DILocation(line: 3544, column: 13, scope: !7128)
!7133 = !DILocation(line: 3544, column: 17, scope: !7128)
!7134 = !DILocation(line: 3545, column: 2, scope: !7128)
!7135 = !DILocation(line: 3547, column: 6, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 3547, column: 6)
!7137 = !DILocation(line: 3547, column: 10, scope: !7136)
!7138 = !DILocation(line: 3547, column: 6, scope: !7026)
!7139 = !DILocation(line: 3547, column: 21, scope: !7136)
!7140 = !DILocation(line: 3547, column: 31, scope: !7136)
!7141 = !DILocation(line: 3547, column: 35, scope: !7136)
!7142 = !DILocation(line: 3549, column: 9, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 3549, column: 2)
!7144 = !DILocation(line: 3549, column: 7, scope: !7143)
!7145 = !DILocation(line: 3549, column: 14, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7143, file: !3, line: 3549, column: 2)
!7147 = !DILocation(line: 3549, column: 18, scope: !7146)
!7148 = !DILocation(line: 3549, column: 22, scope: !7146)
!7149 = !DILocation(line: 3549, column: 16, scope: !7146)
!7150 = !DILocation(line: 3549, column: 2, scope: !7143)
!7151 = !DILocation(line: 3550, column: 21, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7146, file: !3, line: 3549, column: 39)
!7153 = !DILocation(line: 3550, column: 25, scope: !7152)
!7154 = !DILocation(line: 3550, column: 34, scope: !7152)
!7155 = !DILocation(line: 3550, column: 3, scope: !7152)
!7156 = !DILocation(line: 3551, column: 2, scope: !7152)
!7157 = !DILocation(line: 3549, column: 35, scope: !7146)
!7158 = !DILocation(line: 3549, column: 2, scope: !7146)
!7159 = distinct !{!7159, !7150, !7160}
!7160 = !DILocation(line: 3551, column: 2, scope: !7143)
!7161 = !DILocation(line: 3554, column: 6, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 3554, column: 6)
!7163 = !DILocation(line: 3554, column: 10, scope: !7162)
!7164 = !DILocation(line: 3554, column: 14, scope: !7162)
!7165 = !DILocation(line: 3554, column: 19, scope: !7162)
!7166 = !DILocation(line: 3554, column: 6, scope: !7026)
!7167 = !DILocation(line: 3555, column: 7, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7169, file: !3, line: 3555, column: 7)
!7169 = distinct !DILexicalBlock(scope: !7162, file: !3, line: 3554, column: 36)
!7170 = !DILocation(line: 3555, column: 11, scope: !7168)
!7171 = !DILocation(line: 3555, column: 7, scope: !7169)
!7172 = !DILocation(line: 3555, column: 21, scope: !7168)
!7173 = !DILocation(line: 3555, column: 31, scope: !7168)
!7174 = !DILocation(line: 3555, column: 35, scope: !7168)
!7175 = !DILocation(line: 3556, column: 7, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7169, file: !3, line: 3556, column: 7)
!7177 = !DILocation(line: 3556, column: 11, scope: !7176)
!7178 = !DILocation(line: 3556, column: 7, scope: !7169)
!7179 = !DILocation(line: 3556, column: 21, scope: !7176)
!7180 = !DILocation(line: 3556, column: 31, scope: !7176)
!7181 = !DILocation(line: 3556, column: 35, scope: !7176)
!7182 = !DILocation(line: 3563, column: 2, scope: !7169)
!7183 = !DILocation(line: 3565, column: 6, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 3565, column: 6)
!7185 = !DILocation(line: 3565, column: 10, scope: !7184)
!7186 = !DILocation(line: 3565, column: 6, scope: !7026)
!7187 = !DILocation(line: 3566, column: 3, scope: !7184)
!7188 = !DILocation(line: 3566, column: 7, scope: !7184)
!7189 = !DILocation(line: 3566, column: 11, scope: !7184)
!7190 = !DILocation(line: 3566, column: 19, scope: !7184)
!7191 = !DILocation(line: 3566, column: 23, scope: !7184)
!7192 = !DILocation(line: 3567, column: 1, scope: !7026)
!7193 = distinct !DISubprogram(name: "PAINT_OT_project_image", scope: !3, file: !3, line: 4772, type: !4, scopeLine: 4773, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!7194 = !DILocalVariable(name: "ot", arg: 1, scope: !7193, file: !3, line: 4772, type: !6)
!7195 = !DILocation(line: 4772, column: 45, scope: !7193)
!7196 = !DILocalVariable(name: "prop", scope: !7193, file: !3, line: 4774, type: !3405)
!7197 = !DILocation(line: 4774, column: 15, scope: !7193)
!7198 = !DILocation(line: 4777, column: 2, scope: !7193)
!7199 = !DILocation(line: 4777, column: 6, scope: !7193)
!7200 = !DILocation(line: 4777, column: 11, scope: !7193)
!7201 = !DILocation(line: 4778, column: 2, scope: !7193)
!7202 = !DILocation(line: 4778, column: 6, scope: !7193)
!7203 = !DILocation(line: 4778, column: 13, scope: !7193)
!7204 = !DILocation(line: 4779, column: 2, scope: !7193)
!7205 = !DILocation(line: 4779, column: 6, scope: !7193)
!7206 = !DILocation(line: 4779, column: 18, scope: !7193)
!7207 = !DILocation(line: 4782, column: 2, scope: !7193)
!7208 = !DILocation(line: 4782, column: 6, scope: !7193)
!7209 = !DILocation(line: 4782, column: 13, scope: !7193)
!7210 = !DILocation(line: 4783, column: 2, scope: !7193)
!7211 = !DILocation(line: 4783, column: 6, scope: !7193)
!7212 = !DILocation(line: 4783, column: 11, scope: !7193)
!7213 = !DILocation(line: 4786, column: 2, scope: !7193)
!7214 = !DILocation(line: 4786, column: 6, scope: !7193)
!7215 = !DILocation(line: 4786, column: 11, scope: !7193)
!7216 = !DILocation(line: 4788, column: 22, scope: !7193)
!7217 = !DILocation(line: 4788, column: 26, scope: !7193)
!7218 = !DILocation(line: 4788, column: 9, scope: !7193)
!7219 = !DILocation(line: 4788, column: 7, scope: !7193)
!7220 = !DILocation(line: 4789, column: 21, scope: !7193)
!7221 = !DILocation(line: 4789, column: 2, scope: !7193)
!7222 = !DILocation(line: 4790, column: 24, scope: !7193)
!7223 = !DILocation(line: 4790, column: 2, scope: !7193)
!7224 = !DILocation(line: 4791, column: 13, scope: !7193)
!7225 = !DILocation(line: 4791, column: 2, scope: !7193)
!7226 = !DILocation(line: 4791, column: 6, scope: !7193)
!7227 = !DILocation(line: 4791, column: 11, scope: !7193)
!7228 = !DILocation(line: 4792, column: 1, scope: !7193)
!7229 = distinct !DISubprogram(name: "texture_paint_camera_project_exec", scope: !3, file: !3, line: 4663, type: !7230, scopeLine: 4664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!7230 = !DISubroutineType(types: !7231)
!7231 = !{!22, !4645, !7232}
!7232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7233, size: 64)
!7233 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !28, line: 348, baseType: !27)
!7234 = !DILocalVariable(name: "C", arg: 1, scope: !7229, file: !3, line: 4663, type: !4645)
!7235 = !DILocation(line: 4663, column: 56, scope: !7229)
!7236 = !DILocalVariable(name: "op", arg: 2, scope: !7229, file: !3, line: 4663, type: !7232)
!7237 = !DILocation(line: 4663, column: 71, scope: !7229)
!7238 = !DILocalVariable(name: "image", scope: !7229, file: !3, line: 4665, type: !3861)
!7239 = !DILocation(line: 4665, column: 9, scope: !7229)
!7240 = !DILocation(line: 4665, column: 45, scope: !7229)
!7241 = !DILocation(line: 4665, column: 31, scope: !7229)
!7242 = !DILocation(line: 4665, column: 49, scope: !7229)
!7243 = !DILocation(line: 4665, column: 69, scope: !7229)
!7244 = !DILocation(line: 4665, column: 73, scope: !7229)
!7245 = !DILocation(line: 4665, column: 56, scope: !7229)
!7246 = !DILocation(line: 4665, column: 17, scope: !7229)
!7247 = !DILocalVariable(name: "scene", scope: !7229, file: !3, line: 4666, type: !3828)
!7248 = !DILocation(line: 4666, column: 9, scope: !7229)
!7249 = !DILocation(line: 4666, column: 32, scope: !7229)
!7250 = !DILocation(line: 4666, column: 17, scope: !7229)
!7251 = !DILocalVariable(name: "ps", scope: !7229, file: !3, line: 4667, type: !3675)
!7252 = !DILocation(line: 4667, column: 17, scope: !7229)
!7253 = !DILocalVariable(name: "orig_brush_size", scope: !7229, file: !3, line: 4668, type: !22)
!7254 = !DILocation(line: 4668, column: 6, scope: !7229)
!7255 = !DILocalVariable(name: "idgroup", scope: !7229, file: !3, line: 4669, type: !37)
!7256 = !DILocation(line: 4669, column: 14, scope: !7229)
!7257 = !DILocalVariable(name: "view_data", scope: !7229, file: !3, line: 4670, type: !37)
!7258 = !DILocation(line: 4670, column: 14, scope: !7229)
!7259 = !DILocalVariable(name: "ob", scope: !7229, file: !3, line: 4671, type: !3842)
!7260 = !DILocation(line: 4671, column: 10, scope: !7229)
!7261 = !DILocation(line: 4671, column: 15, scope: !7229)
!7262 = !DILocalVariable(name: "uvs", scope: !7229, file: !3, line: 4672, type: !233)
!7263 = !DILocation(line: 4672, column: 7, scope: !7229)
!7264 = !DILocalVariable(name: "mat", scope: !7229, file: !3, line: 4672, type: !233)
!7265 = !DILocation(line: 4672, column: 12, scope: !7229)
!7266 = !DILocalVariable(name: "tex", scope: !7229, file: !3, line: 4672, type: !233)
!7267 = !DILocation(line: 4672, column: 17, scope: !7229)
!7268 = !DILocation(line: 4674, column: 6, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 4674, column: 6)
!7270 = !DILocation(line: 4674, column: 9, scope: !7269)
!7271 = !DILocation(line: 4674, column: 17, scope: !7269)
!7272 = !DILocation(line: 4674, column: 20, scope: !7269)
!7273 = !DILocation(line: 4674, column: 24, scope: !7269)
!7274 = !DILocation(line: 4674, column: 29, scope: !7269)
!7275 = !DILocation(line: 4674, column: 6, scope: !7229)
!7276 = !DILocation(line: 4675, column: 14, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7269, file: !3, line: 4674, column: 41)
!7278 = !DILocation(line: 4675, column: 18, scope: !7277)
!7279 = !DILocation(line: 4675, column: 3, scope: !7277)
!7280 = !DILocation(line: 4676, column: 3, scope: !7277)
!7281 = !DILocation(line: 4679, column: 38, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 4679, column: 6)
!7283 = !DILocation(line: 4679, column: 45, scope: !7282)
!7284 = !DILocation(line: 4679, column: 7, scope: !7282)
!7285 = !DILocation(line: 4679, column: 6, scope: !7229)
!7286 = !DILocation(line: 4680, column: 26, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7282, file: !3, line: 4679, column: 74)
!7288 = !DILocation(line: 4680, column: 30, scope: !7287)
!7289 = !DILocation(line: 4680, column: 39, scope: !7287)
!7290 = !DILocation(line: 4680, column: 44, scope: !7287)
!7291 = !DILocation(line: 4680, column: 49, scope: !7287)
!7292 = !DILocation(line: 4680, column: 3, scope: !7287)
!7293 = !DILocation(line: 4681, column: 25, scope: !7287)
!7294 = !DILocation(line: 4681, column: 3, scope: !7287)
!7295 = !DILocation(line: 4682, column: 3, scope: !7287)
!7296 = !DILocation(line: 4685, column: 21, scope: !7229)
!7297 = !DILocation(line: 4685, column: 24, scope: !7229)
!7298 = !DILocation(line: 4685, column: 2, scope: !7229)
!7299 = !DILocation(line: 4687, column: 6, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 4687, column: 6)
!7301 = !DILocation(line: 4687, column: 12, scope: !7300)
!7302 = !DILocation(line: 4687, column: 6, scope: !7229)
!7303 = !DILocation(line: 4688, column: 14, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7300, file: !3, line: 4687, column: 21)
!7305 = !DILocation(line: 4688, column: 18, scope: !7304)
!7306 = !DILocation(line: 4688, column: 3, scope: !7304)
!7307 = !DILocation(line: 4689, column: 3, scope: !7304)
!7308 = !DILocation(line: 4692, column: 23, scope: !7229)
!7309 = !DILocation(line: 4692, column: 5, scope: !7229)
!7310 = !DILocation(line: 4692, column: 21, scope: !7229)
!7311 = !DILocation(line: 4693, column: 45, scope: !7229)
!7312 = !DILocation(line: 4693, column: 22, scope: !7229)
!7313 = !DILocation(line: 4693, column: 5, scope: !7229)
!7314 = !DILocation(line: 4693, column: 20, scope: !7229)
!7315 = !DILocation(line: 4695, column: 9, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 4695, column: 6)
!7317 = !DILocation(line: 4695, column: 24, scope: !7316)
!7318 = !DILocation(line: 4695, column: 32, scope: !7316)
!7319 = !DILocation(line: 4695, column: 38, scope: !7316)
!7320 = !DILocation(line: 4695, column: 54, scope: !7316)
!7321 = !DILocation(line: 4695, column: 59, scope: !7316)
!7322 = !DILocation(line: 4695, column: 6, scope: !7229)
!7323 = !DILocation(line: 4696, column: 14, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 4695, column: 68)
!7325 = !DILocation(line: 4696, column: 18, scope: !7324)
!7326 = !DILocation(line: 4696, column: 3, scope: !7324)
!7327 = !DILocation(line: 4697, column: 3, scope: !7324)
!7328 = !DILocation(line: 4700, column: 31, scope: !7229)
!7329 = !DILocation(line: 4700, column: 38, scope: !7229)
!7330 = !DILocation(line: 4700, column: 12, scope: !7229)
!7331 = !DILocation(line: 4700, column: 10, scope: !7229)
!7332 = !DILocation(line: 4702, column: 6, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 4702, column: 6)
!7334 = !DILocation(line: 4702, column: 6, scope: !7229)
!7335 = !DILocation(line: 4703, column: 44, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7333, file: !3, line: 4702, column: 15)
!7337 = !DILocation(line: 4703, column: 15, scope: !7336)
!7338 = !DILocation(line: 4703, column: 13, scope: !7336)
!7339 = !DILocation(line: 4706, column: 7, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 4706, column: 7)
!7341 = !DILocation(line: 4706, column: 18, scope: !7340)
!7342 = !DILocation(line: 4706, column: 22, scope: !7340)
!7343 = !DILocation(line: 4706, column: 45, scope: !7340)
!7344 = !DILocation(line: 4706, column: 48, scope: !7340)
!7345 = !DILocation(line: 4706, column: 59, scope: !7340)
!7346 = !DILocation(line: 4706, column: 67, scope: !7340)
!7347 = !DILocation(line: 4706, column: 7, scope: !7336)
!7348 = !DILocation(line: 4707, column: 15, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 4706, column: 81)
!7350 = !DILocation(line: 4707, column: 19, scope: !7349)
!7351 = !DILocation(line: 4707, column: 4, scope: !7349)
!7352 = !DILocation(line: 4708, column: 4, scope: !7349)
!7353 = !DILocation(line: 4710, column: 2, scope: !7336)
!7354 = !DILocation(line: 4712, column: 6, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 4712, column: 6)
!7356 = !DILocation(line: 4712, column: 6, scope: !7229)
!7357 = !DILocation(line: 4714, column: 6, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 4712, column: 17)
!7359 = !DILocation(line: 4714, column: 13, scope: !7358)
!7360 = !DILocation(line: 4715, column: 2, scope: !7358)
!7361 = !DILocation(line: 4717, column: 6, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 4716, column: 7)
!7363 = !DILocation(line: 4717, column: 13, scope: !7362)
!7364 = !DILocation(line: 4719, column: 7, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7362, file: !3, line: 4719, column: 7)
!7366 = !DILocation(line: 4719, column: 14, scope: !7365)
!7367 = !DILocation(line: 4719, column: 21, scope: !7365)
!7368 = !DILocation(line: 4719, column: 7, scope: !7362)
!7369 = !DILocation(line: 4720, column: 15, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7365, file: !3, line: 4719, column: 30)
!7371 = !DILocation(line: 4720, column: 19, scope: !7370)
!7372 = !DILocation(line: 4720, column: 4, scope: !7370)
!7373 = !DILocation(line: 4721, column: 4, scope: !7370)
!7374 = !DILocation(line: 4726, column: 5, scope: !7229)
!7375 = !DILocation(line: 4726, column: 17, scope: !7229)
!7376 = !DILocation(line: 4727, column: 5, scope: !7229)
!7377 = !DILocation(line: 4727, column: 18, scope: !7229)
!7378 = !DILocation(line: 4728, column: 5, scope: !7229)
!7379 = !DILocation(line: 4728, column: 16, scope: !7229)
!7380 = !DILocation(line: 4729, column: 39, scope: !7229)
!7381 = !DILocation(line: 4729, column: 49, scope: !7229)
!7382 = !DILocation(line: 4729, column: 20, scope: !7229)
!7383 = !DILocation(line: 4729, column: 18, scope: !7229)
!7384 = !DILocation(line: 4730, column: 21, scope: !7229)
!7385 = !DILocation(line: 4730, column: 31, scope: !7229)
!7386 = !DILocation(line: 4730, column: 2, scope: !7229)
!7387 = !DILocation(line: 4732, column: 5, scope: !7229)
!7388 = !DILocation(line: 4732, column: 10, scope: !7229)
!7389 = !DILocation(line: 4734, column: 2, scope: !7229)
!7390 = !DILocation(line: 4734, column: 9, scope: !7229)
!7391 = !DILocation(line: 4734, column: 23, scope: !7229)
!7392 = !DILocation(line: 4734, column: 32, scope: !7229)
!7393 = !DILocation(line: 4734, column: 37, scope: !7229)
!7394 = !DILocation(line: 4736, column: 45, scope: !7229)
!7395 = !DILocation(line: 4736, column: 49, scope: !7229)
!7396 = !DILocation(line: 4736, column: 55, scope: !7229)
!7397 = !DILocation(line: 4736, column: 2, scope: !7229)
!7398 = !DILocation(line: 4740, column: 2, scope: !7229)
!7399 = !DILocation(line: 4742, column: 9, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 4742, column: 6)
!7401 = !DILocation(line: 4742, column: 12, scope: !7400)
!7402 = !DILocation(line: 4742, column: 6, scope: !7229)
!7403 = !DILocation(line: 4743, column: 22, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7400, file: !3, line: 4742, column: 21)
!7405 = !DILocation(line: 4743, column: 32, scope: !7404)
!7406 = !DILocation(line: 4743, column: 39, scope: !7404)
!7407 = !DILocation(line: 4743, column: 3, scope: !7404)
!7408 = !DILocation(line: 4744, column: 3, scope: !7404)
!7409 = !DILocalVariable(name: "pos", scope: !7410, file: !3, line: 4747, type: !860)
!7410 = distinct !DILexicalBlock(scope: !7400, file: !3, line: 4746, column: 7)
!7411 = !DILocation(line: 4747, column: 9, scope: !7410)
!7412 = !DILocalVariable(name: "lastpos", scope: !7410, file: !3, line: 4748, type: !860)
!7413 = !DILocation(line: 4748, column: 9, scope: !7410)
!7414 = !DILocalVariable(name: "a", scope: !7410, file: !3, line: 4749, type: !22)
!7415 = !DILocation(line: 4749, column: 7, scope: !7410)
!7416 = !DILocation(line: 4751, column: 10, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 4751, column: 3)
!7418 = !DILocation(line: 4751, column: 8, scope: !7417)
!7419 = !DILocation(line: 4751, column: 15, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7417, file: !3, line: 4751, column: 3)
!7421 = !DILocation(line: 4751, column: 22, scope: !7420)
!7422 = !DILocation(line: 4751, column: 17, scope: !7420)
!7423 = !DILocation(line: 4751, column: 3, scope: !7417)
!7424 = !DILocation(line: 4752, column: 33, scope: !7420)
!7425 = !DILocation(line: 4752, column: 44, scope: !7420)
!7426 = !DILocation(line: 4752, column: 30, scope: !7420)
!7427 = !DILocation(line: 4752, column: 47, scope: !7420)
!7428 = !DILocation(line: 4752, column: 4, scope: !7420)
!7429 = !DILocation(line: 4751, column: 34, scope: !7420)
!7430 = !DILocation(line: 4751, column: 3, scope: !7420)
!7431 = distinct !{!7431, !7423, !7432}
!7432 = !DILocation(line: 4752, column: 61, scope: !7417)
!7433 = !DILocation(line: 4754, column: 20, scope: !7410)
!7434 = !DILocation(line: 4754, column: 25, scope: !7410)
!7435 = !DILocation(line: 4754, column: 34, scope: !7410)
!7436 = !DILocation(line: 4754, column: 3, scope: !7410)
!7437 = !DILocation(line: 4756, column: 3, scope: !7410)
!7438 = !DILocation(line: 4758, column: 10, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 4758, column: 3)
!7440 = !DILocation(line: 4758, column: 8, scope: !7439)
!7441 = !DILocation(line: 4758, column: 15, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 4758, column: 3)
!7443 = !DILocation(line: 4758, column: 22, scope: !7442)
!7444 = !DILocation(line: 4758, column: 17, scope: !7442)
!7445 = !DILocation(line: 4758, column: 3, scope: !7439)
!7446 = !DILocation(line: 4759, column: 22, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7442, file: !3, line: 4758, column: 38)
!7448 = !DILocation(line: 4759, column: 33, scope: !7447)
!7449 = !DILocation(line: 4759, column: 19, scope: !7447)
!7450 = !DILocation(line: 4759, column: 36, scope: !7447)
!7451 = !DILocation(line: 4759, column: 4, scope: !7447)
!7452 = !DILocation(line: 4760, column: 26, scope: !7447)
!7453 = !DILocation(line: 4760, column: 54, scope: !7447)
!7454 = !DILocation(line: 4760, column: 65, scope: !7447)
!7455 = !DILocation(line: 4760, column: 51, scope: !7447)
!7456 = !DILocation(line: 4760, column: 68, scope: !7447)
!7457 = !DILocation(line: 4760, column: 4, scope: !7447)
!7458 = !DILocation(line: 4761, column: 3, scope: !7447)
!7459 = !DILocation(line: 4758, column: 34, scope: !7442)
!7460 = !DILocation(line: 4758, column: 3, scope: !7442)
!7461 = distinct !{!7461, !7445, !7462}
!7462 = !DILocation(line: 4761, column: 3, scope: !7439)
!7463 = !DILocation(line: 4764, column: 2, scope: !7229)
!7464 = !DILocation(line: 4766, column: 2, scope: !7229)
!7465 = !DILocation(line: 4766, column: 9, scope: !7229)
!7466 = !DILocation(line: 4766, column: 23, scope: !7229)
!7467 = !DILocation(line: 4766, column: 32, scope: !7229)
!7468 = !DILocation(line: 4766, column: 37, scope: !7229)
!7469 = !DILocation(line: 4767, column: 21, scope: !7229)
!7470 = !DILocation(line: 4767, column: 31, scope: !7229)
!7471 = !DILocation(line: 4767, column: 38, scope: !7229)
!7472 = !DILocation(line: 4767, column: 2, scope: !7229)
!7473 = !DILocation(line: 4769, column: 2, scope: !7229)
!7474 = !DILocation(line: 4770, column: 1, scope: !7229)
!7475 = distinct !DISubprogram(name: "PAINT_OT_image_from_view", scope: !3, file: !3, line: 4854, type: !4, scopeLine: 4855, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!7476 = !DILocalVariable(name: "ot", arg: 1, scope: !7475, file: !3, line: 4854, type: !6)
!7477 = !DILocation(line: 4854, column: 47, scope: !7475)
!7478 = !DILocation(line: 4857, column: 2, scope: !7475)
!7479 = !DILocation(line: 4857, column: 6, scope: !7475)
!7480 = !DILocation(line: 4857, column: 11, scope: !7475)
!7481 = !DILocation(line: 4858, column: 2, scope: !7475)
!7482 = !DILocation(line: 4858, column: 6, scope: !7475)
!7483 = !DILocation(line: 4858, column: 13, scope: !7475)
!7484 = !DILocation(line: 4859, column: 2, scope: !7475)
!7485 = !DILocation(line: 4859, column: 6, scope: !7475)
!7486 = !DILocation(line: 4859, column: 18, scope: !7475)
!7487 = !DILocation(line: 4862, column: 2, scope: !7475)
!7488 = !DILocation(line: 4862, column: 6, scope: !7475)
!7489 = !DILocation(line: 4862, column: 11, scope: !7475)
!7490 = !DILocation(line: 4863, column: 2, scope: !7475)
!7491 = !DILocation(line: 4863, column: 6, scope: !7475)
!7492 = !DILocation(line: 4863, column: 11, scope: !7475)
!7493 = !DILocation(line: 4866, column: 2, scope: !7475)
!7494 = !DILocation(line: 4866, column: 6, scope: !7475)
!7495 = !DILocation(line: 4866, column: 11, scope: !7475)
!7496 = !DILocation(line: 4868, column: 27, scope: !7475)
!7497 = !DILocation(line: 4868, column: 31, scope: !7475)
!7498 = !DILocation(line: 4868, column: 2, scope: !7475)
!7499 = !DILocation(line: 4869, column: 1, scope: !7475)
!7500 = distinct !DISubprogram(name: "texture_paint_image_from_view_exec", scope: !3, file: !3, line: 4794, type: !7230, scopeLine: 4795, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!7501 = !DILocalVariable(name: "C", arg: 1, scope: !7500, file: !3, line: 4794, type: !4645)
!7502 = !DILocation(line: 4794, column: 57, scope: !7500)
!7503 = !DILocalVariable(name: "op", arg: 2, scope: !7500, file: !3, line: 4794, type: !7232)
!7504 = !DILocation(line: 4794, column: 72, scope: !7500)
!7505 = !DILocalVariable(name: "image", scope: !7500, file: !3, line: 4796, type: !3861)
!7506 = !DILocation(line: 4796, column: 9, scope: !7500)
!7507 = !DILocalVariable(name: "ibuf", scope: !7500, file: !3, line: 4797, type: !3893)
!7508 = !DILocation(line: 4797, column: 9, scope: !7500)
!7509 = !DILocalVariable(name: "filename", scope: !7500, file: !3, line: 4798, type: !131)
!7510 = !DILocation(line: 4798, column: 7, scope: !7500)
!7511 = !DILocalVariable(name: "scene", scope: !7500, file: !3, line: 4800, type: !3828)
!7512 = !DILocation(line: 4800, column: 9, scope: !7500)
!7513 = !DILocation(line: 4800, column: 32, scope: !7500)
!7514 = !DILocation(line: 4800, column: 17, scope: !7500)
!7515 = !DILocalVariable(name: "settings", scope: !7500, file: !3, line: 4801, type: !4760)
!7516 = !DILocation(line: 4801, column: 16, scope: !7500)
!7517 = !DILocation(line: 4801, column: 27, scope: !7500)
!7518 = !DILocation(line: 4801, column: 34, scope: !7500)
!7519 = !DILocalVariable(name: "w", scope: !7500, file: !3, line: 4802, type: !22)
!7520 = !DILocation(line: 4802, column: 6, scope: !7500)
!7521 = !DILocation(line: 4802, column: 10, scope: !7500)
!7522 = !DILocation(line: 4802, column: 20, scope: !7500)
!7523 = !DILocation(line: 4802, column: 29, scope: !7500)
!7524 = !DILocalVariable(name: "h", scope: !7500, file: !3, line: 4803, type: !22)
!7525 = !DILocation(line: 4803, column: 6, scope: !7500)
!7526 = !DILocation(line: 4803, column: 10, scope: !7500)
!7527 = !DILocation(line: 4803, column: 20, scope: !7500)
!7528 = !DILocation(line: 4803, column: 29, scope: !7500)
!7529 = !DILocalVariable(name: "maxsize", scope: !7500, file: !3, line: 4804, type: !22)
!7530 = !DILocation(line: 4804, column: 6, scope: !7500)
!7531 = !DILocalVariable(name: "err_out", scope: !7500, file: !3, line: 4805, type: !636)
!7532 = !DILocation(line: 4805, column: 7, scope: !7500)
!7533 = !DILocation(line: 4807, column: 17, scope: !7500)
!7534 = !DILocation(line: 4807, column: 21, scope: !7500)
!7535 = !DILocation(line: 4807, column: 38, scope: !7500)
!7536 = !DILocation(line: 4807, column: 2, scope: !7500)
!7537 = !DILocation(line: 4809, column: 12, scope: !7500)
!7538 = !DILocation(line: 4809, column: 10, scope: !7500)
!7539 = !DILocation(line: 4811, column: 6, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7500, file: !3, line: 4811, column: 6)
!7541 = !DILocation(line: 4811, column: 10, scope: !7540)
!7542 = !DILocation(line: 4811, column: 8, scope: !7540)
!7543 = !DILocation(line: 4811, column: 6, scope: !7500)
!7544 = !DILocation(line: 4811, column: 23, scope: !7540)
!7545 = !DILocation(line: 4811, column: 21, scope: !7540)
!7546 = !DILocation(line: 4811, column: 19, scope: !7540)
!7547 = !DILocation(line: 4812, column: 6, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7500, file: !3, line: 4812, column: 6)
!7549 = !DILocation(line: 4812, column: 10, scope: !7548)
!7550 = !DILocation(line: 4812, column: 8, scope: !7548)
!7551 = !DILocation(line: 4812, column: 6, scope: !7500)
!7552 = !DILocation(line: 4812, column: 23, scope: !7548)
!7553 = !DILocation(line: 4812, column: 21, scope: !7548)
!7554 = !DILocation(line: 4812, column: 19, scope: !7548)
!7555 = !DILocation(line: 4814, column: 40, scope: !7500)
!7556 = !DILocation(line: 4814, column: 61, scope: !7500)
!7557 = !DILocation(line: 4814, column: 47, scope: !7500)
!7558 = !DILocation(line: 4814, column: 79, scope: !7500)
!7559 = !DILocation(line: 4814, column: 65, scope: !7500)
!7560 = !DILocation(line: 4814, column: 83, scope: !7500)
!7561 = !DILocation(line: 4814, column: 86, scope: !7500)
!7562 = !DILocation(line: 4814, column: 120, scope: !7500)
!7563 = !DILocation(line: 4814, column: 9, scope: !7500)
!7564 = !DILocation(line: 4814, column: 7, scope: !7500)
!7565 = !DILocation(line: 4815, column: 7, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7500, file: !3, line: 4815, column: 6)
!7567 = !DILocation(line: 4815, column: 6, scope: !7500)
!7568 = !DILocation(line: 4818, column: 15, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7566, file: !3, line: 4815, column: 13)
!7570 = !DILocation(line: 4818, column: 19, scope: !7569)
!7571 = !DILocation(line: 4818, column: 88, scope: !7569)
!7572 = !DILocation(line: 4818, column: 3, scope: !7569)
!7573 = !DILocation(line: 4819, column: 3, scope: !7569)
!7574 = !DILocation(line: 4822, column: 35, scope: !7500)
!7575 = !DILocation(line: 4822, column: 10, scope: !7500)
!7576 = !DILocation(line: 4822, column: 8, scope: !7500)
!7577 = !DILocation(line: 4824, column: 6, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7500, file: !3, line: 4824, column: 6)
!7579 = !DILocation(line: 4824, column: 6, scope: !7500)
!7580 = !DILocalVariable(name: "v3d", scope: !7581, file: !3, line: 4827, type: !3679)
!7581 = distinct !DILexicalBlock(scope: !7578, file: !3, line: 4824, column: 13)
!7582 = !DILocation(line: 4827, column: 11, scope: !7581)
!7583 = !DILocation(line: 4827, column: 31, scope: !7581)
!7584 = !DILocation(line: 4827, column: 17, scope: !7581)
!7585 = !DILocalVariable(name: "rv3d", scope: !7581, file: !3, line: 4828, type: !3762)
!7586 = !DILocation(line: 4828, column: 17, scope: !7581)
!7587 = !DILocation(line: 4828, column: 45, scope: !7581)
!7588 = !DILocation(line: 4828, column: 24, scope: !7581)
!7589 = !DILocalVariable(name: "val", scope: !7581, file: !3, line: 4830, type: !7590)
!7590 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyTemplate", file: !7591, line: 56, baseType: !7592)
!7591 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_idprop.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7592 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "IDPropertyTemplate", file: !7591, line: 38, size: 128, elements: !7593)
!7593 = !{!7594, !7595, !7596, !7597, !7603, !7604, !7609}
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !7592, file: !7591, line: 39, baseType: !22, size: 32)
!7595 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !7592, file: !7591, line: 40, baseType: !184, size: 32)
!7596 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !7592, file: !7591, line: 41, baseType: !994, size: 64)
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !7592, file: !7591, line: 46, baseType: !7598, size: 128)
!7598 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7592, file: !7591, line: 42, size: 128, elements: !7599)
!7599 = !{!7600, !7601, !7602}
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !7598, file: !7591, line: 43, baseType: !913, size: 64)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7598, file: !7591, line: 44, baseType: !48, size: 16, offset: 64)
!7602 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !7598, file: !7591, line: 45, baseType: !14, size: 8, offset: 80)
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7592, file: !7591, line: 47, baseType: !119, size: 64)
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !7592, file: !7591, line: 51, baseType: !7605, size: 32)
!7605 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7592, file: !7591, line: 48, size: 32, elements: !7606)
!7606 = !{!7607, !7608}
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7605, file: !7591, line: 49, baseType: !48, size: 16)
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7605, file: !7591, line: 50, baseType: !48, size: 16, offset: 16)
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "matrix_or_vector", scope: !7592, file: !7591, line: 55, baseType: !7610, size: 128)
!7610 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7592, file: !7591, line: 52, size: 128, elements: !7611)
!7611 = !{!7612, !7613}
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "matvec_size", scope: !7610, file: !7591, line: 53, baseType: !22, size: 32)
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "example", scope: !7610, file: !7591, line: 54, baseType: !216, size: 64, offset: 64)
!7614 = !DILocation(line: 4830, column: 22, scope: !7581)
!7615 = !DILocalVariable(name: "idgroup", scope: !7581, file: !3, line: 4831, type: !37)
!7616 = !DILocation(line: 4831, column: 15, scope: !7581)
!7617 = !DILocation(line: 4831, column: 44, scope: !7581)
!7618 = !DILocation(line: 4831, column: 51, scope: !7581)
!7619 = !DILocation(line: 4831, column: 25, scope: !7581)
!7620 = !DILocalVariable(name: "view_data", scope: !7581, file: !3, line: 4832, type: !37)
!7621 = !DILocation(line: 4832, column: 15, scope: !7581)
!7622 = !DILocalVariable(name: "is_ortho", scope: !7581, file: !3, line: 4833, type: !233)
!7623 = !DILocation(line: 4833, column: 8, scope: !7581)
!7624 = !DILocalVariable(name: "array", scope: !7581, file: !3, line: 4834, type: !216)
!7625 = !DILocation(line: 4834, column: 10, scope: !7581)
!7626 = !DILocation(line: 4836, column: 7, scope: !7581)
!7627 = !DILocation(line: 4836, column: 13, scope: !7581)
!7628 = !DILocation(line: 4836, column: 17, scope: !7581)
!7629 = !DILocation(line: 4837, column: 7, scope: !7581)
!7630 = !DILocation(line: 4837, column: 13, scope: !7581)
!7631 = !DILocation(line: 4837, column: 18, scope: !7581)
!7632 = !DILocation(line: 4838, column: 15, scope: !7581)
!7633 = !DILocation(line: 4838, column: 13, scope: !7581)
!7634 = !DILocation(line: 4840, column: 20, scope: !7581)
!7635 = !DILocation(line: 4840, column: 11, scope: !7581)
!7636 = !DILocation(line: 4840, column: 9, scope: !7581)
!7637 = !DILocation(line: 4841, column: 10, scope: !7581)
!7638 = !DILocation(line: 4841, column: 3, scope: !7581)
!7639 = !DILocation(line: 4841, column: 17, scope: !7581)
!7640 = !DILocation(line: 4841, column: 23, scope: !7581)
!7641 = !DILocation(line: 4841, column: 60, scope: !7581)
!7642 = !DILocation(line: 4842, column: 10, scope: !7581)
!7643 = !DILocation(line: 4842, column: 3, scope: !7581)
!7644 = !DILocation(line: 4842, column: 17, scope: !7581)
!7645 = !DILocation(line: 4842, column: 23, scope: !7581)
!7646 = !DILocation(line: 4842, column: 62, scope: !7581)
!7647 = !DILocation(line: 4843, column: 39, scope: !7581)
!7648 = !DILocation(line: 4843, column: 44, scope: !7581)
!7649 = !DILocation(line: 4843, column: 51, scope: !7581)
!7650 = !DILocation(line: 4843, column: 62, scope: !7581)
!7651 = !DILocation(line: 4843, column: 14, scope: !7581)
!7652 = !DILocation(line: 4843, column: 12, scope: !7581)
!7653 = !DILocation(line: 4844, column: 14, scope: !7581)
!7654 = !DILocation(line: 4844, column: 3, scope: !7581)
!7655 = !DILocation(line: 4844, column: 12, scope: !7581)
!7656 = !DILocation(line: 4846, column: 18, scope: !7581)
!7657 = !DILocation(line: 4846, column: 27, scope: !7581)
!7658 = !DILocation(line: 4846, column: 3, scope: !7581)
!7659 = !DILocation(line: 4848, column: 14, scope: !7581)
!7660 = !DILocation(line: 4848, column: 21, scope: !7581)
!7661 = !DILocation(line: 4848, column: 3, scope: !7581)
!7662 = !DILocation(line: 4849, column: 2, scope: !7581)
!7663 = !DILocation(line: 4851, column: 2, scope: !7500)
!7664 = !DILocation(line: 4852, column: 1, scope: !7500)
!7665 = distinct !DISubprogram(name: "BKE_paint_data_warning", scope: !3, file: !3, line: 4875, type: !7666, scopeLine: 4876, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!7666 = !DISubroutineType(types: !7667)
!7667 = !{null, !86, !233, !233, !233, !233}
!7668 = !DILocalVariable(name: "reports", arg: 1, scope: !7665, file: !3, line: 4875, type: !86)
!7669 = !DILocation(line: 4875, column: 48, scope: !7665)
!7670 = !DILocalVariable(name: "uvs", arg: 2, scope: !7665, file: !3, line: 4875, type: !233)
!7671 = !DILocation(line: 4875, column: 62, scope: !7665)
!7672 = !DILocalVariable(name: "mat", arg: 3, scope: !7665, file: !3, line: 4875, type: !233)
!7673 = !DILocation(line: 4875, column: 72, scope: !7665)
!7674 = !DILocalVariable(name: "tex", arg: 4, scope: !7665, file: !3, line: 4875, type: !233)
!7675 = !DILocation(line: 4875, column: 82, scope: !7665)
!7676 = !DILocalVariable(name: "stencil", arg: 5, scope: !7665, file: !3, line: 4875, type: !233)
!7677 = !DILocation(line: 4875, column: 92, scope: !7665)
!7678 = !DILocation(line: 4877, column: 14, scope: !7665)
!7679 = !DILocation(line: 4878, column: 14, scope: !7665)
!7680 = !DILocation(line: 4878, column: 13, scope: !7665)
!7681 = !DILocation(line: 4879, column: 14, scope: !7665)
!7682 = !DILocation(line: 4879, column: 13, scope: !7665)
!7683 = !DILocation(line: 4880, column: 14, scope: !7665)
!7684 = !DILocation(line: 4880, column: 13, scope: !7665)
!7685 = !DILocation(line: 4881, column: 14, scope: !7665)
!7686 = !DILocation(line: 4881, column: 13, scope: !7665)
!7687 = !DILocation(line: 4877, column: 2, scope: !7665)
!7688 = !DILocation(line: 4883, column: 1, scope: !7665)
!7689 = distinct !DISubprogram(name: "BKE_paint_proj_mesh_data_check", scope: !3, file: !3, line: 4886, type: !7690, scopeLine: 4887, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!7690 = !DISubroutineType(types: !7691)
!7691 = !{!233, !3828, !3842, !1024, !1024, !1024, !1024}
!7692 = !DILocalVariable(name: "scene", arg: 1, scope: !7689, file: !3, line: 4886, type: !3828)
!7693 = !DILocation(line: 4886, column: 44, scope: !7689)
!7694 = !DILocalVariable(name: "ob", arg: 2, scope: !7689, file: !3, line: 4886, type: !3842)
!7695 = !DILocation(line: 4886, column: 59, scope: !7689)
!7696 = !DILocalVariable(name: "uvs", arg: 3, scope: !7689, file: !3, line: 4886, type: !1024)
!7697 = !DILocation(line: 4886, column: 69, scope: !7689)
!7698 = !DILocalVariable(name: "mat", arg: 4, scope: !7689, file: !3, line: 4886, type: !1024)
!7699 = !DILocation(line: 4886, column: 80, scope: !7689)
!7700 = !DILocalVariable(name: "tex", arg: 5, scope: !7689, file: !3, line: 4886, type: !1024)
!7701 = !DILocation(line: 4886, column: 91, scope: !7689)
!7702 = !DILocalVariable(name: "stencil", arg: 6, scope: !7689, file: !3, line: 4886, type: !1024)
!7703 = !DILocation(line: 4886, column: 102, scope: !7689)
!7704 = !DILocalVariable(name: "me", scope: !7689, file: !3, line: 4888, type: !4020)
!7705 = !DILocation(line: 4888, column: 8, scope: !7689)
!7706 = !DILocalVariable(name: "layernum", scope: !7689, file: !3, line: 4889, type: !22)
!7707 = !DILocation(line: 4889, column: 6, scope: !7689)
!7708 = !DILocalVariable(name: "imapaint", scope: !7689, file: !3, line: 4890, type: !7709)
!7709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7710, size: 64)
!7710 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImagePaintSettings", file: !155, line: 853, baseType: !2762)
!7711 = !DILocation(line: 4890, column: 22, scope: !7689)
!7712 = !DILocation(line: 4890, column: 34, scope: !7689)
!7713 = !DILocation(line: 4890, column: 41, scope: !7689)
!7714 = !DILocation(line: 4890, column: 55, scope: !7689)
!7715 = !DILocalVariable(name: "br", scope: !7689, file: !3, line: 4891, type: !3834)
!7716 = !DILocation(line: 4891, column: 9, scope: !7689)
!7717 = !DILocation(line: 4891, column: 31, scope: !7689)
!7718 = !DILocation(line: 4891, column: 41, scope: !7689)
!7719 = !DILocation(line: 4891, column: 14, scope: !7689)
!7720 = !DILocalVariable(name: "hasmat", scope: !7689, file: !3, line: 4892, type: !233)
!7721 = !DILocation(line: 4892, column: 7, scope: !7689)
!7722 = !DILocalVariable(name: "hastex", scope: !7689, file: !3, line: 4893, type: !233)
!7723 = !DILocation(line: 4893, column: 7, scope: !7689)
!7724 = !DILocalVariable(name: "hasstencil", scope: !7689, file: !3, line: 4894, type: !233)
!7725 = !DILocation(line: 4894, column: 7, scope: !7689)
!7726 = !DILocalVariable(name: "hasuvs", scope: !7689, file: !3, line: 4895, type: !233)
!7727 = !DILocation(line: 4895, column: 7, scope: !7689)
!7728 = !DILocation(line: 4897, column: 2, scope: !7689)
!7729 = !DILocation(line: 4897, column: 12, scope: !7689)
!7730 = !DILocation(line: 4897, column: 25, scope: !7689)
!7731 = !DILocation(line: 4901, column: 6, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 4901, column: 6)
!7733 = !DILocation(line: 4901, column: 16, scope: !7732)
!7734 = !DILocation(line: 4901, column: 21, scope: !7732)
!7735 = !DILocation(line: 4901, column: 6, scope: !7689)
!7736 = !DILocation(line: 4903, column: 7, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 4903, column: 7)
!7738 = distinct !DILexicalBlock(scope: !7732, file: !3, line: 4901, column: 50)
!7739 = !DILocation(line: 4903, column: 11, scope: !7737)
!7740 = !DILocation(line: 4903, column: 18, scope: !7737)
!7741 = !DILocation(line: 4903, column: 7, scope: !7738)
!7742 = !DILocation(line: 4904, column: 11, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 4903, column: 24)
!7744 = !DILocation(line: 4905, column: 11, scope: !7743)
!7745 = !DILocation(line: 4906, column: 3, scope: !7743)
!7746 = !DILocalVariable(name: "i", scope: !7747, file: !3, line: 4909, type: !22)
!7747 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 4907, column: 8)
!7748 = !DILocation(line: 4909, column: 8, scope: !7747)
!7749 = !DILocation(line: 4910, column: 11, scope: !7747)
!7750 = !DILocation(line: 4911, column: 11, scope: !7747)
!7751 = !DILocation(line: 4913, column: 11, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 4913, column: 4)
!7753 = !DILocation(line: 4913, column: 9, scope: !7752)
!7754 = !DILocation(line: 4913, column: 16, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7752, file: !3, line: 4913, column: 4)
!7756 = !DILocation(line: 4913, column: 20, scope: !7755)
!7757 = !DILocation(line: 4913, column: 24, scope: !7755)
!7758 = !DILocation(line: 4913, column: 31, scope: !7755)
!7759 = !DILocation(line: 4913, column: 18, scope: !7755)
!7760 = !DILocation(line: 4913, column: 4, scope: !7752)
!7761 = !DILocalVariable(name: "ma", scope: !7762, file: !3, line: 4914, type: !7763)
!7762 = distinct !DILexicalBlock(scope: !7755, file: !3, line: 4913, column: 41)
!7763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7764, size: 64)
!7764 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !380, line: 203, baseType: !379)
!7765 = !DILocation(line: 4914, column: 15, scope: !7762)
!7766 = !DILocation(line: 4914, column: 42, scope: !7762)
!7767 = !DILocation(line: 4914, column: 46, scope: !7762)
!7768 = !DILocation(line: 4914, column: 20, scope: !7762)
!7769 = !DILocation(line: 4916, column: 9, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7762, file: !3, line: 4916, column: 9)
!7771 = !DILocation(line: 4916, column: 9, scope: !7762)
!7772 = !DILocation(line: 4917, column: 13, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 4916, column: 13)
!7774 = !DILocation(line: 4918, column: 11, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 4918, column: 10)
!7776 = !DILocation(line: 4918, column: 15, scope: !7775)
!7777 = !DILocation(line: 4918, column: 10, scope: !7773)
!7778 = !DILocation(line: 4920, column: 39, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 4918, column: 29)
!7780 = !DILocation(line: 4920, column: 46, scope: !7779)
!7781 = !DILocation(line: 4920, column: 7, scope: !7779)
!7782 = !DILocation(line: 4923, column: 11, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 4923, column: 11)
!7784 = !DILocation(line: 4923, column: 15, scope: !7783)
!7785 = !DILocation(line: 4923, column: 11, scope: !7779)
!7786 = !DILocation(line: 4924, column: 15, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7783, file: !3, line: 4923, column: 29)
!7788 = !DILocation(line: 4925, column: 8, scope: !7787)
!7789 = !DILocation(line: 4927, column: 6, scope: !7779)
!7790 = !DILocation(line: 4929, column: 14, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 4928, column: 11)
!7792 = !DILocation(line: 4930, column: 7, scope: !7791)
!7793 = !DILocation(line: 4932, column: 5, scope: !7773)
!7794 = !DILocation(line: 4933, column: 4, scope: !7762)
!7795 = !DILocation(line: 4913, column: 37, scope: !7755)
!7796 = !DILocation(line: 4913, column: 4, scope: !7755)
!7797 = distinct !{!7797, !7760, !7798}
!7798 = !DILocation(line: 4933, column: 4, scope: !7752)
!7799 = !DILocation(line: 4935, column: 2, scope: !7738)
!7800 = !DILocation(line: 4936, column: 11, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7732, file: !3, line: 4936, column: 11)
!7802 = !DILocation(line: 4936, column: 21, scope: !7801)
!7803 = !DILocation(line: 4936, column: 26, scope: !7801)
!7804 = !DILocation(line: 4936, column: 11, scope: !7732)
!7805 = !DILocation(line: 4937, column: 7, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7807, file: !3, line: 4937, column: 7)
!7807 = distinct !DILexicalBlock(scope: !7801, file: !3, line: 4936, column: 52)
!7808 = !DILocation(line: 4937, column: 17, scope: !7806)
!7809 = !DILocation(line: 4937, column: 24, scope: !7806)
!7810 = !DILocation(line: 4937, column: 7, scope: !7807)
!7811 = !DILocation(line: 4938, column: 11, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7806, file: !3, line: 4937, column: 33)
!7813 = !DILocation(line: 4939, column: 3, scope: !7812)
!7814 = !DILocation(line: 4940, column: 2, scope: !7807)
!7815 = !DILocation(line: 4942, column: 28, scope: !7689)
!7816 = !DILocation(line: 4942, column: 7, scope: !7689)
!7817 = !DILocation(line: 4942, column: 5, scope: !7689)
!7818 = !DILocation(line: 4943, column: 42, scope: !7689)
!7819 = !DILocation(line: 4943, column: 46, scope: !7689)
!7820 = !DILocation(line: 4943, column: 13, scope: !7689)
!7821 = !DILocation(line: 4943, column: 11, scope: !7689)
!7822 = !DILocation(line: 4945, column: 6, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 4945, column: 6)
!7824 = !DILocation(line: 4945, column: 15, scope: !7823)
!7825 = !DILocation(line: 4945, column: 6, scope: !7689)
!7826 = !DILocation(line: 4946, column: 10, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7823, file: !3, line: 4945, column: 21)
!7828 = !DILocation(line: 4947, column: 2, scope: !7827)
!7829 = !DILocation(line: 4950, column: 6, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 4950, column: 6)
!7831 = !DILocation(line: 4950, column: 9, scope: !7830)
!7832 = !DILocation(line: 4950, column: 12, scope: !7830)
!7833 = !DILocation(line: 4950, column: 16, scope: !7830)
!7834 = !DILocation(line: 4950, column: 32, scope: !7830)
!7835 = !DILocation(line: 4950, column: 6, scope: !7689)
!7836 = !DILocation(line: 4951, column: 3, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7830, file: !3, line: 4950, column: 52)
!7838 = !DILocation(line: 4951, column: 13, scope: !7837)
!7839 = !DILocation(line: 4951, column: 18, scope: !7837)
!7840 = !DILocation(line: 4953, column: 7, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7837, file: !3, line: 4953, column: 7)
!7842 = !DILocation(line: 4953, column: 17, scope: !7841)
!7843 = !DILocation(line: 4953, column: 25, scope: !7841)
!7844 = !DILocation(line: 4953, column: 7, scope: !7837)
!7845 = !DILocation(line: 4954, column: 15, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7841, file: !3, line: 4953, column: 34)
!7847 = !DILocation(line: 4955, column: 3, scope: !7846)
!7848 = !DILocation(line: 4956, column: 2, scope: !7837)
!7849 = !DILocation(line: 4958, column: 7, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 4958, column: 6)
!7851 = !DILocation(line: 4958, column: 6, scope: !7689)
!7852 = !DILocation(line: 4958, column: 15, scope: !7850)
!7853 = !DILocation(line: 4958, column: 25, scope: !7850)
!7854 = !DILocation(line: 4958, column: 38, scope: !7850)
!7855 = !DILocation(line: 4959, column: 7, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 4959, column: 6)
!7857 = !DILocation(line: 4959, column: 6, scope: !7689)
!7858 = !DILocation(line: 4959, column: 15, scope: !7856)
!7859 = !DILocation(line: 4959, column: 25, scope: !7856)
!7860 = !DILocation(line: 4959, column: 38, scope: !7856)
!7861 = !DILocation(line: 4960, column: 7, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 4960, column: 6)
!7863 = !DILocation(line: 4960, column: 6, scope: !7689)
!7864 = !DILocation(line: 4960, column: 15, scope: !7862)
!7865 = !DILocation(line: 4960, column: 25, scope: !7862)
!7866 = !DILocation(line: 4960, column: 38, scope: !7862)
!7867 = !DILocation(line: 4961, column: 7, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 4961, column: 6)
!7869 = !DILocation(line: 4961, column: 6, scope: !7689)
!7870 = !DILocation(line: 4961, column: 19, scope: !7868)
!7871 = !DILocation(line: 4961, column: 29, scope: !7868)
!7872 = !DILocation(line: 4961, column: 42, scope: !7868)
!7873 = !DILocation(line: 4963, column: 6, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 4963, column: 6)
!7875 = !DILocation(line: 4963, column: 6, scope: !7689)
!7876 = !DILocation(line: 4964, column: 10, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 4963, column: 11)
!7878 = !DILocation(line: 4964, column: 4, scope: !7877)
!7879 = !DILocation(line: 4964, column: 8, scope: !7877)
!7880 = !DILocation(line: 4965, column: 2, scope: !7877)
!7881 = !DILocation(line: 4966, column: 6, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 4966, column: 6)
!7883 = !DILocation(line: 4966, column: 6, scope: !7689)
!7884 = !DILocation(line: 4967, column: 10, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 4966, column: 11)
!7886 = !DILocation(line: 4967, column: 4, scope: !7885)
!7887 = !DILocation(line: 4967, column: 8, scope: !7885)
!7888 = !DILocation(line: 4968, column: 2, scope: !7885)
!7889 = !DILocation(line: 4969, column: 6, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 4969, column: 6)
!7891 = !DILocation(line: 4969, column: 6, scope: !7689)
!7892 = !DILocation(line: 4970, column: 10, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7890, file: !3, line: 4969, column: 11)
!7894 = !DILocation(line: 4970, column: 4, scope: !7893)
!7895 = !DILocation(line: 4970, column: 8, scope: !7893)
!7896 = !DILocation(line: 4971, column: 2, scope: !7893)
!7897 = !DILocation(line: 4972, column: 6, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 4972, column: 6)
!7899 = !DILocation(line: 4972, column: 6, scope: !7689)
!7900 = !DILocation(line: 4973, column: 14, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7898, file: !3, line: 4972, column: 15)
!7902 = !DILocation(line: 4973, column: 4, scope: !7901)
!7903 = !DILocation(line: 4973, column: 12, scope: !7901)
!7904 = !DILocation(line: 4974, column: 2, scope: !7901)
!7905 = !DILocation(line: 4976, column: 9, scope: !7689)
!7906 = !DILocation(line: 4976, column: 16, scope: !7689)
!7907 = !DILocation(line: 4976, column: 19, scope: !7689)
!7908 = !DILocation(line: 4976, column: 26, scope: !7689)
!7909 = !DILocation(line: 4976, column: 29, scope: !7689)
!7910 = !DILocation(line: 4976, column: 36, scope: !7689)
!7911 = !DILocation(line: 4976, column: 39, scope: !7689)
!7912 = !DILocation(line: 0, scope: !7689)
!7913 = !DILocation(line: 4976, column: 2, scope: !7689)
!7914 = !DILocalVariable(name: "ot", arg: 1, scope: !2, file: !3, line: 5146, type: !6)
!7915 = !DILocation(line: 5146, column: 54, scope: !2)
!7916 = !DILocalVariable(name: "prop", scope: !2, file: !3, line: 5148, type: !3405)
!7917 = !DILocation(line: 5148, column: 15, scope: !2)
!7918 = !DILocation(line: 5152, column: 2, scope: !2)
!7919 = !DILocation(line: 5152, column: 6, scope: !2)
!7920 = !DILocation(line: 5152, column: 11, scope: !2)
!7921 = !DILocation(line: 5153, column: 2, scope: !2)
!7922 = !DILocation(line: 5153, column: 6, scope: !2)
!7923 = !DILocation(line: 5153, column: 18, scope: !2)
!7924 = !DILocation(line: 5154, column: 2, scope: !2)
!7925 = !DILocation(line: 5154, column: 6, scope: !2)
!7926 = !DILocation(line: 5154, column: 13, scope: !2)
!7927 = !DILocation(line: 5157, column: 2, scope: !2)
!7928 = !DILocation(line: 5157, column: 6, scope: !2)
!7929 = !DILocation(line: 5157, column: 13, scope: !2)
!7930 = !DILocation(line: 5158, column: 2, scope: !2)
!7931 = !DILocation(line: 5158, column: 6, scope: !2)
!7932 = !DILocation(line: 5158, column: 11, scope: !2)
!7933 = !DILocation(line: 5159, column: 2, scope: !2)
!7934 = !DILocation(line: 5159, column: 6, scope: !2)
!7935 = !DILocation(line: 5159, column: 11, scope: !2)
!7936 = !DILocation(line: 5162, column: 2, scope: !2)
!7937 = !DILocation(line: 5162, column: 6, scope: !2)
!7938 = !DILocation(line: 5162, column: 11, scope: !2)
!7939 = !DILocation(line: 5165, column: 22, scope: !2)
!7940 = !DILocation(line: 5165, column: 26, scope: !2)
!7941 = !DILocation(line: 5165, column: 9, scope: !2)
!7942 = !DILocation(line: 5165, column: 7, scope: !2)
!7943 = !DILocation(line: 5166, column: 24, scope: !2)
!7944 = !DILocation(line: 5166, column: 2, scope: !2)
!7945 = !DILocation(line: 5167, column: 17, scope: !2)
!7946 = !DILocation(line: 5167, column: 21, scope: !2)
!7947 = !DILocation(line: 5167, column: 2, scope: !2)
!7948 = !DILocation(line: 5168, column: 21, scope: !2)
!7949 = !DILocation(line: 5168, column: 25, scope: !2)
!7950 = !DILocation(line: 5168, column: 9, scope: !2)
!7951 = !DILocation(line: 5168, column: 7, scope: !2)
!7952 = !DILocation(line: 5169, column: 27, scope: !2)
!7953 = !DILocation(line: 5169, column: 2, scope: !2)
!7954 = !DILocation(line: 5170, column: 21, scope: !2)
!7955 = !DILocation(line: 5170, column: 25, scope: !2)
!7956 = !DILocation(line: 5170, column: 9, scope: !2)
!7957 = !DILocation(line: 5170, column: 7, scope: !2)
!7958 = !DILocation(line: 5171, column: 27, scope: !2)
!7959 = !DILocation(line: 5171, column: 2, scope: !2)
!7960 = !DILocation(line: 5172, column: 29, scope: !2)
!7961 = !DILocation(line: 5172, column: 33, scope: !2)
!7962 = !DILocation(line: 5172, column: 9, scope: !2)
!7963 = !DILocation(line: 5172, column: 7, scope: !2)
!7964 = !DILocation(line: 5173, column: 27, scope: !2)
!7965 = !DILocation(line: 5173, column: 2, scope: !2)
!7966 = !DILocation(line: 5174, column: 39, scope: !2)
!7967 = !DILocation(line: 5174, column: 2, scope: !2)
!7968 = !DILocation(line: 5175, column: 18, scope: !2)
!7969 = !DILocation(line: 5175, column: 22, scope: !2)
!7970 = !DILocation(line: 5175, column: 2, scope: !2)
!7971 = !DILocation(line: 5176, column: 15, scope: !2)
!7972 = !DILocation(line: 5176, column: 19, scope: !2)
!7973 = !DILocation(line: 5176, column: 2, scope: !2)
!7974 = !DILocation(line: 5178, column: 18, scope: !2)
!7975 = !DILocation(line: 5178, column: 22, scope: !2)
!7976 = !DILocation(line: 5178, column: 2, scope: !2)
!7977 = !DILocation(line: 5179, column: 1, scope: !2)
!7978 = distinct !DISubprogram(name: "texture_paint_add_texture_paint_slot_invoke", scope: !3, file: !3, line: 5118, type: !7979, scopeLine: 5119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!7979 = !DISubroutineType(types: !7980)
!7980 = !{!22, !4645, !7232, !7981}
!7981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7982, size: 64)
!7982 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7983)
!7983 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !8, line: 460, baseType: !3305)
!7984 = !DILocalVariable(name: "C", arg: 1, scope: !7978, file: !3, line: 5118, type: !4645)
!7985 = !DILocation(line: 5118, column: 66, scope: !7978)
!7986 = !DILocalVariable(name: "op", arg: 2, scope: !7978, file: !3, line: 5118, type: !7232)
!7987 = !DILocation(line: 5118, column: 81, scope: !7978)
!7988 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !7978, file: !3, line: 5118, type: !7981)
!7989 = !DILocation(line: 5118, column: 100, scope: !7978)
!7990 = !DILocalVariable(name: "imagename", scope: !7978, file: !3, line: 5120, type: !33)
!7991 = !DILocation(line: 5120, column: 7, scope: !7978)
!7992 = !DILocalVariable(name: "ob", scope: !7978, file: !3, line: 5121, type: !3842)
!7993 = !DILocation(line: 5121, column: 10, scope: !7978)
!7994 = !DILocation(line: 5121, column: 38, scope: !7978)
!7995 = !DILocation(line: 5121, column: 15, scope: !7978)
!7996 = !DILocalVariable(name: "ma", scope: !7978, file: !3, line: 5122, type: !7763)
!7997 = !DILocation(line: 5122, column: 12, scope: !7978)
!7998 = !DILocation(line: 5122, column: 39, scope: !7978)
!7999 = !DILocation(line: 5122, column: 43, scope: !7978)
!8000 = !DILocation(line: 5122, column: 47, scope: !7978)
!8001 = !DILocation(line: 5122, column: 17, scope: !7978)
!8002 = !DILocalVariable(name: "type", scope: !7978, file: !3, line: 5123, type: !22)
!8003 = !DILocation(line: 5123, column: 6, scope: !7978)
!8004 = !DILocation(line: 5123, column: 26, scope: !7978)
!8005 = !DILocation(line: 5123, column: 30, scope: !7978)
!8006 = !DILocation(line: 5123, column: 13, scope: !7978)
!8007 = !DILocation(line: 5125, column: 7, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !7978, file: !3, line: 5125, column: 6)
!8009 = !DILocation(line: 5125, column: 6, scope: !7978)
!8010 = !DILocation(line: 5126, column: 39, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !8008, file: !3, line: 5125, column: 11)
!8012 = !DILocation(line: 5126, column: 25, scope: !8011)
!8013 = !DILocation(line: 5126, column: 8, scope: !8011)
!8014 = !DILocation(line: 5126, column: 6, scope: !8011)
!8015 = !DILocation(line: 5128, column: 19, scope: !8011)
!8016 = !DILocation(line: 5128, column: 23, scope: !8011)
!8017 = !DILocation(line: 5128, column: 27, scope: !8011)
!8018 = !DILocation(line: 5128, column: 31, scope: !8011)
!8019 = !DILocation(line: 5128, column: 3, scope: !8011)
!8020 = !DILocation(line: 5129, column: 2, scope: !8011)
!8021 = !DILocation(line: 5131, column: 47, scope: !7978)
!8022 = !DILocation(line: 5131, column: 9, scope: !7978)
!8023 = !DILocation(line: 5131, column: 7, scope: !7978)
!8024 = !DILocation(line: 5137, column: 15, scope: !7978)
!8025 = !DILocation(line: 5137, column: 46, scope: !7978)
!8026 = !DILocation(line: 5137, column: 50, scope: !7978)
!8027 = !DILocation(line: 5137, column: 53, scope: !7978)
!8028 = !DILocation(line: 5137, column: 79, scope: !7978)
!8029 = !DILocation(line: 5137, column: 62, scope: !7978)
!8030 = !DILocation(line: 5137, column: 85, scope: !7978)
!8031 = !DILocation(line: 5137, column: 2, scope: !7978)
!8032 = !DILocation(line: 5139, column: 17, scope: !7978)
!8033 = !DILocation(line: 5139, column: 21, scope: !7978)
!8034 = !DILocation(line: 5139, column: 34, scope: !7978)
!8035 = !DILocation(line: 5139, column: 2, scope: !7978)
!8036 = !DILocation(line: 5140, column: 40, scope: !7978)
!8037 = !DILocation(line: 5140, column: 43, scope: !7978)
!8038 = !DILocation(line: 5140, column: 52, scope: !7978)
!8039 = !DILocation(line: 5140, column: 50, scope: !7978)
!8040 = !DILocation(line: 5140, column: 67, scope: !7978)
!8041 = !DILocation(line: 5140, column: 65, scope: !7978)
!8042 = !DILocation(line: 5140, column: 9, scope: !7978)
!8043 = !DILocation(line: 5140, column: 2, scope: !7978)
!8044 = distinct !DISubprogram(name: "texture_paint_add_texture_paint_slot_exec", scope: !3, file: !3, line: 5107, type: !7230, scopeLine: 5108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!8045 = !DILocalVariable(name: "C", arg: 1, scope: !8044, file: !3, line: 5107, type: !4645)
!8046 = !DILocation(line: 5107, column: 64, scope: !8044)
!8047 = !DILocalVariable(name: "op", arg: 2, scope: !8044, file: !3, line: 5107, type: !7232)
!8048 = !DILocation(line: 5107, column: 79, scope: !8044)
!8049 = !DILocation(line: 5109, column: 26, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8044, file: !3, line: 5109, column: 6)
!8051 = !DILocation(line: 5109, column: 29, scope: !8050)
!8052 = !DILocation(line: 5109, column: 6, scope: !8050)
!8053 = !DILocation(line: 5109, column: 6, scope: !8044)
!8054 = !DILocation(line: 5110, column: 3, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8050, file: !3, line: 5109, column: 34)
!8056 = !DILocation(line: 5113, column: 3, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8050, file: !3, line: 5112, column: 7)
!8058 = !DILocation(line: 5115, column: 1, scope: !8044)
!8059 = distinct !DISubprogram(name: "PAINT_OT_delete_texture_paint_slot", scope: !3, file: !3, line: 5214, type: !4, scopeLine: 5215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!8060 = !DILocalVariable(name: "ot", arg: 1, scope: !8059, file: !3, line: 5214, type: !6)
!8061 = !DILocation(line: 5214, column: 57, scope: !8059)
!8062 = !DILocation(line: 5217, column: 2, scope: !8059)
!8063 = !DILocation(line: 5217, column: 6, scope: !8059)
!8064 = !DILocation(line: 5217, column: 11, scope: !8059)
!8065 = !DILocation(line: 5218, column: 2, scope: !8059)
!8066 = !DILocation(line: 5218, column: 6, scope: !8059)
!8067 = !DILocation(line: 5218, column: 18, scope: !8059)
!8068 = !DILocation(line: 5219, column: 2, scope: !8059)
!8069 = !DILocation(line: 5219, column: 6, scope: !8059)
!8070 = !DILocation(line: 5219, column: 13, scope: !8059)
!8071 = !DILocation(line: 5222, column: 2, scope: !8059)
!8072 = !DILocation(line: 5222, column: 6, scope: !8059)
!8073 = !DILocation(line: 5222, column: 11, scope: !8059)
!8074 = !DILocation(line: 5223, column: 2, scope: !8059)
!8075 = !DILocation(line: 5223, column: 6, scope: !8059)
!8076 = !DILocation(line: 5223, column: 11, scope: !8059)
!8077 = !DILocation(line: 5226, column: 2, scope: !8059)
!8078 = !DILocation(line: 5226, column: 6, scope: !8059)
!8079 = !DILocation(line: 5226, column: 11, scope: !8059)
!8080 = !DILocation(line: 5227, column: 1, scope: !8059)
!8081 = distinct !DISubprogram(name: "texture_paint_delete_texture_paint_slot_exec", scope: !3, file: !3, line: 5181, type: !7230, scopeLine: 5182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!8082 = !DILocalVariable(name: "C", arg: 1, scope: !8081, file: !3, line: 5181, type: !4645)
!8083 = !DILocation(line: 5181, column: 67, scope: !8081)
!8084 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !8081, file: !3, line: 5181, type: !7232)
!8085 = !DILocation(line: 5181, column: 82, scope: !8081)
!8086 = !DILocalVariable(name: "ob", scope: !8081, file: !3, line: 5183, type: !3842)
!8087 = !DILocation(line: 5183, column: 10, scope: !8081)
!8088 = !DILocation(line: 5183, column: 38, scope: !8081)
!8089 = !DILocation(line: 5183, column: 15, scope: !8081)
!8090 = !DILocalVariable(name: "scene", scope: !8081, file: !3, line: 5184, type: !3828)
!8091 = !DILocation(line: 5184, column: 9, scope: !8081)
!8092 = !DILocation(line: 5184, column: 32, scope: !8081)
!8093 = !DILocation(line: 5184, column: 17, scope: !8081)
!8094 = !DILocalVariable(name: "ma", scope: !8081, file: !3, line: 5185, type: !7763)
!8095 = !DILocation(line: 5185, column: 12, scope: !8081)
!8096 = !DILocalVariable(name: "is_bi", scope: !8081, file: !3, line: 5186, type: !233)
!8097 = !DILocation(line: 5186, column: 7, scope: !8081)
!8098 = !DILocation(line: 5186, column: 47, scope: !8081)
!8099 = !DILocation(line: 5186, column: 15, scope: !8081)
!8100 = !DILocation(line: 5186, column: 54, scope: !8081)
!8101 = !DILocation(line: 5186, column: 85, scope: !8081)
!8102 = !DILocation(line: 5186, column: 57, scope: !8081)
!8103 = !DILocalVariable(name: "slot", scope: !8081, file: !3, line: 5187, type: !5093)
!8104 = !DILocation(line: 5187, column: 16, scope: !8081)
!8105 = !DILocation(line: 5190, column: 7, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8081, file: !3, line: 5190, column: 6)
!8107 = !DILocation(line: 5190, column: 10, scope: !8106)
!8108 = !DILocation(line: 5190, column: 14, scope: !8106)
!8109 = !DILocation(line: 5190, column: 6, scope: !8081)
!8110 = !DILocation(line: 5191, column: 3, scope: !8106)
!8111 = !DILocation(line: 5193, column: 29, scope: !8081)
!8112 = !DILocation(line: 5193, column: 33, scope: !8081)
!8113 = !DILocation(line: 5193, column: 37, scope: !8081)
!8114 = !DILocation(line: 5193, column: 7, scope: !8081)
!8115 = !DILocation(line: 5193, column: 5, scope: !8081)
!8116 = !DILocation(line: 5195, column: 7, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8081, file: !3, line: 5195, column: 6)
!8118 = !DILocation(line: 5195, column: 11, scope: !8117)
!8119 = !DILocation(line: 5195, column: 24, scope: !8117)
!8120 = !DILocation(line: 5195, column: 27, scope: !8117)
!8121 = !DILocation(line: 5195, column: 31, scope: !8117)
!8122 = !DILocation(line: 5195, column: 6, scope: !8081)
!8123 = !DILocation(line: 5196, column: 3, scope: !8117)
!8124 = !DILocation(line: 5198, column: 9, scope: !8081)
!8125 = !DILocation(line: 5198, column: 13, scope: !8081)
!8126 = !DILocation(line: 5198, column: 28, scope: !8081)
!8127 = !DILocation(line: 5198, column: 32, scope: !8081)
!8128 = !DILocation(line: 5198, column: 26, scope: !8081)
!8129 = !DILocation(line: 5198, column: 7, scope: !8081)
!8130 = !DILocation(line: 5200, column: 6, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8081, file: !3, line: 5200, column: 6)
!8132 = !DILocation(line: 5200, column: 10, scope: !8131)
!8133 = !DILocation(line: 5200, column: 15, scope: !8131)
!8134 = !DILocation(line: 5200, column: 21, scope: !8131)
!8135 = !DILocation(line: 5200, column: 29, scope: !8131)
!8136 = !DILocation(line: 5200, column: 6, scope: !8081)
!8137 = !DILocation(line: 5201, column: 14, scope: !8131)
!8138 = !DILocation(line: 5201, column: 18, scope: !8131)
!8139 = !DILocation(line: 5201, column: 23, scope: !8131)
!8140 = !DILocation(line: 5201, column: 29, scope: !8131)
!8141 = !DILocation(line: 5201, column: 37, scope: !8131)
!8142 = !DILocation(line: 5201, column: 42, scope: !8131)
!8143 = !DILocation(line: 5201, column: 3, scope: !8131)
!8144 = !DILocation(line: 5202, column: 2, scope: !8081)
!8145 = !DILocation(line: 5202, column: 12, scope: !8081)
!8146 = !DILocation(line: 5202, column: 16, scope: !8081)
!8147 = !DILocation(line: 5202, column: 21, scope: !8081)
!8148 = !DILocation(line: 5202, column: 27, scope: !8081)
!8149 = !DILocation(line: 5203, column: 2, scope: !8081)
!8150 = !DILocation(line: 5203, column: 6, scope: !8081)
!8151 = !DILocation(line: 5203, column: 11, scope: !8081)
!8152 = !DILocation(line: 5203, column: 17, scope: !8081)
!8153 = !DILocation(line: 5203, column: 24, scope: !8081)
!8154 = !DILocation(line: 5205, column: 34, scope: !8081)
!8155 = !DILocation(line: 5205, column: 41, scope: !8081)
!8156 = !DILocation(line: 5205, column: 2, scope: !8081)
!8157 = !DILocation(line: 5206, column: 21, scope: !8081)
!8158 = !DILocation(line: 5206, column: 25, scope: !8081)
!8159 = !DILocation(line: 5206, column: 2, scope: !8081)
!8160 = !DILocation(line: 5207, column: 24, scope: !8081)
!8161 = !DILocation(line: 5207, column: 55, scope: !8081)
!8162 = !DILocation(line: 5207, column: 40, scope: !8081)
!8163 = !DILocation(line: 5207, column: 2, scope: !8081)
!8164 = !DILocation(line: 5209, column: 24, scope: !8081)
!8165 = !DILocation(line: 5209, column: 46, scope: !8081)
!8166 = !DILocation(line: 5209, column: 50, scope: !8081)
!8167 = !DILocation(line: 5209, column: 2, scope: !8081)
!8168 = !DILocation(line: 5210, column: 2, scope: !8081)
!8169 = !DILocation(line: 5211, column: 1, scope: !8081)
!8170 = distinct !DISubprogram(name: "project_bucket_iter_init", scope: !3, file: !3, line: 3635, type: !8171, scopeLine: 3636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!8171 = !DISubroutineType(types: !8172)
!8172 = !{!233, !3674, !1944}
!8173 = !DILocalVariable(name: "ps", arg: 1, scope: !8170, file: !3, line: 3635, type: !3674)
!8174 = !DILocation(line: 3635, column: 54, scope: !8170)
!8175 = !DILocalVariable(name: "mval_f", arg: 2, scope: !8170, file: !3, line: 3635, type: !1944)
!8176 = !DILocation(line: 3635, column: 70, scope: !8170)
!8177 = !DILocation(line: 3637, column: 6, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 3637, column: 6)
!8179 = !DILocation(line: 3637, column: 10, scope: !8178)
!8180 = !DILocation(line: 3637, column: 17, scope: !8178)
!8181 = !DILocation(line: 3637, column: 6, scope: !8170)
!8182 = !DILocalVariable(name: "min_brush", scope: !8183, file: !3, line: 3638, type: !860)
!8183 = distinct !DILexicalBlock(scope: !8178, file: !3, line: 3637, column: 35)
!8184 = !DILocation(line: 3638, column: 9, scope: !8183)
!8185 = !DILocalVariable(name: "max_brush", scope: !8183, file: !3, line: 3638, type: !860)
!8186 = !DILocation(line: 3638, column: 23, scope: !8183)
!8187 = !DILocalVariable(name: "radius", scope: !8183, file: !3, line: 3639, type: !1778)
!8188 = !DILocation(line: 3639, column: 15, scope: !8183)
!8189 = !DILocation(line: 3639, column: 24, scope: !8183)
!8190 = !DILocation(line: 3639, column: 28, scope: !8183)
!8191 = !DILocation(line: 3644, column: 18, scope: !8183)
!8192 = !DILocation(line: 3644, column: 30, scope: !8183)
!8193 = !DILocation(line: 3644, column: 28, scope: !8183)
!8194 = !DILocation(line: 3644, column: 3, scope: !8183)
!8195 = !DILocation(line: 3644, column: 16, scope: !8183)
!8196 = !DILocation(line: 3645, column: 18, scope: !8183)
!8197 = !DILocation(line: 3645, column: 30, scope: !8183)
!8198 = !DILocation(line: 3645, column: 28, scope: !8183)
!8199 = !DILocation(line: 3645, column: 3, scope: !8183)
!8200 = !DILocation(line: 3645, column: 16, scope: !8183)
!8201 = !DILocation(line: 3647, column: 18, scope: !8183)
!8202 = !DILocation(line: 3647, column: 30, scope: !8183)
!8203 = !DILocation(line: 3647, column: 28, scope: !8183)
!8204 = !DILocation(line: 3647, column: 3, scope: !8183)
!8205 = !DILocation(line: 3647, column: 16, scope: !8183)
!8206 = !DILocation(line: 3648, column: 18, scope: !8183)
!8207 = !DILocation(line: 3648, column: 30, scope: !8183)
!8208 = !DILocation(line: 3648, column: 28, scope: !8183)
!8209 = !DILocation(line: 3648, column: 3, scope: !8183)
!8210 = !DILocation(line: 3648, column: 16, scope: !8183)
!8211 = !DILocation(line: 3651, column: 31, scope: !8183)
!8212 = !DILocation(line: 3651, column: 35, scope: !8183)
!8213 = !DILocation(line: 3651, column: 46, scope: !8183)
!8214 = !DILocation(line: 3651, column: 57, scope: !8183)
!8215 = !DILocation(line: 3651, column: 61, scope: !8183)
!8216 = !DILocation(line: 3651, column: 72, scope: !8183)
!8217 = !DILocation(line: 3651, column: 76, scope: !8183)
!8218 = !DILocation(line: 3651, column: 3, scope: !8183)
!8219 = !DILocation(line: 3654, column: 7, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8183, file: !3, line: 3654, column: 7)
!8221 = !DILocation(line: 3654, column: 11, scope: !8220)
!8222 = !DILocation(line: 3654, column: 27, scope: !8220)
!8223 = !DILocation(line: 3654, column: 31, scope: !8220)
!8224 = !DILocation(line: 3654, column: 24, scope: !8220)
!8225 = !DILocation(line: 3654, column: 44, scope: !8220)
!8226 = !DILocation(line: 3654, column: 47, scope: !8220)
!8227 = !DILocation(line: 3654, column: 51, scope: !8220)
!8228 = !DILocation(line: 3654, column: 67, scope: !8220)
!8229 = !DILocation(line: 3654, column: 71, scope: !8220)
!8230 = !DILocation(line: 3654, column: 64, scope: !8220)
!8231 = !DILocation(line: 3654, column: 7, scope: !8183)
!8232 = !DILocation(line: 3655, column: 4, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 3654, column: 85)
!8234 = !DILocation(line: 3658, column: 26, scope: !8183)
!8235 = !DILocation(line: 3658, column: 30, scope: !8183)
!8236 = !DILocation(line: 3658, column: 3, scope: !8183)
!8237 = !DILocation(line: 3658, column: 7, scope: !8183)
!8238 = !DILocation(line: 3658, column: 24, scope: !8183)
!8239 = !DILocation(line: 3659, column: 26, scope: !8183)
!8240 = !DILocation(line: 3659, column: 30, scope: !8183)
!8241 = !DILocation(line: 3659, column: 3, scope: !8183)
!8242 = !DILocation(line: 3659, column: 7, scope: !8183)
!8243 = !DILocation(line: 3659, column: 24, scope: !8183)
!8244 = !DILocation(line: 3660, column: 2, scope: !8183)
!8245 = !DILocation(line: 3662, column: 3, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8178, file: !3, line: 3661, column: 7)
!8247 = !DILocation(line: 3662, column: 7, scope: !8246)
!8248 = !DILocation(line: 3662, column: 20, scope: !8246)
!8249 = !DILocation(line: 3663, column: 3, scope: !8246)
!8250 = !DILocation(line: 3663, column: 7, scope: !8246)
!8251 = !DILocation(line: 3663, column: 20, scope: !8246)
!8252 = !DILocation(line: 3665, column: 22, scope: !8246)
!8253 = !DILocation(line: 3665, column: 26, scope: !8246)
!8254 = !DILocation(line: 3665, column: 3, scope: !8246)
!8255 = !DILocation(line: 3665, column: 7, scope: !8246)
!8256 = !DILocation(line: 3665, column: 20, scope: !8246)
!8257 = !DILocation(line: 3666, column: 22, scope: !8246)
!8258 = !DILocation(line: 3666, column: 26, scope: !8246)
!8259 = !DILocation(line: 3666, column: 3, scope: !8246)
!8260 = !DILocation(line: 3666, column: 7, scope: !8246)
!8261 = !DILocation(line: 3666, column: 20, scope: !8246)
!8262 = !DILocation(line: 3668, column: 3, scope: !8246)
!8263 = !DILocation(line: 3668, column: 7, scope: !8246)
!8264 = !DILocation(line: 3668, column: 24, scope: !8246)
!8265 = !DILocation(line: 3669, column: 3, scope: !8246)
!8266 = !DILocation(line: 3669, column: 7, scope: !8246)
!8267 = !DILocation(line: 3669, column: 24, scope: !8246)
!8268 = !DILocation(line: 3671, column: 2, scope: !8170)
!8269 = !DILocation(line: 3672, column: 1, scope: !8170)
!8270 = distinct !DISubprogram(name: "do_projectpaint_thread", scope: !3, file: !3, line: 3988, type: !8271, scopeLine: 3989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!8271 = !DISubroutineType(types: !8272)
!8272 = !{!56, !56}
!8273 = !DILocalVariable(name: "ph_v", arg: 1, scope: !8270, file: !3, line: 3988, type: !56)
!8274 = !DILocation(line: 3988, column: 43, scope: !8270)
!8275 = !DILocalVariable(name: "ps", scope: !8270, file: !3, line: 3991, type: !3674)
!8276 = !DILocation(line: 3991, column: 18, scope: !8270)
!8277 = !DILocation(line: 3991, column: 49, scope: !8270)
!8278 = !DILocation(line: 3991, column: 32, scope: !8270)
!8279 = !DILocation(line: 3991, column: 56, scope: !8270)
!8280 = !DILocalVariable(name: "projImages", scope: !8270, file: !3, line: 3992, type: !3887)
!8281 = !DILocation(line: 3992, column: 18, scope: !8270)
!8282 = !DILocation(line: 3992, column: 49, scope: !8270)
!8283 = !DILocation(line: 3992, column: 32, scope: !8270)
!8284 = !DILocation(line: 3992, column: 56, scope: !8270)
!8285 = !DILocalVariable(name: "lastpos", scope: !8270, file: !3, line: 3993, type: !1944)
!8286 = !DILocation(line: 3993, column: 15, scope: !8270)
!8287 = !DILocation(line: 3993, column: 49, scope: !8270)
!8288 = !DILocation(line: 3993, column: 32, scope: !8270)
!8289 = !DILocation(line: 3993, column: 56, scope: !8270)
!8290 = !DILocation(line: 3993, column: 31, scope: !8270)
!8291 = !DILocalVariable(name: "pos", scope: !8270, file: !3, line: 3994, type: !1944)
!8292 = !DILocation(line: 3994, column: 15, scope: !8270)
!8293 = !DILocation(line: 3994, column: 49, scope: !8270)
!8294 = !DILocation(line: 3994, column: 32, scope: !8270)
!8295 = !DILocation(line: 3994, column: 56, scope: !8270)
!8296 = !DILocation(line: 3994, column: 31, scope: !8270)
!8297 = !DILocalVariable(name: "thread_index", scope: !8270, file: !3, line: 3995, type: !5126)
!8298 = !DILocation(line: 3995, column: 12, scope: !8270)
!8299 = !DILocation(line: 3995, column: 49, scope: !8270)
!8300 = !DILocation(line: 3995, column: 32, scope: !8270)
!8301 = !DILocation(line: 3995, column: 56, scope: !8270)
!8302 = !DILocalVariable(name: "pool", scope: !8270, file: !3, line: 3996, type: !254)
!8303 = !DILocation(line: 3996, column: 20, scope: !8270)
!8304 = !DILocation(line: 3996, column: 49, scope: !8270)
!8305 = !DILocation(line: 3996, column: 32, scope: !8270)
!8306 = !DILocation(line: 3996, column: 56, scope: !8270)
!8307 = !DILocalVariable(name: "node", scope: !8270, file: !3, line: 3999, type: !3874)
!8308 = !DILocation(line: 3999, column: 12, scope: !8270)
!8309 = !DILocalVariable(name: "projPixel", scope: !8270, file: !3, line: 4000, type: !3983)
!8310 = !DILocation(line: 4000, column: 13, scope: !8270)
!8311 = !DILocalVariable(name: "brush", scope: !8270, file: !3, line: 4001, type: !3834)
!8312 = !DILocation(line: 4001, column: 9, scope: !8270)
!8313 = !DILocation(line: 4001, column: 17, scope: !8270)
!8314 = !DILocation(line: 4001, column: 21, scope: !8270)
!8315 = !DILocalVariable(name: "last_index", scope: !8270, file: !3, line: 4003, type: !22)
!8316 = !DILocation(line: 4003, column: 6, scope: !8270)
!8317 = !DILocalVariable(name: "last_projIma", scope: !8270, file: !3, line: 4004, type: !3887)
!8318 = !DILocation(line: 4004, column: 18, scope: !8270)
!8319 = !DILocalVariable(name: "last_partial_redraw_cell", scope: !8270, file: !3, line: 4005, type: !3896)
!8320 = !DILocation(line: 4005, column: 27, scope: !8270)
!8321 = !DILocalVariable(name: "dist_sq", scope: !8270, file: !3, line: 4007, type: !184)
!8322 = !DILocation(line: 4007, column: 8, scope: !8270)
!8323 = !DILocalVariable(name: "dist", scope: !8270, file: !3, line: 4007, type: !184)
!8324 = !DILocation(line: 4007, column: 17, scope: !8270)
!8325 = !DILocalVariable(name: "falloff", scope: !8270, file: !3, line: 4009, type: !184)
!8326 = !DILocation(line: 4009, column: 8, scope: !8270)
!8327 = !DILocalVariable(name: "bucket_index", scope: !8270, file: !3, line: 4010, type: !22)
!8328 = !DILocation(line: 4010, column: 6, scope: !8270)
!8329 = !DILocalVariable(name: "is_floatbuf", scope: !8270, file: !3, line: 4011, type: !233)
!8330 = !DILocation(line: 4011, column: 7, scope: !8270)
!8331 = !DILocalVariable(name: "tool", scope: !8270, file: !3, line: 4012, type: !1946)
!8332 = !DILocation(line: 4012, column: 14, scope: !8270)
!8333 = !DILocation(line: 4012, column: 22, scope: !8270)
!8334 = !DILocation(line: 4012, column: 26, scope: !8270)
!8335 = !DILocalVariable(name: "bucket_bounds", scope: !8270, file: !3, line: 4013, type: !840)
!8336 = !DILocation(line: 4013, column: 7, scope: !8270)
!8337 = !DILocalVariable(name: "pos_ofs", scope: !8270, file: !3, line: 4016, type: !860)
!8338 = !DILocation(line: 4016, column: 8, scope: !8270)
!8339 = !DILocalVariable(name: "co", scope: !8270, file: !3, line: 4017, type: !860)
!8340 = !DILocation(line: 4017, column: 8, scope: !8270)
!8341 = !DILocalVariable(name: "mask_short", scope: !8270, file: !3, line: 4018, type: !1605)
!8342 = !DILocation(line: 4018, column: 17, scope: !8270)
!8343 = !DILocalVariable(name: "brush_alpha", scope: !8270, file: !3, line: 4019, type: !1778)
!8344 = !DILocation(line: 4019, column: 14, scope: !8270)
!8345 = !DILocation(line: 4019, column: 48, scope: !8270)
!8346 = !DILocation(line: 4019, column: 52, scope: !8270)
!8347 = !DILocation(line: 4019, column: 59, scope: !8270)
!8348 = !DILocation(line: 4019, column: 28, scope: !8270)
!8349 = !DILocalVariable(name: "brush_radius", scope: !8270, file: !3, line: 4020, type: !1778)
!8350 = !DILocation(line: 4020, column: 14, scope: !8270)
!8351 = !DILocation(line: 4020, column: 29, scope: !8270)
!8352 = !DILocation(line: 4020, column: 33, scope: !8270)
!8353 = !DILocalVariable(name: "brush_radius_sq", scope: !8270, file: !3, line: 4021, type: !1778)
!8354 = !DILocation(line: 4021, column: 14, scope: !8270)
!8355 = !DILocation(line: 4021, column: 32, scope: !8270)
!8356 = !DILocation(line: 4021, column: 47, scope: !8270)
!8357 = !DILocation(line: 4021, column: 45, scope: !8270)
!8358 = !DILocalVariable(name: "lock_alpha", scope: !8270, file: !3, line: 4023, type: !48)
!8359 = !DILocation(line: 4023, column: 8, scope: !8270)
!8360 = !DILocation(line: 4023, column: 21, scope: !8270)
!8361 = !DILocation(line: 4023, column: 90, scope: !8270)
!8362 = !DILocation(line: 4023, column: 97, scope: !8270)
!8363 = !DILocation(line: 4023, column: 102, scope: !8270)
!8364 = !DILocalVariable(name: "smearPixels", scope: !8270, file: !3, line: 4025, type: !3874)
!8365 = !DILocation(line: 4025, column: 12, scope: !8270)
!8366 = !DILocalVariable(name: "smearPixels_f", scope: !8270, file: !3, line: 4026, type: !3874)
!8367 = !DILocation(line: 4026, column: 12, scope: !8270)
!8368 = !DILocalVariable(name: "smearArena", scope: !8270, file: !3, line: 4027, type: !3868)
!8369 = !DILocation(line: 4027, column: 12, scope: !8270)
!8370 = !DILocalVariable(name: "softenPixels", scope: !8270, file: !3, line: 4029, type: !3874)
!8371 = !DILocation(line: 4029, column: 12, scope: !8270)
!8372 = !DILocalVariable(name: "softenPixels_f", scope: !8270, file: !3, line: 4030, type: !3874)
!8373 = !DILocation(line: 4030, column: 12, scope: !8270)
!8374 = !DILocalVariable(name: "softenArena", scope: !8270, file: !3, line: 4031, type: !3868)
!8375 = !DILocation(line: 4031, column: 12, scope: !8270)
!8376 = !DILocation(line: 4033, column: 6, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 4033, column: 6)
!8378 = !DILocation(line: 4033, column: 11, scope: !8377)
!8379 = !DILocation(line: 4033, column: 6, scope: !8270)
!8380 = !DILocation(line: 4034, column: 16, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8377, file: !3, line: 4033, column: 32)
!8382 = !DILocation(line: 4034, column: 25, scope: !8381)
!8383 = !DILocation(line: 4034, column: 23, scope: !8381)
!8384 = !DILocation(line: 4034, column: 3, scope: !8381)
!8385 = !DILocation(line: 4034, column: 14, scope: !8381)
!8386 = !DILocation(line: 4035, column: 16, scope: !8381)
!8387 = !DILocation(line: 4035, column: 25, scope: !8381)
!8388 = !DILocation(line: 4035, column: 23, scope: !8381)
!8389 = !DILocation(line: 4035, column: 3, scope: !8381)
!8390 = !DILocation(line: 4035, column: 14, scope: !8381)
!8391 = !DILocation(line: 4037, column: 16, scope: !8381)
!8392 = !DILocation(line: 4037, column: 14, scope: !8381)
!8393 = !DILocation(line: 4038, column: 2, scope: !8381)
!8394 = !DILocation(line: 4039, column: 11, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8377, file: !3, line: 4039, column: 11)
!8396 = !DILocation(line: 4039, column: 16, scope: !8395)
!8397 = !DILocation(line: 4039, column: 11, scope: !8377)
!8398 = !DILocation(line: 4040, column: 17, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 4039, column: 38)
!8400 = !DILocation(line: 4040, column: 15, scope: !8399)
!8401 = !DILocation(line: 4041, column: 2, scope: !8399)
!8402 = !DILocation(line: 4045, column: 2, scope: !8270)
!8403 = !DILocation(line: 4045, column: 34, scope: !8270)
!8404 = !DILocation(line: 4045, column: 69, scope: !8270)
!8405 = !DILocation(line: 4045, column: 9, scope: !8270)
!8406 = !DILocation(line: 4048, column: 7, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8408, file: !3, line: 4048, column: 7)
!8408 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 4045, column: 75)
!8409 = !DILocation(line: 4048, column: 11, scope: !8407)
!8410 = !DILocation(line: 4048, column: 23, scope: !8407)
!8411 = !DILocation(line: 4048, column: 37, scope: !8407)
!8412 = !DILocation(line: 4048, column: 7, scope: !8408)
!8413 = !DILocation(line: 4050, column: 24, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8407, file: !3, line: 4048, column: 58)
!8415 = !DILocation(line: 4050, column: 28, scope: !8414)
!8416 = !DILocation(line: 4050, column: 42, scope: !8414)
!8417 = !DILocation(line: 4050, column: 4, scope: !8414)
!8418 = !DILocation(line: 4051, column: 3, scope: !8414)
!8419 = !DILocation(line: 4053, column: 7, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8408, file: !3, line: 4053, column: 7)
!8421 = !DILocation(line: 4053, column: 11, scope: !8420)
!8422 = !DILocation(line: 4053, column: 18, scope: !8420)
!8423 = !DILocation(line: 4053, column: 7, scope: !8408)
!8424 = !DILocation(line: 4057, column: 16, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 4057, column: 4)
!8426 = distinct !DILexicalBlock(scope: !8420, file: !3, line: 4053, column: 36)
!8427 = !DILocation(line: 4057, column: 20, scope: !8425)
!8428 = !DILocation(line: 4057, column: 31, scope: !8425)
!8429 = !DILocation(line: 4057, column: 14, scope: !8425)
!8430 = !DILocation(line: 4057, column: 9, scope: !8425)
!8431 = !DILocation(line: 4057, column: 46, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8425, file: !3, line: 4057, column: 4)
!8433 = !DILocation(line: 4057, column: 4, scope: !8425)
!8434 = !DILocation(line: 4058, column: 30, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8432, file: !3, line: 4057, column: 71)
!8436 = !DILocation(line: 4058, column: 36, scope: !8435)
!8437 = !DILocation(line: 4058, column: 17, scope: !8435)
!8438 = !DILocation(line: 4058, column: 15, scope: !8435)
!8439 = !DILocation(line: 4061, column: 9, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8435, file: !3, line: 4061, column: 9)
!8441 = !DILocation(line: 4061, column: 23, scope: !8440)
!8442 = !DILocation(line: 4061, column: 34, scope: !8440)
!8443 = !DILocation(line: 4061, column: 20, scope: !8440)
!8444 = !DILocation(line: 4061, column: 9, scope: !8435)
!8445 = !DILocation(line: 4062, column: 19, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8440, file: !3, line: 4061, column: 47)
!8447 = !DILocation(line: 4062, column: 30, scope: !8446)
!8448 = !DILocation(line: 4062, column: 17, scope: !8446)
!8449 = !DILocation(line: 4063, column: 21, scope: !8446)
!8450 = !DILocation(line: 4063, column: 34, scope: !8446)
!8451 = !DILocation(line: 4063, column: 32, scope: !8446)
!8452 = !DILocation(line: 4063, column: 19, scope: !8446)
!8453 = !DILocation(line: 4065, column: 6, scope: !8446)
!8454 = !DILocation(line: 4065, column: 20, scope: !8446)
!8455 = !DILocation(line: 4065, column: 26, scope: !8446)
!8456 = !DILocation(line: 4066, column: 21, scope: !8446)
!8457 = !DILocation(line: 4066, column: 35, scope: !8446)
!8458 = !DILocation(line: 4066, column: 41, scope: !8446)
!8459 = !DILocation(line: 4066, column: 52, scope: !8446)
!8460 = !DILocation(line: 4066, column: 20, scope: !8446)
!8461 = !DILocation(line: 4066, column: 18, scope: !8446)
!8462 = !DILocation(line: 4067, column: 5, scope: !8446)
!8463 = !DILocation(line: 4071, column: 9, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8435, file: !3, line: 4071, column: 9)
!8465 = !DILocation(line: 4071, column: 13, scope: !8464)
!8466 = !DILocation(line: 4071, column: 20, scope: !8464)
!8467 = !DILocation(line: 4071, column: 9, scope: !8435)
!8468 = !DILocation(line: 4072, column: 10, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 4072, column: 10)
!8470 = distinct !DILexicalBlock(scope: !8464, file: !3, line: 4071, column: 43)
!8471 = !DILocation(line: 4072, column: 17, scope: !8469)
!8472 = !DILocation(line: 4072, column: 22, scope: !8469)
!8473 = !DILocation(line: 4072, column: 10, scope: !8470)
!8474 = !DILocalVariable(name: "tangent", scope: !8475, file: !3, line: 4074, type: !860)
!8475 = distinct !DILexicalBlock(scope: !8469, file: !3, line: 4072, column: 44)
!8476 = !DILocation(line: 4074, column: 13, scope: !8475)
!8477 = !DILocalVariable(name: "line_len_sq_inv", scope: !8475, file: !3, line: 4075, type: !184)
!8478 = !DILocation(line: 4075, column: 13, scope: !8475)
!8479 = !DILocalVariable(name: "line_len", scope: !8475, file: !3, line: 4075, type: !184)
!8480 = !DILocation(line: 4075, column: 30, scope: !8475)
!8481 = !DILocalVariable(name: "f", scope: !8475, file: !3, line: 4076, type: !184)
!8482 = !DILocation(line: 4076, column: 13, scope: !8475)
!8483 = !DILocalVariable(name: "color_f", scope: !8475, file: !3, line: 4077, type: !496)
!8484 = !DILocation(line: 4077, column: 13, scope: !8475)
!8485 = !DILocalVariable(name: "p", scope: !8475, file: !3, line: 4078, type: !860)
!8486 = !DILocation(line: 4078, column: 13, scope: !8475)
!8487 = !DILocation(line: 4078, column: 20, scope: !8475)
!8488 = !DILocation(line: 4078, column: 21, scope: !8475)
!8489 = !DILocation(line: 4078, column: 32, scope: !8475)
!8490 = !DILocation(line: 4078, column: 46, scope: !8475)
!8491 = !DILocation(line: 4078, column: 44, scope: !8475)
!8492 = !DILocation(line: 4078, column: 58, scope: !8475)
!8493 = !DILocation(line: 4078, column: 69, scope: !8475)
!8494 = !DILocation(line: 4078, column: 83, scope: !8475)
!8495 = !DILocation(line: 4078, column: 81, scope: !8475)
!8496 = !DILocation(line: 4080, column: 19, scope: !8475)
!8497 = !DILocation(line: 4080, column: 28, scope: !8475)
!8498 = !DILocation(line: 4080, column: 33, scope: !8475)
!8499 = !DILocation(line: 4080, column: 7, scope: !8475)
!8500 = !DILocation(line: 4081, column: 33, scope: !8475)
!8501 = !DILocation(line: 4081, column: 18, scope: !8475)
!8502 = !DILocation(line: 4081, column: 16, scope: !8475)
!8503 = !DILocation(line: 4082, column: 32, scope: !8475)
!8504 = !DILocation(line: 4082, column: 30, scope: !8475)
!8505 = !DILocation(line: 4082, column: 23, scope: !8475)
!8506 = !DILocation(line: 4083, column: 24, scope: !8475)
!8507 = !DILocation(line: 4083, column: 18, scope: !8475)
!8508 = !DILocation(line: 4083, column: 16, scope: !8475)
!8509 = !DILocation(line: 4085, column: 15, scope: !8475)
!8510 = !DILocation(line: 4085, column: 22, scope: !8475)
!8511 = !DILocation(line: 4085, column: 7, scope: !8475)
!8512 = !DILocation(line: 4088, column: 22, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8514, file: !3, line: 4087, column: 8)
!8514 = distinct !DILexicalBlock(scope: !8475, file: !3, line: 4085, column: 42)
!8515 = !DILocation(line: 4088, column: 25, scope: !8513)
!8516 = !DILocation(line: 4088, column: 13, scope: !8513)
!8517 = !DILocation(line: 4088, column: 36, scope: !8513)
!8518 = !DILocation(line: 4088, column: 34, scope: !8513)
!8519 = !DILocation(line: 4088, column: 11, scope: !8513)
!8520 = !DILocation(line: 4089, column: 9, scope: !8513)
!8521 = !DILocation(line: 4093, column: 20, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8514, file: !3, line: 4092, column: 8)
!8523 = !DILocation(line: 4093, column: 13, scope: !8522)
!8524 = !DILocation(line: 4093, column: 25, scope: !8522)
!8525 = !DILocation(line: 4093, column: 23, scope: !8522)
!8526 = !DILocation(line: 4093, column: 11, scope: !8522)
!8527 = !DILocation(line: 4094, column: 9, scope: !8522)
!8528 = !DILocation(line: 4097, column: 20, scope: !8475)
!8529 = !DILocation(line: 4097, column: 27, scope: !8475)
!8530 = !DILocation(line: 4097, column: 37, scope: !8475)
!8531 = !DILocation(line: 4097, column: 40, scope: !8475)
!8532 = !DILocation(line: 4097, column: 7, scope: !8475)
!8533 = !DILocation(line: 4098, column: 29, scope: !8475)
!8534 = !DILocation(line: 4098, column: 40, scope: !8475)
!8535 = !DILocation(line: 4098, column: 22, scope: !8475)
!8536 = !DILocation(line: 4098, column: 46, scope: !8475)
!8537 = !DILocation(line: 4098, column: 68, scope: !8475)
!8538 = !DILocation(line: 4098, column: 75, scope: !8475)
!8539 = !DILocation(line: 4098, column: 66, scope: !8475)
!8540 = !DILocation(line: 4098, column: 7, scope: !8475)
!8541 = !DILocation(line: 4098, column: 18, scope: !8475)
!8542 = !DILocation(line: 4100, column: 11, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8475, file: !3, line: 4100, column: 11)
!8544 = !DILocation(line: 4100, column: 11, scope: !8475)
!8545 = !DILocation(line: 4102, column: 18, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8543, file: !3, line: 4100, column: 24)
!8547 = !DILocation(line: 4102, column: 27, scope: !8546)
!8548 = !DILocation(line: 4102, column: 8, scope: !8546)
!8549 = !DILocation(line: 4103, column: 30, scope: !8546)
!8550 = !DILocation(line: 4103, column: 41, scope: !8546)
!8551 = !DILocation(line: 4103, column: 47, scope: !8546)
!8552 = !DILocation(line: 4103, column: 54, scope: !8546)
!8553 = !DILocation(line: 4103, column: 65, scope: !8546)
!8554 = !DILocation(line: 4103, column: 75, scope: !8546)
!8555 = !DILocation(line: 4104, column: 30, scope: !8546)
!8556 = !DILocation(line: 4104, column: 39, scope: !8546)
!8557 = !DILocation(line: 4104, column: 43, scope: !8546)
!8558 = !DILocation(line: 4103, column: 8, scope: !8546)
!8559 = !DILocation(line: 4105, column: 7, scope: !8546)
!8560 = !DILocation(line: 4107, column: 32, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8543, file: !3, line: 4106, column: 12)
!8562 = !DILocation(line: 4107, column: 41, scope: !8561)
!8563 = !DILocation(line: 4107, column: 8, scope: !8561)
!8564 = !DILocation(line: 4108, column: 28, scope: !8561)
!8565 = !DILocation(line: 4108, column: 39, scope: !8561)
!8566 = !DILocation(line: 4108, column: 48, scope: !8561)
!8567 = !DILocation(line: 4108, column: 52, scope: !8561)
!8568 = !DILocation(line: 4108, column: 8, scope: !8561)
!8569 = !DILocation(line: 4109, column: 29, scope: !8561)
!8570 = !DILocation(line: 4109, column: 40, scope: !8561)
!8571 = !DILocation(line: 4109, column: 46, scope: !8561)
!8572 = !DILocation(line: 4109, column: 54, scope: !8561)
!8573 = !DILocation(line: 4109, column: 65, scope: !8561)
!8574 = !DILocation(line: 4109, column: 75, scope: !8561)
!8575 = !DILocation(line: 4110, column: 29, scope: !8561)
!8576 = !DILocation(line: 4110, column: 40, scope: !8561)
!8577 = !DILocation(line: 4110, column: 49, scope: !8561)
!8578 = !DILocation(line: 4110, column: 53, scope: !8561)
!8579 = !DILocation(line: 4110, column: 57, scope: !8561)
!8580 = !DILocation(line: 4109, column: 8, scope: !8561)
!8581 = !DILocation(line: 4112, column: 6, scope: !8475)
!8582 = !DILocation(line: 4114, column: 11, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8584, file: !3, line: 4114, column: 11)
!8584 = distinct !DILexicalBlock(scope: !8469, file: !3, line: 4113, column: 11)
!8585 = !DILocation(line: 4114, column: 11, scope: !8584)
!8586 = !DILocalVariable(name: "newColor_f", scope: !8587, file: !3, line: 4115, type: !496)
!8587 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 4114, column: 24)
!8588 = !DILocation(line: 4115, column: 14, scope: !8587)
!8589 = !DILocation(line: 4116, column: 32, scope: !8587)
!8590 = !DILocation(line: 4116, column: 43, scope: !8587)
!8591 = !DILocation(line: 4116, column: 25, scope: !8587)
!8592 = !DILocation(line: 4116, column: 49, scope: !8587)
!8593 = !DILocation(line: 4116, column: 71, scope: !8587)
!8594 = !DILocation(line: 4116, column: 78, scope: !8587)
!8595 = !DILocation(line: 4116, column: 69, scope: !8587)
!8596 = !DILocation(line: 4116, column: 8, scope: !8587)
!8597 = !DILocation(line: 4116, column: 22, scope: !8587)
!8598 = !DILocation(line: 4117, column: 19, scope: !8587)
!8599 = !DILocation(line: 4117, column: 31, scope: !8587)
!8600 = !DILocation(line: 4117, column: 35, scope: !8587)
!8601 = !DILocation(line: 4117, column: 8, scope: !8587)
!8602 = !DILocation(line: 4119, column: 30, scope: !8587)
!8603 = !DILocation(line: 4119, column: 41, scope: !8587)
!8604 = !DILocation(line: 4119, column: 47, scope: !8587)
!8605 = !DILocation(line: 4119, column: 54, scope: !8587)
!8606 = !DILocation(line: 4119, column: 65, scope: !8587)
!8607 = !DILocation(line: 4119, column: 75, scope: !8587)
!8608 = !DILocation(line: 4120, column: 30, scope: !8587)
!8609 = !DILocation(line: 4120, column: 42, scope: !8587)
!8610 = !DILocation(line: 4120, column: 46, scope: !8587)
!8611 = !DILocation(line: 4119, column: 8, scope: !8587)
!8612 = !DILocation(line: 4121, column: 7, scope: !8587)
!8613 = !DILocalVariable(name: "mask", scope: !8614, file: !3, line: 4123, type: !184)
!8614 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 4122, column: 12)
!8615 = !DILocation(line: 4123, column: 14, scope: !8614)
!8616 = !DILocation(line: 4123, column: 29, scope: !8614)
!8617 = !DILocation(line: 4123, column: 40, scope: !8614)
!8618 = !DILocation(line: 4123, column: 22, scope: !8614)
!8619 = !DILocation(line: 4123, column: 46, scope: !8614)
!8620 = !DILocation(line: 4124, column: 36, scope: !8614)
!8621 = !DILocation(line: 4124, column: 41, scope: !8614)
!8622 = !DILocation(line: 4124, column: 49, scope: !8614)
!8623 = !DILocation(line: 4124, column: 56, scope: !8614)
!8624 = !DILocation(line: 4124, column: 47, scope: !8614)
!8625 = !DILocation(line: 4124, column: 8, scope: !8614)
!8626 = !DILocation(line: 4124, column: 19, scope: !8614)
!8627 = !DILocation(line: 4124, column: 28, scope: !8614)
!8628 = !DILocation(line: 4124, column: 34, scope: !8614)
!8629 = !DILocation(line: 4126, column: 27, scope: !8614)
!8630 = !DILocation(line: 4126, column: 38, scope: !8614)
!8631 = !DILocation(line: 4126, column: 47, scope: !8614)
!8632 = !DILocation(line: 4126, column: 51, scope: !8614)
!8633 = !DILocation(line: 4126, column: 55, scope: !8614)
!8634 = !DILocation(line: 4126, column: 8, scope: !8614)
!8635 = !DILocation(line: 4127, column: 29, scope: !8614)
!8636 = !DILocation(line: 4127, column: 40, scope: !8614)
!8637 = !DILocation(line: 4127, column: 46, scope: !8614)
!8638 = !DILocation(line: 4127, column: 54, scope: !8614)
!8639 = !DILocation(line: 4127, column: 65, scope: !8614)
!8640 = !DILocation(line: 4127, column: 75, scope: !8614)
!8641 = !DILocation(line: 4128, column: 29, scope: !8614)
!8642 = !DILocation(line: 4128, column: 40, scope: !8614)
!8643 = !DILocation(line: 4128, column: 49, scope: !8614)
!8644 = !DILocation(line: 4128, column: 53, scope: !8614)
!8645 = !DILocation(line: 4128, column: 57, scope: !8614)
!8646 = !DILocation(line: 4127, column: 8, scope: !8614)
!8647 = !DILocation(line: 4132, column: 10, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 4132, column: 10)
!8649 = !DILocation(line: 4132, column: 10, scope: !8470)
!8650 = !DILocation(line: 4133, column: 11, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8652, file: !3, line: 4133, column: 11)
!8652 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 4132, column: 22)
!8653 = !DILocation(line: 4133, column: 11, scope: !8652)
!8654 = !DILocation(line: 4133, column: 51, scope: !8651)
!8655 = !DILocation(line: 4133, column: 62, scope: !8651)
!8656 = !DILocation(line: 4133, column: 72, scope: !8651)
!8657 = !DILocation(line: 4133, column: 24, scope: !8651)
!8658 = !DILocation(line: 4133, column: 35, scope: !8651)
!8659 = !DILocation(line: 4133, column: 41, scope: !8651)
!8660 = !DILocation(line: 4133, column: 49, scope: !8651)
!8661 = !DILocation(line: 4134, column: 40, scope: !8651)
!8662 = !DILocation(line: 4134, column: 51, scope: !8651)
!8663 = !DILocation(line: 4134, column: 61, scope: !8651)
!8664 = !DILocation(line: 4134, column: 12, scope: !8651)
!8665 = !DILocation(line: 4134, column: 23, scope: !8651)
!8666 = !DILocation(line: 4134, column: 29, scope: !8651)
!8667 = !DILocation(line: 4134, column: 38, scope: !8651)
!8668 = !DILocation(line: 4135, column: 6, scope: !8652)
!8669 = !DILocation(line: 4137, column: 33, scope: !8470)
!8670 = !DILocation(line: 4137, column: 47, scope: !8470)
!8671 = !DILocation(line: 4137, column: 64, scope: !8470)
!8672 = !DILocation(line: 4137, column: 75, scope: !8470)
!8673 = !DILocation(line: 4137, column: 62, scope: !8470)
!8674 = !DILocation(line: 4137, column: 31, scope: !8470)
!8675 = !DILocation(line: 4138, column: 44, scope: !8470)
!8676 = !DILocation(line: 4138, column: 70, scope: !8470)
!8677 = !DILocation(line: 4138, column: 79, scope: !8470)
!8678 = !DILocation(line: 4138, column: 90, scope: !8470)
!8679 = !DILocation(line: 4138, column: 74, scope: !8470)
!8680 = !DILocation(line: 4138, column: 37, scope: !8470)
!8681 = !DILocation(line: 4138, column: 6, scope: !8470)
!8682 = !DILocation(line: 4138, column: 32, scope: !8470)
!8683 = !DILocation(line: 4138, column: 35, scope: !8470)
!8684 = !DILocation(line: 4139, column: 44, scope: !8470)
!8685 = !DILocation(line: 4139, column: 70, scope: !8470)
!8686 = !DILocation(line: 4139, column: 79, scope: !8470)
!8687 = !DILocation(line: 4139, column: 90, scope: !8470)
!8688 = !DILocation(line: 4139, column: 74, scope: !8470)
!8689 = !DILocation(line: 4139, column: 37, scope: !8470)
!8690 = !DILocation(line: 4139, column: 6, scope: !8470)
!8691 = !DILocation(line: 4139, column: 32, scope: !8470)
!8692 = !DILocation(line: 4139, column: 35, scope: !8470)
!8693 = !DILocation(line: 4141, column: 44, scope: !8470)
!8694 = !DILocation(line: 4141, column: 70, scope: !8470)
!8695 = !DILocation(line: 4141, column: 79, scope: !8470)
!8696 = !DILocation(line: 4141, column: 90, scope: !8470)
!8697 = !DILocation(line: 4141, column: 74, scope: !8470)
!8698 = !DILocation(line: 4141, column: 95, scope: !8470)
!8699 = !DILocation(line: 4141, column: 37, scope: !8470)
!8700 = !DILocation(line: 4141, column: 6, scope: !8470)
!8701 = !DILocation(line: 4141, column: 32, scope: !8470)
!8702 = !DILocation(line: 4141, column: 35, scope: !8470)
!8703 = !DILocation(line: 4142, column: 44, scope: !8470)
!8704 = !DILocation(line: 4142, column: 70, scope: !8470)
!8705 = !DILocation(line: 4142, column: 79, scope: !8470)
!8706 = !DILocation(line: 4142, column: 90, scope: !8470)
!8707 = !DILocation(line: 4142, column: 74, scope: !8470)
!8708 = !DILocation(line: 4142, column: 95, scope: !8470)
!8709 = !DILocation(line: 4142, column: 37, scope: !8470)
!8710 = !DILocation(line: 4142, column: 6, scope: !8470)
!8711 = !DILocation(line: 4142, column: 32, scope: !8470)
!8712 = !DILocation(line: 4142, column: 35, scope: !8470)
!8713 = !DILocation(line: 4143, column: 5, scope: !8470)
!8714 = !DILocation(line: 4145, column: 10, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 4145, column: 10)
!8716 = distinct !DILexicalBlock(scope: !8464, file: !3, line: 4144, column: 10)
!8717 = !DILocation(line: 4145, column: 10, scope: !8716)
!8718 = !DILocation(line: 4147, column: 35, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 4145, column: 23)
!8720 = !DILocation(line: 4147, column: 39, scope: !8719)
!8721 = !DILocation(line: 4147, column: 55, scope: !8719)
!8722 = !DILocation(line: 4147, column: 66, scope: !8719)
!8723 = !DILocation(line: 4147, column: 75, scope: !8719)
!8724 = !DILocation(line: 4148, column: 35, scope: !8719)
!8725 = !DILocation(line: 4148, column: 46, scope: !8719)
!8726 = !DILocation(line: 4148, column: 59, scope: !8719)
!8727 = !DILocation(line: 4148, column: 70, scope: !8719)
!8728 = !DILocation(line: 4147, column: 7, scope: !8719)
!8729 = !DILocation(line: 4149, column: 11, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8719, file: !3, line: 4149, column: 11)
!8731 = !DILocation(line: 4149, column: 22, scope: !8730)
!8732 = !DILocation(line: 4149, column: 31, scope: !8730)
!8733 = !DILocation(line: 4149, column: 11, scope: !8719)
!8734 = !DILocalVariable(name: "newColor_f", scope: !8735, file: !3, line: 4150, type: !496)
!8735 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 4149, column: 38)
!8736 = !DILocation(line: 4150, column: 14, scope: !8735)
!8737 = !DILocalVariable(name: "mask", scope: !8735, file: !3, line: 4151, type: !184)
!8738 = !DILocation(line: 4151, column: 14, scope: !8735)
!8739 = !DILocation(line: 4151, column: 29, scope: !8735)
!8740 = !DILocation(line: 4151, column: 40, scope: !8735)
!8741 = !DILocation(line: 4151, column: 22, scope: !8735)
!8742 = !DILocation(line: 4151, column: 46, scope: !8735)
!8743 = !DILocation(line: 4153, column: 39, scope: !8735)
!8744 = !DILocation(line: 4153, column: 51, scope: !8735)
!8745 = !DILocation(line: 4153, column: 62, scope: !8735)
!8746 = !DILocation(line: 4153, column: 71, scope: !8735)
!8747 = !DILocation(line: 4153, column: 8, scope: !8735)
!8748 = !DILocation(line: 4154, column: 58, scope: !8735)
!8749 = !DILocation(line: 4154, column: 76, scope: !8735)
!8750 = !DILocation(line: 4154, column: 80, scope: !8735)
!8751 = !DILocation(line: 4154, column: 96, scope: !8735)
!8752 = !DILocation(line: 4154, column: 8, scope: !8735)
!8753 = !DILocation(line: 4155, column: 20, scope: !8735)
!8754 = !DILocation(line: 4155, column: 32, scope: !8735)
!8755 = !DILocation(line: 4155, column: 44, scope: !8735)
!8756 = !DILocation(line: 4155, column: 8, scope: !8735)
!8757 = !DILocation(line: 4157, column: 30, scope: !8735)
!8758 = !DILocation(line: 4157, column: 41, scope: !8735)
!8759 = !DILocation(line: 4157, column: 47, scope: !8735)
!8760 = !DILocation(line: 4157, column: 54, scope: !8735)
!8761 = !DILocation(line: 4157, column: 65, scope: !8735)
!8762 = !DILocation(line: 4157, column: 75, scope: !8735)
!8763 = !DILocation(line: 4158, column: 30, scope: !8735)
!8764 = !DILocation(line: 4157, column: 8, scope: !8735)
!8765 = !DILocation(line: 4159, column: 7, scope: !8735)
!8766 = !DILocation(line: 4160, column: 6, scope: !8719)
!8767 = !DILocation(line: 4163, column: 35, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 4161, column: 11)
!8769 = !DILocation(line: 4163, column: 39, scope: !8768)
!8770 = !DILocation(line: 4163, column: 55, scope: !8768)
!8771 = !DILocation(line: 4163, column: 66, scope: !8768)
!8772 = !DILocation(line: 4163, column: 75, scope: !8768)
!8773 = !DILocation(line: 4164, column: 35, scope: !8768)
!8774 = !DILocation(line: 4164, column: 46, scope: !8768)
!8775 = !DILocation(line: 4164, column: 59, scope: !8768)
!8776 = !DILocation(line: 4164, column: 70, scope: !8768)
!8777 = !DILocation(line: 4163, column: 7, scope: !8768)
!8778 = !DILocation(line: 4165, column: 11, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 4165, column: 11)
!8780 = !DILocation(line: 4165, column: 22, scope: !8779)
!8781 = !DILocation(line: 4165, column: 31, scope: !8779)
!8782 = !DILocation(line: 4165, column: 11, scope: !8768)
!8783 = !DILocalVariable(name: "mask", scope: !8784, file: !3, line: 4166, type: !184)
!8784 = distinct !DILexicalBlock(scope: !8779, file: !3, line: 4165, column: 38)
!8785 = !DILocation(line: 4166, column: 14, scope: !8784)
!8786 = !DILocation(line: 4166, column: 29, scope: !8784)
!8787 = !DILocation(line: 4166, column: 40, scope: !8784)
!8788 = !DILocation(line: 4166, column: 22, scope: !8784)
!8789 = !DILocation(line: 4166, column: 46, scope: !8784)
!8790 = !DILocation(line: 4167, column: 37, scope: !8784)
!8791 = !DILocation(line: 4167, column: 8, scope: !8784)
!8792 = !DILocation(line: 4167, column: 19, scope: !8784)
!8793 = !DILocation(line: 4167, column: 28, scope: !8784)
!8794 = !DILocation(line: 4167, column: 34, scope: !8784)
!8795 = !DILocation(line: 4169, column: 29, scope: !8784)
!8796 = !DILocation(line: 4169, column: 40, scope: !8784)
!8797 = !DILocation(line: 4169, column: 46, scope: !8784)
!8798 = !DILocation(line: 4169, column: 54, scope: !8784)
!8799 = !DILocation(line: 4169, column: 65, scope: !8784)
!8800 = !DILocation(line: 4169, column: 75, scope: !8784)
!8801 = !DILocation(line: 4170, column: 29, scope: !8784)
!8802 = !DILocation(line: 4170, column: 40, scope: !8784)
!8803 = !DILocation(line: 4170, column: 49, scope: !8784)
!8804 = !DILocation(line: 4169, column: 8, scope: !8784)
!8805 = !DILocation(line: 4171, column: 7, scope: !8784)
!8806 = !DILocation(line: 4174, column: 4, scope: !8435)
!8807 = !DILocation(line: 4057, column: 59, scope: !8432)
!8808 = !DILocation(line: 4057, column: 65, scope: !8432)
!8809 = !DILocation(line: 4057, column: 57, scope: !8432)
!8810 = !DILocation(line: 4057, column: 4, scope: !8432)
!8811 = distinct !{!8811, !8433, !8812}
!8812 = !DILocation(line: 4174, column: 4, scope: !8425)
!8813 = !DILocation(line: 4175, column: 3, scope: !8426)
!8814 = !DILocation(line: 4179, column: 16, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8816, file: !3, line: 4179, column: 4)
!8816 = distinct !DILexicalBlock(scope: !8420, file: !3, line: 4176, column: 8)
!8817 = !DILocation(line: 4179, column: 20, scope: !8815)
!8818 = !DILocation(line: 4179, column: 31, scope: !8815)
!8819 = !DILocation(line: 4179, column: 14, scope: !8815)
!8820 = !DILocation(line: 4179, column: 9, scope: !8815)
!8821 = !DILocation(line: 4179, column: 46, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8815, file: !3, line: 4179, column: 4)
!8823 = !DILocation(line: 4179, column: 4, scope: !8815)
!8824 = !DILocation(line: 4181, column: 30, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 4179, column: 71)
!8826 = !DILocation(line: 4181, column: 36, scope: !8825)
!8827 = !DILocation(line: 4181, column: 17, scope: !8825)
!8828 = !DILocation(line: 4181, column: 15, scope: !8825)
!8829 = !DILocation(line: 4183, column: 32, scope: !8825)
!8830 = !DILocation(line: 4183, column: 43, scope: !8825)
!8831 = !DILocation(line: 4183, column: 53, scope: !8825)
!8832 = !DILocation(line: 4183, column: 15, scope: !8825)
!8833 = !DILocation(line: 4183, column: 13, scope: !8825)
!8834 = !DILocation(line: 4186, column: 9, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8825, file: !3, line: 4186, column: 9)
!8836 = !DILocation(line: 4186, column: 20, scope: !8835)
!8837 = !DILocation(line: 4186, column: 17, scope: !8835)
!8838 = !DILocation(line: 4186, column: 9, scope: !8825)
!8839 = !DILocation(line: 4187, column: 19, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8835, file: !3, line: 4186, column: 37)
!8841 = !DILocation(line: 4187, column: 13, scope: !8840)
!8842 = !DILocation(line: 4187, column: 11, scope: !8840)
!8843 = !DILocation(line: 4189, column: 47, scope: !8840)
!8844 = !DILocation(line: 4189, column: 51, scope: !8840)
!8845 = !DILocation(line: 4189, column: 58, scope: !8840)
!8846 = !DILocation(line: 4189, column: 64, scope: !8840)
!8847 = !DILocation(line: 4189, column: 16, scope: !8840)
!8848 = !DILocation(line: 4189, column: 14, scope: !8840)
!8849 = !DILocation(line: 4191, column: 10, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8840, file: !3, line: 4191, column: 10)
!8851 = !DILocation(line: 4191, column: 18, scope: !8850)
!8852 = !DILocation(line: 4191, column: 10, scope: !8840)
!8853 = !DILocalVariable(name: "texrgb", scope: !8854, file: !3, line: 4192, type: !183)
!8854 = distinct !DILexicalBlock(scope: !8850, file: !3, line: 4191, column: 26)
!8855 = !DILocation(line: 4192, column: 13, scope: !8854)
!8856 = !DILocalVariable(name: "mask", scope: !8854, file: !3, line: 4193, type: !184)
!8857 = !DILocation(line: 4193, column: 13, scope: !8854)
!8858 = !DILocation(line: 4195, column: 11, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8854, file: !3, line: 4195, column: 11)
!8860 = !DILocation(line: 4195, column: 15, scope: !8859)
!8861 = !DILocation(line: 4195, column: 11, scope: !8854)
!8862 = !DILocalVariable(name: "mask_accum", scope: !8863, file: !3, line: 4202, type: !184)
!8863 = distinct !DILexicalBlock(scope: !8859, file: !3, line: 4195, column: 27)
!8864 = !DILocation(line: 4202, column: 14, scope: !8863)
!8865 = !DILocation(line: 4202, column: 28, scope: !8863)
!8866 = !DILocation(line: 4202, column: 39, scope: !8863)
!8867 = !DILocation(line: 4202, column: 27, scope: !8863)
!8868 = !DILocalVariable(name: "max_mask", scope: !8863, file: !3, line: 4203, type: !184)
!8869 = !DILocation(line: 4203, column: 14, scope: !8863)
!8870 = !DILocation(line: 4203, column: 25, scope: !8863)
!8871 = !DILocation(line: 4203, column: 39, scope: !8863)
!8872 = !DILocation(line: 4203, column: 37, scope: !8863)
!8873 = !DILocation(line: 4203, column: 47, scope: !8863)
!8874 = !DILocation(line: 4205, column: 12, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8863, file: !3, line: 4205, column: 12)
!8876 = !DILocation(line: 4205, column: 16, scope: !8875)
!8877 = !DILocation(line: 4205, column: 12, scope: !8863)
!8878 = !DILocalVariable(name: "texmask", scope: !8879, file: !3, line: 4206, type: !184)
!8879 = distinct !DILexicalBlock(scope: !8875, file: !3, line: 4205, column: 30)
!8880 = !DILocation(line: 4206, column: 15, scope: !8879)
!8881 = !DILocation(line: 4206, column: 50, scope: !8879)
!8882 = !DILocation(line: 4206, column: 54, scope: !8879)
!8883 = !DILocation(line: 4206, column: 61, scope: !8879)
!8884 = !DILocation(line: 4206, column: 65, scope: !8879)
!8885 = !DILocation(line: 4206, column: 72, scope: !8879)
!8886 = !DILocation(line: 4206, column: 83, scope: !8879)
!8887 = !DILocation(line: 4206, column: 93, scope: !8879)
!8888 = !DILocation(line: 4206, column: 107, scope: !8879)
!8889 = !DILocation(line: 4206, column: 25, scope: !8879)
!8890 = !DILocation(line: 4207, column: 21, scope: !8879)
!8891 = !DILocation(line: 4207, column: 18, scope: !8879)
!8892 = !DILocation(line: 4208, column: 8, scope: !8879)
!8893 = !DILocation(line: 4210, column: 12, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8863, file: !3, line: 4210, column: 12)
!8895 = !DILocation(line: 4210, column: 19, scope: !8894)
!8896 = !DILocation(line: 4210, column: 24, scope: !8894)
!8897 = !DILocation(line: 4210, column: 12, scope: !8863)
!8898 = !DILocation(line: 4211, column: 16, scope: !8894)
!8899 = !DILocation(line: 4211, column: 29, scope: !8894)
!8900 = !DILocation(line: 4211, column: 27, scope: !8894)
!8901 = !DILocation(line: 4211, column: 14, scope: !8894)
!8902 = !DILocation(line: 4211, column: 9, scope: !8894)
!8903 = !DILocation(line: 4213, column: 16, scope: !8894)
!8904 = !DILocation(line: 4213, column: 30, scope: !8894)
!8905 = !DILocation(line: 4213, column: 41, scope: !8894)
!8906 = !DILocation(line: 4213, column: 54, scope: !8894)
!8907 = !DILocation(line: 4213, column: 52, scope: !8894)
!8908 = !DILocation(line: 4213, column: 39, scope: !8894)
!8909 = !DILocation(line: 4213, column: 27, scope: !8894)
!8910 = !DILocation(line: 4213, column: 14, scope: !8894)
!8911 = !DILocation(line: 4215, column: 22, scope: !8863)
!8912 = !DILocation(line: 4215, column: 15, scope: !8863)
!8913 = !DILocation(line: 4215, column: 13, scope: !8863)
!8914 = !DILocation(line: 4216, column: 37, scope: !8863)
!8915 = !DILocation(line: 4216, column: 21, scope: !8863)
!8916 = !DILocation(line: 4216, column: 19, scope: !8863)
!8917 = !DILocation(line: 4218, column: 12, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8863, file: !3, line: 4218, column: 12)
!8919 = !DILocation(line: 4218, column: 26, scope: !8918)
!8920 = !DILocation(line: 4218, column: 37, scope: !8918)
!8921 = !DILocation(line: 4218, column: 25, scope: !8918)
!8922 = !DILocation(line: 4218, column: 23, scope: !8918)
!8923 = !DILocation(line: 4218, column: 12, scope: !8863)
!8924 = !DILocation(line: 4219, column: 34, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 4218, column: 49)
!8926 = !DILocation(line: 4219, column: 10, scope: !8925)
!8927 = !DILocation(line: 4219, column: 21, scope: !8925)
!8928 = !DILocation(line: 4219, column: 32, scope: !8925)
!8929 = !DILocation(line: 4220, column: 16, scope: !8925)
!8930 = !DILocation(line: 4220, column: 27, scope: !8925)
!8931 = !DILocation(line: 4220, column: 14, scope: !8925)
!8932 = !DILocation(line: 4221, column: 8, scope: !8925)
!8933 = !DILocation(line: 4224, column: 9, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 4222, column: 13)
!8935 = !DILocation(line: 4226, column: 7, scope: !8863)
!8936 = !DILocation(line: 4228, column: 15, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8859, file: !3, line: 4227, column: 12)
!8938 = !DILocation(line: 4228, column: 29, scope: !8937)
!8939 = !DILocation(line: 4228, column: 27, scope: !8937)
!8940 = !DILocation(line: 4228, column: 13, scope: !8937)
!8941 = !DILocation(line: 4229, column: 12, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 4229, column: 12)
!8943 = !DILocation(line: 4229, column: 16, scope: !8942)
!8944 = !DILocation(line: 4229, column: 12, scope: !8937)
!8945 = !DILocalVariable(name: "texmask", scope: !8946, file: !3, line: 4230, type: !184)
!8946 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 4229, column: 30)
!8947 = !DILocation(line: 4230, column: 15, scope: !8946)
!8948 = !DILocation(line: 4230, column: 50, scope: !8946)
!8949 = !DILocation(line: 4230, column: 54, scope: !8946)
!8950 = !DILocation(line: 4230, column: 61, scope: !8946)
!8951 = !DILocation(line: 4230, column: 65, scope: !8946)
!8952 = !DILocation(line: 4230, column: 72, scope: !8946)
!8953 = !DILocation(line: 4230, column: 83, scope: !8946)
!8954 = !DILocation(line: 4230, column: 93, scope: !8946)
!8955 = !DILocation(line: 4230, column: 107, scope: !8946)
!8956 = !DILocation(line: 4230, column: 25, scope: !8946)
!8957 = !DILocation(line: 4231, column: 9, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8959, file: !3, line: 4231, column: 9)
!8959 = distinct !DILexicalBlock(scope: !8946, file: !3, line: 4231, column: 9)
!8960 = !DILocation(line: 4231, column: 9, scope: !8959)
!8961 = !DILocation(line: 4231, column: 9, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8958, file: !3, line: 4231, column: 9)
!8963 = !DILocation(line: 4232, column: 17, scope: !8946)
!8964 = !DILocation(line: 4232, column: 14, scope: !8946)
!8965 = !DILocation(line: 4233, column: 8, scope: !8946)
!8966 = !DILocation(line: 4236, column: 11, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8854, file: !3, line: 4236, column: 11)
!8968 = !DILocation(line: 4236, column: 15, scope: !8967)
!8969 = !DILocation(line: 4236, column: 11, scope: !8854)
!8970 = !DILocalVariable(name: "mtex", scope: !8971, file: !3, line: 4237, type: !8972)
!8971 = distinct !DILexicalBlock(scope: !8967, file: !3, line: 4236, column: 28)
!8972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8973, size: 64)
!8973 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTex", file: !161, line: 94, baseType: !541)
!8974 = !DILocation(line: 4237, column: 14, scope: !8971)
!8975 = !DILocation(line: 4237, column: 22, scope: !8971)
!8976 = !DILocation(line: 4237, column: 29, scope: !8971)
!8977 = !DILocalVariable(name: "samplecos", scope: !8971, file: !3, line: 4238, type: !183)
!8978 = !DILocation(line: 4238, column: 14, scope: !8971)
!8979 = !DILocalVariable(name: "texrgba", scope: !8971, file: !3, line: 4239, type: !496)
!8980 = !DILocation(line: 4239, column: 14, scope: !8971)
!8981 = !DILocation(line: 4242, column: 12, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8971, file: !3, line: 4242, column: 12)
!8983 = !DILocation(line: 4242, column: 18, scope: !8982)
!8984 = !DILocation(line: 4242, column: 33, scope: !8982)
!8985 = !DILocation(line: 4242, column: 12, scope: !8971)
!8986 = !DILocation(line: 4243, column: 20, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8982, file: !3, line: 4242, column: 54)
!8988 = !DILocation(line: 4243, column: 31, scope: !8987)
!8989 = !DILocation(line: 4243, column: 42, scope: !8987)
!8990 = !DILocation(line: 4243, column: 9, scope: !8987)
!8991 = !DILocation(line: 4244, column: 8, scope: !8987)
!8992 = !DILocation(line: 4246, column: 20, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8982, file: !3, line: 4245, column: 13)
!8994 = !DILocation(line: 4246, column: 31, scope: !8993)
!8995 = !DILocation(line: 4246, column: 42, scope: !8993)
!8996 = !DILocation(line: 4246, column: 9, scope: !8993)
!8997 = !DILocation(line: 4247, column: 9, scope: !8993)
!8998 = !DILocation(line: 4247, column: 22, scope: !8993)
!8999 = !DILocation(line: 4251, column: 32, scope: !8971)
!9000 = !DILocation(line: 4251, column: 36, scope: !8971)
!9001 = !DILocation(line: 4251, column: 43, scope: !8971)
!9002 = !DILocation(line: 4251, column: 50, scope: !8971)
!9003 = !DILocation(line: 4251, column: 61, scope: !8971)
!9004 = !DILocation(line: 4251, column: 70, scope: !8971)
!9005 = !DILocation(line: 4251, column: 84, scope: !8971)
!9006 = !DILocation(line: 4251, column: 8, scope: !8971)
!9007 = !DILocation(line: 4253, column: 19, scope: !8971)
!9008 = !DILocation(line: 4253, column: 27, scope: !8971)
!9009 = !DILocation(line: 4253, column: 8, scope: !8971)
!9010 = !DILocation(line: 4254, column: 16, scope: !8971)
!9011 = !DILocation(line: 4254, column: 13, scope: !8971)
!9012 = !DILocation(line: 4255, column: 7, scope: !8971)
!9013 = !DILocation(line: 4258, column: 23, scope: !8854)
!9014 = !DILocation(line: 4258, column: 34, scope: !8854)
!9015 = !DILocation(line: 4258, column: 16, scope: !8854)
!9016 = !DILocation(line: 4258, column: 40, scope: !8854)
!9017 = !DILocation(line: 4258, column: 12, scope: !8854)
!9018 = !DILocation(line: 4260, column: 11, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !8854, file: !3, line: 4260, column: 11)
!9020 = !DILocation(line: 4260, column: 16, scope: !9019)
!9021 = !DILocation(line: 4260, column: 11, scope: !8854)
!9022 = !DILocation(line: 4263, column: 12, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 4263, column: 12)
!9024 = distinct !DILexicalBlock(scope: !9019, file: !3, line: 4260, column: 24)
!9025 = !DILocation(line: 4263, column: 26, scope: !9023)
!9026 = !DILocation(line: 4263, column: 37, scope: !9023)
!9027 = !DILocation(line: 4263, column: 23, scope: !9023)
!9028 = !DILocation(line: 4263, column: 12, scope: !9024)
!9029 = !DILocation(line: 4264, column: 22, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9023, file: !3, line: 4263, column: 50)
!9031 = !DILocation(line: 4264, column: 33, scope: !9030)
!9032 = !DILocation(line: 4264, column: 20, scope: !9030)
!9033 = !DILocation(line: 4265, column: 24, scope: !9030)
!9034 = !DILocation(line: 4265, column: 37, scope: !9030)
!9035 = !DILocation(line: 4265, column: 35, scope: !9030)
!9036 = !DILocation(line: 4265, column: 22, scope: !9030)
!9037 = !DILocation(line: 4267, column: 9, scope: !9030)
!9038 = !DILocation(line: 4267, column: 23, scope: !9030)
!9039 = !DILocation(line: 4267, column: 29, scope: !9030)
!9040 = !DILocation(line: 4268, column: 24, scope: !9030)
!9041 = !DILocation(line: 4268, column: 38, scope: !9030)
!9042 = !DILocation(line: 4268, column: 44, scope: !9030)
!9043 = !DILocation(line: 4268, column: 55, scope: !9030)
!9044 = !DILocation(line: 4268, column: 23, scope: !9030)
!9045 = !DILocation(line: 4268, column: 21, scope: !9030)
!9046 = !DILocation(line: 4269, column: 8, scope: !9030)
!9047 = !DILocation(line: 4273, column: 9, scope: !9024)
!9048 = !DILocation(line: 4273, column: 20, scope: !9024)
!9049 = !DILocation(line: 4273, column: 26, scope: !9024)
!9050 = !DILocation(line: 4275, column: 35, scope: !9024)
!9051 = !DILocation(line: 4275, column: 49, scope: !9024)
!9052 = !DILocation(line: 4275, column: 66, scope: !9024)
!9053 = !DILocation(line: 4275, column: 77, scope: !9024)
!9054 = !DILocation(line: 4275, column: 64, scope: !9024)
!9055 = !DILocation(line: 4275, column: 33, scope: !9024)
!9056 = !DILocation(line: 4276, column: 46, scope: !9024)
!9057 = !DILocation(line: 4276, column: 72, scope: !9024)
!9058 = !DILocation(line: 4276, column: 81, scope: !9024)
!9059 = !DILocation(line: 4276, column: 92, scope: !9024)
!9060 = !DILocation(line: 4276, column: 76, scope: !9024)
!9061 = !DILocation(line: 4276, column: 39, scope: !9024)
!9062 = !DILocation(line: 4276, column: 8, scope: !9024)
!9063 = !DILocation(line: 4276, column: 34, scope: !9024)
!9064 = !DILocation(line: 4276, column: 37, scope: !9024)
!9065 = !DILocation(line: 4277, column: 46, scope: !9024)
!9066 = !DILocation(line: 4277, column: 72, scope: !9024)
!9067 = !DILocation(line: 4277, column: 81, scope: !9024)
!9068 = !DILocation(line: 4277, column: 92, scope: !9024)
!9069 = !DILocation(line: 4277, column: 76, scope: !9024)
!9070 = !DILocation(line: 4277, column: 39, scope: !9024)
!9071 = !DILocation(line: 4277, column: 8, scope: !9024)
!9072 = !DILocation(line: 4277, column: 34, scope: !9024)
!9073 = !DILocation(line: 4277, column: 37, scope: !9024)
!9074 = !DILocation(line: 4279, column: 46, scope: !9024)
!9075 = !DILocation(line: 4279, column: 72, scope: !9024)
!9076 = !DILocation(line: 4279, column: 81, scope: !9024)
!9077 = !DILocation(line: 4279, column: 92, scope: !9024)
!9078 = !DILocation(line: 4279, column: 76, scope: !9024)
!9079 = !DILocation(line: 4279, column: 97, scope: !9024)
!9080 = !DILocation(line: 4279, column: 39, scope: !9024)
!9081 = !DILocation(line: 4279, column: 8, scope: !9024)
!9082 = !DILocation(line: 4279, column: 34, scope: !9024)
!9083 = !DILocation(line: 4279, column: 37, scope: !9024)
!9084 = !DILocation(line: 4280, column: 46, scope: !9024)
!9085 = !DILocation(line: 4280, column: 72, scope: !9024)
!9086 = !DILocation(line: 4280, column: 81, scope: !9024)
!9087 = !DILocation(line: 4280, column: 92, scope: !9024)
!9088 = !DILocation(line: 4280, column: 76, scope: !9024)
!9089 = !DILocation(line: 4280, column: 97, scope: !9024)
!9090 = !DILocation(line: 4280, column: 39, scope: !9024)
!9091 = !DILocation(line: 4280, column: 8, scope: !9024)
!9092 = !DILocation(line: 4280, column: 34, scope: !9024)
!9093 = !DILocation(line: 4280, column: 37, scope: !9024)
!9094 = !DILocation(line: 4283, column: 16, scope: !9024)
!9095 = !DILocation(line: 4283, column: 8, scope: !9024)
!9096 = !DILocation(line: 4285, column: 14, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 4285, column: 14)
!9098 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 4283, column: 22)
!9099 = !DILocation(line: 4285, column: 14, scope: !9098)
!9100 = !DILocation(line: 4285, column: 51, scope: !9097)
!9101 = !DILocation(line: 4285, column: 55, scope: !9097)
!9102 = !DILocation(line: 4285, column: 66, scope: !9097)
!9103 = !DILocation(line: 4285, column: 27, scope: !9097)
!9104 = !DILocation(line: 4286, column: 49, scope: !9097)
!9105 = !DILocation(line: 4286, column: 53, scope: !9097)
!9106 = !DILocation(line: 4286, column: 64, scope: !9097)
!9107 = !DILocation(line: 4286, column: 27, scope: !9097)
!9108 = !DILocation(line: 4287, column: 10, scope: !9098)
!9109 = !DILocation(line: 4289, column: 22, scope: !9098)
!9110 = !DILocation(line: 4289, column: 26, scope: !9098)
!9111 = !DILocation(line: 4289, column: 37, scope: !9098)
!9112 = !DILocation(line: 4289, column: 47, scope: !9098)
!9113 = !DILocation(line: 4289, column: 10, scope: !9098)
!9114 = !DILocation(line: 4291, column: 14, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 4291, column: 14)
!9116 = !DILocation(line: 4291, column: 14, scope: !9098)
!9117 = !DILocation(line: 4291, column: 51, scope: !9115)
!9118 = !DILocation(line: 4291, column: 55, scope: !9115)
!9119 = !DILocation(line: 4291, column: 66, scope: !9115)
!9120 = !DILocation(line: 4291, column: 72, scope: !9115)
!9121 = !DILocation(line: 4291, column: 100, scope: !9115)
!9122 = !DILocation(line: 4291, column: 27, scope: !9115)
!9123 = !DILocation(line: 4292, column: 49, scope: !9115)
!9124 = !DILocation(line: 4292, column: 53, scope: !9115)
!9125 = !DILocation(line: 4292, column: 64, scope: !9115)
!9126 = !DILocation(line: 4292, column: 70, scope: !9115)
!9127 = !DILocation(line: 4292, column: 96, scope: !9115)
!9128 = !DILocation(line: 4292, column: 27, scope: !9115)
!9129 = !DILocation(line: 4293, column: 10, scope: !9098)
!9130 = !DILocation(line: 4295, column: 14, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 4295, column: 14)
!9132 = !DILocation(line: 4295, column: 14, scope: !9098)
!9133 = !DILocation(line: 4295, column: 52, scope: !9131)
!9134 = !DILocation(line: 4295, column: 56, scope: !9131)
!9135 = !DILocation(line: 4295, column: 67, scope: !9131)
!9136 = !DILocation(line: 4295, column: 73, scope: !9131)
!9137 = !DILocation(line: 4295, column: 27, scope: !9131)
!9138 = !DILocation(line: 4296, column: 50, scope: !9131)
!9139 = !DILocation(line: 4296, column: 54, scope: !9131)
!9140 = !DILocation(line: 4296, column: 65, scope: !9131)
!9141 = !DILocation(line: 4296, column: 71, scope: !9131)
!9142 = !DILocation(line: 4296, column: 27, scope: !9131)
!9143 = !DILocation(line: 4297, column: 10, scope: !9098)
!9144 = !DILocation(line: 4299, column: 14, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 4299, column: 14)
!9146 = !DILocation(line: 4299, column: 14, scope: !9098)
!9147 = !DILocation(line: 4299, column: 50, scope: !9145)
!9148 = !DILocation(line: 4299, column: 54, scope: !9145)
!9149 = !DILocation(line: 4299, column: 65, scope: !9145)
!9150 = !DILocation(line: 4299, column: 27, scope: !9145)
!9151 = !DILocation(line: 4300, column: 48, scope: !9145)
!9152 = !DILocation(line: 4300, column: 52, scope: !9145)
!9153 = !DILocation(line: 4300, column: 63, scope: !9145)
!9154 = !DILocation(line: 4300, column: 27, scope: !9145)
!9155 = !DILocation(line: 4301, column: 10, scope: !9098)
!9156 = !DILocation(line: 4303, column: 14, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 4303, column: 14)
!9158 = !DILocation(line: 4303, column: 14, scope: !9098)
!9159 = !DILocation(line: 4303, column: 50, scope: !9157)
!9160 = !DILocation(line: 4303, column: 54, scope: !9157)
!9161 = !DILocation(line: 4303, column: 65, scope: !9157)
!9162 = !DILocation(line: 4303, column: 73, scope: !9157)
!9163 = !DILocation(line: 4303, column: 27, scope: !9157)
!9164 = !DILocation(line: 4304, column: 48, scope: !9157)
!9165 = !DILocation(line: 4304, column: 52, scope: !9157)
!9166 = !DILocation(line: 4304, column: 63, scope: !9157)
!9167 = !DILocation(line: 4304, column: 71, scope: !9157)
!9168 = !DILocation(line: 4304, column: 27, scope: !9157)
!9169 = !DILocation(line: 4305, column: 10, scope: !9098)
!9170 = !DILocation(line: 4307, column: 7, scope: !9024)
!9171 = !DILocation(line: 4309, column: 11, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !8854, file: !3, line: 4309, column: 11)
!9173 = !DILocation(line: 4309, column: 11, scope: !8854)
!9174 = !DILocation(line: 4310, column: 12, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9176, file: !3, line: 4310, column: 12)
!9176 = distinct !DILexicalBlock(scope: !9172, file: !3, line: 4309, column: 23)
!9177 = !DILocation(line: 4310, column: 12, scope: !9176)
!9178 = !DILocation(line: 4310, column: 52, scope: !9175)
!9179 = !DILocation(line: 4310, column: 63, scope: !9175)
!9180 = !DILocation(line: 4310, column: 73, scope: !9175)
!9181 = !DILocation(line: 4310, column: 25, scope: !9175)
!9182 = !DILocation(line: 4310, column: 36, scope: !9175)
!9183 = !DILocation(line: 4310, column: 42, scope: !9175)
!9184 = !DILocation(line: 4310, column: 50, scope: !9175)
!9185 = !DILocation(line: 4311, column: 41, scope: !9175)
!9186 = !DILocation(line: 4311, column: 52, scope: !9175)
!9187 = !DILocation(line: 4311, column: 62, scope: !9175)
!9188 = !DILocation(line: 4311, column: 13, scope: !9175)
!9189 = !DILocation(line: 4311, column: 24, scope: !9175)
!9190 = !DILocation(line: 4311, column: 30, scope: !9175)
!9191 = !DILocation(line: 4311, column: 39, scope: !9175)
!9192 = !DILocation(line: 4312, column: 7, scope: !9176)
!9193 = !DILocation(line: 4315, column: 6, scope: !8854)
!9194 = !DILocation(line: 4316, column: 5, scope: !8840)
!9195 = !DILocation(line: 4317, column: 4, scope: !8825)
!9196 = !DILocation(line: 4179, column: 59, scope: !8822)
!9197 = !DILocation(line: 4179, column: 65, scope: !8822)
!9198 = !DILocation(line: 4179, column: 57, scope: !8822)
!9199 = !DILocation(line: 4179, column: 4, scope: !8822)
!9200 = distinct !{!9200, !8823, !9201}
!9201 = !DILocation(line: 4317, column: 4, scope: !8815)
!9202 = distinct !{!9202, !8402, !9203}
!9203 = !DILocation(line: 4319, column: 2, scope: !8270)
!9204 = !DILocation(line: 4322, column: 6, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 4322, column: 6)
!9206 = !DILocation(line: 4322, column: 11, scope: !9205)
!9207 = !DILocation(line: 4322, column: 6, scope: !8270)
!9208 = !DILocation(line: 4324, column: 15, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9210, file: !3, line: 4324, column: 3)
!9210 = distinct !DILexicalBlock(scope: !9205, file: !3, line: 4322, column: 32)
!9211 = !DILocation(line: 4324, column: 13, scope: !9209)
!9212 = !DILocation(line: 4324, column: 8, scope: !9209)
!9213 = !DILocation(line: 4324, column: 28, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9209, file: !3, line: 4324, column: 3)
!9215 = !DILocation(line: 4324, column: 3, scope: !9209)
!9216 = !DILocation(line: 4325, column: 16, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 4324, column: 53)
!9218 = !DILocation(line: 4325, column: 22, scope: !9217)
!9219 = !DILocation(line: 4325, column: 14, scope: !9217)
!9220 = !DILocation(line: 4326, column: 51, scope: !9217)
!9221 = !DILocation(line: 4326, column: 63, scope: !9217)
!9222 = !DILocation(line: 4326, column: 71, scope: !9217)
!9223 = !DILocation(line: 4326, column: 5, scope: !9217)
!9224 = !DILocation(line: 4326, column: 16, scope: !9217)
!9225 = !DILocation(line: 4326, column: 22, scope: !9217)
!9226 = !DILocation(line: 4326, column: 30, scope: !9217)
!9227 = !DILocation(line: 4327, column: 3, scope: !9217)
!9228 = !DILocation(line: 4324, column: 41, scope: !9214)
!9229 = !DILocation(line: 4324, column: 47, scope: !9214)
!9230 = !DILocation(line: 4324, column: 39, scope: !9214)
!9231 = !DILocation(line: 4324, column: 3, scope: !9214)
!9232 = distinct !{!9232, !9215, !9233}
!9233 = !DILocation(line: 4327, column: 3, scope: !9209)
!9234 = !DILocation(line: 4329, column: 15, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9210, file: !3, line: 4329, column: 3)
!9236 = !DILocation(line: 4329, column: 13, scope: !9235)
!9237 = !DILocation(line: 4329, column: 8, scope: !9235)
!9238 = !DILocation(line: 4329, column: 30, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9235, file: !3, line: 4329, column: 3)
!9240 = !DILocation(line: 4329, column: 3, scope: !9235)
!9241 = !DILocation(line: 4330, column: 16, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9239, file: !3, line: 4329, column: 55)
!9243 = !DILocation(line: 4330, column: 22, scope: !9242)
!9244 = !DILocation(line: 4330, column: 14, scope: !9242)
!9245 = !DILocation(line: 4331, column: 15, scope: !9242)
!9246 = !DILocation(line: 4331, column: 26, scope: !9242)
!9247 = !DILocation(line: 4331, column: 32, scope: !9242)
!9248 = !DILocation(line: 4331, column: 57, scope: !9242)
!9249 = !DILocation(line: 4331, column: 69, scope: !9242)
!9250 = !DILocation(line: 4331, column: 77, scope: !9242)
!9251 = !DILocation(line: 4331, column: 38, scope: !9242)
!9252 = !DILocation(line: 4331, column: 4, scope: !9242)
!9253 = !DILocation(line: 4332, column: 3, scope: !9242)
!9254 = !DILocation(line: 4329, column: 43, scope: !9239)
!9255 = !DILocation(line: 4329, column: 49, scope: !9239)
!9256 = !DILocation(line: 4329, column: 41, scope: !9239)
!9257 = !DILocation(line: 4329, column: 3, scope: !9239)
!9258 = distinct !{!9258, !9240, !9259}
!9259 = !DILocation(line: 4332, column: 3, scope: !9235)
!9260 = !DILocation(line: 4334, column: 21, scope: !9210)
!9261 = !DILocation(line: 4334, column: 3, scope: !9210)
!9262 = !DILocation(line: 4335, column: 2, scope: !9210)
!9263 = !DILocation(line: 4336, column: 11, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9205, file: !3, line: 4336, column: 11)
!9265 = !DILocation(line: 4336, column: 16, scope: !9264)
!9266 = !DILocation(line: 4336, column: 11, scope: !9205)
!9267 = !DILocation(line: 4338, column: 15, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9269, file: !3, line: 4338, column: 3)
!9269 = distinct !DILexicalBlock(scope: !9264, file: !3, line: 4336, column: 38)
!9270 = !DILocation(line: 4338, column: 13, scope: !9268)
!9271 = !DILocation(line: 4338, column: 8, scope: !9268)
!9272 = !DILocation(line: 4338, column: 29, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 4338, column: 3)
!9274 = !DILocation(line: 4338, column: 3, scope: !9268)
!9275 = !DILocation(line: 4339, column: 16, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9273, file: !3, line: 4338, column: 54)
!9277 = !DILocation(line: 4339, column: 22, scope: !9276)
!9278 = !DILocation(line: 4339, column: 14, scope: !9276)
!9279 = !DILocation(line: 4340, column: 32, scope: !9276)
!9280 = !DILocation(line: 4340, column: 43, scope: !9276)
!9281 = !DILocation(line: 4340, column: 52, scope: !9276)
!9282 = !DILocation(line: 4340, column: 5, scope: !9276)
!9283 = !DILocation(line: 4340, column: 16, scope: !9276)
!9284 = !DILocation(line: 4340, column: 22, scope: !9276)
!9285 = !DILocation(line: 4340, column: 30, scope: !9276)
!9286 = !DILocation(line: 4341, column: 3, scope: !9276)
!9287 = !DILocation(line: 4338, column: 42, scope: !9273)
!9288 = !DILocation(line: 4338, column: 48, scope: !9273)
!9289 = !DILocation(line: 4338, column: 40, scope: !9273)
!9290 = !DILocation(line: 4338, column: 3, scope: !9273)
!9291 = distinct !{!9291, !9274, !9292}
!9292 = !DILocation(line: 4341, column: 3, scope: !9268)
!9293 = !DILocation(line: 4343, column: 15, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9269, file: !3, line: 4343, column: 3)
!9295 = !DILocation(line: 4343, column: 13, scope: !9294)
!9296 = !DILocation(line: 4343, column: 8, scope: !9294)
!9297 = !DILocation(line: 4343, column: 31, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9294, file: !3, line: 4343, column: 3)
!9299 = !DILocation(line: 4343, column: 3, scope: !9294)
!9300 = !DILocation(line: 4344, column: 16, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9298, file: !3, line: 4343, column: 56)
!9302 = !DILocation(line: 4344, column: 22, scope: !9301)
!9303 = !DILocation(line: 4344, column: 14, scope: !9301)
!9304 = !DILocation(line: 4345, column: 15, scope: !9301)
!9305 = !DILocation(line: 4345, column: 26, scope: !9301)
!9306 = !DILocation(line: 4345, column: 32, scope: !9301)
!9307 = !DILocation(line: 4345, column: 38, scope: !9301)
!9308 = !DILocation(line: 4345, column: 49, scope: !9301)
!9309 = !DILocation(line: 4345, column: 58, scope: !9301)
!9310 = !DILocation(line: 4345, column: 4, scope: !9301)
!9311 = !DILocation(line: 4346, column: 3, scope: !9301)
!9312 = !DILocation(line: 4343, column: 44, scope: !9298)
!9313 = !DILocation(line: 4343, column: 50, scope: !9298)
!9314 = !DILocation(line: 4343, column: 42, scope: !9298)
!9315 = !DILocation(line: 4343, column: 3, scope: !9298)
!9316 = distinct !{!9316, !9299, !9317}
!9317 = !DILocation(line: 4346, column: 3, scope: !9294)
!9318 = !DILocation(line: 4348, column: 21, scope: !9269)
!9319 = !DILocation(line: 4348, column: 3, scope: !9269)
!9320 = !DILocation(line: 4349, column: 2, scope: !9269)
!9321 = !DILocation(line: 4351, column: 2, scope: !8270)
!9322 = distinct !DISubprogram(name: "copy_v2_v2", scope: !4381, file: !4381, line: 58, type: !4361, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!9323 = !DILocalVariable(name: "r", arg: 1, scope: !9322, file: !4381, line: 58, type: !216)
!9324 = !DILocation(line: 58, column: 31, scope: !9322)
!9325 = !DILocalVariable(name: "a", arg: 2, scope: !9322, file: !4381, line: 58, type: !1944)
!9326 = !DILocation(line: 58, column: 49, scope: !9322)
!9327 = !DILocation(line: 60, column: 9, scope: !9322)
!9328 = !DILocation(line: 60, column: 2, scope: !9322)
!9329 = !DILocation(line: 60, column: 7, scope: !9322)
!9330 = !DILocation(line: 61, column: 9, scope: !9322)
!9331 = !DILocation(line: 61, column: 2, scope: !9322)
!9332 = !DILocation(line: 61, column: 7, scope: !9322)
!9333 = !DILocation(line: 62, column: 1, scope: !9322)
!9334 = distinct !DISubprogram(name: "partial_redraw_array_merge", scope: !3, file: !3, line: 3587, type: !9335, scopeLine: 3588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!9335 = !DISubroutineType(types: !9336)
!9336 = !{!233, !3896, !3896, !22}
!9337 = !DILocalVariable(name: "pr", arg: 1, scope: !9334, file: !3, line: 3587, type: !3896)
!9338 = !DILocation(line: 3587, column: 65, scope: !9334)
!9339 = !DILocalVariable(name: "pr_other", arg: 2, scope: !9334, file: !3, line: 3587, type: !3896)
!9340 = !DILocation(line: 3587, column: 94, scope: !9334)
!9341 = !DILocalVariable(name: "tot", arg: 3, scope: !9334, file: !3, line: 3587, type: !22)
!9342 = !DILocation(line: 3587, column: 108, scope: !9334)
!9343 = !DILocalVariable(name: "touch", scope: !9334, file: !3, line: 3589, type: !233)
!9344 = !DILocation(line: 3589, column: 7, scope: !9334)
!9345 = !DILocation(line: 3590, column: 2, scope: !9334)
!9346 = !DILocation(line: 3590, column: 12, scope: !9334)
!9347 = !DILocation(line: 3591, column: 19, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !9334, file: !3, line: 3590, column: 16)
!9349 = !DILocation(line: 3591, column: 23, scope: !9348)
!9350 = !DILocation(line: 3591, column: 27, scope: !9348)
!9351 = !DILocation(line: 3591, column: 37, scope: !9348)
!9352 = !DILocation(line: 3591, column: 12, scope: !9348)
!9353 = !DILocation(line: 3591, column: 3, scope: !9348)
!9354 = !DILocation(line: 3591, column: 7, scope: !9348)
!9355 = !DILocation(line: 3591, column: 10, scope: !9348)
!9356 = !DILocation(line: 3592, column: 19, scope: !9348)
!9357 = !DILocation(line: 3592, column: 23, scope: !9348)
!9358 = !DILocation(line: 3592, column: 27, scope: !9348)
!9359 = !DILocation(line: 3592, column: 37, scope: !9348)
!9360 = !DILocation(line: 3592, column: 12, scope: !9348)
!9361 = !DILocation(line: 3592, column: 3, scope: !9348)
!9362 = !DILocation(line: 3592, column: 7, scope: !9348)
!9363 = !DILocation(line: 3592, column: 10, scope: !9348)
!9364 = !DILocation(line: 3594, column: 19, scope: !9348)
!9365 = !DILocation(line: 3594, column: 23, scope: !9348)
!9366 = !DILocation(line: 3594, column: 27, scope: !9348)
!9367 = !DILocation(line: 3594, column: 37, scope: !9348)
!9368 = !DILocation(line: 3594, column: 12, scope: !9348)
!9369 = !DILocation(line: 3594, column: 3, scope: !9348)
!9370 = !DILocation(line: 3594, column: 7, scope: !9348)
!9371 = !DILocation(line: 3594, column: 10, scope: !9348)
!9372 = !DILocation(line: 3595, column: 19, scope: !9348)
!9373 = !DILocation(line: 3595, column: 23, scope: !9348)
!9374 = !DILocation(line: 3595, column: 27, scope: !9348)
!9375 = !DILocation(line: 3595, column: 37, scope: !9348)
!9376 = !DILocation(line: 3595, column: 12, scope: !9348)
!9377 = !DILocation(line: 3595, column: 3, scope: !9348)
!9378 = !DILocation(line: 3595, column: 7, scope: !9348)
!9379 = !DILocation(line: 3595, column: 10, scope: !9348)
!9380 = !DILocation(line: 3597, column: 7, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9348, file: !3, line: 3597, column: 7)
!9382 = !DILocation(line: 3597, column: 11, scope: !9381)
!9383 = !DILocation(line: 3597, column: 14, scope: !9381)
!9384 = !DILocation(line: 3597, column: 7, scope: !9348)
!9385 = !DILocation(line: 3598, column: 10, scope: !9381)
!9386 = !DILocation(line: 3598, column: 4, scope: !9381)
!9387 = !DILocation(line: 3600, column: 5, scope: !9348)
!9388 = !DILocation(line: 3600, column: 17, scope: !9348)
!9389 = distinct !{!9389, !9345, !9390}
!9390 = !DILocation(line: 3601, column: 2, scope: !9334)
!9391 = !DILocation(line: 3603, column: 9, scope: !9334)
!9392 = !DILocation(line: 3603, column: 2, scope: !9334)
!9393 = distinct !DISubprogram(name: "project_paint_bucket_bounds", scope: !3, file: !3, line: 2695, type: !9394, scopeLine: 2696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!9394 = !DISubroutineType(types: !9395)
!9395 = !{null, !9396, !1944, !1944, !224, !224}
!9396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9397, size: 64)
!9397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3675)
!9398 = !DILocalVariable(name: "ps", arg: 1, scope: !9393, file: !3, line: 2695, type: !9396)
!9399 = !DILocation(line: 2695, column: 63, scope: !9393)
!9400 = !DILocalVariable(name: "min", arg: 2, scope: !9393, file: !3, line: 2695, type: !1944)
!9401 = !DILocation(line: 2695, column: 79, scope: !9393)
!9402 = !DILocalVariable(name: "max", arg: 3, scope: !9393, file: !3, line: 2695, type: !1944)
!9403 = !DILocation(line: 2695, column: 99, scope: !9393)
!9404 = !DILocalVariable(name: "bucketMin", arg: 4, scope: !9393, file: !3, line: 2695, type: !224)
!9405 = !DILocation(line: 2695, column: 111, scope: !9393)
!9406 = !DILocalVariable(name: "bucketMax", arg: 5, scope: !9393, file: !3, line: 2695, type: !224)
!9407 = !DILocation(line: 2695, column: 129, scope: !9393)
!9408 = !DILocation(line: 2699, column: 38, scope: !9393)
!9409 = !DILocation(line: 2699, column: 47, scope: !9393)
!9410 = !DILocation(line: 2699, column: 51, scope: !9393)
!9411 = !DILocation(line: 2699, column: 45, scope: !9393)
!9412 = !DILocation(line: 2699, column: 67, scope: !9393)
!9413 = !DILocation(line: 2699, column: 71, scope: !9393)
!9414 = !DILocation(line: 2699, column: 65, scope: !9393)
!9415 = !DILocation(line: 2699, column: 87, scope: !9393)
!9416 = !DILocation(line: 2699, column: 91, scope: !9393)
!9417 = !DILocation(line: 2699, column: 85, scope: !9393)
!9418 = !DILocation(line: 2699, column: 23, scope: !9393)
!9419 = !DILocation(line: 2699, column: 102, scope: !9393)
!9420 = !DILocation(line: 2699, column: 17, scope: !9393)
!9421 = !DILocation(line: 2699, column: 2, scope: !9393)
!9422 = !DILocation(line: 2699, column: 15, scope: !9393)
!9423 = !DILocation(line: 2700, column: 38, scope: !9393)
!9424 = !DILocation(line: 2700, column: 47, scope: !9393)
!9425 = !DILocation(line: 2700, column: 51, scope: !9393)
!9426 = !DILocation(line: 2700, column: 45, scope: !9393)
!9427 = !DILocation(line: 2700, column: 67, scope: !9393)
!9428 = !DILocation(line: 2700, column: 71, scope: !9393)
!9429 = !DILocation(line: 2700, column: 65, scope: !9393)
!9430 = !DILocation(line: 2700, column: 88, scope: !9393)
!9431 = !DILocation(line: 2700, column: 92, scope: !9393)
!9432 = !DILocation(line: 2700, column: 86, scope: !9393)
!9433 = !DILocation(line: 2700, column: 23, scope: !9393)
!9434 = !DILocation(line: 2700, column: 103, scope: !9393)
!9435 = !DILocation(line: 2700, column: 17, scope: !9393)
!9436 = !DILocation(line: 2700, column: 2, scope: !9393)
!9437 = !DILocation(line: 2700, column: 15, scope: !9393)
!9438 = !DILocation(line: 2702, column: 38, scope: !9393)
!9439 = !DILocation(line: 2702, column: 47, scope: !9393)
!9440 = !DILocation(line: 2702, column: 51, scope: !9393)
!9441 = !DILocation(line: 2702, column: 45, scope: !9393)
!9442 = !DILocation(line: 2702, column: 67, scope: !9393)
!9443 = !DILocation(line: 2702, column: 71, scope: !9393)
!9444 = !DILocation(line: 2702, column: 65, scope: !9393)
!9445 = !DILocation(line: 2702, column: 87, scope: !9393)
!9446 = !DILocation(line: 2702, column: 91, scope: !9393)
!9447 = !DILocation(line: 2702, column: 85, scope: !9393)
!9448 = !DILocation(line: 2702, column: 23, scope: !9393)
!9449 = !DILocation(line: 2702, column: 102, scope: !9393)
!9450 = !DILocation(line: 2702, column: 17, scope: !9393)
!9451 = !DILocation(line: 2702, column: 2, scope: !9393)
!9452 = !DILocation(line: 2702, column: 15, scope: !9393)
!9453 = !DILocation(line: 2703, column: 38, scope: !9393)
!9454 = !DILocation(line: 2703, column: 47, scope: !9393)
!9455 = !DILocation(line: 2703, column: 51, scope: !9393)
!9456 = !DILocation(line: 2703, column: 45, scope: !9393)
!9457 = !DILocation(line: 2703, column: 67, scope: !9393)
!9458 = !DILocation(line: 2703, column: 71, scope: !9393)
!9459 = !DILocation(line: 2703, column: 65, scope: !9393)
!9460 = !DILocation(line: 2703, column: 88, scope: !9393)
!9461 = !DILocation(line: 2703, column: 92, scope: !9393)
!9462 = !DILocation(line: 2703, column: 86, scope: !9393)
!9463 = !DILocation(line: 2703, column: 23, scope: !9393)
!9464 = !DILocation(line: 2703, column: 103, scope: !9393)
!9465 = !DILocation(line: 2703, column: 17, scope: !9393)
!9466 = !DILocation(line: 2703, column: 2, scope: !9393)
!9467 = !DILocation(line: 2703, column: 15, scope: !9393)
!9468 = !DILocation(line: 2706, column: 2, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 2706, column: 2)
!9470 = distinct !DILexicalBlock(scope: !9393, file: !3, line: 2706, column: 2)
!9471 = !DILocation(line: 2706, column: 2, scope: !9470)
!9472 = !DILocation(line: 2706, column: 2, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9469, file: !3, line: 2706, column: 2)
!9474 = !DILocation(line: 2707, column: 2, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9476, file: !3, line: 2707, column: 2)
!9476 = distinct !DILexicalBlock(scope: !9393, file: !3, line: 2707, column: 2)
!9477 = !DILocation(line: 2707, column: 2, scope: !9476)
!9478 = !DILocation(line: 2707, column: 2, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 2707, column: 2)
!9480 = !DILocation(line: 2709, column: 2, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9482, file: !3, line: 2709, column: 2)
!9482 = distinct !DILexicalBlock(scope: !9393, file: !3, line: 2709, column: 2)
!9483 = !DILocation(line: 2709, column: 2, scope: !9482)
!9484 = !DILocation(line: 2709, column: 2, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9481, file: !3, line: 2709, column: 2)
!9486 = !DILocation(line: 2710, column: 2, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 2710, column: 2)
!9488 = distinct !DILexicalBlock(scope: !9393, file: !3, line: 2710, column: 2)
!9489 = !DILocation(line: 2710, column: 2, scope: !9488)
!9490 = !DILocation(line: 2710, column: 2, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 2710, column: 2)
!9492 = !DILocation(line: 2711, column: 1, scope: !9393)
!9493 = distinct !DISubprogram(name: "project_bucket_iter_next", scope: !3, file: !3, line: 3675, type: !9494, scopeLine: 3676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!9494 = !DISubroutineType(types: !9495)
!9495 = !{!233, !3674, !224, !9496, !1944}
!9496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!9497 = !DILocalVariable(name: "ps", arg: 1, scope: !9493, file: !3, line: 3675, type: !3674)
!9498 = !DILocation(line: 3675, column: 54, scope: !9493)
!9499 = !DILocalVariable(name: "bucket_index", arg: 2, scope: !9493, file: !3, line: 3675, type: !224)
!9500 = !DILocation(line: 3675, column: 63, scope: !9493)
!9501 = !DILocalVariable(name: "bucket_bounds", arg: 3, scope: !9493, file: !3, line: 3675, type: !9496)
!9502 = !DILocation(line: 3675, column: 83, scope: !9493)
!9503 = !DILocalVariable(name: "mval", arg: 4, scope: !9493, file: !3, line: 3675, type: !1944)
!9504 = !DILocation(line: 3675, column: 110, scope: !9493)
!9505 = !DILocalVariable(name: "diameter", scope: !9493, file: !3, line: 3677, type: !5126)
!9506 = !DILocation(line: 3677, column: 12, scope: !9493)
!9507 = !DILocation(line: 3677, column: 27, scope: !9493)
!9508 = !DILocation(line: 3677, column: 31, scope: !9493)
!9509 = !DILocation(line: 3677, column: 25, scope: !9493)
!9510 = !DILocation(line: 3677, column: 23, scope: !9493)
!9511 = !DILocation(line: 3679, column: 6, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9493, file: !3, line: 3679, column: 6)
!9513 = !DILocation(line: 3679, column: 10, scope: !9512)
!9514 = !DILocation(line: 3679, column: 21, scope: !9512)
!9515 = !DILocation(line: 3679, column: 6, scope: !9493)
!9516 = !DILocation(line: 3680, column: 3, scope: !9512)
!9517 = !DILocation(line: 3684, column: 2, scope: !9493)
!9518 = !DILocation(line: 3684, column: 9, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 3684, column: 2)
!9520 = distinct !DILexicalBlock(scope: !9493, file: !3, line: 3684, column: 2)
!9521 = !DILocation(line: 3684, column: 13, scope: !9519)
!9522 = !DILocation(line: 3684, column: 32, scope: !9519)
!9523 = !DILocation(line: 3684, column: 36, scope: !9519)
!9524 = !DILocation(line: 3684, column: 30, scope: !9519)
!9525 = !DILocation(line: 3684, column: 2, scope: !9520)
!9526 = !DILocation(line: 3685, column: 3, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 3684, column: 74)
!9528 = !DILocation(line: 3685, column: 10, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9530, file: !3, line: 3685, column: 3)
!9530 = distinct !DILexicalBlock(scope: !9527, file: !3, line: 3685, column: 3)
!9531 = !DILocation(line: 3685, column: 14, scope: !9529)
!9532 = !DILocation(line: 3685, column: 33, scope: !9529)
!9533 = !DILocation(line: 3685, column: 37, scope: !9529)
!9534 = !DILocation(line: 3685, column: 31, scope: !9529)
!9535 = !DILocation(line: 3685, column: 3, scope: !9530)
!9536 = !DILocation(line: 3688, column: 26, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 3685, column: 75)
!9538 = !DILocation(line: 3688, column: 30, scope: !9537)
!9539 = !DILocation(line: 3688, column: 34, scope: !9537)
!9540 = !DILocation(line: 3688, column: 52, scope: !9537)
!9541 = !DILocation(line: 3688, column: 56, scope: !9537)
!9542 = !DILocation(line: 3688, column: 74, scope: !9537)
!9543 = !DILocation(line: 3688, column: 4, scope: !9537)
!9544 = !DILocation(line: 3690, column: 9, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9537, file: !3, line: 3690, column: 8)
!9546 = !DILocation(line: 3690, column: 13, scope: !9545)
!9547 = !DILocation(line: 3690, column: 20, scope: !9545)
!9548 = !DILocation(line: 3690, column: 38, scope: !9545)
!9549 = !DILocation(line: 3691, column: 36, scope: !9545)
!9550 = !DILocation(line: 3691, column: 50, scope: !9545)
!9551 = !DILocation(line: 3691, column: 61, scope: !9545)
!9552 = !DILocation(line: 3691, column: 59, scope: !9545)
!9553 = !DILocation(line: 3691, column: 42, scope: !9545)
!9554 = !DILocation(line: 3691, column: 72, scope: !9545)
!9555 = !DILocation(line: 3691, column: 8, scope: !9545)
!9556 = !DILocation(line: 3690, column: 8, scope: !9537)
!9557 = !DILocation(line: 3693, column: 21, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9545, file: !3, line: 3692, column: 4)
!9559 = !DILocation(line: 3693, column: 25, scope: !9558)
!9560 = !DILocation(line: 3693, column: 45, scope: !9558)
!9561 = !DILocation(line: 3693, column: 49, scope: !9558)
!9562 = !DILocation(line: 3693, column: 68, scope: !9558)
!9563 = !DILocation(line: 3693, column: 72, scope: !9558)
!9564 = !DILocation(line: 3693, column: 66, scope: !9558)
!9565 = !DILocation(line: 3693, column: 42, scope: !9558)
!9566 = !DILocation(line: 3693, column: 6, scope: !9558)
!9567 = !DILocation(line: 3693, column: 19, scope: !9558)
!9568 = !DILocation(line: 3694, column: 5, scope: !9558)
!9569 = !DILocation(line: 3694, column: 9, scope: !9558)
!9570 = !DILocation(line: 3694, column: 25, scope: !9558)
!9571 = !DILocation(line: 3696, column: 9, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9558, file: !3, line: 3696, column: 9)
!9573 = !DILocation(line: 3696, column: 13, scope: !9572)
!9574 = !DILocation(line: 3696, column: 24, scope: !9572)
!9575 = !DILocation(line: 3696, column: 9, scope: !9558)
!9576 = !DILocation(line: 3697, column: 6, scope: !9572)
!9577 = !DILocation(line: 3699, column: 5, scope: !9558)
!9578 = !DILocation(line: 3701, column: 3, scope: !9537)
!9579 = !DILocation(line: 3685, column: 51, scope: !9529)
!9580 = !DILocation(line: 3685, column: 55, scope: !9529)
!9581 = !DILocation(line: 3685, column: 71, scope: !9529)
!9582 = !DILocation(line: 3685, column: 3, scope: !9529)
!9583 = distinct !{!9583, !9535, !9584}
!9584 = !DILocation(line: 3701, column: 3, scope: !9530)
!9585 = !DILocation(line: 3702, column: 26, scope: !9527)
!9586 = !DILocation(line: 3702, column: 30, scope: !9527)
!9587 = !DILocation(line: 3702, column: 3, scope: !9527)
!9588 = !DILocation(line: 3702, column: 7, scope: !9527)
!9589 = !DILocation(line: 3702, column: 24, scope: !9527)
!9590 = !DILocation(line: 3703, column: 2, scope: !9527)
!9591 = !DILocation(line: 3684, column: 50, scope: !9519)
!9592 = !DILocation(line: 3684, column: 54, scope: !9519)
!9593 = !DILocation(line: 3684, column: 70, scope: !9519)
!9594 = !DILocation(line: 3684, column: 2, scope: !9519)
!9595 = distinct !{!9595, !9525, !9596}
!9596 = !DILocation(line: 3703, column: 2, scope: !9520)
!9597 = !DILocation(line: 3705, column: 6, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9493, file: !3, line: 3705, column: 6)
!9599 = !DILocation(line: 3705, column: 10, scope: !9598)
!9600 = !DILocation(line: 3705, column: 21, scope: !9598)
!9601 = !DILocation(line: 3705, column: 6, scope: !9493)
!9602 = !DILocation(line: 3706, column: 3, scope: !9598)
!9603 = !DILocation(line: 3707, column: 2, scope: !9493)
!9604 = !DILocation(line: 3708, column: 1, scope: !9493)
!9605 = distinct !DISubprogram(name: "project_bucket_init", scope: !3, file: !3, line: 2726, type: !9606, scopeLine: 2727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!9606 = !DISubroutineType(types: !9607)
!9607 = !{null, !9396, !5126, !5126, !9496}
!9608 = !DILocalVariable(name: "ps", arg: 1, scope: !9605, file: !3, line: 2726, type: !9396)
!9609 = !DILocation(line: 2726, column: 55, scope: !9605)
!9610 = !DILocalVariable(name: "thread_index", arg: 2, scope: !9605, file: !3, line: 2726, type: !5126)
!9611 = !DILocation(line: 2726, column: 69, scope: !9605)
!9612 = !DILocalVariable(name: "bucket_index", arg: 3, scope: !9605, file: !3, line: 2726, type: !5126)
!9613 = !DILocation(line: 2726, column: 93, scope: !9605)
!9614 = !DILocalVariable(name: "bucket_bounds", arg: 4, scope: !9605, file: !3, line: 2726, type: !9496)
!9615 = !DILocation(line: 2726, column: 113, scope: !9605)
!9616 = !DILocalVariable(name: "node", scope: !9605, file: !3, line: 2728, type: !3874)
!9617 = !DILocation(line: 2728, column: 12, scope: !9605)
!9618 = !DILocalVariable(name: "face_index", scope: !9605, file: !3, line: 2729, type: !22)
!9619 = !DILocation(line: 2729, column: 6, scope: !9605)
!9620 = !DILocalVariable(name: "image_index", scope: !9605, file: !3, line: 2729, type: !22)
!9621 = !DILocation(line: 2729, column: 18, scope: !9605)
!9622 = !DILocalVariable(name: "ibuf", scope: !9605, file: !3, line: 2730, type: !3893)
!9623 = !DILocation(line: 2730, column: 9, scope: !9605)
!9624 = !DILocalVariable(name: "tpage_last", scope: !9605, file: !3, line: 2731, type: !3861)
!9625 = !DILocation(line: 2731, column: 9, scope: !9605)
!9626 = !DILocalVariable(name: "tpage", scope: !9605, file: !3, line: 2731, type: !3861)
!9627 = !DILocation(line: 2731, column: 29, scope: !9605)
!9628 = !DILocalVariable(name: "ima", scope: !9605, file: !3, line: 2732, type: !3861)
!9629 = !DILocation(line: 2732, column: 9, scope: !9605)
!9630 = !DILocalVariable(name: "tmpibuf", scope: !9605, file: !3, line: 2733, type: !3893)
!9631 = !DILocation(line: 2733, column: 9, scope: !9605)
!9632 = !DILocation(line: 2735, column: 6, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9605, file: !3, line: 2735, column: 6)
!9634 = !DILocation(line: 2735, column: 10, scope: !9633)
!9635 = !DILocation(line: 2735, column: 20, scope: !9633)
!9636 = !DILocation(line: 2735, column: 6, scope: !9605)
!9637 = !DILocation(line: 2737, column: 10, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9633, file: !3, line: 2735, column: 26)
!9639 = !DILocation(line: 2737, column: 14, scope: !9638)
!9640 = !DILocation(line: 2737, column: 28, scope: !9638)
!9641 = !DILocation(line: 2737, column: 8, scope: !9638)
!9642 = !DILocation(line: 2738, column: 9, scope: !9638)
!9643 = !DILocation(line: 2738, column: 13, scope: !9638)
!9644 = !DILocation(line: 2738, column: 27, scope: !9638)
!9645 = !DILocation(line: 2738, column: 7, scope: !9638)
!9646 = !DILocation(line: 2740, column: 15, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9638, file: !3, line: 2740, column: 3)
!9648 = !DILocation(line: 2740, column: 19, scope: !9647)
!9649 = !DILocation(line: 2740, column: 31, scope: !9647)
!9650 = !DILocation(line: 2740, column: 13, scope: !9647)
!9651 = !DILocation(line: 2740, column: 8, scope: !9647)
!9652 = !DILocation(line: 2740, column: 46, scope: !9653)
!9653 = distinct !DILexicalBlock(scope: !9647, file: !3, line: 2740, column: 3)
!9654 = !DILocation(line: 2740, column: 3, scope: !9647)
!9655 = !DILocation(line: 2741, column: 28, scope: !9656)
!9656 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 2740, column: 71)
!9657 = !DILocation(line: 2741, column: 32, scope: !9656)
!9658 = !DILocation(line: 2741, column: 46, scope: !9656)
!9659 = !DILocation(line: 2741, column: 60, scope: !9656)
!9660 = !DILocation(line: 2741, column: 97, scope: !9656)
!9661 = !DILocation(line: 2741, column: 112, scope: !9656)
!9662 = !DILocation(line: 2741, column: 128, scope: !9656)
!9663 = !DILocation(line: 2741, column: 133, scope: !9656)
!9664 = !DILocation(line: 2741, column: 143, scope: !9656)
!9665 = !DILocation(line: 2741, column: 158, scope: !9656)
!9666 = !DILocation(line: 2741, column: 163, scope: !9656)
!9667 = !DILocation(line: 2741, column: 173, scope: !9656)
!9668 = !DILocation(line: 2741, column: 4, scope: !9656)
!9669 = !DILocation(line: 2742, column: 3, scope: !9656)
!9670 = !DILocation(line: 2740, column: 59, scope: !9653)
!9671 = !DILocation(line: 2740, column: 65, scope: !9653)
!9672 = !DILocation(line: 2740, column: 57, scope: !9653)
!9673 = !DILocation(line: 2740, column: 3, scope: !9653)
!9674 = distinct !{!9674, !9654, !9675}
!9675 = !DILocation(line: 2742, column: 3, scope: !9647)
!9676 = !DILocation(line: 2743, column: 2, scope: !9638)
!9677 = !DILocation(line: 2747, column: 15, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9679, file: !3, line: 2747, column: 3)
!9679 = distinct !DILexicalBlock(scope: !9633, file: !3, line: 2744, column: 7)
!9680 = !DILocation(line: 2747, column: 19, scope: !9678)
!9681 = !DILocation(line: 2747, column: 31, scope: !9678)
!9682 = !DILocation(line: 2747, column: 13, scope: !9678)
!9683 = !DILocation(line: 2747, column: 8, scope: !9678)
!9684 = !DILocation(line: 2747, column: 46, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9678, file: !3, line: 2747, column: 3)
!9686 = !DILocation(line: 2747, column: 3, scope: !9678)
!9687 = !DILocation(line: 2748, column: 17, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9685, file: !3, line: 2747, column: 71)
!9689 = !DILocation(line: 2748, column: 15, scope: !9688)
!9690 = !DILocation(line: 2751, column: 43, scope: !9688)
!9691 = !DILocation(line: 2751, column: 47, scope: !9688)
!9692 = !DILocation(line: 2751, column: 12, scope: !9688)
!9693 = !DILocation(line: 2751, column: 10, scope: !9688)
!9694 = !DILocation(line: 2752, column: 8, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9688, file: !3, line: 2752, column: 8)
!9696 = !DILocation(line: 2752, column: 22, scope: !9695)
!9697 = !DILocation(line: 2752, column: 19, scope: !9695)
!9698 = !DILocation(line: 2752, column: 8, scope: !9688)
!9699 = !DILocation(line: 2753, column: 18, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 2752, column: 29)
!9701 = !DILocation(line: 2753, column: 16, scope: !9700)
!9702 = !DILocation(line: 2755, column: 22, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 2755, column: 5)
!9704 = !DILocation(line: 2755, column: 10, scope: !9703)
!9705 = !DILocation(line: 2755, column: 27, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 2755, column: 5)
!9707 = !DILocation(line: 2755, column: 41, scope: !9706)
!9708 = !DILocation(line: 2755, column: 45, scope: !9706)
!9709 = !DILocation(line: 2755, column: 39, scope: !9706)
!9710 = !DILocation(line: 2755, column: 5, scope: !9703)
!9711 = !DILocation(line: 2756, column: 10, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9713, file: !3, line: 2756, column: 10)
!9713 = distinct !DILexicalBlock(scope: !9706, file: !3, line: 2755, column: 71)
!9714 = !DILocation(line: 2756, column: 14, scope: !9712)
!9715 = !DILocation(line: 2756, column: 25, scope: !9712)
!9716 = !DILocation(line: 2756, column: 38, scope: !9712)
!9717 = !DILocation(line: 2756, column: 45, scope: !9712)
!9718 = !DILocation(line: 2756, column: 42, scope: !9712)
!9719 = !DILocation(line: 2756, column: 10, scope: !9713)
!9720 = !DILocation(line: 2757, column: 14, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9712, file: !3, line: 2756, column: 57)
!9722 = !DILocation(line: 2757, column: 18, scope: !9721)
!9723 = !DILocation(line: 2757, column: 29, scope: !9721)
!9724 = !DILocation(line: 2757, column: 42, scope: !9721)
!9725 = !DILocation(line: 2757, column: 12, scope: !9721)
!9726 = !DILocation(line: 2758, column: 13, scope: !9721)
!9727 = !DILocation(line: 2758, column: 17, scope: !9721)
!9728 = !DILocation(line: 2758, column: 28, scope: !9721)
!9729 = !DILocation(line: 2758, column: 41, scope: !9721)
!9730 = !DILocation(line: 2758, column: 11, scope: !9721)
!9731 = !DILocation(line: 2759, column: 7, scope: !9721)
!9732 = !DILocation(line: 2761, column: 5, scope: !9713)
!9733 = !DILocation(line: 2755, column: 67, scope: !9706)
!9734 = !DILocation(line: 2755, column: 5, scope: !9706)
!9735 = distinct !{!9735, !9710, !9736}
!9736 = !DILocation(line: 2761, column: 5, scope: !9703)
!9737 = !DILocation(line: 2762, column: 4, scope: !9700)
!9738 = !DILocation(line: 2765, column: 28, scope: !9688)
!9739 = !DILocation(line: 2765, column: 32, scope: !9688)
!9740 = !DILocation(line: 2765, column: 46, scope: !9688)
!9741 = !DILocation(line: 2765, column: 60, scope: !9688)
!9742 = !DILocation(line: 2765, column: 72, scope: !9688)
!9743 = !DILocation(line: 2765, column: 85, scope: !9688)
!9744 = !DILocation(line: 2765, column: 100, scope: !9688)
!9745 = !DILocation(line: 2765, column: 116, scope: !9688)
!9746 = !DILocation(line: 2765, column: 121, scope: !9688)
!9747 = !DILocation(line: 2765, column: 131, scope: !9688)
!9748 = !DILocation(line: 2765, column: 146, scope: !9688)
!9749 = !DILocation(line: 2765, column: 151, scope: !9688)
!9750 = !DILocation(line: 2765, column: 161, scope: !9688)
!9751 = !DILocation(line: 2765, column: 4, scope: !9688)
!9752 = !DILocation(line: 2766, column: 3, scope: !9688)
!9753 = !DILocation(line: 2747, column: 59, scope: !9685)
!9754 = !DILocation(line: 2747, column: 65, scope: !9685)
!9755 = !DILocation(line: 2747, column: 57, scope: !9685)
!9756 = !DILocation(line: 2747, column: 3, scope: !9685)
!9757 = distinct !{!9757, !9686, !9758}
!9758 = !DILocation(line: 2766, column: 3, scope: !9678)
!9759 = !DILocation(line: 2769, column: 6, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9605, file: !3, line: 2769, column: 6)
!9761 = !DILocation(line: 2769, column: 6, scope: !9605)
!9762 = !DILocation(line: 2770, column: 17, scope: !9760)
!9763 = !DILocation(line: 2770, column: 3, scope: !9760)
!9764 = !DILocation(line: 2772, column: 2, scope: !9605)
!9765 = !DILocation(line: 2772, column: 6, scope: !9605)
!9766 = !DILocation(line: 2772, column: 18, scope: !9605)
!9767 = !DILocation(line: 2772, column: 32, scope: !9605)
!9768 = !DILocation(line: 2773, column: 1, scope: !9605)
!9769 = distinct !DISubprogram(name: "sub_v2_v2v2", scope: !4381, file: !4381, line: 338, type: !9770, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!9770 = !DISubroutineType(types: !9771)
!9771 = !{null, !216, !1944, !1944}
!9772 = !DILocalVariable(name: "r", arg: 1, scope: !9769, file: !4381, line: 338, type: !216)
!9773 = !DILocation(line: 338, column: 32, scope: !9769)
!9774 = !DILocalVariable(name: "a", arg: 2, scope: !9769, file: !4381, line: 338, type: !1944)
!9775 = !DILocation(line: 338, column: 50, scope: !9769)
!9776 = !DILocalVariable(name: "b", arg: 3, scope: !9769, file: !4381, line: 338, type: !1944)
!9777 = !DILocation(line: 338, column: 68, scope: !9769)
!9778 = !DILocation(line: 340, column: 9, scope: !9769)
!9779 = !DILocation(line: 340, column: 16, scope: !9769)
!9780 = !DILocation(line: 340, column: 14, scope: !9769)
!9781 = !DILocation(line: 340, column: 2, scope: !9769)
!9782 = !DILocation(line: 340, column: 7, scope: !9769)
!9783 = !DILocation(line: 341, column: 9, scope: !9769)
!9784 = !DILocation(line: 341, column: 16, scope: !9769)
!9785 = !DILocation(line: 341, column: 14, scope: !9769)
!9786 = !DILocation(line: 341, column: 2, scope: !9769)
!9787 = !DILocation(line: 341, column: 7, scope: !9769)
!9788 = !DILocation(line: 342, column: 1, scope: !9769)
!9789 = distinct !DISubprogram(name: "len_squared_v2", scope: !4381, file: !4381, line: 666, type: !9790, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!9790 = !DISubroutineType(types: !9791)
!9791 = !{!184, !1944}
!9792 = !DILocalVariable(name: "v", arg: 1, scope: !9789, file: !4381, line: 666, type: !1944)
!9793 = !DILocation(line: 666, column: 42, scope: !9789)
!9794 = !DILocation(line: 668, column: 9, scope: !9789)
!9795 = !DILocation(line: 668, column: 16, scope: !9789)
!9796 = !DILocation(line: 668, column: 14, scope: !9789)
!9797 = !DILocation(line: 668, column: 23, scope: !9789)
!9798 = !DILocation(line: 668, column: 30, scope: !9789)
!9799 = !DILocation(line: 668, column: 28, scope: !9789)
!9800 = !DILocation(line: 668, column: 21, scope: !9789)
!9801 = !DILocation(line: 668, column: 2, scope: !9789)
!9802 = distinct !DISubprogram(name: "dot_v2v2", scope: !4381, file: !4381, line: 614, type: !9803, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!9803 = !DISubroutineType(types: !9804)
!9804 = !{!184, !1944, !1944}
!9805 = !DILocalVariable(name: "a", arg: 1, scope: !9802, file: !4381, line: 614, type: !1944)
!9806 = !DILocation(line: 614, column: 36, scope: !9802)
!9807 = !DILocalVariable(name: "b", arg: 2, scope: !9802, file: !4381, line: 614, type: !1944)
!9808 = !DILocation(line: 614, column: 54, scope: !9802)
!9809 = !DILocation(line: 616, column: 9, scope: !9802)
!9810 = !DILocation(line: 616, column: 16, scope: !9802)
!9811 = !DILocation(line: 616, column: 14, scope: !9802)
!9812 = !DILocation(line: 616, column: 23, scope: !9802)
!9813 = !DILocation(line: 616, column: 30, scope: !9802)
!9814 = !DILocation(line: 616, column: 28, scope: !9802)
!9815 = !DILocation(line: 616, column: 21, scope: !9802)
!9816 = !DILocation(line: 616, column: 2, scope: !9802)
!9817 = distinct !DISubprogram(name: "len_v2", scope: !4381, file: !4381, line: 691, type: !9790, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!9818 = !DILocalVariable(name: "v", arg: 1, scope: !9817, file: !4381, line: 691, type: !1944)
!9819 = !DILocation(line: 691, column: 34, scope: !9817)
!9820 = !DILocation(line: 693, column: 15, scope: !9817)
!9821 = !DILocation(line: 693, column: 22, scope: !9817)
!9822 = !DILocation(line: 693, column: 20, scope: !9817)
!9823 = !DILocation(line: 693, column: 29, scope: !9817)
!9824 = !DILocation(line: 693, column: 36, scope: !9817)
!9825 = !DILocation(line: 693, column: 34, scope: !9817)
!9826 = !DILocation(line: 693, column: 27, scope: !9817)
!9827 = !DILocation(line: 693, column: 9, scope: !9817)
!9828 = !DILocation(line: 693, column: 2, scope: !9817)
!9829 = distinct !DISubprogram(name: "mul_v3_fl", scope: !4381, file: !4381, line: 392, type: !9830, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!9830 = !DISubroutineType(types: !9831)
!9831 = !{null, !216, !184}
!9832 = !DILocalVariable(name: "r", arg: 1, scope: !9829, file: !4381, line: 392, type: !216)
!9833 = !DILocation(line: 392, column: 30, scope: !9829)
!9834 = !DILocalVariable(name: "f", arg: 2, scope: !9829, file: !4381, line: 392, type: !184)
!9835 = !DILocation(line: 392, column: 42, scope: !9829)
!9836 = !DILocation(line: 394, column: 10, scope: !9829)
!9837 = !DILocation(line: 394, column: 2, scope: !9829)
!9838 = !DILocation(line: 394, column: 7, scope: !9829)
!9839 = !DILocation(line: 395, column: 10, scope: !9829)
!9840 = !DILocation(line: 395, column: 2, scope: !9829)
!9841 = !DILocation(line: 395, column: 7, scope: !9829)
!9842 = !DILocation(line: 396, column: 10, scope: !9829)
!9843 = !DILocation(line: 396, column: 2, scope: !9829)
!9844 = !DILocation(line: 396, column: 7, scope: !9829)
!9845 = !DILocation(line: 397, column: 1, scope: !9829)
!9846 = distinct !DISubprogram(name: "linearrgb_to_srgb_v3_v3", scope: !4360, file: !4360, line: 46, type: !4361, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!9847 = !DILocalVariable(name: "srgb", arg: 1, scope: !9846, file: !4360, line: 46, type: !216)
!9848 = !DILocation(line: 46, column: 44, scope: !9846)
!9849 = !DILocalVariable(name: "linear", arg: 2, scope: !9846, file: !4360, line: 46, type: !1944)
!9850 = !DILocation(line: 46, column: 65, scope: !9846)
!9851 = !DILocation(line: 48, column: 30, scope: !9846)
!9852 = !DILocation(line: 48, column: 12, scope: !9846)
!9853 = !DILocation(line: 48, column: 2, scope: !9846)
!9854 = !DILocation(line: 48, column: 10, scope: !9846)
!9855 = !DILocation(line: 49, column: 30, scope: !9846)
!9856 = !DILocation(line: 49, column: 12, scope: !9846)
!9857 = !DILocation(line: 49, column: 2, scope: !9846)
!9858 = !DILocation(line: 49, column: 10, scope: !9846)
!9859 = !DILocation(line: 50, column: 30, scope: !9846)
!9860 = !DILocation(line: 50, column: 12, scope: !9846)
!9861 = !DILocation(line: 50, column: 2, scope: !9846)
!9862 = !DILocation(line: 50, column: 10, scope: !9846)
!9863 = !DILocation(line: 51, column: 1, scope: !9846)
!9864 = distinct !DISubprogram(name: "min_ii", scope: !9865, file: !9865, line: 211, type: !9866, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!9865 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9866 = !DISubroutineType(types: !9867)
!9867 = !{!22, !22, !22}
!9868 = !DILocalVariable(name: "a", arg: 1, scope: !9864, file: !9865, line: 211, type: !22)
!9869 = !DILocation(line: 211, column: 24, scope: !9864)
!9870 = !DILocalVariable(name: "b", arg: 2, scope: !9864, file: !9865, line: 211, type: !22)
!9871 = !DILocation(line: 211, column: 31, scope: !9864)
!9872 = !DILocation(line: 213, column: 10, scope: !9864)
!9873 = !DILocation(line: 213, column: 14, scope: !9864)
!9874 = !DILocation(line: 213, column: 12, scope: !9864)
!9875 = !DILocation(line: 213, column: 9, scope: !9864)
!9876 = !DILocation(line: 213, column: 19, scope: !9864)
!9877 = !DILocation(line: 213, column: 23, scope: !9864)
!9878 = !DILocation(line: 213, column: 2, scope: !9864)
!9879 = distinct !DISubprogram(name: "max_ii", scope: !9865, file: !9865, line: 215, type: !9866, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!9880 = !DILocalVariable(name: "a", arg: 1, scope: !9879, file: !9865, line: 215, type: !22)
!9881 = !DILocation(line: 215, column: 24, scope: !9879)
!9882 = !DILocalVariable(name: "b", arg: 2, scope: !9879, file: !9865, line: 215, type: !22)
!9883 = !DILocation(line: 215, column: 31, scope: !9879)
!9884 = !DILocation(line: 217, column: 10, scope: !9879)
!9885 = !DILocation(line: 217, column: 14, scope: !9879)
!9886 = !DILocation(line: 217, column: 12, scope: !9879)
!9887 = !DILocation(line: 217, column: 9, scope: !9879)
!9888 = !DILocation(line: 217, column: 19, scope: !9879)
!9889 = !DILocation(line: 217, column: 23, scope: !9879)
!9890 = !DILocation(line: 217, column: 2, scope: !9879)
!9891 = distinct !DISubprogram(name: "straight_uchar_to_premul_float", scope: !4360, file: !4360, line: 310, type: !9892, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!9892 = !DISubroutineType(types: !9893)
!9893 = !{null, !216, !9894}
!9894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 64)
!9895 = !DILocalVariable(name: "result", arg: 1, scope: !9891, file: !4360, line: 310, type: !216)
!9896 = !DILocation(line: 310, column: 51, scope: !9891)
!9897 = !DILocalVariable(name: "color", arg: 2, scope: !9891, file: !4360, line: 310, type: !9894)
!9898 = !DILocation(line: 310, column: 82, scope: !9891)
!9899 = !DILocalVariable(name: "alpha", scope: !9891, file: !4360, line: 312, type: !1778)
!9900 = !DILocation(line: 312, column: 14, scope: !9891)
!9901 = !DILocation(line: 312, column: 22, scope: !9891)
!9902 = !DILocation(line: 312, column: 31, scope: !9891)
!9903 = !DILocalVariable(name: "fac", scope: !9891, file: !4360, line: 313, type: !1778)
!9904 = !DILocation(line: 313, column: 14, scope: !9891)
!9905 = !DILocation(line: 313, column: 20, scope: !9891)
!9906 = !DILocation(line: 313, column: 26, scope: !9891)
!9907 = !DILocation(line: 315, column: 14, scope: !9891)
!9908 = !DILocation(line: 315, column: 25, scope: !9891)
!9909 = !DILocation(line: 315, column: 23, scope: !9891)
!9910 = !DILocation(line: 315, column: 2, scope: !9891)
!9911 = !DILocation(line: 315, column: 12, scope: !9891)
!9912 = !DILocation(line: 316, column: 14, scope: !9891)
!9913 = !DILocation(line: 316, column: 25, scope: !9891)
!9914 = !DILocation(line: 316, column: 23, scope: !9891)
!9915 = !DILocation(line: 316, column: 2, scope: !9891)
!9916 = !DILocation(line: 316, column: 12, scope: !9891)
!9917 = !DILocation(line: 317, column: 14, scope: !9891)
!9918 = !DILocation(line: 317, column: 25, scope: !9891)
!9919 = !DILocation(line: 317, column: 23, scope: !9891)
!9920 = !DILocation(line: 317, column: 2, scope: !9891)
!9921 = !DILocation(line: 317, column: 12, scope: !9891)
!9922 = !DILocation(line: 318, column: 14, scope: !9891)
!9923 = !DILocation(line: 318, column: 2, scope: !9891)
!9924 = !DILocation(line: 318, column: 12, scope: !9891)
!9925 = !DILocation(line: 319, column: 1, scope: !9891)
!9926 = distinct !DISubprogram(name: "mul_v4_v4fl", scope: !4381, file: !4381, line: 427, type: !9927, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!9927 = !DISubroutineType(types: !9928)
!9928 = !{null, !216, !1944, !184}
!9929 = !DILocalVariable(name: "r", arg: 1, scope: !9926, file: !4381, line: 427, type: !216)
!9930 = !DILocation(line: 427, column: 32, scope: !9926)
!9931 = !DILocalVariable(name: "a", arg: 2, scope: !9926, file: !4381, line: 427, type: !1944)
!9932 = !DILocation(line: 427, column: 50, scope: !9926)
!9933 = !DILocalVariable(name: "f", arg: 3, scope: !9926, file: !4381, line: 427, type: !184)
!9934 = !DILocation(line: 427, column: 62, scope: !9926)
!9935 = !DILocation(line: 429, column: 9, scope: !9926)
!9936 = !DILocation(line: 429, column: 16, scope: !9926)
!9937 = !DILocation(line: 429, column: 14, scope: !9926)
!9938 = !DILocation(line: 429, column: 2, scope: !9926)
!9939 = !DILocation(line: 429, column: 7, scope: !9926)
!9940 = !DILocation(line: 430, column: 9, scope: !9926)
!9941 = !DILocation(line: 430, column: 16, scope: !9926)
!9942 = !DILocation(line: 430, column: 14, scope: !9926)
!9943 = !DILocation(line: 430, column: 2, scope: !9926)
!9944 = !DILocation(line: 430, column: 7, scope: !9926)
!9945 = !DILocation(line: 431, column: 9, scope: !9926)
!9946 = !DILocation(line: 431, column: 16, scope: !9926)
!9947 = !DILocation(line: 431, column: 14, scope: !9926)
!9948 = !DILocation(line: 431, column: 2, scope: !9926)
!9949 = !DILocation(line: 431, column: 7, scope: !9926)
!9950 = !DILocation(line: 432, column: 9, scope: !9926)
!9951 = !DILocation(line: 432, column: 16, scope: !9926)
!9952 = !DILocation(line: 432, column: 14, scope: !9926)
!9953 = !DILocation(line: 432, column: 2, scope: !9926)
!9954 = !DILocation(line: 432, column: 7, scope: !9926)
!9955 = !DILocation(line: 433, column: 1, scope: !9926)
!9956 = distinct !DISubprogram(name: "blend_color_mix_float", scope: !9957, file: !9957, line: 630, type: !9770, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!9957 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_color_blend_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9958 = !DILocalVariable(name: "dst", arg: 1, scope: !9956, file: !9957, line: 630, type: !216)
!9959 = !DILocation(line: 630, column: 42, scope: !9956)
!9960 = !DILocalVariable(name: "src1", arg: 2, scope: !9956, file: !9957, line: 630, type: !1944)
!9961 = !DILocation(line: 630, column: 62, scope: !9956)
!9962 = !DILocalVariable(name: "src2", arg: 3, scope: !9956, file: !9957, line: 630, type: !1944)
!9963 = !DILocation(line: 630, column: 83, scope: !9956)
!9964 = !DILocation(line: 632, column: 6, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9956, file: !9957, line: 632, column: 6)
!9966 = !DILocation(line: 632, column: 14, scope: !9965)
!9967 = !DILocation(line: 632, column: 6, scope: !9956)
!9968 = !DILocalVariable(name: "t", scope: !9969, file: !9957, line: 634, type: !1778)
!9969 = distinct !DILexicalBlock(scope: !9965, file: !9957, line: 632, column: 23)
!9970 = !DILocation(line: 634, column: 15, scope: !9969)
!9971 = !DILocation(line: 634, column: 19, scope: !9969)
!9972 = !DILocalVariable(name: "mt", scope: !9969, file: !9957, line: 635, type: !1778)
!9973 = !DILocation(line: 635, column: 15, scope: !9969)
!9974 = !DILocation(line: 635, column: 27, scope: !9969)
!9975 = !DILocation(line: 635, column: 25, scope: !9969)
!9976 = !DILocation(line: 637, column: 12, scope: !9969)
!9977 = !DILocation(line: 637, column: 17, scope: !9969)
!9978 = !DILocation(line: 637, column: 15, scope: !9969)
!9979 = !DILocation(line: 637, column: 27, scope: !9969)
!9980 = !DILocation(line: 637, column: 25, scope: !9969)
!9981 = !DILocation(line: 637, column: 3, scope: !9969)
!9982 = !DILocation(line: 637, column: 10, scope: !9969)
!9983 = !DILocation(line: 638, column: 12, scope: !9969)
!9984 = !DILocation(line: 638, column: 17, scope: !9969)
!9985 = !DILocation(line: 638, column: 15, scope: !9969)
!9986 = !DILocation(line: 638, column: 27, scope: !9969)
!9987 = !DILocation(line: 638, column: 25, scope: !9969)
!9988 = !DILocation(line: 638, column: 3, scope: !9969)
!9989 = !DILocation(line: 638, column: 10, scope: !9969)
!9990 = !DILocation(line: 639, column: 12, scope: !9969)
!9991 = !DILocation(line: 639, column: 17, scope: !9969)
!9992 = !DILocation(line: 639, column: 15, scope: !9969)
!9993 = !DILocation(line: 639, column: 27, scope: !9969)
!9994 = !DILocation(line: 639, column: 25, scope: !9969)
!9995 = !DILocation(line: 639, column: 3, scope: !9969)
!9996 = !DILocation(line: 639, column: 10, scope: !9969)
!9997 = !DILocation(line: 640, column: 12, scope: !9969)
!9998 = !DILocation(line: 640, column: 17, scope: !9969)
!9999 = !DILocation(line: 640, column: 15, scope: !9969)
!10000 = !DILocation(line: 640, column: 27, scope: !9969)
!10001 = !DILocation(line: 640, column: 25, scope: !9969)
!10002 = !DILocation(line: 640, column: 3, scope: !9969)
!10003 = !DILocation(line: 640, column: 10, scope: !9969)
!10004 = !DILocation(line: 641, column: 2, scope: !9969)
!10005 = !DILocation(line: 644, column: 14, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !9965, file: !9957, line: 642, column: 7)
!10007 = !DILocation(line: 644, column: 19, scope: !10006)
!10008 = !DILocation(line: 644, column: 3, scope: !10006)
!10009 = !DILocation(line: 646, column: 1, scope: !9956)
!10010 = distinct !DISubprogram(name: "blend_color_mix_byte", scope: !9957, file: !9957, line: 55, type: !10011, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!10011 = !DISubroutineType(types: !10012)
!10012 = !{null, !1024, !9894, !9894}
!10013 = !DILocalVariable(name: "dst", arg: 1, scope: !10010, file: !9957, line: 55, type: !1024)
!10014 = !DILocation(line: 55, column: 49, scope: !10010)
!10015 = !DILocalVariable(name: "src1", arg: 2, scope: !10010, file: !9957, line: 55, type: !9894)
!10016 = !DILocation(line: 55, column: 77, scope: !10010)
!10017 = !DILocalVariable(name: "src2", arg: 3, scope: !10010, file: !9957, line: 55, type: !9894)
!10018 = !DILocation(line: 55, column: 106, scope: !10010)
!10019 = !DILocation(line: 57, column: 6, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10010, file: !9957, line: 57, column: 6)
!10021 = !DILocation(line: 57, column: 14, scope: !10020)
!10022 = !DILocation(line: 57, column: 6, scope: !10010)
!10023 = !DILocalVariable(name: "t", scope: !10024, file: !9957, line: 59, type: !5126)
!10024 = distinct !DILexicalBlock(scope: !10020, file: !9957, line: 57, column: 20)
!10025 = !DILocation(line: 59, column: 13, scope: !10024)
!10026 = !DILocation(line: 59, column: 17, scope: !10024)
!10027 = !DILocalVariable(name: "mt", scope: !10024, file: !9957, line: 60, type: !5126)
!10028 = !DILocation(line: 60, column: 13, scope: !10024)
!10029 = !DILocation(line: 60, column: 24, scope: !10024)
!10030 = !DILocation(line: 60, column: 22, scope: !10024)
!10031 = !DILocalVariable(name: "tmp", scope: !10024, file: !9957, line: 61, type: !1911)
!10032 = !DILocation(line: 61, column: 7, scope: !10024)
!10033 = !DILocation(line: 63, column: 13, scope: !10024)
!10034 = !DILocation(line: 63, column: 18, scope: !10024)
!10035 = !DILocation(line: 63, column: 16, scope: !10024)
!10036 = !DILocation(line: 63, column: 28, scope: !10024)
!10037 = !DILocation(line: 63, column: 26, scope: !10024)
!10038 = !DILocation(line: 63, column: 40, scope: !10024)
!10039 = !DILocation(line: 63, column: 42, scope: !10024)
!10040 = !DILocation(line: 63, column: 50, scope: !10024)
!10041 = !DILocation(line: 63, column: 48, scope: !10024)
!10042 = !DILocation(line: 63, column: 37, scope: !10024)
!10043 = !DILocation(line: 63, column: 3, scope: !10024)
!10044 = !DILocation(line: 63, column: 10, scope: !10024)
!10045 = !DILocation(line: 64, column: 13, scope: !10024)
!10046 = !DILocation(line: 64, column: 18, scope: !10024)
!10047 = !DILocation(line: 64, column: 16, scope: !10024)
!10048 = !DILocation(line: 64, column: 28, scope: !10024)
!10049 = !DILocation(line: 64, column: 26, scope: !10024)
!10050 = !DILocation(line: 64, column: 40, scope: !10024)
!10051 = !DILocation(line: 64, column: 42, scope: !10024)
!10052 = !DILocation(line: 64, column: 50, scope: !10024)
!10053 = !DILocation(line: 64, column: 48, scope: !10024)
!10054 = !DILocation(line: 64, column: 37, scope: !10024)
!10055 = !DILocation(line: 64, column: 3, scope: !10024)
!10056 = !DILocation(line: 64, column: 10, scope: !10024)
!10057 = !DILocation(line: 65, column: 13, scope: !10024)
!10058 = !DILocation(line: 65, column: 18, scope: !10024)
!10059 = !DILocation(line: 65, column: 16, scope: !10024)
!10060 = !DILocation(line: 65, column: 28, scope: !10024)
!10061 = !DILocation(line: 65, column: 26, scope: !10024)
!10062 = !DILocation(line: 65, column: 40, scope: !10024)
!10063 = !DILocation(line: 65, column: 42, scope: !10024)
!10064 = !DILocation(line: 65, column: 50, scope: !10024)
!10065 = !DILocation(line: 65, column: 48, scope: !10024)
!10066 = !DILocation(line: 65, column: 37, scope: !10024)
!10067 = !DILocation(line: 65, column: 3, scope: !10024)
!10068 = !DILocation(line: 65, column: 10, scope: !10024)
!10069 = !DILocation(line: 66, column: 13, scope: !10024)
!10070 = !DILocation(line: 66, column: 18, scope: !10024)
!10071 = !DILocation(line: 66, column: 16, scope: !10024)
!10072 = !DILocation(line: 66, column: 30, scope: !10024)
!10073 = !DILocation(line: 66, column: 32, scope: !10024)
!10074 = !DILocation(line: 66, column: 27, scope: !10024)
!10075 = !DILocation(line: 66, column: 3, scope: !10024)
!10076 = !DILocation(line: 66, column: 10, scope: !10024)
!10077 = !DILocation(line: 68, column: 42, scope: !10024)
!10078 = !DILocation(line: 68, column: 50, scope: !10024)
!10079 = !DILocation(line: 68, column: 27, scope: !10024)
!10080 = !DILocation(line: 68, column: 12, scope: !10024)
!10081 = !DILocation(line: 68, column: 3, scope: !10024)
!10082 = !DILocation(line: 68, column: 10, scope: !10024)
!10083 = !DILocation(line: 69, column: 42, scope: !10024)
!10084 = !DILocation(line: 69, column: 50, scope: !10024)
!10085 = !DILocation(line: 69, column: 27, scope: !10024)
!10086 = !DILocation(line: 69, column: 12, scope: !10024)
!10087 = !DILocation(line: 69, column: 3, scope: !10024)
!10088 = !DILocation(line: 69, column: 10, scope: !10024)
!10089 = !DILocation(line: 70, column: 42, scope: !10024)
!10090 = !DILocation(line: 70, column: 50, scope: !10024)
!10091 = !DILocation(line: 70, column: 27, scope: !10024)
!10092 = !DILocation(line: 70, column: 12, scope: !10024)
!10093 = !DILocation(line: 70, column: 3, scope: !10024)
!10094 = !DILocation(line: 70, column: 10, scope: !10024)
!10095 = !DILocation(line: 71, column: 42, scope: !10024)
!10096 = !DILocation(line: 71, column: 27, scope: !10024)
!10097 = !DILocation(line: 71, column: 12, scope: !10024)
!10098 = !DILocation(line: 71, column: 3, scope: !10024)
!10099 = !DILocation(line: 71, column: 10, scope: !10024)
!10100 = !DILocation(line: 72, column: 2, scope: !10024)
!10101 = !DILocation(line: 75, column: 27, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10020, file: !9957, line: 73, column: 7)
!10103 = !DILocation(line: 75, column: 40, scope: !10102)
!10104 = !DILocation(line: 75, column: 3, scope: !10102)
!10105 = !DILocation(line: 77, column: 1, scope: !10010)
!10106 = distinct !DISubprogram(name: "len_squared_v2v2", scope: !4381, file: !4381, line: 719, type: !9803, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!10107 = !DILocalVariable(name: "a", arg: 1, scope: !10106, file: !4381, line: 719, type: !1944)
!10108 = !DILocation(line: 719, column: 44, scope: !10106)
!10109 = !DILocalVariable(name: "b", arg: 2, scope: !10106, file: !4381, line: 719, type: !1944)
!10110 = !DILocation(line: 719, column: 62, scope: !10106)
!10111 = !DILocalVariable(name: "d", scope: !10106, file: !4381, line: 721, type: !860)
!10112 = !DILocation(line: 721, column: 8, scope: !10106)
!10113 = !DILocation(line: 723, column: 14, scope: !10106)
!10114 = !DILocation(line: 723, column: 17, scope: !10106)
!10115 = !DILocation(line: 723, column: 20, scope: !10106)
!10116 = !DILocation(line: 723, column: 2, scope: !10106)
!10117 = !DILocation(line: 724, column: 18, scope: !10106)
!10118 = !DILocation(line: 724, column: 21, scope: !10106)
!10119 = !DILocation(line: 724, column: 9, scope: !10106)
!10120 = !DILocation(line: 724, column: 2, scope: !10106)
!10121 = distinct !DISubprogram(name: "min_ff", scope: !9865, file: !9865, line: 202, type: !10122, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!10122 = !DISubroutineType(types: !10123)
!10123 = !{!184, !184, !184}
!10124 = !DILocalVariable(name: "a", arg: 1, scope: !10121, file: !9865, line: 202, type: !184)
!10125 = !DILocation(line: 202, column: 28, scope: !10121)
!10126 = !DILocalVariable(name: "b", arg: 2, scope: !10121, file: !9865, line: 202, type: !184)
!10127 = !DILocation(line: 202, column: 37, scope: !10121)
!10128 = !DILocation(line: 204, column: 10, scope: !10121)
!10129 = !DILocation(line: 204, column: 14, scope: !10121)
!10130 = !DILocation(line: 204, column: 12, scope: !10121)
!10131 = !DILocation(line: 204, column: 9, scope: !10121)
!10132 = !DILocation(line: 204, column: 19, scope: !10121)
!10133 = !DILocation(line: 204, column: 23, scope: !10121)
!10134 = !DILocation(line: 204, column: 2, scope: !10121)
!10135 = distinct !DISubprogram(name: "do_projectpaint_clone_f", scope: !3, file: !3, line: 3747, type: !10136, scopeLine: 3748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!10136 = !DISubroutineType(types: !10137)
!10137 = !{null, !3674, !3983, !184}
!10138 = !DILocalVariable(name: "ps", arg: 1, scope: !10135, file: !3, line: 3747, type: !3674)
!10139 = !DILocation(line: 3747, column: 53, scope: !10135)
!10140 = !DILocalVariable(name: "projPixel", arg: 2, scope: !10135, file: !3, line: 3747, type: !3983)
!10141 = !DILocation(line: 3747, column: 68, scope: !10135)
!10142 = !DILocalVariable(name: "mask", arg: 3, scope: !10135, file: !3, line: 3747, type: !184)
!10143 = !DILocation(line: 3747, column: 85, scope: !10135)
!10144 = !DILocalVariable(name: "clone_pt", scope: !10135, file: !3, line: 3749, type: !1944)
!10145 = !DILocation(line: 3749, column: 15, scope: !10135)
!10146 = !DILocation(line: 3749, column: 45, scope: !10135)
!10147 = !DILocation(line: 3749, column: 57, scope: !10135)
!10148 = !DILocation(line: 3749, column: 65, scope: !10135)
!10149 = !DILocation(line: 3749, column: 26, scope: !10135)
!10150 = !DILocation(line: 3751, column: 6, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10135, file: !3, line: 3751, column: 6)
!10152 = !DILocation(line: 3751, column: 6, scope: !10135)
!10153 = !DILocalVariable(name: "clone_rgba", scope: !10154, file: !3, line: 3752, type: !496)
!10154 = distinct !DILexicalBlock(scope: !10151, file: !3, line: 3751, column: 19)
!10155 = !DILocation(line: 3752, column: 9, scope: !10154)
!10156 = !DILocation(line: 3754, column: 15, scope: !10154)
!10157 = !DILocation(line: 3754, column: 27, scope: !10154)
!10158 = !DILocation(line: 3754, column: 37, scope: !10154)
!10159 = !DILocation(line: 3754, column: 3, scope: !10154)
!10160 = !DILocation(line: 3756, column: 7, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10154, file: !3, line: 3756, column: 7)
!10162 = !DILocation(line: 3756, column: 11, scope: !10161)
!10163 = !DILocation(line: 3756, column: 7, scope: !10154)
!10164 = !DILocation(line: 3757, column: 26, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10161, file: !3, line: 3756, column: 23)
!10166 = !DILocation(line: 3757, column: 37, scope: !10165)
!10167 = !DILocation(line: 3757, column: 43, scope: !10165)
!10168 = !DILocation(line: 3757, column: 49, scope: !10165)
!10169 = !DILocation(line: 3757, column: 60, scope: !10165)
!10170 = !DILocation(line: 3757, column: 70, scope: !10165)
!10171 = !DILocation(line: 3757, column: 76, scope: !10165)
!10172 = !DILocation(line: 3757, column: 88, scope: !10165)
!10173 = !DILocation(line: 3757, column: 92, scope: !10165)
!10174 = !DILocation(line: 3757, column: 4, scope: !10165)
!10175 = !DILocation(line: 3758, column: 3, scope: !10165)
!10176 = !DILocation(line: 3760, column: 26, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10161, file: !3, line: 3759, column: 8)
!10178 = !DILocation(line: 3760, column: 37, scope: !10177)
!10179 = !DILocation(line: 3760, column: 43, scope: !10177)
!10180 = !DILocation(line: 3760, column: 49, scope: !10177)
!10181 = !DILocation(line: 3760, column: 60, scope: !10177)
!10182 = !DILocation(line: 3760, column: 66, scope: !10177)
!10183 = !DILocation(line: 3760, column: 72, scope: !10177)
!10184 = !DILocation(line: 3760, column: 84, scope: !10177)
!10185 = !DILocation(line: 3760, column: 88, scope: !10177)
!10186 = !DILocation(line: 3760, column: 4, scope: !10177)
!10187 = !DILocation(line: 3762, column: 2, scope: !10154)
!10188 = !DILocation(line: 3763, column: 1, scope: !10135)
!10189 = distinct !DISubprogram(name: "do_projectpaint_clone", scope: !3, file: !3, line: 3726, type: !10136, scopeLine: 3727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!10190 = !DILocalVariable(name: "ps", arg: 1, scope: !10189, file: !3, line: 3726, type: !3674)
!10191 = !DILocation(line: 3726, column: 51, scope: !10189)
!10192 = !DILocalVariable(name: "projPixel", arg: 2, scope: !10189, file: !3, line: 3726, type: !3983)
!10193 = !DILocation(line: 3726, column: 66, scope: !10189)
!10194 = !DILocalVariable(name: "mask", arg: 3, scope: !10189, file: !3, line: 3726, type: !184)
!10195 = !DILocation(line: 3726, column: 83, scope: !10189)
!10196 = !DILocalVariable(name: "clone_pt", scope: !10189, file: !3, line: 3728, type: !9894)
!10197 = !DILocation(line: 3728, column: 23, scope: !10189)
!10198 = !DILocation(line: 3728, column: 53, scope: !10189)
!10199 = !DILocation(line: 3728, column: 65, scope: !10189)
!10200 = !DILocation(line: 3728, column: 73, scope: !10189)
!10201 = !DILocation(line: 3728, column: 34, scope: !10189)
!10202 = !DILocation(line: 3730, column: 6, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10189, file: !3, line: 3730, column: 6)
!10204 = !DILocation(line: 3730, column: 6, scope: !10189)
!10205 = !DILocalVariable(name: "clone_rgba", scope: !10206, file: !3, line: 3731, type: !2703)
!10206 = distinct !DILexicalBlock(scope: !10203, file: !3, line: 3730, column: 19)
!10207 = !DILocation(line: 3731, column: 17, scope: !10206)
!10208 = !DILocation(line: 3733, column: 19, scope: !10206)
!10209 = !DILocation(line: 3733, column: 3, scope: !10206)
!10210 = !DILocation(line: 3733, column: 17, scope: !10206)
!10211 = !DILocation(line: 3734, column: 19, scope: !10206)
!10212 = !DILocation(line: 3734, column: 3, scope: !10206)
!10213 = !DILocation(line: 3734, column: 17, scope: !10206)
!10214 = !DILocation(line: 3735, column: 19, scope: !10206)
!10215 = !DILocation(line: 3735, column: 3, scope: !10206)
!10216 = !DILocation(line: 3735, column: 17, scope: !10206)
!10217 = !DILocation(line: 3736, column: 35, scope: !10206)
!10218 = !DILocation(line: 3736, column: 49, scope: !10206)
!10219 = !DILocation(line: 3736, column: 47, scope: !10206)
!10220 = !DILocation(line: 3736, column: 19, scope: !10206)
!10221 = !DILocation(line: 3736, column: 3, scope: !10206)
!10222 = !DILocation(line: 3736, column: 17, scope: !10206)
!10223 = !DILocation(line: 3738, column: 7, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10206, file: !3, line: 3738, column: 7)
!10225 = !DILocation(line: 3738, column: 11, scope: !10224)
!10226 = !DILocation(line: 3738, column: 7, scope: !10206)
!10227 = !DILocation(line: 3739, column: 25, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10224, file: !3, line: 3738, column: 23)
!10229 = !DILocation(line: 3739, column: 36, scope: !10228)
!10230 = !DILocation(line: 3739, column: 42, scope: !10228)
!10231 = !DILocation(line: 3739, column: 49, scope: !10228)
!10232 = !DILocation(line: 3739, column: 60, scope: !10228)
!10233 = !DILocation(line: 3739, column: 70, scope: !10228)
!10234 = !DILocation(line: 3739, column: 77, scope: !10228)
!10235 = !DILocation(line: 3739, column: 89, scope: !10228)
!10236 = !DILocation(line: 3739, column: 93, scope: !10228)
!10237 = !DILocation(line: 3739, column: 4, scope: !10228)
!10238 = !DILocation(line: 3740, column: 3, scope: !10228)
!10239 = !DILocation(line: 3742, column: 25, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10224, file: !3, line: 3741, column: 8)
!10241 = !DILocation(line: 3742, column: 36, scope: !10240)
!10242 = !DILocation(line: 3742, column: 42, scope: !10240)
!10243 = !DILocation(line: 3742, column: 49, scope: !10240)
!10244 = !DILocation(line: 3742, column: 60, scope: !10240)
!10245 = !DILocation(line: 3742, column: 66, scope: !10240)
!10246 = !DILocation(line: 3742, column: 73, scope: !10240)
!10247 = !DILocation(line: 3742, column: 85, scope: !10240)
!10248 = !DILocation(line: 3742, column: 89, scope: !10240)
!10249 = !DILocation(line: 3742, column: 4, scope: !10240)
!10250 = !DILocation(line: 3744, column: 2, scope: !10206)
!10251 = !DILocation(line: 3745, column: 1, scope: !10189)
!10252 = distinct !DISubprogram(name: "do_projectpaint_smear_f", scope: !3, file: !3, line: 3783, type: !10253, scopeLine: 3785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!10253 = !DISubroutineType(types: !10254)
!10254 = !{null, !3674, !3983, !184, !3868, !3873, !1944}
!10255 = !DILocalVariable(name: "ps", arg: 1, scope: !10252, file: !3, line: 3783, type: !3674)
!10256 = !DILocation(line: 3783, column: 53, scope: !10252)
!10257 = !DILocalVariable(name: "projPixel", arg: 2, scope: !10252, file: !3, line: 3783, type: !3983)
!10258 = !DILocation(line: 3783, column: 68, scope: !10252)
!10259 = !DILocalVariable(name: "mask", arg: 3, scope: !10252, file: !3, line: 3783, type: !184)
!10260 = !DILocation(line: 3783, column: 85, scope: !10252)
!10261 = !DILocalVariable(name: "smearArena", arg: 4, scope: !10252, file: !3, line: 3784, type: !3868)
!10262 = !DILocation(line: 3784, column: 47, scope: !10252)
!10263 = !DILocalVariable(name: "smearPixels_f", arg: 5, scope: !10252, file: !3, line: 3784, type: !3873)
!10264 = !DILocation(line: 3784, column: 70, scope: !10252)
!10265 = !DILocalVariable(name: "co", arg: 6, scope: !10252, file: !3, line: 3784, type: !1944)
!10266 = !DILocation(line: 3784, column: 97, scope: !10252)
!10267 = !DILocalVariable(name: "rgba", scope: !10252, file: !3, line: 3786, type: !496)
!10268 = !DILocation(line: 3786, column: 8, scope: !10252)
!10269 = !DILocation(line: 3788, column: 30, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10252, file: !3, line: 3788, column: 6)
!10271 = !DILocation(line: 3788, column: 34, scope: !10270)
!10272 = !DILocation(line: 3788, column: 38, scope: !10270)
!10273 = !DILocation(line: 3788, column: 6, scope: !10270)
!10274 = !DILocation(line: 3788, column: 53, scope: !10270)
!10275 = !DILocation(line: 3788, column: 6, scope: !10252)
!10276 = !DILocation(line: 3789, column: 3, scope: !10270)
!10277 = !DILocation(line: 3791, column: 51, scope: !10252)
!10278 = !DILocation(line: 3791, column: 63, scope: !10252)
!10279 = !DILocation(line: 3791, column: 71, scope: !10252)
!10280 = !DILocation(line: 3791, column: 32, scope: !10252)
!10281 = !DILocation(line: 3791, column: 74, scope: !10252)
!10282 = !DILocation(line: 3791, column: 85, scope: !10252)
!10283 = !DILocation(line: 3791, column: 91, scope: !10252)
!10284 = !DILocation(line: 3791, column: 97, scope: !10252)
!10285 = !DILocation(line: 3791, column: 103, scope: !10252)
!10286 = !DILocation(line: 3791, column: 2, scope: !10252)
!10287 = !DILocation(line: 3792, column: 29, scope: !10252)
!10288 = !DILocation(line: 3792, column: 52, scope: !10252)
!10289 = !DILocation(line: 3792, column: 44, scope: !10252)
!10290 = !DILocation(line: 3792, column: 63, scope: !10252)
!10291 = !DILocation(line: 3792, column: 2, scope: !10252)
!10292 = !DILocation(line: 3793, column: 1, scope: !10252)
!10293 = distinct !DISubprogram(name: "do_projectpaint_smear", scope: !3, file: !3, line: 3771, type: !10253, scopeLine: 3773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!10294 = !DILocalVariable(name: "ps", arg: 1, scope: !10293, file: !3, line: 3771, type: !3674)
!10295 = !DILocation(line: 3771, column: 51, scope: !10293)
!10296 = !DILocalVariable(name: "projPixel", arg: 2, scope: !10293, file: !3, line: 3771, type: !3983)
!10297 = !DILocation(line: 3771, column: 66, scope: !10293)
!10298 = !DILocalVariable(name: "mask", arg: 3, scope: !10293, file: !3, line: 3771, type: !184)
!10299 = !DILocation(line: 3771, column: 83, scope: !10293)
!10300 = !DILocalVariable(name: "smearArena", arg: 4, scope: !10293, file: !3, line: 3772, type: !3868)
!10301 = !DILocation(line: 3772, column: 45, scope: !10293)
!10302 = !DILocalVariable(name: "smearPixels", arg: 5, scope: !10293, file: !3, line: 3772, type: !3873)
!10303 = !DILocation(line: 3772, column: 68, scope: !10293)
!10304 = !DILocalVariable(name: "co", arg: 6, scope: !10293, file: !3, line: 3772, type: !1944)
!10305 = !DILocation(line: 3772, column: 93, scope: !10293)
!10306 = !DILocalVariable(name: "rgba_ub", scope: !10293, file: !3, line: 3774, type: !2703)
!10307 = !DILocation(line: 3774, column: 16, scope: !10293)
!10308 = !DILocation(line: 3776, column: 30, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10293, file: !3, line: 3776, column: 6)
!10310 = !DILocation(line: 3776, column: 34, scope: !10309)
!10311 = !DILocation(line: 3776, column: 44, scope: !10309)
!10312 = !DILocation(line: 3776, column: 6, scope: !10309)
!10313 = !DILocation(line: 3776, column: 56, scope: !10309)
!10314 = !DILocation(line: 3776, column: 6, scope: !10293)
!10315 = !DILocation(line: 3777, column: 3, scope: !10309)
!10316 = !DILocation(line: 3779, column: 50, scope: !10293)
!10317 = !DILocation(line: 3779, column: 62, scope: !10293)
!10318 = !DILocation(line: 3779, column: 70, scope: !10293)
!10319 = !DILocation(line: 3779, column: 31, scope: !10293)
!10320 = !DILocation(line: 3779, column: 74, scope: !10293)
!10321 = !DILocation(line: 3779, column: 85, scope: !10293)
!10322 = !DILocation(line: 3779, column: 91, scope: !10293)
!10323 = !DILocation(line: 3779, column: 98, scope: !10293)
!10324 = !DILocation(line: 3779, column: 107, scope: !10293)
!10325 = !DILocation(line: 3779, column: 2, scope: !10293)
!10326 = !DILocation(line: 3780, column: 29, scope: !10293)
!10327 = !DILocation(line: 3780, column: 50, scope: !10293)
!10328 = !DILocation(line: 3780, column: 42, scope: !10293)
!10329 = !DILocation(line: 3780, column: 61, scope: !10293)
!10330 = !DILocation(line: 3780, column: 2, scope: !10293)
!10331 = !DILocation(line: 3781, column: 1, scope: !10293)
!10332 = distinct !DISubprogram(name: "do_projectpaint_soften_f", scope: !3, file: !3, line: 3795, type: !10333, scopeLine: 3797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!10333 = !DISubroutineType(types: !10334)
!10334 = !{null, !3674, !3983, !184, !3868, !3873}
!10335 = !DILocalVariable(name: "ps", arg: 1, scope: !10332, file: !3, line: 3795, type: !3674)
!10336 = !DILocation(line: 3795, column: 54, scope: !10332)
!10337 = !DILocalVariable(name: "projPixel", arg: 2, scope: !10332, file: !3, line: 3795, type: !3983)
!10338 = !DILocation(line: 3795, column: 69, scope: !10332)
!10339 = !DILocalVariable(name: "mask", arg: 3, scope: !10332, file: !3, line: 3795, type: !184)
!10340 = !DILocation(line: 3795, column: 86, scope: !10332)
!10341 = !DILocalVariable(name: "softenArena", arg: 4, scope: !10332, file: !3, line: 3796, type: !3868)
!10342 = !DILocation(line: 3796, column: 48, scope: !10332)
!10343 = !DILocalVariable(name: "softenPixels", arg: 5, scope: !10332, file: !3, line: 3796, type: !3873)
!10344 = !DILocation(line: 3796, column: 72, scope: !10332)
!10345 = !DILocalVariable(name: "accum_tot", scope: !10332, file: !3, line: 3798, type: !184)
!10346 = !DILocation(line: 3798, column: 8, scope: !10332)
!10347 = !DILocalVariable(name: "xk", scope: !10332, file: !3, line: 3799, type: !22)
!10348 = !DILocation(line: 3799, column: 6, scope: !10332)
!10349 = !DILocalVariable(name: "yk", scope: !10332, file: !3, line: 3799, type: !22)
!10350 = !DILocation(line: 3799, column: 10, scope: !10332)
!10351 = !DILocalVariable(name: "kernel", scope: !10332, file: !3, line: 3800, type: !3957)
!10352 = !DILocation(line: 3800, column: 14, scope: !10332)
!10353 = !DILocation(line: 3800, column: 23, scope: !10332)
!10354 = !DILocation(line: 3800, column: 27, scope: !10332)
!10355 = !DILocalVariable(name: "rgba", scope: !10332, file: !3, line: 3801, type: !216)
!10356 = !DILocation(line: 3801, column: 9, scope: !10332)
!10357 = !DILocation(line: 3801, column: 16, scope: !10332)
!10358 = !DILocation(line: 3801, column: 27, scope: !10332)
!10359 = !DILocation(line: 3801, column: 36, scope: !10332)
!10360 = !DILocation(line: 3804, column: 10, scope: !10332)
!10361 = !DILocation(line: 3804, column: 2, scope: !10332)
!10362 = !DILocation(line: 3806, column: 10, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10332, file: !3, line: 3806, column: 2)
!10364 = !DILocation(line: 3806, column: 7, scope: !10363)
!10365 = !DILocation(line: 3806, column: 15, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 3806, column: 2)
!10367 = !DILocation(line: 3806, column: 20, scope: !10366)
!10368 = !DILocation(line: 3806, column: 28, scope: !10366)
!10369 = !DILocation(line: 3806, column: 18, scope: !10366)
!10370 = !DILocation(line: 3806, column: 2, scope: !10363)
!10371 = !DILocation(line: 3807, column: 11, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10373, file: !3, line: 3807, column: 3)
!10373 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 3806, column: 40)
!10374 = !DILocation(line: 3807, column: 8, scope: !10372)
!10375 = !DILocation(line: 3807, column: 16, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10372, file: !3, line: 3807, column: 3)
!10377 = !DILocation(line: 3807, column: 21, scope: !10376)
!10378 = !DILocation(line: 3807, column: 29, scope: !10376)
!10379 = !DILocation(line: 3807, column: 19, scope: !10376)
!10380 = !DILocation(line: 3807, column: 3, scope: !10372)
!10381 = !DILocalVariable(name: "rgba_tmp", scope: !10382, file: !3, line: 3808, type: !496)
!10382 = distinct !DILexicalBlock(scope: !10376, file: !3, line: 3807, column: 41)
!10383 = !DILocation(line: 3808, column: 10, scope: !10382)
!10384 = !DILocalVariable(name: "co_ofs", scope: !10382, file: !3, line: 3809, type: !860)
!10385 = !DILocation(line: 3809, column: 10, scope: !10382)
!10386 = !DILocation(line: 3809, column: 22, scope: !10382)
!10387 = !DILocation(line: 3809, column: 30, scope: !10382)
!10388 = !DILocation(line: 3809, column: 28, scope: !10382)
!10389 = !DILocation(line: 3809, column: 33, scope: !10382)
!10390 = !DILocation(line: 3809, column: 48, scope: !10382)
!10391 = !DILocation(line: 3809, column: 46, scope: !10382)
!10392 = !DILocation(line: 3809, column: 51, scope: !10382)
!10393 = !DILocation(line: 3811, column: 14, scope: !10382)
!10394 = !DILocation(line: 3811, column: 22, scope: !10382)
!10395 = !DILocation(line: 3811, column: 33, scope: !10382)
!10396 = !DILocation(line: 3811, column: 4, scope: !10382)
!10397 = !DILocation(line: 3813, column: 32, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10382, file: !3, line: 3813, column: 8)
!10399 = !DILocation(line: 3813, column: 36, scope: !10398)
!10400 = !DILocation(line: 3813, column: 44, scope: !10398)
!10401 = !DILocation(line: 3813, column: 8, scope: !10398)
!10402 = !DILocation(line: 3813, column: 8, scope: !10382)
!10403 = !DILocalVariable(name: "weight", scope: !10404, file: !3, line: 3814, type: !184)
!10404 = distinct !DILexicalBlock(scope: !10398, file: !3, line: 3813, column: 67)
!10405 = !DILocation(line: 3814, column: 11, scope: !10404)
!10406 = !DILocation(line: 3814, column: 20, scope: !10404)
!10407 = !DILocation(line: 3814, column: 28, scope: !10404)
!10408 = !DILocation(line: 3814, column: 34, scope: !10404)
!10409 = !DILocation(line: 3814, column: 39, scope: !10404)
!10410 = !DILocation(line: 3814, column: 44, scope: !10404)
!10411 = !DILocation(line: 3814, column: 52, scope: !10404)
!10412 = !DILocation(line: 3814, column: 42, scope: !10404)
!10413 = !DILocation(line: 3814, column: 37, scope: !10404)
!10414 = !DILocation(line: 3815, column: 15, scope: !10404)
!10415 = !DILocation(line: 3815, column: 25, scope: !10404)
!10416 = !DILocation(line: 3815, column: 5, scope: !10404)
!10417 = !DILocation(line: 3816, column: 15, scope: !10404)
!10418 = !DILocation(line: 3816, column: 21, scope: !10404)
!10419 = !DILocation(line: 3816, column: 5, scope: !10404)
!10420 = !DILocation(line: 3817, column: 18, scope: !10404)
!10421 = !DILocation(line: 3817, column: 15, scope: !10404)
!10422 = !DILocation(line: 3818, column: 4, scope: !10404)
!10423 = !DILocation(line: 3819, column: 3, scope: !10382)
!10424 = !DILocation(line: 3807, column: 37, scope: !10376)
!10425 = !DILocation(line: 3807, column: 3, scope: !10376)
!10426 = distinct !{!10426, !10380, !10427}
!10427 = !DILocation(line: 3819, column: 3, scope: !10372)
!10428 = !DILocation(line: 3820, column: 2, scope: !10373)
!10429 = !DILocation(line: 3806, column: 36, scope: !10366)
!10430 = !DILocation(line: 3806, column: 2, scope: !10366)
!10431 = distinct !{!10431, !10370, !10432}
!10432 = !DILocation(line: 3820, column: 2, scope: !10363)
!10433 = !DILocation(line: 3822, column: 6, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !10332, file: !3, line: 3822, column: 6)
!10435 = !DILocation(line: 3822, column: 6, scope: !10332)
!10436 = !DILocation(line: 3823, column: 13, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10434, file: !3, line: 3822, column: 30)
!10438 = !DILocation(line: 3823, column: 33, scope: !10437)
!10439 = !DILocation(line: 3823, column: 24, scope: !10437)
!10440 = !DILocation(line: 3823, column: 3, scope: !10437)
!10441 = !DILocation(line: 3825, column: 7, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10437, file: !3, line: 3825, column: 7)
!10443 = !DILocation(line: 3825, column: 11, scope: !10442)
!10444 = !DILocation(line: 3825, column: 16, scope: !10442)
!10445 = !DILocation(line: 3825, column: 7, scope: !10437)
!10446 = !DILocation(line: 3827, column: 16, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10442, file: !3, line: 3825, column: 40)
!10448 = !DILocation(line: 3827, column: 22, scope: !10447)
!10449 = !DILocation(line: 3827, column: 33, scope: !10447)
!10450 = !DILocation(line: 3827, column: 39, scope: !10447)
!10451 = !DILocation(line: 3827, column: 45, scope: !10447)
!10452 = !DILocation(line: 3827, column: 4, scope: !10447)
!10453 = !DILocation(line: 3831, column: 51, scope: !10447)
!10454 = !DILocation(line: 3831, column: 34, scope: !10447)
!10455 = !DILocation(line: 3831, column: 24, scope: !10447)
!10456 = !DILocation(line: 3831, column: 32, scope: !10447)
!10457 = !DILocation(line: 3831, column: 14, scope: !10447)
!10458 = !DILocation(line: 3831, column: 22, scope: !10447)
!10459 = !DILocation(line: 3831, column: 4, scope: !10447)
!10460 = !DILocation(line: 3831, column: 12, scope: !10447)
!10461 = !DILocation(line: 3832, column: 14, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10447, file: !3, line: 3832, column: 8)
!10463 = !DILocation(line: 3832, column: 8, scope: !10462)
!10464 = !DILocation(line: 3832, column: 25, scope: !10462)
!10465 = !DILocation(line: 3832, column: 29, scope: !10462)
!10466 = !DILocation(line: 3832, column: 36, scope: !10462)
!10467 = !DILocation(line: 3832, column: 23, scope: !10462)
!10468 = !DILocation(line: 3832, column: 8, scope: !10447)
!10469 = !DILocalVariable(name: "alpha", scope: !10470, file: !3, line: 3833, type: !184)
!10470 = distinct !DILexicalBlock(scope: !10462, file: !3, line: 3832, column: 53)
!10471 = !DILocation(line: 3833, column: 11, scope: !10470)
!10472 = !DILocation(line: 3833, column: 19, scope: !10470)
!10473 = !DILocation(line: 3833, column: 30, scope: !10470)
!10474 = !DILocation(line: 3833, column: 36, scope: !10470)
!10475 = !DILocation(line: 3834, column: 42, scope: !10470)
!10476 = !DILocation(line: 3834, column: 32, scope: !10470)
!10477 = !DILocation(line: 3834, column: 40, scope: !10470)
!10478 = !DILocation(line: 3834, column: 5, scope: !10470)
!10479 = !DILocation(line: 3834, column: 16, scope: !10470)
!10480 = !DILocation(line: 3834, column: 22, scope: !10470)
!10481 = !DILocation(line: 3834, column: 30, scope: !10470)
!10482 = !DILocation(line: 3837, column: 27, scope: !10470)
!10483 = !DILocation(line: 3837, column: 33, scope: !10470)
!10484 = !DILocation(line: 3837, column: 44, scope: !10470)
!10485 = !DILocation(line: 3837, column: 50, scope: !10470)
!10486 = !DILocation(line: 3837, column: 56, scope: !10470)
!10487 = !DILocation(line: 3837, column: 5, scope: !10470)
!10488 = !DILocation(line: 3838, column: 15, scope: !10470)
!10489 = !DILocation(line: 3838, column: 5, scope: !10470)
!10490 = !DILocation(line: 3838, column: 13, scope: !10470)
!10491 = !DILocation(line: 3839, column: 4, scope: !10470)
!10492 = !DILocation(line: 3841, column: 5, scope: !10462)
!10493 = !DILocation(line: 3842, column: 3, scope: !10447)
!10494 = !DILocation(line: 3844, column: 34, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10442, file: !3, line: 3843, column: 8)
!10496 = !DILocation(line: 3844, column: 40, scope: !10495)
!10497 = !DILocation(line: 3844, column: 46, scope: !10495)
!10498 = !DILocation(line: 3844, column: 57, scope: !10495)
!10499 = !DILocation(line: 3844, column: 63, scope: !10495)
!10500 = !DILocation(line: 3844, column: 69, scope: !10495)
!10501 = !DILocation(line: 3844, column: 4, scope: !10495)
!10502 = !DILocation(line: 3847, column: 30, scope: !10437)
!10503 = !DILocation(line: 3847, column: 52, scope: !10437)
!10504 = !DILocation(line: 3847, column: 44, scope: !10437)
!10505 = !DILocation(line: 3847, column: 63, scope: !10437)
!10506 = !DILocation(line: 3847, column: 3, scope: !10437)
!10507 = !DILocation(line: 3848, column: 2, scope: !10437)
!10508 = !DILocation(line: 3849, column: 1, scope: !10332)
!10509 = distinct !DISubprogram(name: "do_projectpaint_soften", scope: !3, file: !3, line: 3851, type: !10333, scopeLine: 3853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!10510 = !DILocalVariable(name: "ps", arg: 1, scope: !10509, file: !3, line: 3851, type: !3674)
!10511 = !DILocation(line: 3851, column: 52, scope: !10509)
!10512 = !DILocalVariable(name: "projPixel", arg: 2, scope: !10509, file: !3, line: 3851, type: !3983)
!10513 = !DILocation(line: 3851, column: 67, scope: !10509)
!10514 = !DILocalVariable(name: "mask", arg: 3, scope: !10509, file: !3, line: 3851, type: !184)
!10515 = !DILocation(line: 3851, column: 84, scope: !10509)
!10516 = !DILocalVariable(name: "softenArena", arg: 4, scope: !10509, file: !3, line: 3852, type: !3868)
!10517 = !DILocation(line: 3852, column: 46, scope: !10509)
!10518 = !DILocalVariable(name: "softenPixels", arg: 5, scope: !10509, file: !3, line: 3852, type: !3873)
!10519 = !DILocation(line: 3852, column: 70, scope: !10509)
!10520 = !DILocalVariable(name: "accum_tot", scope: !10509, file: !3, line: 3854, type: !184)
!10521 = !DILocation(line: 3854, column: 8, scope: !10509)
!10522 = !DILocalVariable(name: "xk", scope: !10509, file: !3, line: 3855, type: !22)
!10523 = !DILocation(line: 3855, column: 6, scope: !10509)
!10524 = !DILocalVariable(name: "yk", scope: !10509, file: !3, line: 3855, type: !22)
!10525 = !DILocation(line: 3855, column: 10, scope: !10509)
!10526 = !DILocalVariable(name: "kernel", scope: !10509, file: !3, line: 3856, type: !3957)
!10527 = !DILocation(line: 3856, column: 14, scope: !10509)
!10528 = !DILocation(line: 3856, column: 23, scope: !10509)
!10529 = !DILocation(line: 3856, column: 27, scope: !10509)
!10530 = !DILocalVariable(name: "rgba", scope: !10509, file: !3, line: 3857, type: !496)
!10531 = !DILocation(line: 3857, column: 8, scope: !10509)
!10532 = !DILocation(line: 3860, column: 10, scope: !10509)
!10533 = !DILocation(line: 3860, column: 2, scope: !10509)
!10534 = !DILocation(line: 3862, column: 10, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 3862, column: 2)
!10536 = !DILocation(line: 3862, column: 7, scope: !10535)
!10537 = !DILocation(line: 3862, column: 15, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10535, file: !3, line: 3862, column: 2)
!10539 = !DILocation(line: 3862, column: 20, scope: !10538)
!10540 = !DILocation(line: 3862, column: 28, scope: !10538)
!10541 = !DILocation(line: 3862, column: 18, scope: !10538)
!10542 = !DILocation(line: 3862, column: 2, scope: !10535)
!10543 = !DILocation(line: 3863, column: 11, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10545, file: !3, line: 3863, column: 3)
!10545 = distinct !DILexicalBlock(scope: !10538, file: !3, line: 3862, column: 40)
!10546 = !DILocation(line: 3863, column: 8, scope: !10544)
!10547 = !DILocation(line: 3863, column: 16, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 3863, column: 3)
!10549 = !DILocation(line: 3863, column: 21, scope: !10548)
!10550 = !DILocation(line: 3863, column: 29, scope: !10548)
!10551 = !DILocation(line: 3863, column: 19, scope: !10548)
!10552 = !DILocation(line: 3863, column: 3, scope: !10544)
!10553 = !DILocalVariable(name: "rgba_tmp", scope: !10554, file: !3, line: 3864, type: !496)
!10554 = distinct !DILexicalBlock(scope: !10548, file: !3, line: 3863, column: 41)
!10555 = !DILocation(line: 3864, column: 10, scope: !10554)
!10556 = !DILocalVariable(name: "co_ofs", scope: !10554, file: !3, line: 3865, type: !860)
!10557 = !DILocation(line: 3865, column: 10, scope: !10554)
!10558 = !DILocation(line: 3865, column: 22, scope: !10554)
!10559 = !DILocation(line: 3865, column: 30, scope: !10554)
!10560 = !DILocation(line: 3865, column: 28, scope: !10554)
!10561 = !DILocation(line: 3865, column: 33, scope: !10554)
!10562 = !DILocation(line: 3865, column: 48, scope: !10554)
!10563 = !DILocation(line: 3865, column: 46, scope: !10554)
!10564 = !DILocation(line: 3865, column: 51, scope: !10554)
!10565 = !DILocation(line: 3867, column: 14, scope: !10554)
!10566 = !DILocation(line: 3867, column: 22, scope: !10554)
!10567 = !DILocation(line: 3867, column: 33, scope: !10554)
!10568 = !DILocation(line: 3867, column: 4, scope: !10554)
!10569 = !DILocation(line: 3869, column: 32, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10554, file: !3, line: 3869, column: 8)
!10571 = !DILocation(line: 3869, column: 36, scope: !10570)
!10572 = !DILocation(line: 3869, column: 44, scope: !10570)
!10573 = !DILocation(line: 3869, column: 8, scope: !10570)
!10574 = !DILocation(line: 3869, column: 8, scope: !10554)
!10575 = !DILocalVariable(name: "weight", scope: !10576, file: !3, line: 3870, type: !184)
!10576 = distinct !DILexicalBlock(scope: !10570, file: !3, line: 3869, column: 67)
!10577 = !DILocation(line: 3870, column: 11, scope: !10576)
!10578 = !DILocation(line: 3870, column: 20, scope: !10576)
!10579 = !DILocation(line: 3870, column: 28, scope: !10576)
!10580 = !DILocation(line: 3870, column: 34, scope: !10576)
!10581 = !DILocation(line: 3870, column: 39, scope: !10576)
!10582 = !DILocation(line: 3870, column: 44, scope: !10576)
!10583 = !DILocation(line: 3870, column: 52, scope: !10576)
!10584 = !DILocation(line: 3870, column: 42, scope: !10576)
!10585 = !DILocation(line: 3870, column: 37, scope: !10576)
!10586 = !DILocation(line: 3871, column: 15, scope: !10576)
!10587 = !DILocation(line: 3871, column: 25, scope: !10576)
!10588 = !DILocation(line: 3871, column: 5, scope: !10576)
!10589 = !DILocation(line: 3872, column: 15, scope: !10576)
!10590 = !DILocation(line: 3872, column: 21, scope: !10576)
!10591 = !DILocation(line: 3872, column: 5, scope: !10576)
!10592 = !DILocation(line: 3873, column: 18, scope: !10576)
!10593 = !DILocation(line: 3873, column: 15, scope: !10576)
!10594 = !DILocation(line: 3874, column: 4, scope: !10576)
!10595 = !DILocation(line: 3875, column: 3, scope: !10554)
!10596 = !DILocation(line: 3863, column: 37, scope: !10548)
!10597 = !DILocation(line: 3863, column: 3, scope: !10548)
!10598 = distinct !{!10598, !10552, !10599}
!10599 = !DILocation(line: 3875, column: 3, scope: !10544)
!10600 = !DILocation(line: 3876, column: 2, scope: !10545)
!10601 = !DILocation(line: 3862, column: 36, scope: !10538)
!10602 = !DILocation(line: 3862, column: 2, scope: !10538)
!10603 = distinct !{!10603, !10542, !10604}
!10604 = !DILocation(line: 3876, column: 2, scope: !10535)
!10605 = !DILocation(line: 3878, column: 6, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 3878, column: 6)
!10607 = !DILocation(line: 3878, column: 6, scope: !10509)
!10608 = !DILocalVariable(name: "rgba_ub", scope: !10609, file: !3, line: 3879, type: !1024)
!10609 = distinct !DILexicalBlock(scope: !10606, file: !3, line: 3878, column: 30)
!10610 = !DILocation(line: 3879, column: 18, scope: !10609)
!10611 = !DILocation(line: 3879, column: 28, scope: !10609)
!10612 = !DILocation(line: 3879, column: 39, scope: !10609)
!10613 = !DILocation(line: 3879, column: 48, scope: !10609)
!10614 = !DILocation(line: 3881, column: 13, scope: !10609)
!10615 = !DILocation(line: 3881, column: 33, scope: !10609)
!10616 = !DILocation(line: 3881, column: 24, scope: !10609)
!10617 = !DILocation(line: 3881, column: 3, scope: !10609)
!10618 = !DILocation(line: 3883, column: 7, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10609, file: !3, line: 3883, column: 7)
!10620 = !DILocation(line: 3883, column: 11, scope: !10619)
!10621 = !DILocation(line: 3883, column: 16, scope: !10619)
!10622 = !DILocation(line: 3883, column: 7, scope: !10609)
!10623 = !DILocalVariable(name: "rgba_pixel", scope: !10624, file: !3, line: 3884, type: !496)
!10624 = distinct !DILexicalBlock(scope: !10619, file: !3, line: 3883, column: 40)
!10625 = !DILocation(line: 3884, column: 10, scope: !10624)
!10626 = !DILocation(line: 3886, column: 35, scope: !10624)
!10627 = !DILocation(line: 3886, column: 47, scope: !10624)
!10628 = !DILocation(line: 3886, column: 58, scope: !10624)
!10629 = !DILocation(line: 3886, column: 64, scope: !10624)
!10630 = !DILocation(line: 3886, column: 4, scope: !10624)
!10631 = !DILocation(line: 3889, column: 16, scope: !10624)
!10632 = !DILocation(line: 3889, column: 22, scope: !10624)
!10633 = !DILocation(line: 3889, column: 34, scope: !10624)
!10634 = !DILocation(line: 3889, column: 4, scope: !10624)
!10635 = !DILocation(line: 3892, column: 51, scope: !10624)
!10636 = !DILocation(line: 3892, column: 34, scope: !10624)
!10637 = !DILocation(line: 3892, column: 24, scope: !10624)
!10638 = !DILocation(line: 3892, column: 32, scope: !10624)
!10639 = !DILocation(line: 3892, column: 14, scope: !10624)
!10640 = !DILocation(line: 3892, column: 22, scope: !10624)
!10641 = !DILocation(line: 3892, column: 4, scope: !10624)
!10642 = !DILocation(line: 3892, column: 12, scope: !10624)
!10643 = !DILocation(line: 3893, column: 14, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10624, file: !3, line: 3893, column: 8)
!10645 = !DILocation(line: 3893, column: 8, scope: !10644)
!10646 = !DILocation(line: 3893, column: 25, scope: !10644)
!10647 = !DILocation(line: 3893, column: 29, scope: !10644)
!10648 = !DILocation(line: 3893, column: 36, scope: !10644)
!10649 = !DILocation(line: 3893, column: 23, scope: !10644)
!10650 = !DILocation(line: 3893, column: 8, scope: !10624)
!10651 = !DILocalVariable(name: "alpha", scope: !10652, file: !3, line: 3894, type: !184)
!10652 = distinct !DILexicalBlock(scope: !10644, file: !3, line: 3893, column: 53)
!10653 = !DILocation(line: 3894, column: 11, scope: !10652)
!10654 = !DILocation(line: 3894, column: 19, scope: !10652)
!10655 = !DILocation(line: 3895, column: 31, scope: !10652)
!10656 = !DILocation(line: 3895, column: 15, scope: !10652)
!10657 = !DILocation(line: 3895, column: 29, scope: !10652)
!10658 = !DILocation(line: 3895, column: 5, scope: !10652)
!10659 = !DILocation(line: 3895, column: 13, scope: !10652)
!10660 = !DILocation(line: 3898, column: 27, scope: !10652)
!10661 = !DILocation(line: 3898, column: 33, scope: !10652)
!10662 = !DILocation(line: 3898, column: 45, scope: !10652)
!10663 = !DILocation(line: 3898, column: 5, scope: !10652)
!10664 = !DILocation(line: 3900, column: 15, scope: !10652)
!10665 = !DILocation(line: 3900, column: 5, scope: !10652)
!10666 = !DILocation(line: 3900, column: 13, scope: !10652)
!10667 = !DILocation(line: 3901, column: 36, scope: !10652)
!10668 = !DILocation(line: 3901, column: 45, scope: !10652)
!10669 = !DILocation(line: 3901, column: 5, scope: !10652)
!10670 = !DILocation(line: 3902, column: 4, scope: !10652)
!10671 = !DILocation(line: 3904, column: 5, scope: !10644)
!10672 = !DILocation(line: 3905, column: 3, scope: !10624)
!10673 = !DILocation(line: 3907, column: 35, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10619, file: !3, line: 3906, column: 8)
!10675 = !DILocation(line: 3907, column: 44, scope: !10674)
!10676 = !DILocation(line: 3907, column: 4, scope: !10674)
!10677 = !DILocation(line: 3908, column: 33, scope: !10674)
!10678 = !DILocation(line: 3908, column: 42, scope: !10674)
!10679 = !DILocation(line: 3908, column: 51, scope: !10674)
!10680 = !DILocation(line: 3908, column: 62, scope: !10674)
!10681 = !DILocation(line: 3908, column: 68, scope: !10674)
!10682 = !DILocation(line: 3908, column: 75, scope: !10674)
!10683 = !DILocation(line: 3908, column: 4, scope: !10674)
!10684 = !DILocation(line: 3910, column: 30, scope: !10609)
!10685 = !DILocation(line: 3910, column: 52, scope: !10609)
!10686 = !DILocation(line: 3910, column: 44, scope: !10609)
!10687 = !DILocation(line: 3910, column: 63, scope: !10609)
!10688 = !DILocation(line: 3910, column: 3, scope: !10609)
!10689 = !DILocation(line: 3911, column: 2, scope: !10609)
!10690 = !DILocation(line: 3912, column: 1, scope: !10509)
!10691 = distinct !DISubprogram(name: "do_projectpaint_mask_f", scope: !3, file: !3, line: 3972, type: !10136, scopeLine: 3973, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!10692 = !DILocalVariable(name: "ps", arg: 1, scope: !10691, file: !3, line: 3972, type: !3674)
!10693 = !DILocation(line: 3972, column: 52, scope: !10691)
!10694 = !DILocalVariable(name: "projPixel", arg: 2, scope: !10691, file: !3, line: 3972, type: !3983)
!10695 = !DILocation(line: 3972, column: 67, scope: !10691)
!10696 = !DILocalVariable(name: "mask", arg: 3, scope: !10691, file: !3, line: 3972, type: !184)
!10697 = !DILocation(line: 3972, column: 84, scope: !10691)
!10698 = !DILocalVariable(name: "rgba", scope: !10691, file: !3, line: 3974, type: !496)
!10699 = !DILocation(line: 3974, column: 8, scope: !10691)
!10700 = !DILocation(line: 3975, column: 32, scope: !10691)
!10701 = !DILocation(line: 3975, column: 36, scope: !10691)
!10702 = !DILocation(line: 3975, column: 22, scope: !10691)
!10703 = !DILocation(line: 3975, column: 30, scope: !10691)
!10704 = !DILocation(line: 3975, column: 12, scope: !10691)
!10705 = !DILocation(line: 3975, column: 20, scope: !10691)
!10706 = !DILocation(line: 3975, column: 2, scope: !10691)
!10707 = !DILocation(line: 3975, column: 10, scope: !10691)
!10708 = !DILocation(line: 3976, column: 12, scope: !10691)
!10709 = !DILocation(line: 3976, column: 2, scope: !10691)
!10710 = !DILocation(line: 3976, column: 10, scope: !10691)
!10711 = !DILocation(line: 3978, column: 6, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10691, file: !3, line: 3978, column: 6)
!10713 = !DILocation(line: 3978, column: 10, scope: !10712)
!10714 = !DILocation(line: 3978, column: 6, scope: !10691)
!10715 = !DILocation(line: 3979, column: 25, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10712, file: !3, line: 3978, column: 22)
!10717 = !DILocation(line: 3979, column: 36, scope: !10716)
!10718 = !DILocation(line: 3979, column: 42, scope: !10716)
!10719 = !DILocation(line: 3979, column: 48, scope: !10716)
!10720 = !DILocation(line: 3979, column: 59, scope: !10716)
!10721 = !DILocation(line: 3979, column: 69, scope: !10716)
!10722 = !DILocation(line: 3979, column: 75, scope: !10716)
!10723 = !DILocation(line: 3979, column: 81, scope: !10716)
!10724 = !DILocation(line: 3979, column: 85, scope: !10716)
!10725 = !DILocation(line: 3979, column: 3, scope: !10716)
!10726 = !DILocation(line: 3980, column: 2, scope: !10716)
!10727 = !DILocation(line: 3982, column: 25, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10712, file: !3, line: 3981, column: 7)
!10729 = !DILocation(line: 3982, column: 36, scope: !10728)
!10730 = !DILocation(line: 3982, column: 42, scope: !10728)
!10731 = !DILocation(line: 3982, column: 48, scope: !10728)
!10732 = !DILocation(line: 3982, column: 59, scope: !10728)
!10733 = !DILocation(line: 3982, column: 65, scope: !10728)
!10734 = !DILocation(line: 3982, column: 71, scope: !10728)
!10735 = !DILocation(line: 3982, column: 77, scope: !10728)
!10736 = !DILocation(line: 3982, column: 81, scope: !10728)
!10737 = !DILocation(line: 3982, column: 3, scope: !10728)
!10738 = !DILocation(line: 3984, column: 1, scope: !10691)
!10739 = distinct !DISubprogram(name: "do_projectpaint_mask", scope: !3, file: !3, line: 3958, type: !10136, scopeLine: 3959, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!10740 = !DILocalVariable(name: "ps", arg: 1, scope: !10739, file: !3, line: 3958, type: !3674)
!10741 = !DILocation(line: 3958, column: 50, scope: !10739)
!10742 = !DILocalVariable(name: "projPixel", arg: 2, scope: !10739, file: !3, line: 3958, type: !3983)
!10743 = !DILocation(line: 3958, column: 65, scope: !10739)
!10744 = !DILocalVariable(name: "mask", arg: 3, scope: !10739, file: !3, line: 3958, type: !184)
!10745 = !DILocation(line: 3958, column: 82, scope: !10739)
!10746 = !DILocalVariable(name: "rgba_ub", scope: !10739, file: !3, line: 3960, type: !2703)
!10747 = !DILocation(line: 3960, column: 16, scope: !10739)
!10748 = !DILocation(line: 3961, column: 41, scope: !10739)
!10749 = !DILocation(line: 3961, column: 45, scope: !10739)
!10750 = !DILocation(line: 3961, column: 59, scope: !10739)
!10751 = !DILocation(line: 3961, column: 28, scope: !10739)
!10752 = !DILocation(line: 3961, column: 39, scope: !10739)
!10753 = !DILocation(line: 3961, column: 15, scope: !10739)
!10754 = !DILocation(line: 3961, column: 26, scope: !10739)
!10755 = !DILocation(line: 3961, column: 2, scope: !10739)
!10756 = !DILocation(line: 3961, column: 13, scope: !10739)
!10757 = !DILocation(line: 3962, column: 25, scope: !10739)
!10758 = !DILocation(line: 3962, column: 15, scope: !10739)
!10759 = !DILocation(line: 3962, column: 2, scope: !10739)
!10760 = !DILocation(line: 3962, column: 13, scope: !10739)
!10761 = !DILocation(line: 3964, column: 6, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10739, file: !3, line: 3964, column: 6)
!10763 = !DILocation(line: 3964, column: 10, scope: !10762)
!10764 = !DILocation(line: 3964, column: 6, scope: !10739)
!10765 = !DILocation(line: 3965, column: 24, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10762, file: !3, line: 3964, column: 22)
!10767 = !DILocation(line: 3965, column: 35, scope: !10766)
!10768 = !DILocation(line: 3965, column: 41, scope: !10766)
!10769 = !DILocation(line: 3965, column: 48, scope: !10766)
!10770 = !DILocation(line: 3965, column: 59, scope: !10766)
!10771 = !DILocation(line: 3965, column: 69, scope: !10766)
!10772 = !DILocation(line: 3965, column: 76, scope: !10766)
!10773 = !DILocation(line: 3965, column: 85, scope: !10766)
!10774 = !DILocation(line: 3965, column: 89, scope: !10766)
!10775 = !DILocation(line: 3965, column: 3, scope: !10766)
!10776 = !DILocation(line: 3966, column: 2, scope: !10766)
!10777 = !DILocation(line: 3968, column: 24, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10762, file: !3, line: 3967, column: 7)
!10779 = !DILocation(line: 3968, column: 35, scope: !10778)
!10780 = !DILocation(line: 3968, column: 41, scope: !10778)
!10781 = !DILocation(line: 3968, column: 48, scope: !10778)
!10782 = !DILocation(line: 3968, column: 59, scope: !10778)
!10783 = !DILocation(line: 3968, column: 65, scope: !10778)
!10784 = !DILocation(line: 3968, column: 72, scope: !10778)
!10785 = !DILocation(line: 3968, column: 81, scope: !10778)
!10786 = !DILocation(line: 3968, column: 85, scope: !10778)
!10787 = !DILocation(line: 3968, column: 3, scope: !10778)
!10788 = !DILocation(line: 3970, column: 1, scope: !10739)
!10789 = distinct !DISubprogram(name: "do_projectpaint_draw_f", scope: !3, file: !3, line: 3938, type: !10790, scopeLine: 3939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!10790 = !DISubroutineType(types: !10791)
!10791 = !{null, !3674, !3983, !1944, !184}
!10792 = !DILocalVariable(name: "ps", arg: 1, scope: !10789, file: !3, line: 3938, type: !3674)
!10793 = !DILocation(line: 3938, column: 52, scope: !10789)
!10794 = !DILocalVariable(name: "projPixel", arg: 2, scope: !10789, file: !3, line: 3938, type: !3983)
!10795 = !DILocation(line: 3938, column: 67, scope: !10789)
!10796 = !DILocalVariable(name: "texrgb", arg: 3, scope: !10789, file: !3, line: 3938, type: !1944)
!10797 = !DILocation(line: 3938, column: 90, scope: !10789)
!10798 = !DILocalVariable(name: "mask", arg: 4, scope: !10789, file: !3, line: 3938, type: !184)
!10799 = !DILocation(line: 3938, column: 107, scope: !10789)
!10800 = !DILocalVariable(name: "rgba", scope: !10789, file: !3, line: 3940, type: !496)
!10801 = !DILocation(line: 3940, column: 8, scope: !10789)
!10802 = !DILocation(line: 3942, column: 13, scope: !10789)
!10803 = !DILocation(line: 3942, column: 19, scope: !10789)
!10804 = !DILocation(line: 3942, column: 23, scope: !10789)
!10805 = !DILocation(line: 3942, column: 2, scope: !10789)
!10806 = !DILocation(line: 3944, column: 6, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10789, file: !3, line: 3944, column: 6)
!10808 = !DILocation(line: 3944, column: 10, scope: !10807)
!10809 = !DILocation(line: 3944, column: 6, scope: !10789)
!10810 = !DILocation(line: 3945, column: 13, scope: !10807)
!10811 = !DILocation(line: 3945, column: 19, scope: !10807)
!10812 = !DILocation(line: 3945, column: 3, scope: !10807)
!10813 = !DILocation(line: 3947, column: 12, scope: !10789)
!10814 = !DILocation(line: 3947, column: 18, scope: !10789)
!10815 = !DILocation(line: 3947, column: 2, scope: !10789)
!10816 = !DILocation(line: 3948, column: 12, scope: !10789)
!10817 = !DILocation(line: 3948, column: 2, scope: !10789)
!10818 = !DILocation(line: 3948, column: 10, scope: !10789)
!10819 = !DILocation(line: 3950, column: 6, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10789, file: !3, line: 3950, column: 6)
!10821 = !DILocation(line: 3950, column: 10, scope: !10820)
!10822 = !DILocation(line: 3950, column: 6, scope: !10789)
!10823 = !DILocation(line: 3951, column: 25, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10820, file: !3, line: 3950, column: 22)
!10825 = !DILocation(line: 3951, column: 36, scope: !10824)
!10826 = !DILocation(line: 3951, column: 42, scope: !10824)
!10827 = !DILocation(line: 3951, column: 48, scope: !10824)
!10828 = !DILocation(line: 3951, column: 59, scope: !10824)
!10829 = !DILocation(line: 3951, column: 69, scope: !10824)
!10830 = !DILocation(line: 3951, column: 75, scope: !10824)
!10831 = !DILocation(line: 3951, column: 81, scope: !10824)
!10832 = !DILocation(line: 3951, column: 85, scope: !10824)
!10833 = !DILocation(line: 3951, column: 3, scope: !10824)
!10834 = !DILocation(line: 3952, column: 2, scope: !10824)
!10835 = !DILocation(line: 3954, column: 25, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10820, file: !3, line: 3953, column: 7)
!10837 = !DILocation(line: 3954, column: 36, scope: !10836)
!10838 = !DILocation(line: 3954, column: 42, scope: !10836)
!10839 = !DILocation(line: 3954, column: 48, scope: !10836)
!10840 = !DILocation(line: 3954, column: 59, scope: !10836)
!10841 = !DILocation(line: 3954, column: 65, scope: !10836)
!10842 = !DILocation(line: 3954, column: 71, scope: !10836)
!10843 = !DILocation(line: 3954, column: 77, scope: !10836)
!10844 = !DILocation(line: 3954, column: 81, scope: !10836)
!10845 = !DILocation(line: 3954, column: 3, scope: !10836)
!10846 = !DILocation(line: 3956, column: 1, scope: !10789)
!10847 = distinct !DISubprogram(name: "do_projectpaint_draw", scope: !3, file: !3, line: 3914, type: !10790, scopeLine: 3915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!10848 = !DILocalVariable(name: "ps", arg: 1, scope: !10847, file: !3, line: 3914, type: !3674)
!10849 = !DILocation(line: 3914, column: 50, scope: !10847)
!10850 = !DILocalVariable(name: "projPixel", arg: 2, scope: !10847, file: !3, line: 3914, type: !3983)
!10851 = !DILocation(line: 3914, column: 65, scope: !10847)
!10852 = !DILocalVariable(name: "texrgb", arg: 3, scope: !10847, file: !3, line: 3914, type: !1944)
!10853 = !DILocation(line: 3914, column: 88, scope: !10847)
!10854 = !DILocalVariable(name: "mask", arg: 4, scope: !10847, file: !3, line: 3914, type: !184)
!10855 = !DILocation(line: 3914, column: 105, scope: !10847)
!10856 = !DILocalVariable(name: "rgb", scope: !10847, file: !3, line: 3916, type: !183)
!10857 = !DILocation(line: 3916, column: 8, scope: !10847)
!10858 = !DILocalVariable(name: "rgba_ub", scope: !10847, file: !3, line: 3917, type: !2703)
!10859 = !DILocation(line: 3917, column: 16, scope: !10847)
!10860 = !DILocation(line: 3919, column: 13, scope: !10847)
!10861 = !DILocation(line: 3919, column: 18, scope: !10847)
!10862 = !DILocation(line: 3919, column: 22, scope: !10847)
!10863 = !DILocation(line: 3919, column: 2, scope: !10847)
!10864 = !DILocation(line: 3921, column: 6, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10847, file: !3, line: 3921, column: 6)
!10866 = !DILocation(line: 3921, column: 10, scope: !10865)
!10867 = !DILocation(line: 3921, column: 6, scope: !10847)
!10868 = !DILocation(line: 3922, column: 13, scope: !10869)
!10869 = distinct !DILexicalBlock(scope: !10865, file: !3, line: 3921, column: 23)
!10870 = !DILocation(line: 3922, column: 18, scope: !10869)
!10871 = !DILocation(line: 3922, column: 3, scope: !10869)
!10872 = !DILocation(line: 3924, column: 27, scope: !10869)
!10873 = !DILocation(line: 3924, column: 32, scope: !10869)
!10874 = !DILocation(line: 3924, column: 3, scope: !10869)
!10875 = !DILocation(line: 3925, column: 2, scope: !10869)
!10876 = !DILocation(line: 3927, column: 21, scope: !10847)
!10877 = !DILocation(line: 3927, column: 30, scope: !10847)
!10878 = !DILocation(line: 3927, column: 2, scope: !10847)
!10879 = !DILocation(line: 3928, column: 25, scope: !10847)
!10880 = !DILocation(line: 3928, column: 15, scope: !10847)
!10881 = !DILocation(line: 3928, column: 2, scope: !10847)
!10882 = !DILocation(line: 3928, column: 13, scope: !10847)
!10883 = !DILocation(line: 3930, column: 6, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10847, file: !3, line: 3930, column: 6)
!10885 = !DILocation(line: 3930, column: 10, scope: !10884)
!10886 = !DILocation(line: 3930, column: 6, scope: !10847)
!10887 = !DILocation(line: 3931, column: 24, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10884, file: !3, line: 3930, column: 22)
!10889 = !DILocation(line: 3931, column: 35, scope: !10888)
!10890 = !DILocation(line: 3931, column: 41, scope: !10888)
!10891 = !DILocation(line: 3931, column: 48, scope: !10888)
!10892 = !DILocation(line: 3931, column: 59, scope: !10888)
!10893 = !DILocation(line: 3931, column: 69, scope: !10888)
!10894 = !DILocation(line: 3931, column: 76, scope: !10888)
!10895 = !DILocation(line: 3931, column: 85, scope: !10888)
!10896 = !DILocation(line: 3931, column: 89, scope: !10888)
!10897 = !DILocation(line: 3931, column: 3, scope: !10888)
!10898 = !DILocation(line: 3932, column: 2, scope: !10888)
!10899 = !DILocation(line: 3934, column: 24, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !10884, file: !3, line: 3933, column: 7)
!10901 = !DILocation(line: 3934, column: 35, scope: !10900)
!10902 = !DILocation(line: 3934, column: 41, scope: !10900)
!10903 = !DILocation(line: 3934, column: 48, scope: !10900)
!10904 = !DILocation(line: 3934, column: 59, scope: !10900)
!10905 = !DILocation(line: 3934, column: 65, scope: !10900)
!10906 = !DILocation(line: 3934, column: 72, scope: !10900)
!10907 = !DILocation(line: 3934, column: 81, scope: !10900)
!10908 = !DILocation(line: 3934, column: 85, scope: !10900)
!10909 = !DILocation(line: 3934, column: 3, scope: !10900)
!10910 = !DILocation(line: 3936, column: 1, scope: !10847)
!10911 = distinct !DISubprogram(name: "copy_v4_v4", scope: !4381, file: !4381, line: 71, type: !4361, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!10912 = !DILocalVariable(name: "r", arg: 1, scope: !10911, file: !4381, line: 71, type: !216)
!10913 = !DILocation(line: 71, column: 31, scope: !10911)
!10914 = !DILocalVariable(name: "a", arg: 2, scope: !10911, file: !4381, line: 71, type: !1944)
!10915 = !DILocation(line: 71, column: 49, scope: !10911)
!10916 = !DILocation(line: 73, column: 9, scope: !10911)
!10917 = !DILocation(line: 73, column: 2, scope: !10911)
!10918 = !DILocation(line: 73, column: 7, scope: !10911)
!10919 = !DILocation(line: 74, column: 9, scope: !10911)
!10920 = !DILocation(line: 74, column: 2, scope: !10911)
!10921 = !DILocation(line: 74, column: 7, scope: !10911)
!10922 = !DILocation(line: 75, column: 9, scope: !10911)
!10923 = !DILocation(line: 75, column: 2, scope: !10911)
!10924 = !DILocation(line: 75, column: 7, scope: !10911)
!10925 = !DILocation(line: 76, column: 9, scope: !10911)
!10926 = !DILocation(line: 76, column: 2, scope: !10911)
!10927 = !DILocation(line: 76, column: 7, scope: !10911)
!10928 = !DILocation(line: 77, column: 1, scope: !10911)
!10929 = distinct !DISubprogram(name: "project_bucket_bounds", scope: !3, file: !3, line: 2714, type: !9606, scopeLine: 2715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!10930 = !DILocalVariable(name: "ps", arg: 1, scope: !10929, file: !3, line: 2714, type: !9396)
!10931 = !DILocation(line: 2714, column: 57, scope: !10929)
!10932 = !DILocalVariable(name: "bucket_x", arg: 2, scope: !10929, file: !3, line: 2714, type: !5126)
!10933 = !DILocation(line: 2714, column: 71, scope: !10929)
!10934 = !DILocalVariable(name: "bucket_y", arg: 3, scope: !10929, file: !3, line: 2714, type: !5126)
!10935 = !DILocation(line: 2714, column: 91, scope: !10929)
!10936 = !DILocalVariable(name: "bucket_bounds", arg: 4, scope: !10929, file: !3, line: 2714, type: !9496)
!10937 = !DILocation(line: 2714, column: 107, scope: !10929)
!10938 = !DILocation(line: 2716, column: 24, scope: !10929)
!10939 = !DILocation(line: 2716, column: 28, scope: !10929)
!10940 = !DILocation(line: 2716, column: 45, scope: !10929)
!10941 = !DILocation(line: 2716, column: 44, scope: !10929)
!10942 = !DILocation(line: 2716, column: 58, scope: !10929)
!10943 = !DILocation(line: 2716, column: 62, scope: !10929)
!10944 = !DILocation(line: 2716, column: 77, scope: !10929)
!10945 = !DILocation(line: 2716, column: 81, scope: !10929)
!10946 = !DILocation(line: 2716, column: 75, scope: !10929)
!10947 = !DILocation(line: 2716, column: 55, scope: !10929)
!10948 = !DILocation(line: 2716, column: 41, scope: !10929)
!10949 = !DILocation(line: 2716, column: 2, scope: !10929)
!10950 = !DILocation(line: 2716, column: 17, scope: !10929)
!10951 = !DILocation(line: 2716, column: 22, scope: !10929)
!10952 = !DILocation(line: 2717, column: 24, scope: !10929)
!10953 = !DILocation(line: 2717, column: 28, scope: !10929)
!10954 = !DILocation(line: 2717, column: 45, scope: !10929)
!10955 = !DILocation(line: 2717, column: 54, scope: !10929)
!10956 = !DILocation(line: 2717, column: 44, scope: !10929)
!10957 = !DILocation(line: 2717, column: 62, scope: !10929)
!10958 = !DILocation(line: 2717, column: 66, scope: !10929)
!10959 = !DILocation(line: 2717, column: 81, scope: !10929)
!10960 = !DILocation(line: 2717, column: 85, scope: !10929)
!10961 = !DILocation(line: 2717, column: 79, scope: !10929)
!10962 = !DILocation(line: 2717, column: 59, scope: !10929)
!10963 = !DILocation(line: 2717, column: 41, scope: !10929)
!10964 = !DILocation(line: 2717, column: 2, scope: !10929)
!10965 = !DILocation(line: 2717, column: 17, scope: !10929)
!10966 = !DILocation(line: 2717, column: 22, scope: !10929)
!10967 = !DILocation(line: 2719, column: 24, scope: !10929)
!10968 = !DILocation(line: 2719, column: 28, scope: !10929)
!10969 = !DILocation(line: 2719, column: 45, scope: !10929)
!10970 = !DILocation(line: 2719, column: 44, scope: !10929)
!10971 = !DILocation(line: 2719, column: 58, scope: !10929)
!10972 = !DILocation(line: 2719, column: 62, scope: !10929)
!10973 = !DILocation(line: 2719, column: 78, scope: !10929)
!10974 = !DILocation(line: 2719, column: 82, scope: !10929)
!10975 = !DILocation(line: 2719, column: 76, scope: !10929)
!10976 = !DILocation(line: 2719, column: 55, scope: !10929)
!10977 = !DILocation(line: 2719, column: 41, scope: !10929)
!10978 = !DILocation(line: 2719, column: 2, scope: !10929)
!10979 = !DILocation(line: 2719, column: 17, scope: !10929)
!10980 = !DILocation(line: 2719, column: 22, scope: !10929)
!10981 = !DILocation(line: 2720, column: 24, scope: !10929)
!10982 = !DILocation(line: 2720, column: 28, scope: !10929)
!10983 = !DILocation(line: 2720, column: 45, scope: !10929)
!10984 = !DILocation(line: 2720, column: 54, scope: !10929)
!10985 = !DILocation(line: 2720, column: 44, scope: !10929)
!10986 = !DILocation(line: 2720, column: 62, scope: !10929)
!10987 = !DILocation(line: 2720, column: 66, scope: !10929)
!10988 = !DILocation(line: 2720, column: 83, scope: !10929)
!10989 = !DILocation(line: 2720, column: 87, scope: !10929)
!10990 = !DILocation(line: 2720, column: 81, scope: !10929)
!10991 = !DILocation(line: 2720, column: 59, scope: !10929)
!10992 = !DILocation(line: 2720, column: 41, scope: !10929)
!10993 = !DILocation(line: 2720, column: 2, scope: !10929)
!10994 = !DILocation(line: 2720, column: 17, scope: !10929)
!10995 = !DILocation(line: 2720, column: 22, scope: !10929)
!10996 = !DILocation(line: 2721, column: 1, scope: !10929)
!10997 = distinct !DISubprogram(name: "project_bucket_isect_circle", scope: !3, file: !3, line: 1774, type: !10998, scopeLine: 1775, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!10998 = !DISubroutineType(types: !10999)
!10999 = !{!233, !1944, !1778, !9496}
!11000 = !DILocalVariable(name: "cent", arg: 1, scope: !10997, file: !3, line: 1774, type: !1944)
!11001 = !DILocation(line: 1774, column: 53, scope: !10997)
!11002 = !DILocalVariable(name: "radius_squared", arg: 2, scope: !10997, file: !3, line: 1774, type: !1778)
!11003 = !DILocation(line: 1774, column: 74, scope: !10997)
!11004 = !DILocalVariable(name: "bucket_bounds", arg: 3, scope: !10997, file: !3, line: 1774, type: !9496)
!11005 = !DILocation(line: 1774, column: 96, scope: !10997)
!11006 = !DILocation(line: 1786, column: 7, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !10997, file: !3, line: 1786, column: 6)
!11008 = !DILocation(line: 1786, column: 22, scope: !11007)
!11009 = !DILocation(line: 1786, column: 30, scope: !11007)
!11010 = !DILocation(line: 1786, column: 27, scope: !11007)
!11011 = !DILocation(line: 1786, column: 38, scope: !11007)
!11012 = !DILocation(line: 1786, column: 41, scope: !11007)
!11013 = !DILocation(line: 1786, column: 56, scope: !11007)
!11014 = !DILocation(line: 1786, column: 64, scope: !11007)
!11015 = !DILocation(line: 1786, column: 61, scope: !11007)
!11016 = !DILocation(line: 1786, column: 73, scope: !11007)
!11017 = !DILocation(line: 1787, column: 7, scope: !11007)
!11018 = !DILocation(line: 1787, column: 22, scope: !11007)
!11019 = !DILocation(line: 1787, column: 30, scope: !11007)
!11020 = !DILocation(line: 1787, column: 27, scope: !11007)
!11021 = !DILocation(line: 1787, column: 38, scope: !11007)
!11022 = !DILocation(line: 1787, column: 41, scope: !11007)
!11023 = !DILocation(line: 1787, column: 56, scope: !11007)
!11024 = !DILocation(line: 1787, column: 64, scope: !11007)
!11025 = !DILocation(line: 1787, column: 61, scope: !11007)
!11026 = !DILocation(line: 1786, column: 6, scope: !10997)
!11027 = !DILocation(line: 1789, column: 3, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11007, file: !3, line: 1788, column: 2)
!11029 = !DILocation(line: 1793, column: 6, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !10997, file: !3, line: 1793, column: 6)
!11031 = !DILocation(line: 1793, column: 16, scope: !11030)
!11032 = !DILocation(line: 1793, column: 31, scope: !11030)
!11033 = !DILocation(line: 1793, column: 14, scope: !11030)
!11034 = !DILocation(line: 1793, column: 6, scope: !10997)
!11035 = !DILocation(line: 1795, column: 7, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !11037, file: !3, line: 1795, column: 7)
!11037 = distinct !DILexicalBlock(scope: !11030, file: !3, line: 1793, column: 37)
!11038 = !DILocation(line: 1795, column: 17, scope: !11036)
!11039 = !DILocation(line: 1795, column: 32, scope: !11036)
!11040 = !DILocation(line: 1795, column: 15, scope: !11036)
!11041 = !DILocation(line: 1795, column: 7, scope: !11037)
!11042 = !DILocation(line: 1796, column: 33, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11036, file: !3, line: 1795, column: 38)
!11044 = !DILocation(line: 1796, column: 39, scope: !11043)
!11045 = !DILocation(line: 1796, column: 54, scope: !11043)
!11046 = !DILocation(line: 1796, column: 60, scope: !11043)
!11047 = !DILocation(line: 1796, column: 75, scope: !11043)
!11048 = !DILocation(line: 1796, column: 12, scope: !11043)
!11049 = !DILocation(line: 1796, column: 83, scope: !11043)
!11050 = !DILocation(line: 1796, column: 81, scope: !11043)
!11051 = !DILocation(line: 1796, column: 11, scope: !11043)
!11052 = !DILocation(line: 1796, column: 4, scope: !11043)
!11053 = !DILocation(line: 1799, column: 12, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11036, file: !3, line: 1799, column: 12)
!11055 = !DILocation(line: 1799, column: 22, scope: !11054)
!11056 = !DILocation(line: 1799, column: 37, scope: !11054)
!11057 = !DILocation(line: 1799, column: 20, scope: !11054)
!11058 = !DILocation(line: 1799, column: 12, scope: !11036)
!11059 = !DILocation(line: 1800, column: 33, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11054, file: !3, line: 1799, column: 43)
!11061 = !DILocation(line: 1800, column: 39, scope: !11060)
!11062 = !DILocation(line: 1800, column: 54, scope: !11060)
!11063 = !DILocation(line: 1800, column: 60, scope: !11060)
!11064 = !DILocation(line: 1800, column: 75, scope: !11060)
!11065 = !DILocation(line: 1800, column: 12, scope: !11060)
!11066 = !DILocation(line: 1800, column: 83, scope: !11060)
!11067 = !DILocation(line: 1800, column: 81, scope: !11060)
!11068 = !DILocation(line: 1800, column: 11, scope: !11060)
!11069 = !DILocation(line: 1800, column: 4, scope: !11060)
!11070 = !DILocation(line: 1802, column: 2, scope: !11037)
!11071 = !DILocation(line: 1803, column: 11, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11030, file: !3, line: 1803, column: 11)
!11073 = !DILocation(line: 1803, column: 21, scope: !11072)
!11074 = !DILocation(line: 1803, column: 36, scope: !11072)
!11075 = !DILocation(line: 1803, column: 19, scope: !11072)
!11076 = !DILocation(line: 1803, column: 11, scope: !11030)
!11077 = !DILocation(line: 1805, column: 7, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11079, file: !3, line: 1805, column: 7)
!11079 = distinct !DILexicalBlock(scope: !11072, file: !3, line: 1803, column: 42)
!11080 = !DILocation(line: 1805, column: 17, scope: !11078)
!11081 = !DILocation(line: 1805, column: 32, scope: !11078)
!11082 = !DILocation(line: 1805, column: 15, scope: !11078)
!11083 = !DILocation(line: 1805, column: 7, scope: !11079)
!11084 = !DILocation(line: 1806, column: 33, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11078, file: !3, line: 1805, column: 38)
!11086 = !DILocation(line: 1806, column: 39, scope: !11085)
!11087 = !DILocation(line: 1806, column: 54, scope: !11085)
!11088 = !DILocation(line: 1806, column: 60, scope: !11085)
!11089 = !DILocation(line: 1806, column: 75, scope: !11085)
!11090 = !DILocation(line: 1806, column: 12, scope: !11085)
!11091 = !DILocation(line: 1806, column: 83, scope: !11085)
!11092 = !DILocation(line: 1806, column: 81, scope: !11085)
!11093 = !DILocation(line: 1806, column: 11, scope: !11085)
!11094 = !DILocation(line: 1806, column: 4, scope: !11085)
!11095 = !DILocation(line: 1809, column: 12, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11078, file: !3, line: 1809, column: 12)
!11097 = !DILocation(line: 1809, column: 22, scope: !11096)
!11098 = !DILocation(line: 1809, column: 37, scope: !11096)
!11099 = !DILocation(line: 1809, column: 20, scope: !11096)
!11100 = !DILocation(line: 1809, column: 12, scope: !11078)
!11101 = !DILocation(line: 1810, column: 33, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11096, file: !3, line: 1809, column: 43)
!11103 = !DILocation(line: 1810, column: 39, scope: !11102)
!11104 = !DILocation(line: 1810, column: 54, scope: !11102)
!11105 = !DILocation(line: 1810, column: 60, scope: !11102)
!11106 = !DILocation(line: 1810, column: 75, scope: !11102)
!11107 = !DILocation(line: 1810, column: 12, scope: !11102)
!11108 = !DILocation(line: 1810, column: 83, scope: !11102)
!11109 = !DILocation(line: 1810, column: 81, scope: !11102)
!11110 = !DILocation(line: 1810, column: 11, scope: !11102)
!11111 = !DILocation(line: 1810, column: 4, scope: !11102)
!11112 = !DILocation(line: 1812, column: 2, scope: !11079)
!11113 = !DILocation(line: 1814, column: 2, scope: !10997)
!11114 = !DILocation(line: 1815, column: 1, scope: !10997)
!11115 = distinct !DISubprogram(name: "len_squared_v2v2_alt", scope: !3, file: !3, line: 1762, type: !11116, scopeLine: 1763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!11116 = !DISubroutineType(types: !11117)
!11117 = !{!184, !1944, !1778, !1778}
!11118 = !DILocalVariable(name: "v1", arg: 1, scope: !11115, file: !3, line: 1762, type: !1944)
!11119 = !DILocation(line: 1762, column: 47, scope: !11115)
!11120 = !DILocalVariable(name: "v2_1", arg: 2, scope: !11115, file: !3, line: 1762, type: !1778)
!11121 = !DILocation(line: 1762, column: 66, scope: !11115)
!11122 = !DILocalVariable(name: "v2_2", arg: 3, scope: !11115, file: !3, line: 1762, type: !1778)
!11123 = !DILocation(line: 1762, column: 84, scope: !11115)
!11124 = !DILocalVariable(name: "x", scope: !11115, file: !3, line: 1764, type: !184)
!11125 = !DILocation(line: 1764, column: 8, scope: !11115)
!11126 = !DILocalVariable(name: "y", scope: !11115, file: !3, line: 1764, type: !184)
!11127 = !DILocation(line: 1764, column: 11, scope: !11115)
!11128 = !DILocation(line: 1766, column: 6, scope: !11115)
!11129 = !DILocation(line: 1766, column: 14, scope: !11115)
!11130 = !DILocation(line: 1766, column: 12, scope: !11115)
!11131 = !DILocation(line: 1766, column: 4, scope: !11115)
!11132 = !DILocation(line: 1767, column: 6, scope: !11115)
!11133 = !DILocation(line: 1767, column: 14, scope: !11115)
!11134 = !DILocation(line: 1767, column: 12, scope: !11115)
!11135 = !DILocation(line: 1767, column: 4, scope: !11115)
!11136 = !DILocation(line: 1768, column: 9, scope: !11115)
!11137 = !DILocation(line: 1768, column: 13, scope: !11115)
!11138 = !DILocation(line: 1768, column: 11, scope: !11115)
!11139 = !DILocation(line: 1768, column: 17, scope: !11115)
!11140 = !DILocation(line: 1768, column: 21, scope: !11115)
!11141 = !DILocation(line: 1768, column: 19, scope: !11115)
!11142 = !DILocation(line: 1768, column: 15, scope: !11115)
!11143 = !DILocation(line: 1768, column: 2, scope: !11115)
!11144 = distinct !DISubprogram(name: "project_paint_face_init", scope: !3, file: !3, line: 2261, type: !11145, scopeLine: 2262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!11145 = !DISubroutineType(types: !11146)
!11146 = !{null, !9396, !5126, !5126, !5126, !5126, !9496, !3893, !11147, !1946, !1946}
!11147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3893, size: 64)
!11148 = !DILocalVariable(name: "ps", arg: 1, scope: !11144, file: !3, line: 2261, type: !9396)
!11149 = !DILocation(line: 2261, column: 59, scope: !11144)
!11150 = !DILocalVariable(name: "thread_index", arg: 2, scope: !11144, file: !3, line: 2261, type: !5126)
!11151 = !DILocation(line: 2261, column: 73, scope: !11144)
!11152 = !DILocalVariable(name: "bucket_index", arg: 3, scope: !11144, file: !3, line: 2261, type: !5126)
!11153 = !DILocation(line: 2261, column: 97, scope: !11144)
!11154 = !DILocalVariable(name: "face_index", arg: 4, scope: !11144, file: !3, line: 2261, type: !5126)
!11155 = !DILocation(line: 2261, column: 121, scope: !11144)
!11156 = !DILocalVariable(name: "image_index", arg: 5, scope: !11144, file: !3, line: 2261, type: !5126)
!11157 = !DILocation(line: 2261, column: 143, scope: !11144)
!11158 = !DILocalVariable(name: "bucket_bounds", arg: 6, scope: !11144, file: !3, line: 2261, type: !9496)
!11159 = !DILocation(line: 2261, column: 162, scope: !11144)
!11160 = !DILocalVariable(name: "ibuf", arg: 7, scope: !11144, file: !3, line: 2261, type: !3893)
!11161 = !DILocation(line: 2261, column: 184, scope: !11144)
!11162 = !DILocalVariable(name: "tmpibuf", arg: 8, scope: !11144, file: !3, line: 2261, type: !11147)
!11163 = !DILocation(line: 2261, column: 198, scope: !11144)
!11164 = !DILocalVariable(name: "clamp_u", arg: 9, scope: !11144, file: !3, line: 2261, type: !1946)
!11165 = !DILocation(line: 2261, column: 219, scope: !11144)
!11166 = !DILocalVariable(name: "clamp_v", arg: 10, scope: !11144, file: !3, line: 2261, type: !1946)
!11167 = !DILocation(line: 2261, column: 240, scope: !11144)
!11168 = !DILocalVariable(name: "arena", scope: !11144, file: !3, line: 2264, type: !3868)
!11169 = !DILocation(line: 2264, column: 12, scope: !11144)
!11170 = !DILocation(line: 2264, column: 20, scope: !11144)
!11171 = !DILocation(line: 2264, column: 24, scope: !11144)
!11172 = !DILocation(line: 2264, column: 33, scope: !11144)
!11173 = !DILocalVariable(name: "bucketPixelNodes", scope: !11144, file: !3, line: 2265, type: !3873)
!11174 = !DILocation(line: 2265, column: 13, scope: !11144)
!11175 = !DILocation(line: 2265, column: 32, scope: !11144)
!11176 = !DILocation(line: 2265, column: 36, scope: !11144)
!11177 = !DILocation(line: 2265, column: 49, scope: !11144)
!11178 = !DILocation(line: 2265, column: 47, scope: !11144)
!11179 = !DILocalVariable(name: "bucketFaceNodes", scope: !11144, file: !3, line: 2266, type: !3874)
!11180 = !DILocation(line: 2266, column: 12, scope: !11144)
!11181 = !DILocation(line: 2266, column: 30, scope: !11144)
!11182 = !DILocation(line: 2266, column: 34, scope: !11144)
!11183 = !DILocation(line: 2266, column: 46, scope: !11144)
!11184 = !DILocalVariable(name: "threaded", scope: !11144, file: !3, line: 2267, type: !233)
!11185 = !DILocation(line: 2267, column: 7, scope: !11144)
!11186 = !DILocation(line: 2267, column: 19, scope: !11144)
!11187 = !DILocation(line: 2267, column: 23, scope: !11144)
!11188 = !DILocation(line: 2267, column: 34, scope: !11144)
!11189 = !DILocation(line: 2267, column: 18, scope: !11144)
!11190 = !DILocalVariable(name: "tinf", scope: !11144, file: !3, line: 2269, type: !11191)
!11191 = !DIDerivedType(tag: DW_TAG_typedef, name: "TileInfo", file: !3, line: 358, baseType: !11192)
!11192 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 352, size: 256, elements: !11193)
!11193 = !{!11194, !11195, !11196, !11197, !11198}
!11194 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11192, file: !3, line: 353, baseType: !3966, size: 64)
!11195 = !DIDerivedType(tag: DW_TAG_member, name: "masked", scope: !11192, file: !3, line: 354, baseType: !233, size: 8, offset: 64)
!11196 = !DIDerivedType(tag: DW_TAG_member, name: "tile_width", scope: !11192, file: !3, line: 355, baseType: !1605, size: 16, offset: 80)
!11197 = !DIDerivedType(tag: DW_TAG_member, name: "tmpibuf", scope: !11192, file: !3, line: 356, baseType: !11147, size: 64, offset: 128)
!11198 = !DIDerivedType(tag: DW_TAG_member, name: "pjima", scope: !11192, file: !3, line: 357, baseType: !3887, size: 64, offset: 192)
!11199 = !DILocation(line: 2269, column: 11, scope: !11144)
!11200 = !DILocation(line: 2269, column: 18, scope: !11144)
!11201 = !DILocation(line: 2270, column: 3, scope: !11144)
!11202 = !DILocation(line: 2270, column: 7, scope: !11144)
!11203 = !DILocation(line: 2271, column: 3, scope: !11144)
!11204 = !DILocation(line: 2271, column: 7, scope: !11144)
!11205 = !DILocation(line: 2272, column: 3, scope: !11144)
!11206 = !DILocation(line: 2273, column: 3, scope: !11144)
!11207 = !DILocation(line: 2274, column: 3, scope: !11144)
!11208 = !DILocation(line: 2274, column: 7, scope: !11144)
!11209 = !DILocation(line: 2274, column: 20, scope: !11144)
!11210 = !DILocation(line: 2274, column: 18, scope: !11144)
!11211 = !DILocalVariable(name: "mf", scope: !11144, file: !3, line: 2277, type: !11212)
!11212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11213, size: 64)
!11213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3853)
!11214 = !DILocation(line: 2277, column: 15, scope: !11144)
!11215 = !DILocation(line: 2277, column: 20, scope: !11144)
!11216 = !DILocation(line: 2277, column: 24, scope: !11144)
!11217 = !DILocation(line: 2277, column: 35, scope: !11144)
!11218 = !DILocation(line: 2277, column: 33, scope: !11144)
!11219 = !DILocalVariable(name: "tf", scope: !11144, file: !3, line: 2278, type: !11220)
!11220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11221, size: 64)
!11221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3857)
!11222 = !DILocation(line: 2278, column: 16, scope: !11144)
!11223 = !DILocation(line: 2278, column: 21, scope: !11144)
!11224 = !DILocation(line: 2278, column: 25, scope: !11144)
!11225 = !DILocation(line: 2278, column: 35, scope: !11144)
!11226 = !DILocalVariable(name: "x", scope: !11144, file: !3, line: 2281, type: !22)
!11227 = !DILocation(line: 2281, column: 6, scope: !11144)
!11228 = !DILocalVariable(name: "y", scope: !11144, file: !3, line: 2282, type: !22)
!11229 = !DILocation(line: 2282, column: 6, scope: !11144)
!11230 = !DILocalVariable(name: "mask", scope: !11144, file: !3, line: 2283, type: !184)
!11231 = !DILocation(line: 2283, column: 8, scope: !11144)
!11232 = !DILocalVariable(name: "uv", scope: !11144, file: !3, line: 2284, type: !860)
!11233 = !DILocation(line: 2284, column: 8, scope: !11144)
!11234 = !DILocalVariable(name: "side", scope: !11144, file: !3, line: 2286, type: !22)
!11235 = !DILocation(line: 2286, column: 6, scope: !11144)
!11236 = !DILocalVariable(name: "v1coSS", scope: !11144, file: !3, line: 2287, type: !216)
!11237 = !DILocation(line: 2287, column: 9, scope: !11144)
!11238 = !DILocalVariable(name: "v2coSS", scope: !11144, file: !3, line: 2287, type: !216)
!11239 = !DILocation(line: 2287, column: 18, scope: !11144)
!11240 = !DILocalVariable(name: "v3coSS", scope: !11144, file: !3, line: 2287, type: !216)
!11241 = !DILocation(line: 2287, column: 27, scope: !11144)
!11242 = !DILocalVariable(name: "vCo", scope: !11144, file: !3, line: 2289, type: !11243)
!11243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !216, size: 256, elements: !497)
!11244 = !DILocation(line: 2289, column: 9, scope: !11144)
!11245 = !DILocalVariable(name: "w", scope: !11144, file: !3, line: 2291, type: !183)
!11246 = !DILocation(line: 2291, column: 8, scope: !11144)
!11247 = !DILocalVariable(name: "wco", scope: !11144, file: !3, line: 2291, type: !183)
!11248 = !DILocation(line: 2291, column: 14, scope: !11144)
!11249 = !DILocalVariable(name: "uv1co", scope: !11144, file: !3, line: 2293, type: !216)
!11250 = !DILocation(line: 2293, column: 9, scope: !11144)
!11251 = !DILocalVariable(name: "uv2co", scope: !11144, file: !3, line: 2293, type: !216)
!11252 = !DILocation(line: 2293, column: 17, scope: !11144)
!11253 = !DILocalVariable(name: "uv3co", scope: !11144, file: !3, line: 2293, type: !216)
!11254 = !DILocation(line: 2293, column: 25, scope: !11144)
!11255 = !DILocalVariable(name: "pixelScreenCo", scope: !11144, file: !3, line: 2294, type: !496)
!11256 = !DILocation(line: 2294, column: 8, scope: !11144)
!11257 = !DILocalVariable(name: "do_3d_mapping", scope: !11144, file: !3, line: 2295, type: !233)
!11258 = !DILocation(line: 2295, column: 7, scope: !11144)
!11259 = !DILocation(line: 2295, column: 23, scope: !11144)
!11260 = !DILocation(line: 2295, column: 27, scope: !11144)
!11261 = !DILocation(line: 2295, column: 34, scope: !11144)
!11262 = !DILocation(line: 2295, column: 39, scope: !11144)
!11263 = !DILocation(line: 2295, column: 54, scope: !11144)
!11264 = !DILocalVariable(name: "bounds_px", scope: !11144, file: !3, line: 2297, type: !850)
!11265 = !DILocation(line: 2297, column: 7, scope: !11144)
!11266 = !DILocalVariable(name: "tf_uv_pxoffset", scope: !11144, file: !3, line: 2300, type: !2027)
!11267 = !DILocation(line: 2300, column: 8, scope: !11144)
!11268 = !DILocalVariable(name: "xhalfpx", scope: !11144, file: !3, line: 2301, type: !184)
!11269 = !DILocation(line: 2301, column: 8, scope: !11144)
!11270 = !DILocalVariable(name: "yhalfpx", scope: !11144, file: !3, line: 2301, type: !184)
!11271 = !DILocation(line: 2301, column: 17, scope: !11144)
!11272 = !DILocalVariable(name: "ibuf_xf", scope: !11144, file: !3, line: 2302, type: !1778)
!11273 = !DILocation(line: 2302, column: 14, scope: !11144)
!11274 = !DILocation(line: 2302, column: 31, scope: !11144)
!11275 = !DILocation(line: 2302, column: 37, scope: !11144)
!11276 = !DILocation(line: 2302, column: 24, scope: !11144)
!11277 = !DILocalVariable(name: "ibuf_yf", scope: !11144, file: !3, line: 2302, type: !1778)
!11278 = !DILocation(line: 2302, column: 40, scope: !11144)
!11279 = !DILocation(line: 2302, column: 57, scope: !11144)
!11280 = !DILocation(line: 2302, column: 63, scope: !11144)
!11281 = !DILocation(line: 2302, column: 50, scope: !11144)
!11282 = !DILocalVariable(name: "has_x_isect", scope: !11144, file: !3, line: 2304, type: !22)
!11283 = !DILocation(line: 2304, column: 6, scope: !11144)
!11284 = !DILocalVariable(name: "has_isect", scope: !11144, file: !3, line: 2304, type: !22)
!11285 = !DILocation(line: 2304, column: 23, scope: !11144)
!11286 = !DILocalVariable(name: "i1", scope: !11144, file: !3, line: 2306, type: !22)
!11287 = !DILocation(line: 2306, column: 6, scope: !11144)
!11288 = !DILocalVariable(name: "i2", scope: !11144, file: !3, line: 2306, type: !22)
!11289 = !DILocation(line: 2306, column: 10, scope: !11144)
!11290 = !DILocalVariable(name: "i3", scope: !11144, file: !3, line: 2306, type: !22)
!11291 = !DILocation(line: 2306, column: 14, scope: !11144)
!11292 = !DILocalVariable(name: "uv_clip", scope: !11144, file: !3, line: 2308, type: !11293)
!11293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 512, elements: !11294)
!11294 = !{!289, !819}
!11295 = !DILocation(line: 2308, column: 8, scope: !11144)
!11296 = !DILocalVariable(name: "uv_clip_tot", scope: !11144, file: !3, line: 2309, type: !22)
!11297 = !DILocation(line: 2309, column: 6, scope: !11144)
!11298 = !DILocalVariable(name: "is_ortho", scope: !11144, file: !3, line: 2310, type: !2035)
!11299 = !DILocation(line: 2310, column: 13, scope: !11144)
!11300 = !DILocation(line: 2310, column: 24, scope: !11144)
!11301 = !DILocation(line: 2310, column: 28, scope: !11144)
!11302 = !DILocalVariable(name: "do_backfacecull", scope: !11144, file: !3, line: 2311, type: !2035)
!11303 = !DILocation(line: 2311, column: 13, scope: !11144)
!11304 = !DILocation(line: 2311, column: 31, scope: !11144)
!11305 = !DILocation(line: 2311, column: 35, scope: !11144)
!11306 = !DILocalVariable(name: "do_clip", scope: !11144, file: !3, line: 2312, type: !2035)
!11307 = !DILocation(line: 2312, column: 13, scope: !11144)
!11308 = !DILocation(line: 2312, column: 23, scope: !11144)
!11309 = !DILocation(line: 2312, column: 27, scope: !11144)
!11310 = !DILocation(line: 2312, column: 34, scope: !11144)
!11311 = !DILocation(line: 2312, column: 38, scope: !11144)
!11312 = !DILocation(line: 2312, column: 44, scope: !11144)
!11313 = !DILocation(line: 2312, column: 50, scope: !11144)
!11314 = !DILocation(line: 2314, column: 11, scope: !11144)
!11315 = !DILocation(line: 2314, column: 15, scope: !11144)
!11316 = !DILocation(line: 2314, column: 24, scope: !11144)
!11317 = !DILocation(line: 2314, column: 28, scope: !11144)
!11318 = !DILocation(line: 2314, column: 32, scope: !11144)
!11319 = !DILocation(line: 2314, column: 2, scope: !11144)
!11320 = !DILocation(line: 2314, column: 9, scope: !11144)
!11321 = !DILocation(line: 2315, column: 11, scope: !11144)
!11322 = !DILocation(line: 2315, column: 15, scope: !11144)
!11323 = !DILocation(line: 2315, column: 24, scope: !11144)
!11324 = !DILocation(line: 2315, column: 28, scope: !11144)
!11325 = !DILocation(line: 2315, column: 32, scope: !11144)
!11326 = !DILocation(line: 2315, column: 2, scope: !11144)
!11327 = !DILocation(line: 2315, column: 9, scope: !11144)
!11328 = !DILocation(line: 2316, column: 11, scope: !11144)
!11329 = !DILocation(line: 2316, column: 15, scope: !11144)
!11330 = !DILocation(line: 2316, column: 24, scope: !11144)
!11331 = !DILocation(line: 2316, column: 28, scope: !11144)
!11332 = !DILocation(line: 2316, column: 32, scope: !11144)
!11333 = !DILocation(line: 2316, column: 2, scope: !11144)
!11334 = !DILocation(line: 2316, column: 9, scope: !11144)
!11335 = !DILocation(line: 2322, column: 62, scope: !11144)
!11336 = !DILocation(line: 2322, column: 60, scope: !11144)
!11337 = !DILocation(line: 2322, column: 10, scope: !11144)
!11338 = !DILocation(line: 2323, column: 62, scope: !11144)
!11339 = !DILocation(line: 2323, column: 60, scope: !11144)
!11340 = !DILocation(line: 2323, column: 10, scope: !11144)
!11341 = !DILocation(line: 2334, column: 25, scope: !11144)
!11342 = !DILocation(line: 2334, column: 29, scope: !11144)
!11343 = !DILocation(line: 2334, column: 40, scope: !11144)
!11344 = !DILocation(line: 2334, column: 38, scope: !11144)
!11345 = !DILocation(line: 2334, column: 2, scope: !11144)
!11346 = !DILocation(line: 2334, column: 23, scope: !11144)
!11347 = !DILocation(line: 2335, column: 25, scope: !11144)
!11348 = !DILocation(line: 2335, column: 29, scope: !11144)
!11349 = !DILocation(line: 2335, column: 40, scope: !11144)
!11350 = !DILocation(line: 2335, column: 38, scope: !11144)
!11351 = !DILocation(line: 2335, column: 2, scope: !11144)
!11352 = !DILocation(line: 2335, column: 23, scope: !11144)
!11353 = !DILocation(line: 2337, column: 25, scope: !11144)
!11354 = !DILocation(line: 2337, column: 29, scope: !11144)
!11355 = !DILocation(line: 2337, column: 40, scope: !11144)
!11356 = !DILocation(line: 2337, column: 38, scope: !11144)
!11357 = !DILocation(line: 2337, column: 2, scope: !11144)
!11358 = !DILocation(line: 2337, column: 23, scope: !11144)
!11359 = !DILocation(line: 2338, column: 25, scope: !11144)
!11360 = !DILocation(line: 2338, column: 29, scope: !11144)
!11361 = !DILocation(line: 2338, column: 40, scope: !11144)
!11362 = !DILocation(line: 2338, column: 38, scope: !11144)
!11363 = !DILocation(line: 2338, column: 2, scope: !11144)
!11364 = !DILocation(line: 2338, column: 23, scope: !11144)
!11365 = !DILocation(line: 2340, column: 25, scope: !11144)
!11366 = !DILocation(line: 2340, column: 29, scope: !11144)
!11367 = !DILocation(line: 2340, column: 40, scope: !11144)
!11368 = !DILocation(line: 2340, column: 38, scope: !11144)
!11369 = !DILocation(line: 2340, column: 2, scope: !11144)
!11370 = !DILocation(line: 2340, column: 23, scope: !11144)
!11371 = !DILocation(line: 2341, column: 25, scope: !11144)
!11372 = !DILocation(line: 2341, column: 29, scope: !11144)
!11373 = !DILocation(line: 2341, column: 40, scope: !11144)
!11374 = !DILocation(line: 2341, column: 38, scope: !11144)
!11375 = !DILocation(line: 2341, column: 2, scope: !11144)
!11376 = !DILocation(line: 2341, column: 23, scope: !11144)
!11377 = !DILocation(line: 2343, column: 6, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11144, file: !3, line: 2343, column: 6)
!11379 = !DILocation(line: 2343, column: 10, scope: !11378)
!11380 = !DILocation(line: 2343, column: 6, scope: !11144)
!11381 = !DILocation(line: 2344, column: 12, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 2343, column: 14)
!11383 = !DILocation(line: 2344, column: 16, scope: !11382)
!11384 = !DILocation(line: 2344, column: 25, scope: !11382)
!11385 = !DILocation(line: 2344, column: 29, scope: !11382)
!11386 = !DILocation(line: 2344, column: 33, scope: !11382)
!11387 = !DILocation(line: 2344, column: 3, scope: !11382)
!11388 = !DILocation(line: 2344, column: 10, scope: !11382)
!11389 = !DILocation(line: 2346, column: 26, scope: !11382)
!11390 = !DILocation(line: 2346, column: 30, scope: !11382)
!11391 = !DILocation(line: 2346, column: 41, scope: !11382)
!11392 = !DILocation(line: 2346, column: 39, scope: !11382)
!11393 = !DILocation(line: 2346, column: 3, scope: !11382)
!11394 = !DILocation(line: 2346, column: 24, scope: !11382)
!11395 = !DILocation(line: 2347, column: 26, scope: !11382)
!11396 = !DILocation(line: 2347, column: 30, scope: !11382)
!11397 = !DILocation(line: 2347, column: 41, scope: !11382)
!11398 = !DILocation(line: 2347, column: 39, scope: !11382)
!11399 = !DILocation(line: 2347, column: 3, scope: !11382)
!11400 = !DILocation(line: 2347, column: 24, scope: !11382)
!11401 = !DILocation(line: 2348, column: 8, scope: !11382)
!11402 = !DILocation(line: 2349, column: 2, scope: !11382)
!11403 = !DILocation(line: 2351, column: 8, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 2350, column: 7)
!11405 = !DILocation(line: 2354, column: 2, scope: !11144)
!11406 = !DILocation(line: 2355, column: 7, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 2355, column: 7)
!11408 = distinct !DILexicalBlock(scope: !11144, file: !3, line: 2354, column: 5)
!11409 = !DILocation(line: 2355, column: 12, scope: !11407)
!11410 = !DILocation(line: 2355, column: 7, scope: !11408)
!11411 = !DILocation(line: 2356, column: 7, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !11407, file: !3, line: 2355, column: 18)
!11413 = !DILocation(line: 2356, column: 15, scope: !11412)
!11414 = !DILocation(line: 2356, column: 23, scope: !11412)
!11415 = !DILocation(line: 2357, column: 3, scope: !11412)
!11416 = !DILocation(line: 2359, column: 7, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11407, file: !3, line: 2358, column: 8)
!11418 = !DILocation(line: 2359, column: 15, scope: !11417)
!11419 = !DILocation(line: 2359, column: 23, scope: !11417)
!11420 = !DILocation(line: 2362, column: 26, scope: !11408)
!11421 = !DILocation(line: 2362, column: 11, scope: !11408)
!11422 = !DILocation(line: 2362, column: 9, scope: !11408)
!11423 = !DILocation(line: 2363, column: 26, scope: !11408)
!11424 = !DILocation(line: 2363, column: 11, scope: !11408)
!11425 = !DILocation(line: 2363, column: 9, scope: !11408)
!11426 = !DILocation(line: 2364, column: 26, scope: !11408)
!11427 = !DILocation(line: 2364, column: 11, scope: !11408)
!11428 = !DILocation(line: 2364, column: 9, scope: !11408)
!11429 = !DILocation(line: 2366, column: 12, scope: !11408)
!11430 = !DILocation(line: 2366, column: 16, scope: !11408)
!11431 = !DILocation(line: 2366, column: 33, scope: !11408)
!11432 = !DILocation(line: 2366, column: 37, scope: !11408)
!11433 = !DILocation(line: 2366, column: 42, scope: !11408)
!11434 = !DILocation(line: 2366, column: 40, scope: !11408)
!11435 = !DILocation(line: 2366, column: 30, scope: !11408)
!11436 = !DILocation(line: 2366, column: 10, scope: !11408)
!11437 = !DILocation(line: 2367, column: 12, scope: !11408)
!11438 = !DILocation(line: 2367, column: 16, scope: !11408)
!11439 = !DILocation(line: 2367, column: 33, scope: !11408)
!11440 = !DILocation(line: 2367, column: 37, scope: !11408)
!11441 = !DILocation(line: 2367, column: 42, scope: !11408)
!11442 = !DILocation(line: 2367, column: 40, scope: !11408)
!11443 = !DILocation(line: 2367, column: 30, scope: !11408)
!11444 = !DILocation(line: 2367, column: 10, scope: !11408)
!11445 = !DILocation(line: 2368, column: 12, scope: !11408)
!11446 = !DILocation(line: 2368, column: 16, scope: !11408)
!11447 = !DILocation(line: 2368, column: 33, scope: !11408)
!11448 = !DILocation(line: 2368, column: 37, scope: !11408)
!11449 = !DILocation(line: 2368, column: 42, scope: !11408)
!11450 = !DILocation(line: 2368, column: 40, scope: !11408)
!11451 = !DILocation(line: 2368, column: 30, scope: !11408)
!11452 = !DILocation(line: 2368, column: 10, scope: !11408)
!11453 = !DILocation(line: 2372, column: 11, scope: !11408)
!11454 = !DILocation(line: 2372, column: 21, scope: !11408)
!11455 = !DILocation(line: 2373, column: 11, scope: !11408)
!11456 = !DILocation(line: 2373, column: 19, scope: !11408)
!11457 = !DILocation(line: 2373, column: 27, scope: !11408)
!11458 = !DILocation(line: 2374, column: 11, scope: !11408)
!11459 = !DILocation(line: 2374, column: 18, scope: !11408)
!11460 = !DILocation(line: 2374, column: 25, scope: !11408)
!11461 = !DILocation(line: 2375, column: 11, scope: !11408)
!11462 = !DILocation(line: 2371, column: 3, scope: !11408)
!11463 = !DILocation(line: 2385, column: 26, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 2385, column: 7)
!11465 = !DILocation(line: 2385, column: 47, scope: !11464)
!11466 = !DILocation(line: 2385, column: 53, scope: !11464)
!11467 = !DILocation(line: 2385, column: 56, scope: !11464)
!11468 = !DILocation(line: 2385, column: 62, scope: !11464)
!11469 = !DILocation(line: 2385, column: 65, scope: !11464)
!11470 = !DILocation(line: 2385, column: 7, scope: !11464)
!11471 = !DILocation(line: 2385, column: 7, scope: !11408)
!11472 = !DILocation(line: 2387, column: 8, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11474, file: !3, line: 2387, column: 8)
!11474 = distinct !DILexicalBlock(scope: !11464, file: !3, line: 2385, column: 79)
!11475 = !DILocation(line: 2387, column: 8, scope: !11474)
!11476 = !DILocation(line: 2388, column: 5, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11478, file: !3, line: 2388, column: 5)
!11478 = distinct !DILexicalBlock(scope: !11479, file: !3, line: 2388, column: 5)
!11479 = distinct !DILexicalBlock(scope: !11473, file: !3, line: 2387, column: 17)
!11480 = !DILocation(line: 2388, column: 5, scope: !11478)
!11481 = !DILocation(line: 2388, column: 5, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11477, file: !3, line: 2388, column: 5)
!11483 = !DILocation(line: 2389, column: 5, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11485, file: !3, line: 2389, column: 5)
!11485 = distinct !DILexicalBlock(scope: !11479, file: !3, line: 2389, column: 5)
!11486 = !DILocation(line: 2389, column: 5, scope: !11485)
!11487 = !DILocation(line: 2389, column: 5, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11484, file: !3, line: 2389, column: 5)
!11489 = !DILocation(line: 2390, column: 4, scope: !11479)
!11490 = !DILocation(line: 2392, column: 8, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11474, file: !3, line: 2392, column: 8)
!11492 = !DILocation(line: 2392, column: 8, scope: !11474)
!11493 = !DILocation(line: 2393, column: 5, scope: !11494)
!11494 = distinct !DILexicalBlock(scope: !11495, file: !3, line: 2393, column: 5)
!11495 = distinct !DILexicalBlock(scope: !11496, file: !3, line: 2393, column: 5)
!11496 = distinct !DILexicalBlock(scope: !11491, file: !3, line: 2392, column: 17)
!11497 = !DILocation(line: 2393, column: 5, scope: !11495)
!11498 = !DILocation(line: 2393, column: 5, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11494, file: !3, line: 2393, column: 5)
!11500 = !DILocation(line: 2394, column: 5, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11502, file: !3, line: 2394, column: 5)
!11502 = distinct !DILexicalBlock(scope: !11496, file: !3, line: 2394, column: 5)
!11503 = !DILocation(line: 2394, column: 5, scope: !11502)
!11504 = !DILocation(line: 2394, column: 5, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11501, file: !3, line: 2394, column: 5)
!11506 = !DILocation(line: 2395, column: 4, scope: !11496)
!11507 = !DILocation(line: 2403, column: 14, scope: !11474)
!11508 = !DILocation(line: 2404, column: 23, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11474, file: !3, line: 2404, column: 4)
!11510 = !DILocation(line: 2404, column: 11, scope: !11509)
!11511 = !DILocation(line: 2404, column: 9, scope: !11509)
!11512 = !DILocation(line: 2404, column: 29, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11509, file: !3, line: 2404, column: 4)
!11514 = !DILocation(line: 2404, column: 43, scope: !11513)
!11515 = !DILocation(line: 2404, column: 31, scope: !11513)
!11516 = !DILocation(line: 2404, column: 4, scope: !11509)
!11517 = !DILocation(line: 2406, column: 20, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11513, file: !3, line: 2404, column: 54)
!11519 = !DILocation(line: 2406, column: 13, scope: !11518)
!11520 = !DILocation(line: 2406, column: 24, scope: !11518)
!11521 = !DILocation(line: 2406, column: 22, scope: !11518)
!11522 = !DILocation(line: 2406, column: 5, scope: !11518)
!11523 = !DILocation(line: 2406, column: 11, scope: !11518)
!11524 = !DILocation(line: 2408, column: 17, scope: !11518)
!11525 = !DILocation(line: 2409, column: 24, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11518, file: !3, line: 2409, column: 5)
!11527 = !DILocation(line: 2409, column: 12, scope: !11526)
!11528 = !DILocation(line: 2409, column: 10, scope: !11526)
!11529 = !DILocation(line: 2409, column: 30, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11526, file: !3, line: 2409, column: 5)
!11531 = !DILocation(line: 2409, column: 44, scope: !11530)
!11532 = !DILocation(line: 2409, column: 32, scope: !11530)
!11533 = !DILocation(line: 2409, column: 5, scope: !11526)
!11534 = !DILocation(line: 2411, column: 21, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11530, file: !3, line: 2409, column: 55)
!11536 = !DILocation(line: 2411, column: 14, scope: !11535)
!11537 = !DILocation(line: 2411, column: 25, scope: !11535)
!11538 = !DILocation(line: 2411, column: 23, scope: !11535)
!11539 = !DILocation(line: 2411, column: 6, scope: !11535)
!11540 = !DILocation(line: 2411, column: 12, scope: !11535)
!11541 = !DILocation(line: 2415, column: 11, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11535, file: !3, line: 2415, column: 10)
!11543 = !DILocation(line: 2415, column: 27, scope: !11542)
!11544 = !DILocation(line: 2415, column: 36, scope: !11542)
!11545 = !DILocation(line: 2415, column: 52, scope: !11542)
!11546 = !DILocation(line: 2415, column: 56, scope: !11542)
!11547 = !DILocation(line: 2415, column: 65, scope: !11542)
!11548 = !DILocation(line: 2415, column: 39, scope: !11542)
!11549 = !DILocation(line: 2415, column: 79, scope: !11542)
!11550 = !DILocation(line: 2416, column: 11, scope: !11542)
!11551 = !DILocation(line: 2416, column: 27, scope: !11542)
!11552 = !DILocation(line: 2416, column: 36, scope: !11542)
!11553 = !DILocation(line: 2416, column: 60, scope: !11542)
!11554 = !DILocation(line: 2416, column: 64, scope: !11542)
!11555 = !DILocation(line: 2416, column: 73, scope: !11542)
!11556 = !DILocation(line: 2416, column: 39, scope: !11542)
!11557 = !DILocation(line: 2415, column: 10, scope: !11535)
!11558 = !DILocation(line: 2419, column: 31, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11542, file: !3, line: 2417, column: 6)
!11560 = !DILocation(line: 2419, column: 19, scope: !11559)
!11561 = !DILocation(line: 2421, column: 11, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11559, file: !3, line: 2421, column: 11)
!11563 = !DILocation(line: 2421, column: 11, scope: !11559)
!11564 = !DILocation(line: 2421, column: 42, scope: !11562)
!11565 = !DILocation(line: 2421, column: 46, scope: !11562)
!11566 = !DILocation(line: 2421, column: 54, scope: !11562)
!11567 = !DILocation(line: 2421, column: 62, scope: !11562)
!11568 = !DILocation(line: 2421, column: 70, scope: !11562)
!11569 = !DILocation(line: 2421, column: 77, scope: !11562)
!11570 = !DILocation(line: 2421, column: 84, scope: !11562)
!11571 = !DILocation(line: 2421, column: 91, scope: !11562)
!11572 = !DILocation(line: 2421, column: 106, scope: !11562)
!11573 = !DILocation(line: 2421, column: 21, scope: !11562)
!11574 = !DILocation(line: 2422, column: 33, scope: !11562)
!11575 = !DILocation(line: 2422, column: 37, scope: !11562)
!11576 = !DILocation(line: 2422, column: 45, scope: !11562)
!11577 = !DILocation(line: 2422, column: 53, scope: !11562)
!11578 = !DILocation(line: 2422, column: 61, scope: !11562)
!11579 = !DILocation(line: 2422, column: 68, scope: !11562)
!11580 = !DILocation(line: 2422, column: 75, scope: !11562)
!11581 = !DILocation(line: 2422, column: 82, scope: !11562)
!11582 = !DILocation(line: 2422, column: 97, scope: !11562)
!11583 = !DILocation(line: 2422, column: 12, scope: !11562)
!11584 = !DILocation(line: 2425, column: 11, scope: !11585)
!11585 = distinct !DILexicalBlock(scope: !11559, file: !3, line: 2425, column: 11)
!11586 = !DILocation(line: 2425, column: 19, scope: !11585)
!11587 = !DILocation(line: 2425, column: 22, scope: !11585)
!11588 = !DILocation(line: 2425, column: 11, scope: !11559)
!11589 = !DILocation(line: 2426, column: 25, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11585, file: !3, line: 2425, column: 37)
!11591 = !DILocation(line: 2426, column: 30, scope: !11590)
!11592 = !DILocation(line: 2426, column: 34, scope: !11590)
!11593 = !DILocation(line: 2426, column: 47, scope: !11590)
!11594 = !DILocation(line: 2426, column: 51, scope: !11590)
!11595 = !DILocation(line: 2426, column: 56, scope: !11590)
!11596 = !DILocation(line: 2426, column: 54, scope: !11590)
!11597 = !DILocation(line: 2426, column: 44, scope: !11590)
!11598 = !DILocation(line: 2426, column: 62, scope: !11590)
!11599 = !DILocation(line: 2426, column: 66, scope: !11590)
!11600 = !DILocation(line: 2426, column: 70, scope: !11590)
!11601 = !DILocation(line: 2426, column: 83, scope: !11590)
!11602 = !DILocation(line: 2426, column: 87, scope: !11590)
!11603 = !DILocation(line: 2426, column: 92, scope: !11590)
!11604 = !DILocation(line: 2426, column: 90, scope: !11590)
!11605 = !DILocation(line: 2426, column: 80, scope: !11590)
!11606 = !DILocation(line: 2426, column: 98, scope: !11590)
!11607 = !DILocation(line: 2426, column: 102, scope: !11590)
!11608 = !DILocation(line: 2426, column: 106, scope: !11590)
!11609 = !DILocation(line: 2426, column: 119, scope: !11590)
!11610 = !DILocation(line: 2426, column: 123, scope: !11590)
!11611 = !DILocation(line: 2426, column: 128, scope: !11590)
!11612 = !DILocation(line: 2426, column: 126, scope: !11590)
!11613 = !DILocation(line: 2426, column: 116, scope: !11590)
!11614 = !DILocation(line: 2426, column: 134, scope: !11590)
!11615 = !DILocation(line: 2426, column: 138, scope: !11590)
!11616 = !DILocation(line: 2426, column: 8, scope: !11590)
!11617 = !DILocation(line: 2427, column: 12, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11590, file: !3, line: 2427, column: 12)
!11619 = !DILocation(line: 2427, column: 20, scope: !11618)
!11620 = !DILocation(line: 2427, column: 47, scope: !11618)
!11621 = !DILocation(line: 2427, column: 51, scope: !11618)
!11622 = !DILocation(line: 2427, column: 57, scope: !11618)
!11623 = !DILocation(line: 2427, column: 23, scope: !11618)
!11624 = !DILocation(line: 2427, column: 12, scope: !11590)
!11625 = !DILocation(line: 2428, column: 9, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11618, file: !3, line: 2427, column: 69)
!11627 = !DILocation(line: 2430, column: 7, scope: !11590)
!11628 = !DILocation(line: 2435, column: 12, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11559, file: !3, line: 2435, column: 11)
!11630 = !DILocation(line: 2435, column: 16, scope: !11629)
!11631 = !DILocation(line: 2435, column: 27, scope: !11629)
!11632 = !DILocation(line: 2435, column: 37, scope: !11629)
!11633 = !DILocation(line: 2436, column: 42, scope: !11629)
!11634 = !DILocation(line: 2436, column: 46, scope: !11629)
!11635 = !DILocation(line: 2436, column: 63, scope: !11629)
!11636 = !DILocation(line: 2436, column: 75, scope: !11629)
!11637 = !DILocation(line: 2436, column: 12, scope: !11629)
!11638 = !DILocation(line: 2435, column: 11, scope: !11559)
!11639 = !DILocation(line: 2438, column: 42, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11629, file: !3, line: 2437, column: 7)
!11641 = !DILocation(line: 2438, column: 46, scope: !11640)
!11642 = !DILocation(line: 2438, column: 58, scope: !11640)
!11643 = !DILocation(line: 2438, column: 64, scope: !11640)
!11644 = !DILocation(line: 2438, column: 15, scope: !11640)
!11645 = !DILocation(line: 2438, column: 13, scope: !11640)
!11646 = !DILocation(line: 2440, column: 12, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11640, file: !3, line: 2440, column: 12)
!11648 = !DILocation(line: 2440, column: 17, scope: !11647)
!11649 = !DILocation(line: 2440, column: 12, scope: !11640)
!11650 = !DILocation(line: 2442, column: 17, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !11647, file: !3, line: 2440, column: 25)
!11652 = !DILocation(line: 2443, column: 44, scope: !11651)
!11653 = !DILocation(line: 2443, column: 48, scope: !11651)
!11654 = !DILocation(line: 2443, column: 62, scope: !11651)
!11655 = !DILocation(line: 2443, column: 65, scope: !11651)
!11656 = !DILocation(line: 2443, column: 68, scope: !11651)
!11657 = !DILocation(line: 2443, column: 74, scope: !11651)
!11658 = !DILocation(line: 2444, column: 44, scope: !11651)
!11659 = !DILocation(line: 2444, column: 59, scope: !11651)
!11660 = !DILocation(line: 2444, column: 64, scope: !11651)
!11661 = !DILocation(line: 2444, column: 70, scope: !11651)
!11662 = !DILocation(line: 2443, column: 17, scope: !11651)
!11663 = !DILocation(line: 2445, column: 17, scope: !11651)
!11664 = !DILocation(line: 2441, column: 9, scope: !11651)
!11665 = !DILocation(line: 2447, column: 8, scope: !11651)
!11666 = !DILocation(line: 2448, column: 7, scope: !11640)
!11667 = !DILocation(line: 2450, column: 6, scope: !11559)
!11668 = !DILocation(line: 2452, column: 15, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11542, file: !3, line: 2452, column: 15)
!11670 = !DILocation(line: 2452, column: 15, scope: !11542)
!11671 = !DILocation(line: 2454, column: 7, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11669, file: !3, line: 2452, column: 28)
!11673 = !DILocation(line: 2457, column: 5, scope: !11535)
!11674 = !DILocation(line: 2409, column: 51, scope: !11530)
!11675 = !DILocation(line: 2409, column: 5, scope: !11530)
!11676 = distinct !{!11676, !11533, !11677}
!11677 = !DILocation(line: 2457, column: 5, scope: !11526)
!11678 = !DILocation(line: 2466, column: 4, scope: !11518)
!11679 = !DILocation(line: 2404, column: 50, scope: !11513)
!11680 = !DILocation(line: 2404, column: 4, scope: !11513)
!11681 = distinct !{!11681, !11516, !11682}
!11682 = !DILocation(line: 2466, column: 4, scope: !11509)
!11683 = !DILocation(line: 2467, column: 3, scope: !11474)
!11684 = !DILocation(line: 2468, column: 2, scope: !11408)
!11685 = !DILocation(line: 2468, column: 15, scope: !11144)
!11686 = distinct !{!11686, !11405, !11687}
!11687 = !DILocation(line: 2468, column: 17, scope: !11144)
!11688 = !DILocation(line: 2473, column: 6, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11144, file: !3, line: 2473, column: 6)
!11690 = !DILocation(line: 2473, column: 10, scope: !11689)
!11691 = !DILocation(line: 2473, column: 24, scope: !11689)
!11692 = !DILocation(line: 2473, column: 6, scope: !11144)
!11693 = !DILocalVariable(name: "face_seam_flag", scope: !11694, file: !3, line: 2474, type: !22)
!11694 = distinct !DILexicalBlock(scope: !11689, file: !3, line: 2473, column: 32)
!11695 = !DILocation(line: 2474, column: 7, scope: !11694)
!11696 = !DILocation(line: 2476, column: 7, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11694, file: !3, line: 2476, column: 7)
!11698 = !DILocation(line: 2476, column: 7, scope: !11694)
!11699 = !DILocation(line: 2477, column: 4, scope: !11697)
!11700 = !DILocation(line: 2479, column: 20, scope: !11694)
!11701 = !DILocation(line: 2479, column: 24, scope: !11694)
!11702 = !DILocation(line: 2479, column: 38, scope: !11694)
!11703 = !DILocation(line: 2479, column: 18, scope: !11694)
!11704 = !DILocation(line: 2482, column: 8, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11694, file: !3, line: 2482, column: 7)
!11706 = !DILocation(line: 2482, column: 23, scope: !11705)
!11707 = !DILocation(line: 2482, column: 64, scope: !11705)
!11708 = !DILocation(line: 2482, column: 69, scope: !11705)
!11709 = !DILocation(line: 2483, column: 8, scope: !11705)
!11710 = !DILocation(line: 2483, column: 23, scope: !11705)
!11711 = !DILocation(line: 2483, column: 64, scope: !11705)
!11712 = !DILocation(line: 2483, column: 69, scope: !11705)
!11713 = !DILocation(line: 2484, column: 8, scope: !11705)
!11714 = !DILocation(line: 2484, column: 23, scope: !11705)
!11715 = !DILocation(line: 2484, column: 64, scope: !11705)
!11716 = !DILocation(line: 2484, column: 69, scope: !11705)
!11717 = !DILocation(line: 2485, column: 8, scope: !11705)
!11718 = !DILocation(line: 2485, column: 23, scope: !11705)
!11719 = !DILocation(line: 2485, column: 64, scope: !11705)
!11720 = !DILocation(line: 2482, column: 7, scope: !11694)
!11721 = !DILocation(line: 2487, column: 28, scope: !11722)
!11722 = distinct !DILexicalBlock(scope: !11705, file: !3, line: 2486, column: 3)
!11723 = !DILocation(line: 2487, column: 32, scope: !11722)
!11724 = !DILocation(line: 2487, column: 44, scope: !11722)
!11725 = !DILocation(line: 2487, column: 48, scope: !11722)
!11726 = !DILocation(line: 2487, column: 4, scope: !11722)
!11727 = !DILocation(line: 2488, column: 21, scope: !11722)
!11728 = !DILocation(line: 2488, column: 25, scope: !11722)
!11729 = !DILocation(line: 2488, column: 39, scope: !11722)
!11730 = !DILocation(line: 2488, column: 19, scope: !11722)
!11731 = !DILocation(line: 2490, column: 3, scope: !11722)
!11732 = !DILocation(line: 2492, column: 8, scope: !11733)
!11733 = distinct !DILexicalBlock(scope: !11694, file: !3, line: 2492, column: 7)
!11734 = !DILocation(line: 2492, column: 23, scope: !11733)
!11735 = !DILocation(line: 2492, column: 98, scope: !11733)
!11736 = !DILocation(line: 2492, column: 7, scope: !11694)
!11737 = !DILocation(line: 2494, column: 8, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11739, file: !3, line: 2494, column: 8)
!11739 = distinct !DILexicalBlock(scope: !11733, file: !3, line: 2492, column: 104)
!11740 = !DILocation(line: 2494, column: 8, scope: !11739)
!11741 = !DILocation(line: 2495, column: 5, scope: !11738)
!11742 = !DILocation(line: 2497, column: 3, scope: !11739)
!11743 = !DILocalVariable(name: "outset_uv", scope: !11744, file: !3, line: 2502, type: !11745)
!11744 = distinct !DILexicalBlock(scope: !11733, file: !3, line: 2498, column: 8)
!11745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!11746 = !DILocation(line: 2502, column: 12, scope: !11744)
!11747 = !DILocation(line: 2502, column: 28, scope: !11744)
!11748 = !DILocation(line: 2502, column: 32, scope: !11744)
!11749 = !DILocation(line: 2502, column: 44, scope: !11744)
!11750 = !DILocalVariable(name: "insetCos", scope: !11744, file: !3, line: 2503, type: !11751)
!11751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 384, elements: !11752)
!11752 = !{!498, !186}
!11753 = !DILocation(line: 2503, column: 10, scope: !11744)
!11754 = !DILocalVariable(name: "vCoSS", scope: !11744, file: !3, line: 2505, type: !11243)
!11755 = !DILocation(line: 2505, column: 11, scope: !11744)
!11756 = !DILocalVariable(name: "bucket_clip_edges", scope: !11744, file: !3, line: 2507, type: !11757)
!11757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 128, elements: !11758)
!11758 = !{!819, !819}
!11759 = !DILocation(line: 2507, column: 10, scope: !11744)
!11760 = !DILocalVariable(name: "edge_verts_inset_clip", scope: !11744, file: !3, line: 2508, type: !11761)
!11761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 192, elements: !11762)
!11762 = !{!819, !186}
!11763 = !DILocation(line: 2508, column: 10, scope: !11744)
!11764 = !DILocalVariable(name: "fidx1", scope: !11744, file: !3, line: 2509, type: !22)
!11765 = !DILocation(line: 2509, column: 8, scope: !11744)
!11766 = !DILocalVariable(name: "fidx2", scope: !11744, file: !3, line: 2509, type: !22)
!11767 = !DILocation(line: 2509, column: 15, scope: !11744)
!11768 = !DILocalVariable(name: "seam_subsection", scope: !11744, file: !3, line: 2511, type: !2027)
!11769 = !DILocation(line: 2511, column: 10, scope: !11744)
!11770 = !DILocalVariable(name: "fac1", scope: !11744, file: !3, line: 2512, type: !184)
!11771 = !DILocation(line: 2512, column: 10, scope: !11744)
!11772 = !DILocalVariable(name: "fac2", scope: !11744, file: !3, line: 2512, type: !184)
!11773 = !DILocation(line: 2512, column: 16, scope: !11744)
!11774 = !DILocalVariable(name: "ftot", scope: !11744, file: !3, line: 2512, type: !184)
!11775 = !DILocation(line: 2512, column: 22, scope: !11744)
!11776 = !DILocation(line: 2515, column: 8, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11744, file: !3, line: 2515, column: 8)
!11778 = !DILocation(line: 2515, column: 24, scope: !11777)
!11779 = !DILocation(line: 2515, column: 8, scope: !11744)
!11780 = !DILocation(line: 2516, column: 21, scope: !11777)
!11781 = !DILocation(line: 2516, column: 37, scope: !11777)
!11782 = !DILocation(line: 2516, column: 48, scope: !11777)
!11783 = !DILocation(line: 2516, column: 52, scope: !11777)
!11784 = !DILocation(line: 2516, column: 67, scope: !11777)
!11785 = !DILocation(line: 2516, column: 73, scope: !11777)
!11786 = !DILocation(line: 2516, column: 76, scope: !11777)
!11787 = !DILocation(line: 2516, column: 82, scope: !11777)
!11788 = !DILocation(line: 2516, column: 85, scope: !11777)
!11789 = !DILocation(line: 2516, column: 89, scope: !11777)
!11790 = !DILocation(line: 2516, column: 92, scope: !11777)
!11791 = !DILocation(line: 2516, column: 5, scope: !11777)
!11792 = !DILocation(line: 2519, column: 8, scope: !11793)
!11793 = distinct !DILexicalBlock(scope: !11744, file: !3, line: 2519, column: 8)
!11794 = !DILocation(line: 2519, column: 8, scope: !11744)
!11795 = !DILocation(line: 2520, column: 5, scope: !11793)
!11796 = !DILocation(line: 2522, column: 15, scope: !11744)
!11797 = !DILocation(line: 2522, column: 19, scope: !11744)
!11798 = !DILocation(line: 2522, column: 32, scope: !11744)
!11799 = !DILocation(line: 2522, column: 36, scope: !11744)
!11800 = !DILocation(line: 2522, column: 4, scope: !11744)
!11801 = !DILocation(line: 2522, column: 13, scope: !11744)
!11802 = !DILocation(line: 2523, column: 15, scope: !11744)
!11803 = !DILocation(line: 2523, column: 19, scope: !11744)
!11804 = !DILocation(line: 2523, column: 32, scope: !11744)
!11805 = !DILocation(line: 2523, column: 36, scope: !11744)
!11806 = !DILocation(line: 2523, column: 4, scope: !11744)
!11807 = !DILocation(line: 2523, column: 13, scope: !11744)
!11808 = !DILocation(line: 2524, column: 15, scope: !11744)
!11809 = !DILocation(line: 2524, column: 19, scope: !11744)
!11810 = !DILocation(line: 2524, column: 32, scope: !11744)
!11811 = !DILocation(line: 2524, column: 36, scope: !11744)
!11812 = !DILocation(line: 2524, column: 4, scope: !11744)
!11813 = !DILocation(line: 2524, column: 13, scope: !11744)
!11814 = !DILocation(line: 2525, column: 8, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11744, file: !3, line: 2525, column: 8)
!11816 = !DILocation(line: 2525, column: 12, scope: !11815)
!11817 = !DILocation(line: 2525, column: 8, scope: !11744)
!11818 = !DILocation(line: 2526, column: 16, scope: !11815)
!11819 = !DILocation(line: 2526, column: 20, scope: !11815)
!11820 = !DILocation(line: 2526, column: 33, scope: !11815)
!11821 = !DILocation(line: 2526, column: 37, scope: !11815)
!11822 = !DILocation(line: 2526, column: 5, scope: !11815)
!11823 = !DILocation(line: 2526, column: 14, scope: !11815)
!11824 = !DILocation(line: 2529, column: 8, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11744, file: !3, line: 2529, column: 8)
!11826 = !DILocation(line: 2529, column: 8, scope: !11744)
!11827 = !DILocation(line: 2530, column: 9, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11829, file: !3, line: 2530, column: 9)
!11829 = distinct !DILexicalBlock(scope: !11825, file: !3, line: 2529, column: 18)
!11830 = !DILocation(line: 2530, column: 13, scope: !11828)
!11831 = !DILocation(line: 2530, column: 9, scope: !11829)
!11832 = !DILocation(line: 2530, column: 28, scope: !11828)
!11833 = !DILocation(line: 2530, column: 38, scope: !11828)
!11834 = !DILocation(line: 2530, column: 17, scope: !11828)
!11835 = !DILocation(line: 2531, column: 27, scope: !11828)
!11836 = !DILocation(line: 2531, column: 37, scope: !11828)
!11837 = !DILocation(line: 2531, column: 17, scope: !11828)
!11838 = !DILocation(line: 2532, column: 4, scope: !11829)
!11839 = !DILocation(line: 2534, column: 9, scope: !11840)
!11840 = distinct !DILexicalBlock(scope: !11841, file: !3, line: 2534, column: 9)
!11841 = distinct !DILexicalBlock(scope: !11825, file: !3, line: 2533, column: 9)
!11842 = !DILocation(line: 2534, column: 13, scope: !11840)
!11843 = !DILocation(line: 2534, column: 9, scope: !11841)
!11844 = !DILocation(line: 2534, column: 28, scope: !11840)
!11845 = !DILocation(line: 2534, column: 38, scope: !11840)
!11846 = !DILocation(line: 2534, column: 17, scope: !11840)
!11847 = !DILocation(line: 2535, column: 27, scope: !11840)
!11848 = !DILocation(line: 2535, column: 37, scope: !11840)
!11849 = !DILocation(line: 2535, column: 17, scope: !11840)
!11850 = !DILocation(line: 2538, column: 9, scope: !11744)
!11851 = !DILocation(line: 2540, column: 15, scope: !11852)
!11852 = distinct !DILexicalBlock(scope: !11744, file: !3, line: 2540, column: 4)
!11853 = !DILocation(line: 2540, column: 9, scope: !11852)
!11854 = !DILocation(line: 2540, column: 20, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11852, file: !3, line: 2540, column: 4)
!11856 = !DILocation(line: 2540, column: 29, scope: !11855)
!11857 = !DILocation(line: 2540, column: 33, scope: !11855)
!11858 = !DILocation(line: 2540, column: 26, scope: !11855)
!11859 = !DILocation(line: 2540, column: 4, scope: !11852)
!11860 = !DILocation(line: 2541, column: 9, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11862, file: !3, line: 2541, column: 9)
!11862 = distinct !DILexicalBlock(scope: !11855, file: !3, line: 2540, column: 55)
!11863 = !DILocation(line: 2541, column: 13, scope: !11861)
!11864 = !DILocation(line: 2541, column: 9, scope: !11862)
!11865 = !DILocation(line: 2541, column: 26, scope: !11861)
!11866 = !DILocation(line: 2541, column: 32, scope: !11861)
!11867 = !DILocation(line: 2541, column: 25, scope: !11861)
!11868 = !DILocation(line: 2541, column: 44, scope: !11861)
!11869 = !DILocation(line: 2541, column: 50, scope: !11861)
!11870 = !DILocation(line: 2541, column: 23, scope: !11861)
!11871 = !DILocation(line: 2541, column: 17, scope: !11861)
!11872 = !DILocation(line: 2542, column: 26, scope: !11861)
!11873 = !DILocation(line: 2542, column: 32, scope: !11861)
!11874 = !DILocation(line: 2542, column: 25, scope: !11861)
!11875 = !DILocation(line: 2542, column: 44, scope: !11861)
!11876 = !DILocation(line: 2542, column: 50, scope: !11861)
!11877 = !DILocation(line: 2542, column: 23, scope: !11861)
!11878 = !DILocation(line: 2544, column: 10, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11862, file: !3, line: 2544, column: 9)
!11880 = !DILocation(line: 2544, column: 33, scope: !11879)
!11881 = !DILocation(line: 2544, column: 30, scope: !11879)
!11882 = !DILocation(line: 2544, column: 25, scope: !11879)
!11883 = !DILocation(line: 2544, column: 41, scope: !11879)
!11884 = !DILocation(line: 2545, column: 26, scope: !11879)
!11885 = !DILocation(line: 2545, column: 47, scope: !11879)
!11886 = !DILocation(line: 2545, column: 41, scope: !11879)
!11887 = !DILocation(line: 2545, column: 61, scope: !11879)
!11888 = !DILocation(line: 2545, column: 55, scope: !11879)
!11889 = !DILocation(line: 2545, column: 69, scope: !11879)
!11890 = !DILocation(line: 2545, column: 91, scope: !11879)
!11891 = !DILocation(line: 2545, column: 9, scope: !11879)
!11892 = !DILocation(line: 2544, column: 9, scope: !11862)
!11893 = !DILocation(line: 2548, column: 28, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11879, file: !3, line: 2546, column: 5)
!11895 = !DILocation(line: 2548, column: 22, scope: !11894)
!11896 = !DILocation(line: 2548, column: 42, scope: !11894)
!11897 = !DILocation(line: 2548, column: 36, scope: !11894)
!11898 = !DILocation(line: 2548, column: 13, scope: !11894)
!11899 = !DILocation(line: 2548, column: 11, scope: !11894)
!11900 = !DILocation(line: 2550, column: 10, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11894, file: !3, line: 2550, column: 10)
!11902 = !DILocation(line: 2550, column: 15, scope: !11901)
!11903 = !DILocation(line: 2550, column: 10, scope: !11894)
!11904 = !DILocation(line: 2551, column: 11, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11906, file: !3, line: 2551, column: 11)
!11906 = distinct !DILexicalBlock(scope: !11901, file: !3, line: 2550, column: 23)
!11907 = !DILocation(line: 2551, column: 15, scope: !11905)
!11908 = !DILocation(line: 2551, column: 11, scope: !11906)
!11909 = !DILocation(line: 2552, column: 12, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11911, file: !3, line: 2552, column: 12)
!11911 = distinct !DILexicalBlock(scope: !11905, file: !3, line: 2551, column: 19)
!11912 = !DILocation(line: 2552, column: 18, scope: !11910)
!11913 = !DILocation(line: 2552, column: 23, scope: !11910)
!11914 = !DILocation(line: 2552, column: 26, scope: !11910)
!11915 = !DILocation(line: 2552, column: 32, scope: !11910)
!11916 = !DILocation(line: 2552, column: 12, scope: !11911)
!11917 = !DILocation(line: 2552, column: 43, scope: !11910)
!11918 = !DILocation(line: 2552, column: 38, scope: !11910)
!11919 = !DILocation(line: 2553, column: 18, scope: !11910)
!11920 = !DILocation(line: 2554, column: 7, scope: !11911)
!11921 = !DILocation(line: 2556, column: 29, scope: !11906)
!11922 = !DILocation(line: 2556, column: 23, scope: !11906)
!11923 = !DILocation(line: 2556, column: 37, scope: !11906)
!11924 = !DILocation(line: 2556, column: 14, scope: !11906)
!11925 = !DILocation(line: 2556, column: 61, scope: !11906)
!11926 = !DILocation(line: 2556, column: 59, scope: !11906)
!11927 = !DILocation(line: 2556, column: 12, scope: !11906)
!11928 = !DILocation(line: 2557, column: 29, scope: !11906)
!11929 = !DILocation(line: 2557, column: 23, scope: !11906)
!11930 = !DILocation(line: 2557, column: 37, scope: !11906)
!11931 = !DILocation(line: 2557, column: 14, scope: !11906)
!11932 = !DILocation(line: 2557, column: 61, scope: !11906)
!11933 = !DILocation(line: 2557, column: 59, scope: !11906)
!11934 = !DILocation(line: 2557, column: 12, scope: !11906)
!11935 = !DILocation(line: 2559, column: 22, scope: !11906)
!11936 = !DILocation(line: 2559, column: 57, scope: !11906)
!11937 = !DILocation(line: 2559, column: 42, scope: !11906)
!11938 = !DILocation(line: 2559, column: 80, scope: !11906)
!11939 = !DILocation(line: 2559, column: 65, scope: !11906)
!11940 = !DILocation(line: 2559, column: 88, scope: !11906)
!11941 = !DILocation(line: 2559, column: 7, scope: !11906)
!11942 = !DILocation(line: 2560, column: 22, scope: !11906)
!11943 = !DILocation(line: 2560, column: 57, scope: !11906)
!11944 = !DILocation(line: 2560, column: 42, scope: !11906)
!11945 = !DILocation(line: 2560, column: 80, scope: !11906)
!11946 = !DILocation(line: 2560, column: 65, scope: !11906)
!11947 = !DILocation(line: 2560, column: 88, scope: !11906)
!11948 = !DILocation(line: 2560, column: 7, scope: !11906)
!11949 = !DILocation(line: 2562, column: 22, scope: !11906)
!11950 = !DILocation(line: 2562, column: 42, scope: !11906)
!11951 = !DILocation(line: 2562, column: 52, scope: !11906)
!11952 = !DILocation(line: 2562, column: 60, scope: !11906)
!11953 = !DILocation(line: 2562, column: 70, scope: !11906)
!11954 = !DILocation(line: 2562, column: 78, scope: !11906)
!11955 = !DILocation(line: 2562, column: 7, scope: !11906)
!11956 = !DILocation(line: 2563, column: 22, scope: !11906)
!11957 = !DILocation(line: 2563, column: 42, scope: !11906)
!11958 = !DILocation(line: 2563, column: 52, scope: !11906)
!11959 = !DILocation(line: 2563, column: 60, scope: !11906)
!11960 = !DILocation(line: 2563, column: 70, scope: !11906)
!11961 = !DILocation(line: 2563, column: 78, scope: !11906)
!11962 = !DILocation(line: 2563, column: 7, scope: !11906)
!11963 = !DILocation(line: 2567, column: 22, scope: !11906)
!11964 = !DILocation(line: 2567, column: 57, scope: !11906)
!11965 = !DILocation(line: 2567, column: 48, scope: !11906)
!11966 = !DILocation(line: 2567, column: 74, scope: !11906)
!11967 = !DILocation(line: 2567, column: 65, scope: !11906)
!11968 = !DILocation(line: 2567, column: 82, scope: !11906)
!11969 = !DILocation(line: 2567, column: 7, scope: !11906)
!11970 = !DILocation(line: 2568, column: 22, scope: !11906)
!11971 = !DILocation(line: 2568, column: 57, scope: !11906)
!11972 = !DILocation(line: 2568, column: 48, scope: !11906)
!11973 = !DILocation(line: 2568, column: 74, scope: !11906)
!11974 = !DILocation(line: 2568, column: 65, scope: !11906)
!11975 = !DILocation(line: 2568, column: 82, scope: !11906)
!11976 = !DILocation(line: 2568, column: 7, scope: !11906)
!11977 = !DILocation(line: 2571, column: 27, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !11906, file: !3, line: 2571, column: 11)
!11979 = !DILocation(line: 2571, column: 47, scope: !11978)
!11980 = !DILocation(line: 2571, column: 67, scope: !11978)
!11981 = !DILocation(line: 2571, column: 87, scope: !11978)
!11982 = !DILocation(line: 2571, column: 119, scope: !11978)
!11983 = !DILocation(line: 2571, column: 125, scope: !11978)
!11984 = !DILocation(line: 2571, column: 128, scope: !11978)
!11985 = !DILocation(line: 2571, column: 134, scope: !11978)
!11986 = !DILocation(line: 2571, column: 11, scope: !11978)
!11987 = !DILocation(line: 2571, column: 11, scope: !11906)
!11988 = !DILocation(line: 2574, column: 18, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11978, file: !3, line: 2571, column: 144)
!11990 = !DILocation(line: 2575, column: 27, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11989, file: !3, line: 2575, column: 8)
!11992 = !DILocation(line: 2575, column: 15, scope: !11991)
!11993 = !DILocation(line: 2575, column: 13, scope: !11991)
!11994 = !DILocation(line: 2575, column: 33, scope: !11995)
!11995 = distinct !DILexicalBlock(scope: !11991, file: !3, line: 2575, column: 8)
!11996 = !DILocation(line: 2575, column: 47, scope: !11995)
!11997 = !DILocation(line: 2575, column: 35, scope: !11995)
!11998 = !DILocation(line: 2575, column: 8, scope: !11991)
!11999 = !DILocation(line: 2577, column: 24, scope: !12000)
!12000 = distinct !DILexicalBlock(scope: !11995, file: !3, line: 2575, column: 58)
!12001 = !DILocation(line: 2577, column: 17, scope: !12000)
!12002 = !DILocation(line: 2577, column: 28, scope: !12000)
!12003 = !DILocation(line: 2577, column: 26, scope: !12000)
!12004 = !DILocation(line: 2577, column: 9, scope: !12000)
!12005 = !DILocation(line: 2577, column: 15, scope: !12000)
!12006 = !DILocation(line: 2579, column: 21, scope: !12000)
!12007 = !DILocation(line: 2580, column: 28, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !12000, file: !3, line: 2580, column: 9)
!12009 = !DILocation(line: 2580, column: 16, scope: !12008)
!12010 = !DILocation(line: 2580, column: 14, scope: !12008)
!12011 = !DILocation(line: 2580, column: 34, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 2580, column: 9)
!12013 = !DILocation(line: 2580, column: 48, scope: !12012)
!12014 = !DILocation(line: 2580, column: 36, scope: !12012)
!12015 = !DILocation(line: 2580, column: 9, scope: !12008)
!12016 = !DILocation(line: 2582, column: 25, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !12012, file: !3, line: 2580, column: 59)
!12018 = !DILocation(line: 2582, column: 18, scope: !12017)
!12019 = !DILocation(line: 2582, column: 29, scope: !12017)
!12020 = !DILocation(line: 2582, column: 27, scope: !12017)
!12021 = !DILocation(line: 2582, column: 10, scope: !12017)
!12022 = !DILocation(line: 2582, column: 16, scope: !12017)
!12023 = !DILocation(line: 2585, column: 34, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12017, file: !3, line: 2585, column: 14)
!12025 = !DILocation(line: 2585, column: 38, scope: !12024)
!12026 = !DILocation(line: 2585, column: 58, scope: !12024)
!12027 = !DILocation(line: 2585, column: 78, scope: !12024)
!12028 = !DILocation(line: 2585, column: 98, scope: !12024)
!12029 = !DILocation(line: 2585, column: 14, scope: !12024)
!12030 = !DILocation(line: 2585, column: 14, scope: !12017)
!12031 = !DILocalVariable(name: "fac", scope: !12032, file: !3, line: 2586, type: !184)
!12032 = distinct !DILexicalBlock(scope: !12024, file: !3, line: 2585, column: 119)
!12033 = !DILocation(line: 2586, column: 17, scope: !12032)
!12034 = !DILocation(line: 2600, column: 38, scope: !12032)
!12035 = !DILocation(line: 2600, column: 42, scope: !12032)
!12036 = !DILocation(line: 2600, column: 62, scope: !12032)
!12037 = !DILocation(line: 2600, column: 17, scope: !12032)
!12038 = !DILocation(line: 2600, column: 15, scope: !12032)
!12039 = !DILocation(line: 2601, column: 20, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12032, file: !3, line: 2601, column: 20)
!12041 = !DILocation(line: 2601, column: 24, scope: !12040)
!12042 = !DILocation(line: 2601, column: 20, scope: !12032)
!12043 = !DILocation(line: 2601, column: 45, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12040, file: !3, line: 2601, column: 32)
!12045 = !DILocation(line: 2601, column: 60, scope: !12044)
!12046 = !DILocation(line: 2601, column: 34, scope: !12044)
!12047 = !DILocation(line: 2601, column: 87, scope: !12044)
!12048 = !DILocation(line: 2602, column: 20, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12040, file: !3, line: 2602, column: 20)
!12050 = !DILocation(line: 2602, column: 24, scope: !12049)
!12051 = !DILocation(line: 2602, column: 20, scope: !12040)
!12052 = !DILocation(line: 2602, column: 45, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12049, file: !3, line: 2602, column: 32)
!12054 = !DILocation(line: 2602, column: 60, scope: !12053)
!12055 = !DILocation(line: 2602, column: 34, scope: !12053)
!12056 = !DILocation(line: 2602, column: 87, scope: !12053)
!12057 = !DILocation(line: 2603, column: 49, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12049, file: !3, line: 2603, column: 32)
!12059 = !DILocation(line: 2603, column: 64, scope: !12058)
!12060 = !DILocation(line: 2603, column: 90, scope: !12058)
!12061 = !DILocation(line: 2603, column: 116, scope: !12058)
!12062 = !DILocation(line: 2603, column: 34, scope: !12058)
!12063 = !DILocation(line: 2605, column: 16, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12032, file: !3, line: 2605, column: 15)
!12065 = !DILocation(line: 2605, column: 15, scope: !12032)
!12066 = !DILocation(line: 2606, column: 12, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !12064, file: !3, line: 2605, column: 26)
!12068 = !DILocation(line: 2606, column: 29, scope: !12067)
!12069 = !DILocation(line: 2607, column: 35, scope: !12067)
!12070 = !DILocation(line: 2607, column: 39, scope: !12067)
!12071 = !DILocation(line: 2607, column: 51, scope: !12067)
!12072 = !DILocation(line: 2607, column: 12, scope: !12067)
!12073 = !DILocation(line: 2608, column: 39, scope: !12067)
!12074 = !DILocation(line: 2608, column: 43, scope: !12067)
!12075 = !DILocation(line: 2608, column: 48, scope: !12067)
!12076 = !DILocation(line: 2608, column: 59, scope: !12067)
!12077 = !DILocation(line: 2608, column: 63, scope: !12067)
!12078 = !DILocation(line: 2608, column: 68, scope: !12067)
!12079 = !DILocation(line: 2608, column: 78, scope: !12067)
!12080 = !DILocation(line: 2608, column: 76, scope: !12067)
!12081 = !DILocation(line: 2608, column: 97, scope: !12067)
!12082 = !DILocation(line: 2608, column: 95, scope: !12067)
!12083 = !DILocation(line: 2608, column: 56, scope: !12067)
!12084 = !DILocation(line: 2608, column: 12, scope: !12067)
!12085 = !DILocation(line: 2608, column: 29, scope: !12067)
!12086 = !DILocation(line: 2609, column: 39, scope: !12067)
!12087 = !DILocation(line: 2609, column: 43, scope: !12067)
!12088 = !DILocation(line: 2609, column: 48, scope: !12067)
!12089 = !DILocation(line: 2609, column: 59, scope: !12067)
!12090 = !DILocation(line: 2609, column: 63, scope: !12067)
!12091 = !DILocation(line: 2609, column: 68, scope: !12067)
!12092 = !DILocation(line: 2609, column: 78, scope: !12067)
!12093 = !DILocation(line: 2609, column: 76, scope: !12067)
!12094 = !DILocation(line: 2609, column: 97, scope: !12067)
!12095 = !DILocation(line: 2609, column: 95, scope: !12067)
!12096 = !DILocation(line: 2609, column: 56, scope: !12067)
!12097 = !DILocation(line: 2609, column: 12, scope: !12067)
!12098 = !DILocation(line: 2609, column: 29, scope: !12067)
!12099 = !DILocation(line: 2610, column: 31, scope: !12067)
!12100 = !DILocation(line: 2610, column: 50, scope: !12067)
!12101 = !DILocation(line: 2610, column: 48, scope: !12067)
!12102 = !DILocation(line: 2610, column: 12, scope: !12067)
!12103 = !DILocation(line: 2610, column: 29, scope: !12067)
!12104 = !DILocation(line: 2611, column: 11, scope: !12067)
!12105 = !DILocation(line: 2613, column: 16, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !12032, file: !3, line: 2613, column: 15)
!12107 = !DILocation(line: 2613, column: 20, scope: !12106)
!12108 = !DILocation(line: 2613, column: 31, scope: !12106)
!12109 = !DILocation(line: 2613, column: 41, scope: !12106)
!12110 = !DILocation(line: 2614, column: 46, scope: !12106)
!12111 = !DILocation(line: 2614, column: 50, scope: !12106)
!12112 = !DILocation(line: 2614, column: 67, scope: !12106)
!12113 = !DILocation(line: 2614, column: 79, scope: !12106)
!12114 = !DILocation(line: 2614, column: 16, scope: !12106)
!12115 = !DILocation(line: 2613, column: 15, scope: !12032)
!12116 = !DILocation(line: 2617, column: 16, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !12118, file: !3, line: 2617, column: 16)
!12118 = distinct !DILexicalBlock(scope: !12106, file: !3, line: 2615, column: 11)
!12119 = !DILocation(line: 2617, column: 20, scope: !12117)
!12120 = !DILocation(line: 2617, column: 35, scope: !12117)
!12121 = !DILocation(line: 2617, column: 38, scope: !12117)
!12122 = !DILocation(line: 2617, column: 42, scope: !12117)
!12123 = !DILocation(line: 2617, column: 16, scope: !12118)
!12124 = !DILocalVariable(name: "uv_close", scope: !12125, file: !3, line: 2620, type: !860)
!12125 = distinct !DILexicalBlock(scope: !12117, file: !3, line: 2617, column: 59)
!12126 = !DILocation(line: 2620, column: 19, scope: !12125)
!12127 = !DILocalVariable(name: "uv_fac", scope: !12125, file: !3, line: 2621, type: !184)
!12128 = !DILocation(line: 2621, column: 19, scope: !12125)
!12129 = !DILocation(line: 2621, column: 47, scope: !12125)
!12130 = !DILocation(line: 2621, column: 57, scope: !12125)
!12131 = !DILocation(line: 2621, column: 76, scope: !12125)
!12132 = !DILocation(line: 2621, column: 61, scope: !12125)
!12133 = !DILocation(line: 2621, column: 99, scope: !12125)
!12134 = !DILocation(line: 2621, column: 84, scope: !12125)
!12135 = !DILocation(line: 2621, column: 28, scope: !12125)
!12136 = !DILocation(line: 2622, column: 22, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12125, file: !3, line: 2622, column: 22)
!12138 = !DILocation(line: 2622, column: 29, scope: !12137)
!12139 = !DILocation(line: 2622, column: 22, scope: !12125)
!12140 = !DILocation(line: 2622, column: 48, scope: !12137)
!12141 = !DILocation(line: 2622, column: 73, scope: !12137)
!12142 = !DILocation(line: 2622, column: 58, scope: !12137)
!12143 = !DILocation(line: 2622, column: 37, scope: !12137)
!12144 = !DILocation(line: 2623, column: 22, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12137, file: !3, line: 2623, column: 22)
!12146 = !DILocation(line: 2623, column: 29, scope: !12145)
!12147 = !DILocation(line: 2623, column: 22, scope: !12137)
!12148 = !DILocation(line: 2623, column: 48, scope: !12145)
!12149 = !DILocation(line: 2623, column: 73, scope: !12145)
!12150 = !DILocation(line: 2623, column: 58, scope: !12145)
!12151 = !DILocation(line: 2623, column: 37, scope: !12145)
!12152 = !DILocation(line: 2625, column: 17, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12125, file: !3, line: 2625, column: 17)
!12154 = !DILocation(line: 2625, column: 17, scope: !12125)
!12155 = !DILocation(line: 2626, column: 37, scope: !12156)
!12156 = distinct !DILexicalBlock(scope: !12153, file: !3, line: 2625, column: 23)
!12157 = !DILocation(line: 2626, column: 56, scope: !12156)
!12158 = !DILocation(line: 2626, column: 75, scope: !12156)
!12159 = !DILocation(line: 2626, column: 94, scope: !12156)
!12160 = !DILocation(line: 2626, column: 104, scope: !12156)
!12161 = !DILocation(line: 2626, column: 14, scope: !12156)
!12162 = !DILocation(line: 2627, column: 13, scope: !12156)
!12163 = !DILocation(line: 2629, column: 37, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12153, file: !3, line: 2628, column: 18)
!12165 = !DILocation(line: 2629, column: 56, scope: !12164)
!12166 = !DILocation(line: 2629, column: 75, scope: !12164)
!12167 = !DILocation(line: 2629, column: 94, scope: !12164)
!12168 = !DILocation(line: 2629, column: 104, scope: !12164)
!12169 = !DILocation(line: 2629, column: 14, scope: !12164)
!12170 = !DILocation(line: 2646, column: 12, scope: !12125)
!12171 = !DILocation(line: 2649, column: 16, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12118, file: !3, line: 2649, column: 16)
!12173 = !DILocation(line: 2649, column: 24, scope: !12172)
!12174 = !DILocation(line: 2649, column: 27, scope: !12172)
!12175 = !DILocation(line: 2649, column: 16, scope: !12118)
!12176 = !DILocation(line: 2650, column: 17, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12178, file: !3, line: 2650, column: 17)
!12178 = distinct !DILexicalBlock(scope: !12172, file: !3, line: 2649, column: 42)
!12179 = !DILocation(line: 2650, column: 17, scope: !12178)
!12180 = !DILocation(line: 2650, column: 40, scope: !12177)
!12181 = !DILocation(line: 2650, column: 45, scope: !12177)
!12182 = !DILocation(line: 2650, column: 49, scope: !12177)
!12183 = !DILocation(line: 2650, column: 58, scope: !12177)
!12184 = !DILocation(line: 2650, column: 62, scope: !12177)
!12185 = !DILocation(line: 2650, column: 66, scope: !12177)
!12186 = !DILocation(line: 2650, column: 70, scope: !12177)
!12187 = !DILocation(line: 2650, column: 74, scope: !12177)
!12188 = !DILocation(line: 2650, column: 83, scope: !12177)
!12189 = !DILocation(line: 2650, column: 87, scope: !12177)
!12190 = !DILocation(line: 2650, column: 91, scope: !12177)
!12191 = !DILocation(line: 2650, column: 95, scope: !12177)
!12192 = !DILocation(line: 2650, column: 99, scope: !12177)
!12193 = !DILocation(line: 2650, column: 108, scope: !12177)
!12194 = !DILocation(line: 2650, column: 112, scope: !12177)
!12195 = !DILocation(line: 2650, column: 116, scope: !12177)
!12196 = !DILocation(line: 2650, column: 120, scope: !12177)
!12197 = !DILocation(line: 2650, column: 23, scope: !12177)
!12198 = !DILocation(line: 2651, column: 40, scope: !12177)
!12199 = !DILocation(line: 2651, column: 45, scope: !12177)
!12200 = !DILocation(line: 2651, column: 49, scope: !12177)
!12201 = !DILocation(line: 2651, column: 58, scope: !12177)
!12202 = !DILocation(line: 2651, column: 62, scope: !12177)
!12203 = !DILocation(line: 2651, column: 66, scope: !12177)
!12204 = !DILocation(line: 2651, column: 70, scope: !12177)
!12205 = !DILocation(line: 2651, column: 74, scope: !12177)
!12206 = !DILocation(line: 2651, column: 83, scope: !12177)
!12207 = !DILocation(line: 2651, column: 87, scope: !12177)
!12208 = !DILocation(line: 2651, column: 91, scope: !12177)
!12209 = !DILocation(line: 2651, column: 95, scope: !12177)
!12210 = !DILocation(line: 2651, column: 99, scope: !12177)
!12211 = !DILocation(line: 2651, column: 108, scope: !12177)
!12212 = !DILocation(line: 2651, column: 112, scope: !12177)
!12213 = !DILocation(line: 2651, column: 116, scope: !12177)
!12214 = !DILocation(line: 2651, column: 120, scope: !12177)
!12215 = !DILocation(line: 2651, column: 23, scope: !12177)
!12216 = !DILocation(line: 2653, column: 17, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12178, file: !3, line: 2653, column: 17)
!12218 = !DILocation(line: 2653, column: 25, scope: !12217)
!12219 = !DILocation(line: 2653, column: 52, scope: !12217)
!12220 = !DILocation(line: 2653, column: 56, scope: !12217)
!12221 = !DILocation(line: 2653, column: 62, scope: !12217)
!12222 = !DILocation(line: 2653, column: 28, scope: !12217)
!12223 = !DILocation(line: 2653, column: 17, scope: !12178)
!12224 = !DILocation(line: 2654, column: 14, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12217, file: !3, line: 2653, column: 74)
!12226 = !DILocation(line: 2656, column: 12, scope: !12178)
!12227 = !DILocation(line: 2658, column: 46, scope: !12118)
!12228 = !DILocation(line: 2658, column: 50, scope: !12118)
!12229 = !DILocation(line: 2658, column: 62, scope: !12118)
!12230 = !DILocation(line: 2658, column: 68, scope: !12118)
!12231 = !DILocation(line: 2658, column: 19, scope: !12118)
!12232 = !DILocation(line: 2658, column: 17, scope: !12118)
!12233 = !DILocation(line: 2660, column: 16, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12118, file: !3, line: 2660, column: 16)
!12235 = !DILocation(line: 2660, column: 21, scope: !12234)
!12236 = !DILocation(line: 2660, column: 16, scope: !12118)
!12237 = !DILocation(line: 2662, column: 21, scope: !12238)
!12238 = distinct !DILexicalBlock(scope: !12234, file: !3, line: 2660, column: 29)
!12239 = !DILocation(line: 2663, column: 48, scope: !12238)
!12240 = !DILocation(line: 2663, column: 52, scope: !12238)
!12241 = !DILocation(line: 2663, column: 66, scope: !12238)
!12242 = !DILocation(line: 2663, column: 69, scope: !12238)
!12243 = !DILocation(line: 2663, column: 72, scope: !12238)
!12244 = !DILocation(line: 2663, column: 78, scope: !12238)
!12245 = !DILocation(line: 2664, column: 21, scope: !12238)
!12246 = !DILocation(line: 2664, column: 36, scope: !12238)
!12247 = !DILocation(line: 2664, column: 41, scope: !12238)
!12248 = !DILocation(line: 2664, column: 47, scope: !12238)
!12249 = !DILocation(line: 2663, column: 21, scope: !12238)
!12250 = !DILocation(line: 2665, column: 21, scope: !12238)
!12251 = !DILocation(line: 2661, column: 13, scope: !12238)
!12252 = !DILocation(line: 2667, column: 12, scope: !12238)
!12253 = !DILocation(line: 2669, column: 11, scope: !12118)
!12254 = !DILocation(line: 2670, column: 10, scope: !12032)
!12255 = !DILocation(line: 2671, column: 19, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !12024, file: !3, line: 2671, column: 19)
!12257 = !DILocation(line: 2671, column: 19, scope: !12024)
!12258 = !DILocation(line: 2673, column: 11, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12256, file: !3, line: 2671, column: 32)
!12260 = !DILocation(line: 2675, column: 9, scope: !12017)
!12261 = !DILocation(line: 2580, column: 55, scope: !12012)
!12262 = !DILocation(line: 2580, column: 9, scope: !12012)
!12263 = distinct !{!12263, !12015, !12264}
!12264 = !DILocation(line: 2675, column: 9, scope: !12008)
!12265 = !DILocation(line: 2683, column: 8, scope: !12000)
!12266 = !DILocation(line: 2575, column: 54, scope: !11995)
!12267 = !DILocation(line: 2575, column: 8, scope: !11995)
!12268 = distinct !{!12268, !11998, !12269}
!12269 = !DILocation(line: 2683, column: 8, scope: !11991)
!12270 = !DILocation(line: 2684, column: 7, scope: !11989)
!12271 = !DILocation(line: 2685, column: 6, scope: !11906)
!12272 = !DILocation(line: 2686, column: 5, scope: !11894)
!12273 = !DILocation(line: 2687, column: 4, scope: !11862)
!12274 = !DILocation(line: 2540, column: 51, scope: !11855)
!12275 = !DILocation(line: 2540, column: 4, scope: !11855)
!12276 = distinct !{!12276, !11859, !12277}
!12277 = !DILocation(line: 2687, column: 4, scope: !11852)
!12278 = !DILocation(line: 2689, column: 2, scope: !11694)
!12279 = !DILocation(line: 2691, column: 1, scope: !11144)
!12280 = distinct !DISubprogram(name: "project_paint_face_paint_image", scope: !3, file: !3, line: 370, type: !12281, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!12281 = !DISubroutineType(types: !12282)
!12282 = !{!3861, !9396, !22}
!12283 = !DILocalVariable(name: "ps", arg: 1, scope: !12280, file: !3, line: 370, type: !9396)
!12284 = !DILocation(line: 370, column: 68, scope: !12280)
!12285 = !DILocalVariable(name: "face_index", arg: 2, scope: !12280, file: !3, line: 370, type: !22)
!12286 = !DILocation(line: 370, column: 76, scope: !12280)
!12287 = !DILocation(line: 372, column: 6, scope: !12288)
!12288 = distinct !DILexicalBlock(scope: !12280, file: !3, line: 372, column: 6)
!12289 = !DILocation(line: 372, column: 10, scope: !12288)
!12290 = !DILocation(line: 372, column: 6, scope: !12280)
!12291 = !DILocation(line: 373, column: 10, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12288, file: !3, line: 372, column: 28)
!12293 = !DILocation(line: 373, column: 14, scope: !12292)
!12294 = !DILocation(line: 373, column: 3, scope: !12292)
!12295 = !DILocalVariable(name: "mf", scope: !12296, file: !3, line: 376, type: !3852)
!12296 = distinct !DILexicalBlock(scope: !12288, file: !3, line: 375, column: 7)
!12297 = !DILocation(line: 376, column: 10, scope: !12296)
!12298 = !DILocation(line: 376, column: 15, scope: !12296)
!12299 = !DILocation(line: 376, column: 19, scope: !12296)
!12300 = !DILocation(line: 376, column: 30, scope: !12296)
!12301 = !DILocation(line: 376, column: 28, scope: !12296)
!12302 = !DILocalVariable(name: "ma", scope: !12296, file: !3, line: 377, type: !7763)
!12303 = !DILocation(line: 377, column: 13, scope: !12296)
!12304 = !DILocation(line: 377, column: 18, scope: !12296)
!12305 = !DILocation(line: 377, column: 22, scope: !12296)
!12306 = !DILocation(line: 377, column: 26, scope: !12296)
!12307 = !DILocation(line: 377, column: 30, scope: !12296)
!12308 = !DILocation(line: 377, column: 34, scope: !12296)
!12309 = !DILocalVariable(name: "slot", scope: !12296, file: !3, line: 378, type: !5093)
!12310 = !DILocation(line: 378, column: 17, scope: !12296)
!12311 = !DILocation(line: 378, column: 24, scope: !12296)
!12312 = !DILocation(line: 378, column: 29, scope: !12296)
!12313 = !DILocation(line: 378, column: 33, scope: !12296)
!12314 = !DILocation(line: 378, column: 48, scope: !12296)
!12315 = !DILocation(line: 378, column: 52, scope: !12296)
!12316 = !DILocation(line: 378, column: 46, scope: !12296)
!12317 = !DILocation(line: 379, column: 10, scope: !12296)
!12318 = !DILocation(line: 379, column: 17, scope: !12296)
!12319 = !DILocation(line: 379, column: 23, scope: !12296)
!12320 = !DILocation(line: 379, column: 29, scope: !12296)
!12321 = !DILocation(line: 379, column: 33, scope: !12296)
!12322 = !DILocation(line: 379, column: 3, scope: !12296)
!12323 = !DILocation(line: 381, column: 1, scope: !12280)
!12324 = distinct !DISubprogram(name: "project_bucket_clip_face", scope: !3, file: !3, line: 1936, type: !12325, scopeLine: 1943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!12325 = !DISubroutineType(types: !12326)
!12326 = !{null, !2035, !9496, !216, !216, !216, !1944, !1944, !1944, !11745, !224}
!12327 = !DILocalVariable(name: "is_ortho", arg: 1, scope: !12324, file: !3, line: 1937, type: !2035)
!12328 = !DILocation(line: 1937, column: 20, scope: !12324)
!12329 = !DILocalVariable(name: "bucket_bounds", arg: 2, scope: !12324, file: !3, line: 1938, type: !9496)
!12330 = !DILocation(line: 1938, column: 15, scope: !12324)
!12331 = !DILocalVariable(name: "v1coSS", arg: 3, scope: !12324, file: !3, line: 1939, type: !216)
!12332 = !DILocation(line: 1939, column: 16, scope: !12324)
!12333 = !DILocalVariable(name: "v2coSS", arg: 4, scope: !12324, file: !3, line: 1939, type: !216)
!12334 = !DILocation(line: 1939, column: 31, scope: !12324)
!12335 = !DILocalVariable(name: "v3coSS", arg: 5, scope: !12324, file: !3, line: 1939, type: !216)
!12336 = !DILocation(line: 1939, column: 46, scope: !12324)
!12337 = !DILocalVariable(name: "uv1co", arg: 6, scope: !12324, file: !3, line: 1940, type: !1944)
!12338 = !DILocation(line: 1940, column: 22, scope: !12324)
!12339 = !DILocalVariable(name: "uv2co", arg: 7, scope: !12324, file: !3, line: 1940, type: !1944)
!12340 = !DILocation(line: 1940, column: 42, scope: !12324)
!12341 = !DILocalVariable(name: "uv3co", arg: 8, scope: !12324, file: !3, line: 1940, type: !1944)
!12342 = !DILocation(line: 1940, column: 62, scope: !12324)
!12343 = !DILocalVariable(name: "bucket_bounds_uv", arg: 9, scope: !12324, file: !3, line: 1941, type: !11745)
!12344 = !DILocation(line: 1941, column: 15, scope: !12324)
!12345 = !DILocalVariable(name: "tot", arg: 10, scope: !12324, file: !3, line: 1942, type: !224)
!12346 = !DILocation(line: 1942, column: 14, scope: !12324)
!12347 = !DILocalVariable(name: "inside_bucket_flag", scope: !12324, file: !3, line: 1944, type: !22)
!12348 = !DILocation(line: 1944, column: 6, scope: !12324)
!12349 = !DILocalVariable(name: "inside_face_flag", scope: !12324, file: !3, line: 1945, type: !22)
!12350 = !DILocation(line: 1945, column: 6, scope: !12324)
!12351 = !DILocalVariable(name: "flip", scope: !12324, file: !3, line: 1946, type: !5126)
!12352 = !DILocation(line: 1946, column: 12, scope: !12324)
!12353 = !DILocation(line: 1946, column: 40, scope: !12324)
!12354 = !DILocation(line: 1946, column: 48, scope: !12324)
!12355 = !DILocation(line: 1946, column: 56, scope: !12324)
!12356 = !DILocation(line: 1946, column: 21, scope: !12324)
!12357 = !DILocation(line: 1946, column: 64, scope: !12324)
!12358 = !DILocation(line: 1946, column: 95, scope: !12324)
!12359 = !DILocation(line: 1946, column: 102, scope: !12324)
!12360 = !DILocation(line: 1946, column: 109, scope: !12324)
!12361 = !DILocation(line: 1946, column: 76, scope: !12324)
!12362 = !DILocation(line: 1946, column: 116, scope: !12324)
!12363 = !DILocation(line: 1946, column: 72, scope: !12324)
!12364 = !DILocalVariable(name: "bucket_bounds_ss", scope: !12324, file: !3, line: 1948, type: !2027)
!12365 = !DILocation(line: 1948, column: 8, scope: !12324)
!12366 = !DILocation(line: 1951, column: 44, scope: !12324)
!12367 = !DILocation(line: 1951, column: 59, scope: !12324)
!12368 = !DILocation(line: 1951, column: 24, scope: !12324)
!12369 = !DILocation(line: 1951, column: 21, scope: !12324)
!12370 = !DILocation(line: 1952, column: 44, scope: !12324)
!12371 = !DILocation(line: 1952, column: 59, scope: !12324)
!12372 = !DILocation(line: 1952, column: 24, scope: !12324)
!12373 = !DILocation(line: 1952, column: 67, scope: !12324)
!12374 = !DILocation(line: 1952, column: 21, scope: !12324)
!12375 = !DILocation(line: 1953, column: 44, scope: !12324)
!12376 = !DILocation(line: 1953, column: 59, scope: !12324)
!12377 = !DILocation(line: 1953, column: 24, scope: !12324)
!12378 = !DILocation(line: 1953, column: 67, scope: !12324)
!12379 = !DILocation(line: 1953, column: 21, scope: !12324)
!12380 = !DILocation(line: 1955, column: 6, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12324, file: !3, line: 1955, column: 6)
!12382 = !DILocation(line: 1955, column: 25, scope: !12381)
!12383 = !DILocation(line: 1955, column: 6, scope: !12324)
!12384 = !DILocation(line: 1957, column: 7, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12386, file: !3, line: 1957, column: 7)
!12386 = distinct !DILexicalBlock(scope: !12381, file: !3, line: 1955, column: 40)
!12387 = !DILocation(line: 1957, column: 7, scope: !12386)
!12388 = !DILocation(line: 1958, column: 15, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12385, file: !3, line: 1957, column: 13)
!12390 = !DILocation(line: 1958, column: 36, scope: !12389)
!12391 = !DILocation(line: 1958, column: 4, scope: !12389)
!12392 = !DILocation(line: 1959, column: 15, scope: !12389)
!12393 = !DILocation(line: 1959, column: 36, scope: !12389)
!12394 = !DILocation(line: 1959, column: 4, scope: !12389)
!12395 = !DILocation(line: 1960, column: 15, scope: !12389)
!12396 = !DILocation(line: 1960, column: 36, scope: !12389)
!12397 = !DILocation(line: 1960, column: 4, scope: !12389)
!12398 = !DILocation(line: 1961, column: 3, scope: !12389)
!12399 = !DILocation(line: 1963, column: 15, scope: !12400)
!12400 = distinct !DILexicalBlock(scope: !12385, file: !3, line: 1962, column: 8)
!12401 = !DILocation(line: 1963, column: 36, scope: !12400)
!12402 = !DILocation(line: 1963, column: 4, scope: !12400)
!12403 = !DILocation(line: 1964, column: 15, scope: !12400)
!12404 = !DILocation(line: 1964, column: 36, scope: !12400)
!12405 = !DILocation(line: 1964, column: 4, scope: !12400)
!12406 = !DILocation(line: 1965, column: 15, scope: !12400)
!12407 = !DILocation(line: 1965, column: 36, scope: !12400)
!12408 = !DILocation(line: 1965, column: 4, scope: !12400)
!12409 = !DILocation(line: 1968, column: 4, scope: !12386)
!12410 = !DILocation(line: 1968, column: 8, scope: !12386)
!12411 = !DILocation(line: 1969, column: 3, scope: !12386)
!12412 = !DILocation(line: 1974, column: 27, scope: !12324)
!12413 = !DILocation(line: 1974, column: 42, scope: !12324)
!12414 = !DILocation(line: 1974, column: 2, scope: !12324)
!12415 = !DILocation(line: 1974, column: 25, scope: !12324)
!12416 = !DILocation(line: 1975, column: 27, scope: !12324)
!12417 = !DILocation(line: 1975, column: 42, scope: !12324)
!12418 = !DILocation(line: 1975, column: 2, scope: !12324)
!12419 = !DILocation(line: 1975, column: 25, scope: !12324)
!12420 = !DILocation(line: 1976, column: 40, scope: !12324)
!12421 = !DILocation(line: 1976, column: 61, scope: !12324)
!12422 = !DILocation(line: 1976, column: 69, scope: !12324)
!12423 = !DILocation(line: 1976, column: 77, scope: !12324)
!12424 = !DILocation(line: 1976, column: 23, scope: !12324)
!12425 = !DILocation(line: 1976, column: 19, scope: !12324)
!12426 = !DILocation(line: 1978, column: 27, scope: !12324)
!12427 = !DILocation(line: 1978, column: 42, scope: !12324)
!12428 = !DILocation(line: 1978, column: 2, scope: !12324)
!12429 = !DILocation(line: 1978, column: 25, scope: !12324)
!12430 = !DILocation(line: 1979, column: 27, scope: !12324)
!12431 = !DILocation(line: 1979, column: 42, scope: !12324)
!12432 = !DILocation(line: 1979, column: 2, scope: !12324)
!12433 = !DILocation(line: 1979, column: 25, scope: !12324)
!12434 = !DILocation(line: 1980, column: 40, scope: !12324)
!12435 = !DILocation(line: 1980, column: 61, scope: !12324)
!12436 = !DILocation(line: 1980, column: 69, scope: !12324)
!12437 = !DILocation(line: 1980, column: 77, scope: !12324)
!12438 = !DILocation(line: 1980, column: 23, scope: !12324)
!12439 = !DILocation(line: 1980, column: 19, scope: !12324)
!12440 = !DILocation(line: 1982, column: 27, scope: !12324)
!12441 = !DILocation(line: 1982, column: 42, scope: !12324)
!12442 = !DILocation(line: 1982, column: 2, scope: !12324)
!12443 = !DILocation(line: 1982, column: 25, scope: !12324)
!12444 = !DILocation(line: 1983, column: 27, scope: !12324)
!12445 = !DILocation(line: 1983, column: 42, scope: !12324)
!12446 = !DILocation(line: 1983, column: 2, scope: !12324)
!12447 = !DILocation(line: 1983, column: 25, scope: !12324)
!12448 = !DILocation(line: 1984, column: 40, scope: !12324)
!12449 = !DILocation(line: 1984, column: 61, scope: !12324)
!12450 = !DILocation(line: 1984, column: 69, scope: !12324)
!12451 = !DILocation(line: 1984, column: 77, scope: !12324)
!12452 = !DILocation(line: 1984, column: 23, scope: !12324)
!12453 = !DILocation(line: 1984, column: 19, scope: !12324)
!12454 = !DILocation(line: 1986, column: 27, scope: !12324)
!12455 = !DILocation(line: 1986, column: 42, scope: !12324)
!12456 = !DILocation(line: 1986, column: 2, scope: !12324)
!12457 = !DILocation(line: 1986, column: 25, scope: !12324)
!12458 = !DILocation(line: 1987, column: 27, scope: !12324)
!12459 = !DILocation(line: 1987, column: 42, scope: !12324)
!12460 = !DILocation(line: 1987, column: 2, scope: !12324)
!12461 = !DILocation(line: 1987, column: 25, scope: !12324)
!12462 = !DILocation(line: 1988, column: 40, scope: !12324)
!12463 = !DILocation(line: 1988, column: 61, scope: !12324)
!12464 = !DILocation(line: 1988, column: 69, scope: !12324)
!12465 = !DILocation(line: 1988, column: 77, scope: !12324)
!12466 = !DILocation(line: 1988, column: 23, scope: !12324)
!12467 = !DILocation(line: 1988, column: 19, scope: !12324)
!12468 = !DILocation(line: 1990, column: 6, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12324, file: !3, line: 1990, column: 6)
!12470 = !DILocation(line: 1990, column: 23, scope: !12469)
!12471 = !DILocation(line: 1990, column: 6, scope: !12324)
!12472 = !DILocation(line: 1993, column: 7, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12474, file: !3, line: 1993, column: 7)
!12474 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 1990, column: 38)
!12475 = !DILocation(line: 1993, column: 7, scope: !12474)
!12476 = !DILocation(line: 1993, column: 39, scope: !12473)
!12477 = !DILocation(line: 1993, column: 54, scope: !12473)
!12478 = !DILocation(line: 1993, column: 62, scope: !12473)
!12479 = !DILocation(line: 1993, column: 70, scope: !12473)
!12480 = !DILocation(line: 1993, column: 78, scope: !12473)
!12481 = !DILocation(line: 1993, column: 85, scope: !12473)
!12482 = !DILocation(line: 1993, column: 92, scope: !12473)
!12483 = !DILocation(line: 1993, column: 99, scope: !12473)
!12484 = !DILocation(line: 1993, column: 117, scope: !12473)
!12485 = !DILocation(line: 1993, column: 17, scope: !12473)
!12486 = !DILocation(line: 1994, column: 30, scope: !12473)
!12487 = !DILocation(line: 1994, column: 45, scope: !12473)
!12488 = !DILocation(line: 1994, column: 53, scope: !12473)
!12489 = !DILocation(line: 1994, column: 61, scope: !12473)
!12490 = !DILocation(line: 1994, column: 69, scope: !12473)
!12491 = !DILocation(line: 1994, column: 76, scope: !12473)
!12492 = !DILocation(line: 1994, column: 83, scope: !12473)
!12493 = !DILocation(line: 1994, column: 90, scope: !12473)
!12494 = !DILocation(line: 1994, column: 108, scope: !12473)
!12495 = !DILocation(line: 1994, column: 8, scope: !12473)
!12496 = !DILocation(line: 1996, column: 4, scope: !12474)
!12497 = !DILocation(line: 1996, column: 8, scope: !12474)
!12498 = !DILocation(line: 1997, column: 3, scope: !12474)
!12499 = !DILocalVariable(name: "isectVCosSS", scope: !12500, file: !3, line: 2017, type: !287)
!12500 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 1999, column: 7)
!12501 = !DILocation(line: 2017, column: 9, scope: !12500)
!12502 = !DILocalVariable(name: "v1_clipSS", scope: !12500, file: !3, line: 2018, type: !860)
!12503 = !DILocation(line: 2018, column: 9, scope: !12500)
!12504 = !DILocalVariable(name: "v2_clipSS", scope: !12500, file: !3, line: 2018, type: !860)
!12505 = !DILocation(line: 2018, column: 23, scope: !12500)
!12506 = !DILocalVariable(name: "w", scope: !12500, file: !3, line: 2019, type: !183)
!12507 = !DILocation(line: 2019, column: 9, scope: !12500)
!12508 = !DILocalVariable(name: "cent", scope: !12500, file: !3, line: 2022, type: !860)
!12509 = !DILocation(line: 2022, column: 9, scope: !12500)
!12510 = !DILocalVariable(name: "i", scope: !12500, file: !3, line: 2024, type: !22)
!12511 = !DILocation(line: 2024, column: 7, scope: !12500)
!12512 = !DILocalVariable(name: "doubles", scope: !12500, file: !3, line: 2025, type: !48)
!12513 = !DILocation(line: 2025, column: 9, scope: !12500)
!12514 = !DILocation(line: 2027, column: 5, scope: !12500)
!12515 = !DILocation(line: 2027, column: 10, scope: !12500)
!12516 = !DILocation(line: 2029, column: 7, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2029, column: 7)
!12518 = !DILocation(line: 2029, column: 24, scope: !12517)
!12519 = !DILocation(line: 2029, column: 7, scope: !12500)
!12520 = !DILocation(line: 2029, column: 61, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12517, file: !3, line: 2029, column: 35)
!12522 = !DILocation(line: 2029, column: 60, scope: !12521)
!12523 = !DILocation(line: 2029, column: 48, scope: !12521)
!12524 = !DILocation(line: 2029, column: 67, scope: !12521)
!12525 = !DILocation(line: 2029, column: 37, scope: !12521)
!12526 = !DILocation(line: 2029, column: 91, scope: !12521)
!12527 = !DILocation(line: 2029, column: 95, scope: !12521)
!12528 = !DILocation(line: 2029, column: 99, scope: !12521)
!12529 = !DILocation(line: 2030, column: 7, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2030, column: 7)
!12531 = !DILocation(line: 2030, column: 24, scope: !12530)
!12532 = !DILocation(line: 2030, column: 7, scope: !12500)
!12533 = !DILocation(line: 2030, column: 61, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12530, file: !3, line: 2030, column: 35)
!12535 = !DILocation(line: 2030, column: 60, scope: !12534)
!12536 = !DILocation(line: 2030, column: 48, scope: !12534)
!12537 = !DILocation(line: 2030, column: 67, scope: !12534)
!12538 = !DILocation(line: 2030, column: 37, scope: !12534)
!12539 = !DILocation(line: 2030, column: 91, scope: !12534)
!12540 = !DILocation(line: 2030, column: 95, scope: !12534)
!12541 = !DILocation(line: 2030, column: 99, scope: !12534)
!12542 = !DILocation(line: 2031, column: 7, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2031, column: 7)
!12544 = !DILocation(line: 2031, column: 24, scope: !12543)
!12545 = !DILocation(line: 2031, column: 7, scope: !12500)
!12546 = !DILocation(line: 2031, column: 61, scope: !12547)
!12547 = distinct !DILexicalBlock(scope: !12543, file: !3, line: 2031, column: 35)
!12548 = !DILocation(line: 2031, column: 60, scope: !12547)
!12549 = !DILocation(line: 2031, column: 48, scope: !12547)
!12550 = !DILocation(line: 2031, column: 67, scope: !12547)
!12551 = !DILocation(line: 2031, column: 37, scope: !12547)
!12552 = !DILocation(line: 2031, column: 91, scope: !12547)
!12553 = !DILocation(line: 2031, column: 95, scope: !12547)
!12554 = !DILocation(line: 2031, column: 99, scope: !12547)
!12555 = !DILocation(line: 2032, column: 7, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2032, column: 7)
!12557 = !DILocation(line: 2032, column: 24, scope: !12556)
!12558 = !DILocation(line: 2032, column: 7, scope: !12500)
!12559 = !DILocation(line: 2032, column: 61, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12556, file: !3, line: 2032, column: 35)
!12561 = !DILocation(line: 2032, column: 60, scope: !12560)
!12562 = !DILocation(line: 2032, column: 48, scope: !12560)
!12563 = !DILocation(line: 2032, column: 67, scope: !12560)
!12564 = !DILocation(line: 2032, column: 37, scope: !12560)
!12565 = !DILocation(line: 2032, column: 91, scope: !12560)
!12566 = !DILocation(line: 2032, column: 95, scope: !12560)
!12567 = !DILocation(line: 2032, column: 99, scope: !12560)
!12568 = !DILocation(line: 2034, column: 7, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2034, column: 7)
!12570 = !DILocation(line: 2034, column: 26, scope: !12569)
!12571 = !DILocation(line: 2034, column: 7, scope: !12500)
!12572 = !DILocation(line: 2034, column: 63, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12569, file: !3, line: 2034, column: 37)
!12574 = !DILocation(line: 2034, column: 62, scope: !12573)
!12575 = !DILocation(line: 2034, column: 50, scope: !12573)
!12576 = !DILocation(line: 2034, column: 69, scope: !12573)
!12577 = !DILocation(line: 2034, column: 39, scope: !12573)
!12578 = !DILocation(line: 2034, column: 80, scope: !12573)
!12579 = !DILocation(line: 2034, column: 84, scope: !12573)
!12580 = !DILocation(line: 2034, column: 88, scope: !12573)
!12581 = !DILocation(line: 2035, column: 7, scope: !12582)
!12582 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2035, column: 7)
!12583 = !DILocation(line: 2035, column: 26, scope: !12582)
!12584 = !DILocation(line: 2035, column: 7, scope: !12500)
!12585 = !DILocation(line: 2035, column: 63, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12582, file: !3, line: 2035, column: 37)
!12587 = !DILocation(line: 2035, column: 62, scope: !12586)
!12588 = !DILocation(line: 2035, column: 50, scope: !12586)
!12589 = !DILocation(line: 2035, column: 69, scope: !12586)
!12590 = !DILocation(line: 2035, column: 39, scope: !12586)
!12591 = !DILocation(line: 2035, column: 80, scope: !12586)
!12592 = !DILocation(line: 2035, column: 84, scope: !12586)
!12593 = !DILocation(line: 2035, column: 88, scope: !12586)
!12594 = !DILocation(line: 2036, column: 7, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2036, column: 7)
!12596 = !DILocation(line: 2036, column: 26, scope: !12595)
!12597 = !DILocation(line: 2036, column: 7, scope: !12500)
!12598 = !DILocation(line: 2036, column: 63, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !12595, file: !3, line: 2036, column: 37)
!12600 = !DILocation(line: 2036, column: 62, scope: !12599)
!12601 = !DILocation(line: 2036, column: 50, scope: !12599)
!12602 = !DILocation(line: 2036, column: 69, scope: !12599)
!12603 = !DILocation(line: 2036, column: 39, scope: !12599)
!12604 = !DILocation(line: 2036, column: 80, scope: !12599)
!12605 = !DILocation(line: 2036, column: 84, scope: !12599)
!12606 = !DILocation(line: 2036, column: 88, scope: !12599)
!12607 = !DILocation(line: 2038, column: 8, scope: !12608)
!12608 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2038, column: 7)
!12609 = !DILocation(line: 2038, column: 27, scope: !12608)
!12610 = !DILocation(line: 2038, column: 50, scope: !12608)
!12611 = !DILocation(line: 2038, column: 7, scope: !12500)
!12612 = !DILocation(line: 2039, column: 25, scope: !12613)
!12613 = distinct !DILexicalBlock(scope: !12614, file: !3, line: 2039, column: 8)
!12614 = distinct !DILexicalBlock(scope: !12608, file: !3, line: 2038, column: 74)
!12615 = !DILocation(line: 2039, column: 40, scope: !12613)
!12616 = !DILocation(line: 2039, column: 48, scope: !12613)
!12617 = !DILocation(line: 2039, column: 56, scope: !12613)
!12618 = !DILocation(line: 2039, column: 67, scope: !12613)
!12619 = !DILocation(line: 2039, column: 8, scope: !12613)
!12620 = !DILocation(line: 2039, column: 8, scope: !12614)
!12621 = !DILocation(line: 2040, column: 10, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !12623, file: !3, line: 2040, column: 9)
!12623 = distinct !DILexicalBlock(scope: !12613, file: !3, line: 2039, column: 79)
!12624 = !DILocation(line: 2040, column: 29, scope: !12622)
!12625 = !DILocation(line: 2040, column: 40, scope: !12622)
!12626 = !DILocation(line: 2040, column: 9, scope: !12623)
!12627 = !DILocation(line: 2040, column: 72, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12622, file: !3, line: 2040, column: 46)
!12629 = !DILocation(line: 2040, column: 71, scope: !12628)
!12630 = !DILocation(line: 2040, column: 59, scope: !12628)
!12631 = !DILocation(line: 2040, column: 78, scope: !12628)
!12632 = !DILocation(line: 2040, column: 48, scope: !12628)
!12633 = !DILocation(line: 2040, column: 92, scope: !12628)
!12634 = !DILocation(line: 2040, column: 96, scope: !12628)
!12635 = !DILocation(line: 2040, column: 100, scope: !12628)
!12636 = !DILocation(line: 2041, column: 10, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12623, file: !3, line: 2041, column: 9)
!12638 = !DILocation(line: 2041, column: 29, scope: !12637)
!12639 = !DILocation(line: 2041, column: 40, scope: !12637)
!12640 = !DILocation(line: 2041, column: 9, scope: !12623)
!12641 = !DILocation(line: 2041, column: 72, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12637, file: !3, line: 2041, column: 46)
!12643 = !DILocation(line: 2041, column: 71, scope: !12642)
!12644 = !DILocation(line: 2041, column: 59, scope: !12642)
!12645 = !DILocation(line: 2041, column: 78, scope: !12642)
!12646 = !DILocation(line: 2041, column: 48, scope: !12642)
!12647 = !DILocation(line: 2041, column: 92, scope: !12642)
!12648 = !DILocation(line: 2041, column: 96, scope: !12642)
!12649 = !DILocation(line: 2041, column: 100, scope: !12642)
!12650 = !DILocation(line: 2042, column: 4, scope: !12623)
!12651 = !DILocation(line: 2043, column: 3, scope: !12614)
!12652 = !DILocation(line: 2045, column: 8, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2045, column: 7)
!12654 = !DILocation(line: 2045, column: 27, scope: !12653)
!12655 = !DILocation(line: 2045, column: 50, scope: !12653)
!12656 = !DILocation(line: 2045, column: 7, scope: !12500)
!12657 = !DILocation(line: 2046, column: 25, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 2046, column: 8)
!12659 = distinct !DILexicalBlock(scope: !12653, file: !3, line: 2045, column: 74)
!12660 = !DILocation(line: 2046, column: 40, scope: !12658)
!12661 = !DILocation(line: 2046, column: 48, scope: !12658)
!12662 = !DILocation(line: 2046, column: 56, scope: !12658)
!12663 = !DILocation(line: 2046, column: 67, scope: !12658)
!12664 = !DILocation(line: 2046, column: 8, scope: !12658)
!12665 = !DILocation(line: 2046, column: 8, scope: !12659)
!12666 = !DILocation(line: 2047, column: 10, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12668, file: !3, line: 2047, column: 9)
!12668 = distinct !DILexicalBlock(scope: !12658, file: !3, line: 2046, column: 79)
!12669 = !DILocation(line: 2047, column: 29, scope: !12667)
!12670 = !DILocation(line: 2047, column: 40, scope: !12667)
!12671 = !DILocation(line: 2047, column: 9, scope: !12668)
!12672 = !DILocation(line: 2047, column: 72, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12667, file: !3, line: 2047, column: 46)
!12674 = !DILocation(line: 2047, column: 71, scope: !12673)
!12675 = !DILocation(line: 2047, column: 59, scope: !12673)
!12676 = !DILocation(line: 2047, column: 78, scope: !12673)
!12677 = !DILocation(line: 2047, column: 48, scope: !12673)
!12678 = !DILocation(line: 2047, column: 92, scope: !12673)
!12679 = !DILocation(line: 2047, column: 96, scope: !12673)
!12680 = !DILocation(line: 2047, column: 100, scope: !12673)
!12681 = !DILocation(line: 2048, column: 10, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12668, file: !3, line: 2048, column: 9)
!12683 = !DILocation(line: 2048, column: 29, scope: !12682)
!12684 = !DILocation(line: 2048, column: 40, scope: !12682)
!12685 = !DILocation(line: 2048, column: 9, scope: !12668)
!12686 = !DILocation(line: 2048, column: 72, scope: !12687)
!12687 = distinct !DILexicalBlock(scope: !12682, file: !3, line: 2048, column: 46)
!12688 = !DILocation(line: 2048, column: 71, scope: !12687)
!12689 = !DILocation(line: 2048, column: 59, scope: !12687)
!12690 = !DILocation(line: 2048, column: 78, scope: !12687)
!12691 = !DILocation(line: 2048, column: 48, scope: !12687)
!12692 = !DILocation(line: 2048, column: 92, scope: !12687)
!12693 = !DILocation(line: 2048, column: 96, scope: !12687)
!12694 = !DILocation(line: 2048, column: 100, scope: !12687)
!12695 = !DILocation(line: 2049, column: 4, scope: !12668)
!12696 = !DILocation(line: 2050, column: 3, scope: !12659)
!12697 = !DILocation(line: 2052, column: 8, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2052, column: 7)
!12699 = !DILocation(line: 2052, column: 27, scope: !12698)
!12700 = !DILocation(line: 2052, column: 50, scope: !12698)
!12701 = !DILocation(line: 2052, column: 7, scope: !12500)
!12702 = !DILocation(line: 2053, column: 25, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12704, file: !3, line: 2053, column: 8)
!12704 = distinct !DILexicalBlock(scope: !12698, file: !3, line: 2052, column: 74)
!12705 = !DILocation(line: 2053, column: 40, scope: !12703)
!12706 = !DILocation(line: 2053, column: 48, scope: !12703)
!12707 = !DILocation(line: 2053, column: 56, scope: !12703)
!12708 = !DILocation(line: 2053, column: 67, scope: !12703)
!12709 = !DILocation(line: 2053, column: 8, scope: !12703)
!12710 = !DILocation(line: 2053, column: 8, scope: !12704)
!12711 = !DILocation(line: 2054, column: 10, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 2054, column: 9)
!12713 = distinct !DILexicalBlock(scope: !12703, file: !3, line: 2053, column: 79)
!12714 = !DILocation(line: 2054, column: 29, scope: !12712)
!12715 = !DILocation(line: 2054, column: 40, scope: !12712)
!12716 = !DILocation(line: 2054, column: 9, scope: !12713)
!12717 = !DILocation(line: 2054, column: 72, scope: !12718)
!12718 = distinct !DILexicalBlock(scope: !12712, file: !3, line: 2054, column: 46)
!12719 = !DILocation(line: 2054, column: 71, scope: !12718)
!12720 = !DILocation(line: 2054, column: 59, scope: !12718)
!12721 = !DILocation(line: 2054, column: 78, scope: !12718)
!12722 = !DILocation(line: 2054, column: 48, scope: !12718)
!12723 = !DILocation(line: 2054, column: 92, scope: !12718)
!12724 = !DILocation(line: 2054, column: 96, scope: !12718)
!12725 = !DILocation(line: 2054, column: 100, scope: !12718)
!12726 = !DILocation(line: 2055, column: 10, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 2055, column: 9)
!12728 = !DILocation(line: 2055, column: 29, scope: !12727)
!12729 = !DILocation(line: 2055, column: 40, scope: !12727)
!12730 = !DILocation(line: 2055, column: 9, scope: !12713)
!12731 = !DILocation(line: 2055, column: 72, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12727, file: !3, line: 2055, column: 46)
!12733 = !DILocation(line: 2055, column: 71, scope: !12732)
!12734 = !DILocation(line: 2055, column: 59, scope: !12732)
!12735 = !DILocation(line: 2055, column: 78, scope: !12732)
!12736 = !DILocation(line: 2055, column: 48, scope: !12732)
!12737 = !DILocation(line: 2055, column: 92, scope: !12732)
!12738 = !DILocation(line: 2055, column: 96, scope: !12732)
!12739 = !DILocation(line: 2055, column: 100, scope: !12732)
!12740 = !DILocation(line: 2056, column: 4, scope: !12713)
!12741 = !DILocation(line: 2057, column: 3, scope: !12704)
!12742 = !DILocation(line: 2060, column: 9, scope: !12743)
!12743 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2060, column: 7)
!12744 = !DILocation(line: 2060, column: 8, scope: !12743)
!12745 = !DILocation(line: 2060, column: 14, scope: !12743)
!12746 = !DILocation(line: 2060, column: 7, scope: !12500)
!12747 = !DILocation(line: 2061, column: 5, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !12743, file: !3, line: 2060, column: 19)
!12749 = !DILocation(line: 2061, column: 9, scope: !12748)
!12750 = !DILocation(line: 2062, column: 4, scope: !12748)
!12751 = !DILocation(line: 2067, column: 10, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2067, column: 3)
!12753 = !DILocation(line: 2067, column: 8, scope: !12752)
!12754 = !DILocation(line: 2067, column: 15, scope: !12755)
!12755 = distinct !DILexicalBlock(scope: !12752, file: !3, line: 2067, column: 3)
!12756 = !DILocation(line: 2067, column: 21, scope: !12755)
!12757 = !DILocation(line: 2067, column: 20, scope: !12755)
!12758 = !DILocation(line: 2067, column: 17, scope: !12755)
!12759 = !DILocation(line: 2067, column: 3, scope: !12752)
!12760 = !DILocation(line: 2068, column: 27, scope: !12761)
!12761 = distinct !DILexicalBlock(scope: !12755, file: !3, line: 2067, column: 32)
!12762 = !DILocation(line: 2068, column: 15, scope: !12761)
!12763 = !DILocation(line: 2068, column: 4, scope: !12761)
!12764 = !DILocation(line: 2068, column: 12, scope: !12761)
!12765 = !DILocation(line: 2069, column: 27, scope: !12761)
!12766 = !DILocation(line: 2069, column: 15, scope: !12761)
!12767 = !DILocation(line: 2069, column: 4, scope: !12761)
!12768 = !DILocation(line: 2069, column: 12, scope: !12761)
!12769 = !DILocation(line: 2070, column: 3, scope: !12761)
!12770 = !DILocation(line: 2067, column: 28, scope: !12755)
!12771 = !DILocation(line: 2067, column: 3, scope: !12755)
!12772 = distinct !{!12772, !12759, !12773}
!12773 = !DILocation(line: 2070, column: 3, scope: !12752)
!12774 = !DILocation(line: 2071, column: 13, scope: !12500)
!12775 = !DILocation(line: 2071, column: 32, scope: !12500)
!12776 = !DILocation(line: 2071, column: 31, scope: !12500)
!12777 = !DILocation(line: 2071, column: 23, scope: !12500)
!12778 = !DILocation(line: 2071, column: 21, scope: !12500)
!12779 = !DILocation(line: 2071, column: 3, scope: !12500)
!12780 = !DILocation(line: 2071, column: 11, scope: !12500)
!12781 = !DILocation(line: 2072, column: 13, scope: !12500)
!12782 = !DILocation(line: 2072, column: 32, scope: !12500)
!12783 = !DILocation(line: 2072, column: 31, scope: !12500)
!12784 = !DILocation(line: 2072, column: 23, scope: !12500)
!12785 = !DILocation(line: 2072, column: 21, scope: !12500)
!12786 = !DILocation(line: 2072, column: 3, scope: !12500)
!12787 = !DILocation(line: 2072, column: 11, scope: !12500)
!12788 = !DILocation(line: 2085, column: 18, scope: !12500)
!12789 = !DILocation(line: 2085, column: 3, scope: !12500)
!12790 = !DILocation(line: 2085, column: 16, scope: !12500)
!12791 = !DILocation(line: 2086, column: 18, scope: !12500)
!12792 = !DILocation(line: 2086, column: 26, scope: !12500)
!12793 = !DILocation(line: 2086, column: 3, scope: !12500)
!12794 = !DILocation(line: 2086, column: 16, scope: !12500)
!12795 = !DILocation(line: 2088, column: 10, scope: !12796)
!12796 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2088, column: 3)
!12797 = !DILocation(line: 2088, column: 8, scope: !12796)
!12798 = !DILocation(line: 2088, column: 15, scope: !12799)
!12799 = distinct !DILexicalBlock(scope: !12796, file: !3, line: 2088, column: 3)
!12800 = !DILocation(line: 2088, column: 21, scope: !12799)
!12801 = !DILocation(line: 2088, column: 20, scope: !12799)
!12802 = !DILocation(line: 2088, column: 17, scope: !12799)
!12803 = !DILocation(line: 2088, column: 3, scope: !12796)
!12804 = !DILocation(line: 2089, column: 31, scope: !12805)
!12805 = distinct !DILexicalBlock(scope: !12799, file: !3, line: 2088, column: 32)
!12806 = !DILocation(line: 2089, column: 19, scope: !12805)
!12807 = !DILocation(line: 2089, column: 39, scope: !12805)
!12808 = !DILocation(line: 2089, column: 37, scope: !12805)
!12809 = !DILocation(line: 2089, column: 4, scope: !12805)
!12810 = !DILocation(line: 2089, column: 17, scope: !12805)
!12811 = !DILocation(line: 2090, column: 31, scope: !12805)
!12812 = !DILocation(line: 2090, column: 19, scope: !12805)
!12813 = !DILocation(line: 2090, column: 39, scope: !12805)
!12814 = !DILocation(line: 2090, column: 37, scope: !12805)
!12815 = !DILocation(line: 2090, column: 4, scope: !12805)
!12816 = !DILocation(line: 2090, column: 17, scope: !12805)
!12817 = !DILocation(line: 2091, column: 31, scope: !12805)
!12818 = !DILocation(line: 2091, column: 46, scope: !12805)
!12819 = !DILocation(line: 2091, column: 44, scope: !12805)
!12820 = !DILocation(line: 2091, column: 61, scope: !12805)
!12821 = !DILocation(line: 2091, column: 76, scope: !12805)
!12822 = !DILocation(line: 2091, column: 74, scope: !12805)
!12823 = !DILocation(line: 2091, column: 59, scope: !12805)
!12824 = !DILocation(line: 2091, column: 90, scope: !12805)
!12825 = !DILocation(line: 2091, column: 105, scope: !12805)
!12826 = !DILocation(line: 2091, column: 103, scope: !12805)
!12827 = !DILocation(line: 2091, column: 120, scope: !12805)
!12828 = !DILocation(line: 2091, column: 135, scope: !12805)
!12829 = !DILocation(line: 2091, column: 133, scope: !12805)
!12830 = !DILocation(line: 2091, column: 118, scope: !12805)
!12831 = !DILocation(line: 2091, column: 24, scope: !12805)
!12832 = !DILocation(line: 2091, column: 16, scope: !12805)
!12833 = !DILocation(line: 2091, column: 4, scope: !12805)
!12834 = !DILocation(line: 2091, column: 22, scope: !12805)
!12835 = !DILocation(line: 2092, column: 3, scope: !12805)
!12836 = !DILocation(line: 2088, column: 28, scope: !12799)
!12837 = !DILocation(line: 2088, column: 3, scope: !12799)
!12838 = distinct !{!12838, !12803, !12839}
!12839 = !DILocation(line: 2092, column: 3, scope: !12796)
!12840 = !DILocation(line: 2094, column: 7, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2094, column: 7)
!12842 = !DILocation(line: 2094, column: 7, scope: !12500)
!12843 = !DILocation(line: 2094, column: 19, scope: !12841)
!12844 = !DILocation(line: 2094, column: 33, scope: !12841)
!12845 = !DILocation(line: 2094, column: 32, scope: !12841)
!12846 = !DILocation(line: 2094, column: 13, scope: !12841)
!12847 = !DILocation(line: 2095, column: 19, scope: !12841)
!12848 = !DILocation(line: 2095, column: 33, scope: !12841)
!12849 = !DILocation(line: 2095, column: 32, scope: !12841)
!12850 = !DILocation(line: 2095, column: 13, scope: !12841)
!12851 = !DILocation(line: 2099, column: 13, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2099, column: 7)
!12853 = !DILocation(line: 2099, column: 47, scope: !12852)
!12854 = !DILocation(line: 2099, column: 46, scope: !12852)
!12855 = !DILocation(line: 2099, column: 52, scope: !12852)
!12856 = !DILocation(line: 2099, column: 33, scope: !12852)
!12857 = !DILocation(line: 2099, column: 31, scope: !12852)
!12858 = !DILocation(line: 2099, column: 7, scope: !12852)
!12859 = !DILocation(line: 2099, column: 61, scope: !12852)
!12860 = !DILocation(line: 2099, column: 84, scope: !12852)
!12861 = !DILocation(line: 2100, column: 13, scope: !12852)
!12862 = !DILocation(line: 2100, column: 47, scope: !12852)
!12863 = !DILocation(line: 2100, column: 46, scope: !12852)
!12864 = !DILocation(line: 2100, column: 52, scope: !12852)
!12865 = !DILocation(line: 2100, column: 33, scope: !12852)
!12866 = !DILocation(line: 2100, column: 31, scope: !12852)
!12867 = !DILocation(line: 2100, column: 7, scope: !12852)
!12868 = !DILocation(line: 2100, column: 61, scope: !12852)
!12869 = !DILocation(line: 2099, column: 7, scope: !12500)
!12870 = !DILocation(line: 2102, column: 6, scope: !12871)
!12871 = distinct !DILexicalBlock(scope: !12852, file: !3, line: 2101, column: 3)
!12872 = !DILocation(line: 2102, column: 10, scope: !12871)
!12873 = !DILocation(line: 2103, column: 3, scope: !12871)
!12874 = !DILocation(line: 2106, column: 9, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2106, column: 7)
!12876 = !DILocation(line: 2106, column: 8, scope: !12875)
!12877 = !DILocation(line: 2106, column: 14, scope: !12875)
!12878 = !DILocation(line: 2106, column: 7, scope: !12500)
!12879 = !DILocation(line: 2108, column: 5, scope: !12880)
!12880 = distinct !DILexicalBlock(scope: !12875, file: !3, line: 2106, column: 19)
!12881 = !DILocation(line: 2108, column: 9, scope: !12880)
!12882 = !DILocation(line: 2109, column: 4, scope: !12880)
!12883 = !DILocation(line: 2112, column: 11, scope: !12500)
!12884 = !DILocation(line: 2113, column: 3, scope: !12500)
!12885 = !DILocation(line: 2113, column: 10, scope: !12500)
!12886 = !DILocation(line: 2113, column: 18, scope: !12500)
!12887 = !DILocation(line: 2114, column: 12, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2113, column: 27)
!12889 = !DILocation(line: 2115, column: 11, scope: !12890)
!12890 = distinct !DILexicalBlock(scope: !12888, file: !3, line: 2115, column: 4)
!12891 = !DILocation(line: 2115, column: 9, scope: !12890)
!12892 = !DILocation(line: 2115, column: 16, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12890, file: !3, line: 2115, column: 4)
!12894 = !DILocation(line: 2115, column: 22, scope: !12893)
!12895 = !DILocation(line: 2115, column: 21, scope: !12893)
!12896 = !DILocation(line: 2115, column: 18, scope: !12893)
!12897 = !DILocation(line: 2115, column: 4, scope: !12890)
!12898 = !DILocation(line: 2116, column: 27, scope: !12899)
!12899 = distinct !DILexicalBlock(scope: !12900, file: !3, line: 2116, column: 9)
!12900 = distinct !DILexicalBlock(scope: !12893, file: !3, line: 2115, column: 33)
!12901 = !DILocation(line: 2116, column: 29, scope: !12899)
!12902 = !DILocation(line: 2116, column: 15, scope: !12899)
!12903 = !DILocation(line: 2116, column: 51, scope: !12899)
!12904 = !DILocation(line: 2116, column: 39, scope: !12899)
!12905 = !DILocation(line: 2116, column: 37, scope: !12899)
!12906 = !DILocation(line: 2116, column: 9, scope: !12899)
!12907 = !DILocation(line: 2116, column: 58, scope: !12899)
!12908 = !DILocation(line: 2116, column: 81, scope: !12899)
!12909 = !DILocation(line: 2117, column: 27, scope: !12899)
!12910 = !DILocation(line: 2117, column: 29, scope: !12899)
!12911 = !DILocation(line: 2117, column: 15, scope: !12899)
!12912 = !DILocation(line: 2117, column: 51, scope: !12899)
!12913 = !DILocation(line: 2117, column: 39, scope: !12899)
!12914 = !DILocation(line: 2117, column: 37, scope: !12899)
!12915 = !DILocation(line: 2117, column: 9, scope: !12899)
!12916 = !DILocation(line: 2117, column: 58, scope: !12899)
!12917 = !DILocation(line: 2116, column: 9, scope: !12900)
!12918 = !DILocalVariable(name: "j", scope: !12919, file: !3, line: 2119, type: !22)
!12919 = distinct !DILexicalBlock(scope: !12899, file: !3, line: 2118, column: 5)
!12920 = !DILocation(line: 2119, column: 10, scope: !12919)
!12921 = !DILocation(line: 2120, column: 15, scope: !12922)
!12922 = distinct !DILexicalBlock(scope: !12919, file: !3, line: 2120, column: 6)
!12923 = !DILocation(line: 2120, column: 17, scope: !12922)
!12924 = !DILocation(line: 2120, column: 13, scope: !12922)
!12925 = !DILocation(line: 2120, column: 11, scope: !12922)
!12926 = !DILocation(line: 2120, column: 22, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12922, file: !3, line: 2120, column: 6)
!12928 = !DILocation(line: 2120, column: 28, scope: !12927)
!12929 = !DILocation(line: 2120, column: 27, scope: !12927)
!12930 = !DILocation(line: 2120, column: 24, scope: !12927)
!12931 = !DILocation(line: 2120, column: 6, scope: !12922)
!12932 = !DILocation(line: 2121, column: 43, scope: !12933)
!12933 = distinct !DILexicalBlock(scope: !12927, file: !3, line: 2120, column: 39)
!12934 = !DILocation(line: 2121, column: 31, scope: !12933)
!12935 = !DILocation(line: 2121, column: 19, scope: !12933)
!12936 = !DILocation(line: 2121, column: 21, scope: !12933)
!12937 = !DILocation(line: 2121, column: 7, scope: !12933)
!12938 = !DILocation(line: 2121, column: 29, scope: !12933)
!12939 = !DILocation(line: 2122, column: 43, scope: !12933)
!12940 = !DILocation(line: 2122, column: 31, scope: !12933)
!12941 = !DILocation(line: 2122, column: 19, scope: !12933)
!12942 = !DILocation(line: 2122, column: 21, scope: !12933)
!12943 = !DILocation(line: 2122, column: 7, scope: !12933)
!12944 = !DILocation(line: 2122, column: 29, scope: !12933)
!12945 = !DILocation(line: 2123, column: 6, scope: !12933)
!12946 = !DILocation(line: 2120, column: 35, scope: !12927)
!12947 = !DILocation(line: 2120, column: 6, scope: !12927)
!12948 = distinct !{!12948, !12931, !12949}
!12949 = !DILocation(line: 2123, column: 6, scope: !12922)
!12950 = !DILocation(line: 2124, column: 14, scope: !12919)
!12951 = !DILocation(line: 2125, column: 8, scope: !12919)
!12952 = !DILocation(line: 2125, column: 12, scope: !12919)
!12953 = !DILocation(line: 2126, column: 5, scope: !12919)
!12954 = !DILocation(line: 2127, column: 4, scope: !12900)
!12955 = !DILocation(line: 2115, column: 29, scope: !12893)
!12956 = !DILocation(line: 2115, column: 4, scope: !12893)
!12957 = distinct !{!12957, !12897, !12958}
!12958 = !DILocation(line: 2127, column: 4, scope: !12890)
!12959 = distinct !{!12959, !12884, !12960}
!12960 = !DILocation(line: 2128, column: 3, scope: !12500)
!12961 = !DILocation(line: 2131, column: 9, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2131, column: 7)
!12963 = !DILocation(line: 2131, column: 8, scope: !12962)
!12964 = !DILocation(line: 2131, column: 14, scope: !12962)
!12965 = !DILocation(line: 2131, column: 7, scope: !12500)
!12966 = !DILocation(line: 2133, column: 5, scope: !12967)
!12967 = distinct !DILexicalBlock(scope: !12962, file: !3, line: 2131, column: 19)
!12968 = !DILocation(line: 2133, column: 9, scope: !12967)
!12969 = !DILocation(line: 2134, column: 4, scope: !12967)
!12970 = !DILocation(line: 2138, column: 7, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2138, column: 7)
!12972 = !DILocation(line: 2138, column: 7, scope: !12500)
!12973 = !DILocation(line: 2139, column: 11, scope: !12974)
!12974 = distinct !DILexicalBlock(scope: !12975, file: !3, line: 2139, column: 4)
!12975 = distinct !DILexicalBlock(scope: !12971, file: !3, line: 2138, column: 17)
!12976 = !DILocation(line: 2139, column: 9, scope: !12974)
!12977 = !DILocation(line: 2139, column: 16, scope: !12978)
!12978 = distinct !DILexicalBlock(scope: !12974, file: !3, line: 2139, column: 4)
!12979 = !DILocation(line: 2139, column: 22, scope: !12978)
!12980 = !DILocation(line: 2139, column: 21, scope: !12978)
!12981 = !DILocation(line: 2139, column: 18, scope: !12978)
!12982 = !DILocation(line: 2139, column: 4, scope: !12974)
!12983 = !DILocation(line: 2140, column: 28, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12978, file: !3, line: 2139, column: 33)
!12985 = !DILocation(line: 2140, column: 36, scope: !12984)
!12986 = !DILocation(line: 2140, column: 44, scope: !12984)
!12987 = !DILocation(line: 2140, column: 64, scope: !12984)
!12988 = !DILocation(line: 2140, column: 52, scope: !12984)
!12989 = !DILocation(line: 2140, column: 68, scope: !12984)
!12990 = !DILocation(line: 2140, column: 5, scope: !12984)
!12991 = !DILocation(line: 2141, column: 22, scope: !12984)
!12992 = !DILocation(line: 2141, column: 39, scope: !12984)
!12993 = !DILocation(line: 2141, column: 43, scope: !12984)
!12994 = !DILocation(line: 2141, column: 50, scope: !12984)
!12995 = !DILocation(line: 2141, column: 57, scope: !12984)
!12996 = !DILocation(line: 2141, column: 64, scope: !12984)
!12997 = !DILocation(line: 2141, column: 5, scope: !12984)
!12998 = !DILocation(line: 2142, column: 4, scope: !12984)
!12999 = !DILocation(line: 2139, column: 29, scope: !12978)
!13000 = !DILocation(line: 2139, column: 4, scope: !12978)
!13001 = distinct !{!13001, !12982, !13002}
!13002 = !DILocation(line: 2142, column: 4, scope: !12974)
!13003 = !DILocation(line: 2143, column: 3, scope: !12975)
!13004 = !DILocation(line: 2145, column: 11, scope: !13005)
!13005 = distinct !DILexicalBlock(scope: !13006, file: !3, line: 2145, column: 4)
!13006 = distinct !DILexicalBlock(scope: !12971, file: !3, line: 2144, column: 8)
!13007 = !DILocation(line: 2145, column: 9, scope: !13005)
!13008 = !DILocation(line: 2145, column: 16, scope: !13009)
!13009 = distinct !DILexicalBlock(scope: !13005, file: !3, line: 2145, column: 4)
!13010 = !DILocation(line: 2145, column: 22, scope: !13009)
!13011 = !DILocation(line: 2145, column: 21, scope: !13009)
!13012 = !DILocation(line: 2145, column: 18, scope: !13009)
!13013 = !DILocation(line: 2145, column: 4, scope: !13005)
!13014 = !DILocation(line: 2146, column: 34, scope: !13015)
!13015 = distinct !DILexicalBlock(scope: !13009, file: !3, line: 2145, column: 33)
!13016 = !DILocation(line: 2146, column: 42, scope: !13015)
!13017 = !DILocation(line: 2146, column: 50, scope: !13015)
!13018 = !DILocation(line: 2146, column: 70, scope: !13015)
!13019 = !DILocation(line: 2146, column: 58, scope: !13015)
!13020 = !DILocation(line: 2146, column: 74, scope: !13015)
!13021 = !DILocation(line: 2146, column: 5, scope: !13015)
!13022 = !DILocation(line: 2147, column: 22, scope: !13015)
!13023 = !DILocation(line: 2147, column: 39, scope: !13015)
!13024 = !DILocation(line: 2147, column: 43, scope: !13015)
!13025 = !DILocation(line: 2147, column: 50, scope: !13015)
!13026 = !DILocation(line: 2147, column: 57, scope: !13015)
!13027 = !DILocation(line: 2147, column: 64, scope: !13015)
!13028 = !DILocation(line: 2147, column: 5, scope: !13015)
!13029 = !DILocation(line: 2148, column: 4, scope: !13015)
!13030 = !DILocation(line: 2145, column: 29, scope: !13009)
!13031 = !DILocation(line: 2145, column: 4, scope: !13009)
!13032 = distinct !{!13032, !13013, !13033}
!13033 = !DILocation(line: 2148, column: 4, scope: !13005)
!13034 = !DILocation(line: 2172, column: 1, scope: !12324)
!13035 = distinct !DISubprogram(name: "pixel_bounds_array", scope: !3, file: !3, line: 871, type: !13036, scopeLine: 872, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!13036 = !DISubroutineType(types: !13037)
!13037 = !{!233, !11745, !13038, !5126, !5126, !22}
!13038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!13039 = !DILocalVariable(name: "uv", arg: 1, scope: !13035, file: !3, line: 871, type: !11745)
!13040 = !DILocation(line: 871, column: 40, scope: !13035)
!13041 = !DILocalVariable(name: "bounds_px", arg: 2, scope: !13035, file: !3, line: 871, type: !13038)
!13042 = !DILocation(line: 871, column: 54, scope: !13035)
!13043 = !DILocalVariable(name: "ibuf_x", arg: 3, scope: !13035, file: !3, line: 871, type: !5126)
!13044 = !DILocation(line: 871, column: 75, scope: !13035)
!13045 = !DILocalVariable(name: "ibuf_y", arg: 4, scope: !13035, file: !3, line: 871, type: !5126)
!13046 = !DILocation(line: 871, column: 93, scope: !13035)
!13047 = !DILocalVariable(name: "tot", arg: 5, scope: !13035, file: !3, line: 871, type: !22)
!13048 = !DILocation(line: 871, column: 105, scope: !13035)
!13049 = !DILocalVariable(name: "min_uv", scope: !13035, file: !3, line: 873, type: !860)
!13050 = !DILocation(line: 873, column: 8, scope: !13035)
!13051 = !DILocalVariable(name: "max_uv", scope: !13035, file: !3, line: 873, type: !860)
!13052 = !DILocation(line: 873, column: 19, scope: !13035)
!13053 = !DILocation(line: 875, column: 6, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !13035, file: !3, line: 875, column: 6)
!13055 = !DILocation(line: 875, column: 10, scope: !13054)
!13056 = !DILocation(line: 875, column: 6, scope: !13035)
!13057 = !DILocation(line: 876, column: 3, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13054, file: !3, line: 875, column: 16)
!13059 = !DILocation(line: 879, column: 2, scope: !13060)
!13060 = distinct !DILexicalBlock(scope: !13035, file: !3, line: 879, column: 2)
!13061 = !DILocation(line: 881, column: 2, scope: !13035)
!13062 = !DILocation(line: 881, column: 12, scope: !13035)
!13063 = !DILocation(line: 882, column: 18, scope: !13064)
!13064 = distinct !DILexicalBlock(scope: !13035, file: !3, line: 881, column: 16)
!13065 = !DILocation(line: 882, column: 26, scope: !13064)
!13066 = !DILocation(line: 882, column: 36, scope: !13064)
!13067 = !DILocation(line: 882, column: 34, scope: !13064)
!13068 = !DILocation(line: 882, column: 3, scope: !13064)
!13069 = !DILocation(line: 883, column: 5, scope: !13064)
!13070 = distinct !{!13070, !13061, !13071}
!13071 = !DILocation(line: 884, column: 2, scope: !13035)
!13072 = !DILocation(line: 886, column: 26, scope: !13035)
!13073 = !DILocation(line: 886, column: 35, scope: !13035)
!13074 = !DILocation(line: 886, column: 33, scope: !13035)
!13075 = !DILocation(line: 886, column: 20, scope: !13035)
!13076 = !DILocation(line: 886, column: 2, scope: !13035)
!13077 = !DILocation(line: 886, column: 13, scope: !13035)
!13078 = !DILocation(line: 886, column: 18, scope: !13035)
!13079 = !DILocation(line: 887, column: 26, scope: !13035)
!13080 = !DILocation(line: 887, column: 35, scope: !13035)
!13081 = !DILocation(line: 887, column: 33, scope: !13035)
!13082 = !DILocation(line: 887, column: 20, scope: !13035)
!13083 = !DILocation(line: 887, column: 2, scope: !13035)
!13084 = !DILocation(line: 887, column: 13, scope: !13035)
!13085 = !DILocation(line: 887, column: 18, scope: !13035)
!13086 = !DILocation(line: 889, column: 26, scope: !13035)
!13087 = !DILocation(line: 889, column: 35, scope: !13035)
!13088 = !DILocation(line: 889, column: 33, scope: !13035)
!13089 = !DILocation(line: 889, column: 20, scope: !13035)
!13090 = !DILocation(line: 889, column: 46, scope: !13035)
!13091 = !DILocation(line: 889, column: 2, scope: !13035)
!13092 = !DILocation(line: 889, column: 13, scope: !13035)
!13093 = !DILocation(line: 889, column: 18, scope: !13035)
!13094 = !DILocation(line: 890, column: 26, scope: !13035)
!13095 = !DILocation(line: 890, column: 35, scope: !13035)
!13096 = !DILocation(line: 890, column: 33, scope: !13035)
!13097 = !DILocation(line: 890, column: 20, scope: !13035)
!13098 = !DILocation(line: 890, column: 46, scope: !13035)
!13099 = !DILocation(line: 890, column: 2, scope: !13035)
!13100 = !DILocation(line: 890, column: 13, scope: !13035)
!13101 = !DILocation(line: 890, column: 18, scope: !13035)
!13102 = !DILocation(line: 895, column: 10, scope: !13035)
!13103 = !DILocation(line: 895, column: 21, scope: !13035)
!13104 = !DILocation(line: 895, column: 29, scope: !13035)
!13105 = !DILocation(line: 895, column: 40, scope: !13035)
!13106 = !DILocation(line: 895, column: 26, scope: !13035)
!13107 = !DILocation(line: 895, column: 45, scope: !13035)
!13108 = !DILocation(line: 895, column: 48, scope: !13035)
!13109 = !DILocation(line: 895, column: 59, scope: !13035)
!13110 = !DILocation(line: 895, column: 67, scope: !13035)
!13111 = !DILocation(line: 895, column: 78, scope: !13035)
!13112 = !DILocation(line: 895, column: 64, scope: !13035)
!13113 = !DILocation(line: 895, column: 9, scope: !13035)
!13114 = !DILocation(line: 895, column: 2, scope: !13035)
!13115 = !DILocation(line: 896, column: 1, scope: !13035)
!13116 = distinct !DISubprogram(name: "IsectPoly2Df", scope: !3, file: !3, line: 2231, type: !13117, scopeLine: 2232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!13117 = !DISubroutineType(types: !13118)
!13118 = !{!233, !1944, !11745, !5126}
!13119 = !DILocalVariable(name: "pt", arg: 1, scope: !13116, file: !3, line: 2231, type: !1944)
!13120 = !DILocation(line: 2231, column: 38, scope: !13116)
!13121 = !DILocalVariable(name: "uv", arg: 2, scope: !13116, file: !3, line: 2231, type: !11745)
!13122 = !DILocation(line: 2231, column: 51, scope: !13116)
!13123 = !DILocalVariable(name: "tot", arg: 3, scope: !13116, file: !3, line: 2231, type: !5126)
!13124 = !DILocation(line: 2231, column: 70, scope: !13116)
!13125 = !DILocalVariable(name: "i", scope: !13116, file: !3, line: 2233, type: !22)
!13126 = !DILocation(line: 2233, column: 6, scope: !13116)
!13127 = !DILocation(line: 2234, column: 25, scope: !13128)
!13128 = distinct !DILexicalBlock(scope: !13116, file: !3, line: 2234, column: 6)
!13129 = !DILocation(line: 2234, column: 28, scope: !13128)
!13130 = !DILocation(line: 2234, column: 32, scope: !13128)
!13131 = !DILocation(line: 2234, column: 38, scope: !13128)
!13132 = !DILocation(line: 2234, column: 45, scope: !13128)
!13133 = !DILocation(line: 2234, column: 6, scope: !13128)
!13134 = !DILocation(line: 2234, column: 49, scope: !13128)
!13135 = !DILocation(line: 2234, column: 6, scope: !13116)
!13136 = !DILocation(line: 2235, column: 3, scope: !13128)
!13137 = !DILocation(line: 2237, column: 9, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !13116, file: !3, line: 2237, column: 2)
!13139 = !DILocation(line: 2237, column: 7, scope: !13138)
!13140 = !DILocation(line: 2237, column: 14, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13138, file: !3, line: 2237, column: 2)
!13142 = !DILocation(line: 2237, column: 18, scope: !13141)
!13143 = !DILocation(line: 2237, column: 16, scope: !13141)
!13144 = !DILocation(line: 2237, column: 2, scope: !13138)
!13145 = !DILocation(line: 2238, column: 26, scope: !13146)
!13146 = distinct !DILexicalBlock(scope: !13147, file: !3, line: 2238, column: 7)
!13147 = distinct !DILexicalBlock(scope: !13141, file: !3, line: 2237, column: 28)
!13148 = !DILocation(line: 2238, column: 29, scope: !13146)
!13149 = !DILocation(line: 2238, column: 31, scope: !13146)
!13150 = !DILocation(line: 2238, column: 37, scope: !13146)
!13151 = !DILocation(line: 2238, column: 40, scope: !13146)
!13152 = !DILocation(line: 2238, column: 44, scope: !13146)
!13153 = !DILocation(line: 2238, column: 7, scope: !13146)
!13154 = !DILocation(line: 2238, column: 48, scope: !13146)
!13155 = !DILocation(line: 2238, column: 7, scope: !13147)
!13156 = !DILocation(line: 2239, column: 4, scope: !13146)
!13157 = !DILocation(line: 2241, column: 2, scope: !13147)
!13158 = !DILocation(line: 2237, column: 24, scope: !13141)
!13159 = !DILocation(line: 2237, column: 2, scope: !13141)
!13160 = distinct !{!13160, !13144, !13161}
!13161 = !DILocation(line: 2241, column: 2, scope: !13138)
!13162 = !DILocation(line: 2243, column: 2, scope: !13116)
!13163 = !DILocation(line: 2244, column: 1, scope: !13116)
!13164 = distinct !DISubprogram(name: "IsectPoly2Df_twoside", scope: !3, file: !3, line: 2245, type: !13117, scopeLine: 2246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!13165 = !DILocalVariable(name: "pt", arg: 1, scope: !13164, file: !3, line: 2245, type: !1944)
!13166 = !DILocation(line: 2245, column: 46, scope: !13164)
!13167 = !DILocalVariable(name: "uv", arg: 2, scope: !13164, file: !3, line: 2245, type: !11745)
!13168 = !DILocation(line: 2245, column: 59, scope: !13164)
!13169 = !DILocalVariable(name: "tot", arg: 3, scope: !13164, file: !3, line: 2245, type: !5126)
!13170 = !DILocation(line: 2245, column: 78, scope: !13164)
!13171 = !DILocalVariable(name: "i", scope: !13164, file: !3, line: 2247, type: !22)
!13172 = !DILocation(line: 2247, column: 6, scope: !13164)
!13173 = !DILocalVariable(name: "side", scope: !13164, file: !3, line: 2248, type: !22)
!13174 = !DILocation(line: 2248, column: 6, scope: !13164)
!13175 = !DILocation(line: 2248, column: 33, scope: !13164)
!13176 = !DILocation(line: 2248, column: 36, scope: !13164)
!13177 = !DILocation(line: 2248, column: 40, scope: !13164)
!13178 = !DILocation(line: 2248, column: 46, scope: !13164)
!13179 = !DILocation(line: 2248, column: 53, scope: !13164)
!13180 = !DILocation(line: 2248, column: 14, scope: !13164)
!13181 = !DILocation(line: 2248, column: 57, scope: !13164)
!13182 = !DILocation(line: 2250, column: 9, scope: !13183)
!13183 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 2250, column: 2)
!13184 = !DILocation(line: 2250, column: 7, scope: !13183)
!13185 = !DILocation(line: 2250, column: 14, scope: !13186)
!13186 = distinct !DILexicalBlock(scope: !13183, file: !3, line: 2250, column: 2)
!13187 = !DILocation(line: 2250, column: 18, scope: !13186)
!13188 = !DILocation(line: 2250, column: 16, scope: !13186)
!13189 = !DILocation(line: 2250, column: 2, scope: !13183)
!13190 = !DILocation(line: 2251, column: 27, scope: !13191)
!13191 = distinct !DILexicalBlock(scope: !13192, file: !3, line: 2251, column: 7)
!13192 = distinct !DILexicalBlock(scope: !13186, file: !3, line: 2250, column: 28)
!13193 = !DILocation(line: 2251, column: 30, scope: !13191)
!13194 = !DILocation(line: 2251, column: 32, scope: !13191)
!13195 = !DILocation(line: 2251, column: 38, scope: !13191)
!13196 = !DILocation(line: 2251, column: 41, scope: !13191)
!13197 = !DILocation(line: 2251, column: 45, scope: !13191)
!13198 = !DILocation(line: 2251, column: 8, scope: !13191)
!13199 = !DILocation(line: 2251, column: 49, scope: !13191)
!13200 = !DILocation(line: 2251, column: 60, scope: !13191)
!13201 = !DILocation(line: 2251, column: 57, scope: !13191)
!13202 = !DILocation(line: 2251, column: 7, scope: !13192)
!13203 = !DILocation(line: 2252, column: 4, scope: !13191)
!13204 = !DILocation(line: 2254, column: 2, scope: !13192)
!13205 = !DILocation(line: 2250, column: 24, scope: !13186)
!13206 = !DILocation(line: 2250, column: 2, scope: !13186)
!13207 = distinct !{!13207, !13189, !13208}
!13208 = !DILocation(line: 2254, column: 2, scope: !13183)
!13209 = !DILocation(line: 2256, column: 2, scope: !13164)
!13210 = !DILocation(line: 2257, column: 1, scope: !13164)
!13211 = distinct !DISubprogram(name: "screen_px_from_ortho", scope: !3, file: !3, line: 1138, type: !13212, scopeLine: 1144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!13212 = !DISubroutineType(types: !13213)
!13213 = !{null, !1944, !1944, !1944, !1944, !1944, !1944, !1944, !216, !216}
!13214 = !DILocalVariable(name: "uv", arg: 1, scope: !13211, file: !3, line: 1139, type: !1944)
!13215 = !DILocation(line: 1139, column: 21, scope: !13211)
!13216 = !DILocalVariable(name: "v1co", arg: 2, scope: !13211, file: !3, line: 1140, type: !1944)
!13217 = !DILocation(line: 1140, column: 21, scope: !13211)
!13218 = !DILocalVariable(name: "v2co", arg: 3, scope: !13211, file: !3, line: 1140, type: !1944)
!13219 = !DILocation(line: 1140, column: 42, scope: !13211)
!13220 = !DILocalVariable(name: "v3co", arg: 4, scope: !13211, file: !3, line: 1140, type: !1944)
!13221 = !DILocation(line: 1140, column: 63, scope: !13211)
!13222 = !DILocalVariable(name: "uv1co", arg: 5, scope: !13211, file: !3, line: 1141, type: !1944)
!13223 = !DILocation(line: 1141, column: 21, scope: !13211)
!13224 = !DILocalVariable(name: "uv2co", arg: 6, scope: !13211, file: !3, line: 1141, type: !1944)
!13225 = !DILocation(line: 1141, column: 43, scope: !13211)
!13226 = !DILocalVariable(name: "uv3co", arg: 7, scope: !13211, file: !3, line: 1141, type: !1944)
!13227 = !DILocation(line: 1141, column: 65, scope: !13211)
!13228 = !DILocalVariable(name: "pixelScreenCo", arg: 8, scope: !13211, file: !3, line: 1142, type: !216)
!13229 = !DILocation(line: 1142, column: 15, scope: !13211)
!13230 = !DILocalVariable(name: "w", arg: 9, scope: !13211, file: !3, line: 1143, type: !216)
!13231 = !DILocation(line: 1143, column: 15, scope: !13211)
!13232 = !DILocation(line: 1145, column: 25, scope: !13211)
!13233 = !DILocation(line: 1145, column: 32, scope: !13211)
!13234 = !DILocation(line: 1145, column: 39, scope: !13211)
!13235 = !DILocation(line: 1145, column: 46, scope: !13211)
!13236 = !DILocation(line: 1145, column: 50, scope: !13211)
!13237 = !DILocation(line: 1145, column: 2, scope: !13211)
!13238 = !DILocation(line: 1146, column: 19, scope: !13211)
!13239 = !DILocation(line: 1146, column: 34, scope: !13211)
!13240 = !DILocation(line: 1146, column: 40, scope: !13211)
!13241 = !DILocation(line: 1146, column: 46, scope: !13211)
!13242 = !DILocation(line: 1146, column: 52, scope: !13211)
!13243 = !DILocation(line: 1146, column: 2, scope: !13211)
!13244 = !DILocation(line: 1147, column: 1, scope: !13211)
!13245 = distinct !DISubprogram(name: "screen_px_from_persp", scope: !3, file: !3, line: 1151, type: !13212, scopeLine: 1157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!13246 = !DILocalVariable(name: "uv", arg: 1, scope: !13245, file: !3, line: 1152, type: !1944)
!13247 = !DILocation(line: 1152, column: 21, scope: !13245)
!13248 = !DILocalVariable(name: "v1co", arg: 2, scope: !13245, file: !3, line: 1153, type: !1944)
!13249 = !DILocation(line: 1153, column: 21, scope: !13245)
!13250 = !DILocalVariable(name: "v2co", arg: 3, scope: !13245, file: !3, line: 1153, type: !1944)
!13251 = !DILocation(line: 1153, column: 42, scope: !13245)
!13252 = !DILocalVariable(name: "v3co", arg: 4, scope: !13245, file: !3, line: 1153, type: !1944)
!13253 = !DILocation(line: 1153, column: 63, scope: !13245)
!13254 = !DILocalVariable(name: "uv1co", arg: 5, scope: !13245, file: !3, line: 1154, type: !1944)
!13255 = !DILocation(line: 1154, column: 21, scope: !13245)
!13256 = !DILocalVariable(name: "uv2co", arg: 6, scope: !13245, file: !3, line: 1154, type: !1944)
!13257 = !DILocation(line: 1154, column: 43, scope: !13245)
!13258 = !DILocalVariable(name: "uv3co", arg: 7, scope: !13245, file: !3, line: 1154, type: !1944)
!13259 = !DILocation(line: 1154, column: 65, scope: !13245)
!13260 = !DILocalVariable(name: "pixelScreenCo", arg: 8, scope: !13245, file: !3, line: 1155, type: !216)
!13261 = !DILocation(line: 1155, column: 15, scope: !13245)
!13262 = !DILocalVariable(name: "w", arg: 9, scope: !13245, file: !3, line: 1156, type: !216)
!13263 = !DILocation(line: 1156, column: 15, scope: !13245)
!13264 = !DILocalVariable(name: "w_int", scope: !13245, file: !3, line: 1158, type: !183)
!13265 = !DILocation(line: 1158, column: 8, scope: !13245)
!13266 = !DILocalVariable(name: "wtot_inv", scope: !13245, file: !3, line: 1159, type: !184)
!13267 = !DILocation(line: 1159, column: 8, scope: !13245)
!13268 = !DILocalVariable(name: "wtot", scope: !13245, file: !3, line: 1159, type: !184)
!13269 = !DILocation(line: 1159, column: 18, scope: !13245)
!13270 = !DILocation(line: 1160, column: 25, scope: !13245)
!13271 = !DILocation(line: 1160, column: 32, scope: !13245)
!13272 = !DILocation(line: 1160, column: 39, scope: !13245)
!13273 = !DILocation(line: 1160, column: 46, scope: !13245)
!13274 = !DILocation(line: 1160, column: 50, scope: !13245)
!13275 = !DILocation(line: 1160, column: 2, scope: !13245)
!13276 = !DILocation(line: 1163, column: 13, scope: !13245)
!13277 = !DILocation(line: 1163, column: 20, scope: !13245)
!13278 = !DILocation(line: 1163, column: 18, scope: !13245)
!13279 = !DILocation(line: 1163, column: 2, scope: !13245)
!13280 = !DILocation(line: 1163, column: 11, scope: !13245)
!13281 = !DILocation(line: 1164, column: 13, scope: !13245)
!13282 = !DILocation(line: 1164, column: 20, scope: !13245)
!13283 = !DILocation(line: 1164, column: 18, scope: !13245)
!13284 = !DILocation(line: 1164, column: 2, scope: !13245)
!13285 = !DILocation(line: 1164, column: 11, scope: !13245)
!13286 = !DILocation(line: 1165, column: 13, scope: !13245)
!13287 = !DILocation(line: 1165, column: 20, scope: !13245)
!13288 = !DILocation(line: 1165, column: 18, scope: !13245)
!13289 = !DILocation(line: 1165, column: 2, scope: !13245)
!13290 = !DILocation(line: 1165, column: 11, scope: !13245)
!13291 = !DILocation(line: 1167, column: 9, scope: !13245)
!13292 = !DILocation(line: 1167, column: 20, scope: !13245)
!13293 = !DILocation(line: 1167, column: 18, scope: !13245)
!13294 = !DILocation(line: 1167, column: 31, scope: !13245)
!13295 = !DILocation(line: 1167, column: 29, scope: !13245)
!13296 = !DILocation(line: 1167, column: 7, scope: !13245)
!13297 = !DILocation(line: 1169, column: 6, scope: !13298)
!13298 = distinct !DILexicalBlock(scope: !13245, file: !3, line: 1169, column: 6)
!13299 = !DILocation(line: 1169, column: 11, scope: !13298)
!13300 = !DILocation(line: 1169, column: 6, scope: !13245)
!13301 = !DILocation(line: 1170, column: 21, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13298, file: !3, line: 1169, column: 19)
!13303 = !DILocation(line: 1170, column: 19, scope: !13302)
!13304 = !DILocation(line: 1170, column: 12, scope: !13302)
!13305 = !DILocation(line: 1171, column: 15, scope: !13302)
!13306 = !DILocation(line: 1171, column: 3, scope: !13302)
!13307 = !DILocation(line: 1171, column: 12, scope: !13302)
!13308 = !DILocation(line: 1172, column: 15, scope: !13302)
!13309 = !DILocation(line: 1172, column: 3, scope: !13302)
!13310 = !DILocation(line: 1172, column: 12, scope: !13302)
!13311 = !DILocation(line: 1173, column: 15, scope: !13302)
!13312 = !DILocation(line: 1173, column: 3, scope: !13302)
!13313 = !DILocation(line: 1173, column: 12, scope: !13302)
!13314 = !DILocation(line: 1174, column: 2, scope: !13302)
!13315 = !DILocation(line: 1177, column: 25, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13298, file: !3, line: 1175, column: 7)
!13317 = !DILocation(line: 1177, column: 34, scope: !13316)
!13318 = !DILocation(line: 1177, column: 14, scope: !13316)
!13319 = !DILocation(line: 1177, column: 23, scope: !13316)
!13320 = !DILocation(line: 1177, column: 3, scope: !13316)
!13321 = !DILocation(line: 1177, column: 12, scope: !13316)
!13322 = !DILocation(line: 1176, column: 17, scope: !13316)
!13323 = !DILocation(line: 1176, column: 22, scope: !13316)
!13324 = !DILocation(line: 1176, column: 10, scope: !13316)
!13325 = !DILocation(line: 1176, column: 15, scope: !13316)
!13326 = !DILocation(line: 1176, column: 3, scope: !13316)
!13327 = !DILocation(line: 1176, column: 8, scope: !13316)
!13328 = !DILocation(line: 1182, column: 19, scope: !13245)
!13329 = !DILocation(line: 1182, column: 34, scope: !13245)
!13330 = !DILocation(line: 1182, column: 40, scope: !13245)
!13331 = !DILocation(line: 1182, column: 46, scope: !13245)
!13332 = !DILocation(line: 1182, column: 52, scope: !13245)
!13333 = !DILocation(line: 1182, column: 2, scope: !13245)
!13334 = !DILocation(line: 1183, column: 1, scope: !13245)
!13335 = distinct !DISubprogram(name: "project_bucket_point_occluded", scope: !3, file: !3, line: 704, type: !13336, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!13336 = !DISubroutineType(types: !13337)
!13337 = !{!233, !9396, !3874, !5126, !1944}
!13338 = !DILocalVariable(name: "ps", arg: 1, scope: !13335, file: !3, line: 704, type: !9396)
!13339 = !DILocation(line: 704, column: 65, scope: !13335)
!13340 = !DILocalVariable(name: "bucketFace", arg: 2, scope: !13335, file: !3, line: 704, type: !3874)
!13341 = !DILocation(line: 704, column: 79, scope: !13335)
!13342 = !DILocalVariable(name: "orig_face", arg: 3, scope: !13335, file: !3, line: 705, type: !5126)
!13343 = !DILocation(line: 705, column: 53, scope: !13335)
!13344 = !DILocalVariable(name: "pixelScreenCo", arg: 4, scope: !13335, file: !3, line: 705, type: !1944)
!13345 = !DILocation(line: 705, column: 76, scope: !13335)
!13346 = !DILocalVariable(name: "mf", scope: !13335, file: !3, line: 707, type: !3852)
!13347 = !DILocation(line: 707, column: 9, scope: !13335)
!13348 = !DILocalVariable(name: "face_index", scope: !13335, file: !3, line: 708, type: !22)
!13349 = !DILocation(line: 708, column: 6, scope: !13335)
!13350 = !DILocalVariable(name: "isect_ret", scope: !13335, file: !3, line: 709, type: !22)
!13351 = !DILocation(line: 709, column: 6, scope: !13335)
!13352 = !DILocalVariable(name: "w", scope: !13335, file: !3, line: 710, type: !183)
!13353 = !DILocation(line: 710, column: 8, scope: !13335)
!13354 = !DILocalVariable(name: "do_clip", scope: !13335, file: !3, line: 711, type: !1946)
!13355 = !DILocation(line: 711, column: 14, scope: !13335)
!13356 = !DILocation(line: 711, column: 24, scope: !13335)
!13357 = !DILocation(line: 711, column: 28, scope: !13335)
!13358 = !DILocation(line: 711, column: 35, scope: !13335)
!13359 = !DILocation(line: 711, column: 39, scope: !13335)
!13360 = !DILocation(line: 711, column: 45, scope: !13335)
!13361 = !DILocation(line: 711, column: 51, scope: !13335)
!13362 = !DILocation(line: 716, column: 2, scope: !13335)
!13363 = !DILocation(line: 716, column: 9, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13365, file: !3, line: 716, column: 2)
!13365 = distinct !DILexicalBlock(scope: !13335, file: !3, line: 716, column: 2)
!13366 = !DILocation(line: 716, column: 2, scope: !13365)
!13367 = !DILocation(line: 717, column: 16, scope: !13368)
!13368 = distinct !DILexicalBlock(scope: !13364, file: !3, line: 716, column: 52)
!13369 = !DILocation(line: 717, column: 14, scope: !13368)
!13370 = !DILocation(line: 719, column: 7, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13368, file: !3, line: 719, column: 7)
!13372 = !DILocation(line: 719, column: 20, scope: !13371)
!13373 = !DILocation(line: 719, column: 17, scope: !13371)
!13374 = !DILocation(line: 719, column: 7, scope: !13368)
!13375 = !DILocation(line: 720, column: 9, scope: !13376)
!13376 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 719, column: 32)
!13377 = !DILocation(line: 720, column: 13, scope: !13376)
!13378 = !DILocation(line: 720, column: 24, scope: !13376)
!13379 = !DILocation(line: 720, column: 22, scope: !13376)
!13380 = !DILocation(line: 720, column: 7, scope: !13376)
!13381 = !DILocation(line: 721, column: 8, scope: !13382)
!13382 = distinct !DILexicalBlock(scope: !13376, file: !3, line: 721, column: 8)
!13383 = !DILocation(line: 721, column: 8, scope: !13376)
!13384 = !DILocation(line: 722, column: 48, scope: !13382)
!13385 = !DILocation(line: 722, column: 52, scope: !13382)
!13386 = !DILocation(line: 722, column: 56, scope: !13382)
!13387 = !DILocation(line: 722, column: 71, scope: !13382)
!13388 = !DILocation(line: 722, column: 75, scope: !13382)
!13389 = !DILocation(line: 722, column: 88, scope: !13382)
!13390 = !DILocation(line: 722, column: 92, scope: !13382)
!13391 = !DILocation(line: 722, column: 97, scope: !13382)
!13392 = !DILocation(line: 722, column: 101, scope: !13382)
!13393 = !DILocation(line: 722, column: 114, scope: !13382)
!13394 = !DILocation(line: 722, column: 118, scope: !13382)
!13395 = !DILocation(line: 722, column: 123, scope: !13382)
!13396 = !DILocation(line: 722, column: 127, scope: !13382)
!13397 = !DILocation(line: 722, column: 140, scope: !13382)
!13398 = !DILocation(line: 722, column: 144, scope: !13382)
!13399 = !DILocation(line: 722, column: 17, scope: !13382)
!13400 = !DILocation(line: 722, column: 15, scope: !13382)
!13401 = !DILocation(line: 722, column: 5, scope: !13382)
!13402 = !DILocation(line: 724, column: 43, scope: !13382)
!13403 = !DILocation(line: 724, column: 58, scope: !13382)
!13404 = !DILocation(line: 724, column: 62, scope: !13382)
!13405 = !DILocation(line: 724, column: 75, scope: !13382)
!13406 = !DILocation(line: 724, column: 79, scope: !13382)
!13407 = !DILocation(line: 724, column: 84, scope: !13382)
!13408 = !DILocation(line: 724, column: 88, scope: !13382)
!13409 = !DILocation(line: 724, column: 101, scope: !13382)
!13410 = !DILocation(line: 724, column: 105, scope: !13382)
!13411 = !DILocation(line: 724, column: 110, scope: !13382)
!13412 = !DILocation(line: 724, column: 114, scope: !13382)
!13413 = !DILocation(line: 724, column: 127, scope: !13382)
!13414 = !DILocation(line: 724, column: 131, scope: !13382)
!13415 = !DILocation(line: 724, column: 136, scope: !13382)
!13416 = !DILocation(line: 724, column: 139, scope: !13382)
!13417 = !DILocation(line: 724, column: 143, scope: !13382)
!13418 = !DILocation(line: 724, column: 17, scope: !13382)
!13419 = !DILocation(line: 724, column: 15, scope: !13382)
!13420 = !DILocation(line: 727, column: 8, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13376, file: !3, line: 727, column: 8)
!13422 = !DILocation(line: 727, column: 18, scope: !13421)
!13423 = !DILocation(line: 727, column: 23, scope: !13421)
!13424 = !DILocation(line: 727, column: 26, scope: !13421)
!13425 = !DILocation(line: 727, column: 30, scope: !13421)
!13426 = !DILocation(line: 727, column: 8, scope: !13376)
!13427 = !DILocation(line: 728, column: 9, scope: !13428)
!13428 = distinct !DILexicalBlock(scope: !13429, file: !3, line: 728, column: 9)
!13429 = distinct !DILexicalBlock(scope: !13421, file: !3, line: 727, column: 34)
!13430 = !DILocation(line: 728, column: 9, scope: !13429)
!13431 = !DILocation(line: 729, column: 49, scope: !13428)
!13432 = !DILocation(line: 729, column: 53, scope: !13428)
!13433 = !DILocation(line: 729, column: 57, scope: !13428)
!13434 = !DILocation(line: 729, column: 72, scope: !13428)
!13435 = !DILocation(line: 729, column: 76, scope: !13428)
!13436 = !DILocation(line: 729, column: 89, scope: !13428)
!13437 = !DILocation(line: 729, column: 93, scope: !13428)
!13438 = !DILocation(line: 729, column: 98, scope: !13428)
!13439 = !DILocation(line: 729, column: 102, scope: !13428)
!13440 = !DILocation(line: 729, column: 115, scope: !13428)
!13441 = !DILocation(line: 729, column: 119, scope: !13428)
!13442 = !DILocation(line: 729, column: 124, scope: !13428)
!13443 = !DILocation(line: 729, column: 128, scope: !13428)
!13444 = !DILocation(line: 729, column: 141, scope: !13428)
!13445 = !DILocation(line: 729, column: 145, scope: !13428)
!13446 = !DILocation(line: 729, column: 18, scope: !13428)
!13447 = !DILocation(line: 729, column: 16, scope: !13428)
!13448 = !DILocation(line: 729, column: 6, scope: !13428)
!13449 = !DILocation(line: 731, column: 44, scope: !13428)
!13450 = !DILocation(line: 731, column: 59, scope: !13428)
!13451 = !DILocation(line: 731, column: 63, scope: !13428)
!13452 = !DILocation(line: 731, column: 76, scope: !13428)
!13453 = !DILocation(line: 731, column: 80, scope: !13428)
!13454 = !DILocation(line: 731, column: 85, scope: !13428)
!13455 = !DILocation(line: 731, column: 89, scope: !13428)
!13456 = !DILocation(line: 731, column: 102, scope: !13428)
!13457 = !DILocation(line: 731, column: 106, scope: !13428)
!13458 = !DILocation(line: 731, column: 111, scope: !13428)
!13459 = !DILocation(line: 731, column: 115, scope: !13428)
!13460 = !DILocation(line: 731, column: 128, scope: !13428)
!13461 = !DILocation(line: 731, column: 132, scope: !13428)
!13462 = !DILocation(line: 731, column: 137, scope: !13428)
!13463 = !DILocation(line: 731, column: 140, scope: !13428)
!13464 = !DILocation(line: 731, column: 144, scope: !13428)
!13465 = !DILocation(line: 731, column: 18, scope: !13428)
!13466 = !DILocation(line: 731, column: 16, scope: !13428)
!13467 = !DILocation(line: 732, column: 4, scope: !13429)
!13468 = !DILocation(line: 733, column: 8, scope: !13469)
!13469 = distinct !DILexicalBlock(scope: !13376, file: !3, line: 733, column: 8)
!13470 = !DILocation(line: 733, column: 18, scope: !13469)
!13471 = !DILocation(line: 733, column: 8, scope: !13376)
!13472 = !DILocation(line: 736, column: 5, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13469, file: !3, line: 733, column: 24)
!13474 = !DILocation(line: 738, column: 3, scope: !13376)
!13475 = !DILocation(line: 739, column: 2, scope: !13368)
!13476 = !DILocation(line: 716, column: 34, scope: !13364)
!13477 = !DILocation(line: 716, column: 46, scope: !13364)
!13478 = !DILocation(line: 716, column: 32, scope: !13364)
!13479 = !DILocation(line: 716, column: 2, scope: !13364)
!13480 = distinct !{!13480, !13366, !13481}
!13481 = !DILocation(line: 739, column: 2, scope: !13365)
!13482 = !DILocation(line: 740, column: 2, scope: !13335)
!13483 = !DILocation(line: 741, column: 1, scope: !13335)
!13484 = distinct !DISubprogram(name: "project_paint_uvpixel_mask", scope: !3, file: !3, line: 1218, type: !13485, scopeLine: 1223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!13485 = !DISubroutineType(types: !13486)
!13486 = !{!184, !9396, !5126, !5126, !1944}
!13487 = !DILocalVariable(name: "ps", arg: 1, scope: !13484, file: !3, line: 1219, type: !9396)
!13488 = !DILocation(line: 1219, column: 31, scope: !13484)
!13489 = !DILocalVariable(name: "face_index", arg: 2, scope: !13484, file: !3, line: 1220, type: !5126)
!13490 = !DILocation(line: 1220, column: 19, scope: !13484)
!13491 = !DILocalVariable(name: "side", arg: 3, scope: !13484, file: !3, line: 1221, type: !5126)
!13492 = !DILocation(line: 1221, column: 19, scope: !13484)
!13493 = !DILocalVariable(name: "w", arg: 4, scope: !13484, file: !3, line: 1222, type: !1944)
!13494 = !DILocation(line: 1222, column: 21, scope: !13484)
!13495 = !DILocalVariable(name: "mask", scope: !13484, file: !3, line: 1224, type: !184)
!13496 = !DILocation(line: 1224, column: 8, scope: !13484)
!13497 = !DILocation(line: 1227, column: 6, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13484, file: !3, line: 1227, column: 6)
!13499 = !DILocation(line: 1227, column: 10, scope: !13498)
!13500 = !DILocation(line: 1227, column: 6, scope: !13484)
!13501 = !DILocalVariable(name: "ibuf_other", scope: !13502, file: !3, line: 1229, type: !3893)
!13502 = distinct !DILexicalBlock(scope: !13498, file: !3, line: 1227, column: 28)
!13503 = !DILocation(line: 1229, column: 10, scope: !13502)
!13504 = !DILocalVariable(name: "other_tpage", scope: !13502, file: !3, line: 1230, type: !3861)
!13505 = !DILocation(line: 1230, column: 10, scope: !13502)
!13506 = !DILocation(line: 1230, column: 24, scope: !13502)
!13507 = !DILocation(line: 1230, column: 28, scope: !13502)
!13508 = !DILocalVariable(name: "tf_other", scope: !13502, file: !3, line: 1231, type: !11220)
!13509 = !DILocation(line: 1231, column: 17, scope: !13502)
!13510 = !DILocation(line: 1231, column: 28, scope: !13502)
!13511 = !DILocation(line: 1231, column: 32, scope: !13502)
!13512 = !DILocation(line: 1231, column: 52, scope: !13502)
!13513 = !DILocation(line: 1231, column: 50, scope: !13502)
!13514 = !DILocation(line: 1233, column: 7, scope: !13515)
!13515 = distinct !DILexicalBlock(scope: !13502, file: !3, line: 1233, column: 7)
!13516 = !DILocation(line: 1233, column: 19, scope: !13515)
!13517 = !DILocation(line: 1233, column: 59, scope: !13515)
!13518 = !DILocation(line: 1233, column: 36, scope: !13515)
!13519 = !DILocation(line: 1233, column: 34, scope: !13515)
!13520 = !DILocation(line: 1233, column: 7, scope: !13502)
!13521 = !DILocalVariable(name: "rgba_ub", scope: !13522, file: !3, line: 1235, type: !2703)
!13522 = distinct !DILexicalBlock(scope: !13515, file: !3, line: 1233, column: 86)
!13523 = !DILocation(line: 1235, column: 18, scope: !13522)
!13524 = !DILocalVariable(name: "rgba_f", scope: !13522, file: !3, line: 1236, type: !496)
!13525 = !DILocation(line: 1236, column: 10, scope: !13522)
!13526 = !DILocation(line: 1238, column: 23, scope: !13522)
!13527 = !DILocation(line: 1238, column: 33, scope: !13522)
!13528 = !DILocation(line: 1238, column: 45, scope: !13522)
!13529 = !DILocation(line: 1238, column: 48, scope: !13522)
!13530 = !DILocation(line: 1238, column: 54, scope: !13522)
!13531 = !DILocation(line: 1238, column: 63, scope: !13522)
!13532 = !DILocation(line: 1238, column: 4, scope: !13522)
!13533 = !DILocation(line: 1240, column: 8, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13522, file: !3, line: 1240, column: 8)
!13535 = !DILocation(line: 1240, column: 20, scope: !13534)
!13536 = !DILocation(line: 1240, column: 8, scope: !13522)
!13537 = !DILocation(line: 1241, column: 14, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13534, file: !3, line: 1240, column: 32)
!13539 = !DILocation(line: 1241, column: 26, scope: !13538)
!13540 = !DILocation(line: 1241, column: 24, scope: !13538)
!13541 = !DILocation(line: 1241, column: 38, scope: !13538)
!13542 = !DILocation(line: 1241, column: 36, scope: !13538)
!13543 = !DILocation(line: 1241, column: 49, scope: !13538)
!13544 = !DILocation(line: 1241, column: 68, scope: !13538)
!13545 = !DILocation(line: 1241, column: 66, scope: !13538)
!13546 = !DILocation(line: 1241, column: 10, scope: !13538)
!13547 = !DILocation(line: 1242, column: 4, scope: !13538)
!13548 = !DILocation(line: 1244, column: 14, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13534, file: !3, line: 1243, column: 9)
!13550 = !DILocation(line: 1244, column: 27, scope: !13549)
!13551 = !DILocation(line: 1244, column: 25, scope: !13549)
!13552 = !DILocation(line: 1244, column: 40, scope: !13549)
!13553 = !DILocation(line: 1244, column: 38, scope: !13549)
!13554 = !DILocation(line: 1244, column: 13, scope: !13549)
!13555 = !DILocation(line: 1244, column: 52, scope: !13549)
!13556 = !DILocation(line: 1244, column: 83, scope: !13549)
!13557 = !DILocation(line: 1244, column: 94, scope: !13549)
!13558 = !DILocation(line: 1244, column: 80, scope: !13549)
!13559 = !DILocation(line: 1244, column: 10, scope: !13549)
!13560 = !DILocation(line: 1247, column: 27, scope: !13522)
!13561 = !DILocation(line: 1247, column: 40, scope: !13522)
!13562 = !DILocation(line: 1247, column: 4, scope: !13522)
!13563 = !DILocation(line: 1249, column: 9, scope: !13564)
!13564 = distinct !DILexicalBlock(scope: !13522, file: !3, line: 1249, column: 8)
!13565 = !DILocation(line: 1249, column: 13, scope: !13564)
!13566 = !DILocation(line: 1249, column: 8, scope: !13522)
!13567 = !DILocation(line: 1250, column: 20, scope: !13564)
!13568 = !DILocation(line: 1250, column: 18, scope: !13564)
!13569 = !DILocation(line: 1250, column: 10, scope: !13564)
!13570 = !DILocation(line: 1250, column: 5, scope: !13564)
!13571 = !DILocation(line: 1252, column: 8, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !13522, file: !3, line: 1252, column: 8)
!13573 = !DILocation(line: 1252, column: 13, scope: !13572)
!13574 = !DILocation(line: 1252, column: 8, scope: !13522)
!13575 = !DILocation(line: 1253, column: 5, scope: !13576)
!13576 = distinct !DILexicalBlock(scope: !13572, file: !3, line: 1252, column: 22)
!13577 = !DILocation(line: 1255, column: 3, scope: !13522)
!13578 = !DILocation(line: 1257, column: 4, scope: !13579)
!13579 = distinct !DILexicalBlock(scope: !13515, file: !3, line: 1256, column: 8)
!13580 = !DILocation(line: 1259, column: 2, scope: !13502)
!13581 = !DILocation(line: 1261, column: 8, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13498, file: !3, line: 1260, column: 7)
!13583 = !DILocation(line: 1265, column: 6, scope: !13584)
!13584 = distinct !DILexicalBlock(scope: !13484, file: !3, line: 1265, column: 6)
!13585 = !DILocation(line: 1265, column: 10, scope: !13584)
!13586 = !DILocation(line: 1265, column: 6, scope: !13484)
!13587 = !DILocalVariable(name: "mf", scope: !13588, file: !3, line: 1266, type: !3852)
!13588 = distinct !DILexicalBlock(scope: !13584, file: !3, line: 1265, column: 26)
!13589 = !DILocation(line: 1266, column: 10, scope: !13588)
!13590 = !DILocation(line: 1266, column: 16, scope: !13588)
!13591 = !DILocation(line: 1266, column: 20, scope: !13588)
!13592 = !DILocation(line: 1266, column: 29, scope: !13588)
!13593 = !DILocalVariable(name: "no", scope: !13588, file: !3, line: 1267, type: !183)
!13594 = !DILocation(line: 1267, column: 9, scope: !13588)
!13595 = !DILocalVariable(name: "angle", scope: !13588, file: !3, line: 1267, type: !184)
!13596 = !DILocation(line: 1267, column: 16, scope: !13588)
!13597 = !DILocation(line: 1268, column: 7, scope: !13598)
!13598 = distinct !DILexicalBlock(scope: !13588, file: !3, line: 1268, column: 7)
!13599 = !DILocation(line: 1268, column: 11, scope: !13598)
!13600 = !DILocation(line: 1268, column: 16, scope: !13598)
!13601 = !DILocation(line: 1268, column: 7, scope: !13588)
!13602 = !DILocalVariable(name: "no1", scope: !13603, file: !3, line: 1269, type: !1945)
!13603 = distinct !DILexicalBlock(scope: !13598, file: !3, line: 1268, column: 29)
!13604 = !DILocation(line: 1269, column: 17, scope: !13603)
!13605 = !DILocalVariable(name: "no2", scope: !13603, file: !3, line: 1269, type: !1945)
!13606 = !DILocation(line: 1269, column: 23, scope: !13603)
!13607 = !DILocalVariable(name: "no3", scope: !13603, file: !3, line: 1269, type: !1945)
!13608 = !DILocation(line: 1269, column: 29, scope: !13603)
!13609 = !DILocation(line: 1270, column: 10, scope: !13603)
!13610 = !DILocation(line: 1270, column: 14, scope: !13603)
!13611 = !DILocation(line: 1270, column: 23, scope: !13603)
!13612 = !DILocation(line: 1270, column: 27, scope: !13603)
!13613 = !DILocation(line: 1270, column: 31, scope: !13603)
!13614 = !DILocation(line: 1270, column: 8, scope: !13603)
!13615 = !DILocation(line: 1271, column: 8, scope: !13616)
!13616 = distinct !DILexicalBlock(scope: !13603, file: !3, line: 1271, column: 8)
!13617 = !DILocation(line: 1271, column: 13, scope: !13616)
!13618 = !DILocation(line: 1271, column: 8, scope: !13603)
!13619 = !DILocation(line: 1272, column: 11, scope: !13620)
!13620 = distinct !DILexicalBlock(scope: !13616, file: !3, line: 1271, column: 19)
!13621 = !DILocation(line: 1272, column: 15, scope: !13620)
!13622 = !DILocation(line: 1272, column: 24, scope: !13620)
!13623 = !DILocation(line: 1272, column: 28, scope: !13620)
!13624 = !DILocation(line: 1272, column: 32, scope: !13620)
!13625 = !DILocation(line: 1272, column: 9, scope: !13620)
!13626 = !DILocation(line: 1273, column: 11, scope: !13620)
!13627 = !DILocation(line: 1273, column: 15, scope: !13620)
!13628 = !DILocation(line: 1273, column: 24, scope: !13620)
!13629 = !DILocation(line: 1273, column: 28, scope: !13620)
!13630 = !DILocation(line: 1273, column: 32, scope: !13620)
!13631 = !DILocation(line: 1273, column: 9, scope: !13620)
!13632 = !DILocation(line: 1274, column: 4, scope: !13620)
!13633 = !DILocation(line: 1276, column: 11, scope: !13634)
!13634 = distinct !DILexicalBlock(scope: !13616, file: !3, line: 1275, column: 9)
!13635 = !DILocation(line: 1276, column: 15, scope: !13634)
!13636 = !DILocation(line: 1276, column: 24, scope: !13634)
!13637 = !DILocation(line: 1276, column: 28, scope: !13634)
!13638 = !DILocation(line: 1276, column: 32, scope: !13634)
!13639 = !DILocation(line: 1276, column: 9, scope: !13634)
!13640 = !DILocation(line: 1277, column: 11, scope: !13634)
!13641 = !DILocation(line: 1277, column: 15, scope: !13634)
!13642 = !DILocation(line: 1277, column: 24, scope: !13634)
!13643 = !DILocation(line: 1277, column: 28, scope: !13634)
!13644 = !DILocation(line: 1277, column: 32, scope: !13634)
!13645 = !DILocation(line: 1277, column: 9, scope: !13634)
!13646 = !DILocation(line: 1280, column: 12, scope: !13603)
!13647 = !DILocation(line: 1280, column: 19, scope: !13603)
!13648 = !DILocation(line: 1280, column: 17, scope: !13603)
!13649 = !DILocation(line: 1280, column: 28, scope: !13603)
!13650 = !DILocation(line: 1280, column: 35, scope: !13603)
!13651 = !DILocation(line: 1280, column: 33, scope: !13603)
!13652 = !DILocation(line: 1280, column: 26, scope: !13603)
!13653 = !DILocation(line: 1280, column: 44, scope: !13603)
!13654 = !DILocation(line: 1280, column: 51, scope: !13603)
!13655 = !DILocation(line: 1280, column: 49, scope: !13603)
!13656 = !DILocation(line: 1280, column: 42, scope: !13603)
!13657 = !DILocation(line: 1280, column: 4, scope: !13603)
!13658 = !DILocation(line: 1280, column: 10, scope: !13603)
!13659 = !DILocation(line: 1281, column: 12, scope: !13603)
!13660 = !DILocation(line: 1281, column: 19, scope: !13603)
!13661 = !DILocation(line: 1281, column: 17, scope: !13603)
!13662 = !DILocation(line: 1281, column: 28, scope: !13603)
!13663 = !DILocation(line: 1281, column: 35, scope: !13603)
!13664 = !DILocation(line: 1281, column: 33, scope: !13603)
!13665 = !DILocation(line: 1281, column: 26, scope: !13603)
!13666 = !DILocation(line: 1281, column: 44, scope: !13603)
!13667 = !DILocation(line: 1281, column: 51, scope: !13603)
!13668 = !DILocation(line: 1281, column: 49, scope: !13603)
!13669 = !DILocation(line: 1281, column: 42, scope: !13603)
!13670 = !DILocation(line: 1281, column: 4, scope: !13603)
!13671 = !DILocation(line: 1281, column: 10, scope: !13603)
!13672 = !DILocation(line: 1282, column: 12, scope: !13603)
!13673 = !DILocation(line: 1282, column: 19, scope: !13603)
!13674 = !DILocation(line: 1282, column: 17, scope: !13603)
!13675 = !DILocation(line: 1282, column: 28, scope: !13603)
!13676 = !DILocation(line: 1282, column: 35, scope: !13603)
!13677 = !DILocation(line: 1282, column: 33, scope: !13603)
!13678 = !DILocation(line: 1282, column: 26, scope: !13603)
!13679 = !DILocation(line: 1282, column: 44, scope: !13603)
!13680 = !DILocation(line: 1282, column: 51, scope: !13603)
!13681 = !DILocation(line: 1282, column: 49, scope: !13603)
!13682 = !DILocation(line: 1282, column: 42, scope: !13603)
!13683 = !DILocation(line: 1282, column: 4, scope: !13603)
!13684 = !DILocation(line: 1282, column: 10, scope: !13603)
!13685 = !DILocation(line: 1283, column: 17, scope: !13603)
!13686 = !DILocation(line: 1283, column: 4, scope: !13603)
!13687 = !DILocation(line: 1284, column: 3, scope: !13603)
!13688 = !DILocation(line: 1289, column: 8, scope: !13689)
!13689 = distinct !DILexicalBlock(scope: !13690, file: !3, line: 1289, column: 8)
!13690 = distinct !DILexicalBlock(scope: !13598, file: !3, line: 1285, column: 8)
!13691 = !DILocation(line: 1289, column: 12, scope: !13689)
!13692 = !DILocation(line: 1289, column: 8, scope: !13690)
!13693 = !DILocation(line: 1290, column: 20, scope: !13689)
!13694 = !DILocation(line: 1291, column: 20, scope: !13689)
!13695 = !DILocation(line: 1291, column: 24, scope: !13689)
!13696 = !DILocation(line: 1291, column: 33, scope: !13689)
!13697 = !DILocation(line: 1291, column: 37, scope: !13689)
!13698 = !DILocation(line: 1291, column: 41, scope: !13689)
!13699 = !DILocation(line: 1292, column: 20, scope: !13689)
!13700 = !DILocation(line: 1292, column: 24, scope: !13689)
!13701 = !DILocation(line: 1292, column: 33, scope: !13689)
!13702 = !DILocation(line: 1292, column: 37, scope: !13689)
!13703 = !DILocation(line: 1292, column: 41, scope: !13689)
!13704 = !DILocation(line: 1293, column: 20, scope: !13689)
!13705 = !DILocation(line: 1293, column: 24, scope: !13689)
!13706 = !DILocation(line: 1293, column: 33, scope: !13689)
!13707 = !DILocation(line: 1293, column: 37, scope: !13689)
!13708 = !DILocation(line: 1293, column: 41, scope: !13689)
!13709 = !DILocation(line: 1294, column: 20, scope: !13689)
!13710 = !DILocation(line: 1294, column: 24, scope: !13689)
!13711 = !DILocation(line: 1294, column: 33, scope: !13689)
!13712 = !DILocation(line: 1294, column: 37, scope: !13689)
!13713 = !DILocation(line: 1294, column: 41, scope: !13689)
!13714 = !DILocation(line: 1290, column: 5, scope: !13689)
!13715 = !DILocation(line: 1296, column: 19, scope: !13689)
!13716 = !DILocation(line: 1297, column: 19, scope: !13689)
!13717 = !DILocation(line: 1297, column: 23, scope: !13689)
!13718 = !DILocation(line: 1297, column: 32, scope: !13689)
!13719 = !DILocation(line: 1297, column: 36, scope: !13689)
!13720 = !DILocation(line: 1297, column: 40, scope: !13689)
!13721 = !DILocation(line: 1298, column: 19, scope: !13689)
!13722 = !DILocation(line: 1298, column: 23, scope: !13689)
!13723 = !DILocation(line: 1298, column: 32, scope: !13689)
!13724 = !DILocation(line: 1298, column: 36, scope: !13689)
!13725 = !DILocation(line: 1298, column: 40, scope: !13689)
!13726 = !DILocation(line: 1299, column: 19, scope: !13689)
!13727 = !DILocation(line: 1299, column: 23, scope: !13689)
!13728 = !DILocation(line: 1299, column: 32, scope: !13689)
!13729 = !DILocation(line: 1299, column: 36, scope: !13689)
!13730 = !DILocation(line: 1299, column: 40, scope: !13689)
!13731 = !DILocation(line: 1296, column: 5, scope: !13689)
!13732 = !DILocation(line: 1307, column: 7, scope: !13733)
!13733 = distinct !DILexicalBlock(scope: !13588, file: !3, line: 1307, column: 7)
!13734 = !DILocation(line: 1307, column: 11, scope: !13733)
!13735 = !DILocation(line: 1307, column: 7, scope: !13588)
!13736 = !DILocation(line: 1308, column: 43, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !13733, file: !3, line: 1307, column: 21)
!13738 = !DILocation(line: 1308, column: 47, scope: !13737)
!13739 = !DILocation(line: 1308, column: 56, scope: !13737)
!13740 = !DILocation(line: 1308, column: 12, scope: !13737)
!13741 = !DILocation(line: 1308, column: 10, scope: !13737)
!13742 = !DILocation(line: 1309, column: 3, scope: !13737)
!13743 = !DILocalVariable(name: "viewDirPersp", scope: !13744, file: !3, line: 1312, type: !183)
!13744 = distinct !DILexicalBlock(scope: !13733, file: !3, line: 1310, column: 8)
!13745 = !DILocation(line: 1312, column: 10, scope: !13744)
!13746 = !DILocalVariable(name: "co1", scope: !13744, file: !3, line: 1313, type: !1944)
!13747 = !DILocation(line: 1313, column: 17, scope: !13744)
!13748 = !DILocalVariable(name: "co2", scope: !13744, file: !3, line: 1313, type: !1944)
!13749 = !DILocation(line: 1313, column: 23, scope: !13744)
!13750 = !DILocalVariable(name: "co3", scope: !13744, file: !3, line: 1313, type: !1944)
!13751 = !DILocation(line: 1313, column: 29, scope: !13744)
!13752 = !DILocation(line: 1314, column: 10, scope: !13744)
!13753 = !DILocation(line: 1314, column: 14, scope: !13744)
!13754 = !DILocation(line: 1314, column: 23, scope: !13744)
!13755 = !DILocation(line: 1314, column: 27, scope: !13744)
!13756 = !DILocation(line: 1314, column: 31, scope: !13744)
!13757 = !DILocation(line: 1314, column: 8, scope: !13744)
!13758 = !DILocation(line: 1315, column: 8, scope: !13759)
!13759 = distinct !DILexicalBlock(scope: !13744, file: !3, line: 1315, column: 8)
!13760 = !DILocation(line: 1315, column: 13, scope: !13759)
!13761 = !DILocation(line: 1315, column: 8, scope: !13744)
!13762 = !DILocation(line: 1316, column: 11, scope: !13763)
!13763 = distinct !DILexicalBlock(scope: !13759, file: !3, line: 1315, column: 19)
!13764 = !DILocation(line: 1316, column: 15, scope: !13763)
!13765 = !DILocation(line: 1316, column: 24, scope: !13763)
!13766 = !DILocation(line: 1316, column: 28, scope: !13763)
!13767 = !DILocation(line: 1316, column: 32, scope: !13763)
!13768 = !DILocation(line: 1316, column: 9, scope: !13763)
!13769 = !DILocation(line: 1317, column: 11, scope: !13763)
!13770 = !DILocation(line: 1317, column: 15, scope: !13763)
!13771 = !DILocation(line: 1317, column: 24, scope: !13763)
!13772 = !DILocation(line: 1317, column: 28, scope: !13763)
!13773 = !DILocation(line: 1317, column: 32, scope: !13763)
!13774 = !DILocation(line: 1317, column: 9, scope: !13763)
!13775 = !DILocation(line: 1318, column: 4, scope: !13763)
!13776 = !DILocation(line: 1320, column: 11, scope: !13777)
!13777 = distinct !DILexicalBlock(scope: !13759, file: !3, line: 1319, column: 9)
!13778 = !DILocation(line: 1320, column: 15, scope: !13777)
!13779 = !DILocation(line: 1320, column: 24, scope: !13777)
!13780 = !DILocation(line: 1320, column: 28, scope: !13777)
!13781 = !DILocation(line: 1320, column: 32, scope: !13777)
!13782 = !DILocation(line: 1320, column: 9, scope: !13777)
!13783 = !DILocation(line: 1321, column: 11, scope: !13777)
!13784 = !DILocation(line: 1321, column: 15, scope: !13777)
!13785 = !DILocation(line: 1321, column: 24, scope: !13777)
!13786 = !DILocation(line: 1321, column: 28, scope: !13777)
!13787 = !DILocation(line: 1321, column: 32, scope: !13777)
!13788 = !DILocation(line: 1321, column: 9, scope: !13777)
!13789 = !DILocation(line: 1325, column: 23, scope: !13744)
!13790 = !DILocation(line: 1325, column: 27, scope: !13744)
!13791 = !DILocation(line: 1325, column: 41, scope: !13744)
!13792 = !DILocation(line: 1325, column: 48, scope: !13744)
!13793 = !DILocation(line: 1325, column: 46, scope: !13744)
!13794 = !DILocation(line: 1325, column: 57, scope: !13744)
!13795 = !DILocation(line: 1325, column: 64, scope: !13744)
!13796 = !DILocation(line: 1325, column: 62, scope: !13744)
!13797 = !DILocation(line: 1325, column: 55, scope: !13744)
!13798 = !DILocation(line: 1325, column: 73, scope: !13744)
!13799 = !DILocation(line: 1325, column: 80, scope: !13744)
!13800 = !DILocation(line: 1325, column: 78, scope: !13744)
!13801 = !DILocation(line: 1325, column: 71, scope: !13744)
!13802 = !DILocation(line: 1325, column: 38, scope: !13744)
!13803 = !DILocation(line: 1325, column: 4, scope: !13744)
!13804 = !DILocation(line: 1325, column: 20, scope: !13744)
!13805 = !DILocation(line: 1326, column: 23, scope: !13744)
!13806 = !DILocation(line: 1326, column: 27, scope: !13744)
!13807 = !DILocation(line: 1326, column: 41, scope: !13744)
!13808 = !DILocation(line: 1326, column: 48, scope: !13744)
!13809 = !DILocation(line: 1326, column: 46, scope: !13744)
!13810 = !DILocation(line: 1326, column: 57, scope: !13744)
!13811 = !DILocation(line: 1326, column: 64, scope: !13744)
!13812 = !DILocation(line: 1326, column: 62, scope: !13744)
!13813 = !DILocation(line: 1326, column: 55, scope: !13744)
!13814 = !DILocation(line: 1326, column: 73, scope: !13744)
!13815 = !DILocation(line: 1326, column: 80, scope: !13744)
!13816 = !DILocation(line: 1326, column: 78, scope: !13744)
!13817 = !DILocation(line: 1326, column: 71, scope: !13744)
!13818 = !DILocation(line: 1326, column: 38, scope: !13744)
!13819 = !DILocation(line: 1326, column: 4, scope: !13744)
!13820 = !DILocation(line: 1326, column: 20, scope: !13744)
!13821 = !DILocation(line: 1327, column: 23, scope: !13744)
!13822 = !DILocation(line: 1327, column: 27, scope: !13744)
!13823 = !DILocation(line: 1327, column: 41, scope: !13744)
!13824 = !DILocation(line: 1327, column: 48, scope: !13744)
!13825 = !DILocation(line: 1327, column: 46, scope: !13744)
!13826 = !DILocation(line: 1327, column: 57, scope: !13744)
!13827 = !DILocation(line: 1327, column: 64, scope: !13744)
!13828 = !DILocation(line: 1327, column: 62, scope: !13744)
!13829 = !DILocation(line: 1327, column: 55, scope: !13744)
!13830 = !DILocation(line: 1327, column: 73, scope: !13744)
!13831 = !DILocation(line: 1327, column: 80, scope: !13744)
!13832 = !DILocation(line: 1327, column: 78, scope: !13744)
!13833 = !DILocation(line: 1327, column: 71, scope: !13744)
!13834 = !DILocation(line: 1327, column: 38, scope: !13744)
!13835 = !DILocation(line: 1327, column: 4, scope: !13744)
!13836 = !DILocation(line: 1327, column: 20, scope: !13744)
!13837 = !DILocation(line: 1328, column: 17, scope: !13744)
!13838 = !DILocation(line: 1328, column: 4, scope: !13744)
!13839 = !DILocation(line: 1330, column: 34, scope: !13744)
!13840 = !DILocation(line: 1330, column: 48, scope: !13744)
!13841 = !DILocation(line: 1330, column: 12, scope: !13744)
!13842 = !DILocation(line: 1330, column: 10, scope: !13744)
!13843 = !DILocation(line: 1333, column: 7, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13588, file: !3, line: 1333, column: 7)
!13845 = !DILocation(line: 1333, column: 16, scope: !13844)
!13846 = !DILocation(line: 1333, column: 20, scope: !13844)
!13847 = !DILocation(line: 1333, column: 13, scope: !13844)
!13848 = !DILocation(line: 1333, column: 7, scope: !13588)
!13849 = !DILocation(line: 1334, column: 4, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !13844, file: !3, line: 1333, column: 34)
!13851 = !DILocation(line: 1336, column: 12, scope: !13852)
!13852 = distinct !DILexicalBlock(scope: !13844, file: !3, line: 1336, column: 12)
!13853 = !DILocation(line: 1336, column: 20, scope: !13852)
!13854 = !DILocation(line: 1336, column: 24, scope: !13852)
!13855 = !DILocation(line: 1336, column: 18, scope: !13852)
!13856 = !DILocation(line: 1336, column: 12, scope: !13844)
!13857 = !DILocation(line: 1337, column: 13, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13852, file: !3, line: 1336, column: 44)
!13859 = !DILocation(line: 1337, column: 17, scope: !13858)
!13860 = !DILocation(line: 1337, column: 32, scope: !13858)
!13861 = !DILocation(line: 1337, column: 30, scope: !13858)
!13862 = !DILocation(line: 1337, column: 41, scope: !13858)
!13863 = !DILocation(line: 1337, column: 45, scope: !13858)
!13864 = !DILocation(line: 1337, column: 39, scope: !13858)
!13865 = !DILocation(line: 1337, column: 9, scope: !13858)
!13866 = !DILocation(line: 1338, column: 3, scope: !13858)
!13867 = !DILocation(line: 1339, column: 2, scope: !13588)
!13868 = !DILocation(line: 1345, column: 9, scope: !13484)
!13869 = !DILocation(line: 1345, column: 2, scope: !13484)
!13870 = !DILocation(line: 1346, column: 1, scope: !13484)
!13871 = distinct !DISubprogram(name: "project_paint_uvpixel_init", scope: !3, file: !3, line: 1401, type: !13872, scopeLine: 1412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!13872 = !DISubroutineType(types: !13873)
!13873 = !{!3983, !9396, !3868, !13874, !22, !22, !1778, !5126, !1944, !1944, !5126, !1944}
!13874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13875, size: 64)
!13875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11191)
!13876 = !DILocalVariable(name: "ps", arg: 1, scope: !13871, file: !3, line: 1402, type: !9396)
!13877 = !DILocation(line: 1402, column: 31, scope: !13871)
!13878 = !DILocalVariable(name: "arena", arg: 2, scope: !13871, file: !3, line: 1403, type: !3868)
!13879 = !DILocation(line: 1403, column: 19, scope: !13871)
!13880 = !DILocalVariable(name: "tinf", arg: 3, scope: !13871, file: !3, line: 1404, type: !13874)
!13881 = !DILocation(line: 1404, column: 25, scope: !13871)
!13882 = !DILocalVariable(name: "x_px", arg: 4, scope: !13871, file: !3, line: 1405, type: !22)
!13883 = !DILocation(line: 1405, column: 13, scope: !13871)
!13884 = !DILocalVariable(name: "y_px", arg: 5, scope: !13871, file: !3, line: 1405, type: !22)
!13885 = !DILocation(line: 1405, column: 23, scope: !13871)
!13886 = !DILocalVariable(name: "mask", arg: 6, scope: !13871, file: !3, line: 1406, type: !1778)
!13887 = !DILocation(line: 1406, column: 21, scope: !13871)
!13888 = !DILocalVariable(name: "face_index", arg: 7, scope: !13871, file: !3, line: 1407, type: !5126)
!13889 = !DILocation(line: 1407, column: 19, scope: !13871)
!13890 = !DILocalVariable(name: "pixelScreenCo", arg: 8, scope: !13871, file: !3, line: 1408, type: !1944)
!13891 = !DILocation(line: 1408, column: 21, scope: !13871)
!13892 = !DILocalVariable(name: "world_spaceCo", arg: 9, scope: !13871, file: !3, line: 1409, type: !1944)
!13893 = !DILocation(line: 1409, column: 21, scope: !13871)
!13894 = !DILocalVariable(name: "side", arg: 10, scope: !13871, file: !3, line: 1410, type: !5126)
!13895 = !DILocation(line: 1410, column: 19, scope: !13871)
!13896 = !DILocalVariable(name: "w", arg: 11, scope: !13871, file: !3, line: 1411, type: !1944)
!13897 = !DILocation(line: 1411, column: 21, scope: !13871)
!13898 = !DILocalVariable(name: "projPixel", scope: !13871, file: !3, line: 1413, type: !3983)
!13899 = !DILocation(line: 1413, column: 13, scope: !13871)
!13900 = !DILocalVariable(name: "x_tile", scope: !13871, file: !3, line: 1414, type: !22)
!13901 = !DILocation(line: 1414, column: 6, scope: !13871)
!13902 = !DILocalVariable(name: "y_tile", scope: !13871, file: !3, line: 1414, type: !22)
!13903 = !DILocation(line: 1414, column: 14, scope: !13871)
!13904 = !DILocalVariable(name: "x_round", scope: !13871, file: !3, line: 1415, type: !22)
!13905 = !DILocation(line: 1415, column: 6, scope: !13871)
!13906 = !DILocalVariable(name: "y_round", scope: !13871, file: !3, line: 1415, type: !22)
!13907 = !DILocation(line: 1415, column: 15, scope: !13871)
!13908 = !DILocalVariable(name: "tile_offset", scope: !13871, file: !3, line: 1416, type: !22)
!13909 = !DILocation(line: 1416, column: 6, scope: !13871)
!13910 = !DILocalVariable(name: "tile_index", scope: !13871, file: !3, line: 1418, type: !13911)
!13911 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !22)
!13912 = !DILocation(line: 1418, column: 15, scope: !13871)
!13913 = !DILocalVariable(name: "projima", scope: !13871, file: !3, line: 1420, type: !3887)
!13914 = !DILocation(line: 1420, column: 18, scope: !13871)
!13915 = !DILocation(line: 1420, column: 28, scope: !13871)
!13916 = !DILocation(line: 1420, column: 34, scope: !13871)
!13917 = !DILocalVariable(name: "ibuf", scope: !13871, file: !3, line: 1421, type: !3893)
!13918 = !DILocation(line: 1421, column: 9, scope: !13871)
!13919 = !DILocation(line: 1421, column: 16, scope: !13871)
!13920 = !DILocation(line: 1421, column: 25, scope: !13871)
!13921 = !DILocation(line: 1424, column: 15, scope: !13871)
!13922 = !DILocation(line: 1424, column: 21, scope: !13871)
!13923 = !DILocation(line: 1424, column: 27, scope: !13871)
!13924 = !DILocation(line: 1424, column: 9, scope: !13871)
!13925 = !DILocation(line: 1424, column: 7, scope: !13871)
!13926 = !DILocation(line: 1425, column: 15, scope: !13871)
!13927 = !DILocation(line: 1425, column: 21, scope: !13871)
!13928 = !DILocation(line: 1425, column: 27, scope: !13871)
!13929 = !DILocation(line: 1425, column: 9, scope: !13871)
!13930 = !DILocation(line: 1425, column: 7, scope: !13871)
!13931 = !DILocation(line: 1428, column: 46, scope: !13871)
!13932 = !DILocation(line: 1428, column: 53, scope: !13871)
!13933 = !DILocation(line: 1428, column: 57, scope: !13871)
!13934 = !DILocation(line: 1428, column: 27, scope: !13871)
!13935 = !DILocation(line: 1428, column: 14, scope: !13871)
!13936 = !DILocation(line: 1428, column: 12, scope: !13871)
!13937 = !DILocation(line: 1432, column: 12, scope: !13871)
!13938 = !DILocation(line: 1432, column: 17, scope: !13871)
!13939 = !DILocation(line: 1432, column: 9, scope: !13871)
!13940 = !DILocation(line: 1433, column: 12, scope: !13871)
!13941 = !DILocation(line: 1433, column: 17, scope: !13871)
!13942 = !DILocation(line: 1433, column: 9, scope: !13871)
!13943 = !DILocation(line: 1435, column: 12, scope: !13871)
!13944 = !DILocation(line: 1435, column: 19, scope: !13871)
!13945 = !DILocation(line: 1435, column: 10, scope: !13871)
!13946 = !DILocation(line: 1436, column: 12, scope: !13871)
!13947 = !DILocation(line: 1436, column: 19, scope: !13871)
!13948 = !DILocation(line: 1436, column: 10, scope: !13871)
!13949 = !DILocation(line: 1439, column: 17, scope: !13871)
!13950 = !DILocation(line: 1439, column: 24, scope: !13871)
!13951 = !DILocation(line: 1439, column: 22, scope: !13871)
!13952 = !DILocation(line: 1439, column: 36, scope: !13871)
!13953 = !DILocation(line: 1439, column: 43, scope: !13871)
!13954 = !DILocation(line: 1439, column: 41, scope: !13871)
!13955 = !DILocation(line: 1439, column: 52, scope: !13871)
!13956 = !DILocation(line: 1439, column: 33, scope: !13871)
!13957 = !DILocation(line: 1439, column: 14, scope: !13871)
!13958 = !DILocation(line: 1440, column: 43, scope: !13871)
!13959 = !DILocation(line: 1440, column: 49, scope: !13871)
!13960 = !DILocation(line: 1440, column: 57, scope: !13871)
!13961 = !DILocation(line: 1440, column: 15, scope: !13871)
!13962 = !DILocation(line: 1440, column: 13, scope: !13871)
!13963 = !DILocation(line: 1443, column: 2, scope: !13871)
!13964 = !DILocation(line: 1443, column: 9, scope: !13871)
!13965 = !DILocation(line: 1443, column: 18, scope: !13871)
!13966 = !DILocation(line: 1443, column: 27, scope: !13871)
!13967 = !DILocation(line: 1443, column: 39, scope: !13871)
!13968 = distinct !{!13968, !13963, !13969}
!13969 = !DILocation(line: 1444, column: 3, scope: !13871)
!13970 = !DILocation(line: 1449, column: 21, scope: !13871)
!13971 = !DILocation(line: 1449, column: 30, scope: !13871)
!13972 = !DILocation(line: 1449, column: 36, scope: !13871)
!13973 = !DILocation(line: 1449, column: 2, scope: !13871)
!13974 = !DILocation(line: 1449, column: 13, scope: !13871)
!13975 = !DILocation(line: 1449, column: 19, scope: !13871)
!13976 = !DILocation(line: 1451, column: 6, scope: !13977)
!13977 = distinct !DILexicalBlock(scope: !13871, file: !3, line: 1451, column: 6)
!13978 = !DILocation(line: 1451, column: 12, scope: !13977)
!13979 = !DILocation(line: 1451, column: 6, scope: !13871)
!13980 = !DILocation(line: 1452, column: 27, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !13977, file: !3, line: 1451, column: 24)
!13982 = !DILocation(line: 1452, column: 33, scope: !13981)
!13983 = !DILocation(line: 1452, column: 48, scope: !13981)
!13984 = !DILocation(line: 1452, column: 55, scope: !13981)
!13985 = !DILocation(line: 1452, column: 62, scope: !13981)
!13986 = !DILocation(line: 1452, column: 68, scope: !13981)
!13987 = !DILocation(line: 1452, column: 60, scope: !13981)
!13988 = !DILocation(line: 1452, column: 53, scope: !13981)
!13989 = !DILocation(line: 1452, column: 71, scope: !13981)
!13990 = !DILocation(line: 1452, column: 44, scope: !13981)
!13991 = !DILocation(line: 1452, column: 3, scope: !13981)
!13992 = !DILocation(line: 1452, column: 14, scope: !13981)
!13993 = !DILocation(line: 1452, column: 20, scope: !13981)
!13994 = !DILocation(line: 1452, column: 25, scope: !13981)
!13995 = !DILocation(line: 1453, column: 40, scope: !13981)
!13996 = !DILocation(line: 1453, column: 49, scope: !13981)
!13997 = !DILocation(line: 1453, column: 58, scope: !13981)
!13998 = !DILocation(line: 1453, column: 31, scope: !13981)
!13999 = !DILocation(line: 1453, column: 76, scope: !13981)
!14000 = !DILocation(line: 1453, column: 74, scope: !13981)
!14001 = !DILocation(line: 1453, column: 70, scope: !13981)
!14002 = !DILocation(line: 1453, column: 3, scope: !13981)
!14003 = !DILocation(line: 1453, column: 14, scope: !13981)
!14004 = !DILocation(line: 1453, column: 24, scope: !13981)
!14005 = !DILocation(line: 1453, column: 29, scope: !13981)
!14006 = !DILocation(line: 1454, column: 11, scope: !13981)
!14007 = !DILocation(line: 1454, column: 22, scope: !13981)
!14008 = !DILocation(line: 1454, column: 31, scope: !13981)
!14009 = !DILocation(line: 1454, column: 3, scope: !13981)
!14010 = !DILocation(line: 1455, column: 2, scope: !13981)
!14011 = !DILocation(line: 1457, column: 46, scope: !14012)
!14012 = distinct !DILexicalBlock(scope: !13977, file: !3, line: 1456, column: 7)
!14013 = !DILocation(line: 1457, column: 52, scope: !14012)
!14014 = !DILocation(line: 1457, column: 60, scope: !14012)
!14015 = !DILocation(line: 1457, column: 67, scope: !14012)
!14016 = !DILocation(line: 1457, column: 74, scope: !14012)
!14017 = !DILocation(line: 1457, column: 80, scope: !14012)
!14018 = !DILocation(line: 1457, column: 72, scope: !14012)
!14019 = !DILocation(line: 1457, column: 65, scope: !14012)
!14020 = !DILocation(line: 1457, column: 57, scope: !14012)
!14021 = !DILocation(line: 1457, column: 28, scope: !14012)
!14022 = !DILocation(line: 1457, column: 3, scope: !14012)
!14023 = !DILocation(line: 1457, column: 14, scope: !14012)
!14024 = !DILocation(line: 1457, column: 20, scope: !14012)
!14025 = !DILocation(line: 1457, column: 26, scope: !14012)
!14026 = !DILocation(line: 1458, column: 50, scope: !14012)
!14027 = !DILocation(line: 1458, column: 59, scope: !14012)
!14028 = !DILocation(line: 1458, column: 68, scope: !14012)
!14029 = !DILocation(line: 1458, column: 34, scope: !14012)
!14030 = !DILocation(line: 1458, column: 82, scope: !14012)
!14031 = !DILocation(line: 1458, column: 80, scope: !14012)
!14032 = !DILocation(line: 1458, column: 3, scope: !14012)
!14033 = !DILocation(line: 1458, column: 14, scope: !14012)
!14034 = !DILocation(line: 1458, column: 24, scope: !14012)
!14035 = !DILocation(line: 1458, column: 32, scope: !14012)
!14036 = !DILocation(line: 1459, column: 3, scope: !14012)
!14037 = !DILocation(line: 1459, column: 14, scope: !14012)
!14038 = !DILocation(line: 1459, column: 23, scope: !14012)
!14039 = !DILocation(line: 1459, column: 28, scope: !14012)
!14040 = !DILocation(line: 1463, column: 6, scope: !14041)
!14041 = distinct !DILexicalBlock(scope: !13871, file: !3, line: 1463, column: 6)
!14042 = !DILocation(line: 1463, column: 10, scope: !14041)
!14043 = !DILocation(line: 1463, column: 17, scope: !14041)
!14044 = !DILocation(line: 1463, column: 22, scope: !14041)
!14045 = !DILocation(line: 1463, column: 37, scope: !14041)
!14046 = !DILocation(line: 1463, column: 6, scope: !13871)
!14047 = !DILocation(line: 1464, column: 14, scope: !14048)
!14048 = distinct !DILexicalBlock(scope: !14041, file: !3, line: 1463, column: 58)
!14049 = !DILocation(line: 1464, column: 25, scope: !14048)
!14050 = !DILocation(line: 1464, column: 36, scope: !14048)
!14051 = !DILocation(line: 1464, column: 3, scope: !14048)
!14052 = !DILocation(line: 1465, column: 2, scope: !14048)
!14053 = !DILocation(line: 1467, column: 13, scope: !13871)
!14054 = !DILocation(line: 1467, column: 24, scope: !13871)
!14055 = !DILocation(line: 1467, column: 34, scope: !13871)
!14056 = !DILocation(line: 1467, column: 2, scope: !13871)
!14057 = !DILocation(line: 1469, column: 20, scope: !13871)
!14058 = !DILocation(line: 1469, column: 2, scope: !13871)
!14059 = !DILocation(line: 1469, column: 13, scope: !13871)
!14060 = !DILocation(line: 1469, column: 18, scope: !13871)
!14061 = !DILocation(line: 1470, column: 20, scope: !13871)
!14062 = !DILocation(line: 1470, column: 2, scope: !13871)
!14063 = !DILocation(line: 1470, column: 13, scope: !13871)
!14064 = !DILocation(line: 1470, column: 18, scope: !13871)
!14065 = !DILocation(line: 1472, column: 37, scope: !13871)
!14066 = !DILocation(line: 1472, column: 42, scope: !13871)
!14067 = !DILocation(line: 1472, column: 20, scope: !13871)
!14068 = !DILocation(line: 1472, column: 2, scope: !13871)
!14069 = !DILocation(line: 1472, column: 13, scope: !13871)
!14070 = !DILocation(line: 1472, column: 18, scope: !13871)
!14071 = !DILocation(line: 1473, column: 6, scope: !14072)
!14072 = distinct !DILexicalBlock(scope: !13871, file: !3, line: 1473, column: 6)
!14073 = !DILocation(line: 1473, column: 10, scope: !14072)
!14074 = !DILocation(line: 1473, column: 6, scope: !13871)
!14075 = !DILocation(line: 1474, column: 27, scope: !14072)
!14076 = !DILocation(line: 1474, column: 36, scope: !14072)
!14077 = !DILocation(line: 1474, column: 45, scope: !14072)
!14078 = !DILocation(line: 1474, column: 59, scope: !14072)
!14079 = !DILocation(line: 1474, column: 57, scope: !14072)
!14080 = !DILocation(line: 1474, column: 3, scope: !14072)
!14081 = !DILocation(line: 1474, column: 14, scope: !14072)
!14082 = !DILocation(line: 1474, column: 25, scope: !14072)
!14083 = !DILocation(line: 1476, column: 3, scope: !14072)
!14084 = !DILocation(line: 1476, column: 14, scope: !14072)
!14085 = !DILocation(line: 1476, column: 25, scope: !14072)
!14086 = !DILocation(line: 1479, column: 44, scope: !13871)
!14087 = !DILocation(line: 1479, column: 37, scope: !13871)
!14088 = !DILocation(line: 1479, column: 58, scope: !13871)
!14089 = !DILocation(line: 1479, column: 64, scope: !13871)
!14090 = !DILocation(line: 1479, column: 51, scope: !13871)
!14091 = !DILocation(line: 1479, column: 49, scope: !13871)
!14092 = !DILocation(line: 1479, column: 67, scope: !13871)
!14093 = !DILocation(line: 1479, column: 30, scope: !13871)
!14094 = !DILocation(line: 1480, column: 44, scope: !13871)
!14095 = !DILocation(line: 1480, column: 37, scope: !13871)
!14096 = !DILocation(line: 1480, column: 58, scope: !13871)
!14097 = !DILocation(line: 1480, column: 64, scope: !13871)
!14098 = !DILocation(line: 1480, column: 51, scope: !13871)
!14099 = !DILocation(line: 1480, column: 49, scope: !13871)
!14100 = !DILocation(line: 1480, column: 67, scope: !13871)
!14101 = !DILocation(line: 1480, column: 30, scope: !13871)
!14102 = !DILocation(line: 1480, column: 89, scope: !13871)
!14103 = !DILocation(line: 1479, column: 89, scope: !13871)
!14104 = !DILocation(line: 1479, column: 29, scope: !13871)
!14105 = !DILocation(line: 1479, column: 2, scope: !13871)
!14106 = !DILocation(line: 1479, column: 13, scope: !13871)
!14107 = !DILocation(line: 1479, column: 27, scope: !13871)
!14108 = !DILocation(line: 1483, column: 6, scope: !14109)
!14109 = distinct !DILexicalBlock(scope: !13871, file: !3, line: 1483, column: 6)
!14110 = !DILocation(line: 1483, column: 10, scope: !14109)
!14111 = !DILocation(line: 1483, column: 15, scope: !14109)
!14112 = !DILocation(line: 1483, column: 6, scope: !13871)
!14113 = !DILocation(line: 1484, column: 7, scope: !14114)
!14114 = distinct !DILexicalBlock(scope: !14115, file: !3, line: 1484, column: 7)
!14115 = distinct !DILexicalBlock(scope: !14109, file: !3, line: 1483, column: 36)
!14116 = !DILocation(line: 1484, column: 11, scope: !14114)
!14117 = !DILocation(line: 1484, column: 7, scope: !14115)
!14118 = !DILocalVariable(name: "ibuf_other", scope: !14119, file: !3, line: 1485, type: !3893)
!14119 = distinct !DILexicalBlock(scope: !14114, file: !3, line: 1484, column: 28)
!14120 = !DILocation(line: 1485, column: 11, scope: !14119)
!14121 = !DILocalVariable(name: "other_tpage", scope: !14119, file: !3, line: 1486, type: !3861)
!14122 = !DILocation(line: 1486, column: 11, scope: !14119)
!14123 = !DILocation(line: 1486, column: 56, scope: !14119)
!14124 = !DILocation(line: 1486, column: 60, scope: !14119)
!14125 = !DILocation(line: 1486, column: 25, scope: !14119)
!14126 = !DILocalVariable(name: "tf_other", scope: !14119, file: !3, line: 1487, type: !11220)
!14127 = !DILocation(line: 1487, column: 18, scope: !14119)
!14128 = !DILocation(line: 1487, column: 29, scope: !14119)
!14129 = !DILocation(line: 1487, column: 33, scope: !14119)
!14130 = !DILocation(line: 1487, column: 49, scope: !14119)
!14131 = !DILocation(line: 1489, column: 8, scope: !14132)
!14132 = distinct !DILexicalBlock(scope: !14119, file: !3, line: 1489, column: 8)
!14133 = !DILocation(line: 1489, column: 20, scope: !14132)
!14134 = !DILocation(line: 1489, column: 60, scope: !14132)
!14135 = !DILocation(line: 1489, column: 37, scope: !14132)
!14136 = !DILocation(line: 1489, column: 35, scope: !14132)
!14137 = !DILocation(line: 1489, column: 8, scope: !14119)
!14138 = !DILocation(line: 1492, column: 9, scope: !14139)
!14139 = distinct !DILexicalBlock(scope: !14140, file: !3, line: 1492, column: 9)
!14140 = distinct !DILexicalBlock(scope: !14132, file: !3, line: 1489, column: 87)
!14141 = !DILocation(line: 1492, column: 15, scope: !14139)
!14142 = !DILocation(line: 1492, column: 9, scope: !14140)
!14143 = !DILocation(line: 1493, column: 10, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !14145, file: !3, line: 1493, column: 10)
!14145 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 1492, column: 27)
!14146 = !DILocation(line: 1493, column: 22, scope: !14144)
!14147 = !DILocation(line: 1493, column: 10, scope: !14145)
!14148 = !DILocation(line: 1494, column: 26, scope: !14149)
!14149 = distinct !DILexicalBlock(scope: !14144, file: !3, line: 1493, column: 34)
!14150 = !DILocation(line: 1494, column: 36, scope: !14149)
!14151 = !DILocation(line: 1494, column: 48, scope: !14149)
!14152 = !DILocation(line: 1494, column: 51, scope: !14149)
!14153 = !DILocation(line: 1494, column: 82, scope: !14149)
!14154 = !DILocation(line: 1494, column: 94, scope: !14149)
!14155 = !DILocation(line: 1494, column: 102, scope: !14149)
!14156 = !DILocation(line: 1494, column: 63, scope: !14149)
!14157 = !DILocation(line: 1494, column: 7, scope: !14149)
!14158 = !DILocation(line: 1495, column: 6, scope: !14149)
!14159 = !DILocalVariable(name: "rgba_ub", scope: !14160, file: !3, line: 1497, type: !2703)
!14160 = distinct !DILexicalBlock(scope: !14144, file: !3, line: 1496, column: 11)
!14161 = !DILocation(line: 1497, column: 21, scope: !14160)
!14162 = !DILocalVariable(name: "rgba", scope: !14160, file: !3, line: 1498, type: !496)
!14163 = !DILocation(line: 1498, column: 13, scope: !14160)
!14164 = !DILocation(line: 1499, column: 26, scope: !14160)
!14165 = !DILocation(line: 1499, column: 36, scope: !14160)
!14166 = !DILocation(line: 1499, column: 48, scope: !14160)
!14167 = !DILocation(line: 1499, column: 51, scope: !14160)
!14168 = !DILocation(line: 1499, column: 57, scope: !14160)
!14169 = !DILocation(line: 1499, column: 7, scope: !14160)
!14170 = !DILocation(line: 1500, column: 32, scope: !14160)
!14171 = !DILocation(line: 1500, column: 38, scope: !14160)
!14172 = !DILocation(line: 1500, column: 7, scope: !14160)
!14173 = !DILocation(line: 1501, column: 51, scope: !14160)
!14174 = !DILocation(line: 1501, column: 63, scope: !14160)
!14175 = !DILocation(line: 1501, column: 71, scope: !14160)
!14176 = !DILocation(line: 1501, column: 32, scope: !14160)
!14177 = !DILocation(line: 1501, column: 74, scope: !14160)
!14178 = !DILocation(line: 1501, column: 7, scope: !14160)
!14179 = !DILocation(line: 1503, column: 5, scope: !14145)
!14180 = !DILocation(line: 1505, column: 10, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !14182, file: !3, line: 1505, column: 10)
!14182 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 1504, column: 10)
!14183 = !DILocation(line: 1505, column: 22, scope: !14181)
!14184 = !DILocation(line: 1505, column: 10, scope: !14182)
!14185 = !DILocalVariable(name: "rgba", scope: !14186, file: !3, line: 1506, type: !496)
!14186 = distinct !DILexicalBlock(scope: !14181, file: !3, line: 1505, column: 34)
!14187 = !DILocation(line: 1506, column: 13, scope: !14186)
!14188 = !DILocation(line: 1507, column: 26, scope: !14186)
!14189 = !DILocation(line: 1507, column: 36, scope: !14186)
!14190 = !DILocation(line: 1507, column: 48, scope: !14186)
!14191 = !DILocation(line: 1507, column: 51, scope: !14186)
!14192 = !DILocation(line: 1507, column: 63, scope: !14186)
!14193 = !DILocation(line: 1507, column: 7, scope: !14186)
!14194 = !DILocation(line: 1508, column: 29, scope: !14186)
!14195 = !DILocation(line: 1508, column: 7, scope: !14186)
!14196 = !DILocation(line: 1509, column: 51, scope: !14186)
!14197 = !DILocation(line: 1509, column: 63, scope: !14186)
!14198 = !DILocation(line: 1509, column: 71, scope: !14186)
!14199 = !DILocation(line: 1509, column: 32, scope: !14186)
!14200 = !DILocation(line: 1509, column: 75, scope: !14186)
!14201 = !DILocation(line: 1509, column: 7, scope: !14186)
!14202 = !DILocation(line: 1510, column: 55, scope: !14186)
!14203 = !DILocation(line: 1510, column: 63, scope: !14186)
!14204 = !DILocation(line: 1510, column: 26, scope: !14186)
!14205 = !DILocation(line: 1510, column: 38, scope: !14186)
!14206 = !DILocation(line: 1510, column: 46, scope: !14186)
!14207 = !DILocation(line: 1510, column: 7, scope: !14186)
!14208 = !DILocation(line: 1510, column: 52, scope: !14186)
!14209 = !DILocation(line: 1511, column: 6, scope: !14186)
!14210 = !DILocation(line: 1513, column: 26, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14181, file: !3, line: 1512, column: 11)
!14212 = !DILocation(line: 1513, column: 36, scope: !14211)
!14213 = !DILocation(line: 1513, column: 48, scope: !14211)
!14214 = !DILocation(line: 1513, column: 51, scope: !14211)
!14215 = !DILocation(line: 1513, column: 76, scope: !14211)
!14216 = !DILocation(line: 1513, column: 88, scope: !14211)
!14217 = !DILocation(line: 1513, column: 96, scope: !14211)
!14218 = !DILocation(line: 1513, column: 57, scope: !14211)
!14219 = !DILocation(line: 1513, column: 7, scope: !14211)
!14220 = !DILocation(line: 1517, column: 28, scope: !14140)
!14221 = !DILocation(line: 1517, column: 41, scope: !14140)
!14222 = !DILocation(line: 1517, column: 5, scope: !14140)
!14223 = !DILocation(line: 1518, column: 4, scope: !14140)
!14224 = !DILocation(line: 1520, column: 9, scope: !14225)
!14225 = distinct !DILexicalBlock(scope: !14226, file: !3, line: 1520, column: 9)
!14226 = distinct !DILexicalBlock(scope: !14132, file: !3, line: 1519, column: 9)
!14227 = !DILocation(line: 1520, column: 15, scope: !14225)
!14228 = !DILocation(line: 1520, column: 9, scope: !14226)
!14229 = !DILocation(line: 1521, column: 25, scope: !14230)
!14230 = distinct !DILexicalBlock(scope: !14225, file: !3, line: 1520, column: 27)
!14231 = !DILocation(line: 1521, column: 37, scope: !14230)
!14232 = !DILocation(line: 1521, column: 45, scope: !14230)
!14233 = !DILocation(line: 1521, column: 6, scope: !14230)
!14234 = !DILocation(line: 1521, column: 50, scope: !14230)
!14235 = !DILocation(line: 1522, column: 5, scope: !14230)
!14236 = !DILocation(line: 1524, column: 25, scope: !14237)
!14237 = distinct !DILexicalBlock(scope: !14225, file: !3, line: 1523, column: 10)
!14238 = !DILocation(line: 1524, column: 37, scope: !14237)
!14239 = !DILocation(line: 1524, column: 45, scope: !14237)
!14240 = !DILocation(line: 1524, column: 6, scope: !14237)
!14241 = !DILocation(line: 1524, column: 51, scope: !14237)
!14242 = !DILocation(line: 1528, column: 3, scope: !14119)
!14243 = !DILocalVariable(name: "co", scope: !14244, file: !3, line: 1530, type: !860)
!14244 = distinct !DILexicalBlock(scope: !14114, file: !3, line: 1529, column: 8)
!14245 = !DILocation(line: 1530, column: 10, scope: !14244)
!14246 = !DILocation(line: 1531, column: 16, scope: !14244)
!14247 = !DILocation(line: 1531, column: 20, scope: !14244)
!14248 = !DILocation(line: 1531, column: 31, scope: !14244)
!14249 = !DILocation(line: 1531, column: 50, scope: !14244)
!14250 = !DILocation(line: 1531, column: 54, scope: !14244)
!14251 = !DILocation(line: 1531, column: 4, scope: !14244)
!14252 = !DILocation(line: 1535, column: 8, scope: !14253)
!14253 = distinct !DILexicalBlock(scope: !14244, file: !3, line: 1535, column: 8)
!14254 = !DILocation(line: 1535, column: 14, scope: !14253)
!14255 = !DILocation(line: 1535, column: 8, scope: !14244)
!14256 = !DILocation(line: 1536, column: 34, scope: !14257)
!14257 = distinct !DILexicalBlock(scope: !14258, file: !3, line: 1536, column: 9)
!14258 = distinct !DILexicalBlock(scope: !14253, file: !3, line: 1535, column: 26)
!14259 = !DILocation(line: 1536, column: 38, scope: !14257)
!14260 = !DILocation(line: 1536, column: 61, scope: !14257)
!14261 = !DILocation(line: 1536, column: 73, scope: !14257)
!14262 = !DILocation(line: 1536, column: 81, scope: !14257)
!14263 = !DILocation(line: 1536, column: 42, scope: !14257)
!14264 = !DILocation(line: 1536, column: 10, scope: !14257)
!14265 = !DILocation(line: 1536, column: 9, scope: !14258)
!14266 = !DILocation(line: 1537, column: 25, scope: !14267)
!14267 = distinct !DILexicalBlock(scope: !14257, file: !3, line: 1536, column: 94)
!14268 = !DILocation(line: 1537, column: 37, scope: !14267)
!14269 = !DILocation(line: 1537, column: 45, scope: !14267)
!14270 = !DILocation(line: 1537, column: 6, scope: !14267)
!14271 = !DILocation(line: 1537, column: 50, scope: !14267)
!14272 = !DILocation(line: 1538, column: 5, scope: !14267)
!14273 = !DILocation(line: 1539, column: 4, scope: !14258)
!14274 = !DILocation(line: 1541, column: 34, scope: !14275)
!14275 = distinct !DILexicalBlock(scope: !14276, file: !3, line: 1541, column: 9)
!14276 = distinct !DILexicalBlock(scope: !14253, file: !3, line: 1540, column: 9)
!14277 = !DILocation(line: 1541, column: 38, scope: !14275)
!14278 = !DILocation(line: 1541, column: 67, scope: !14275)
!14279 = !DILocation(line: 1541, column: 79, scope: !14275)
!14280 = !DILocation(line: 1541, column: 87, scope: !14275)
!14281 = !DILocation(line: 1541, column: 48, scope: !14275)
!14282 = !DILocation(line: 1541, column: 10, scope: !14275)
!14283 = !DILocation(line: 1541, column: 9, scope: !14276)
!14284 = !DILocation(line: 1542, column: 25, scope: !14285)
!14285 = distinct !DILexicalBlock(scope: !14275, file: !3, line: 1541, column: 95)
!14286 = !DILocation(line: 1542, column: 37, scope: !14285)
!14287 = !DILocation(line: 1542, column: 45, scope: !14285)
!14288 = !DILocation(line: 1542, column: 6, scope: !14285)
!14289 = !DILocation(line: 1542, column: 51, scope: !14285)
!14290 = !DILocation(line: 1543, column: 5, scope: !14285)
!14291 = !DILocation(line: 1546, column: 2, scope: !14115)
!14292 = !DILocation(line: 1553, column: 27, scope: !13871)
!14293 = !DILocation(line: 1553, column: 37, scope: !13871)
!14294 = !DILocation(line: 1553, column: 41, scope: !13871)
!14295 = !DILocation(line: 1553, column: 35, scope: !13871)
!14296 = !DILocation(line: 1553, column: 2, scope: !13871)
!14297 = !DILocation(line: 1553, column: 13, scope: !13871)
!14298 = !DILocation(line: 1553, column: 25, scope: !13871)
!14299 = !DILocation(line: 1555, column: 9, scope: !13871)
!14300 = !DILocation(line: 1555, column: 2, scope: !13871)
!14301 = distinct !DISubprogram(name: "project_face_seams_init", scope: !3, file: !3, line: 1104, type: !14302, scopeLine: 1105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!14302 = !DISubroutineType(types: !14303)
!14303 = !{null, !9396, !5126, !5126}
!14304 = !DILocalVariable(name: "ps", arg: 1, scope: !14301, file: !3, line: 1104, type: !9396)
!14305 = !DILocation(line: 1104, column: 59, scope: !14301)
!14306 = !DILocalVariable(name: "face_index", arg: 2, scope: !14301, file: !3, line: 1104, type: !5126)
!14307 = !DILocation(line: 1104, column: 73, scope: !14301)
!14308 = !DILocalVariable(name: "is_quad", arg: 3, scope: !14301, file: !3, line: 1104, type: !5126)
!14309 = !DILocation(line: 1104, column: 95, scope: !14301)
!14310 = !DILocalVariable(name: "other_face", scope: !14301, file: !3, line: 1106, type: !22)
!14311 = !DILocation(line: 1106, column: 6, scope: !14301)
!14312 = !DILocalVariable(name: "other_fidx", scope: !14301, file: !3, line: 1106, type: !22)
!14313 = !DILocation(line: 1106, column: 18, scope: !14301)
!14314 = !DILocalVariable(name: "fidx1", scope: !14301, file: !3, line: 1107, type: !22)
!14315 = !DILocation(line: 1107, column: 6, scope: !14301)
!14316 = !DILocation(line: 1107, column: 14, scope: !14301)
!14317 = !DILocalVariable(name: "fidx2", scope: !14301, file: !3, line: 1108, type: !22)
!14318 = !DILocation(line: 1108, column: 6, scope: !14301)
!14319 = !DILocation(line: 1111, column: 7, scope: !14320)
!14320 = distinct !DILexicalBlock(scope: !14301, file: !3, line: 1111, column: 6)
!14321 = !DILocation(line: 1111, column: 11, scope: !14320)
!14322 = !DILocation(line: 1111, column: 28, scope: !14320)
!14323 = !DILocation(line: 1111, column: 40, scope: !14320)
!14324 = !DILocation(line: 1111, column: 66, scope: !14320)
!14325 = !DILocation(line: 1111, column: 6, scope: !14301)
!14326 = !DILocation(line: 1112, column: 29, scope: !14320)
!14327 = !DILocation(line: 1112, column: 33, scope: !14320)
!14328 = !DILocation(line: 1112, column: 3, scope: !14320)
!14329 = !DILocation(line: 1114, column: 2, scope: !14301)
!14330 = !DILocation(line: 1115, column: 8, scope: !14331)
!14331 = distinct !DILexicalBlock(scope: !14332, file: !3, line: 1115, column: 7)
!14332 = distinct !DILexicalBlock(scope: !14301, file: !3, line: 1114, column: 5)
!14333 = !DILocation(line: 1115, column: 12, scope: !14331)
!14334 = !DILocation(line: 1115, column: 26, scope: !14331)
!14335 = !DILocation(line: 1115, column: 46, scope: !14331)
!14336 = !DILocation(line: 1115, column: 43, scope: !14331)
!14337 = !DILocation(line: 1115, column: 60, scope: !14331)
!14338 = !DILocation(line: 1115, column: 57, scope: !14331)
!14339 = !DILocation(line: 1115, column: 52, scope: !14331)
!14340 = !DILocation(line: 1115, column: 38, scope: !14331)
!14341 = !DILocation(line: 1115, column: 68, scope: !14331)
!14342 = !DILocation(line: 1115, column: 7, scope: !14332)
!14343 = !DILocation(line: 1116, column: 19, scope: !14344)
!14344 = distinct !DILexicalBlock(scope: !14345, file: !3, line: 1116, column: 8)
!14345 = distinct !DILexicalBlock(scope: !14331, file: !3, line: 1115, column: 74)
!14346 = !DILocation(line: 1116, column: 23, scope: !14344)
!14347 = !DILocation(line: 1116, column: 35, scope: !14344)
!14348 = !DILocation(line: 1116, column: 42, scope: !14344)
!14349 = !DILocation(line: 1116, column: 8, scope: !14344)
!14350 = !DILocation(line: 1116, column: 8, scope: !14345)
!14351 = !DILocation(line: 1117, column: 43, scope: !14352)
!14352 = distinct !DILexicalBlock(scope: !14344, file: !3, line: 1116, column: 76)
!14353 = !DILocation(line: 1117, column: 40, scope: !14352)
!14354 = !DILocation(line: 1117, column: 5, scope: !14352)
!14355 = !DILocation(line: 1117, column: 9, scope: !14352)
!14356 = !DILocation(line: 1117, column: 23, scope: !14352)
!14357 = !DILocation(line: 1117, column: 35, scope: !14352)
!14358 = !DILocation(line: 1118, column: 9, scope: !14359)
!14359 = distinct !DILexicalBlock(scope: !14352, file: !3, line: 1118, column: 9)
!14360 = !DILocation(line: 1118, column: 20, scope: !14359)
!14361 = !DILocation(line: 1118, column: 9, scope: !14352)
!14362 = !DILocation(line: 1119, column: 44, scope: !14359)
!14363 = !DILocation(line: 1119, column: 41, scope: !14359)
!14364 = !DILocation(line: 1119, column: 6, scope: !14359)
!14365 = !DILocation(line: 1119, column: 10, scope: !14359)
!14366 = !DILocation(line: 1119, column: 24, scope: !14359)
!14367 = !DILocation(line: 1119, column: 36, scope: !14359)
!14368 = !DILocation(line: 1120, column: 4, scope: !14352)
!14369 = !DILocation(line: 1122, column: 44, scope: !14370)
!14370 = distinct !DILexicalBlock(scope: !14344, file: !3, line: 1121, column: 9)
!14371 = !DILocation(line: 1122, column: 41, scope: !14370)
!14372 = !DILocation(line: 1122, column: 5, scope: !14370)
!14373 = !DILocation(line: 1122, column: 9, scope: !14370)
!14374 = !DILocation(line: 1122, column: 23, scope: !14370)
!14375 = !DILocation(line: 1122, column: 35, scope: !14370)
!14376 = !DILocation(line: 1123, column: 9, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14370, file: !3, line: 1123, column: 9)
!14378 = !DILocation(line: 1123, column: 20, scope: !14377)
!14379 = !DILocation(line: 1123, column: 9, scope: !14370)
!14380 = !DILocation(line: 1124, column: 45, scope: !14377)
!14381 = !DILocation(line: 1124, column: 42, scope: !14377)
!14382 = !DILocation(line: 1124, column: 6, scope: !14377)
!14383 = !DILocation(line: 1124, column: 10, scope: !14377)
!14384 = !DILocation(line: 1124, column: 24, scope: !14377)
!14385 = !DILocation(line: 1124, column: 36, scope: !14377)
!14386 = !DILocation(line: 1126, column: 3, scope: !14345)
!14387 = !DILocation(line: 1128, column: 11, scope: !14332)
!14388 = !DILocation(line: 1128, column: 9, scope: !14332)
!14389 = !DILocation(line: 1129, column: 2, scope: !14332)
!14390 = !DILocation(line: 1129, column: 16, scope: !14301)
!14391 = distinct !{!14391, !14329, !14392}
!14392 = !DILocation(line: 1129, column: 18, scope: !14301)
!14393 = !DILocation(line: 1130, column: 1, scope: !14301)
!14394 = distinct !DISubprogram(name: "uv_image_outset", scope: !3, file: !3, line: 1000, type: !14395, scopeLine: 1002, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!14395 = !DISubroutineType(types: !14396)
!14396 = !{null, !11745, !11745, !1778, !5126, !5126, !2035}
!14397 = !DILocalVariable(name: "orig_uv", arg: 1, scope: !14394, file: !3, line: 1000, type: !11745)
!14398 = !DILocation(line: 1000, column: 37, scope: !14394)
!14399 = !DILocalVariable(name: "outset_uv", arg: 2, scope: !14394, file: !3, line: 1000, type: !11745)
!14400 = !DILocation(line: 1000, column: 58, scope: !14394)
!14401 = !DILocalVariable(name: "scaler", arg: 3, scope: !14394, file: !3, line: 1000, type: !1778)
!14402 = !DILocation(line: 1000, column: 85, scope: !14394)
!14403 = !DILocalVariable(name: "ibuf_x", arg: 4, scope: !14394, file: !3, line: 1001, type: !5126)
!14404 = !DILocation(line: 1001, column: 39, scope: !14394)
!14405 = !DILocalVariable(name: "ibuf_y", arg: 5, scope: !14394, file: !3, line: 1001, type: !5126)
!14406 = !DILocation(line: 1001, column: 57, scope: !14394)
!14407 = !DILocalVariable(name: "is_quad", arg: 6, scope: !14394, file: !3, line: 1001, type: !2035)
!14408 = !DILocation(line: 1001, column: 76, scope: !14394)
!14409 = !DILocalVariable(name: "a1", scope: !14394, file: !3, line: 1003, type: !184)
!14410 = !DILocation(line: 1003, column: 8, scope: !14394)
!14411 = !DILocalVariable(name: "a2", scope: !14394, file: !3, line: 1003, type: !184)
!14412 = !DILocation(line: 1003, column: 12, scope: !14394)
!14413 = !DILocalVariable(name: "a3", scope: !14394, file: !3, line: 1003, type: !184)
!14414 = !DILocation(line: 1003, column: 16, scope: !14394)
!14415 = !DILocalVariable(name: "a4", scope: !14394, file: !3, line: 1003, type: !184)
!14416 = !DILocation(line: 1003, column: 20, scope: !14394)
!14417 = !DILocalVariable(name: "puv", scope: !14394, file: !3, line: 1004, type: !2027)
!14418 = !DILocation(line: 1004, column: 8, scope: !14394)
!14419 = !DILocalVariable(name: "no1", scope: !14394, file: !3, line: 1005, type: !860)
!14420 = !DILocation(line: 1005, column: 8, scope: !14394)
!14421 = !DILocalVariable(name: "no2", scope: !14394, file: !3, line: 1005, type: !860)
!14422 = !DILocation(line: 1005, column: 16, scope: !14394)
!14423 = !DILocalVariable(name: "no3", scope: !14394, file: !3, line: 1005, type: !860)
!14424 = !DILocation(line: 1005, column: 24, scope: !14394)
!14425 = !DILocalVariable(name: "no4", scope: !14394, file: !3, line: 1005, type: !860)
!14426 = !DILocation(line: 1005, column: 32, scope: !14394)
!14427 = !DILocalVariable(name: "dir1", scope: !14394, file: !3, line: 1006, type: !860)
!14428 = !DILocation(line: 1006, column: 8, scope: !14394)
!14429 = !DILocalVariable(name: "dir2", scope: !14394, file: !3, line: 1006, type: !860)
!14430 = !DILocation(line: 1006, column: 17, scope: !14394)
!14431 = !DILocalVariable(name: "dir3", scope: !14394, file: !3, line: 1006, type: !860)
!14432 = !DILocation(line: 1006, column: 26, scope: !14394)
!14433 = !DILocalVariable(name: "dir4", scope: !14394, file: !3, line: 1006, type: !860)
!14434 = !DILocation(line: 1006, column: 35, scope: !14394)
!14435 = !DILocalVariable(name: "ibuf_inv", scope: !14394, file: !3, line: 1007, type: !860)
!14436 = !DILocation(line: 1007, column: 8, scope: !14394)
!14437 = !DILocation(line: 1009, column: 30, scope: !14394)
!14438 = !DILocation(line: 1009, column: 23, scope: !14394)
!14439 = !DILocation(line: 1009, column: 21, scope: !14394)
!14440 = !DILocation(line: 1009, column: 2, scope: !14394)
!14441 = !DILocation(line: 1009, column: 14, scope: !14394)
!14442 = !DILocation(line: 1010, column: 30, scope: !14394)
!14443 = !DILocation(line: 1010, column: 23, scope: !14394)
!14444 = !DILocation(line: 1010, column: 21, scope: !14394)
!14445 = !DILocation(line: 1010, column: 2, scope: !14394)
!14446 = !DILocation(line: 1010, column: 14, scope: !14394)
!14447 = !DILocation(line: 1013, column: 14, scope: !14394)
!14448 = !DILocation(line: 1013, column: 30, scope: !14394)
!14449 = !DILocation(line: 1013, column: 28, scope: !14394)
!14450 = !DILocation(line: 1013, column: 2, scope: !14394)
!14451 = !DILocation(line: 1013, column: 12, scope: !14394)
!14452 = !DILocation(line: 1014, column: 14, scope: !14394)
!14453 = !DILocation(line: 1014, column: 30, scope: !14394)
!14454 = !DILocation(line: 1014, column: 28, scope: !14394)
!14455 = !DILocation(line: 1014, column: 2, scope: !14394)
!14456 = !DILocation(line: 1014, column: 12, scope: !14394)
!14457 = !DILocation(line: 1016, column: 14, scope: !14394)
!14458 = !DILocation(line: 1016, column: 30, scope: !14394)
!14459 = !DILocation(line: 1016, column: 28, scope: !14394)
!14460 = !DILocation(line: 1016, column: 2, scope: !14394)
!14461 = !DILocation(line: 1016, column: 12, scope: !14394)
!14462 = !DILocation(line: 1017, column: 14, scope: !14394)
!14463 = !DILocation(line: 1017, column: 30, scope: !14394)
!14464 = !DILocation(line: 1017, column: 28, scope: !14394)
!14465 = !DILocation(line: 1017, column: 2, scope: !14394)
!14466 = !DILocation(line: 1017, column: 12, scope: !14394)
!14467 = !DILocation(line: 1019, column: 14, scope: !14394)
!14468 = !DILocation(line: 1019, column: 30, scope: !14394)
!14469 = !DILocation(line: 1019, column: 28, scope: !14394)
!14470 = !DILocation(line: 1019, column: 2, scope: !14394)
!14471 = !DILocation(line: 1019, column: 12, scope: !14394)
!14472 = !DILocation(line: 1020, column: 14, scope: !14394)
!14473 = !DILocation(line: 1020, column: 30, scope: !14394)
!14474 = !DILocation(line: 1020, column: 28, scope: !14394)
!14475 = !DILocation(line: 1020, column: 2, scope: !14394)
!14476 = !DILocation(line: 1020, column: 12, scope: !14394)
!14477 = !DILocation(line: 1022, column: 6, scope: !14478)
!14478 = distinct !DILexicalBlock(scope: !14394, file: !3, line: 1022, column: 6)
!14479 = !DILocation(line: 1022, column: 6, scope: !14394)
!14480 = !DILocation(line: 1023, column: 15, scope: !14481)
!14481 = distinct !DILexicalBlock(scope: !14478, file: !3, line: 1022, column: 15)
!14482 = !DILocation(line: 1023, column: 31, scope: !14481)
!14483 = !DILocation(line: 1023, column: 29, scope: !14481)
!14484 = !DILocation(line: 1023, column: 3, scope: !14481)
!14485 = !DILocation(line: 1023, column: 13, scope: !14481)
!14486 = !DILocation(line: 1024, column: 15, scope: !14481)
!14487 = !DILocation(line: 1024, column: 31, scope: !14481)
!14488 = !DILocation(line: 1024, column: 29, scope: !14481)
!14489 = !DILocation(line: 1024, column: 3, scope: !14481)
!14490 = !DILocation(line: 1024, column: 13, scope: !14481)
!14491 = !DILocation(line: 1025, column: 2, scope: !14481)
!14492 = !DILocation(line: 1028, column: 14, scope: !14394)
!14493 = !DILocation(line: 1028, column: 20, scope: !14394)
!14494 = !DILocation(line: 1028, column: 28, scope: !14394)
!14495 = !DILocation(line: 1028, column: 2, scope: !14394)
!14496 = !DILocation(line: 1029, column: 14, scope: !14394)
!14497 = !DILocation(line: 1029, column: 20, scope: !14394)
!14498 = !DILocation(line: 1029, column: 28, scope: !14394)
!14499 = !DILocation(line: 1029, column: 2, scope: !14394)
!14500 = !DILocation(line: 1030, column: 15, scope: !14394)
!14501 = !DILocation(line: 1030, column: 2, scope: !14394)
!14502 = !DILocation(line: 1031, column: 15, scope: !14394)
!14503 = !DILocation(line: 1031, column: 2, scope: !14394)
!14504 = !DILocation(line: 1033, column: 6, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !14394, file: !3, line: 1033, column: 6)
!14506 = !DILocation(line: 1033, column: 6, scope: !14394)
!14507 = !DILocation(line: 1034, column: 15, scope: !14508)
!14508 = distinct !DILexicalBlock(scope: !14505, file: !3, line: 1033, column: 15)
!14509 = !DILocation(line: 1034, column: 21, scope: !14508)
!14510 = !DILocation(line: 1034, column: 29, scope: !14508)
!14511 = !DILocation(line: 1034, column: 3, scope: !14508)
!14512 = !DILocation(line: 1035, column: 15, scope: !14508)
!14513 = !DILocation(line: 1035, column: 21, scope: !14508)
!14514 = !DILocation(line: 1035, column: 29, scope: !14508)
!14515 = !DILocation(line: 1035, column: 3, scope: !14508)
!14516 = !DILocation(line: 1036, column: 16, scope: !14508)
!14517 = !DILocation(line: 1036, column: 3, scope: !14508)
!14518 = !DILocation(line: 1037, column: 16, scope: !14508)
!14519 = !DILocation(line: 1037, column: 3, scope: !14508)
!14520 = !DILocation(line: 1038, column: 2, scope: !14508)
!14521 = !DILocation(line: 1040, column: 15, scope: !14522)
!14522 = distinct !DILexicalBlock(scope: !14505, file: !3, line: 1039, column: 7)
!14523 = !DILocation(line: 1040, column: 21, scope: !14522)
!14524 = !DILocation(line: 1040, column: 29, scope: !14522)
!14525 = !DILocation(line: 1040, column: 3, scope: !14522)
!14526 = !DILocation(line: 1041, column: 16, scope: !14522)
!14527 = !DILocation(line: 1041, column: 3, scope: !14522)
!14528 = !DILocation(line: 1044, column: 6, scope: !14529)
!14529 = distinct !DILexicalBlock(scope: !14394, file: !3, line: 1044, column: 6)
!14530 = !DILocation(line: 1044, column: 6, scope: !14394)
!14531 = !DILocation(line: 1045, column: 42, scope: !14532)
!14532 = distinct !DILexicalBlock(scope: !14529, file: !3, line: 1044, column: 15)
!14533 = !DILocation(line: 1045, column: 48, scope: !14532)
!14534 = !DILocation(line: 1045, column: 8, scope: !14532)
!14535 = !DILocation(line: 1045, column: 6, scope: !14532)
!14536 = !DILocation(line: 1046, column: 42, scope: !14532)
!14537 = !DILocation(line: 1046, column: 48, scope: !14532)
!14538 = !DILocation(line: 1046, column: 8, scope: !14532)
!14539 = !DILocation(line: 1046, column: 6, scope: !14532)
!14540 = !DILocation(line: 1047, column: 42, scope: !14532)
!14541 = !DILocation(line: 1047, column: 48, scope: !14532)
!14542 = !DILocation(line: 1047, column: 8, scope: !14532)
!14543 = !DILocation(line: 1047, column: 6, scope: !14532)
!14544 = !DILocation(line: 1048, column: 42, scope: !14532)
!14545 = !DILocation(line: 1048, column: 48, scope: !14532)
!14546 = !DILocation(line: 1048, column: 8, scope: !14532)
!14547 = !DILocation(line: 1048, column: 6, scope: !14532)
!14548 = !DILocation(line: 1049, column: 2, scope: !14532)
!14549 = !DILocation(line: 1051, column: 42, scope: !14550)
!14550 = distinct !DILexicalBlock(scope: !14529, file: !3, line: 1050, column: 7)
!14551 = !DILocation(line: 1051, column: 48, scope: !14550)
!14552 = !DILocation(line: 1051, column: 8, scope: !14550)
!14553 = !DILocation(line: 1051, column: 6, scope: !14550)
!14554 = !DILocation(line: 1052, column: 42, scope: !14550)
!14555 = !DILocation(line: 1052, column: 48, scope: !14550)
!14556 = !DILocation(line: 1052, column: 8, scope: !14550)
!14557 = !DILocation(line: 1052, column: 6, scope: !14550)
!14558 = !DILocation(line: 1053, column: 42, scope: !14550)
!14559 = !DILocation(line: 1053, column: 48, scope: !14550)
!14560 = !DILocation(line: 1053, column: 8, scope: !14550)
!14561 = !DILocation(line: 1053, column: 6, scope: !14550)
!14562 = !DILocation(line: 1056, column: 6, scope: !14563)
!14563 = distinct !DILexicalBlock(scope: !14394, file: !3, line: 1056, column: 6)
!14564 = !DILocation(line: 1056, column: 6, scope: !14394)
!14565 = !DILocation(line: 1057, column: 15, scope: !14566)
!14566 = distinct !DILexicalBlock(scope: !14563, file: !3, line: 1056, column: 15)
!14567 = !DILocation(line: 1057, column: 20, scope: !14566)
!14568 = !DILocation(line: 1057, column: 26, scope: !14566)
!14569 = !DILocation(line: 1057, column: 3, scope: !14566)
!14570 = !DILocation(line: 1058, column: 15, scope: !14566)
!14571 = !DILocation(line: 1058, column: 20, scope: !14566)
!14572 = !DILocation(line: 1058, column: 26, scope: !14566)
!14573 = !DILocation(line: 1058, column: 3, scope: !14566)
!14574 = !DILocation(line: 1059, column: 15, scope: !14566)
!14575 = !DILocation(line: 1059, column: 20, scope: !14566)
!14576 = !DILocation(line: 1059, column: 26, scope: !14566)
!14577 = !DILocation(line: 1059, column: 3, scope: !14566)
!14578 = !DILocation(line: 1060, column: 15, scope: !14566)
!14579 = !DILocation(line: 1060, column: 20, scope: !14566)
!14580 = !DILocation(line: 1060, column: 26, scope: !14566)
!14581 = !DILocation(line: 1060, column: 3, scope: !14566)
!14582 = !DILocation(line: 1061, column: 16, scope: !14566)
!14583 = !DILocation(line: 1061, column: 3, scope: !14566)
!14584 = !DILocation(line: 1062, column: 16, scope: !14566)
!14585 = !DILocation(line: 1062, column: 3, scope: !14566)
!14586 = !DILocation(line: 1063, column: 16, scope: !14566)
!14587 = !DILocation(line: 1063, column: 3, scope: !14566)
!14588 = !DILocation(line: 1064, column: 16, scope: !14566)
!14589 = !DILocation(line: 1064, column: 3, scope: !14566)
!14590 = !DILocation(line: 1065, column: 13, scope: !14566)
!14591 = !DILocation(line: 1065, column: 18, scope: !14566)
!14592 = !DILocation(line: 1065, column: 23, scope: !14566)
!14593 = !DILocation(line: 1065, column: 21, scope: !14566)
!14594 = !DILocation(line: 1065, column: 3, scope: !14566)
!14595 = !DILocation(line: 1066, column: 13, scope: !14566)
!14596 = !DILocation(line: 1066, column: 18, scope: !14566)
!14597 = !DILocation(line: 1066, column: 23, scope: !14566)
!14598 = !DILocation(line: 1066, column: 21, scope: !14566)
!14599 = !DILocation(line: 1066, column: 3, scope: !14566)
!14600 = !DILocation(line: 1067, column: 13, scope: !14566)
!14601 = !DILocation(line: 1067, column: 18, scope: !14566)
!14602 = !DILocation(line: 1067, column: 23, scope: !14566)
!14603 = !DILocation(line: 1067, column: 21, scope: !14566)
!14604 = !DILocation(line: 1067, column: 3, scope: !14566)
!14605 = !DILocation(line: 1068, column: 13, scope: !14566)
!14606 = !DILocation(line: 1068, column: 18, scope: !14566)
!14607 = !DILocation(line: 1068, column: 23, scope: !14566)
!14608 = !DILocation(line: 1068, column: 21, scope: !14566)
!14609 = !DILocation(line: 1068, column: 3, scope: !14566)
!14610 = !DILocation(line: 1069, column: 15, scope: !14566)
!14611 = !DILocation(line: 1069, column: 29, scope: !14566)
!14612 = !DILocation(line: 1069, column: 37, scope: !14566)
!14613 = !DILocation(line: 1069, column: 3, scope: !14566)
!14614 = !DILocation(line: 1070, column: 15, scope: !14566)
!14615 = !DILocation(line: 1070, column: 29, scope: !14566)
!14616 = !DILocation(line: 1070, column: 37, scope: !14566)
!14617 = !DILocation(line: 1070, column: 3, scope: !14566)
!14618 = !DILocation(line: 1071, column: 15, scope: !14566)
!14619 = !DILocation(line: 1071, column: 29, scope: !14566)
!14620 = !DILocation(line: 1071, column: 37, scope: !14566)
!14621 = !DILocation(line: 1071, column: 3, scope: !14566)
!14622 = !DILocation(line: 1072, column: 15, scope: !14566)
!14623 = !DILocation(line: 1072, column: 29, scope: !14566)
!14624 = !DILocation(line: 1072, column: 37, scope: !14566)
!14625 = !DILocation(line: 1072, column: 3, scope: !14566)
!14626 = !DILocation(line: 1073, column: 13, scope: !14566)
!14627 = !DILocation(line: 1073, column: 27, scope: !14566)
!14628 = !DILocation(line: 1073, column: 3, scope: !14566)
!14629 = !DILocation(line: 1074, column: 13, scope: !14566)
!14630 = !DILocation(line: 1074, column: 27, scope: !14566)
!14631 = !DILocation(line: 1074, column: 3, scope: !14566)
!14632 = !DILocation(line: 1075, column: 13, scope: !14566)
!14633 = !DILocation(line: 1075, column: 27, scope: !14566)
!14634 = !DILocation(line: 1075, column: 3, scope: !14566)
!14635 = !DILocation(line: 1076, column: 13, scope: !14566)
!14636 = !DILocation(line: 1076, column: 27, scope: !14566)
!14637 = !DILocation(line: 1076, column: 3, scope: !14566)
!14638 = !DILocation(line: 1077, column: 2, scope: !14566)
!14639 = !DILocation(line: 1079, column: 15, scope: !14640)
!14640 = distinct !DILexicalBlock(scope: !14563, file: !3, line: 1078, column: 7)
!14641 = !DILocation(line: 1079, column: 20, scope: !14640)
!14642 = !DILocation(line: 1079, column: 26, scope: !14640)
!14643 = !DILocation(line: 1079, column: 3, scope: !14640)
!14644 = !DILocation(line: 1080, column: 15, scope: !14640)
!14645 = !DILocation(line: 1080, column: 20, scope: !14640)
!14646 = !DILocation(line: 1080, column: 26, scope: !14640)
!14647 = !DILocation(line: 1080, column: 3, scope: !14640)
!14648 = !DILocation(line: 1081, column: 15, scope: !14640)
!14649 = !DILocation(line: 1081, column: 20, scope: !14640)
!14650 = !DILocation(line: 1081, column: 26, scope: !14640)
!14651 = !DILocation(line: 1081, column: 3, scope: !14640)
!14652 = !DILocation(line: 1082, column: 16, scope: !14640)
!14653 = !DILocation(line: 1082, column: 3, scope: !14640)
!14654 = !DILocation(line: 1083, column: 16, scope: !14640)
!14655 = !DILocation(line: 1083, column: 3, scope: !14640)
!14656 = !DILocation(line: 1084, column: 16, scope: !14640)
!14657 = !DILocation(line: 1084, column: 3, scope: !14640)
!14658 = !DILocation(line: 1085, column: 13, scope: !14640)
!14659 = !DILocation(line: 1085, column: 18, scope: !14640)
!14660 = !DILocation(line: 1085, column: 23, scope: !14640)
!14661 = !DILocation(line: 1085, column: 21, scope: !14640)
!14662 = !DILocation(line: 1085, column: 3, scope: !14640)
!14663 = !DILocation(line: 1086, column: 13, scope: !14640)
!14664 = !DILocation(line: 1086, column: 18, scope: !14640)
!14665 = !DILocation(line: 1086, column: 23, scope: !14640)
!14666 = !DILocation(line: 1086, column: 21, scope: !14640)
!14667 = !DILocation(line: 1086, column: 3, scope: !14640)
!14668 = !DILocation(line: 1087, column: 13, scope: !14640)
!14669 = !DILocation(line: 1087, column: 18, scope: !14640)
!14670 = !DILocation(line: 1087, column: 23, scope: !14640)
!14671 = !DILocation(line: 1087, column: 21, scope: !14640)
!14672 = !DILocation(line: 1087, column: 3, scope: !14640)
!14673 = !DILocation(line: 1088, column: 15, scope: !14640)
!14674 = !DILocation(line: 1088, column: 29, scope: !14640)
!14675 = !DILocation(line: 1088, column: 37, scope: !14640)
!14676 = !DILocation(line: 1088, column: 3, scope: !14640)
!14677 = !DILocation(line: 1089, column: 15, scope: !14640)
!14678 = !DILocation(line: 1089, column: 29, scope: !14640)
!14679 = !DILocation(line: 1089, column: 37, scope: !14640)
!14680 = !DILocation(line: 1089, column: 3, scope: !14640)
!14681 = !DILocation(line: 1090, column: 15, scope: !14640)
!14682 = !DILocation(line: 1090, column: 29, scope: !14640)
!14683 = !DILocation(line: 1090, column: 37, scope: !14640)
!14684 = !DILocation(line: 1090, column: 3, scope: !14640)
!14685 = !DILocation(line: 1092, column: 13, scope: !14640)
!14686 = !DILocation(line: 1092, column: 27, scope: !14640)
!14687 = !DILocation(line: 1092, column: 3, scope: !14640)
!14688 = !DILocation(line: 1093, column: 13, scope: !14640)
!14689 = !DILocation(line: 1093, column: 27, scope: !14640)
!14690 = !DILocation(line: 1093, column: 3, scope: !14640)
!14691 = !DILocation(line: 1094, column: 13, scope: !14640)
!14692 = !DILocation(line: 1094, column: 27, scope: !14640)
!14693 = !DILocation(line: 1094, column: 3, scope: !14640)
!14694 = !DILocation(line: 1096, column: 1, scope: !14394)
!14695 = distinct !DISubprogram(name: "scale_quad", scope: !3, file: !3, line: 1717, type: !14696, scopeLine: 1718, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!14696 = !DISubroutineType(types: !14697)
!14697 = !{null, !210, !14698, !1778}
!14698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64)
!14699 = !DILocalVariable(name: "insetCos", arg: 1, scope: !14695, file: !3, line: 1717, type: !210)
!14700 = !DILocation(line: 1717, column: 30, scope: !14695)
!14701 = !DILocalVariable(name: "origCos", arg: 2, scope: !14695, file: !3, line: 1717, type: !14698)
!14702 = !DILocation(line: 1717, column: 53, scope: !14695)
!14703 = !DILocalVariable(name: "inset", arg: 3, scope: !14695, file: !3, line: 1717, type: !1778)
!14704 = !DILocation(line: 1717, column: 77, scope: !14695)
!14705 = !DILocalVariable(name: "cent", scope: !14695, file: !3, line: 1719, type: !183)
!14706 = !DILocation(line: 1719, column: 8, scope: !14695)
!14707 = !DILocation(line: 1720, column: 13, scope: !14695)
!14708 = !DILocation(line: 1720, column: 29, scope: !14695)
!14709 = !DILocation(line: 1720, column: 27, scope: !14695)
!14710 = !DILocation(line: 1720, column: 45, scope: !14695)
!14711 = !DILocation(line: 1720, column: 43, scope: !14695)
!14712 = !DILocation(line: 1720, column: 61, scope: !14695)
!14713 = !DILocation(line: 1720, column: 59, scope: !14695)
!14714 = !DILocation(line: 1720, column: 76, scope: !14695)
!14715 = !DILocation(line: 1720, column: 2, scope: !14695)
!14716 = !DILocation(line: 1720, column: 10, scope: !14695)
!14717 = !DILocation(line: 1721, column: 13, scope: !14695)
!14718 = !DILocation(line: 1721, column: 29, scope: !14695)
!14719 = !DILocation(line: 1721, column: 27, scope: !14695)
!14720 = !DILocation(line: 1721, column: 45, scope: !14695)
!14721 = !DILocation(line: 1721, column: 43, scope: !14695)
!14722 = !DILocation(line: 1721, column: 61, scope: !14695)
!14723 = !DILocation(line: 1721, column: 59, scope: !14695)
!14724 = !DILocation(line: 1721, column: 76, scope: !14695)
!14725 = !DILocation(line: 1721, column: 2, scope: !14695)
!14726 = !DILocation(line: 1721, column: 10, scope: !14695)
!14727 = !DILocation(line: 1722, column: 13, scope: !14695)
!14728 = !DILocation(line: 1722, column: 29, scope: !14695)
!14729 = !DILocation(line: 1722, column: 27, scope: !14695)
!14730 = !DILocation(line: 1722, column: 45, scope: !14695)
!14731 = !DILocation(line: 1722, column: 43, scope: !14695)
!14732 = !DILocation(line: 1722, column: 61, scope: !14695)
!14733 = !DILocation(line: 1722, column: 59, scope: !14695)
!14734 = !DILocation(line: 1722, column: 76, scope: !14695)
!14735 = !DILocation(line: 1722, column: 2, scope: !14695)
!14736 = !DILocation(line: 1722, column: 10, scope: !14695)
!14737 = !DILocation(line: 1724, column: 14, scope: !14695)
!14738 = !DILocation(line: 1724, column: 27, scope: !14695)
!14739 = !DILocation(line: 1724, column: 39, scope: !14695)
!14740 = !DILocation(line: 1724, column: 2, scope: !14695)
!14741 = !DILocation(line: 1725, column: 14, scope: !14695)
!14742 = !DILocation(line: 1725, column: 27, scope: !14695)
!14743 = !DILocation(line: 1725, column: 39, scope: !14695)
!14744 = !DILocation(line: 1725, column: 2, scope: !14695)
!14745 = !DILocation(line: 1726, column: 14, scope: !14695)
!14746 = !DILocation(line: 1726, column: 27, scope: !14695)
!14747 = !DILocation(line: 1726, column: 39, scope: !14695)
!14748 = !DILocation(line: 1726, column: 2, scope: !14695)
!14749 = !DILocation(line: 1727, column: 14, scope: !14695)
!14750 = !DILocation(line: 1727, column: 27, scope: !14695)
!14751 = !DILocation(line: 1727, column: 39, scope: !14695)
!14752 = !DILocation(line: 1727, column: 2, scope: !14695)
!14753 = !DILocation(line: 1729, column: 12, scope: !14695)
!14754 = !DILocation(line: 1729, column: 25, scope: !14695)
!14755 = !DILocation(line: 1729, column: 2, scope: !14695)
!14756 = !DILocation(line: 1730, column: 12, scope: !14695)
!14757 = !DILocation(line: 1730, column: 25, scope: !14695)
!14758 = !DILocation(line: 1730, column: 2, scope: !14695)
!14759 = !DILocation(line: 1731, column: 12, scope: !14695)
!14760 = !DILocation(line: 1731, column: 25, scope: !14695)
!14761 = !DILocation(line: 1731, column: 2, scope: !14695)
!14762 = !DILocation(line: 1732, column: 12, scope: !14695)
!14763 = !DILocation(line: 1732, column: 25, scope: !14695)
!14764 = !DILocation(line: 1732, column: 2, scope: !14695)
!14765 = !DILocation(line: 1734, column: 12, scope: !14695)
!14766 = !DILocation(line: 1734, column: 25, scope: !14695)
!14767 = !DILocation(line: 1734, column: 2, scope: !14695)
!14768 = !DILocation(line: 1735, column: 12, scope: !14695)
!14769 = !DILocation(line: 1735, column: 25, scope: !14695)
!14770 = !DILocation(line: 1735, column: 2, scope: !14695)
!14771 = !DILocation(line: 1736, column: 12, scope: !14695)
!14772 = !DILocation(line: 1736, column: 25, scope: !14695)
!14773 = !DILocation(line: 1736, column: 2, scope: !14695)
!14774 = !DILocation(line: 1737, column: 12, scope: !14695)
!14775 = !DILocation(line: 1737, column: 25, scope: !14695)
!14776 = !DILocation(line: 1737, column: 2, scope: !14695)
!14777 = !DILocation(line: 1738, column: 1, scope: !14695)
!14778 = distinct !DISubprogram(name: "scale_tri", scope: !3, file: !3, line: 1741, type: !14696, scopeLine: 1742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!14779 = !DILocalVariable(name: "insetCos", arg: 1, scope: !14778, file: !3, line: 1741, type: !210)
!14780 = !DILocation(line: 1741, column: 29, scope: !14778)
!14781 = !DILocalVariable(name: "origCos", arg: 2, scope: !14778, file: !3, line: 1741, type: !14698)
!14782 = !DILocation(line: 1741, column: 52, scope: !14778)
!14783 = !DILocalVariable(name: "inset", arg: 3, scope: !14778, file: !3, line: 1741, type: !1778)
!14784 = !DILocation(line: 1741, column: 76, scope: !14778)
!14785 = !DILocalVariable(name: "cent", scope: !14778, file: !3, line: 1743, type: !183)
!14786 = !DILocation(line: 1743, column: 8, scope: !14778)
!14787 = !DILocation(line: 1744, column: 13, scope: !14778)
!14788 = !DILocation(line: 1744, column: 29, scope: !14778)
!14789 = !DILocation(line: 1744, column: 27, scope: !14778)
!14790 = !DILocation(line: 1744, column: 45, scope: !14778)
!14791 = !DILocation(line: 1744, column: 43, scope: !14778)
!14792 = !DILocation(line: 1744, column: 60, scope: !14778)
!14793 = !DILocation(line: 1744, column: 2, scope: !14778)
!14794 = !DILocation(line: 1744, column: 10, scope: !14778)
!14795 = !DILocation(line: 1745, column: 13, scope: !14778)
!14796 = !DILocation(line: 1745, column: 29, scope: !14778)
!14797 = !DILocation(line: 1745, column: 27, scope: !14778)
!14798 = !DILocation(line: 1745, column: 45, scope: !14778)
!14799 = !DILocation(line: 1745, column: 43, scope: !14778)
!14800 = !DILocation(line: 1745, column: 60, scope: !14778)
!14801 = !DILocation(line: 1745, column: 2, scope: !14778)
!14802 = !DILocation(line: 1745, column: 10, scope: !14778)
!14803 = !DILocation(line: 1746, column: 13, scope: !14778)
!14804 = !DILocation(line: 1746, column: 29, scope: !14778)
!14805 = !DILocation(line: 1746, column: 27, scope: !14778)
!14806 = !DILocation(line: 1746, column: 45, scope: !14778)
!14807 = !DILocation(line: 1746, column: 43, scope: !14778)
!14808 = !DILocation(line: 1746, column: 60, scope: !14778)
!14809 = !DILocation(line: 1746, column: 2, scope: !14778)
!14810 = !DILocation(line: 1746, column: 10, scope: !14778)
!14811 = !DILocation(line: 1748, column: 14, scope: !14778)
!14812 = !DILocation(line: 1748, column: 27, scope: !14778)
!14813 = !DILocation(line: 1748, column: 39, scope: !14778)
!14814 = !DILocation(line: 1748, column: 2, scope: !14778)
!14815 = !DILocation(line: 1749, column: 14, scope: !14778)
!14816 = !DILocation(line: 1749, column: 27, scope: !14778)
!14817 = !DILocation(line: 1749, column: 39, scope: !14778)
!14818 = !DILocation(line: 1749, column: 2, scope: !14778)
!14819 = !DILocation(line: 1750, column: 14, scope: !14778)
!14820 = !DILocation(line: 1750, column: 27, scope: !14778)
!14821 = !DILocation(line: 1750, column: 39, scope: !14778)
!14822 = !DILocation(line: 1750, column: 2, scope: !14778)
!14823 = !DILocation(line: 1752, column: 12, scope: !14778)
!14824 = !DILocation(line: 1752, column: 25, scope: !14778)
!14825 = !DILocation(line: 1752, column: 2, scope: !14778)
!14826 = !DILocation(line: 1753, column: 12, scope: !14778)
!14827 = !DILocation(line: 1753, column: 25, scope: !14778)
!14828 = !DILocation(line: 1753, column: 2, scope: !14778)
!14829 = !DILocation(line: 1754, column: 12, scope: !14778)
!14830 = !DILocation(line: 1754, column: 25, scope: !14778)
!14831 = !DILocation(line: 1754, column: 2, scope: !14778)
!14832 = !DILocation(line: 1756, column: 12, scope: !14778)
!14833 = !DILocation(line: 1756, column: 25, scope: !14778)
!14834 = !DILocation(line: 1756, column: 2, scope: !14778)
!14835 = !DILocation(line: 1757, column: 12, scope: !14778)
!14836 = !DILocation(line: 1757, column: 25, scope: !14778)
!14837 = !DILocation(line: 1757, column: 2, scope: !14778)
!14838 = !DILocation(line: 1758, column: 12, scope: !14778)
!14839 = !DILocation(line: 1758, column: 25, scope: !14778)
!14840 = !DILocation(line: 1758, column: 2, scope: !14778)
!14841 = !DILocation(line: 1759, column: 1, scope: !14778)
!14842 = distinct !DISubprogram(name: "line_clip_rect2f", scope: !3, file: !3, line: 1558, type: !14843, scopeLine: 1562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!14843 = !DISubroutineType(types: !14844)
!14844 = !{!233, !9496, !1944, !1944, !216, !216}
!14845 = !DILocalVariable(name: "rect", arg: 1, scope: !14842, file: !3, line: 1559, type: !9496)
!14846 = !DILocation(line: 1559, column: 15, scope: !14842)
!14847 = !DILocalVariable(name: "l1", arg: 2, scope: !14842, file: !3, line: 1560, type: !1944)
!14848 = !DILocation(line: 1560, column: 21, scope: !14842)
!14849 = !DILocalVariable(name: "l2", arg: 3, scope: !14842, file: !3, line: 1560, type: !1944)
!14850 = !DILocation(line: 1560, column: 40, scope: !14842)
!14851 = !DILocalVariable(name: "l1_clip", arg: 4, scope: !14842, file: !3, line: 1561, type: !216)
!14852 = !DILocation(line: 1561, column: 15, scope: !14842)
!14853 = !DILocalVariable(name: "l2_clip", arg: 5, scope: !14842, file: !3, line: 1561, type: !216)
!14854 = !DILocation(line: 1561, column: 33, scope: !14842)
!14855 = !DILocation(line: 1565, column: 12, scope: !14856)
!14856 = distinct !DILexicalBlock(scope: !14842, file: !3, line: 1565, column: 6)
!14857 = !DILocation(line: 1565, column: 20, scope: !14856)
!14858 = !DILocation(line: 1565, column: 18, scope: !14856)
!14859 = !DILocation(line: 1565, column: 6, scope: !14856)
!14860 = !DILocation(line: 1565, column: 27, scope: !14856)
!14861 = !DILocation(line: 1565, column: 6, scope: !14842)
!14862 = !DILocation(line: 1567, column: 7, scope: !14863)
!14863 = distinct !DILexicalBlock(scope: !14864, file: !3, line: 1567, column: 7)
!14864 = distinct !DILexicalBlock(scope: !14856, file: !3, line: 1565, column: 50)
!14865 = !DILocation(line: 1567, column: 15, scope: !14863)
!14866 = !DILocation(line: 1567, column: 21, scope: !14863)
!14867 = !DILocation(line: 1567, column: 13, scope: !14863)
!14868 = !DILocation(line: 1567, column: 26, scope: !14863)
!14869 = !DILocation(line: 1567, column: 29, scope: !14863)
!14870 = !DILocation(line: 1567, column: 37, scope: !14863)
!14871 = !DILocation(line: 1567, column: 43, scope: !14863)
!14872 = !DILocation(line: 1567, column: 35, scope: !14863)
!14873 = !DILocation(line: 1567, column: 7, scope: !14864)
!14874 = !DILocation(line: 1568, column: 4, scope: !14875)
!14875 = distinct !DILexicalBlock(scope: !14863, file: !3, line: 1567, column: 49)
!14876 = !DILocation(line: 1571, column: 8, scope: !14877)
!14877 = distinct !DILexicalBlock(scope: !14864, file: !3, line: 1571, column: 7)
!14878 = !DILocation(line: 1571, column: 16, scope: !14877)
!14879 = !DILocation(line: 1571, column: 22, scope: !14877)
!14880 = !DILocation(line: 1571, column: 14, scope: !14877)
!14881 = !DILocation(line: 1571, column: 27, scope: !14877)
!14882 = !DILocation(line: 1571, column: 30, scope: !14877)
!14883 = !DILocation(line: 1571, column: 38, scope: !14877)
!14884 = !DILocation(line: 1571, column: 44, scope: !14877)
!14885 = !DILocation(line: 1571, column: 36, scope: !14877)
!14886 = !DILocation(line: 1571, column: 50, scope: !14877)
!14887 = !DILocation(line: 1571, column: 54, scope: !14877)
!14888 = !DILocation(line: 1571, column: 62, scope: !14877)
!14889 = !DILocation(line: 1571, column: 68, scope: !14877)
!14890 = !DILocation(line: 1571, column: 60, scope: !14877)
!14891 = !DILocation(line: 1571, column: 73, scope: !14877)
!14892 = !DILocation(line: 1571, column: 76, scope: !14877)
!14893 = !DILocation(line: 1571, column: 84, scope: !14877)
!14894 = !DILocation(line: 1571, column: 90, scope: !14877)
!14895 = !DILocation(line: 1571, column: 82, scope: !14877)
!14896 = !DILocation(line: 1571, column: 7, scope: !14864)
!14897 = !DILocation(line: 1572, column: 4, scope: !14898)
!14898 = distinct !DILexicalBlock(scope: !14877, file: !3, line: 1571, column: 97)
!14899 = !DILocation(line: 1576, column: 13, scope: !14900)
!14900 = distinct !DILexicalBlock(scope: !14864, file: !3, line: 1576, column: 7)
!14901 = !DILocation(line: 1576, column: 21, scope: !14900)
!14902 = !DILocation(line: 1576, column: 19, scope: !14900)
!14903 = !DILocation(line: 1576, column: 7, scope: !14900)
!14904 = !DILocation(line: 1576, column: 28, scope: !14900)
!14905 = !DILocation(line: 1576, column: 7, scope: !14864)
!14906 = !DILocation(line: 1577, column: 28, scope: !14907)
!14907 = distinct !DILexicalBlock(scope: !14908, file: !3, line: 1577, column: 8)
!14908 = distinct !DILexicalBlock(scope: !14900, file: !3, line: 1576, column: 51)
!14909 = !DILocation(line: 1577, column: 34, scope: !14907)
!14910 = !DILocation(line: 1577, column: 8, scope: !14907)
!14911 = !DILocation(line: 1577, column: 8, scope: !14908)
!14912 = !DILocation(line: 1578, column: 16, scope: !14913)
!14913 = distinct !DILexicalBlock(scope: !14907, file: !3, line: 1577, column: 39)
!14914 = !DILocation(line: 1578, column: 25, scope: !14913)
!14915 = !DILocation(line: 1578, column: 5, scope: !14913)
!14916 = !DILocation(line: 1579, column: 16, scope: !14913)
!14917 = !DILocation(line: 1579, column: 25, scope: !14913)
!14918 = !DILocation(line: 1579, column: 5, scope: !14913)
!14919 = !DILocation(line: 1580, column: 5, scope: !14913)
!14920 = !DILocation(line: 1583, column: 5, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !14907, file: !3, line: 1582, column: 9)
!14922 = !DILocation(line: 1587, column: 14, scope: !14864)
!14923 = !DILocation(line: 1587, column: 23, scope: !14864)
!14924 = !DILocation(line: 1587, column: 3, scope: !14864)
!14925 = !DILocation(line: 1588, column: 14, scope: !14864)
!14926 = !DILocation(line: 1588, column: 23, scope: !14864)
!14927 = !DILocation(line: 1588, column: 3, scope: !14864)
!14928 = !DILocation(line: 1589, column: 3, scope: !14929)
!14929 = distinct !DILexicalBlock(scope: !14930, file: !3, line: 1589, column: 3)
!14930 = distinct !DILexicalBlock(scope: !14864, file: !3, line: 1589, column: 3)
!14931 = !DILocation(line: 1589, column: 3, scope: !14930)
!14932 = !DILocation(line: 1589, column: 3, scope: !14933)
!14933 = distinct !DILexicalBlock(scope: !14929, file: !3, line: 1589, column: 3)
!14934 = !DILocation(line: 1590, column: 3, scope: !14935)
!14935 = distinct !DILexicalBlock(scope: !14936, file: !3, line: 1590, column: 3)
!14936 = distinct !DILexicalBlock(scope: !14864, file: !3, line: 1590, column: 3)
!14937 = !DILocation(line: 1590, column: 3, scope: !14936)
!14938 = !DILocation(line: 1590, column: 3, scope: !14939)
!14939 = distinct !DILexicalBlock(scope: !14935, file: !3, line: 1590, column: 3)
!14940 = !DILocation(line: 1591, column: 3, scope: !14864)
!14941 = !DILocation(line: 1593, column: 17, scope: !14942)
!14942 = distinct !DILexicalBlock(scope: !14856, file: !3, line: 1593, column: 11)
!14943 = !DILocation(line: 1593, column: 25, scope: !14942)
!14944 = !DILocation(line: 1593, column: 23, scope: !14942)
!14945 = !DILocation(line: 1593, column: 11, scope: !14942)
!14946 = !DILocation(line: 1593, column: 32, scope: !14942)
!14947 = !DILocation(line: 1593, column: 11, scope: !14856)
!14948 = !DILocation(line: 1595, column: 7, scope: !14949)
!14949 = distinct !DILexicalBlock(scope: !14950, file: !3, line: 1595, column: 7)
!14950 = distinct !DILexicalBlock(scope: !14942, file: !3, line: 1593, column: 55)
!14951 = !DILocation(line: 1595, column: 15, scope: !14949)
!14952 = !DILocation(line: 1595, column: 21, scope: !14949)
!14953 = !DILocation(line: 1595, column: 13, scope: !14949)
!14954 = !DILocation(line: 1595, column: 26, scope: !14949)
!14955 = !DILocation(line: 1595, column: 29, scope: !14949)
!14956 = !DILocation(line: 1595, column: 37, scope: !14949)
!14957 = !DILocation(line: 1595, column: 43, scope: !14949)
!14958 = !DILocation(line: 1595, column: 35, scope: !14949)
!14959 = !DILocation(line: 1595, column: 7, scope: !14950)
!14960 = !DILocation(line: 1596, column: 4, scope: !14961)
!14961 = distinct !DILexicalBlock(scope: !14949, file: !3, line: 1595, column: 49)
!14962 = !DILocation(line: 1600, column: 8, scope: !14963)
!14963 = distinct !DILexicalBlock(scope: !14950, file: !3, line: 1600, column: 7)
!14964 = !DILocation(line: 1600, column: 16, scope: !14963)
!14965 = !DILocation(line: 1600, column: 22, scope: !14963)
!14966 = !DILocation(line: 1600, column: 14, scope: !14963)
!14967 = !DILocation(line: 1600, column: 27, scope: !14963)
!14968 = !DILocation(line: 1600, column: 30, scope: !14963)
!14969 = !DILocation(line: 1600, column: 38, scope: !14963)
!14970 = !DILocation(line: 1600, column: 44, scope: !14963)
!14971 = !DILocation(line: 1600, column: 36, scope: !14963)
!14972 = !DILocation(line: 1600, column: 50, scope: !14963)
!14973 = !DILocation(line: 1600, column: 54, scope: !14963)
!14974 = !DILocation(line: 1600, column: 62, scope: !14963)
!14975 = !DILocation(line: 1600, column: 68, scope: !14963)
!14976 = !DILocation(line: 1600, column: 60, scope: !14963)
!14977 = !DILocation(line: 1600, column: 73, scope: !14963)
!14978 = !DILocation(line: 1600, column: 76, scope: !14963)
!14979 = !DILocation(line: 1600, column: 84, scope: !14963)
!14980 = !DILocation(line: 1600, column: 90, scope: !14963)
!14981 = !DILocation(line: 1600, column: 82, scope: !14963)
!14982 = !DILocation(line: 1600, column: 7, scope: !14950)
!14983 = !DILocation(line: 1601, column: 4, scope: !14984)
!14984 = distinct !DILexicalBlock(scope: !14963, file: !3, line: 1600, column: 97)
!14985 = !DILocation(line: 1604, column: 13, scope: !14986)
!14986 = distinct !DILexicalBlock(scope: !14950, file: !3, line: 1604, column: 7)
!14987 = !DILocation(line: 1604, column: 21, scope: !14986)
!14988 = !DILocation(line: 1604, column: 19, scope: !14986)
!14989 = !DILocation(line: 1604, column: 7, scope: !14986)
!14990 = !DILocation(line: 1604, column: 28, scope: !14986)
!14991 = !DILocation(line: 1604, column: 7, scope: !14950)
!14992 = !DILocation(line: 1605, column: 28, scope: !14993)
!14993 = distinct !DILexicalBlock(scope: !14994, file: !3, line: 1605, column: 8)
!14994 = distinct !DILexicalBlock(scope: !14986, file: !3, line: 1604, column: 51)
!14995 = !DILocation(line: 1605, column: 34, scope: !14993)
!14996 = !DILocation(line: 1605, column: 8, scope: !14993)
!14997 = !DILocation(line: 1605, column: 8, scope: !14994)
!14998 = !DILocation(line: 1606, column: 16, scope: !14999)
!14999 = distinct !DILexicalBlock(scope: !14993, file: !3, line: 1605, column: 39)
!15000 = !DILocation(line: 1606, column: 25, scope: !14999)
!15001 = !DILocation(line: 1606, column: 5, scope: !14999)
!15002 = !DILocation(line: 1607, column: 16, scope: !14999)
!15003 = !DILocation(line: 1607, column: 25, scope: !14999)
!15004 = !DILocation(line: 1607, column: 5, scope: !14999)
!15005 = !DILocation(line: 1608, column: 5, scope: !14999)
!15006 = !DILocation(line: 1611, column: 5, scope: !15007)
!15007 = distinct !DILexicalBlock(scope: !14993, file: !3, line: 1610, column: 9)
!15008 = !DILocation(line: 1615, column: 14, scope: !14950)
!15009 = !DILocation(line: 1615, column: 23, scope: !14950)
!15010 = !DILocation(line: 1615, column: 3, scope: !14950)
!15011 = !DILocation(line: 1616, column: 14, scope: !14950)
!15012 = !DILocation(line: 1616, column: 23, scope: !14950)
!15013 = !DILocation(line: 1616, column: 3, scope: !14950)
!15014 = !DILocation(line: 1617, column: 3, scope: !15015)
!15015 = distinct !DILexicalBlock(scope: !15016, file: !3, line: 1617, column: 3)
!15016 = distinct !DILexicalBlock(scope: !14950, file: !3, line: 1617, column: 3)
!15017 = !DILocation(line: 1617, column: 3, scope: !15016)
!15018 = !DILocation(line: 1617, column: 3, scope: !15019)
!15019 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 1617, column: 3)
!15020 = !DILocation(line: 1618, column: 3, scope: !15021)
!15021 = distinct !DILexicalBlock(scope: !15022, file: !3, line: 1618, column: 3)
!15022 = distinct !DILexicalBlock(scope: !14950, file: !3, line: 1618, column: 3)
!15023 = !DILocation(line: 1618, column: 3, scope: !15022)
!15024 = !DILocation(line: 1618, column: 3, scope: !15025)
!15025 = distinct !DILexicalBlock(scope: !15021, file: !3, line: 1618, column: 3)
!15026 = !DILocation(line: 1619, column: 3, scope: !14950)
!15027 = !DILocalVariable(name: "isect", scope: !15028, file: !3, line: 1622, type: !184)
!15028 = distinct !DILexicalBlock(scope: !14942, file: !3, line: 1621, column: 7)
!15029 = !DILocation(line: 1622, column: 9, scope: !15028)
!15030 = !DILocalVariable(name: "ok1", scope: !15028, file: !3, line: 1623, type: !48)
!15031 = !DILocation(line: 1623, column: 9, scope: !15028)
!15032 = !DILocalVariable(name: "ok2", scope: !15028, file: !3, line: 1624, type: !48)
!15033 = !DILocation(line: 1624, column: 9, scope: !15028)
!15034 = !DILocation(line: 1629, column: 27, scope: !15035)
!15035 = distinct !DILexicalBlock(scope: !15028, file: !3, line: 1629, column: 7)
!15036 = !DILocation(line: 1629, column: 33, scope: !15035)
!15037 = !DILocation(line: 1629, column: 7, scope: !15035)
!15038 = !DILocation(line: 1629, column: 7, scope: !15028)
!15039 = !DILocation(line: 1630, column: 15, scope: !15040)
!15040 = distinct !DILexicalBlock(scope: !15035, file: !3, line: 1629, column: 38)
!15041 = !DILocation(line: 1630, column: 24, scope: !15040)
!15042 = !DILocation(line: 1630, column: 4, scope: !15040)
!15043 = !DILocation(line: 1631, column: 8, scope: !15040)
!15044 = !DILocation(line: 1632, column: 3, scope: !15040)
!15045 = !DILocation(line: 1634, column: 27, scope: !15046)
!15046 = distinct !DILexicalBlock(scope: !15028, file: !3, line: 1634, column: 7)
!15047 = !DILocation(line: 1634, column: 33, scope: !15046)
!15048 = !DILocation(line: 1634, column: 7, scope: !15046)
!15049 = !DILocation(line: 1634, column: 7, scope: !15028)
!15050 = !DILocation(line: 1635, column: 15, scope: !15051)
!15051 = distinct !DILexicalBlock(scope: !15046, file: !3, line: 1634, column: 38)
!15052 = !DILocation(line: 1635, column: 24, scope: !15051)
!15053 = !DILocation(line: 1635, column: 4, scope: !15051)
!15054 = !DILocation(line: 1636, column: 8, scope: !15051)
!15055 = !DILocation(line: 1637, column: 3, scope: !15051)
!15056 = !DILocation(line: 1640, column: 7, scope: !15057)
!15057 = distinct !DILexicalBlock(scope: !15028, file: !3, line: 1640, column: 7)
!15058 = !DILocation(line: 1640, column: 11, scope: !15057)
!15059 = !DILocation(line: 1640, column: 14, scope: !15057)
!15060 = !DILocation(line: 1640, column: 7, scope: !15028)
!15061 = !DILocation(line: 1640, column: 19, scope: !15057)
!15062 = !DILocation(line: 1643, column: 20, scope: !15063)
!15063 = distinct !DILexicalBlock(scope: !15028, file: !3, line: 1643, column: 7)
!15064 = !DILocation(line: 1643, column: 24, scope: !15063)
!15065 = !DILocation(line: 1643, column: 28, scope: !15063)
!15066 = !DILocation(line: 1643, column: 34, scope: !15063)
!15067 = !DILocation(line: 1643, column: 7, scope: !15063)
!15068 = !DILocation(line: 1643, column: 48, scope: !15063)
!15069 = !DILocation(line: 1643, column: 52, scope: !15063)
!15070 = !DILocation(line: 1643, column: 61, scope: !15063)
!15071 = !DILocation(line: 1643, column: 67, scope: !15063)
!15072 = !DILocation(line: 1643, column: 58, scope: !15063)
!15073 = !DILocation(line: 1643, column: 73, scope: !15063)
!15074 = !DILocation(line: 1643, column: 77, scope: !15063)
!15075 = !DILocation(line: 1643, column: 86, scope: !15063)
!15076 = !DILocation(line: 1643, column: 92, scope: !15063)
!15077 = !DILocation(line: 1643, column: 83, scope: !15063)
!15078 = !DILocation(line: 1643, column: 7, scope: !15028)
!15079 = !DILocation(line: 1644, column: 8, scope: !15080)
!15080 = distinct !DILexicalBlock(scope: !15081, file: !3, line: 1644, column: 8)
!15081 = distinct !DILexicalBlock(scope: !15063, file: !3, line: 1643, column: 99)
!15082 = !DILocation(line: 1644, column: 16, scope: !15080)
!15083 = !DILocation(line: 1644, column: 14, scope: !15080)
!15084 = !DILocation(line: 1644, column: 8, scope: !15081)
!15085 = !DILocation(line: 1645, column: 18, scope: !15086)
!15086 = distinct !DILexicalBlock(scope: !15080, file: !3, line: 1644, column: 23)
!15087 = !DILocation(line: 1645, column: 5, scope: !15086)
!15088 = !DILocation(line: 1645, column: 16, scope: !15086)
!15089 = !DILocation(line: 1646, column: 18, scope: !15086)
!15090 = !DILocation(line: 1646, column: 24, scope: !15086)
!15091 = !DILocation(line: 1646, column: 5, scope: !15086)
!15092 = !DILocation(line: 1646, column: 16, scope: !15086)
!15093 = !DILocation(line: 1647, column: 9, scope: !15086)
!15094 = !DILocation(line: 1648, column: 4, scope: !15086)
!15095 = !DILocation(line: 1650, column: 18, scope: !15096)
!15096 = distinct !DILexicalBlock(scope: !15080, file: !3, line: 1649, column: 9)
!15097 = !DILocation(line: 1650, column: 5, scope: !15096)
!15098 = !DILocation(line: 1650, column: 16, scope: !15096)
!15099 = !DILocation(line: 1651, column: 18, scope: !15096)
!15100 = !DILocation(line: 1651, column: 24, scope: !15096)
!15101 = !DILocation(line: 1651, column: 5, scope: !15096)
!15102 = !DILocation(line: 1651, column: 16, scope: !15096)
!15103 = !DILocation(line: 1652, column: 9, scope: !15096)
!15104 = !DILocation(line: 1654, column: 3, scope: !15081)
!15105 = !DILocation(line: 1656, column: 7, scope: !15106)
!15106 = distinct !DILexicalBlock(scope: !15028, file: !3, line: 1656, column: 7)
!15107 = !DILocation(line: 1656, column: 11, scope: !15106)
!15108 = !DILocation(line: 1656, column: 14, scope: !15106)
!15109 = !DILocation(line: 1656, column: 7, scope: !15028)
!15110 = !DILocation(line: 1656, column: 19, scope: !15106)
!15111 = !DILocation(line: 1658, column: 20, scope: !15112)
!15112 = distinct !DILexicalBlock(scope: !15028, file: !3, line: 1658, column: 7)
!15113 = !DILocation(line: 1658, column: 24, scope: !15112)
!15114 = !DILocation(line: 1658, column: 28, scope: !15112)
!15115 = !DILocation(line: 1658, column: 34, scope: !15112)
!15116 = !DILocation(line: 1658, column: 7, scope: !15112)
!15117 = !DILocation(line: 1658, column: 48, scope: !15112)
!15118 = !DILocation(line: 1658, column: 52, scope: !15112)
!15119 = !DILocation(line: 1658, column: 61, scope: !15112)
!15120 = !DILocation(line: 1658, column: 67, scope: !15112)
!15121 = !DILocation(line: 1658, column: 58, scope: !15112)
!15122 = !DILocation(line: 1658, column: 73, scope: !15112)
!15123 = !DILocation(line: 1658, column: 77, scope: !15112)
!15124 = !DILocation(line: 1658, column: 86, scope: !15112)
!15125 = !DILocation(line: 1658, column: 92, scope: !15112)
!15126 = !DILocation(line: 1658, column: 83, scope: !15112)
!15127 = !DILocation(line: 1658, column: 7, scope: !15028)
!15128 = !DILocation(line: 1659, column: 8, scope: !15129)
!15129 = distinct !DILexicalBlock(scope: !15130, file: !3, line: 1659, column: 8)
!15130 = distinct !DILexicalBlock(scope: !15112, file: !3, line: 1658, column: 99)
!15131 = !DILocation(line: 1659, column: 16, scope: !15129)
!15132 = !DILocation(line: 1659, column: 14, scope: !15129)
!15133 = !DILocation(line: 1659, column: 8, scope: !15130)
!15134 = !DILocation(line: 1660, column: 18, scope: !15135)
!15135 = distinct !DILexicalBlock(scope: !15129, file: !3, line: 1659, column: 23)
!15136 = !DILocation(line: 1660, column: 5, scope: !15135)
!15137 = !DILocation(line: 1660, column: 16, scope: !15135)
!15138 = !DILocation(line: 1661, column: 18, scope: !15135)
!15139 = !DILocation(line: 1661, column: 24, scope: !15135)
!15140 = !DILocation(line: 1661, column: 5, scope: !15135)
!15141 = !DILocation(line: 1661, column: 16, scope: !15135)
!15142 = !DILocation(line: 1662, column: 9, scope: !15135)
!15143 = !DILocation(line: 1663, column: 4, scope: !15135)
!15144 = !DILocation(line: 1665, column: 18, scope: !15145)
!15145 = distinct !DILexicalBlock(scope: !15129, file: !3, line: 1664, column: 9)
!15146 = !DILocation(line: 1665, column: 5, scope: !15145)
!15147 = !DILocation(line: 1665, column: 16, scope: !15145)
!15148 = !DILocation(line: 1666, column: 18, scope: !15145)
!15149 = !DILocation(line: 1666, column: 24, scope: !15145)
!15150 = !DILocation(line: 1666, column: 5, scope: !15145)
!15151 = !DILocation(line: 1666, column: 16, scope: !15145)
!15152 = !DILocation(line: 1667, column: 9, scope: !15145)
!15153 = !DILocation(line: 1669, column: 3, scope: !15130)
!15154 = !DILocation(line: 1671, column: 7, scope: !15155)
!15155 = distinct !DILexicalBlock(scope: !15028, file: !3, line: 1671, column: 7)
!15156 = !DILocation(line: 1671, column: 11, scope: !15155)
!15157 = !DILocation(line: 1671, column: 14, scope: !15155)
!15158 = !DILocation(line: 1671, column: 7, scope: !15028)
!15159 = !DILocation(line: 1671, column: 19, scope: !15155)
!15160 = !DILocation(line: 1674, column: 20, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !15028, file: !3, line: 1674, column: 7)
!15162 = !DILocation(line: 1674, column: 24, scope: !15161)
!15163 = !DILocation(line: 1674, column: 28, scope: !15161)
!15164 = !DILocation(line: 1674, column: 34, scope: !15161)
!15165 = !DILocation(line: 1674, column: 7, scope: !15161)
!15166 = !DILocation(line: 1674, column: 48, scope: !15161)
!15167 = !DILocation(line: 1674, column: 52, scope: !15161)
!15168 = !DILocation(line: 1674, column: 61, scope: !15161)
!15169 = !DILocation(line: 1674, column: 67, scope: !15161)
!15170 = !DILocation(line: 1674, column: 58, scope: !15161)
!15171 = !DILocation(line: 1674, column: 73, scope: !15161)
!15172 = !DILocation(line: 1674, column: 77, scope: !15161)
!15173 = !DILocation(line: 1674, column: 86, scope: !15161)
!15174 = !DILocation(line: 1674, column: 92, scope: !15161)
!15175 = !DILocation(line: 1674, column: 83, scope: !15161)
!15176 = !DILocation(line: 1674, column: 7, scope: !15028)
!15177 = !DILocation(line: 1675, column: 8, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !15179, file: !3, line: 1675, column: 8)
!15179 = distinct !DILexicalBlock(scope: !15161, file: !3, line: 1674, column: 99)
!15180 = !DILocation(line: 1675, column: 16, scope: !15178)
!15181 = !DILocation(line: 1675, column: 14, scope: !15178)
!15182 = !DILocation(line: 1675, column: 8, scope: !15179)
!15183 = !DILocation(line: 1676, column: 18, scope: !15184)
!15184 = distinct !DILexicalBlock(scope: !15178, file: !3, line: 1675, column: 23)
!15185 = !DILocation(line: 1676, column: 24, scope: !15184)
!15186 = !DILocation(line: 1676, column: 5, scope: !15184)
!15187 = !DILocation(line: 1676, column: 16, scope: !15184)
!15188 = !DILocation(line: 1677, column: 18, scope: !15184)
!15189 = !DILocation(line: 1677, column: 5, scope: !15184)
!15190 = !DILocation(line: 1677, column: 16, scope: !15184)
!15191 = !DILocation(line: 1678, column: 9, scope: !15184)
!15192 = !DILocation(line: 1679, column: 4, scope: !15184)
!15193 = !DILocation(line: 1681, column: 18, scope: !15194)
!15194 = distinct !DILexicalBlock(scope: !15178, file: !3, line: 1680, column: 9)
!15195 = !DILocation(line: 1681, column: 24, scope: !15194)
!15196 = !DILocation(line: 1681, column: 5, scope: !15194)
!15197 = !DILocation(line: 1681, column: 16, scope: !15194)
!15198 = !DILocation(line: 1682, column: 18, scope: !15194)
!15199 = !DILocation(line: 1682, column: 5, scope: !15194)
!15200 = !DILocation(line: 1682, column: 16, scope: !15194)
!15201 = !DILocation(line: 1683, column: 9, scope: !15194)
!15202 = !DILocation(line: 1685, column: 3, scope: !15179)
!15203 = !DILocation(line: 1687, column: 7, scope: !15204)
!15204 = distinct !DILexicalBlock(scope: !15028, file: !3, line: 1687, column: 7)
!15205 = !DILocation(line: 1687, column: 11, scope: !15204)
!15206 = !DILocation(line: 1687, column: 14, scope: !15204)
!15207 = !DILocation(line: 1687, column: 7, scope: !15028)
!15208 = !DILocation(line: 1687, column: 19, scope: !15204)
!15209 = !DILocation(line: 1689, column: 20, scope: !15210)
!15210 = distinct !DILexicalBlock(scope: !15028, file: !3, line: 1689, column: 7)
!15211 = !DILocation(line: 1689, column: 24, scope: !15210)
!15212 = !DILocation(line: 1689, column: 28, scope: !15210)
!15213 = !DILocation(line: 1689, column: 34, scope: !15210)
!15214 = !DILocation(line: 1689, column: 7, scope: !15210)
!15215 = !DILocation(line: 1689, column: 48, scope: !15210)
!15216 = !DILocation(line: 1689, column: 52, scope: !15210)
!15217 = !DILocation(line: 1689, column: 61, scope: !15210)
!15218 = !DILocation(line: 1689, column: 67, scope: !15210)
!15219 = !DILocation(line: 1689, column: 58, scope: !15210)
!15220 = !DILocation(line: 1689, column: 73, scope: !15210)
!15221 = !DILocation(line: 1689, column: 77, scope: !15210)
!15222 = !DILocation(line: 1689, column: 86, scope: !15210)
!15223 = !DILocation(line: 1689, column: 92, scope: !15210)
!15224 = !DILocation(line: 1689, column: 83, scope: !15210)
!15225 = !DILocation(line: 1689, column: 7, scope: !15028)
!15226 = !DILocation(line: 1690, column: 8, scope: !15227)
!15227 = distinct !DILexicalBlock(scope: !15228, file: !3, line: 1690, column: 8)
!15228 = distinct !DILexicalBlock(scope: !15210, file: !3, line: 1689, column: 99)
!15229 = !DILocation(line: 1690, column: 16, scope: !15227)
!15230 = !DILocation(line: 1690, column: 14, scope: !15227)
!15231 = !DILocation(line: 1690, column: 8, scope: !15228)
!15232 = !DILocation(line: 1691, column: 18, scope: !15233)
!15233 = distinct !DILexicalBlock(scope: !15227, file: !3, line: 1690, column: 23)
!15234 = !DILocation(line: 1691, column: 24, scope: !15233)
!15235 = !DILocation(line: 1691, column: 5, scope: !15233)
!15236 = !DILocation(line: 1691, column: 16, scope: !15233)
!15237 = !DILocation(line: 1692, column: 18, scope: !15233)
!15238 = !DILocation(line: 1692, column: 5, scope: !15233)
!15239 = !DILocation(line: 1692, column: 16, scope: !15233)
!15240 = !DILocation(line: 1693, column: 9, scope: !15233)
!15241 = !DILocation(line: 1694, column: 4, scope: !15233)
!15242 = !DILocation(line: 1696, column: 18, scope: !15243)
!15243 = distinct !DILexicalBlock(scope: !15227, file: !3, line: 1695, column: 9)
!15244 = !DILocation(line: 1696, column: 24, scope: !15243)
!15245 = !DILocation(line: 1696, column: 5, scope: !15243)
!15246 = !DILocation(line: 1696, column: 16, scope: !15243)
!15247 = !DILocation(line: 1697, column: 18, scope: !15243)
!15248 = !DILocation(line: 1697, column: 5, scope: !15243)
!15249 = !DILocation(line: 1697, column: 16, scope: !15243)
!15250 = !DILocation(line: 1698, column: 9, scope: !15243)
!15251 = !DILocation(line: 1700, column: 3, scope: !15228)
!15252 = !DILocation(line: 1702, column: 7, scope: !15253)
!15253 = distinct !DILexicalBlock(scope: !15028, file: !3, line: 1702, column: 7)
!15254 = !DILocation(line: 1702, column: 11, scope: !15253)
!15255 = !DILocation(line: 1702, column: 14, scope: !15253)
!15256 = !DILocation(line: 1702, column: 7, scope: !15028)
!15257 = !DILocation(line: 1703, column: 4, scope: !15258)
!15258 = distinct !DILexicalBlock(scope: !15253, file: !3, line: 1702, column: 19)
!15259 = !DILocation(line: 1706, column: 4, scope: !15260)
!15260 = distinct !DILexicalBlock(scope: !15253, file: !3, line: 1705, column: 8)
!15261 = !DILocation(line: 1709, column: 1, scope: !14842)
!15262 = distinct !DISubprogram(name: "len_v2v2", scope: !4381, file: !4381, line: 696, type: !9803, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!15263 = !DILocalVariable(name: "v1", arg: 1, scope: !15262, file: !4381, line: 696, type: !1944)
!15264 = !DILocation(line: 696, column: 36, scope: !15262)
!15265 = !DILocalVariable(name: "v2", arg: 2, scope: !15262, file: !4381, line: 696, type: !1944)
!15266 = !DILocation(line: 696, column: 55, scope: !15262)
!15267 = !DILocalVariable(name: "x", scope: !15262, file: !4381, line: 698, type: !184)
!15268 = !DILocation(line: 698, column: 8, scope: !15262)
!15269 = !DILocalVariable(name: "y", scope: !15262, file: !4381, line: 698, type: !184)
!15270 = !DILocation(line: 698, column: 11, scope: !15262)
!15271 = !DILocation(line: 700, column: 6, scope: !15262)
!15272 = !DILocation(line: 700, column: 14, scope: !15262)
!15273 = !DILocation(line: 700, column: 12, scope: !15262)
!15274 = !DILocation(line: 700, column: 4, scope: !15262)
!15275 = !DILocation(line: 701, column: 6, scope: !15262)
!15276 = !DILocation(line: 701, column: 14, scope: !15262)
!15277 = !DILocation(line: 701, column: 12, scope: !15262)
!15278 = !DILocation(line: 701, column: 4, scope: !15262)
!15279 = !DILocation(line: 702, column: 15, scope: !15262)
!15280 = !DILocation(line: 702, column: 19, scope: !15262)
!15281 = !DILocation(line: 702, column: 17, scope: !15262)
!15282 = !DILocation(line: 702, column: 23, scope: !15262)
!15283 = !DILocation(line: 702, column: 27, scope: !15262)
!15284 = !DILocation(line: 702, column: 25, scope: !15262)
!15285 = !DILocation(line: 702, column: 21, scope: !15262)
!15286 = !DILocation(line: 702, column: 9, scope: !15262)
!15287 = !DILocation(line: 702, column: 2, scope: !15262)
!15288 = distinct !DISubprogram(name: "pixel_bounds_uv", scope: !3, file: !3, line: 841, type: !15289, scopeLine: 847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!15289 = !DISubroutineType(types: !15290)
!15290 = !{!233, !1944, !1944, !1944, !1944, !13038, !5126, !5126, !2035}
!15291 = !DILocalVariable(name: "uv1", arg: 1, scope: !15288, file: !3, line: 842, type: !1944)
!15292 = !DILocation(line: 842, column: 21, scope: !15288)
!15293 = !DILocalVariable(name: "uv2", arg: 2, scope: !15288, file: !3, line: 842, type: !1944)
!15294 = !DILocation(line: 842, column: 41, scope: !15288)
!15295 = !DILocalVariable(name: "uv3", arg: 3, scope: !15288, file: !3, line: 842, type: !1944)
!15296 = !DILocation(line: 842, column: 61, scope: !15288)
!15297 = !DILocalVariable(name: "uv4", arg: 4, scope: !15288, file: !3, line: 842, type: !1944)
!15298 = !DILocation(line: 842, column: 81, scope: !15288)
!15299 = !DILocalVariable(name: "bounds_px", arg: 5, scope: !15288, file: !3, line: 843, type: !13038)
!15300 = !DILocation(line: 843, column: 15, scope: !15288)
!15301 = !DILocalVariable(name: "ibuf_x", arg: 6, scope: !15288, file: !3, line: 844, type: !5126)
!15302 = !DILocation(line: 844, column: 19, scope: !15288)
!15303 = !DILocalVariable(name: "ibuf_y", arg: 7, scope: !15288, file: !3, line: 844, type: !5126)
!15304 = !DILocation(line: 844, column: 37, scope: !15288)
!15305 = !DILocalVariable(name: "is_quad", arg: 8, scope: !15288, file: !3, line: 845, type: !2035)
!15306 = !DILocation(line: 845, column: 20, scope: !15288)
!15307 = !DILocalVariable(name: "min_uv", scope: !15288, file: !3, line: 848, type: !860)
!15308 = !DILocation(line: 848, column: 8, scope: !15288)
!15309 = !DILocalVariable(name: "max_uv", scope: !15288, file: !3, line: 848, type: !860)
!15310 = !DILocation(line: 848, column: 19, scope: !15288)
!15311 = !DILocation(line: 850, column: 2, scope: !15312)
!15312 = distinct !DILexicalBlock(scope: !15288, file: !3, line: 850, column: 2)
!15313 = !DILocation(line: 852, column: 17, scope: !15288)
!15314 = !DILocation(line: 852, column: 25, scope: !15288)
!15315 = !DILocation(line: 852, column: 33, scope: !15288)
!15316 = !DILocation(line: 852, column: 2, scope: !15288)
!15317 = !DILocation(line: 853, column: 17, scope: !15288)
!15318 = !DILocation(line: 853, column: 25, scope: !15288)
!15319 = !DILocation(line: 853, column: 33, scope: !15288)
!15320 = !DILocation(line: 853, column: 2, scope: !15288)
!15321 = !DILocation(line: 854, column: 17, scope: !15288)
!15322 = !DILocation(line: 854, column: 25, scope: !15288)
!15323 = !DILocation(line: 854, column: 33, scope: !15288)
!15324 = !DILocation(line: 854, column: 2, scope: !15288)
!15325 = !DILocation(line: 855, column: 6, scope: !15326)
!15326 = distinct !DILexicalBlock(scope: !15288, file: !3, line: 855, column: 6)
!15327 = !DILocation(line: 855, column: 6, scope: !15288)
!15328 = !DILocation(line: 856, column: 18, scope: !15326)
!15329 = !DILocation(line: 856, column: 26, scope: !15326)
!15330 = !DILocation(line: 856, column: 34, scope: !15326)
!15331 = !DILocation(line: 856, column: 3, scope: !15326)
!15332 = !DILocation(line: 858, column: 26, scope: !15288)
!15333 = !DILocation(line: 858, column: 35, scope: !15288)
!15334 = !DILocation(line: 858, column: 33, scope: !15288)
!15335 = !DILocation(line: 858, column: 20, scope: !15288)
!15336 = !DILocation(line: 858, column: 2, scope: !15288)
!15337 = !DILocation(line: 858, column: 13, scope: !15288)
!15338 = !DILocation(line: 858, column: 18, scope: !15288)
!15339 = !DILocation(line: 859, column: 26, scope: !15288)
!15340 = !DILocation(line: 859, column: 35, scope: !15288)
!15341 = !DILocation(line: 859, column: 33, scope: !15288)
!15342 = !DILocation(line: 859, column: 20, scope: !15288)
!15343 = !DILocation(line: 859, column: 2, scope: !15288)
!15344 = !DILocation(line: 859, column: 13, scope: !15288)
!15345 = !DILocation(line: 859, column: 18, scope: !15288)
!15346 = !DILocation(line: 861, column: 26, scope: !15288)
!15347 = !DILocation(line: 861, column: 35, scope: !15288)
!15348 = !DILocation(line: 861, column: 33, scope: !15288)
!15349 = !DILocation(line: 861, column: 20, scope: !15288)
!15350 = !DILocation(line: 861, column: 46, scope: !15288)
!15351 = !DILocation(line: 861, column: 2, scope: !15288)
!15352 = !DILocation(line: 861, column: 13, scope: !15288)
!15353 = !DILocation(line: 861, column: 18, scope: !15288)
!15354 = !DILocation(line: 862, column: 26, scope: !15288)
!15355 = !DILocation(line: 862, column: 35, scope: !15288)
!15356 = !DILocation(line: 862, column: 33, scope: !15288)
!15357 = !DILocation(line: 862, column: 20, scope: !15288)
!15358 = !DILocation(line: 862, column: 46, scope: !15288)
!15359 = !DILocation(line: 862, column: 2, scope: !15288)
!15360 = !DILocation(line: 862, column: 13, scope: !15288)
!15361 = !DILocation(line: 862, column: 18, scope: !15288)
!15362 = !DILocation(line: 867, column: 10, scope: !15288)
!15363 = !DILocation(line: 867, column: 21, scope: !15288)
!15364 = !DILocation(line: 867, column: 29, scope: !15288)
!15365 = !DILocation(line: 867, column: 40, scope: !15288)
!15366 = !DILocation(line: 867, column: 26, scope: !15288)
!15367 = !DILocation(line: 867, column: 45, scope: !15288)
!15368 = !DILocation(line: 867, column: 48, scope: !15288)
!15369 = !DILocation(line: 867, column: 59, scope: !15288)
!15370 = !DILocation(line: 867, column: 67, scope: !15288)
!15371 = !DILocation(line: 867, column: 78, scope: !15288)
!15372 = !DILocation(line: 867, column: 64, scope: !15288)
!15373 = !DILocation(line: 867, column: 9, scope: !15288)
!15374 = !DILocation(line: 867, column: 2, scope: !15288)
!15375 = distinct !DISubprogram(name: "line_point_side_v2", scope: !4381, file: !4381, line: 1002, type: !15376, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!15376 = !DISubroutineType(types: !15377)
!15377 = !{!184, !1944, !1944, !1944}
!15378 = !DILocalVariable(name: "l1", arg: 1, scope: !15375, file: !4381, line: 1002, type: !1944)
!15379 = !DILocation(line: 1002, column: 46, scope: !15375)
!15380 = !DILocalVariable(name: "l2", arg: 2, scope: !15375, file: !4381, line: 1002, type: !1944)
!15381 = !DILocation(line: 1002, column: 65, scope: !15375)
!15382 = !DILocalVariable(name: "pt", arg: 3, scope: !15375, file: !4381, line: 1002, type: !1944)
!15383 = !DILocation(line: 1002, column: 84, scope: !15375)
!15384 = !DILocation(line: 1004, column: 12, scope: !15375)
!15385 = !DILocation(line: 1004, column: 20, scope: !15375)
!15386 = !DILocation(line: 1004, column: 18, scope: !15375)
!15387 = !DILocation(line: 1004, column: 30, scope: !15375)
!15388 = !DILocation(line: 1004, column: 38, scope: !15375)
!15389 = !DILocation(line: 1004, column: 36, scope: !15375)
!15390 = !DILocation(line: 1004, column: 27, scope: !15375)
!15391 = !DILocation(line: 1005, column: 12, scope: !15375)
!15392 = !DILocation(line: 1005, column: 20, scope: !15375)
!15393 = !DILocation(line: 1005, column: 18, scope: !15375)
!15394 = !DILocation(line: 1005, column: 30, scope: !15375)
!15395 = !DILocation(line: 1005, column: 38, scope: !15375)
!15396 = !DILocation(line: 1005, column: 36, scope: !15375)
!15397 = !DILocation(line: 1005, column: 27, scope: !15375)
!15398 = !DILocation(line: 1004, column: 46, scope: !15375)
!15399 = !DILocation(line: 1004, column: 2, scope: !15375)
!15400 = distinct !DISubprogram(name: "IsectPT2Df_limit", scope: !3, file: !3, line: 1916, type: !15401, scopeLine: 1917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!15401 = !DISubroutineType(types: !15402)
!15402 = !{!233, !216, !216, !216, !216, !184}
!15403 = !DILocalVariable(name: "pt", arg: 1, scope: !15400, file: !3, line: 1916, type: !216)
!15404 = !DILocation(line: 1916, column: 36, scope: !15400)
!15405 = !DILocalVariable(name: "v1", arg: 2, scope: !15400, file: !3, line: 1916, type: !216)
!15406 = !DILocation(line: 1916, column: 49, scope: !15400)
!15407 = !DILocalVariable(name: "v2", arg: 3, scope: !15400, file: !3, line: 1916, type: !216)
!15408 = !DILocation(line: 1916, column: 62, scope: !15400)
!15409 = !DILocalVariable(name: "v3", arg: 4, scope: !15400, file: !3, line: 1916, type: !216)
!15410 = !DILocation(line: 1916, column: 75, scope: !15400)
!15411 = !DILocalVariable(name: "limit", arg: 5, scope: !15400, file: !3, line: 1916, type: !184)
!15412 = !DILocation(line: 1916, column: 88, scope: !15400)
!15413 = !DILocation(line: 1918, column: 23, scope: !15400)
!15414 = !DILocation(line: 1918, column: 27, scope: !15400)
!15415 = !DILocation(line: 1918, column: 31, scope: !15400)
!15416 = !DILocation(line: 1918, column: 11, scope: !15400)
!15417 = !DILocation(line: 1919, column: 23, scope: !15400)
!15418 = !DILocation(line: 1919, column: 27, scope: !15400)
!15419 = !DILocation(line: 1919, column: 31, scope: !15400)
!15420 = !DILocation(line: 1919, column: 11, scope: !15400)
!15421 = !DILocation(line: 1918, column: 35, scope: !15400)
!15422 = !DILocation(line: 1920, column: 23, scope: !15400)
!15423 = !DILocation(line: 1920, column: 27, scope: !15400)
!15424 = !DILocation(line: 1920, column: 31, scope: !15400)
!15425 = !DILocation(line: 1920, column: 11, scope: !15400)
!15426 = !DILocation(line: 1919, column: 35, scope: !15400)
!15427 = !DILocation(line: 1920, column: 51, scope: !15400)
!15428 = !DILocation(line: 1920, column: 55, scope: !15400)
!15429 = !DILocation(line: 1920, column: 59, scope: !15400)
!15430 = !DILocation(line: 1920, column: 39, scope: !15400)
!15431 = !DILocation(line: 1920, column: 36, scope: !15400)
!15432 = !DILocation(line: 1920, column: 67, scope: !15400)
!15433 = !DILocation(line: 1920, column: 65, scope: !15400)
!15434 = !DILocation(line: 1918, column: 9, scope: !15400)
!15435 = !DILocation(line: 1918, column: 2, scope: !15400)
!15436 = distinct !DISubprogram(name: "rect_to_uvspace_ortho", scope: !3, file: !3, line: 1828, type: !15437, scopeLine: 1834, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!15437 = !DISubroutineType(types: !15438)
!15438 = !{null, !9496, !1944, !1944, !1944, !1944, !1944, !1944, !11745, !5126}
!15439 = !DILocalVariable(name: "bucket_bounds", arg: 1, scope: !15436, file: !3, line: 1829, type: !9496)
!15440 = !DILocation(line: 1829, column: 15, scope: !15436)
!15441 = !DILocalVariable(name: "v1coSS", arg: 2, scope: !15436, file: !3, line: 1830, type: !1944)
!15442 = !DILocation(line: 1830, column: 22, scope: !15436)
!15443 = !DILocalVariable(name: "v2coSS", arg: 3, scope: !15436, file: !3, line: 1830, type: !1944)
!15444 = !DILocation(line: 1830, column: 43, scope: !15436)
!15445 = !DILocalVariable(name: "v3coSS", arg: 4, scope: !15436, file: !3, line: 1830, type: !1944)
!15446 = !DILocation(line: 1830, column: 64, scope: !15436)
!15447 = !DILocalVariable(name: "uv1co", arg: 5, scope: !15436, file: !3, line: 1831, type: !1944)
!15448 = !DILocation(line: 1831, column: 22, scope: !15436)
!15449 = !DILocalVariable(name: "uv2co", arg: 6, scope: !15436, file: !3, line: 1831, type: !1944)
!15450 = !DILocation(line: 1831, column: 42, scope: !15436)
!15451 = !DILocalVariable(name: "uv3co", arg: 7, scope: !15436, file: !3, line: 1831, type: !1944)
!15452 = !DILocation(line: 1831, column: 62, scope: !15436)
!15453 = !DILocalVariable(name: "bucket_bounds_uv", arg: 8, scope: !15436, file: !3, line: 1832, type: !11745)
!15454 = !DILocation(line: 1832, column: 15, scope: !15436)
!15455 = !DILocalVariable(name: "flip", arg: 9, scope: !15436, file: !3, line: 1833, type: !5126)
!15456 = !DILocation(line: 1833, column: 19, scope: !15436)
!15457 = !DILocalVariable(name: "uv", scope: !15436, file: !3, line: 1835, type: !860)
!15458 = !DILocation(line: 1835, column: 8, scope: !15436)
!15459 = !DILocalVariable(name: "w", scope: !15436, file: !3, line: 1836, type: !183)
!15460 = !DILocation(line: 1836, column: 8, scope: !15436)
!15461 = !DILocation(line: 1839, column: 10, scope: !15436)
!15462 = !DILocation(line: 1839, column: 25, scope: !15436)
!15463 = !DILocation(line: 1839, column: 2, scope: !15436)
!15464 = !DILocation(line: 1839, column: 8, scope: !15436)
!15465 = !DILocation(line: 1840, column: 10, scope: !15436)
!15466 = !DILocation(line: 1840, column: 25, scope: !15436)
!15467 = !DILocation(line: 1840, column: 2, scope: !15436)
!15468 = !DILocation(line: 1840, column: 8, scope: !15436)
!15469 = !DILocation(line: 1841, column: 25, scope: !15436)
!15470 = !DILocation(line: 1841, column: 33, scope: !15436)
!15471 = !DILocation(line: 1841, column: 41, scope: !15436)
!15472 = !DILocation(line: 1841, column: 49, scope: !15436)
!15473 = !DILocation(line: 1841, column: 53, scope: !15436)
!15474 = !DILocation(line: 1841, column: 2, scope: !15436)
!15475 = !DILocation(line: 1842, column: 19, scope: !15436)
!15476 = !DILocation(line: 1842, column: 36, scope: !15436)
!15477 = !DILocation(line: 1842, column: 51, scope: !15436)
!15478 = !DILocation(line: 1842, column: 58, scope: !15436)
!15479 = !DILocation(line: 1842, column: 65, scope: !15436)
!15480 = !DILocation(line: 1842, column: 72, scope: !15436)
!15481 = !DILocation(line: 1842, column: 2, scope: !15436)
!15482 = !DILocation(line: 1845, column: 10, scope: !15436)
!15483 = !DILocation(line: 1845, column: 25, scope: !15436)
!15484 = !DILocation(line: 1845, column: 2, scope: !15436)
!15485 = !DILocation(line: 1845, column: 8, scope: !15436)
!15486 = !DILocation(line: 1846, column: 25, scope: !15436)
!15487 = !DILocation(line: 1846, column: 33, scope: !15436)
!15488 = !DILocation(line: 1846, column: 41, scope: !15436)
!15489 = !DILocation(line: 1846, column: 49, scope: !15436)
!15490 = !DILocation(line: 1846, column: 53, scope: !15436)
!15491 = !DILocation(line: 1846, column: 2, scope: !15436)
!15492 = !DILocation(line: 1847, column: 19, scope: !15436)
!15493 = !DILocation(line: 1847, column: 36, scope: !15436)
!15494 = !DILocation(line: 1847, column: 51, scope: !15436)
!15495 = !DILocation(line: 1847, column: 58, scope: !15436)
!15496 = !DILocation(line: 1847, column: 65, scope: !15436)
!15497 = !DILocation(line: 1847, column: 72, scope: !15436)
!15498 = !DILocation(line: 1847, column: 2, scope: !15436)
!15499 = !DILocation(line: 1849, column: 10, scope: !15436)
!15500 = !DILocation(line: 1849, column: 25, scope: !15436)
!15501 = !DILocation(line: 1849, column: 2, scope: !15436)
!15502 = !DILocation(line: 1849, column: 8, scope: !15436)
!15503 = !DILocation(line: 1851, column: 25, scope: !15436)
!15504 = !DILocation(line: 1851, column: 33, scope: !15436)
!15505 = !DILocation(line: 1851, column: 41, scope: !15436)
!15506 = !DILocation(line: 1851, column: 49, scope: !15436)
!15507 = !DILocation(line: 1851, column: 53, scope: !15436)
!15508 = !DILocation(line: 1851, column: 2, scope: !15436)
!15509 = !DILocation(line: 1852, column: 19, scope: !15436)
!15510 = !DILocation(line: 1852, column: 36, scope: !15436)
!15511 = !DILocation(line: 1852, column: 51, scope: !15436)
!15512 = !DILocation(line: 1852, column: 58, scope: !15436)
!15513 = !DILocation(line: 1852, column: 65, scope: !15436)
!15514 = !DILocation(line: 1852, column: 72, scope: !15436)
!15515 = !DILocation(line: 1852, column: 2, scope: !15436)
!15516 = !DILocation(line: 1855, column: 10, scope: !15436)
!15517 = !DILocation(line: 1855, column: 25, scope: !15436)
!15518 = !DILocation(line: 1855, column: 2, scope: !15436)
!15519 = !DILocation(line: 1855, column: 8, scope: !15436)
!15520 = !DILocation(line: 1856, column: 25, scope: !15436)
!15521 = !DILocation(line: 1856, column: 33, scope: !15436)
!15522 = !DILocation(line: 1856, column: 41, scope: !15436)
!15523 = !DILocation(line: 1856, column: 49, scope: !15436)
!15524 = !DILocation(line: 1856, column: 53, scope: !15436)
!15525 = !DILocation(line: 1856, column: 2, scope: !15436)
!15526 = !DILocation(line: 1857, column: 19, scope: !15436)
!15527 = !DILocation(line: 1857, column: 36, scope: !15436)
!15528 = !DILocation(line: 1857, column: 51, scope: !15436)
!15529 = !DILocation(line: 1857, column: 58, scope: !15436)
!15530 = !DILocation(line: 1857, column: 65, scope: !15436)
!15531 = !DILocation(line: 1857, column: 72, scope: !15436)
!15532 = !DILocation(line: 1857, column: 2, scope: !15436)
!15533 = !DILocation(line: 1858, column: 1, scope: !15436)
!15534 = distinct !DISubprogram(name: "rect_to_uvspace_persp", scope: !3, file: !3, line: 1861, type: !15437, scopeLine: 1868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!15535 = !DILocalVariable(name: "bucket_bounds", arg: 1, scope: !15534, file: !3, line: 1862, type: !9496)
!15536 = !DILocation(line: 1862, column: 15, scope: !15534)
!15537 = !DILocalVariable(name: "v1coSS", arg: 2, scope: !15534, file: !3, line: 1863, type: !1944)
!15538 = !DILocation(line: 1863, column: 22, scope: !15534)
!15539 = !DILocalVariable(name: "v2coSS", arg: 3, scope: !15534, file: !3, line: 1863, type: !1944)
!15540 = !DILocation(line: 1863, column: 43, scope: !15534)
!15541 = !DILocalVariable(name: "v3coSS", arg: 4, scope: !15534, file: !3, line: 1863, type: !1944)
!15542 = !DILocation(line: 1863, column: 64, scope: !15534)
!15543 = !DILocalVariable(name: "uv1co", arg: 5, scope: !15534, file: !3, line: 1864, type: !1944)
!15544 = !DILocation(line: 1864, column: 22, scope: !15534)
!15545 = !DILocalVariable(name: "uv2co", arg: 6, scope: !15534, file: !3, line: 1864, type: !1944)
!15546 = !DILocation(line: 1864, column: 42, scope: !15534)
!15547 = !DILocalVariable(name: "uv3co", arg: 7, scope: !15534, file: !3, line: 1864, type: !1944)
!15548 = !DILocation(line: 1864, column: 62, scope: !15534)
!15549 = !DILocalVariable(name: "bucket_bounds_uv", arg: 8, scope: !15534, file: !3, line: 1865, type: !11745)
!15550 = !DILocation(line: 1865, column: 15, scope: !15534)
!15551 = !DILocalVariable(name: "flip", arg: 9, scope: !15534, file: !3, line: 1866, type: !5126)
!15552 = !DILocation(line: 1866, column: 19, scope: !15534)
!15553 = !DILocalVariable(name: "uv", scope: !15534, file: !3, line: 1869, type: !860)
!15554 = !DILocation(line: 1869, column: 8, scope: !15534)
!15555 = !DILocalVariable(name: "w", scope: !15534, file: !3, line: 1870, type: !183)
!15556 = !DILocation(line: 1870, column: 8, scope: !15534)
!15557 = !DILocation(line: 1873, column: 10, scope: !15534)
!15558 = !DILocation(line: 1873, column: 25, scope: !15534)
!15559 = !DILocation(line: 1873, column: 2, scope: !15534)
!15560 = !DILocation(line: 1873, column: 8, scope: !15534)
!15561 = !DILocation(line: 1874, column: 10, scope: !15534)
!15562 = !DILocation(line: 1874, column: 25, scope: !15534)
!15563 = !DILocation(line: 1874, column: 2, scope: !15534)
!15564 = !DILocation(line: 1874, column: 8, scope: !15534)
!15565 = !DILocation(line: 1875, column: 31, scope: !15534)
!15566 = !DILocation(line: 1875, column: 39, scope: !15534)
!15567 = !DILocation(line: 1875, column: 47, scope: !15534)
!15568 = !DILocation(line: 1875, column: 55, scope: !15534)
!15569 = !DILocation(line: 1875, column: 59, scope: !15534)
!15570 = !DILocation(line: 1875, column: 2, scope: !15534)
!15571 = !DILocation(line: 1876, column: 19, scope: !15534)
!15572 = !DILocation(line: 1876, column: 36, scope: !15534)
!15573 = !DILocation(line: 1876, column: 51, scope: !15534)
!15574 = !DILocation(line: 1876, column: 58, scope: !15534)
!15575 = !DILocation(line: 1876, column: 65, scope: !15534)
!15576 = !DILocation(line: 1876, column: 72, scope: !15534)
!15577 = !DILocation(line: 1876, column: 2, scope: !15534)
!15578 = !DILocation(line: 1879, column: 10, scope: !15534)
!15579 = !DILocation(line: 1879, column: 25, scope: !15534)
!15580 = !DILocation(line: 1879, column: 2, scope: !15534)
!15581 = !DILocation(line: 1879, column: 8, scope: !15534)
!15582 = !DILocation(line: 1880, column: 31, scope: !15534)
!15583 = !DILocation(line: 1880, column: 39, scope: !15534)
!15584 = !DILocation(line: 1880, column: 47, scope: !15534)
!15585 = !DILocation(line: 1880, column: 55, scope: !15534)
!15586 = !DILocation(line: 1880, column: 59, scope: !15534)
!15587 = !DILocation(line: 1880, column: 2, scope: !15534)
!15588 = !DILocation(line: 1881, column: 19, scope: !15534)
!15589 = !DILocation(line: 1881, column: 36, scope: !15534)
!15590 = !DILocation(line: 1881, column: 51, scope: !15534)
!15591 = !DILocation(line: 1881, column: 58, scope: !15534)
!15592 = !DILocation(line: 1881, column: 65, scope: !15534)
!15593 = !DILocation(line: 1881, column: 72, scope: !15534)
!15594 = !DILocation(line: 1881, column: 2, scope: !15534)
!15595 = !DILocation(line: 1883, column: 10, scope: !15534)
!15596 = !DILocation(line: 1883, column: 25, scope: !15534)
!15597 = !DILocation(line: 1883, column: 2, scope: !15534)
!15598 = !DILocation(line: 1883, column: 8, scope: !15534)
!15599 = !DILocation(line: 1885, column: 31, scope: !15534)
!15600 = !DILocation(line: 1885, column: 39, scope: !15534)
!15601 = !DILocation(line: 1885, column: 47, scope: !15534)
!15602 = !DILocation(line: 1885, column: 55, scope: !15534)
!15603 = !DILocation(line: 1885, column: 59, scope: !15534)
!15604 = !DILocation(line: 1885, column: 2, scope: !15534)
!15605 = !DILocation(line: 1886, column: 19, scope: !15534)
!15606 = !DILocation(line: 1886, column: 36, scope: !15534)
!15607 = !DILocation(line: 1886, column: 51, scope: !15534)
!15608 = !DILocation(line: 1886, column: 58, scope: !15534)
!15609 = !DILocation(line: 1886, column: 65, scope: !15534)
!15610 = !DILocation(line: 1886, column: 72, scope: !15534)
!15611 = !DILocation(line: 1886, column: 2, scope: !15534)
!15612 = !DILocation(line: 1889, column: 10, scope: !15534)
!15613 = !DILocation(line: 1889, column: 25, scope: !15534)
!15614 = !DILocation(line: 1889, column: 2, scope: !15534)
!15615 = !DILocation(line: 1889, column: 8, scope: !15534)
!15616 = !DILocation(line: 1890, column: 31, scope: !15534)
!15617 = !DILocation(line: 1890, column: 39, scope: !15534)
!15618 = !DILocation(line: 1890, column: 47, scope: !15534)
!15619 = !DILocation(line: 1890, column: 55, scope: !15534)
!15620 = !DILocation(line: 1890, column: 59, scope: !15534)
!15621 = !DILocation(line: 1890, column: 2, scope: !15534)
!15622 = !DILocation(line: 1891, column: 19, scope: !15534)
!15623 = !DILocation(line: 1891, column: 36, scope: !15534)
!15624 = !DILocation(line: 1891, column: 51, scope: !15534)
!15625 = !DILocation(line: 1891, column: 58, scope: !15534)
!15626 = !DILocation(line: 1891, column: 65, scope: !15534)
!15627 = !DILocation(line: 1891, column: 72, scope: !15534)
!15628 = !DILocation(line: 1891, column: 2, scope: !15534)
!15629 = !DILocation(line: 1892, column: 1, scope: !15534)
!15630 = distinct !DISubprogram(name: "float_z_sort_flip", scope: !3, file: !3, line: 1926, type: !15631, scopeLine: 1927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!15631 = !DISubroutineType(types: !15632)
!15632 = !{!22, !15633, !15633}
!15633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15634, size: 64)
!15634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15635 = !DILocalVariable(name: "p1", arg: 1, scope: !15630, file: !3, line: 1926, type: !15633)
!15636 = !DILocation(line: 1926, column: 42, scope: !15630)
!15637 = !DILocalVariable(name: "p2", arg: 2, scope: !15630, file: !3, line: 1926, type: !15633)
!15638 = !DILocation(line: 1926, column: 58, scope: !15630)
!15639 = !DILocation(line: 1928, column: 20, scope: !15630)
!15640 = !DILocation(line: 1928, column: 11, scope: !15630)
!15641 = !DILocation(line: 1928, column: 10, scope: !15630)
!15642 = !DILocation(line: 1928, column: 39, scope: !15630)
!15643 = !DILocation(line: 1928, column: 30, scope: !15630)
!15644 = !DILocation(line: 1928, column: 29, scope: !15630)
!15645 = !DILocation(line: 1928, column: 27, scope: !15630)
!15646 = !DILocation(line: 1928, column: 2, scope: !15630)
!15647 = distinct !DISubprogram(name: "float_z_sort", scope: !3, file: !3, line: 1931, type: !15631, scopeLine: 1932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!15648 = !DILocalVariable(name: "p1", arg: 1, scope: !15647, file: !3, line: 1931, type: !15633)
!15649 = !DILocation(line: 1931, column: 37, scope: !15647)
!15650 = !DILocalVariable(name: "p2", arg: 2, scope: !15647, file: !3, line: 1931, type: !15633)
!15651 = !DILocation(line: 1931, column: 53, scope: !15647)
!15652 = !DILocation(line: 1933, column: 20, scope: !15647)
!15653 = !DILocation(line: 1933, column: 11, scope: !15647)
!15654 = !DILocation(line: 1933, column: 10, scope: !15647)
!15655 = !DILocation(line: 1933, column: 39, scope: !15647)
!15656 = !DILocation(line: 1933, column: 30, scope: !15647)
!15657 = !DILocation(line: 1933, column: 29, scope: !15647)
!15658 = !DILocation(line: 1933, column: 27, scope: !15647)
!15659 = !DILocation(line: 1933, column: 2, scope: !15647)
!15660 = distinct !DISubprogram(name: "area_tri_v2", scope: !15661, file: !15661, line: 52, type: !15376, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!15661 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_geom_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!15662 = !DILocalVariable(name: "v1", arg: 1, scope: !15660, file: !15661, line: 52, type: !1944)
!15663 = !DILocation(line: 52, column: 39, scope: !15660)
!15664 = !DILocalVariable(name: "v2", arg: 2, scope: !15660, file: !15661, line: 52, type: !1944)
!15665 = !DILocation(line: 52, column: 58, scope: !15660)
!15666 = !DILocalVariable(name: "v3", arg: 3, scope: !15660, file: !15661, line: 52, type: !1944)
!15667 = !DILocation(line: 52, column: 77, scope: !15660)
!15668 = !DILocation(line: 54, column: 34, scope: !15660)
!15669 = !DILocation(line: 54, column: 38, scope: !15660)
!15670 = !DILocation(line: 54, column: 42, scope: !15660)
!15671 = !DILocation(line: 54, column: 15, scope: !15660)
!15672 = !DILocation(line: 54, column: 9, scope: !15660)
!15673 = !DILocation(line: 54, column: 2, scope: !15660)
!15674 = distinct !DISubprogram(name: "area_tri_signed_v2", scope: !15661, file: !15661, line: 47, type: !15376, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!15675 = !DILocalVariable(name: "v1", arg: 1, scope: !15674, file: !15661, line: 47, type: !1944)
!15676 = !DILocation(line: 47, column: 46, scope: !15674)
!15677 = !DILocalVariable(name: "v2", arg: 2, scope: !15674, file: !15661, line: 47, type: !1944)
!15678 = !DILocation(line: 47, column: 65, scope: !15674)
!15679 = !DILocalVariable(name: "v3", arg: 3, scope: !15674, file: !15661, line: 47, type: !1944)
!15680 = !DILocation(line: 47, column: 84, scope: !15674)
!15681 = !DILocation(line: 49, column: 18, scope: !15674)
!15682 = !DILocation(line: 49, column: 26, scope: !15674)
!15683 = !DILocation(line: 49, column: 24, scope: !15674)
!15684 = !DILocation(line: 49, column: 36, scope: !15674)
!15685 = !DILocation(line: 49, column: 44, scope: !15674)
!15686 = !DILocation(line: 49, column: 42, scope: !15674)
!15687 = !DILocation(line: 49, column: 33, scope: !15674)
!15688 = !DILocation(line: 49, column: 54, scope: !15674)
!15689 = !DILocation(line: 49, column: 62, scope: !15674)
!15690 = !DILocation(line: 49, column: 60, scope: !15674)
!15691 = !DILocation(line: 49, column: 72, scope: !15674)
!15692 = !DILocation(line: 49, column: 80, scope: !15674)
!15693 = !DILocation(line: 49, column: 78, scope: !15674)
!15694 = !DILocation(line: 49, column: 69, scope: !15674)
!15695 = !DILocation(line: 49, column: 51, scope: !15674)
!15696 = !DILocation(line: 49, column: 14, scope: !15674)
!15697 = !DILocation(line: 49, column: 2, scope: !15674)
!15698 = distinct !DISubprogram(name: "project_paint_occlude_ptv_clip", scope: !3, file: !3, line: 674, type: !15699, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!15699 = !DISubroutineType(types: !15700)
!15700 = !{!22, !9396, !11212, !1944, !1944, !1944, !1944, !5126}
!15701 = !DILocalVariable(name: "ps", arg: 1, scope: !15698, file: !3, line: 674, type: !9396)
!15702 = !DILocation(line: 674, column: 65, scope: !15698)
!15703 = !DILocalVariable(name: "mf", arg: 2, scope: !15698, file: !3, line: 674, type: !11212)
!15704 = !DILocation(line: 674, column: 82, scope: !15698)
!15705 = !DILocalVariable(name: "pt", arg: 3, scope: !15698, file: !3, line: 675, type: !1944)
!15706 = !DILocation(line: 675, column: 55, scope: !15698)
!15707 = !DILocalVariable(name: "v1", arg: 4, scope: !15698, file: !3, line: 675, type: !1944)
!15708 = !DILocation(line: 675, column: 74, scope: !15698)
!15709 = !DILocalVariable(name: "v2", arg: 5, scope: !15698, file: !3, line: 675, type: !1944)
!15710 = !DILocation(line: 675, column: 93, scope: !15698)
!15711 = !DILocalVariable(name: "v3", arg: 6, scope: !15698, file: !3, line: 675, type: !1944)
!15712 = !DILocation(line: 675, column: 112, scope: !15698)
!15713 = !DILocalVariable(name: "side", arg: 7, scope: !15698, file: !3, line: 676, type: !5126)
!15714 = !DILocation(line: 676, column: 53, scope: !15698)
!15715 = !DILocalVariable(name: "w", scope: !15698, file: !3, line: 678, type: !183)
!15716 = !DILocation(line: 678, column: 8, scope: !15698)
!15717 = !DILocalVariable(name: "wco", scope: !15698, file: !3, line: 678, type: !183)
!15718 = !DILocation(line: 678, column: 14, scope: !15698)
!15719 = !DILocalVariable(name: "ret", scope: !15698, file: !3, line: 679, type: !22)
!15720 = !DILocation(line: 679, column: 6, scope: !15698)
!15721 = !DILocation(line: 679, column: 38, scope: !15698)
!15722 = !DILocation(line: 679, column: 42, scope: !15698)
!15723 = !DILocation(line: 679, column: 46, scope: !15698)
!15724 = !DILocation(line: 679, column: 50, scope: !15698)
!15725 = !DILocation(line: 679, column: 54, scope: !15698)
!15726 = !DILocation(line: 679, column: 57, scope: !15698)
!15727 = !DILocation(line: 679, column: 61, scope: !15698)
!15728 = !DILocation(line: 679, column: 12, scope: !15698)
!15729 = !DILocation(line: 681, column: 6, scope: !15730)
!15730 = distinct !DILexicalBlock(scope: !15698, file: !3, line: 681, column: 6)
!15731 = !DILocation(line: 681, column: 10, scope: !15730)
!15732 = !DILocation(line: 681, column: 6, scope: !15698)
!15733 = !DILocation(line: 682, column: 10, scope: !15730)
!15734 = !DILocation(line: 682, column: 3, scope: !15730)
!15735 = !DILocation(line: 684, column: 6, scope: !15736)
!15736 = distinct !DILexicalBlock(scope: !15698, file: !3, line: 684, column: 6)
!15737 = !DILocation(line: 684, column: 10, scope: !15736)
!15738 = !DILocation(line: 684, column: 6, scope: !15698)
!15739 = !DILocation(line: 685, column: 7, scope: !15740)
!15740 = distinct !DILexicalBlock(scope: !15741, file: !3, line: 685, column: 7)
!15741 = distinct !DILexicalBlock(scope: !15736, file: !3, line: 684, column: 16)
!15742 = !DILocation(line: 685, column: 11, scope: !15740)
!15743 = !DILocation(line: 685, column: 7, scope: !15741)
!15744 = !DILocation(line: 685, column: 44, scope: !15740)
!15745 = !DILocation(line: 685, column: 48, scope: !15740)
!15746 = !DILocation(line: 685, column: 52, scope: !15740)
!15747 = !DILocation(line: 685, column: 56, scope: !15740)
!15748 = !DILocation(line: 685, column: 60, scope: !15740)
!15749 = !DILocation(line: 685, column: 21, scope: !15740)
!15750 = !DILocation(line: 686, column: 37, scope: !15740)
!15751 = !DILocation(line: 686, column: 41, scope: !15740)
!15752 = !DILocation(line: 686, column: 45, scope: !15740)
!15753 = !DILocation(line: 686, column: 49, scope: !15740)
!15754 = !DILocation(line: 686, column: 53, scope: !15740)
!15755 = !DILocation(line: 686, column: 8, scope: !15740)
!15756 = !DILocation(line: 687, column: 2, scope: !15741)
!15757 = !DILocation(line: 690, column: 6, scope: !15758)
!15758 = distinct !DILexicalBlock(scope: !15698, file: !3, line: 690, column: 6)
!15759 = !DILocation(line: 690, column: 6, scope: !15698)
!15760 = !DILocation(line: 690, column: 29, scope: !15758)
!15761 = !DILocation(line: 690, column: 34, scope: !15758)
!15762 = !DILocation(line: 690, column: 38, scope: !15758)
!15763 = !DILocation(line: 690, column: 47, scope: !15758)
!15764 = !DILocation(line: 690, column: 51, scope: !15758)
!15765 = !DILocation(line: 690, column: 55, scope: !15758)
!15766 = !DILocation(line: 690, column: 59, scope: !15758)
!15767 = !DILocation(line: 690, column: 63, scope: !15758)
!15768 = !DILocation(line: 690, column: 72, scope: !15758)
!15769 = !DILocation(line: 690, column: 76, scope: !15758)
!15770 = !DILocation(line: 690, column: 80, scope: !15758)
!15771 = !DILocation(line: 690, column: 84, scope: !15758)
!15772 = !DILocation(line: 690, column: 88, scope: !15758)
!15773 = !DILocation(line: 690, column: 97, scope: !15758)
!15774 = !DILocation(line: 690, column: 101, scope: !15758)
!15775 = !DILocation(line: 690, column: 105, scope: !15758)
!15776 = !DILocation(line: 690, column: 109, scope: !15758)
!15777 = !DILocation(line: 690, column: 12, scope: !15758)
!15778 = !DILocation(line: 691, column: 24, scope: !15758)
!15779 = !DILocation(line: 691, column: 29, scope: !15758)
!15780 = !DILocation(line: 691, column: 33, scope: !15758)
!15781 = !DILocation(line: 691, column: 42, scope: !15758)
!15782 = !DILocation(line: 691, column: 46, scope: !15758)
!15783 = !DILocation(line: 691, column: 50, scope: !15758)
!15784 = !DILocation(line: 691, column: 54, scope: !15758)
!15785 = !DILocation(line: 691, column: 58, scope: !15758)
!15786 = !DILocation(line: 691, column: 67, scope: !15758)
!15787 = !DILocation(line: 691, column: 71, scope: !15758)
!15788 = !DILocation(line: 691, column: 75, scope: !15758)
!15789 = !DILocation(line: 691, column: 79, scope: !15758)
!15790 = !DILocation(line: 691, column: 83, scope: !15758)
!15791 = !DILocation(line: 691, column: 92, scope: !15758)
!15792 = !DILocation(line: 691, column: 96, scope: !15758)
!15793 = !DILocation(line: 691, column: 100, scope: !15758)
!15794 = !DILocation(line: 691, column: 104, scope: !15758)
!15795 = !DILocation(line: 691, column: 7, scope: !15758)
!15796 = !DILocation(line: 693, column: 31, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15698, file: !3, line: 693, column: 6)
!15798 = !DILocation(line: 693, column: 35, scope: !15797)
!15799 = !DILocation(line: 693, column: 41, scope: !15797)
!15800 = !DILocation(line: 693, column: 7, scope: !15797)
!15801 = !DILocation(line: 693, column: 6, scope: !15698)
!15802 = !DILocation(line: 694, column: 3, scope: !15803)
!15803 = distinct !DILexicalBlock(scope: !15797, file: !3, line: 693, column: 53)
!15804 = !DILocation(line: 697, column: 2, scope: !15698)
!15805 = !DILocation(line: 698, column: 1, scope: !15698)
!15806 = distinct !DISubprogram(name: "project_paint_occlude_ptv", scope: !3, file: !3, line: 642, type: !15807, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!15807 = !DISubroutineType(types: !15808)
!15808 = !{!22, !1944, !1944, !1944, !1944, !216, !2035}
!15809 = !DILocalVariable(name: "pt", arg: 1, scope: !15806, file: !3, line: 642, type: !1944)
!15810 = !DILocation(line: 642, column: 50, scope: !15806)
!15811 = !DILocalVariable(name: "v1", arg: 2, scope: !15806, file: !3, line: 643, type: !1944)
!15812 = !DILocation(line: 643, column: 50, scope: !15806)
!15813 = !DILocalVariable(name: "v2", arg: 3, scope: !15806, file: !3, line: 643, type: !1944)
!15814 = !DILocation(line: 643, column: 69, scope: !15806)
!15815 = !DILocalVariable(name: "v3", arg: 4, scope: !15806, file: !3, line: 643, type: !1944)
!15816 = !DILocation(line: 643, column: 88, scope: !15806)
!15817 = !DILocalVariable(name: "w", arg: 5, scope: !15806, file: !3, line: 644, type: !216)
!15818 = !DILocation(line: 644, column: 44, scope: !15806)
!15819 = !DILocalVariable(name: "is_ortho", arg: 6, scope: !15806, file: !3, line: 644, type: !2035)
!15820 = !DILocation(line: 644, column: 61, scope: !15806)
!15821 = !DILocation(line: 647, column: 6, scope: !15822)
!15822 = distinct !DILexicalBlock(scope: !15806, file: !3, line: 647, column: 6)
!15823 = !DILocation(line: 647, column: 14, scope: !15822)
!15824 = !DILocation(line: 647, column: 12, scope: !15822)
!15825 = !DILocation(line: 647, column: 20, scope: !15822)
!15826 = !DILocation(line: 647, column: 23, scope: !15822)
!15827 = !DILocation(line: 647, column: 31, scope: !15822)
!15828 = !DILocation(line: 647, column: 29, scope: !15822)
!15829 = !DILocation(line: 647, column: 37, scope: !15822)
!15830 = !DILocation(line: 647, column: 40, scope: !15822)
!15831 = !DILocation(line: 647, column: 48, scope: !15822)
!15832 = !DILocation(line: 647, column: 46, scope: !15822)
!15833 = !DILocation(line: 647, column: 6, scope: !15806)
!15834 = !DILocation(line: 648, column: 3, scope: !15822)
!15835 = !DILocation(line: 651, column: 26, scope: !15836)
!15836 = distinct !DILexicalBlock(scope: !15806, file: !3, line: 651, column: 6)
!15837 = !DILocation(line: 651, column: 30, scope: !15836)
!15838 = !DILocation(line: 651, column: 34, scope: !15836)
!15839 = !DILocation(line: 651, column: 38, scope: !15836)
!15840 = !DILocation(line: 651, column: 7, scope: !15836)
!15841 = !DILocation(line: 651, column: 6, scope: !15806)
!15842 = !DILocation(line: 652, column: 3, scope: !15836)
!15843 = !DILocation(line: 657, column: 6, scope: !15844)
!15844 = distinct !DILexicalBlock(scope: !15806, file: !3, line: 657, column: 6)
!15845 = !DILocation(line: 657, column: 14, scope: !15844)
!15846 = !DILocation(line: 657, column: 12, scope: !15844)
!15847 = !DILocation(line: 657, column: 20, scope: !15844)
!15848 = !DILocation(line: 657, column: 23, scope: !15844)
!15849 = !DILocation(line: 657, column: 31, scope: !15844)
!15850 = !DILocation(line: 657, column: 29, scope: !15844)
!15851 = !DILocation(line: 657, column: 37, scope: !15844)
!15852 = !DILocation(line: 657, column: 40, scope: !15844)
!15853 = !DILocation(line: 657, column: 48, scope: !15844)
!15854 = !DILocation(line: 657, column: 46, scope: !15844)
!15855 = !DILocation(line: 657, column: 6, scope: !15806)
!15856 = !DILocation(line: 658, column: 3, scope: !15857)
!15857 = distinct !DILexicalBlock(scope: !15844, file: !3, line: 657, column: 55)
!15858 = !DILocation(line: 663, column: 7, scope: !15859)
!15859 = distinct !DILexicalBlock(scope: !15860, file: !3, line: 663, column: 7)
!15860 = distinct !DILexicalBlock(scope: !15844, file: !3, line: 660, column: 7)
!15861 = !DILocation(line: 663, column: 7, scope: !15860)
!15862 = !DILocation(line: 664, column: 23, scope: !15863)
!15863 = distinct !DILexicalBlock(scope: !15864, file: !3, line: 664, column: 8)
!15864 = distinct !DILexicalBlock(scope: !15859, file: !3, line: 663, column: 17)
!15865 = !DILocation(line: 664, column: 27, scope: !15863)
!15866 = !DILocation(line: 664, column: 31, scope: !15863)
!15867 = !DILocation(line: 664, column: 35, scope: !15863)
!15868 = !DILocation(line: 664, column: 39, scope: !15863)
!15869 = !DILocation(line: 664, column: 8, scope: !15863)
!15870 = !DILocation(line: 664, column: 44, scope: !15863)
!15871 = !DILocation(line: 664, column: 42, scope: !15863)
!15872 = !DILocation(line: 664, column: 8, scope: !15864)
!15873 = !DILocation(line: 664, column: 51, scope: !15863)
!15874 = !DILocation(line: 665, column: 3, scope: !15864)
!15875 = !DILocation(line: 667, column: 23, scope: !15876)
!15876 = distinct !DILexicalBlock(scope: !15877, file: !3, line: 667, column: 8)
!15877 = distinct !DILexicalBlock(scope: !15859, file: !3, line: 666, column: 8)
!15878 = !DILocation(line: 667, column: 27, scope: !15876)
!15879 = !DILocation(line: 667, column: 31, scope: !15876)
!15880 = !DILocation(line: 667, column: 35, scope: !15876)
!15881 = !DILocation(line: 667, column: 39, scope: !15876)
!15882 = !DILocation(line: 667, column: 8, scope: !15876)
!15883 = !DILocation(line: 667, column: 44, scope: !15876)
!15884 = !DILocation(line: 667, column: 42, scope: !15876)
!15885 = !DILocation(line: 667, column: 8, scope: !15877)
!15886 = !DILocation(line: 667, column: 51, scope: !15876)
!15887 = !DILocation(line: 670, column: 2, scope: !15806)
!15888 = !DILocation(line: 671, column: 1, scope: !15806)
!15889 = distinct !DISubprogram(name: "VecZDepthOrtho", scope: !3, file: !3, line: 427, type: !15890, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!15890 = !DISubroutineType(types: !15891)
!15891 = !{!184, !1944, !1944, !1944, !1944, !216}
!15892 = !DILocalVariable(name: "pt", arg: 1, scope: !15889, file: !3, line: 427, type: !1944)
!15893 = !DILocation(line: 427, column: 41, scope: !15889)
!15894 = !DILocalVariable(name: "v1", arg: 2, scope: !15889, file: !3, line: 428, type: !1944)
!15895 = !DILocation(line: 428, column: 41, scope: !15889)
!15896 = !DILocalVariable(name: "v2", arg: 3, scope: !15889, file: !3, line: 428, type: !1944)
!15897 = !DILocation(line: 428, column: 60, scope: !15889)
!15898 = !DILocalVariable(name: "v3", arg: 4, scope: !15889, file: !3, line: 428, type: !1944)
!15899 = !DILocation(line: 428, column: 79, scope: !15889)
!15900 = !DILocalVariable(name: "w", arg: 5, scope: !15889, file: !3, line: 429, type: !216)
!15901 = !DILocation(line: 429, column: 35, scope: !15889)
!15902 = !DILocation(line: 431, column: 25, scope: !15889)
!15903 = !DILocation(line: 431, column: 29, scope: !15889)
!15904 = !DILocation(line: 431, column: 33, scope: !15889)
!15905 = !DILocation(line: 431, column: 37, scope: !15889)
!15906 = !DILocation(line: 431, column: 41, scope: !15889)
!15907 = !DILocation(line: 431, column: 2, scope: !15889)
!15908 = !DILocation(line: 432, column: 10, scope: !15889)
!15909 = !DILocation(line: 432, column: 18, scope: !15889)
!15910 = !DILocation(line: 432, column: 16, scope: !15889)
!15911 = !DILocation(line: 432, column: 27, scope: !15889)
!15912 = !DILocation(line: 432, column: 35, scope: !15889)
!15913 = !DILocation(line: 432, column: 33, scope: !15889)
!15914 = !DILocation(line: 432, column: 24, scope: !15889)
!15915 = !DILocation(line: 432, column: 44, scope: !15889)
!15916 = !DILocation(line: 432, column: 52, scope: !15889)
!15917 = !DILocation(line: 432, column: 50, scope: !15889)
!15918 = !DILocation(line: 432, column: 41, scope: !15889)
!15919 = !DILocation(line: 432, column: 2, scope: !15889)
!15920 = distinct !DISubprogram(name: "VecZDepthPersp", scope: !3, file: !3, line: 435, type: !15890, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!15921 = !DILocalVariable(name: "pt", arg: 1, scope: !15920, file: !3, line: 435, type: !1944)
!15922 = !DILocation(line: 435, column: 41, scope: !15920)
!15923 = !DILocalVariable(name: "v1", arg: 2, scope: !15920, file: !3, line: 436, type: !1944)
!15924 = !DILocation(line: 436, column: 41, scope: !15920)
!15925 = !DILocalVariable(name: "v2", arg: 3, scope: !15920, file: !3, line: 436, type: !1944)
!15926 = !DILocation(line: 436, column: 60, scope: !15920)
!15927 = !DILocalVariable(name: "v3", arg: 4, scope: !15920, file: !3, line: 436, type: !1944)
!15928 = !DILocation(line: 436, column: 79, scope: !15920)
!15929 = !DILocalVariable(name: "w", arg: 5, scope: !15920, file: !3, line: 437, type: !216)
!15930 = !DILocation(line: 437, column: 35, scope: !15920)
!15931 = !DILocalVariable(name: "wtot_inv", scope: !15920, file: !3, line: 439, type: !184)
!15932 = !DILocation(line: 439, column: 8, scope: !15920)
!15933 = !DILocalVariable(name: "wtot", scope: !15920, file: !3, line: 439, type: !184)
!15934 = !DILocation(line: 439, column: 18, scope: !15920)
!15935 = !DILocalVariable(name: "w_tmp", scope: !15920, file: !3, line: 440, type: !183)
!15936 = !DILocation(line: 440, column: 8, scope: !15920)
!15937 = !DILocation(line: 442, column: 31, scope: !15920)
!15938 = !DILocation(line: 442, column: 35, scope: !15920)
!15939 = !DILocation(line: 442, column: 39, scope: !15920)
!15940 = !DILocation(line: 442, column: 43, scope: !15920)
!15941 = !DILocation(line: 442, column: 47, scope: !15920)
!15942 = !DILocation(line: 442, column: 2, scope: !15920)
!15943 = !DILocation(line: 449, column: 13, scope: !15920)
!15944 = !DILocation(line: 449, column: 20, scope: !15920)
!15945 = !DILocation(line: 449, column: 18, scope: !15920)
!15946 = !DILocation(line: 449, column: 2, scope: !15920)
!15947 = !DILocation(line: 449, column: 11, scope: !15920)
!15948 = !DILocation(line: 450, column: 13, scope: !15920)
!15949 = !DILocation(line: 450, column: 20, scope: !15920)
!15950 = !DILocation(line: 450, column: 18, scope: !15920)
!15951 = !DILocation(line: 450, column: 2, scope: !15920)
!15952 = !DILocation(line: 450, column: 11, scope: !15920)
!15953 = !DILocation(line: 451, column: 13, scope: !15920)
!15954 = !DILocation(line: 451, column: 20, scope: !15920)
!15955 = !DILocation(line: 451, column: 18, scope: !15920)
!15956 = !DILocation(line: 451, column: 2, scope: !15920)
!15957 = !DILocation(line: 451, column: 11, scope: !15920)
!15958 = !DILocation(line: 453, column: 9, scope: !15920)
!15959 = !DILocation(line: 453, column: 20, scope: !15920)
!15960 = !DILocation(line: 453, column: 18, scope: !15920)
!15961 = !DILocation(line: 453, column: 31, scope: !15920)
!15962 = !DILocation(line: 453, column: 29, scope: !15920)
!15963 = !DILocation(line: 453, column: 7, scope: !15920)
!15964 = !DILocation(line: 455, column: 6, scope: !15965)
!15965 = distinct !DILexicalBlock(scope: !15920, file: !3, line: 455, column: 6)
!15966 = !DILocation(line: 455, column: 11, scope: !15965)
!15967 = !DILocation(line: 455, column: 6, scope: !15920)
!15968 = !DILocation(line: 456, column: 21, scope: !15969)
!15969 = distinct !DILexicalBlock(scope: !15965, file: !3, line: 455, column: 20)
!15970 = !DILocation(line: 456, column: 19, scope: !15969)
!15971 = !DILocation(line: 456, column: 12, scope: !15969)
!15972 = !DILocation(line: 458, column: 14, scope: !15969)
!15973 = !DILocation(line: 458, column: 25, scope: !15969)
!15974 = !DILocation(line: 458, column: 23, scope: !15969)
!15975 = !DILocation(line: 458, column: 3, scope: !15969)
!15976 = !DILocation(line: 458, column: 12, scope: !15969)
!15977 = !DILocation(line: 459, column: 14, scope: !15969)
!15978 = !DILocation(line: 459, column: 25, scope: !15969)
!15979 = !DILocation(line: 459, column: 23, scope: !15969)
!15980 = !DILocation(line: 459, column: 3, scope: !15969)
!15981 = !DILocation(line: 459, column: 12, scope: !15969)
!15982 = !DILocation(line: 460, column: 14, scope: !15969)
!15983 = !DILocation(line: 460, column: 25, scope: !15969)
!15984 = !DILocation(line: 460, column: 23, scope: !15969)
!15985 = !DILocation(line: 460, column: 3, scope: !15969)
!15986 = !DILocation(line: 460, column: 12, scope: !15969)
!15987 = !DILocation(line: 461, column: 2, scope: !15969)
!15988 = !DILocation(line: 463, column: 25, scope: !15965)
!15989 = !DILocation(line: 463, column: 34, scope: !15965)
!15990 = !DILocation(line: 463, column: 14, scope: !15965)
!15991 = !DILocation(line: 463, column: 23, scope: !15965)
!15992 = !DILocation(line: 463, column: 3, scope: !15965)
!15993 = !DILocation(line: 463, column: 12, scope: !15965)
!15994 = !DILocation(line: 466, column: 10, scope: !15920)
!15995 = !DILocation(line: 466, column: 18, scope: !15920)
!15996 = !DILocation(line: 466, column: 16, scope: !15920)
!15997 = !DILocation(line: 466, column: 31, scope: !15920)
!15998 = !DILocation(line: 466, column: 39, scope: !15920)
!15999 = !DILocation(line: 466, column: 37, scope: !15920)
!16000 = !DILocation(line: 466, column: 28, scope: !15920)
!16001 = !DILocation(line: 466, column: 52, scope: !15920)
!16002 = !DILocation(line: 466, column: 60, scope: !15920)
!16003 = !DILocation(line: 466, column: 58, scope: !15920)
!16004 = !DILocation(line: 466, column: 49, scope: !15920)
!16005 = !DILocation(line: 466, column: 2, scope: !15920)
!16006 = distinct !DISubprogram(name: "project_face_pixel", scope: !3, file: !3, line: 1186, type: !16007, scopeLine: 1188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!16007 = !DISubroutineType(types: !16008)
!16008 = !{null, !11220, !3893, !1944, !22, !1024, !216}
!16009 = !DILocalVariable(name: "tf_other", arg: 1, scope: !16006, file: !3, line: 1186, type: !11220)
!16010 = !DILocation(line: 1186, column: 46, scope: !16006)
!16011 = !DILocalVariable(name: "ibuf_other", arg: 2, scope: !16006, file: !3, line: 1186, type: !3893)
!16012 = !DILocation(line: 1186, column: 63, scope: !16006)
!16013 = !DILocalVariable(name: "w", arg: 3, scope: !16006, file: !3, line: 1186, type: !1944)
!16014 = !DILocation(line: 1186, column: 87, scope: !16006)
!16015 = !DILocalVariable(name: "side", arg: 4, scope: !16006, file: !3, line: 1187, type: !22)
!16016 = !DILocation(line: 1187, column: 36, scope: !16006)
!16017 = !DILocalVariable(name: "rgba_ub", arg: 5, scope: !16006, file: !3, line: 1187, type: !1024)
!16018 = !DILocation(line: 1187, column: 56, scope: !16006)
!16019 = !DILocalVariable(name: "rgba_f", arg: 6, scope: !16006, file: !3, line: 1187, type: !216)
!16020 = !DILocation(line: 1187, column: 74, scope: !16006)
!16021 = !DILocalVariable(name: "uvCo1", scope: !16006, file: !3, line: 1189, type: !1944)
!16022 = !DILocation(line: 1189, column: 15, scope: !16006)
!16023 = !DILocalVariable(name: "uvCo2", scope: !16006, file: !3, line: 1189, type: !1944)
!16024 = !DILocation(line: 1189, column: 23, scope: !16006)
!16025 = !DILocalVariable(name: "uvCo3", scope: !16006, file: !3, line: 1189, type: !1944)
!16026 = !DILocation(line: 1189, column: 31, scope: !16006)
!16027 = !DILocalVariable(name: "uv_other", scope: !16006, file: !3, line: 1190, type: !860)
!16028 = !DILocation(line: 1190, column: 8, scope: !16006)
!16029 = !DILocalVariable(name: "x", scope: !16006, file: !3, line: 1190, type: !184)
!16030 = !DILocation(line: 1190, column: 21, scope: !16006)
!16031 = !DILocalVariable(name: "y", scope: !16006, file: !3, line: 1190, type: !184)
!16032 = !DILocation(line: 1190, column: 24, scope: !16006)
!16033 = !DILocation(line: 1192, column: 20, scope: !16006)
!16034 = !DILocation(line: 1192, column: 30, scope: !16006)
!16035 = !DILocation(line: 1192, column: 8, scope: !16006)
!16036 = !DILocation(line: 1193, column: 6, scope: !16037)
!16037 = distinct !DILexicalBlock(scope: !16006, file: !3, line: 1193, column: 6)
!16038 = !DILocation(line: 1193, column: 11, scope: !16037)
!16039 = !DILocation(line: 1193, column: 6, scope: !16006)
!16040 = !DILocation(line: 1194, column: 21, scope: !16041)
!16041 = distinct !DILexicalBlock(scope: !16037, file: !3, line: 1193, column: 17)
!16042 = !DILocation(line: 1194, column: 31, scope: !16041)
!16043 = !DILocation(line: 1194, column: 9, scope: !16041)
!16044 = !DILocation(line: 1195, column: 21, scope: !16041)
!16045 = !DILocation(line: 1195, column: 31, scope: !16041)
!16046 = !DILocation(line: 1195, column: 9, scope: !16041)
!16047 = !DILocation(line: 1196, column: 2, scope: !16041)
!16048 = !DILocation(line: 1198, column: 21, scope: !16049)
!16049 = distinct !DILexicalBlock(scope: !16037, file: !3, line: 1197, column: 7)
!16050 = !DILocation(line: 1198, column: 31, scope: !16049)
!16051 = !DILocation(line: 1198, column: 9, scope: !16049)
!16052 = !DILocation(line: 1199, column: 21, scope: !16049)
!16053 = !DILocation(line: 1199, column: 31, scope: !16049)
!16054 = !DILocation(line: 1199, column: 9, scope: !16049)
!16055 = !DILocation(line: 1202, column: 19, scope: !16006)
!16056 = !DILocation(line: 1202, column: 29, scope: !16006)
!16057 = !DILocation(line: 1202, column: 36, scope: !16006)
!16058 = !DILocation(line: 1202, column: 43, scope: !16006)
!16059 = !DILocation(line: 1202, column: 59, scope: !16006)
!16060 = !DILocation(line: 1202, column: 2, scope: !16006)
!16061 = !DILocation(line: 1205, column: 23, scope: !16006)
!16062 = !DILocation(line: 1205, column: 33, scope: !16006)
!16063 = !DILocation(line: 1205, column: 45, scope: !16006)
!16064 = !DILocation(line: 1205, column: 48, scope: !16006)
!16065 = !DILocation(line: 1205, column: 60, scope: !16006)
!16066 = !DILocation(line: 1205, column: 2, scope: !16006)
!16067 = !DILocation(line: 1208, column: 6, scope: !16068)
!16068 = distinct !DILexicalBlock(scope: !16006, file: !3, line: 1208, column: 6)
!16069 = !DILocation(line: 1208, column: 18, scope: !16068)
!16070 = !DILocation(line: 1208, column: 6, scope: !16006)
!16071 = !DILocation(line: 1209, column: 37, scope: !16072)
!16072 = distinct !DILexicalBlock(scope: !16068, file: !3, line: 1208, column: 30)
!16073 = !DILocation(line: 1209, column: 55, scope: !16072)
!16074 = !DILocation(line: 1209, column: 63, scope: !16072)
!16075 = !DILocation(line: 1209, column: 66, scope: !16072)
!16076 = !DILocation(line: 1209, column: 3, scope: !16072)
!16077 = !DILocation(line: 1210, column: 2, scope: !16072)
!16078 = !DILocation(line: 1212, column: 37, scope: !16079)
!16079 = distinct !DILexicalBlock(scope: !16068, file: !3, line: 1211, column: 7)
!16080 = !DILocation(line: 1212, column: 49, scope: !16079)
!16081 = !DILocation(line: 1212, column: 64, scope: !16079)
!16082 = !DILocation(line: 1212, column: 67, scope: !16079)
!16083 = !DILocation(line: 1212, column: 3, scope: !16079)
!16084 = !DILocation(line: 1215, column: 1, scope: !16006)
!16085 = distinct !DISubprogram(name: "normalize_v3", scope: !4381, file: !4381, line: 830, type: !16086, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!16086 = !DISubroutineType(types: !16087)
!16087 = !{!184, !216}
!16088 = !DILocalVariable(name: "n", arg: 1, scope: !16085, file: !4381, line: 830, type: !216)
!16089 = !DILocation(line: 830, column: 34, scope: !16085)
!16090 = !DILocation(line: 832, column: 25, scope: !16085)
!16091 = !DILocation(line: 832, column: 28, scope: !16085)
!16092 = !DILocation(line: 832, column: 9, scope: !16085)
!16093 = !DILocation(line: 832, column: 2, scope: !16085)
!16094 = distinct !DISubprogram(name: "uvco_to_wrapped_pxco", scope: !3, file: !3, line: 533, type: !16095, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!16095 = !DISubroutineType(types: !16096)
!16096 = !{null, !1944, !22, !22, !216, !216}
!16097 = !DILocalVariable(name: "uv", arg: 1, scope: !16094, file: !3, line: 533, type: !1944)
!16098 = !DILocation(line: 533, column: 46, scope: !16094)
!16099 = !DILocalVariable(name: "ibuf_x", arg: 2, scope: !16094, file: !3, line: 533, type: !22)
!16100 = !DILocation(line: 533, column: 57, scope: !16094)
!16101 = !DILocalVariable(name: "ibuf_y", arg: 3, scope: !16094, file: !3, line: 533, type: !22)
!16102 = !DILocation(line: 533, column: 69, scope: !16094)
!16103 = !DILocalVariable(name: "x", arg: 4, scope: !16094, file: !3, line: 533, type: !216)
!16104 = !DILocation(line: 533, column: 84, scope: !16094)
!16105 = !DILocalVariable(name: "y", arg: 5, scope: !16094, file: !3, line: 533, type: !216)
!16106 = !DILocation(line: 533, column: 94, scope: !16094)
!16107 = !DILocation(line: 536, column: 13, scope: !16094)
!16108 = !DILocation(line: 536, column: 7, scope: !16094)
!16109 = !DILocation(line: 536, column: 3, scope: !16094)
!16110 = !DILocation(line: 536, column: 5, scope: !16094)
!16111 = !DILocation(line: 537, column: 13, scope: !16094)
!16112 = !DILocation(line: 537, column: 7, scope: !16094)
!16113 = !DILocation(line: 537, column: 3, scope: !16094)
!16114 = !DILocation(line: 537, column: 5, scope: !16094)
!16115 = !DILocation(line: 539, column: 7, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16094, file: !3, line: 539, column: 6)
!16117 = !DILocation(line: 539, column: 6, scope: !16116)
!16118 = !DILocation(line: 539, column: 9, scope: !16116)
!16119 = !DILocation(line: 539, column: 6, scope: !16094)
!16120 = !DILocation(line: 539, column: 18, scope: !16116)
!16121 = !DILocation(line: 539, column: 20, scope: !16116)
!16122 = !DILocation(line: 539, column: 17, scope: !16116)
!16123 = !DILocation(line: 540, column: 7, scope: !16124)
!16124 = distinct !DILexicalBlock(scope: !16094, file: !3, line: 540, column: 6)
!16125 = !DILocation(line: 540, column: 6, scope: !16124)
!16126 = !DILocation(line: 540, column: 9, scope: !16124)
!16127 = !DILocation(line: 540, column: 6, scope: !16094)
!16128 = !DILocation(line: 540, column: 18, scope: !16124)
!16129 = !DILocation(line: 540, column: 20, scope: !16124)
!16130 = !DILocation(line: 540, column: 17, scope: !16124)
!16131 = !DILocation(line: 542, column: 8, scope: !16094)
!16132 = !DILocation(line: 542, column: 7, scope: !16094)
!16133 = !DILocation(line: 542, column: 12, scope: !16094)
!16134 = !DILocation(line: 542, column: 10, scope: !16094)
!16135 = !DILocation(line: 542, column: 19, scope: !16094)
!16136 = !DILocation(line: 542, column: 3, scope: !16094)
!16137 = !DILocation(line: 542, column: 5, scope: !16094)
!16138 = !DILocation(line: 543, column: 8, scope: !16094)
!16139 = !DILocation(line: 543, column: 7, scope: !16094)
!16140 = !DILocation(line: 543, column: 12, scope: !16094)
!16141 = !DILocation(line: 543, column: 10, scope: !16094)
!16142 = !DILocation(line: 543, column: 19, scope: !16094)
!16143 = !DILocation(line: 543, column: 3, scope: !16094)
!16144 = !DILocation(line: 543, column: 5, scope: !16094)
!16145 = !DILocation(line: 544, column: 1, scope: !16094)
!16146 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !4381, file: !4381, line: 788, type: !16147, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!16147 = !DISubroutineType(types: !16148)
!16148 = !{!184, !216, !1944}
!16149 = !DILocalVariable(name: "r", arg: 1, scope: !16146, file: !4381, line: 788, type: !216)
!16150 = !DILocation(line: 788, column: 37, scope: !16146)
!16151 = !DILocalVariable(name: "a", arg: 2, scope: !16146, file: !4381, line: 788, type: !1944)
!16152 = !DILocation(line: 788, column: 55, scope: !16146)
!16153 = !DILocalVariable(name: "d", scope: !16146, file: !4381, line: 790, type: !184)
!16154 = !DILocation(line: 790, column: 8, scope: !16146)
!16155 = !DILocation(line: 790, column: 21, scope: !16146)
!16156 = !DILocation(line: 790, column: 24, scope: !16146)
!16157 = !DILocation(line: 790, column: 12, scope: !16146)
!16158 = !DILocation(line: 794, column: 6, scope: !16159)
!16159 = distinct !DILexicalBlock(scope: !16146, file: !4381, line: 794, column: 6)
!16160 = !DILocation(line: 794, column: 8, scope: !16159)
!16161 = !DILocation(line: 794, column: 6, scope: !16146)
!16162 = !DILocation(line: 795, column: 13, scope: !16163)
!16163 = distinct !DILexicalBlock(scope: !16159, file: !4381, line: 794, column: 20)
!16164 = !DILocation(line: 795, column: 7, scope: !16163)
!16165 = !DILocation(line: 795, column: 5, scope: !16163)
!16166 = !DILocation(line: 796, column: 15, scope: !16163)
!16167 = !DILocation(line: 796, column: 18, scope: !16163)
!16168 = !DILocation(line: 796, column: 28, scope: !16163)
!16169 = !DILocation(line: 796, column: 26, scope: !16163)
!16170 = !DILocation(line: 796, column: 3, scope: !16163)
!16171 = !DILocation(line: 797, column: 2, scope: !16163)
!16172 = !DILocation(line: 799, column: 11, scope: !16173)
!16173 = distinct !DILexicalBlock(scope: !16159, file: !4381, line: 798, column: 7)
!16174 = !DILocation(line: 799, column: 3, scope: !16173)
!16175 = !DILocation(line: 800, column: 5, scope: !16173)
!16176 = !DILocation(line: 803, column: 9, scope: !16146)
!16177 = !DILocation(line: 803, column: 2, scope: !16146)
!16178 = distinct !DISubprogram(name: "dot_v3v3", scope: !4381, file: !4381, line: 619, type: !9803, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!16179 = !DILocalVariable(name: "a", arg: 1, scope: !16178, file: !4381, line: 619, type: !1944)
!16180 = !DILocation(line: 619, column: 36, scope: !16178)
!16181 = !DILocalVariable(name: "b", arg: 2, scope: !16178, file: !4381, line: 619, type: !1944)
!16182 = !DILocation(line: 619, column: 54, scope: !16178)
!16183 = !DILocation(line: 621, column: 9, scope: !16178)
!16184 = !DILocation(line: 621, column: 16, scope: !16178)
!16185 = !DILocation(line: 621, column: 14, scope: !16178)
!16186 = !DILocation(line: 621, column: 23, scope: !16178)
!16187 = !DILocation(line: 621, column: 30, scope: !16178)
!16188 = !DILocation(line: 621, column: 28, scope: !16178)
!16189 = !DILocation(line: 621, column: 21, scope: !16178)
!16190 = !DILocation(line: 621, column: 37, scope: !16178)
!16191 = !DILocation(line: 621, column: 44, scope: !16178)
!16192 = !DILocation(line: 621, column: 42, scope: !16178)
!16193 = !DILocation(line: 621, column: 35, scope: !16178)
!16194 = !DILocation(line: 621, column: 2, scope: !16178)
!16195 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !4381, file: !4381, line: 399, type: !9927, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!16196 = !DILocalVariable(name: "r", arg: 1, scope: !16195, file: !4381, line: 399, type: !216)
!16197 = !DILocation(line: 399, column: 32, scope: !16195)
!16198 = !DILocalVariable(name: "a", arg: 2, scope: !16195, file: !4381, line: 399, type: !1944)
!16199 = !DILocation(line: 399, column: 50, scope: !16195)
!16200 = !DILocalVariable(name: "f", arg: 3, scope: !16195, file: !4381, line: 399, type: !184)
!16201 = !DILocation(line: 399, column: 62, scope: !16195)
!16202 = !DILocation(line: 401, column: 9, scope: !16195)
!16203 = !DILocation(line: 401, column: 16, scope: !16195)
!16204 = !DILocation(line: 401, column: 14, scope: !16195)
!16205 = !DILocation(line: 401, column: 2, scope: !16195)
!16206 = !DILocation(line: 401, column: 7, scope: !16195)
!16207 = !DILocation(line: 402, column: 9, scope: !16195)
!16208 = !DILocation(line: 402, column: 16, scope: !16195)
!16209 = !DILocation(line: 402, column: 14, scope: !16195)
!16210 = !DILocation(line: 402, column: 2, scope: !16195)
!16211 = !DILocation(line: 402, column: 7, scope: !16195)
!16212 = !DILocation(line: 403, column: 9, scope: !16195)
!16213 = !DILocation(line: 403, column: 16, scope: !16195)
!16214 = !DILocation(line: 403, column: 14, scope: !16195)
!16215 = !DILocation(line: 403, column: 2, scope: !16195)
!16216 = !DILocation(line: 403, column: 7, scope: !16195)
!16217 = !DILocation(line: 404, column: 1, scope: !16195)
!16218 = distinct !DISubprogram(name: "zero_v3", scope: !4381, file: !4381, line: 43, type: !16219, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!16219 = !DISubroutineType(types: !16220)
!16220 = !{null, !216}
!16221 = !DILocalVariable(name: "r", arg: 1, scope: !16218, file: !4381, line: 43, type: !216)
!16222 = !DILocation(line: 43, column: 28, scope: !16218)
!16223 = !DILocation(line: 45, column: 2, scope: !16218)
!16224 = !DILocation(line: 45, column: 7, scope: !16218)
!16225 = !DILocation(line: 46, column: 2, scope: !16218)
!16226 = !DILocation(line: 46, column: 7, scope: !16218)
!16227 = !DILocation(line: 47, column: 2, scope: !16218)
!16228 = !DILocation(line: 47, column: 7, scope: !16218)
!16229 = !DILocation(line: 48, column: 1, scope: !16218)
!16230 = distinct !DISubprogram(name: "mod_i", scope: !9865, file: !9865, line: 178, type: !9866, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!16231 = !DILocalVariable(name: "i", arg: 1, scope: !16230, file: !9865, line: 178, type: !22)
!16232 = !DILocation(line: 178, column: 23, scope: !16230)
!16233 = !DILocalVariable(name: "n", arg: 2, scope: !16230, file: !9865, line: 178, type: !22)
!16234 = !DILocation(line: 178, column: 30, scope: !16230)
!16235 = !DILocation(line: 180, column: 10, scope: !16230)
!16236 = !DILocation(line: 180, column: 14, scope: !16230)
!16237 = !DILocation(line: 180, column: 12, scope: !16230)
!16238 = !DILocation(line: 180, column: 18, scope: !16230)
!16239 = !DILocation(line: 180, column: 16, scope: !16230)
!16240 = !DILocation(line: 180, column: 23, scope: !16230)
!16241 = !DILocation(line: 180, column: 21, scope: !16230)
!16242 = !DILocation(line: 180, column: 2, scope: !16230)
!16243 = distinct !DISubprogram(name: "project_paint_undo_subtiles", scope: !3, file: !3, line: 1358, type: !16244, scopeLine: 1359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!16244 = !DISubroutineType(types: !16245)
!16245 = !{!22, !13874, !22, !22}
!16246 = !DILocalVariable(name: "tinf", arg: 1, scope: !16243, file: !3, line: 1358, type: !13874)
!16247 = !DILocation(line: 1358, column: 56, scope: !16243)
!16248 = !DILocalVariable(name: "tx", arg: 2, scope: !16243, file: !3, line: 1358, type: !22)
!16249 = !DILocation(line: 1358, column: 66, scope: !16243)
!16250 = !DILocalVariable(name: "ty", arg: 3, scope: !16243, file: !3, line: 1358, type: !22)
!16251 = !DILocation(line: 1358, column: 74, scope: !16243)
!16252 = !DILocalVariable(name: "pjIma", scope: !16243, file: !3, line: 1360, type: !3887)
!16253 = !DILocation(line: 1360, column: 18, scope: !16243)
!16254 = !DILocation(line: 1360, column: 26, scope: !16243)
!16255 = !DILocation(line: 1360, column: 32, scope: !16243)
!16256 = !DILocalVariable(name: "tile_index", scope: !16243, file: !3, line: 1361, type: !22)
!16257 = !DILocation(line: 1361, column: 6, scope: !16243)
!16258 = !DILocation(line: 1361, column: 19, scope: !16243)
!16259 = !DILocation(line: 1361, column: 24, scope: !16243)
!16260 = !DILocation(line: 1361, column: 29, scope: !16243)
!16261 = !DILocation(line: 1361, column: 35, scope: !16243)
!16262 = !DILocation(line: 1361, column: 27, scope: !16243)
!16263 = !DILocation(line: 1361, column: 22, scope: !16243)
!16264 = !DILocalVariable(name: "generate_tile", scope: !16243, file: !3, line: 1362, type: !233)
!16265 = !DILocation(line: 1362, column: 7, scope: !16243)
!16266 = !DILocation(line: 1365, column: 6, scope: !16267)
!16267 = distinct !DILexicalBlock(scope: !16243, file: !3, line: 1365, column: 6)
!16268 = !DILocation(line: 1365, column: 6, scope: !16243)
!16269 = !DILocation(line: 1366, column: 7, scope: !16270)
!16270 = distinct !DILexicalBlock(scope: !16271, file: !3, line: 1366, column: 7)
!16271 = distinct !DILexicalBlock(scope: !16267, file: !3, line: 1365, column: 46)
!16272 = !DILocation(line: 1366, column: 13, scope: !16270)
!16273 = !DILocation(line: 1366, column: 7, scope: !16271)
!16274 = !DILocation(line: 1367, column: 18, scope: !16270)
!16275 = !DILocation(line: 1367, column: 24, scope: !16270)
!16276 = !DILocation(line: 1367, column: 4, scope: !16270)
!16277 = !DILocation(line: 1368, column: 7, scope: !16278)
!16278 = distinct !DILexicalBlock(scope: !16271, file: !3, line: 1368, column: 7)
!16279 = !DILocation(line: 1368, column: 7, scope: !16271)
!16280 = !DILocation(line: 1369, column: 4, scope: !16281)
!16281 = distinct !DILexicalBlock(scope: !16278, file: !3, line: 1368, column: 45)
!16282 = !DILocation(line: 1369, column: 11, scope: !16281)
!16283 = !DILocation(line: 1369, column: 20, scope: !16281)
!16284 = !DILocation(line: 1369, column: 32, scope: !16281)
!16285 = !DILocation(line: 1370, column: 18, scope: !16281)
!16286 = !DILocation(line: 1371, column: 3, scope: !16281)
!16287 = !DILocation(line: 1372, column: 7, scope: !16288)
!16288 = distinct !DILexicalBlock(scope: !16271, file: !3, line: 1372, column: 7)
!16289 = !DILocation(line: 1372, column: 13, scope: !16288)
!16290 = !DILocation(line: 1372, column: 7, scope: !16271)
!16291 = !DILocation(line: 1373, column: 20, scope: !16288)
!16292 = !DILocation(line: 1373, column: 26, scope: !16288)
!16293 = !DILocation(line: 1373, column: 4, scope: !16288)
!16294 = !DILocation(line: 1374, column: 2, scope: !16271)
!16295 = !DILocation(line: 1377, column: 6, scope: !16296)
!16296 = distinct !DILexicalBlock(scope: !16243, file: !3, line: 1377, column: 6)
!16297 = !DILocation(line: 1377, column: 6, scope: !16243)
!16298 = !DILocalVariable(name: "undorect", scope: !16299, file: !3, line: 1378, type: !3907)
!16299 = distinct !DILexicalBlock(scope: !16296, file: !3, line: 1377, column: 21)
!16300 = !DILocation(line: 1378, column: 18, scope: !16299)
!16301 = !DILocation(line: 1379, column: 7, scope: !16302)
!16302 = distinct !DILexicalBlock(scope: !16299, file: !3, line: 1379, column: 7)
!16303 = !DILocation(line: 1379, column: 13, scope: !16302)
!16304 = !DILocation(line: 1379, column: 7, scope: !16299)
!16305 = !DILocation(line: 1380, column: 36, scope: !16306)
!16306 = distinct !DILexicalBlock(scope: !16302, file: !3, line: 1379, column: 21)
!16307 = !DILocation(line: 1380, column: 43, scope: !16306)
!16308 = !DILocation(line: 1380, column: 48, scope: !16306)
!16309 = !DILocation(line: 1380, column: 55, scope: !16306)
!16310 = !DILocation(line: 1380, column: 61, scope: !16306)
!16311 = !DILocation(line: 1380, column: 67, scope: !16306)
!16312 = !DILocation(line: 1380, column: 76, scope: !16306)
!16313 = !DILocation(line: 1380, column: 80, scope: !16306)
!16314 = !DILocation(line: 1380, column: 85, scope: !16306)
!16315 = !DILocation(line: 1380, column: 92, scope: !16306)
!16316 = !DILocation(line: 1380, column: 101, scope: !16306)
!16317 = !DILocation(line: 1380, column: 115, scope: !16306)
!16318 = !DILocation(line: 1380, column: 122, scope: !16306)
!16319 = !DILocation(line: 1380, column: 128, scope: !16306)
!16320 = !DILocation(line: 1380, column: 15, scope: !16306)
!16321 = !DILocation(line: 1380, column: 13, scope: !16306)
!16322 = !DILocation(line: 1381, column: 3, scope: !16306)
!16323 = !DILocation(line: 1383, column: 36, scope: !16324)
!16324 = distinct !DILexicalBlock(scope: !16302, file: !3, line: 1382, column: 8)
!16325 = !DILocation(line: 1383, column: 43, scope: !16324)
!16326 = !DILocation(line: 1383, column: 48, scope: !16324)
!16327 = !DILocation(line: 1383, column: 55, scope: !16324)
!16328 = !DILocation(line: 1383, column: 61, scope: !16324)
!16329 = !DILocation(line: 1383, column: 67, scope: !16324)
!16330 = !DILocation(line: 1383, column: 76, scope: !16324)
!16331 = !DILocation(line: 1383, column: 80, scope: !16324)
!16332 = !DILocation(line: 1383, column: 91, scope: !16324)
!16333 = !DILocation(line: 1383, column: 98, scope: !16324)
!16334 = !DILocation(line: 1383, column: 104, scope: !16324)
!16335 = !DILocation(line: 1383, column: 15, scope: !16324)
!16336 = !DILocation(line: 1383, column: 13, scope: !16324)
!16337 = !DILocation(line: 1386, column: 3, scope: !16299)
!16338 = !DILocation(line: 1386, column: 10, scope: !16299)
!16339 = !DILocation(line: 1386, column: 16, scope: !16299)
!16340 = !DILocation(line: 1386, column: 26, scope: !16299)
!16341 = !DILocation(line: 1388, column: 7, scope: !16342)
!16342 = distinct !DILexicalBlock(scope: !16299, file: !3, line: 1388, column: 7)
!16343 = !DILocation(line: 1388, column: 13, scope: !16342)
!16344 = !DILocation(line: 1388, column: 7, scope: !16299)
!16345 = !DILocation(line: 1389, column: 18, scope: !16342)
!16346 = !DILocation(line: 1389, column: 24, scope: !16342)
!16347 = !DILocation(line: 1389, column: 4, scope: !16342)
!16348 = !DILocation(line: 1390, column: 33, scope: !16299)
!16349 = !DILocation(line: 1390, column: 3, scope: !16299)
!16350 = !DILocation(line: 1390, column: 10, scope: !16299)
!16351 = !DILocation(line: 1390, column: 19, scope: !16299)
!16352 = !DILocation(line: 1390, column: 31, scope: !16299)
!16353 = !DILocation(line: 1391, column: 7, scope: !16354)
!16354 = distinct !DILexicalBlock(scope: !16299, file: !3, line: 1391, column: 7)
!16355 = !DILocation(line: 1391, column: 13, scope: !16354)
!16356 = !DILocation(line: 1391, column: 7, scope: !16299)
!16357 = !DILocation(line: 1392, column: 20, scope: !16354)
!16358 = !DILocation(line: 1392, column: 26, scope: !16354)
!16359 = !DILocation(line: 1392, column: 4, scope: !16354)
!16360 = !DILocation(line: 1394, column: 2, scope: !16299)
!16361 = !DILocation(line: 1396, column: 9, scope: !16243)
!16362 = !DILocation(line: 1396, column: 2, scope: !16243)
!16363 = distinct !DISubprogram(name: "zero_v4", scope: !4381, file: !4381, line: 50, type: !16219, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!16364 = !DILocalVariable(name: "r", arg: 1, scope: !16363, file: !4381, line: 50, type: !216)
!16365 = !DILocation(line: 50, column: 28, scope: !16363)
!16366 = !DILocation(line: 52, column: 2, scope: !16363)
!16367 = !DILocation(line: 52, column: 7, scope: !16363)
!16368 = !DILocation(line: 53, column: 2, scope: !16363)
!16369 = !DILocation(line: 53, column: 7, scope: !16363)
!16370 = !DILocation(line: 54, column: 2, scope: !16363)
!16371 = !DILocation(line: 54, column: 7, scope: !16363)
!16372 = !DILocation(line: 55, column: 2, scope: !16363)
!16373 = !DILocation(line: 55, column: 7, scope: !16363)
!16374 = !DILocation(line: 56, column: 1, scope: !16363)
!16375 = distinct !DISubprogram(name: "project_paint_face_clone_image", scope: !3, file: !3, line: 390, type: !12281, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!16376 = !DILocalVariable(name: "ps", arg: 1, scope: !16375, file: !3, line: 390, type: !9396)
!16377 = !DILocation(line: 390, column: 68, scope: !16375)
!16378 = !DILocalVariable(name: "face_index", arg: 2, scope: !16375, file: !3, line: 390, type: !22)
!16379 = !DILocation(line: 390, column: 76, scope: !16375)
!16380 = !DILocalVariable(name: "mf", scope: !16375, file: !3, line: 392, type: !3852)
!16381 = !DILocation(line: 392, column: 9, scope: !16375)
!16382 = !DILocation(line: 392, column: 14, scope: !16375)
!16383 = !DILocation(line: 392, column: 18, scope: !16375)
!16384 = !DILocation(line: 392, column: 29, scope: !16375)
!16385 = !DILocation(line: 392, column: 27, scope: !16375)
!16386 = !DILocalVariable(name: "ma", scope: !16375, file: !3, line: 393, type: !7763)
!16387 = !DILocation(line: 393, column: 12, scope: !16375)
!16388 = !DILocation(line: 393, column: 17, scope: !16375)
!16389 = !DILocation(line: 393, column: 21, scope: !16375)
!16390 = !DILocation(line: 393, column: 25, scope: !16375)
!16391 = !DILocation(line: 393, column: 29, scope: !16375)
!16392 = !DILocation(line: 393, column: 33, scope: !16375)
!16393 = !DILocalVariable(name: "slot", scope: !16375, file: !3, line: 394, type: !5093)
!16394 = !DILocation(line: 394, column: 16, scope: !16375)
!16395 = !DILocation(line: 394, column: 23, scope: !16375)
!16396 = !DILocation(line: 394, column: 28, scope: !16375)
!16397 = !DILocation(line: 394, column: 32, scope: !16375)
!16398 = !DILocation(line: 394, column: 47, scope: !16375)
!16399 = !DILocation(line: 394, column: 51, scope: !16375)
!16400 = !DILocation(line: 394, column: 45, scope: !16375)
!16401 = !DILocation(line: 395, column: 9, scope: !16375)
!16402 = !DILocation(line: 395, column: 16, scope: !16375)
!16403 = !DILocation(line: 395, column: 22, scope: !16375)
!16404 = !DILocation(line: 395, column: 28, scope: !16375)
!16405 = !DILocation(line: 395, column: 32, scope: !16375)
!16406 = !DILocation(line: 395, column: 2, scope: !16375)
!16407 = distinct !DISubprogram(name: "srgb_to_linearrgb_uchar4", scope: !4360, file: !4360, line: 152, type: !9892, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!16408 = !DILocalVariable(name: "linear", arg: 1, scope: !16407, file: !4360, line: 152, type: !216)
!16409 = !DILocation(line: 152, column: 45, scope: !16407)
!16410 = !DILocalVariable(name: "srgb", arg: 2, scope: !16407, file: !4360, line: 152, type: !9894)
!16411 = !DILocation(line: 152, column: 76, scope: !16407)
!16412 = !DILocation(line: 154, column: 40, scope: !16407)
!16413 = !DILocation(line: 154, column: 14, scope: !16407)
!16414 = !DILocation(line: 154, column: 2, scope: !16407)
!16415 = !DILocation(line: 154, column: 12, scope: !16407)
!16416 = !DILocation(line: 155, column: 40, scope: !16407)
!16417 = !DILocation(line: 155, column: 14, scope: !16407)
!16418 = !DILocation(line: 155, column: 2, scope: !16407)
!16419 = !DILocation(line: 155, column: 12, scope: !16407)
!16420 = !DILocation(line: 156, column: 40, scope: !16407)
!16421 = !DILocation(line: 156, column: 14, scope: !16407)
!16422 = !DILocation(line: 156, column: 2, scope: !16407)
!16423 = !DILocation(line: 156, column: 12, scope: !16407)
!16424 = !DILocation(line: 157, column: 14, scope: !16407)
!16425 = !DILocation(line: 157, column: 22, scope: !16407)
!16426 = !DILocation(line: 157, column: 2, scope: !16407)
!16427 = !DILocation(line: 157, column: 12, scope: !16407)
!16428 = !DILocation(line: 158, column: 1, scope: !16407)
!16429 = distinct !DISubprogram(name: "straight_to_premul_v4_v4", scope: !4360, file: !4360, line: 296, type: !4361, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!16430 = !DILocalVariable(name: "premul", arg: 1, scope: !16429, file: !4360, line: 296, type: !216)
!16431 = !DILocation(line: 296, column: 45, scope: !16429)
!16432 = !DILocalVariable(name: "straight", arg: 2, scope: !16429, file: !4360, line: 296, type: !1944)
!16433 = !DILocation(line: 296, column: 68, scope: !16429)
!16434 = !DILocalVariable(name: "alpha", scope: !16429, file: !4360, line: 298, type: !1778)
!16435 = !DILocation(line: 298, column: 14, scope: !16429)
!16436 = !DILocation(line: 298, column: 22, scope: !16429)
!16437 = !DILocation(line: 299, column: 14, scope: !16429)
!16438 = !DILocation(line: 299, column: 28, scope: !16429)
!16439 = !DILocation(line: 299, column: 26, scope: !16429)
!16440 = !DILocation(line: 299, column: 2, scope: !16429)
!16441 = !DILocation(line: 299, column: 12, scope: !16429)
!16442 = !DILocation(line: 300, column: 14, scope: !16429)
!16443 = !DILocation(line: 300, column: 28, scope: !16429)
!16444 = !DILocation(line: 300, column: 26, scope: !16429)
!16445 = !DILocation(line: 300, column: 2, scope: !16429)
!16446 = !DILocation(line: 300, column: 12, scope: !16429)
!16447 = !DILocation(line: 301, column: 14, scope: !16429)
!16448 = !DILocation(line: 301, column: 28, scope: !16429)
!16449 = !DILocation(line: 301, column: 26, scope: !16429)
!16450 = !DILocation(line: 301, column: 2, scope: !16429)
!16451 = !DILocation(line: 301, column: 12, scope: !16429)
!16452 = !DILocation(line: 302, column: 14, scope: !16429)
!16453 = !DILocation(line: 302, column: 2, scope: !16429)
!16454 = !DILocation(line: 302, column: 12, scope: !16429)
!16455 = !DILocation(line: 303, column: 1, scope: !16429)
!16456 = distinct !DISubprogram(name: "premul_to_straight_v4", scope: !4360, file: !4360, line: 291, type: !16219, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!16457 = !DILocalVariable(name: "color", arg: 1, scope: !16456, file: !4360, line: 291, type: !216)
!16458 = !DILocation(line: 291, column: 42, scope: !16456)
!16459 = !DILocation(line: 293, column: 27, scope: !16456)
!16460 = !DILocation(line: 293, column: 34, scope: !16456)
!16461 = !DILocation(line: 293, column: 2, scope: !16456)
!16462 = !DILocation(line: 294, column: 1, scope: !16456)
!16463 = distinct !DISubprogram(name: "linearrgb_to_srgb_uchar3", scope: !4360, file: !4360, line: 65, type: !16464, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!16464 = !DISubroutineType(types: !16465)
!16465 = !{null, !1024, !1944}
!16466 = !DILocalVariable(name: "srgb", arg: 1, scope: !16463, file: !4360, line: 65, type: !1024)
!16467 = !DILocation(line: 65, column: 53, scope: !16463)
!16468 = !DILocalVariable(name: "linear", arg: 2, scope: !16463, file: !4360, line: 65, type: !1944)
!16469 = !DILocation(line: 65, column: 74, scope: !16463)
!16470 = !DILocalVariable(name: "srgb_f", scope: !16463, file: !4360, line: 67, type: !183)
!16471 = !DILocation(line: 67, column: 8, scope: !16463)
!16472 = !DILocation(line: 69, column: 26, scope: !16463)
!16473 = !DILocation(line: 69, column: 34, scope: !16463)
!16474 = !DILocation(line: 69, column: 2, scope: !16463)
!16475 = !DILocation(line: 70, column: 2, scope: !16476)
!16476 = distinct !DILexicalBlock(scope: !16463, file: !4360, line: 70, column: 2)
!16477 = !DILocation(line: 71, column: 1, scope: !16463)
!16478 = distinct !DISubprogram(name: "project_paint_PickColor", scope: !3, file: !3, line: 547, type: !16479, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!16479 = !DISubroutineType(types: !16480)
!16480 = !{!233, !9396, !1944, !216, !1024, !2035}
!16481 = !DILocalVariable(name: "ps", arg: 1, scope: !16478, file: !3, line: 547, type: !9396)
!16482 = !DILocation(line: 547, column: 59, scope: !16478)
!16483 = !DILocalVariable(name: "pt", arg: 2, scope: !16478, file: !3, line: 547, type: !1944)
!16484 = !DILocation(line: 547, column: 75, scope: !16478)
!16485 = !DILocalVariable(name: "rgba_fp", arg: 3, scope: !16478, file: !3, line: 548, type: !216)
!16486 = !DILocation(line: 548, column: 44, scope: !16478)
!16487 = !DILocalVariable(name: "rgba", arg: 4, scope: !16478, file: !3, line: 548, type: !1024)
!16488 = !DILocation(line: 548, column: 68, scope: !16478)
!16489 = !DILocalVariable(name: "interp", arg: 5, scope: !16478, file: !3, line: 548, type: !2035)
!16490 = !DILocation(line: 548, column: 85, scope: !16478)
!16491 = !DILocalVariable(name: "w", scope: !16478, file: !3, line: 550, type: !183)
!16492 = !DILocation(line: 550, column: 8, scope: !16478)
!16493 = !DILocalVariable(name: "uv", scope: !16478, file: !3, line: 550, type: !860)
!16494 = !DILocation(line: 550, column: 14, scope: !16478)
!16495 = !DILocalVariable(name: "side", scope: !16478, file: !3, line: 551, type: !22)
!16496 = !DILocation(line: 551, column: 6, scope: !16478)
!16497 = !DILocalVariable(name: "face_index", scope: !16478, file: !3, line: 552, type: !22)
!16498 = !DILocation(line: 552, column: 6, scope: !16478)
!16499 = !DILocalVariable(name: "tf", scope: !16478, file: !3, line: 553, type: !3856)
!16500 = !DILocation(line: 553, column: 10, scope: !16478)
!16501 = !DILocalVariable(name: "ima", scope: !16478, file: !3, line: 554, type: !3861)
!16502 = !DILocation(line: 554, column: 9, scope: !16478)
!16503 = !DILocalVariable(name: "ibuf", scope: !16478, file: !3, line: 555, type: !3893)
!16504 = !DILocation(line: 555, column: 9, scope: !16478)
!16505 = !DILocalVariable(name: "xi", scope: !16478, file: !3, line: 556, type: !22)
!16506 = !DILocation(line: 556, column: 6, scope: !16478)
!16507 = !DILocalVariable(name: "yi", scope: !16478, file: !3, line: 556, type: !22)
!16508 = !DILocation(line: 556, column: 10, scope: !16478)
!16509 = !DILocation(line: 559, column: 38, scope: !16478)
!16510 = !DILocation(line: 559, column: 42, scope: !16478)
!16511 = !DILocation(line: 559, column: 46, scope: !16478)
!16512 = !DILocation(line: 559, column: 15, scope: !16478)
!16513 = !DILocation(line: 559, column: 13, scope: !16478)
!16514 = !DILocation(line: 561, column: 6, scope: !16515)
!16515 = distinct !DILexicalBlock(scope: !16478, file: !3, line: 561, column: 6)
!16516 = !DILocation(line: 561, column: 17, scope: !16515)
!16517 = !DILocation(line: 561, column: 6, scope: !16478)
!16518 = !DILocation(line: 562, column: 3, scope: !16515)
!16519 = !DILocation(line: 564, column: 9, scope: !16478)
!16520 = !DILocation(line: 564, column: 13, scope: !16478)
!16521 = !DILocation(line: 564, column: 25, scope: !16478)
!16522 = !DILocation(line: 564, column: 23, scope: !16478)
!16523 = !DILocation(line: 564, column: 7, scope: !16478)
!16524 = !DILocation(line: 564, column: 5, scope: !16478)
!16525 = !DILocation(line: 566, column: 6, scope: !16526)
!16526 = distinct !DILexicalBlock(scope: !16478, file: !3, line: 566, column: 6)
!16527 = !DILocation(line: 566, column: 11, scope: !16526)
!16528 = !DILocation(line: 566, column: 6, scope: !16478)
!16529 = !DILocation(line: 567, column: 20, scope: !16530)
!16530 = distinct !DILexicalBlock(scope: !16526, file: !3, line: 566, column: 17)
!16531 = !DILocation(line: 567, column: 24, scope: !16530)
!16532 = !DILocation(line: 567, column: 28, scope: !16530)
!16533 = !DILocation(line: 567, column: 35, scope: !16530)
!16534 = !DILocation(line: 567, column: 39, scope: !16530)
!16535 = !DILocation(line: 567, column: 46, scope: !16530)
!16536 = !DILocation(line: 567, column: 50, scope: !16530)
!16537 = !DILocation(line: 567, column: 57, scope: !16530)
!16538 = !DILocation(line: 567, column: 3, scope: !16530)
!16539 = !DILocation(line: 568, column: 2, scope: !16530)
!16540 = !DILocation(line: 570, column: 20, scope: !16541)
!16541 = distinct !DILexicalBlock(scope: !16526, file: !3, line: 569, column: 7)
!16542 = !DILocation(line: 570, column: 24, scope: !16541)
!16543 = !DILocation(line: 570, column: 28, scope: !16541)
!16544 = !DILocation(line: 570, column: 35, scope: !16541)
!16545 = !DILocation(line: 570, column: 39, scope: !16541)
!16546 = !DILocation(line: 570, column: 46, scope: !16541)
!16547 = !DILocation(line: 570, column: 50, scope: !16541)
!16548 = !DILocation(line: 570, column: 57, scope: !16541)
!16549 = !DILocation(line: 570, column: 3, scope: !16541)
!16550 = !DILocation(line: 573, column: 39, scope: !16478)
!16551 = !DILocation(line: 573, column: 43, scope: !16478)
!16552 = !DILocation(line: 573, column: 8, scope: !16478)
!16553 = !DILocation(line: 573, column: 6, scope: !16478)
!16554 = !DILocation(line: 574, column: 34, scope: !16478)
!16555 = !DILocation(line: 574, column: 9, scope: !16478)
!16556 = !DILocation(line: 574, column: 7, scope: !16478)
!16557 = !DILocation(line: 575, column: 7, scope: !16558)
!16558 = distinct !DILexicalBlock(scope: !16478, file: !3, line: 575, column: 6)
!16559 = !DILocation(line: 575, column: 6, scope: !16478)
!16560 = !DILocation(line: 575, column: 13, scope: !16558)
!16561 = !DILocation(line: 577, column: 6, scope: !16562)
!16562 = distinct !DILexicalBlock(scope: !16478, file: !3, line: 577, column: 6)
!16563 = !DILocation(line: 577, column: 6, scope: !16478)
!16564 = !DILocalVariable(name: "x", scope: !16565, file: !3, line: 578, type: !184)
!16565 = distinct !DILexicalBlock(scope: !16562, file: !3, line: 577, column: 14)
!16566 = !DILocation(line: 578, column: 9, scope: !16565)
!16567 = !DILocalVariable(name: "y", scope: !16565, file: !3, line: 578, type: !184)
!16568 = !DILocation(line: 578, column: 12, scope: !16565)
!16569 = !DILocation(line: 579, column: 24, scope: !16565)
!16570 = !DILocation(line: 579, column: 28, scope: !16565)
!16571 = !DILocation(line: 579, column: 34, scope: !16565)
!16572 = !DILocation(line: 579, column: 37, scope: !16565)
!16573 = !DILocation(line: 579, column: 43, scope: !16565)
!16574 = !DILocation(line: 579, column: 3, scope: !16565)
!16575 = !DILocation(line: 581, column: 7, scope: !16576)
!16576 = distinct !DILexicalBlock(scope: !16565, file: !3, line: 581, column: 7)
!16577 = !DILocation(line: 581, column: 13, scope: !16576)
!16578 = !DILocation(line: 581, column: 7, scope: !16565)
!16579 = !DILocation(line: 582, column: 8, scope: !16580)
!16580 = distinct !DILexicalBlock(scope: !16581, file: !3, line: 582, column: 8)
!16581 = distinct !DILexicalBlock(scope: !16576, file: !3, line: 581, column: 25)
!16582 = !DILocation(line: 582, column: 8, scope: !16581)
!16583 = !DILocation(line: 583, column: 39, scope: !16584)
!16584 = distinct !DILexicalBlock(scope: !16580, file: !3, line: 582, column: 17)
!16585 = !DILocation(line: 583, column: 51, scope: !16584)
!16586 = !DILocation(line: 583, column: 60, scope: !16584)
!16587 = !DILocation(line: 583, column: 63, scope: !16584)
!16588 = !DILocation(line: 583, column: 5, scope: !16584)
!16589 = !DILocation(line: 584, column: 4, scope: !16584)
!16590 = !DILocalVariable(name: "rgba_tmp_f", scope: !16591, file: !3, line: 586, type: !496)
!16591 = distinct !DILexicalBlock(scope: !16580, file: !3, line: 585, column: 9)
!16592 = !DILocation(line: 586, column: 11, scope: !16591)
!16593 = !DILocation(line: 587, column: 39, scope: !16591)
!16594 = !DILocation(line: 587, column: 51, scope: !16591)
!16595 = !DILocation(line: 587, column: 63, scope: !16591)
!16596 = !DILocation(line: 587, column: 66, scope: !16591)
!16597 = !DILocation(line: 587, column: 5, scope: !16591)
!16598 = !DILocation(line: 588, column: 36, scope: !16591)
!16599 = !DILocation(line: 588, column: 42, scope: !16591)
!16600 = !DILocation(line: 588, column: 5, scope: !16591)
!16601 = !DILocation(line: 590, column: 3, scope: !16581)
!16602 = !DILocation(line: 592, column: 8, scope: !16603)
!16603 = distinct !DILexicalBlock(scope: !16604, file: !3, line: 592, column: 8)
!16604 = distinct !DILexicalBlock(scope: !16576, file: !3, line: 591, column: 8)
!16605 = !DILocation(line: 592, column: 8, scope: !16604)
!16606 = !DILocation(line: 593, column: 39, scope: !16607)
!16607 = distinct !DILexicalBlock(scope: !16603, file: !3, line: 592, column: 14)
!16608 = !DILocation(line: 593, column: 45, scope: !16607)
!16609 = !DILocation(line: 593, column: 57, scope: !16607)
!16610 = !DILocation(line: 593, column: 60, scope: !16607)
!16611 = !DILocation(line: 593, column: 5, scope: !16607)
!16612 = !DILocation(line: 594, column: 4, scope: !16607)
!16613 = !DILocalVariable(name: "rgba_tmp", scope: !16614, file: !3, line: 596, type: !2703)
!16614 = distinct !DILexicalBlock(scope: !16603, file: !3, line: 595, column: 9)
!16615 = !DILocation(line: 596, column: 19, scope: !16614)
!16616 = !DILocation(line: 597, column: 39, scope: !16614)
!16617 = !DILocation(line: 597, column: 45, scope: !16614)
!16618 = !DILocation(line: 597, column: 61, scope: !16614)
!16619 = !DILocation(line: 597, column: 64, scope: !16614)
!16620 = !DILocation(line: 597, column: 5, scope: !16614)
!16621 = !DILocation(line: 598, column: 36, scope: !16614)
!16622 = !DILocation(line: 598, column: 45, scope: !16614)
!16623 = !DILocation(line: 598, column: 5, scope: !16614)
!16624 = !DILocation(line: 601, column: 2, scope: !16565)
!16625 = !DILocation(line: 608, column: 20, scope: !16626)
!16626 = distinct !DILexicalBlock(scope: !16562, file: !3, line: 602, column: 7)
!16627 = !DILocation(line: 608, column: 28, scope: !16626)
!16628 = !DILocation(line: 608, column: 34, scope: !16626)
!16629 = !DILocation(line: 608, column: 26, scope: !16626)
!16630 = !DILocation(line: 608, column: 14, scope: !16626)
!16631 = !DILocation(line: 608, column: 38, scope: !16626)
!16632 = !DILocation(line: 608, column: 44, scope: !16626)
!16633 = !DILocation(line: 608, column: 8, scope: !16626)
!16634 = !DILocation(line: 608, column: 6, scope: !16626)
!16635 = !DILocation(line: 609, column: 20, scope: !16626)
!16636 = !DILocation(line: 609, column: 28, scope: !16626)
!16637 = !DILocation(line: 609, column: 34, scope: !16626)
!16638 = !DILocation(line: 609, column: 26, scope: !16626)
!16639 = !DILocation(line: 609, column: 14, scope: !16626)
!16640 = !DILocation(line: 609, column: 38, scope: !16626)
!16641 = !DILocation(line: 609, column: 44, scope: !16626)
!16642 = !DILocation(line: 609, column: 8, scope: !16626)
!16643 = !DILocation(line: 609, column: 6, scope: !16626)
!16644 = !DILocation(line: 611, column: 7, scope: !16645)
!16645 = distinct !DILexicalBlock(scope: !16626, file: !3, line: 611, column: 7)
!16646 = !DILocation(line: 611, column: 7, scope: !16626)
!16647 = !DILocation(line: 612, column: 8, scope: !16648)
!16648 = distinct !DILexicalBlock(scope: !16649, file: !3, line: 612, column: 8)
!16649 = distinct !DILexicalBlock(scope: !16645, file: !3, line: 611, column: 13)
!16650 = !DILocation(line: 612, column: 14, scope: !16648)
!16651 = !DILocation(line: 612, column: 8, scope: !16649)
!16652 = !DILocalVariable(name: "rgba_tmp_fp", scope: !16653, file: !3, line: 613, type: !1944)
!16653 = distinct !DILexicalBlock(scope: !16648, file: !3, line: 612, column: 26)
!16654 = !DILocation(line: 613, column: 18, scope: !16653)
!16655 = !DILocation(line: 613, column: 32, scope: !16653)
!16656 = !DILocation(line: 613, column: 38, scope: !16653)
!16657 = !DILocation(line: 613, column: 52, scope: !16653)
!16658 = !DILocation(line: 613, column: 57, scope: !16653)
!16659 = !DILocation(line: 613, column: 62, scope: !16653)
!16660 = !DILocation(line: 613, column: 68, scope: !16653)
!16661 = !DILocation(line: 613, column: 60, scope: !16653)
!16662 = !DILocation(line: 613, column: 70, scope: !16653)
!16663 = !DILocation(line: 613, column: 55, scope: !16653)
!16664 = !DILocation(line: 613, column: 49, scope: !16653)
!16665 = !DILocation(line: 614, column: 36, scope: !16653)
!16666 = !DILocation(line: 614, column: 42, scope: !16653)
!16667 = !DILocation(line: 614, column: 5, scope: !16653)
!16668 = !DILocation(line: 615, column: 4, scope: !16653)
!16669 = !DILocation(line: 617, column: 58, scope: !16670)
!16670 = distinct !DILexicalBlock(scope: !16648, file: !3, line: 616, column: 9)
!16671 = !DILocation(line: 617, column: 64, scope: !16670)
!16672 = !DILocation(line: 617, column: 50, scope: !16670)
!16673 = !DILocation(line: 617, column: 74, scope: !16670)
!16674 = !DILocation(line: 617, column: 79, scope: !16670)
!16675 = !DILocation(line: 617, column: 84, scope: !16670)
!16676 = !DILocation(line: 617, column: 90, scope: !16670)
!16677 = !DILocation(line: 617, column: 82, scope: !16670)
!16678 = !DILocation(line: 617, column: 77, scope: !16670)
!16679 = !DILocation(line: 617, column: 93, scope: !16670)
!16680 = !DILocation(line: 617, column: 70, scope: !16670)
!16681 = !DILocation(line: 617, column: 31, scope: !16670)
!16682 = !DILocation(line: 617, column: 23, scope: !16670)
!16683 = !DILocation(line: 617, column: 5, scope: !16670)
!16684 = !DILocation(line: 617, column: 29, scope: !16670)
!16685 = !DILocation(line: 619, column: 3, scope: !16649)
!16686 = !DILocation(line: 621, column: 7, scope: !16687)
!16687 = distinct !DILexicalBlock(scope: !16626, file: !3, line: 621, column: 7)
!16688 = !DILocation(line: 621, column: 7, scope: !16626)
!16689 = !DILocation(line: 622, column: 8, scope: !16690)
!16690 = distinct !DILexicalBlock(scope: !16691, file: !3, line: 622, column: 8)
!16691 = distinct !DILexicalBlock(scope: !16687, file: !3, line: 621, column: 16)
!16692 = !DILocation(line: 622, column: 14, scope: !16690)
!16693 = !DILocation(line: 622, column: 8, scope: !16691)
!16694 = !DILocation(line: 623, column: 16, scope: !16695)
!16695 = distinct !DILexicalBlock(scope: !16690, file: !3, line: 622, column: 26)
!16696 = !DILocation(line: 623, column: 26, scope: !16695)
!16697 = !DILocation(line: 623, column: 32, scope: !16695)
!16698 = !DILocation(line: 623, column: 47, scope: !16695)
!16699 = !DILocation(line: 623, column: 52, scope: !16695)
!16700 = !DILocation(line: 623, column: 57, scope: !16695)
!16701 = !DILocation(line: 623, column: 63, scope: !16695)
!16702 = !DILocation(line: 623, column: 55, scope: !16695)
!16703 = !DILocation(line: 623, column: 50, scope: !16695)
!16704 = !DILocation(line: 623, column: 66, scope: !16695)
!16705 = !DILocation(line: 623, column: 43, scope: !16695)
!16706 = !DILocation(line: 623, column: 5, scope: !16695)
!16707 = !DILocation(line: 624, column: 4, scope: !16695)
!16708 = !DILocalVariable(name: "tmp_ch", scope: !16709, file: !3, line: 626, type: !1024)
!16709 = distinct !DILexicalBlock(scope: !16690, file: !3, line: 625, column: 9)
!16710 = !DILocation(line: 626, column: 20, scope: !16709)
!16711 = !DILocation(line: 626, column: 47, scope: !16709)
!16712 = !DILocation(line: 626, column: 53, scope: !16709)
!16713 = !DILocation(line: 626, column: 30, scope: !16709)
!16714 = !DILocation(line: 626, column: 63, scope: !16709)
!16715 = !DILocation(line: 626, column: 68, scope: !16709)
!16716 = !DILocation(line: 626, column: 73, scope: !16709)
!16717 = !DILocation(line: 626, column: 79, scope: !16709)
!16718 = !DILocation(line: 626, column: 71, scope: !16709)
!16719 = !DILocation(line: 626, column: 66, scope: !16709)
!16720 = !DILocation(line: 626, column: 82, scope: !16709)
!16721 = !DILocation(line: 626, column: 59, scope: !16709)
!16722 = !DILocation(line: 627, column: 36, scope: !16709)
!16723 = !DILocation(line: 627, column: 45, scope: !16709)
!16724 = !DILocation(line: 627, column: 5, scope: !16709)
!16725 = !DILocation(line: 629, column: 3, scope: !16691)
!16726 = !DILocation(line: 631, column: 25, scope: !16478)
!16727 = !DILocation(line: 631, column: 30, scope: !16478)
!16728 = !DILocation(line: 631, column: 2, scope: !16478)
!16729 = !DILocation(line: 632, column: 2, scope: !16478)
!16730 = !DILocation(line: 633, column: 1, scope: !16478)
!16731 = distinct !DISubprogram(name: "premul_to_straight_v4_v4", scope: !4360, file: !4360, line: 274, type: !4361, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!16732 = !DILocalVariable(name: "straight", arg: 1, scope: !16731, file: !4360, line: 274, type: !216)
!16733 = !DILocation(line: 274, column: 45, scope: !16731)
!16734 = !DILocalVariable(name: "premul", arg: 2, scope: !16731, file: !4360, line: 274, type: !1944)
!16735 = !DILocation(line: 274, column: 70, scope: !16731)
!16736 = !DILocation(line: 276, column: 6, scope: !16737)
!16737 = distinct !DILexicalBlock(scope: !16731, file: !4360, line: 276, column: 6)
!16738 = !DILocation(line: 276, column: 16, scope: !16737)
!16739 = !DILocation(line: 276, column: 24, scope: !16737)
!16740 = !DILocation(line: 276, column: 27, scope: !16737)
!16741 = !DILocation(line: 276, column: 37, scope: !16737)
!16742 = !DILocation(line: 276, column: 6, scope: !16731)
!16743 = !DILocation(line: 277, column: 17, scope: !16744)
!16744 = distinct !DILexicalBlock(scope: !16737, file: !4360, line: 276, column: 46)
!16745 = !DILocation(line: 277, column: 3, scope: !16744)
!16746 = !DILocation(line: 277, column: 15, scope: !16744)
!16747 = !DILocation(line: 278, column: 17, scope: !16744)
!16748 = !DILocation(line: 278, column: 3, scope: !16744)
!16749 = !DILocation(line: 278, column: 15, scope: !16744)
!16750 = !DILocation(line: 279, column: 17, scope: !16744)
!16751 = !DILocation(line: 279, column: 3, scope: !16744)
!16752 = !DILocation(line: 279, column: 15, scope: !16744)
!16753 = !DILocation(line: 280, column: 17, scope: !16744)
!16754 = !DILocation(line: 280, column: 3, scope: !16744)
!16755 = !DILocation(line: 280, column: 15, scope: !16744)
!16756 = !DILocation(line: 281, column: 2, scope: !16744)
!16757 = !DILocalVariable(name: "alpha_inv", scope: !16758, file: !4360, line: 283, type: !1778)
!16758 = distinct !DILexicalBlock(scope: !16737, file: !4360, line: 282, column: 7)
!16759 = !DILocation(line: 283, column: 15, scope: !16758)
!16760 = !DILocation(line: 283, column: 34, scope: !16758)
!16761 = !DILocation(line: 283, column: 32, scope: !16758)
!16762 = !DILocation(line: 284, column: 17, scope: !16758)
!16763 = !DILocation(line: 284, column: 29, scope: !16758)
!16764 = !DILocation(line: 284, column: 27, scope: !16758)
!16765 = !DILocation(line: 284, column: 3, scope: !16758)
!16766 = !DILocation(line: 284, column: 15, scope: !16758)
!16767 = !DILocation(line: 285, column: 17, scope: !16758)
!16768 = !DILocation(line: 285, column: 29, scope: !16758)
!16769 = !DILocation(line: 285, column: 27, scope: !16758)
!16770 = !DILocation(line: 285, column: 3, scope: !16758)
!16771 = !DILocation(line: 285, column: 15, scope: !16758)
!16772 = !DILocation(line: 286, column: 17, scope: !16758)
!16773 = !DILocation(line: 286, column: 29, scope: !16758)
!16774 = !DILocation(line: 286, column: 27, scope: !16758)
!16775 = !DILocation(line: 286, column: 3, scope: !16758)
!16776 = !DILocation(line: 286, column: 15, scope: !16758)
!16777 = !DILocation(line: 287, column: 17, scope: !16758)
!16778 = !DILocation(line: 287, column: 3, scope: !16758)
!16779 = !DILocation(line: 287, column: 15, scope: !16758)
!16780 = !DILocation(line: 289, column: 1, scope: !16731)
!16781 = distinct !DISubprogram(name: "project_paint_PickFace", scope: !3, file: !3, line: 471, type: !16782, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!16782 = !DISubroutineType(types: !16783)
!16783 = !{!22, !9396, !1944, !216, !224}
!16784 = !DILocalVariable(name: "ps", arg: 1, scope: !16781, file: !3, line: 471, type: !9396)
!16785 = !DILocation(line: 471, column: 57, scope: !16781)
!16786 = !DILocalVariable(name: "pt", arg: 2, scope: !16781, file: !3, line: 471, type: !1944)
!16787 = !DILocation(line: 471, column: 73, scope: !16781)
!16788 = !DILocalVariable(name: "w", arg: 3, scope: !16781, file: !3, line: 471, type: !216)
!16789 = !DILocation(line: 471, column: 86, scope: !16781)
!16790 = !DILocalVariable(name: "side", arg: 4, scope: !16781, file: !3, line: 471, type: !224)
!16791 = !DILocation(line: 471, column: 97, scope: !16781)
!16792 = !DILocalVariable(name: "node", scope: !16781, file: !3, line: 473, type: !3874)
!16793 = !DILocation(line: 473, column: 12, scope: !16781)
!16794 = !DILocalVariable(name: "w_tmp", scope: !16781, file: !3, line: 474, type: !183)
!16795 = !DILocation(line: 474, column: 8, scope: !16781)
!16796 = !DILocalVariable(name: "v1", scope: !16781, file: !3, line: 475, type: !1944)
!16797 = !DILocation(line: 475, column: 15, scope: !16781)
!16798 = !DILocalVariable(name: "v2", scope: !16781, file: !3, line: 475, type: !1944)
!16799 = !DILocation(line: 475, column: 20, scope: !16781)
!16800 = !DILocalVariable(name: "v3", scope: !16781, file: !3, line: 475, type: !1944)
!16801 = !DILocation(line: 475, column: 25, scope: !16781)
!16802 = !DILocalVariable(name: "v4", scope: !16781, file: !3, line: 475, type: !1944)
!16803 = !DILocation(line: 475, column: 30, scope: !16781)
!16804 = !DILocalVariable(name: "bucket_index", scope: !16781, file: !3, line: 476, type: !22)
!16805 = !DILocation(line: 476, column: 6, scope: !16781)
!16806 = !DILocalVariable(name: "face_index", scope: !16781, file: !3, line: 477, type: !22)
!16807 = !DILocation(line: 477, column: 6, scope: !16781)
!16808 = !DILocalVariable(name: "best_side", scope: !16781, file: !3, line: 478, type: !22)
!16809 = !DILocation(line: 478, column: 6, scope: !16781)
!16810 = !DILocalVariable(name: "best_face_index", scope: !16781, file: !3, line: 479, type: !22)
!16811 = !DILocation(line: 479, column: 6, scope: !16781)
!16812 = !DILocalVariable(name: "z_depth_best", scope: !16781, file: !3, line: 480, type: !184)
!16813 = !DILocation(line: 480, column: 8, scope: !16781)
!16814 = !DILocalVariable(name: "z_depth", scope: !16781, file: !3, line: 480, type: !184)
!16815 = !DILocation(line: 480, column: 32, scope: !16781)
!16816 = !DILocalVariable(name: "mf", scope: !16781, file: !3, line: 481, type: !3852)
!16817 = !DILocation(line: 481, column: 9, scope: !16781)
!16818 = !DILocation(line: 483, column: 44, scope: !16781)
!16819 = !DILocation(line: 483, column: 48, scope: !16781)
!16820 = !DILocation(line: 483, column: 17, scope: !16781)
!16821 = !DILocation(line: 483, column: 15, scope: !16781)
!16822 = !DILocation(line: 484, column: 6, scope: !16823)
!16823 = distinct !DILexicalBlock(scope: !16781, file: !3, line: 484, column: 6)
!16824 = !DILocation(line: 484, column: 19, scope: !16823)
!16825 = !DILocation(line: 484, column: 6, scope: !16781)
!16826 = !DILocation(line: 485, column: 3, scope: !16823)
!16827 = !DILocation(line: 492, column: 14, scope: !16828)
!16828 = distinct !DILexicalBlock(scope: !16781, file: !3, line: 492, column: 2)
!16829 = !DILocation(line: 492, column: 18, scope: !16828)
!16830 = !DILocation(line: 492, column: 30, scope: !16828)
!16831 = !DILocation(line: 492, column: 12, scope: !16828)
!16832 = !DILocation(line: 492, column: 7, scope: !16828)
!16833 = !DILocation(line: 492, column: 45, scope: !16834)
!16834 = distinct !DILexicalBlock(scope: !16828, file: !3, line: 492, column: 2)
!16835 = !DILocation(line: 492, column: 2, scope: !16828)
!16836 = !DILocation(line: 493, column: 16, scope: !16837)
!16837 = distinct !DILexicalBlock(scope: !16834, file: !3, line: 492, column: 70)
!16838 = !DILocation(line: 493, column: 14, scope: !16837)
!16839 = !DILocation(line: 494, column: 8, scope: !16837)
!16840 = !DILocation(line: 494, column: 12, scope: !16837)
!16841 = !DILocation(line: 494, column: 23, scope: !16837)
!16842 = !DILocation(line: 494, column: 21, scope: !16837)
!16843 = !DILocation(line: 494, column: 6, scope: !16837)
!16844 = !DILocation(line: 496, column: 8, scope: !16837)
!16845 = !DILocation(line: 496, column: 12, scope: !16837)
!16846 = !DILocation(line: 496, column: 25, scope: !16837)
!16847 = !DILocation(line: 496, column: 29, scope: !16837)
!16848 = !DILocation(line: 496, column: 6, scope: !16837)
!16849 = !DILocation(line: 497, column: 8, scope: !16837)
!16850 = !DILocation(line: 497, column: 12, scope: !16837)
!16851 = !DILocation(line: 497, column: 25, scope: !16837)
!16852 = !DILocation(line: 497, column: 29, scope: !16837)
!16853 = !DILocation(line: 497, column: 6, scope: !16837)
!16854 = !DILocation(line: 498, column: 8, scope: !16837)
!16855 = !DILocation(line: 498, column: 12, scope: !16837)
!16856 = !DILocation(line: 498, column: 25, scope: !16837)
!16857 = !DILocation(line: 498, column: 29, scope: !16837)
!16858 = !DILocation(line: 498, column: 6, scope: !16837)
!16859 = !DILocation(line: 500, column: 26, scope: !16860)
!16860 = distinct !DILexicalBlock(scope: !16837, file: !3, line: 500, column: 7)
!16861 = !DILocation(line: 500, column: 30, scope: !16860)
!16862 = !DILocation(line: 500, column: 34, scope: !16860)
!16863 = !DILocation(line: 500, column: 38, scope: !16860)
!16864 = !DILocation(line: 500, column: 7, scope: !16860)
!16865 = !DILocation(line: 500, column: 7, scope: !16837)
!16866 = !DILocation(line: 501, column: 8, scope: !16867)
!16867 = distinct !DILexicalBlock(scope: !16868, file: !3, line: 501, column: 8)
!16868 = distinct !DILexicalBlock(scope: !16860, file: !3, line: 500, column: 43)
!16869 = !DILocation(line: 501, column: 12, scope: !16867)
!16870 = !DILocation(line: 501, column: 8, scope: !16868)
!16871 = !DILocation(line: 501, column: 47, scope: !16867)
!16872 = !DILocation(line: 501, column: 51, scope: !16867)
!16873 = !DILocation(line: 501, column: 55, scope: !16867)
!16874 = !DILocation(line: 501, column: 59, scope: !16867)
!16875 = !DILocation(line: 501, column: 63, scope: !16867)
!16876 = !DILocation(line: 501, column: 32, scope: !16867)
!16877 = !DILocation(line: 501, column: 30, scope: !16867)
!16878 = !DILocation(line: 501, column: 22, scope: !16867)
!16879 = !DILocation(line: 502, column: 34, scope: !16867)
!16880 = !DILocation(line: 502, column: 38, scope: !16867)
!16881 = !DILocation(line: 502, column: 42, scope: !16867)
!16882 = !DILocation(line: 502, column: 46, scope: !16867)
!16883 = !DILocation(line: 502, column: 50, scope: !16867)
!16884 = !DILocation(line: 502, column: 19, scope: !16867)
!16885 = !DILocation(line: 502, column: 17, scope: !16867)
!16886 = !DILocation(line: 504, column: 8, scope: !16887)
!16887 = distinct !DILexicalBlock(scope: !16868, file: !3, line: 504, column: 8)
!16888 = !DILocation(line: 504, column: 18, scope: !16887)
!16889 = !DILocation(line: 504, column: 16, scope: !16887)
!16890 = !DILocation(line: 504, column: 8, scope: !16868)
!16891 = !DILocation(line: 505, column: 23, scope: !16892)
!16892 = distinct !DILexicalBlock(scope: !16887, file: !3, line: 504, column: 32)
!16893 = !DILocation(line: 505, column: 21, scope: !16892)
!16894 = !DILocation(line: 506, column: 15, scope: !16892)
!16895 = !DILocation(line: 507, column: 20, scope: !16892)
!16896 = !DILocation(line: 507, column: 18, scope: !16892)
!16897 = !DILocation(line: 508, column: 16, scope: !16892)
!16898 = !DILocation(line: 508, column: 19, scope: !16892)
!16899 = !DILocation(line: 508, column: 5, scope: !16892)
!16900 = !DILocation(line: 509, column: 4, scope: !16892)
!16901 = !DILocation(line: 510, column: 3, scope: !16868)
!16902 = !DILocation(line: 511, column: 12, scope: !16903)
!16903 = distinct !DILexicalBlock(scope: !16860, file: !3, line: 511, column: 12)
!16904 = !DILocation(line: 511, column: 16, scope: !16903)
!16905 = !DILocation(line: 511, column: 12, scope: !16860)
!16906 = !DILocation(line: 512, column: 9, scope: !16907)
!16907 = distinct !DILexicalBlock(scope: !16903, file: !3, line: 511, column: 20)
!16908 = !DILocation(line: 512, column: 13, scope: !16907)
!16909 = !DILocation(line: 512, column: 26, scope: !16907)
!16910 = !DILocation(line: 512, column: 30, scope: !16907)
!16911 = !DILocation(line: 512, column: 7, scope: !16907)
!16912 = !DILocation(line: 514, column: 27, scope: !16913)
!16913 = distinct !DILexicalBlock(scope: !16907, file: !3, line: 514, column: 8)
!16914 = !DILocation(line: 514, column: 31, scope: !16913)
!16915 = !DILocation(line: 514, column: 35, scope: !16913)
!16916 = !DILocation(line: 514, column: 39, scope: !16913)
!16917 = !DILocation(line: 514, column: 8, scope: !16913)
!16918 = !DILocation(line: 514, column: 8, scope: !16907)
!16919 = !DILocation(line: 515, column: 9, scope: !16920)
!16920 = distinct !DILexicalBlock(scope: !16921, file: !3, line: 515, column: 9)
!16921 = distinct !DILexicalBlock(scope: !16913, file: !3, line: 514, column: 44)
!16922 = !DILocation(line: 515, column: 13, scope: !16920)
!16923 = !DILocation(line: 515, column: 9, scope: !16921)
!16924 = !DILocation(line: 515, column: 48, scope: !16920)
!16925 = !DILocation(line: 515, column: 52, scope: !16920)
!16926 = !DILocation(line: 515, column: 56, scope: !16920)
!16927 = !DILocation(line: 515, column: 60, scope: !16920)
!16928 = !DILocation(line: 515, column: 64, scope: !16920)
!16929 = !DILocation(line: 515, column: 33, scope: !16920)
!16930 = !DILocation(line: 515, column: 31, scope: !16920)
!16931 = !DILocation(line: 515, column: 23, scope: !16920)
!16932 = !DILocation(line: 516, column: 35, scope: !16920)
!16933 = !DILocation(line: 516, column: 39, scope: !16920)
!16934 = !DILocation(line: 516, column: 43, scope: !16920)
!16935 = !DILocation(line: 516, column: 47, scope: !16920)
!16936 = !DILocation(line: 516, column: 51, scope: !16920)
!16937 = !DILocation(line: 516, column: 20, scope: !16920)
!16938 = !DILocation(line: 516, column: 18, scope: !16920)
!16939 = !DILocation(line: 518, column: 9, scope: !16940)
!16940 = distinct !DILexicalBlock(scope: !16921, file: !3, line: 518, column: 9)
!16941 = !DILocation(line: 518, column: 19, scope: !16940)
!16942 = !DILocation(line: 518, column: 17, scope: !16940)
!16943 = !DILocation(line: 518, column: 9, scope: !16921)
!16944 = !DILocation(line: 519, column: 24, scope: !16945)
!16945 = distinct !DILexicalBlock(scope: !16940, file: !3, line: 518, column: 33)
!16946 = !DILocation(line: 519, column: 22, scope: !16945)
!16947 = !DILocation(line: 520, column: 16, scope: !16945)
!16948 = !DILocation(line: 521, column: 21, scope: !16945)
!16949 = !DILocation(line: 521, column: 19, scope: !16945)
!16950 = !DILocation(line: 522, column: 17, scope: !16945)
!16951 = !DILocation(line: 522, column: 20, scope: !16945)
!16952 = !DILocation(line: 522, column: 6, scope: !16945)
!16953 = !DILocation(line: 523, column: 5, scope: !16945)
!16954 = !DILocation(line: 524, column: 4, scope: !16921)
!16955 = !DILocation(line: 525, column: 3, scope: !16907)
!16956 = !DILocation(line: 526, column: 2, scope: !16837)
!16957 = !DILocation(line: 492, column: 58, scope: !16834)
!16958 = !DILocation(line: 492, column: 64, scope: !16834)
!16959 = !DILocation(line: 492, column: 56, scope: !16834)
!16960 = !DILocation(line: 492, column: 2, scope: !16834)
!16961 = distinct !{!16961, !16835, !16962}
!16962 = !DILocation(line: 526, column: 2, scope: !16828)
!16963 = !DILocation(line: 528, column: 10, scope: !16781)
!16964 = !DILocation(line: 528, column: 3, scope: !16781)
!16965 = !DILocation(line: 528, column: 8, scope: !16781)
!16966 = !DILocation(line: 529, column: 9, scope: !16781)
!16967 = !DILocation(line: 529, column: 2, scope: !16781)
!16968 = !DILocation(line: 530, column: 1, scope: !16781)
!16969 = distinct !DISubprogram(name: "premul_float_to_straight_uchar", scope: !4360, file: !4360, line: 321, type: !16464, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!16970 = !DILocalVariable(name: "result", arg: 1, scope: !16969, file: !4360, line: 321, type: !1024)
!16971 = !DILocation(line: 321, column: 60, scope: !16969)
!16972 = !DILocalVariable(name: "color", arg: 2, scope: !16969, file: !4360, line: 321, type: !1944)
!16973 = !DILocation(line: 321, column: 80, scope: !16969)
!16974 = !DILocation(line: 323, column: 6, scope: !16975)
!16975 = distinct !DILexicalBlock(scope: !16969, file: !4360, line: 323, column: 6)
!16976 = !DILocation(line: 323, column: 15, scope: !16975)
!16977 = !DILocation(line: 323, column: 23, scope: !16975)
!16978 = !DILocation(line: 323, column: 26, scope: !16975)
!16979 = !DILocation(line: 323, column: 35, scope: !16975)
!16980 = !DILocation(line: 323, column: 6, scope: !16969)
!16981 = !DILocation(line: 324, column: 15, scope: !16982)
!16982 = distinct !DILexicalBlock(scope: !16975, file: !4360, line: 323, column: 44)
!16983 = !DILocation(line: 324, column: 3, scope: !16982)
!16984 = !DILocation(line: 324, column: 13, scope: !16982)
!16985 = !DILocation(line: 325, column: 15, scope: !16982)
!16986 = !DILocation(line: 325, column: 3, scope: !16982)
!16987 = !DILocation(line: 325, column: 13, scope: !16982)
!16988 = !DILocation(line: 326, column: 15, scope: !16982)
!16989 = !DILocation(line: 326, column: 3, scope: !16982)
!16990 = !DILocation(line: 326, column: 13, scope: !16982)
!16991 = !DILocation(line: 327, column: 15, scope: !16982)
!16992 = !DILocation(line: 327, column: 3, scope: !16982)
!16993 = !DILocation(line: 327, column: 13, scope: !16982)
!16994 = !DILocation(line: 328, column: 2, scope: !16982)
!16995 = !DILocalVariable(name: "alpha_inv", scope: !16996, file: !4360, line: 330, type: !1778)
!16996 = distinct !DILexicalBlock(scope: !16975, file: !4360, line: 329, column: 7)
!16997 = !DILocation(line: 330, column: 15, scope: !16996)
!16998 = !DILocation(line: 330, column: 34, scope: !16996)
!16999 = !DILocation(line: 330, column: 32, scope: !16996)
!17000 = !DILocation(line: 333, column: 15, scope: !16996)
!17001 = !DILocation(line: 333, column: 3, scope: !16996)
!17002 = !DILocation(line: 333, column: 13, scope: !16996)
!17003 = !DILocation(line: 334, column: 15, scope: !16996)
!17004 = !DILocation(line: 334, column: 3, scope: !16996)
!17005 = !DILocation(line: 334, column: 13, scope: !16996)
!17006 = !DILocation(line: 335, column: 15, scope: !16996)
!17007 = !DILocation(line: 335, column: 3, scope: !16996)
!17008 = !DILocation(line: 335, column: 13, scope: !16996)
!17009 = !DILocation(line: 336, column: 15, scope: !16996)
!17010 = !DILocation(line: 336, column: 3, scope: !16996)
!17011 = !DILocation(line: 336, column: 13, scope: !16996)
!17012 = !DILocation(line: 338, column: 1, scope: !16969)
!17013 = distinct !DISubprogram(name: "project_bucket_offset_safe", scope: !3, file: !3, line: 415, type: !17014, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17014 = !DISubroutineType(types: !17015)
!17015 = !{!22, !9396, !1944}
!17016 = !DILocalVariable(name: "ps", arg: 1, scope: !17013, file: !3, line: 415, type: !9396)
!17017 = !DILocation(line: 415, column: 61, scope: !17013)
!17018 = !DILocalVariable(name: "projCoSS", arg: 2, scope: !17013, file: !3, line: 415, type: !1944)
!17019 = !DILocation(line: 415, column: 77, scope: !17013)
!17020 = !DILocalVariable(name: "bucket_index", scope: !17013, file: !3, line: 417, type: !22)
!17021 = !DILocation(line: 417, column: 6, scope: !17013)
!17022 = !DILocation(line: 417, column: 43, scope: !17013)
!17023 = !DILocation(line: 417, column: 47, scope: !17013)
!17024 = !DILocation(line: 417, column: 21, scope: !17013)
!17025 = !DILocation(line: 419, column: 6, scope: !17026)
!17026 = distinct !DILexicalBlock(scope: !17013, file: !3, line: 419, column: 6)
!17027 = !DILocation(line: 419, column: 19, scope: !17026)
!17028 = !DILocation(line: 419, column: 23, scope: !17026)
!17029 = !DILocation(line: 419, column: 26, scope: !17026)
!17030 = !DILocation(line: 419, column: 42, scope: !17026)
!17031 = !DILocation(line: 419, column: 46, scope: !17026)
!17032 = !DILocation(line: 419, column: 58, scope: !17026)
!17033 = !DILocation(line: 419, column: 62, scope: !17026)
!17034 = !DILocation(line: 419, column: 56, scope: !17026)
!17035 = !DILocation(line: 419, column: 39, scope: !17026)
!17036 = !DILocation(line: 419, column: 6, scope: !17013)
!17037 = !DILocation(line: 420, column: 3, scope: !17038)
!17038 = distinct !DILexicalBlock(scope: !17026, file: !3, line: 419, column: 73)
!17039 = !DILocation(line: 423, column: 10, scope: !17040)
!17040 = distinct !DILexicalBlock(scope: !17026, file: !3, line: 422, column: 7)
!17041 = !DILocation(line: 423, column: 3, scope: !17040)
!17042 = !DILocation(line: 425, column: 1, scope: !17013)
!17043 = distinct !DISubprogram(name: "project_bucket_offset", scope: !3, file: !3, line: 399, type: !17014, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17044 = !DILocalVariable(name: "ps", arg: 1, scope: !17043, file: !3, line: 399, type: !9396)
!17045 = !DILocation(line: 399, column: 56, scope: !17043)
!17046 = !DILocalVariable(name: "projCoSS", arg: 2, scope: !17043, file: !3, line: 399, type: !1944)
!17047 = !DILocation(line: 399, column: 72, scope: !17043)
!17048 = !DILocation(line: 411, column: 19, scope: !17043)
!17049 = !DILocation(line: 411, column: 33, scope: !17043)
!17050 = !DILocation(line: 411, column: 37, scope: !17043)
!17051 = !DILocation(line: 411, column: 31, scope: !17043)
!17052 = !DILocation(line: 411, column: 53, scope: !17043)
!17053 = !DILocation(line: 411, column: 57, scope: !17043)
!17054 = !DILocation(line: 411, column: 51, scope: !17043)
!17055 = !DILocation(line: 411, column: 74, scope: !17043)
!17056 = !DILocation(line: 411, column: 78, scope: !17043)
!17057 = !DILocation(line: 411, column: 72, scope: !17043)
!17058 = !DILocation(line: 411, column: 11, scope: !17043)
!17059 = !DILocation(line: 412, column: 19, scope: !17043)
!17060 = !DILocation(line: 412, column: 33, scope: !17043)
!17061 = !DILocation(line: 412, column: 37, scope: !17043)
!17062 = !DILocation(line: 412, column: 31, scope: !17043)
!17063 = !DILocation(line: 412, column: 53, scope: !17043)
!17064 = !DILocation(line: 412, column: 57, scope: !17043)
!17065 = !DILocation(line: 412, column: 51, scope: !17043)
!17066 = !DILocation(line: 412, column: 74, scope: !17043)
!17067 = !DILocation(line: 412, column: 78, scope: !17043)
!17068 = !DILocation(line: 412, column: 72, scope: !17043)
!17069 = !DILocation(line: 412, column: 11, scope: !17043)
!17070 = !DILocation(line: 412, column: 92, scope: !17043)
!17071 = !DILocation(line: 412, column: 96, scope: !17043)
!17072 = !DILocation(line: 412, column: 90, scope: !17043)
!17073 = !DILocation(line: 411, column: 90, scope: !17043)
!17074 = !DILocation(line: 411, column: 2, scope: !17043)
!17075 = distinct !DISubprogram(name: "project_face_winding_init", scope: !3, file: !3, line: 900, type: !17076, scopeLine: 901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17076 = !DISubroutineType(types: !17077)
!17077 = !{null, !9396, !5126}
!17078 = !DILocalVariable(name: "ps", arg: 1, scope: !17075, file: !3, line: 900, type: !9396)
!17079 = !DILocation(line: 900, column: 61, scope: !17075)
!17080 = !DILocalVariable(name: "face_index", arg: 2, scope: !17075, file: !3, line: 900, type: !5126)
!17081 = !DILocation(line: 900, column: 75, scope: !17075)
!17082 = !DILocalVariable(name: "tf", scope: !17075, file: !3, line: 903, type: !3856)
!17083 = !DILocation(line: 903, column: 10, scope: !17075)
!17084 = !DILocation(line: 903, column: 15, scope: !17075)
!17085 = !DILocation(line: 903, column: 19, scope: !17075)
!17086 = !DILocation(line: 903, column: 29, scope: !17075)
!17087 = !DILocalVariable(name: "winding", scope: !17075, file: !3, line: 904, type: !184)
!17088 = !DILocation(line: 904, column: 8, scope: !17075)
!17089 = !DILocation(line: 904, column: 31, scope: !17075)
!17090 = !DILocation(line: 904, column: 35, scope: !17075)
!17091 = !DILocation(line: 904, column: 42, scope: !17075)
!17092 = !DILocation(line: 904, column: 46, scope: !17075)
!17093 = !DILocation(line: 904, column: 53, scope: !17075)
!17094 = !DILocation(line: 904, column: 57, scope: !17075)
!17095 = !DILocation(line: 904, column: 18, scope: !17075)
!17096 = !DILocation(line: 906, column: 6, scope: !17097)
!17097 = distinct !DILexicalBlock(scope: !17075, file: !3, line: 906, column: 6)
!17098 = !DILocation(line: 906, column: 10, scope: !17097)
!17099 = !DILocation(line: 906, column: 19, scope: !17097)
!17100 = !DILocation(line: 906, column: 31, scope: !17097)
!17101 = !DILocation(line: 906, column: 6, scope: !17075)
!17102 = !DILocation(line: 907, column: 27, scope: !17097)
!17103 = !DILocation(line: 907, column: 31, scope: !17097)
!17104 = !DILocation(line: 907, column: 38, scope: !17097)
!17105 = !DILocation(line: 907, column: 42, scope: !17097)
!17106 = !DILocation(line: 907, column: 49, scope: !17097)
!17107 = !DILocation(line: 907, column: 53, scope: !17097)
!17108 = !DILocation(line: 907, column: 14, scope: !17097)
!17109 = !DILocation(line: 907, column: 11, scope: !17097)
!17110 = !DILocation(line: 907, column: 3, scope: !17097)
!17111 = !DILocation(line: 909, column: 6, scope: !17112)
!17112 = distinct !DILexicalBlock(scope: !17075, file: !3, line: 909, column: 6)
!17113 = !DILocation(line: 909, column: 14, scope: !17112)
!17114 = !DILocation(line: 909, column: 6, scope: !17075)
!17115 = !DILocation(line: 910, column: 3, scope: !17112)
!17116 = !DILocation(line: 910, column: 7, scope: !17112)
!17117 = !DILocation(line: 910, column: 24, scope: !17112)
!17118 = !DILocation(line: 910, column: 36, scope: !17112)
!17119 = !DILocation(line: 912, column: 2, scope: !17075)
!17120 = !DILocation(line: 912, column: 6, scope: !17075)
!17121 = !DILocation(line: 912, column: 23, scope: !17075)
!17122 = !DILocation(line: 912, column: 35, scope: !17075)
!17123 = !DILocation(line: 913, column: 1, scope: !17075)
!17124 = distinct !DISubprogram(name: "check_seam", scope: !3, file: !3, line: 917, type: !17125, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17125 = !DISubroutineType(types: !17126)
!17126 = !{!233, !9396, !5126, !5126, !5126, !224, !224}
!17127 = !DILocalVariable(name: "ps", arg: 1, scope: !17124, file: !3, line: 917, type: !9396)
!17128 = !DILocation(line: 917, column: 46, scope: !17124)
!17129 = !DILocalVariable(name: "orig_face", arg: 2, scope: !17124, file: !3, line: 918, type: !5126)
!17130 = !DILocation(line: 918, column: 34, scope: !17124)
!17131 = !DILocalVariable(name: "orig_i1_fidx", arg: 3, scope: !17124, file: !3, line: 918, type: !5126)
!17132 = !DILocation(line: 918, column: 55, scope: !17124)
!17133 = !DILocalVariable(name: "orig_i2_fidx", arg: 4, scope: !17124, file: !3, line: 918, type: !5126)
!17134 = !DILocation(line: 918, column: 79, scope: !17124)
!17135 = !DILocalVariable(name: "other_face", arg: 5, scope: !17124, file: !3, line: 919, type: !224)
!17136 = !DILocation(line: 919, column: 29, scope: !17124)
!17137 = !DILocalVariable(name: "orig_fidx", arg: 6, scope: !17124, file: !3, line: 919, type: !224)
!17138 = !DILocation(line: 919, column: 46, scope: !17124)
!17139 = !DILocalVariable(name: "node", scope: !17124, file: !3, line: 921, type: !3874)
!17140 = !DILocation(line: 921, column: 12, scope: !17124)
!17141 = !DILocalVariable(name: "face_index", scope: !17124, file: !3, line: 922, type: !22)
!17142 = !DILocation(line: 922, column: 6, scope: !17124)
!17143 = !DILocalVariable(name: "i1", scope: !17124, file: !3, line: 923, type: !205)
!17144 = !DILocation(line: 923, column: 15, scope: !17124)
!17145 = !DILocalVariable(name: "i2", scope: !17124, file: !3, line: 923, type: !205)
!17146 = !DILocation(line: 923, column: 19, scope: !17124)
!17147 = !DILocalVariable(name: "i1_fidx", scope: !17124, file: !3, line: 924, type: !22)
!17148 = !DILocation(line: 924, column: 6, scope: !17124)
!17149 = !DILocalVariable(name: "i2_fidx", scope: !17124, file: !3, line: 924, type: !22)
!17150 = !DILocation(line: 924, column: 20, scope: !17124)
!17151 = !DILocalVariable(name: "mf", scope: !17124, file: !3, line: 925, type: !3852)
!17152 = !DILocation(line: 925, column: 9, scope: !17124)
!17153 = !DILocalVariable(name: "tf", scope: !17124, file: !3, line: 926, type: !3856)
!17154 = !DILocation(line: 926, column: 10, scope: !17124)
!17155 = !DILocalVariable(name: "orig_mf", scope: !17124, file: !3, line: 927, type: !11212)
!17156 = !DILocation(line: 927, column: 15, scope: !17124)
!17157 = !DILocation(line: 927, column: 25, scope: !17124)
!17158 = !DILocation(line: 927, column: 29, scope: !17124)
!17159 = !DILocation(line: 927, column: 40, scope: !17124)
!17160 = !DILocation(line: 927, column: 38, scope: !17124)
!17161 = !DILocalVariable(name: "orig_tf", scope: !17124, file: !3, line: 928, type: !11220)
!17162 = !DILocation(line: 928, column: 16, scope: !17124)
!17163 = !DILocation(line: 928, column: 26, scope: !17124)
!17164 = !DILocation(line: 928, column: 30, scope: !17124)
!17165 = !DILocation(line: 928, column: 40, scope: !17124)
!17166 = !DILocation(line: 931, column: 11, scope: !17124)
!17167 = !DILocation(line: 931, column: 20, scope: !17124)
!17168 = !DILocation(line: 931, column: 25, scope: !17124)
!17169 = !DILocation(line: 931, column: 23, scope: !17124)
!17170 = !DILocation(line: 931, column: 8, scope: !17124)
!17171 = !DILocation(line: 931, column: 5, scope: !17124)
!17172 = !DILocation(line: 932, column: 11, scope: !17124)
!17173 = !DILocation(line: 932, column: 20, scope: !17124)
!17174 = !DILocation(line: 932, column: 25, scope: !17124)
!17175 = !DILocation(line: 932, column: 23, scope: !17124)
!17176 = !DILocation(line: 932, column: 8, scope: !17124)
!17177 = !DILocation(line: 932, column: 5, scope: !17124)
!17178 = !DILocation(line: 934, column: 14, scope: !17179)
!17179 = distinct !DILexicalBlock(scope: !17124, file: !3, line: 934, column: 2)
!17180 = !DILocation(line: 934, column: 18, scope: !17179)
!17181 = !DILocation(line: 934, column: 28, scope: !17179)
!17182 = !DILocation(line: 934, column: 12, scope: !17179)
!17183 = !DILocation(line: 934, column: 7, scope: !17179)
!17184 = !DILocation(line: 934, column: 33, scope: !17185)
!17185 = distinct !DILexicalBlock(scope: !17179, file: !3, line: 934, column: 2)
!17186 = !DILocation(line: 934, column: 2, scope: !17179)
!17187 = !DILocation(line: 935, column: 16, scope: !17188)
!17188 = distinct !DILexicalBlock(scope: !17185, file: !3, line: 934, column: 58)
!17189 = !DILocation(line: 935, column: 14, scope: !17188)
!17190 = !DILocation(line: 937, column: 7, scope: !17191)
!17191 = distinct !DILexicalBlock(scope: !17188, file: !3, line: 937, column: 7)
!17192 = !DILocation(line: 937, column: 21, scope: !17191)
!17193 = !DILocation(line: 937, column: 18, scope: !17191)
!17194 = !DILocation(line: 937, column: 7, scope: !17188)
!17195 = !DILocation(line: 938, column: 9, scope: !17196)
!17196 = distinct !DILexicalBlock(scope: !17191, file: !3, line: 937, column: 32)
!17197 = !DILocation(line: 938, column: 13, scope: !17196)
!17198 = !DILocation(line: 938, column: 24, scope: !17196)
!17199 = !DILocation(line: 938, column: 22, scope: !17196)
!17200 = !DILocation(line: 938, column: 7, scope: !17196)
!17201 = !DILocation(line: 945, column: 14, scope: !17196)
!17202 = !DILocation(line: 0, scope: !17196)
!17203 = !DILocation(line: 945, column: 12, scope: !17196)
!17204 = !DILocation(line: 946, column: 14, scope: !17196)
!17205 = !DILocation(line: 946, column: 12, scope: !17196)
!17206 = !DILocation(line: 949, column: 8, scope: !17207)
!17207 = distinct !DILexicalBlock(scope: !17196, file: !3, line: 949, column: 8)
!17208 = !DILocation(line: 949, column: 16, scope: !17207)
!17209 = !DILocation(line: 949, column: 8, scope: !17196)
!17210 = !DILocalVariable(name: "tpage", scope: !17211, file: !3, line: 950, type: !3861)
!17211 = distinct !DILexicalBlock(scope: !17207, file: !3, line: 949, column: 23)
!17212 = !DILocation(line: 950, column: 12, scope: !17211)
!17213 = !DILocation(line: 950, column: 51, scope: !17211)
!17214 = !DILocation(line: 950, column: 55, scope: !17211)
!17215 = !DILocation(line: 950, column: 20, scope: !17211)
!17216 = !DILocalVariable(name: "orig_tpage", scope: !17211, file: !3, line: 951, type: !3861)
!17217 = !DILocation(line: 951, column: 12, scope: !17211)
!17218 = !DILocation(line: 951, column: 56, scope: !17211)
!17219 = !DILocation(line: 951, column: 60, scope: !17211)
!17220 = !DILocation(line: 951, column: 25, scope: !17211)
!17221 = !DILocation(line: 956, column: 10, scope: !17211)
!17222 = !DILocation(line: 956, column: 14, scope: !17211)
!17223 = !DILocation(line: 956, column: 24, scope: !17211)
!17224 = !DILocation(line: 956, column: 8, scope: !17211)
!17225 = !DILocation(line: 959, column: 19, scope: !17211)
!17226 = !DILocation(line: 959, column: 6, scope: !17211)
!17227 = !DILocation(line: 959, column: 17, scope: !17211)
!17228 = !DILocation(line: 962, column: 19, scope: !17211)
!17229 = !DILocation(line: 962, column: 29, scope: !17211)
!17230 = !DILocation(line: 962, column: 27, scope: !17211)
!17231 = !DILocation(line: 962, column: 37, scope: !17211)
!17232 = !DILocation(line: 962, column: 41, scope: !17211)
!17233 = !DILocation(line: 962, column: 51, scope: !17211)
!17234 = !DILocation(line: 962, column: 49, scope: !17211)
!17235 = !DILocation(line: 962, column: 59, scope: !17211)
!17236 = !DILocation(line: 962, column: 18, scope: !17211)
!17237 = !DILocation(line: 962, column: 68, scope: !17211)
!17238 = !DILocation(line: 962, column: 78, scope: !17211)
!17239 = !DILocation(line: 962, column: 6, scope: !17211)
!17240 = !DILocation(line: 962, column: 16, scope: !17211)
!17241 = !DILocation(line: 965, column: 10, scope: !17242)
!17242 = distinct !DILexicalBlock(scope: !17211, file: !3, line: 965, column: 9)
!17243 = !DILocation(line: 965, column: 14, scope: !17242)
!17244 = !DILocation(line: 965, column: 31, scope: !17242)
!17245 = !DILocation(line: 965, column: 43, scope: !17242)
!17246 = !DILocation(line: 965, column: 69, scope: !17242)
!17247 = !DILocation(line: 965, column: 9, scope: !17211)
!17248 = !DILocation(line: 966, column: 32, scope: !17242)
!17249 = !DILocation(line: 966, column: 36, scope: !17242)
!17250 = !DILocation(line: 966, column: 6, scope: !17242)
!17251 = !DILocation(line: 969, column: 10, scope: !17252)
!17252 = distinct !DILexicalBlock(scope: !17211, file: !3, line: 969, column: 9)
!17253 = !DILocation(line: 969, column: 24, scope: !17252)
!17254 = !DILocation(line: 969, column: 21, scope: !17252)
!17255 = !DILocation(line: 969, column: 31, scope: !17252)
!17256 = !DILocation(line: 970, column: 16, scope: !17252)
!17257 = !DILocation(line: 970, column: 25, scope: !17252)
!17258 = !DILocation(line: 970, column: 28, scope: !17252)
!17259 = !DILocation(line: 970, column: 43, scope: !17252)
!17260 = !DILocation(line: 970, column: 47, scope: !17252)
!17261 = !DILocation(line: 970, column: 50, scope: !17252)
!17262 = !DILocation(line: 970, column: 9, scope: !17252)
!17263 = !DILocation(line: 970, column: 60, scope: !17252)
!17264 = !DILocation(line: 971, column: 16, scope: !17252)
!17265 = !DILocation(line: 971, column: 25, scope: !17252)
!17266 = !DILocation(line: 971, column: 28, scope: !17252)
!17267 = !DILocation(line: 971, column: 43, scope: !17252)
!17268 = !DILocation(line: 971, column: 47, scope: !17252)
!17269 = !DILocation(line: 971, column: 50, scope: !17252)
!17270 = !DILocation(line: 971, column: 9, scope: !17252)
!17271 = !DILocation(line: 969, column: 9, scope: !17211)
!17272 = !DILocation(line: 975, column: 11, scope: !17273)
!17273 = distinct !DILexicalBlock(scope: !17274, file: !3, line: 975, column: 10)
!17274 = distinct !DILexicalBlock(scope: !17252, file: !3, line: 972, column: 5)
!17275 = !DILocation(line: 975, column: 15, scope: !17273)
!17276 = !DILocation(line: 975, column: 32, scope: !17273)
!17277 = !DILocation(line: 975, column: 44, scope: !17273)
!17278 = !DILocation(line: 976, column: 11, scope: !17273)
!17279 = !DILocation(line: 976, column: 15, scope: !17273)
!17280 = !DILocation(line: 976, column: 32, scope: !17273)
!17281 = !DILocation(line: 976, column: 43, scope: !17273)
!17282 = !DILocation(line: 975, column: 68, scope: !17273)
!17283 = !DILocation(line: 975, column: 10, scope: !17274)
!17284 = !DILocation(line: 978, column: 7, scope: !17285)
!17285 = distinct !DILexicalBlock(scope: !17273, file: !3, line: 977, column: 6)
!17286 = !DILocation(line: 982, column: 6, scope: !17274)
!17287 = !DILocation(line: 987, column: 6, scope: !17288)
!17288 = distinct !DILexicalBlock(scope: !17252, file: !3, line: 985, column: 10)
!17289 = !DILocation(line: 990, column: 3, scope: !17196)
!17290 = !DILocation(line: 991, column: 2, scope: !17188)
!17291 = !DILocation(line: 934, column: 46, scope: !17185)
!17292 = !DILocation(line: 934, column: 52, scope: !17185)
!17293 = !DILocation(line: 934, column: 44, scope: !17185)
!17294 = !DILocation(line: 934, column: 2, scope: !17185)
!17295 = distinct !{!17295, !17186, !17296}
!17296 = !DILocation(line: 991, column: 2, scope: !17179)
!17297 = !DILocation(line: 993, column: 3, scope: !17124)
!17298 = !DILocation(line: 993, column: 14, scope: !17124)
!17299 = !DILocation(line: 994, column: 2, scope: !17124)
!17300 = !DILocation(line: 995, column: 1, scope: !17124)
!17301 = distinct !DISubprogram(name: "cross_tri_v2", scope: !15661, file: !15661, line: 42, type: !15376, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17302 = !DILocalVariable(name: "v1", arg: 1, scope: !17301, file: !15661, line: 42, type: !1944)
!17303 = !DILocation(line: 42, column: 40, scope: !17301)
!17304 = !DILocalVariable(name: "v2", arg: 2, scope: !17301, file: !15661, line: 42, type: !1944)
!17305 = !DILocation(line: 42, column: 59, scope: !17301)
!17306 = !DILocalVariable(name: "v3", arg: 3, scope: !17301, file: !15661, line: 42, type: !1944)
!17307 = !DILocation(line: 42, column: 78, scope: !17301)
!17308 = !DILocation(line: 44, column: 10, scope: !17301)
!17309 = !DILocation(line: 44, column: 18, scope: !17301)
!17310 = !DILocation(line: 44, column: 16, scope: !17301)
!17311 = !DILocation(line: 44, column: 28, scope: !17301)
!17312 = !DILocation(line: 44, column: 36, scope: !17301)
!17313 = !DILocation(line: 44, column: 34, scope: !17301)
!17314 = !DILocation(line: 44, column: 25, scope: !17301)
!17315 = !DILocation(line: 44, column: 46, scope: !17301)
!17316 = !DILocation(line: 44, column: 54, scope: !17301)
!17317 = !DILocation(line: 44, column: 52, scope: !17301)
!17318 = !DILocation(line: 44, column: 64, scope: !17301)
!17319 = !DILocation(line: 44, column: 72, scope: !17301)
!17320 = !DILocation(line: 44, column: 70, scope: !17301)
!17321 = !DILocation(line: 44, column: 61, scope: !17301)
!17322 = !DILocation(line: 44, column: 43, scope: !17301)
!17323 = !DILocation(line: 44, column: 2, scope: !17301)
!17324 = distinct !DISubprogram(name: "cmp_uv", scope: !3, file: !3, line: 819, type: !17325, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17325 = !DISubroutineType(types: !17326)
!17326 = !{!233, !1944, !1944}
!17327 = !DILocalVariable(name: "vec2a", arg: 1, scope: !17324, file: !3, line: 819, type: !1944)
!17328 = !DILocation(line: 819, column: 32, scope: !17324)
!17329 = !DILocalVariable(name: "vec2b", arg: 2, scope: !17324, file: !3, line: 819, type: !1944)
!17330 = !DILocation(line: 819, column: 54, scope: !17324)
!17331 = !DILocalVariable(name: "xa", scope: !17324, file: !3, line: 822, type: !184)
!17332 = !DILocation(line: 822, column: 8, scope: !17324)
!17333 = !DILocation(line: 822, column: 19, scope: !17324)
!17334 = !DILocation(line: 822, column: 13, scope: !17324)
!17335 = !DILocalVariable(name: "ya", scope: !17324, file: !3, line: 823, type: !184)
!17336 = !DILocation(line: 823, column: 8, scope: !17324)
!17337 = !DILocation(line: 823, column: 19, scope: !17324)
!17338 = !DILocation(line: 823, column: 13, scope: !17324)
!17339 = !DILocalVariable(name: "xb", scope: !17324, file: !3, line: 825, type: !184)
!17340 = !DILocation(line: 825, column: 8, scope: !17324)
!17341 = !DILocation(line: 825, column: 19, scope: !17324)
!17342 = !DILocation(line: 825, column: 13, scope: !17324)
!17343 = !DILocalVariable(name: "yb", scope: !17324, file: !3, line: 826, type: !184)
!17344 = !DILocation(line: 826, column: 8, scope: !17324)
!17345 = !DILocation(line: 826, column: 19, scope: !17324)
!17346 = !DILocation(line: 826, column: 13, scope: !17324)
!17347 = !DILocation(line: 828, column: 6, scope: !17348)
!17348 = distinct !DILexicalBlock(scope: !17324, file: !3, line: 828, column: 6)
!17349 = !DILocation(line: 828, column: 9, scope: !17348)
!17350 = !DILocation(line: 828, column: 6, scope: !17324)
!17351 = !DILocation(line: 828, column: 20, scope: !17348)
!17352 = !DILocation(line: 828, column: 17, scope: !17348)
!17353 = !DILocation(line: 829, column: 6, scope: !17354)
!17354 = distinct !DILexicalBlock(scope: !17324, file: !3, line: 829, column: 6)
!17355 = !DILocation(line: 829, column: 9, scope: !17354)
!17356 = !DILocation(line: 829, column: 6, scope: !17324)
!17357 = !DILocation(line: 829, column: 20, scope: !17354)
!17358 = !DILocation(line: 829, column: 17, scope: !17354)
!17359 = !DILocation(line: 831, column: 6, scope: !17360)
!17360 = distinct !DILexicalBlock(scope: !17324, file: !3, line: 831, column: 6)
!17361 = !DILocation(line: 831, column: 9, scope: !17360)
!17362 = !DILocation(line: 831, column: 6, scope: !17324)
!17363 = !DILocation(line: 831, column: 20, scope: !17360)
!17364 = !DILocation(line: 831, column: 17, scope: !17360)
!17365 = !DILocation(line: 832, column: 6, scope: !17366)
!17366 = distinct !DILexicalBlock(scope: !17324, file: !3, line: 832, column: 6)
!17367 = !DILocation(line: 832, column: 9, scope: !17366)
!17368 = !DILocation(line: 832, column: 6, scope: !17324)
!17369 = !DILocation(line: 832, column: 20, scope: !17366)
!17370 = !DILocation(line: 832, column: 17, scope: !17366)
!17371 = !DILocation(line: 834, column: 17, scope: !17324)
!17372 = !DILocation(line: 834, column: 22, scope: !17324)
!17373 = !DILocation(line: 834, column: 20, scope: !17324)
!17374 = !DILocation(line: 834, column: 11, scope: !17324)
!17375 = !DILocation(line: 834, column: 26, scope: !17324)
!17376 = !DILocation(line: 834, column: 49, scope: !17324)
!17377 = !DILocation(line: 834, column: 59, scope: !17324)
!17378 = !DILocation(line: 834, column: 64, scope: !17324)
!17379 = !DILocation(line: 834, column: 62, scope: !17324)
!17380 = !DILocation(line: 834, column: 53, scope: !17324)
!17381 = !DILocation(line: 834, column: 68, scope: !17324)
!17382 = !DILocation(line: 0, scope: !17324)
!17383 = !DILocation(line: 834, column: 9, scope: !17324)
!17384 = !DILocation(line: 834, column: 2, scope: !17324)
!17385 = distinct !DISubprogram(name: "normalize_v2", scope: !4381, file: !4381, line: 783, type: !16086, scopeLine: 784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17386 = !DILocalVariable(name: "n", arg: 1, scope: !17385, file: !4381, line: 783, type: !216)
!17387 = !DILocation(line: 783, column: 34, scope: !17385)
!17388 = !DILocation(line: 785, column: 25, scope: !17385)
!17389 = !DILocation(line: 785, column: 28, scope: !17385)
!17390 = !DILocation(line: 785, column: 9, scope: !17385)
!17391 = !DILocation(line: 785, column: 2, scope: !17385)
!17392 = distinct !DISubprogram(name: "shell_v2v2_mid_normalized_to_dist", scope: !15661, file: !15661, line: 279, type: !9803, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17393 = !DILocalVariable(name: "a", arg: 1, scope: !17392, file: !15661, line: 279, type: !1944)
!17394 = !DILocation(line: 279, column: 61, scope: !17392)
!17395 = !DILocalVariable(name: "b", arg: 2, scope: !17392, file: !15661, line: 279, type: !1944)
!17396 = !DILocation(line: 279, column: 79, scope: !17392)
!17397 = !DILocalVariable(name: "angle_cos", scope: !17392, file: !15661, line: 281, type: !184)
!17398 = !DILocation(line: 281, column: 8, scope: !17392)
!17399 = !DILocalVariable(name: "ab", scope: !17392, file: !15661, line: 282, type: !860)
!17400 = !DILocation(line: 282, column: 8, scope: !17392)
!17401 = !DILocation(line: 283, column: 2, scope: !17392)
!17402 = !DILocation(line: 284, column: 2, scope: !17392)
!17403 = !DILocation(line: 285, column: 14, scope: !17392)
!17404 = !DILocation(line: 285, column: 18, scope: !17392)
!17405 = !DILocation(line: 285, column: 21, scope: !17392)
!17406 = !DILocation(line: 285, column: 2, scope: !17392)
!17407 = !DILocation(line: 286, column: 28, scope: !17392)
!17408 = !DILocation(line: 286, column: 15, scope: !17392)
!17409 = !DILocation(line: 286, column: 32, scope: !17392)
!17410 = !DILocation(line: 286, column: 14, scope: !17392)
!17411 = !DILocation(line: 286, column: 58, scope: !17392)
!17412 = !DILocation(line: 286, column: 61, scope: !17392)
!17413 = !DILocation(line: 286, column: 49, scope: !17392)
!17414 = !DILocation(line: 286, column: 43, scope: !17392)
!17415 = !DILocation(line: 286, column: 12, scope: !17392)
!17416 = !DILocation(line: 287, column: 10, scope: !17392)
!17417 = !DILocation(line: 287, column: 9, scope: !17392)
!17418 = !DILocation(line: 287, column: 63, scope: !17392)
!17419 = !DILocation(line: 287, column: 61, scope: !17392)
!17420 = !DILocation(line: 287, column: 2, scope: !17392)
!17421 = distinct !DISubprogram(name: "mul_v2_fl", scope: !4381, file: !4381, line: 380, type: !9830, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17422 = !DILocalVariable(name: "r", arg: 1, scope: !17421, file: !4381, line: 380, type: !216)
!17423 = !DILocation(line: 380, column: 30, scope: !17421)
!17424 = !DILocalVariable(name: "f", arg: 2, scope: !17421, file: !4381, line: 380, type: !184)
!17425 = !DILocation(line: 380, column: 42, scope: !17421)
!17426 = !DILocation(line: 382, column: 10, scope: !17421)
!17427 = !DILocation(line: 382, column: 2, scope: !17421)
!17428 = !DILocation(line: 382, column: 7, scope: !17421)
!17429 = !DILocation(line: 383, column: 10, scope: !17421)
!17430 = !DILocation(line: 383, column: 2, scope: !17421)
!17431 = !DILocation(line: 383, column: 7, scope: !17421)
!17432 = !DILocation(line: 384, column: 1, scope: !17421)
!17433 = distinct !DISubprogram(name: "add_v2_v2v2", scope: !4381, file: !4381, line: 290, type: !9770, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17434 = !DILocalVariable(name: "r", arg: 1, scope: !17433, file: !4381, line: 290, type: !216)
!17435 = !DILocation(line: 290, column: 32, scope: !17433)
!17436 = !DILocalVariable(name: "a", arg: 2, scope: !17433, file: !4381, line: 290, type: !1944)
!17437 = !DILocation(line: 290, column: 50, scope: !17433)
!17438 = !DILocalVariable(name: "b", arg: 3, scope: !17433, file: !4381, line: 290, type: !1944)
!17439 = !DILocation(line: 290, column: 68, scope: !17433)
!17440 = !DILocation(line: 292, column: 9, scope: !17433)
!17441 = !DILocation(line: 292, column: 16, scope: !17433)
!17442 = !DILocation(line: 292, column: 14, scope: !17433)
!17443 = !DILocation(line: 292, column: 2, scope: !17433)
!17444 = !DILocation(line: 292, column: 7, scope: !17433)
!17445 = !DILocation(line: 293, column: 9, scope: !17433)
!17446 = !DILocation(line: 293, column: 16, scope: !17433)
!17447 = !DILocation(line: 293, column: 14, scope: !17433)
!17448 = !DILocation(line: 293, column: 2, scope: !17433)
!17449 = !DILocation(line: 293, column: 7, scope: !17433)
!17450 = !DILocation(line: 294, column: 1, scope: !17433)
!17451 = distinct !DISubprogram(name: "mul_v2_v2", scope: !4381, file: !4381, line: 406, type: !4361, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17452 = !DILocalVariable(name: "r", arg: 1, scope: !17451, file: !4381, line: 406, type: !216)
!17453 = !DILocation(line: 406, column: 30, scope: !17451)
!17454 = !DILocalVariable(name: "a", arg: 2, scope: !17451, file: !4381, line: 406, type: !1944)
!17455 = !DILocation(line: 406, column: 48, scope: !17451)
!17456 = !DILocation(line: 408, column: 10, scope: !17451)
!17457 = !DILocation(line: 408, column: 2, scope: !17451)
!17458 = !DILocation(line: 408, column: 7, scope: !17451)
!17459 = !DILocation(line: 409, column: 10, scope: !17451)
!17460 = !DILocation(line: 409, column: 2, scope: !17451)
!17461 = !DILocation(line: 409, column: 7, scope: !17451)
!17462 = !DILocation(line: 410, column: 1, scope: !17451)
!17463 = distinct !DISubprogram(name: "normalize_v2_v2", scope: !4381, file: !4381, line: 767, type: !16147, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17464 = !DILocalVariable(name: "r", arg: 1, scope: !17463, file: !4381, line: 767, type: !216)
!17465 = !DILocation(line: 767, column: 37, scope: !17463)
!17466 = !DILocalVariable(name: "a", arg: 2, scope: !17463, file: !4381, line: 767, type: !1944)
!17467 = !DILocation(line: 767, column: 55, scope: !17463)
!17468 = !DILocalVariable(name: "d", scope: !17463, file: !4381, line: 769, type: !184)
!17469 = !DILocation(line: 769, column: 8, scope: !17463)
!17470 = !DILocation(line: 769, column: 21, scope: !17463)
!17471 = !DILocation(line: 769, column: 24, scope: !17463)
!17472 = !DILocation(line: 769, column: 12, scope: !17463)
!17473 = !DILocation(line: 771, column: 6, scope: !17474)
!17474 = distinct !DILexicalBlock(scope: !17463, file: !4381, line: 771, column: 6)
!17475 = !DILocation(line: 771, column: 8, scope: !17474)
!17476 = !DILocation(line: 771, column: 6, scope: !17463)
!17477 = !DILocation(line: 772, column: 13, scope: !17478)
!17478 = distinct !DILexicalBlock(scope: !17474, file: !4381, line: 771, column: 20)
!17479 = !DILocation(line: 772, column: 7, scope: !17478)
!17480 = !DILocation(line: 772, column: 5, scope: !17478)
!17481 = !DILocation(line: 773, column: 15, scope: !17478)
!17482 = !DILocation(line: 773, column: 18, scope: !17478)
!17483 = !DILocation(line: 773, column: 28, scope: !17478)
!17484 = !DILocation(line: 773, column: 26, scope: !17478)
!17485 = !DILocation(line: 773, column: 3, scope: !17478)
!17486 = !DILocation(line: 774, column: 2, scope: !17478)
!17487 = !DILocation(line: 776, column: 11, scope: !17488)
!17488 = distinct !DILexicalBlock(scope: !17474, file: !4381, line: 775, column: 7)
!17489 = !DILocation(line: 776, column: 3, scope: !17488)
!17490 = !DILocation(line: 777, column: 5, scope: !17488)
!17491 = !DILocation(line: 780, column: 9, scope: !17463)
!17492 = !DILocation(line: 780, column: 2, scope: !17463)
!17493 = distinct !DISubprogram(name: "mul_v2_v2fl", scope: !4381, file: !4381, line: 386, type: !9927, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17494 = !DILocalVariable(name: "r", arg: 1, scope: !17493, file: !4381, line: 386, type: !216)
!17495 = !DILocation(line: 386, column: 32, scope: !17493)
!17496 = !DILocalVariable(name: "a", arg: 2, scope: !17493, file: !4381, line: 386, type: !1944)
!17497 = !DILocation(line: 386, column: 50, scope: !17493)
!17498 = !DILocalVariable(name: "f", arg: 3, scope: !17493, file: !4381, line: 386, type: !184)
!17499 = !DILocation(line: 386, column: 62, scope: !17493)
!17500 = !DILocation(line: 388, column: 9, scope: !17493)
!17501 = !DILocation(line: 388, column: 16, scope: !17493)
!17502 = !DILocation(line: 388, column: 14, scope: !17493)
!17503 = !DILocation(line: 388, column: 2, scope: !17493)
!17504 = !DILocation(line: 388, column: 7, scope: !17493)
!17505 = !DILocation(line: 389, column: 9, scope: !17493)
!17506 = !DILocation(line: 389, column: 16, scope: !17493)
!17507 = !DILocation(line: 389, column: 14, scope: !17493)
!17508 = !DILocation(line: 389, column: 2, scope: !17493)
!17509 = !DILocation(line: 389, column: 7, scope: !17493)
!17510 = !DILocation(line: 390, column: 1, scope: !17493)
!17511 = distinct !DISubprogram(name: "zero_v2", scope: !4381, file: !4381, line: 37, type: !16219, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17512 = !DILocalVariable(name: "r", arg: 1, scope: !17511, file: !4381, line: 37, type: !216)
!17513 = !DILocation(line: 37, column: 28, scope: !17511)
!17514 = !DILocation(line: 39, column: 2, scope: !17511)
!17515 = !DILocation(line: 39, column: 7, scope: !17511)
!17516 = !DILocation(line: 40, column: 2, scope: !17511)
!17517 = !DILocation(line: 40, column: 7, scope: !17511)
!17518 = !DILocation(line: 41, column: 1, scope: !17511)
!17519 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !4381, file: !4381, line: 357, type: !9770, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17520 = !DILocalVariable(name: "r", arg: 1, scope: !17519, file: !4381, line: 357, type: !216)
!17521 = !DILocation(line: 357, column: 32, scope: !17519)
!17522 = !DILocalVariable(name: "a", arg: 2, scope: !17519, file: !4381, line: 357, type: !1944)
!17523 = !DILocation(line: 357, column: 50, scope: !17519)
!17524 = !DILocalVariable(name: "b", arg: 3, scope: !17519, file: !4381, line: 357, type: !1944)
!17525 = !DILocation(line: 357, column: 68, scope: !17519)
!17526 = !DILocation(line: 359, column: 9, scope: !17519)
!17527 = !DILocation(line: 359, column: 16, scope: !17519)
!17528 = !DILocation(line: 359, column: 14, scope: !17519)
!17529 = !DILocation(line: 359, column: 2, scope: !17519)
!17530 = !DILocation(line: 359, column: 7, scope: !17519)
!17531 = !DILocation(line: 360, column: 9, scope: !17519)
!17532 = !DILocation(line: 360, column: 16, scope: !17519)
!17533 = !DILocation(line: 360, column: 14, scope: !17519)
!17534 = !DILocation(line: 360, column: 2, scope: !17519)
!17535 = !DILocation(line: 360, column: 7, scope: !17519)
!17536 = !DILocation(line: 361, column: 9, scope: !17519)
!17537 = !DILocation(line: 361, column: 16, scope: !17519)
!17538 = !DILocation(line: 361, column: 14, scope: !17519)
!17539 = !DILocation(line: 361, column: 2, scope: !17519)
!17540 = !DILocation(line: 361, column: 7, scope: !17519)
!17541 = !DILocation(line: 362, column: 1, scope: !17519)
!17542 = distinct !DISubprogram(name: "add_v3_v3", scope: !4381, file: !4381, line: 302, type: !4361, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17543 = !DILocalVariable(name: "r", arg: 1, scope: !17542, file: !4381, line: 302, type: !216)
!17544 = !DILocation(line: 302, column: 30, scope: !17542)
!17545 = !DILocalVariable(name: "a", arg: 2, scope: !17542, file: !4381, line: 302, type: !1944)
!17546 = !DILocation(line: 302, column: 48, scope: !17542)
!17547 = !DILocation(line: 304, column: 10, scope: !17542)
!17548 = !DILocation(line: 304, column: 2, scope: !17542)
!17549 = !DILocation(line: 304, column: 7, scope: !17542)
!17550 = !DILocation(line: 305, column: 10, scope: !17542)
!17551 = !DILocation(line: 305, column: 2, scope: !17542)
!17552 = !DILocation(line: 305, column: 7, scope: !17542)
!17553 = !DILocation(line: 306, column: 10, scope: !17542)
!17554 = !DILocation(line: 306, column: 2, scope: !17542)
!17555 = !DILocation(line: 306, column: 7, scope: !17542)
!17556 = !DILocation(line: 307, column: 1, scope: !17542)
!17557 = distinct !DISubprogram(name: "line_isect_y", scope: !3, file: !3, line: 748, type: !17558, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17558 = !DISubroutineType(types: !17559)
!17559 = !{!22, !1944, !1944, !1778, !216}
!17560 = !DILocalVariable(name: "p1", arg: 1, scope: !17557, file: !3, line: 748, type: !1944)
!17561 = !DILocation(line: 748, column: 37, scope: !17557)
!17562 = !DILocalVariable(name: "p2", arg: 2, scope: !17557, file: !3, line: 748, type: !1944)
!17563 = !DILocation(line: 748, column: 56, scope: !17557)
!17564 = !DILocalVariable(name: "y_level", arg: 3, scope: !17557, file: !3, line: 748, type: !1778)
!17565 = !DILocation(line: 748, column: 75, scope: !17557)
!17566 = !DILocalVariable(name: "x_isect", arg: 4, scope: !17557, file: !3, line: 748, type: !216)
!17567 = !DILocation(line: 748, column: 91, scope: !17557)
!17568 = !DILocalVariable(name: "y_diff", scope: !17557, file: !3, line: 750, type: !184)
!17569 = !DILocation(line: 750, column: 8, scope: !17557)
!17570 = !DILocation(line: 752, column: 6, scope: !17571)
!17571 = distinct !DILexicalBlock(scope: !17557, file: !3, line: 752, column: 6)
!17572 = !DILocation(line: 752, column: 17, scope: !17571)
!17573 = !DILocation(line: 752, column: 14, scope: !17571)
!17574 = !DILocation(line: 752, column: 6, scope: !17557)
!17575 = !DILocation(line: 753, column: 14, scope: !17576)
!17576 = distinct !DILexicalBlock(scope: !17571, file: !3, line: 752, column: 24)
!17577 = !DILocation(line: 753, column: 4, scope: !17576)
!17578 = !DILocation(line: 753, column: 12, scope: !17576)
!17579 = !DILocation(line: 754, column: 3, scope: !17576)
!17580 = !DILocation(line: 756, column: 6, scope: !17581)
!17581 = distinct !DILexicalBlock(scope: !17557, file: !3, line: 756, column: 6)
!17582 = !DILocation(line: 756, column: 17, scope: !17581)
!17583 = !DILocation(line: 756, column: 14, scope: !17581)
!17584 = !DILocation(line: 756, column: 6, scope: !17557)
!17585 = !DILocation(line: 757, column: 14, scope: !17586)
!17586 = distinct !DILexicalBlock(scope: !17581, file: !3, line: 756, column: 24)
!17587 = !DILocation(line: 757, column: 4, scope: !17586)
!17588 = !DILocation(line: 757, column: 12, scope: !17586)
!17589 = !DILocation(line: 758, column: 3, scope: !17586)
!17590 = !DILocation(line: 761, column: 17, scope: !17557)
!17591 = !DILocation(line: 761, column: 25, scope: !17557)
!17592 = !DILocation(line: 761, column: 23, scope: !17557)
!17593 = !DILocation(line: 761, column: 11, scope: !17557)
!17594 = !DILocation(line: 761, column: 9, scope: !17557)
!17595 = !DILocation(line: 763, column: 6, scope: !17596)
!17596 = distinct !DILexicalBlock(scope: !17557, file: !3, line: 763, column: 6)
!17597 = !DILocation(line: 763, column: 13, scope: !17596)
!17598 = !DILocation(line: 763, column: 6, scope: !17557)
!17599 = !DILocation(line: 764, column: 15, scope: !17600)
!17600 = distinct !DILexicalBlock(scope: !17596, file: !3, line: 763, column: 26)
!17601 = !DILocation(line: 764, column: 23, scope: !17600)
!17602 = !DILocation(line: 764, column: 21, scope: !17600)
!17603 = !DILocation(line: 764, column: 30, scope: !17600)
!17604 = !DILocation(line: 764, column: 4, scope: !17600)
!17605 = !DILocation(line: 764, column: 12, scope: !17600)
!17606 = !DILocation(line: 765, column: 3, scope: !17600)
!17607 = !DILocation(line: 768, column: 6, scope: !17608)
!17608 = distinct !DILexicalBlock(scope: !17557, file: !3, line: 768, column: 6)
!17609 = !DILocation(line: 768, column: 14, scope: !17608)
!17610 = !DILocation(line: 768, column: 12, scope: !17608)
!17611 = !DILocation(line: 768, column: 22, scope: !17608)
!17612 = !DILocation(line: 768, column: 25, scope: !17608)
!17613 = !DILocation(line: 768, column: 33, scope: !17608)
!17614 = !DILocation(line: 768, column: 31, scope: !17608)
!17615 = !DILocation(line: 768, column: 6, scope: !17557)
!17616 = !DILocation(line: 769, column: 15, scope: !17617)
!17617 = distinct !DILexicalBlock(scope: !17608, file: !3, line: 768, column: 42)
!17618 = !DILocation(line: 769, column: 24, scope: !17617)
!17619 = !DILocation(line: 769, column: 32, scope: !17617)
!17620 = !DILocation(line: 769, column: 30, scope: !17617)
!17621 = !DILocation(line: 769, column: 21, scope: !17617)
!17622 = !DILocation(line: 769, column: 43, scope: !17617)
!17623 = !DILocation(line: 769, column: 52, scope: !17617)
!17624 = !DILocation(line: 769, column: 62, scope: !17617)
!17625 = !DILocation(line: 769, column: 60, scope: !17617)
!17626 = !DILocation(line: 769, column: 49, scope: !17617)
!17627 = !DILocation(line: 769, column: 41, scope: !17617)
!17628 = !DILocation(line: 769, column: 72, scope: !17617)
!17629 = !DILocation(line: 769, column: 70, scope: !17617)
!17630 = !DILocation(line: 769, column: 4, scope: !17617)
!17631 = !DILocation(line: 769, column: 12, scope: !17617)
!17632 = !DILocation(line: 770, column: 3, scope: !17617)
!17633 = !DILocation(line: 772, column: 11, scope: !17634)
!17634 = distinct !DILexicalBlock(scope: !17608, file: !3, line: 772, column: 11)
!17635 = !DILocation(line: 772, column: 19, scope: !17634)
!17636 = !DILocation(line: 772, column: 17, scope: !17634)
!17637 = !DILocation(line: 772, column: 27, scope: !17634)
!17638 = !DILocation(line: 772, column: 30, scope: !17634)
!17639 = !DILocation(line: 772, column: 38, scope: !17634)
!17640 = !DILocation(line: 772, column: 36, scope: !17634)
!17641 = !DILocation(line: 772, column: 11, scope: !17608)
!17642 = !DILocation(line: 773, column: 15, scope: !17643)
!17643 = distinct !DILexicalBlock(scope: !17634, file: !3, line: 772, column: 47)
!17644 = !DILocation(line: 773, column: 24, scope: !17643)
!17645 = !DILocation(line: 773, column: 34, scope: !17643)
!17646 = !DILocation(line: 773, column: 32, scope: !17643)
!17647 = !DILocation(line: 773, column: 21, scope: !17643)
!17648 = !DILocation(line: 773, column: 43, scope: !17643)
!17649 = !DILocation(line: 773, column: 52, scope: !17643)
!17650 = !DILocation(line: 773, column: 60, scope: !17643)
!17651 = !DILocation(line: 773, column: 58, scope: !17643)
!17652 = !DILocation(line: 773, column: 49, scope: !17643)
!17653 = !DILocation(line: 773, column: 41, scope: !17643)
!17654 = !DILocation(line: 773, column: 72, scope: !17643)
!17655 = !DILocation(line: 773, column: 70, scope: !17643)
!17656 = !DILocation(line: 773, column: 4, scope: !17643)
!17657 = !DILocation(line: 773, column: 12, scope: !17643)
!17658 = !DILocation(line: 774, column: 3, scope: !17643)
!17659 = !DILocation(line: 777, column: 3, scope: !17660)
!17660 = distinct !DILexicalBlock(scope: !17634, file: !3, line: 776, column: 7)
!17661 = !DILocation(line: 779, column: 1, scope: !17557)
!17662 = distinct !DISubprogram(name: "line_isect_x", scope: !3, file: !3, line: 781, type: !17558, scopeLine: 782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17663 = !DILocalVariable(name: "p1", arg: 1, scope: !17662, file: !3, line: 781, type: !1944)
!17664 = !DILocation(line: 781, column: 37, scope: !17662)
!17665 = !DILocalVariable(name: "p2", arg: 2, scope: !17662, file: !3, line: 781, type: !1944)
!17666 = !DILocation(line: 781, column: 56, scope: !17662)
!17667 = !DILocalVariable(name: "x_level", arg: 3, scope: !17662, file: !3, line: 781, type: !1778)
!17668 = !DILocation(line: 781, column: 75, scope: !17662)
!17669 = !DILocalVariable(name: "y_isect", arg: 4, scope: !17662, file: !3, line: 781, type: !216)
!17670 = !DILocation(line: 781, column: 91, scope: !17662)
!17671 = !DILocalVariable(name: "x_diff", scope: !17662, file: !3, line: 783, type: !184)
!17672 = !DILocation(line: 783, column: 8, scope: !17662)
!17673 = !DILocation(line: 785, column: 6, scope: !17674)
!17674 = distinct !DILexicalBlock(scope: !17662, file: !3, line: 785, column: 6)
!17675 = !DILocation(line: 785, column: 17, scope: !17674)
!17676 = !DILocation(line: 785, column: 14, scope: !17674)
!17677 = !DILocation(line: 785, column: 6, scope: !17662)
!17678 = !DILocation(line: 786, column: 14, scope: !17679)
!17679 = distinct !DILexicalBlock(scope: !17674, file: !3, line: 785, column: 24)
!17680 = !DILocation(line: 786, column: 4, scope: !17679)
!17681 = !DILocation(line: 786, column: 12, scope: !17679)
!17682 = !DILocation(line: 787, column: 3, scope: !17679)
!17683 = !DILocation(line: 789, column: 6, scope: !17684)
!17684 = distinct !DILexicalBlock(scope: !17662, file: !3, line: 789, column: 6)
!17685 = !DILocation(line: 789, column: 17, scope: !17684)
!17686 = !DILocation(line: 789, column: 14, scope: !17684)
!17687 = !DILocation(line: 789, column: 6, scope: !17662)
!17688 = !DILocation(line: 790, column: 14, scope: !17689)
!17689 = distinct !DILexicalBlock(scope: !17684, file: !3, line: 789, column: 24)
!17690 = !DILocation(line: 790, column: 4, scope: !17689)
!17691 = !DILocation(line: 790, column: 12, scope: !17689)
!17692 = !DILocation(line: 791, column: 3, scope: !17689)
!17693 = !DILocation(line: 794, column: 17, scope: !17662)
!17694 = !DILocation(line: 794, column: 25, scope: !17662)
!17695 = !DILocation(line: 794, column: 23, scope: !17662)
!17696 = !DILocation(line: 794, column: 11, scope: !17662)
!17697 = !DILocation(line: 794, column: 9, scope: !17662)
!17698 = !DILocation(line: 796, column: 6, scope: !17699)
!17699 = distinct !DILexicalBlock(scope: !17662, file: !3, line: 796, column: 6)
!17700 = !DILocation(line: 796, column: 13, scope: !17699)
!17701 = !DILocation(line: 796, column: 6, scope: !17662)
!17702 = !DILocation(line: 797, column: 15, scope: !17703)
!17703 = distinct !DILexicalBlock(scope: !17699, file: !3, line: 796, column: 26)
!17704 = !DILocation(line: 797, column: 23, scope: !17703)
!17705 = !DILocation(line: 797, column: 21, scope: !17703)
!17706 = !DILocation(line: 797, column: 30, scope: !17703)
!17707 = !DILocation(line: 797, column: 4, scope: !17703)
!17708 = !DILocation(line: 797, column: 12, scope: !17703)
!17709 = !DILocation(line: 798, column: 3, scope: !17703)
!17710 = !DILocation(line: 801, column: 6, scope: !17711)
!17711 = distinct !DILexicalBlock(scope: !17662, file: !3, line: 801, column: 6)
!17712 = !DILocation(line: 801, column: 14, scope: !17711)
!17713 = !DILocation(line: 801, column: 12, scope: !17711)
!17714 = !DILocation(line: 801, column: 22, scope: !17711)
!17715 = !DILocation(line: 801, column: 25, scope: !17711)
!17716 = !DILocation(line: 801, column: 33, scope: !17711)
!17717 = !DILocation(line: 801, column: 31, scope: !17711)
!17718 = !DILocation(line: 801, column: 6, scope: !17662)
!17719 = !DILocation(line: 802, column: 15, scope: !17720)
!17720 = distinct !DILexicalBlock(scope: !17711, file: !3, line: 801, column: 42)
!17721 = !DILocation(line: 802, column: 24, scope: !17720)
!17722 = !DILocation(line: 802, column: 32, scope: !17720)
!17723 = !DILocation(line: 802, column: 30, scope: !17720)
!17724 = !DILocation(line: 802, column: 21, scope: !17720)
!17725 = !DILocation(line: 802, column: 43, scope: !17720)
!17726 = !DILocation(line: 802, column: 52, scope: !17720)
!17727 = !DILocation(line: 802, column: 62, scope: !17720)
!17728 = !DILocation(line: 802, column: 60, scope: !17720)
!17729 = !DILocation(line: 802, column: 49, scope: !17720)
!17730 = !DILocation(line: 802, column: 41, scope: !17720)
!17731 = !DILocation(line: 802, column: 72, scope: !17720)
!17732 = !DILocation(line: 802, column: 70, scope: !17720)
!17733 = !DILocation(line: 802, column: 4, scope: !17720)
!17734 = !DILocation(line: 802, column: 12, scope: !17720)
!17735 = !DILocation(line: 803, column: 3, scope: !17720)
!17736 = !DILocation(line: 805, column: 11, scope: !17737)
!17737 = distinct !DILexicalBlock(scope: !17711, file: !3, line: 805, column: 11)
!17738 = !DILocation(line: 805, column: 19, scope: !17737)
!17739 = !DILocation(line: 805, column: 17, scope: !17737)
!17740 = !DILocation(line: 805, column: 27, scope: !17737)
!17741 = !DILocation(line: 805, column: 30, scope: !17737)
!17742 = !DILocation(line: 805, column: 38, scope: !17737)
!17743 = !DILocation(line: 805, column: 36, scope: !17737)
!17744 = !DILocation(line: 805, column: 11, scope: !17711)
!17745 = !DILocation(line: 806, column: 15, scope: !17746)
!17746 = distinct !DILexicalBlock(scope: !17737, file: !3, line: 805, column: 47)
!17747 = !DILocation(line: 806, column: 24, scope: !17746)
!17748 = !DILocation(line: 806, column: 34, scope: !17746)
!17749 = !DILocation(line: 806, column: 32, scope: !17746)
!17750 = !DILocation(line: 806, column: 21, scope: !17746)
!17751 = !DILocation(line: 806, column: 43, scope: !17746)
!17752 = !DILocation(line: 806, column: 52, scope: !17746)
!17753 = !DILocation(line: 806, column: 60, scope: !17746)
!17754 = !DILocation(line: 806, column: 58, scope: !17746)
!17755 = !DILocation(line: 806, column: 49, scope: !17746)
!17756 = !DILocation(line: 806, column: 41, scope: !17746)
!17757 = !DILocation(line: 806, column: 72, scope: !17746)
!17758 = !DILocation(line: 806, column: 70, scope: !17746)
!17759 = !DILocation(line: 806, column: 4, scope: !17746)
!17760 = !DILocation(line: 806, column: 12, scope: !17746)
!17761 = !DILocation(line: 807, column: 3, scope: !17746)
!17762 = !DILocation(line: 810, column: 3, scope: !17763)
!17763 = distinct !DILexicalBlock(scope: !17737, file: !3, line: 809, column: 7)
!17764 = !DILocation(line: 812, column: 1, scope: !17662)
!17765 = distinct !DISubprogram(name: "divide_round_i", scope: !9865, file: !9865, line: 170, type: !9866, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17766 = !DILocalVariable(name: "a", arg: 1, scope: !17765, file: !9865, line: 170, type: !22)
!17767 = !DILocation(line: 170, column: 32, scope: !17765)
!17768 = !DILocalVariable(name: "b", arg: 2, scope: !17765, file: !9865, line: 170, type: !22)
!17769 = !DILocation(line: 170, column: 39, scope: !17765)
!17770 = !DILocation(line: 172, column: 14, scope: !17765)
!17771 = !DILocation(line: 172, column: 12, scope: !17765)
!17772 = !DILocation(line: 172, column: 18, scope: !17765)
!17773 = !DILocation(line: 172, column: 16, scope: !17765)
!17774 = !DILocation(line: 172, column: 28, scope: !17765)
!17775 = !DILocation(line: 172, column: 26, scope: !17765)
!17776 = !DILocation(line: 172, column: 21, scope: !17765)
!17777 = !DILocation(line: 172, column: 2, scope: !17765)
!17778 = distinct !DISubprogram(name: "copy_v4_v4_char", scope: !4381, file: !4381, line: 114, type: !17779, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17779 = !DISubroutineType(types: !17780)
!17780 = !{null, !913, !12}
!17781 = !DILocalVariable(name: "r", arg: 1, scope: !17778, file: !4381, line: 114, type: !913)
!17782 = !DILocation(line: 114, column: 35, scope: !17778)
!17783 = !DILocalVariable(name: "a", arg: 2, scope: !17778, file: !4381, line: 114, type: !12)
!17784 = !DILocation(line: 114, column: 52, scope: !17778)
!17785 = !DILocation(line: 116, column: 9, scope: !17778)
!17786 = !DILocation(line: 116, column: 2, scope: !17778)
!17787 = !DILocation(line: 116, column: 7, scope: !17778)
!17788 = !DILocation(line: 117, column: 9, scope: !17778)
!17789 = !DILocation(line: 117, column: 2, scope: !17778)
!17790 = !DILocation(line: 117, column: 7, scope: !17778)
!17791 = !DILocation(line: 118, column: 9, scope: !17778)
!17792 = !DILocation(line: 118, column: 2, scope: !17778)
!17793 = !DILocation(line: 118, column: 7, scope: !17778)
!17794 = !DILocation(line: 119, column: 9, scope: !17778)
!17795 = !DILocation(line: 119, column: 2, scope: !17778)
!17796 = !DILocation(line: 119, column: 7, scope: !17778)
!17797 = !DILocation(line: 120, column: 1, scope: !17778)
!17798 = distinct !DISubprogram(name: "blend_color_interpolate_float", scope: !9957, file: !9957, line: 1160, type: !17799, scopeLine: 1161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17799 = !DISubroutineType(types: !17800)
!17800 = !{null, !216, !1944, !1944, !184}
!17801 = !DILocalVariable(name: "dst", arg: 1, scope: !17798, file: !9957, line: 1160, type: !216)
!17802 = !DILocation(line: 1160, column: 50, scope: !17798)
!17803 = !DILocalVariable(name: "src1", arg: 2, scope: !17798, file: !9957, line: 1160, type: !1944)
!17804 = !DILocation(line: 1160, column: 70, scope: !17798)
!17805 = !DILocalVariable(name: "src2", arg: 3, scope: !17798, file: !9957, line: 1160, type: !1944)
!17806 = !DILocation(line: 1160, column: 91, scope: !17798)
!17807 = !DILocalVariable(name: "t", arg: 4, scope: !17798, file: !9957, line: 1160, type: !184)
!17808 = !DILocation(line: 1160, column: 106, scope: !17798)
!17809 = !DILocalVariable(name: "mt", scope: !17798, file: !9957, line: 1163, type: !1778)
!17810 = !DILocation(line: 1163, column: 14, scope: !17798)
!17811 = !DILocation(line: 1163, column: 26, scope: !17798)
!17812 = !DILocation(line: 1163, column: 24, scope: !17798)
!17813 = !DILocation(line: 1165, column: 11, scope: !17798)
!17814 = !DILocation(line: 1165, column: 16, scope: !17798)
!17815 = !DILocation(line: 1165, column: 14, scope: !17798)
!17816 = !DILocation(line: 1165, column: 26, scope: !17798)
!17817 = !DILocation(line: 1165, column: 30, scope: !17798)
!17818 = !DILocation(line: 1165, column: 28, scope: !17798)
!17819 = !DILocation(line: 1165, column: 24, scope: !17798)
!17820 = !DILocation(line: 1165, column: 2, scope: !17798)
!17821 = !DILocation(line: 1165, column: 9, scope: !17798)
!17822 = !DILocation(line: 1166, column: 11, scope: !17798)
!17823 = !DILocation(line: 1166, column: 16, scope: !17798)
!17824 = !DILocation(line: 1166, column: 14, scope: !17798)
!17825 = !DILocation(line: 1166, column: 26, scope: !17798)
!17826 = !DILocation(line: 1166, column: 30, scope: !17798)
!17827 = !DILocation(line: 1166, column: 28, scope: !17798)
!17828 = !DILocation(line: 1166, column: 24, scope: !17798)
!17829 = !DILocation(line: 1166, column: 2, scope: !17798)
!17830 = !DILocation(line: 1166, column: 9, scope: !17798)
!17831 = !DILocation(line: 1167, column: 11, scope: !17798)
!17832 = !DILocation(line: 1167, column: 16, scope: !17798)
!17833 = !DILocation(line: 1167, column: 14, scope: !17798)
!17834 = !DILocation(line: 1167, column: 26, scope: !17798)
!17835 = !DILocation(line: 1167, column: 30, scope: !17798)
!17836 = !DILocation(line: 1167, column: 28, scope: !17798)
!17837 = !DILocation(line: 1167, column: 24, scope: !17798)
!17838 = !DILocation(line: 1167, column: 2, scope: !17798)
!17839 = !DILocation(line: 1167, column: 9, scope: !17798)
!17840 = !DILocation(line: 1168, column: 11, scope: !17798)
!17841 = !DILocation(line: 1168, column: 16, scope: !17798)
!17842 = !DILocation(line: 1168, column: 14, scope: !17798)
!17843 = !DILocation(line: 1168, column: 26, scope: !17798)
!17844 = !DILocation(line: 1168, column: 30, scope: !17798)
!17845 = !DILocation(line: 1168, column: 28, scope: !17798)
!17846 = !DILocation(line: 1168, column: 24, scope: !17798)
!17847 = !DILocation(line: 1168, column: 2, scope: !17798)
!17848 = !DILocation(line: 1168, column: 9, scope: !17798)
!17849 = !DILocation(line: 1169, column: 1, scope: !17798)
!17850 = distinct !DISubprogram(name: "blend_color_interpolate_byte", scope: !9957, file: !9957, line: 609, type: !17851, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17851 = !DISubroutineType(types: !17852)
!17852 = !{null, !1024, !9894, !9894, !184}
!17853 = !DILocalVariable(name: "dst", arg: 1, scope: !17850, file: !9957, line: 609, type: !1024)
!17854 = !DILocation(line: 609, column: 57, scope: !17850)
!17855 = !DILocalVariable(name: "src1", arg: 2, scope: !17850, file: !9957, line: 609, type: !9894)
!17856 = !DILocation(line: 609, column: 85, scope: !17850)
!17857 = !DILocalVariable(name: "src2", arg: 3, scope: !17850, file: !9957, line: 609, type: !9894)
!17858 = !DILocation(line: 609, column: 114, scope: !17850)
!17859 = !DILocalVariable(name: "ft", arg: 4, scope: !17850, file: !9957, line: 609, type: !184)
!17860 = !DILocation(line: 609, column: 129, scope: !17850)
!17861 = !DILocalVariable(name: "t", scope: !17850, file: !9957, line: 613, type: !5126)
!17862 = !DILocation(line: 613, column: 12, scope: !17850)
!17863 = !DILocation(line: 613, column: 28, scope: !17850)
!17864 = !DILocation(line: 613, column: 26, scope: !17850)
!17865 = !DILocation(line: 613, column: 16, scope: !17850)
!17866 = !DILocalVariable(name: "mt", scope: !17850, file: !9957, line: 614, type: !5126)
!17867 = !DILocation(line: 614, column: 12, scope: !17850)
!17868 = !DILocation(line: 614, column: 23, scope: !17850)
!17869 = !DILocation(line: 614, column: 21, scope: !17850)
!17870 = !DILocalVariable(name: "tmp", scope: !17850, file: !9957, line: 615, type: !22)
!17871 = !DILocation(line: 615, column: 6, scope: !17850)
!17872 = !DILocation(line: 615, column: 13, scope: !17850)
!17873 = !DILocation(line: 615, column: 18, scope: !17850)
!17874 = !DILocation(line: 615, column: 16, scope: !17850)
!17875 = !DILocation(line: 615, column: 28, scope: !17850)
!17876 = !DILocation(line: 615, column: 32, scope: !17850)
!17877 = !DILocation(line: 615, column: 30, scope: !17850)
!17878 = !DILocation(line: 615, column: 26, scope: !17850)
!17879 = !DILocation(line: 617, column: 6, scope: !17880)
!17880 = distinct !DILexicalBlock(scope: !17850, file: !9957, line: 617, column: 6)
!17881 = !DILocation(line: 617, column: 10, scope: !17880)
!17882 = !DILocation(line: 617, column: 6, scope: !17850)
!17883 = !DILocation(line: 618, column: 42, scope: !17884)
!17884 = distinct !DILexicalBlock(scope: !17880, file: !9957, line: 617, column: 15)
!17885 = !DILocation(line: 618, column: 47, scope: !17884)
!17886 = !DILocation(line: 618, column: 45, scope: !17884)
!17887 = !DILocation(line: 618, column: 57, scope: !17884)
!17888 = !DILocation(line: 618, column: 55, scope: !17884)
!17889 = !DILocation(line: 618, column: 67, scope: !17884)
!17890 = !DILocation(line: 618, column: 71, scope: !17884)
!17891 = !DILocation(line: 618, column: 69, scope: !17884)
!17892 = !DILocation(line: 618, column: 81, scope: !17884)
!17893 = !DILocation(line: 618, column: 79, scope: !17884)
!17894 = !DILocation(line: 618, column: 65, scope: !17884)
!17895 = !DILocation(line: 618, column: 90, scope: !17884)
!17896 = !DILocation(line: 618, column: 27, scope: !17884)
!17897 = !DILocation(line: 618, column: 12, scope: !17884)
!17898 = !DILocation(line: 618, column: 3, scope: !17884)
!17899 = !DILocation(line: 618, column: 10, scope: !17884)
!17900 = !DILocation(line: 619, column: 42, scope: !17884)
!17901 = !DILocation(line: 619, column: 47, scope: !17884)
!17902 = !DILocation(line: 619, column: 45, scope: !17884)
!17903 = !DILocation(line: 619, column: 57, scope: !17884)
!17904 = !DILocation(line: 619, column: 55, scope: !17884)
!17905 = !DILocation(line: 619, column: 67, scope: !17884)
!17906 = !DILocation(line: 619, column: 71, scope: !17884)
!17907 = !DILocation(line: 619, column: 69, scope: !17884)
!17908 = !DILocation(line: 619, column: 81, scope: !17884)
!17909 = !DILocation(line: 619, column: 79, scope: !17884)
!17910 = !DILocation(line: 619, column: 65, scope: !17884)
!17911 = !DILocation(line: 619, column: 90, scope: !17884)
!17912 = !DILocation(line: 619, column: 27, scope: !17884)
!17913 = !DILocation(line: 619, column: 12, scope: !17884)
!17914 = !DILocation(line: 619, column: 3, scope: !17884)
!17915 = !DILocation(line: 619, column: 10, scope: !17884)
!17916 = !DILocation(line: 620, column: 42, scope: !17884)
!17917 = !DILocation(line: 620, column: 47, scope: !17884)
!17918 = !DILocation(line: 620, column: 45, scope: !17884)
!17919 = !DILocation(line: 620, column: 57, scope: !17884)
!17920 = !DILocation(line: 620, column: 55, scope: !17884)
!17921 = !DILocation(line: 620, column: 67, scope: !17884)
!17922 = !DILocation(line: 620, column: 71, scope: !17884)
!17923 = !DILocation(line: 620, column: 69, scope: !17884)
!17924 = !DILocation(line: 620, column: 81, scope: !17884)
!17925 = !DILocation(line: 620, column: 79, scope: !17884)
!17926 = !DILocation(line: 620, column: 65, scope: !17884)
!17927 = !DILocation(line: 620, column: 90, scope: !17884)
!17928 = !DILocation(line: 620, column: 27, scope: !17884)
!17929 = !DILocation(line: 620, column: 12, scope: !17884)
!17930 = !DILocation(line: 620, column: 3, scope: !17884)
!17931 = !DILocation(line: 620, column: 10, scope: !17884)
!17932 = !DILocation(line: 621, column: 42, scope: !17884)
!17933 = !DILocation(line: 621, column: 27, scope: !17884)
!17934 = !DILocation(line: 621, column: 12, scope: !17884)
!17935 = !DILocation(line: 621, column: 3, scope: !17884)
!17936 = !DILocation(line: 621, column: 10, scope: !17884)
!17937 = !DILocation(line: 622, column: 2, scope: !17884)
!17938 = !DILocation(line: 624, column: 27, scope: !17939)
!17939 = distinct !DILexicalBlock(scope: !17880, file: !9957, line: 623, column: 7)
!17940 = !DILocation(line: 624, column: 40, scope: !17939)
!17941 = !DILocation(line: 624, column: 3, scope: !17939)
!17942 = !DILocation(line: 626, column: 1, scope: !17850)
!17943 = distinct !DISubprogram(name: "add_v2_v2", scope: !4381, file: !4381, line: 284, type: !4361, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17944 = !DILocalVariable(name: "r", arg: 1, scope: !17943, file: !4381, line: 284, type: !216)
!17945 = !DILocation(line: 284, column: 30, scope: !17943)
!17946 = !DILocalVariable(name: "a", arg: 2, scope: !17943, file: !4381, line: 284, type: !1944)
!17947 = !DILocation(line: 284, column: 48, scope: !17943)
!17948 = !DILocation(line: 286, column: 10, scope: !17943)
!17949 = !DILocation(line: 286, column: 2, scope: !17943)
!17950 = !DILocation(line: 286, column: 7, scope: !17943)
!17951 = !DILocation(line: 287, column: 10, scope: !17943)
!17952 = !DILocation(line: 287, column: 2, scope: !17943)
!17953 = !DILocation(line: 287, column: 7, scope: !17943)
!17954 = !DILocation(line: 288, column: 1, scope: !17943)
!17955 = distinct !DISubprogram(name: "mul_v4_fl", scope: !4381, file: !4381, line: 419, type: !9830, scopeLine: 420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17956 = !DILocalVariable(name: "r", arg: 1, scope: !17955, file: !4381, line: 419, type: !216)
!17957 = !DILocation(line: 419, column: 30, scope: !17955)
!17958 = !DILocalVariable(name: "f", arg: 2, scope: !17955, file: !4381, line: 419, type: !184)
!17959 = !DILocation(line: 419, column: 42, scope: !17955)
!17960 = !DILocation(line: 421, column: 10, scope: !17955)
!17961 = !DILocation(line: 421, column: 2, scope: !17955)
!17962 = !DILocation(line: 421, column: 7, scope: !17955)
!17963 = !DILocation(line: 422, column: 10, scope: !17955)
!17964 = !DILocation(line: 422, column: 2, scope: !17955)
!17965 = !DILocation(line: 422, column: 7, scope: !17955)
!17966 = !DILocation(line: 423, column: 10, scope: !17955)
!17967 = !DILocation(line: 423, column: 2, scope: !17955)
!17968 = !DILocation(line: 423, column: 7, scope: !17955)
!17969 = !DILocation(line: 424, column: 10, scope: !17955)
!17970 = !DILocation(line: 424, column: 2, scope: !17955)
!17971 = !DILocation(line: 424, column: 7, scope: !17955)
!17972 = !DILocation(line: 425, column: 1, scope: !17955)
!17973 = distinct !DISubprogram(name: "add_v4_v4", scope: !4381, file: !4381, line: 316, type: !4361, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17974 = !DILocalVariable(name: "r", arg: 1, scope: !17973, file: !4381, line: 316, type: !216)
!17975 = !DILocation(line: 316, column: 30, scope: !17973)
!17976 = !DILocalVariable(name: "a", arg: 2, scope: !17973, file: !4381, line: 316, type: !1944)
!17977 = !DILocation(line: 316, column: 48, scope: !17973)
!17978 = !DILocation(line: 318, column: 10, scope: !17973)
!17979 = !DILocation(line: 318, column: 2, scope: !17973)
!17980 = !DILocation(line: 318, column: 7, scope: !17973)
!17981 = !DILocation(line: 319, column: 10, scope: !17973)
!17982 = !DILocation(line: 319, column: 2, scope: !17973)
!17983 = !DILocation(line: 319, column: 7, scope: !17973)
!17984 = !DILocation(line: 320, column: 10, scope: !17973)
!17985 = !DILocation(line: 320, column: 2, scope: !17973)
!17986 = !DILocation(line: 320, column: 7, scope: !17973)
!17987 = !DILocation(line: 321, column: 10, scope: !17973)
!17988 = !DILocation(line: 321, column: 2, scope: !17973)
!17989 = !DILocation(line: 321, column: 7, scope: !17973)
!17990 = !DILocation(line: 322, column: 1, scope: !17973)
!17991 = distinct !DISubprogram(name: "rgb_to_grayscale", scope: !4360, file: !4360, line: 220, type: !9790, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!17992 = !DILocalVariable(name: "rgb", arg: 1, scope: !17991, file: !4360, line: 220, type: !1944)
!17993 = !DILocation(line: 220, column: 44, scope: !17991)
!17994 = !DILocation(line: 222, column: 16, scope: !17991)
!17995 = !DILocation(line: 222, column: 14, scope: !17991)
!17996 = !DILocation(line: 222, column: 33, scope: !17991)
!17997 = !DILocation(line: 222, column: 31, scope: !17991)
!17998 = !DILocation(line: 222, column: 23, scope: !17991)
!17999 = !DILocation(line: 222, column: 50, scope: !17991)
!18000 = !DILocation(line: 222, column: 48, scope: !17991)
!18001 = !DILocation(line: 222, column: 40, scope: !17991)
!18002 = !DILocation(line: 222, column: 2, scope: !17991)
!18003 = distinct !DISubprogram(name: "blend_color_add_float", scope: !9957, file: !9957, line: 648, type: !9770, scopeLine: 649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!18004 = !DILocalVariable(name: "dst", arg: 1, scope: !18003, file: !9957, line: 648, type: !216)
!18005 = !DILocation(line: 648, column: 42, scope: !18003)
!18006 = !DILocalVariable(name: "src1", arg: 2, scope: !18003, file: !9957, line: 648, type: !1944)
!18007 = !DILocation(line: 648, column: 62, scope: !18003)
!18008 = !DILocalVariable(name: "src2", arg: 3, scope: !18003, file: !9957, line: 648, type: !1944)
!18009 = !DILocation(line: 648, column: 83, scope: !18003)
!18010 = !DILocation(line: 650, column: 6, scope: !18011)
!18011 = distinct !DILexicalBlock(scope: !18003, file: !9957, line: 650, column: 6)
!18012 = !DILocation(line: 650, column: 14, scope: !18011)
!18013 = !DILocation(line: 650, column: 6, scope: !18003)
!18014 = !DILocation(line: 652, column: 12, scope: !18015)
!18015 = distinct !DILexicalBlock(scope: !18011, file: !9957, line: 650, column: 23)
!18016 = !DILocation(line: 652, column: 22, scope: !18015)
!18017 = !DILocation(line: 652, column: 32, scope: !18015)
!18018 = !DILocation(line: 652, column: 30, scope: !18015)
!18019 = !DILocation(line: 652, column: 20, scope: !18015)
!18020 = !DILocation(line: 652, column: 3, scope: !18015)
!18021 = !DILocation(line: 652, column: 10, scope: !18015)
!18022 = !DILocation(line: 653, column: 12, scope: !18015)
!18023 = !DILocation(line: 653, column: 22, scope: !18015)
!18024 = !DILocation(line: 653, column: 32, scope: !18015)
!18025 = !DILocation(line: 653, column: 30, scope: !18015)
!18026 = !DILocation(line: 653, column: 20, scope: !18015)
!18027 = !DILocation(line: 653, column: 3, scope: !18015)
!18028 = !DILocation(line: 653, column: 10, scope: !18015)
!18029 = !DILocation(line: 654, column: 12, scope: !18015)
!18030 = !DILocation(line: 654, column: 22, scope: !18015)
!18031 = !DILocation(line: 654, column: 32, scope: !18015)
!18032 = !DILocation(line: 654, column: 30, scope: !18015)
!18033 = !DILocation(line: 654, column: 20, scope: !18015)
!18034 = !DILocation(line: 654, column: 3, scope: !18015)
!18035 = !DILocation(line: 654, column: 10, scope: !18015)
!18036 = !DILocation(line: 655, column: 12, scope: !18015)
!18037 = !DILocation(line: 655, column: 3, scope: !18015)
!18038 = !DILocation(line: 655, column: 10, scope: !18015)
!18039 = !DILocation(line: 656, column: 2, scope: !18015)
!18040 = !DILocation(line: 659, column: 14, scope: !18041)
!18041 = distinct !DILexicalBlock(scope: !18011, file: !9957, line: 657, column: 7)
!18042 = !DILocation(line: 659, column: 19, scope: !18041)
!18043 = !DILocation(line: 659, column: 3, scope: !18041)
!18044 = !DILocation(line: 661, column: 1, scope: !18003)
!18045 = distinct !DISubprogram(name: "f_to_char", scope: !3, file: !3, line: 112, type: !18046, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!18046 = !DISubroutineType(types: !18047)
!18047 = !{!233, !1778}
!18048 = !DILocalVariable(name: "val", arg: 1, scope: !18045, file: !3, line: 112, type: !1778)
!18049 = !DILocation(line: 112, column: 48, scope: !18045)
!18050 = !DILocation(line: 114, column: 9, scope: !18045)
!18051 = !DILocation(line: 114, column: 2, scope: !18045)
!18052 = distinct !DISubprogram(name: "mul_v3_v3", scope: !4381, file: !4381, line: 412, type: !4361, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!18053 = !DILocalVariable(name: "r", arg: 1, scope: !18052, file: !4381, line: 412, type: !216)
!18054 = !DILocation(line: 412, column: 30, scope: !18052)
!18055 = !DILocalVariable(name: "a", arg: 2, scope: !18052, file: !4381, line: 412, type: !1944)
!18056 = !DILocation(line: 412, column: 48, scope: !18052)
!18057 = !DILocation(line: 414, column: 10, scope: !18052)
!18058 = !DILocation(line: 414, column: 2, scope: !18052)
!18059 = !DILocation(line: 414, column: 7, scope: !18052)
!18060 = !DILocation(line: 415, column: 10, scope: !18052)
!18061 = !DILocation(line: 415, column: 2, scope: !18052)
!18062 = !DILocation(line: 415, column: 7, scope: !18052)
!18063 = !DILocation(line: 416, column: 10, scope: !18052)
!18064 = !DILocation(line: 416, column: 2, scope: !18052)
!18065 = !DILocation(line: 416, column: 7, scope: !18052)
!18066 = !DILocation(line: 417, column: 1, scope: !18052)
!18067 = distinct !DISubprogram(name: "project_paint_pixel_sizeof", scope: !3, file: !3, line: 1348, type: !18068, scopeLine: 1349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!18068 = !DISubroutineType(types: !18069)
!18069 = !{!22, !1946}
!18070 = !DILocalVariable(name: "tool", arg: 1, scope: !18067, file: !3, line: 1348, type: !1946)
!18071 = !DILocation(line: 1348, column: 51, scope: !18067)
!18072 = !DILocation(line: 1350, column: 7, scope: !18073)
!18073 = distinct !DILexicalBlock(scope: !18067, file: !3, line: 1350, column: 6)
!18074 = !DILocation(line: 1350, column: 12, scope: !18073)
!18075 = !DILocation(line: 1350, column: 33, scope: !18073)
!18076 = !DILocation(line: 1350, column: 37, scope: !18073)
!18077 = !DILocation(line: 1350, column: 42, scope: !18073)
!18078 = !DILocation(line: 1350, column: 6, scope: !18067)
!18079 = !DILocation(line: 1351, column: 3, scope: !18080)
!18080 = distinct !DILexicalBlock(scope: !18073, file: !3, line: 1350, column: 64)
!18081 = !DILocation(line: 1354, column: 3, scope: !18082)
!18082 = distinct !DILexicalBlock(scope: !18073, file: !3, line: 1353, column: 7)
!18083 = !DILocation(line: 1356, column: 1, scope: !18067)
!18084 = distinct !DISubprogram(name: "normal_short_to_float_v3", scope: !4381, file: !4381, line: 835, type: !18085, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!18085 = !DISubroutineType(types: !18086)
!18086 = !{null, !216, !1945}
!18087 = !DILocalVariable(name: "out", arg: 1, scope: !18084, file: !4381, line: 835, type: !216)
!18088 = !DILocation(line: 835, column: 45, scope: !18084)
!18089 = !DILocalVariable(name: "in", arg: 2, scope: !18084, file: !4381, line: 835, type: !1945)
!18090 = !DILocation(line: 835, column: 65, scope: !18084)
!18091 = !DILocation(line: 837, column: 11, scope: !18084)
!18092 = !DILocation(line: 837, column: 17, scope: !18084)
!18093 = !DILocation(line: 837, column: 2, scope: !18084)
!18094 = !DILocation(line: 837, column: 9, scope: !18084)
!18095 = !DILocation(line: 838, column: 11, scope: !18084)
!18096 = !DILocation(line: 838, column: 17, scope: !18084)
!18097 = !DILocation(line: 838, column: 2, scope: !18084)
!18098 = !DILocation(line: 838, column: 9, scope: !18084)
!18099 = !DILocation(line: 839, column: 11, scope: !18084)
!18100 = !DILocation(line: 839, column: 17, scope: !18084)
!18101 = !DILocation(line: 839, column: 2, scope: !18084)
!18102 = !DILocation(line: 839, column: 9, scope: !18084)
!18103 = !DILocation(line: 840, column: 1, scope: !18084)
!18104 = distinct !DISubprogram(name: "DM_origindex_mface_mpoly", scope: !214, file: !214, line: 767, type: !18105, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!18105 = !DISubroutineType(types: !18106)
!18106 = !{!22, !5125, !5125, !5126}
!18107 = !DILocalVariable(name: "index_mf_to_mpoly", arg: 1, scope: !18104, file: !214, line: 767, type: !5125)
!18108 = !DILocation(line: 767, column: 52, scope: !18104)
!18109 = !DILocalVariable(name: "index_mp_to_orig", arg: 2, scope: !18104, file: !214, line: 767, type: !5125)
!18110 = !DILocation(line: 767, column: 82, scope: !18104)
!18111 = !DILocalVariable(name: "i", arg: 3, scope: !18104, file: !214, line: 767, type: !5126)
!18112 = !DILocation(line: 767, column: 110, scope: !18104)
!18113 = !DILocalVariable(name: "j", scope: !18104, file: !214, line: 769, type: !5126)
!18114 = !DILocation(line: 769, column: 12, scope: !18104)
!18115 = !DILocation(line: 769, column: 16, scope: !18104)
!18116 = !DILocation(line: 769, column: 34, scope: !18104)
!18117 = !DILocation(line: 770, column: 10, scope: !18104)
!18118 = !DILocation(line: 770, column: 12, scope: !18104)
!18119 = !DILocation(line: 770, column: 9, scope: !18104)
!18120 = !DILocation(line: 770, column: 34, scope: !18104)
!18121 = !DILocation(line: 770, column: 53, scope: !18104)
!18122 = !DILocation(line: 770, column: 70, scope: !18104)
!18123 = !DILocation(line: 770, column: 75, scope: !18104)
!18124 = !DILocation(line: 770, column: 2, scope: !18104)
!18125 = distinct !DISubprogram(name: "project_paint_face_paint_slot", scope: !3, file: !3, line: 363, type: !18126, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!18126 = !DISubroutineType(types: !18127)
!18127 = !{!5093, !9396, !22}
!18128 = !DILocalVariable(name: "ps", arg: 1, scope: !18125, file: !3, line: 363, type: !9396)
!18129 = !DILocation(line: 363, column: 74, scope: !18125)
!18130 = !DILocalVariable(name: "face_index", arg: 2, scope: !18125, file: !3, line: 363, type: !22)
!18131 = !DILocation(line: 363, column: 82, scope: !18125)
!18132 = !DILocalVariable(name: "mf", scope: !18125, file: !3, line: 365, type: !3852)
!18133 = !DILocation(line: 365, column: 9, scope: !18125)
!18134 = !DILocation(line: 365, column: 14, scope: !18125)
!18135 = !DILocation(line: 365, column: 18, scope: !18125)
!18136 = !DILocation(line: 365, column: 29, scope: !18125)
!18137 = !DILocation(line: 365, column: 27, scope: !18125)
!18138 = !DILocalVariable(name: "ma", scope: !18125, file: !3, line: 366, type: !7763)
!18139 = !DILocation(line: 366, column: 12, scope: !18125)
!18140 = !DILocation(line: 366, column: 17, scope: !18125)
!18141 = !DILocation(line: 366, column: 21, scope: !18125)
!18142 = !DILocation(line: 366, column: 25, scope: !18125)
!18143 = !DILocation(line: 366, column: 29, scope: !18125)
!18144 = !DILocation(line: 366, column: 33, scope: !18125)
!18145 = !DILocation(line: 367, column: 9, scope: !18125)
!18146 = !DILocation(line: 367, column: 14, scope: !18125)
!18147 = !DILocation(line: 367, column: 18, scope: !18125)
!18148 = !DILocation(line: 367, column: 33, scope: !18125)
!18149 = !DILocation(line: 367, column: 37, scope: !18125)
!18150 = !DILocation(line: 367, column: 31, scope: !18125)
!18151 = !DILocation(line: 367, column: 2, scope: !18125)
!18152 = distinct !DISubprogram(name: "project_paint_face_clone_slot", scope: !3, file: !3, line: 383, type: !18126, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!18153 = !DILocalVariable(name: "ps", arg: 1, scope: !18152, file: !3, line: 383, type: !9396)
!18154 = !DILocation(line: 383, column: 74, scope: !18152)
!18155 = !DILocalVariable(name: "face_index", arg: 2, scope: !18152, file: !3, line: 383, type: !22)
!18156 = !DILocation(line: 383, column: 82, scope: !18152)
!18157 = !DILocalVariable(name: "mf", scope: !18152, file: !3, line: 385, type: !3852)
!18158 = !DILocation(line: 385, column: 9, scope: !18152)
!18159 = !DILocation(line: 385, column: 14, scope: !18152)
!18160 = !DILocation(line: 385, column: 18, scope: !18152)
!18161 = !DILocation(line: 385, column: 29, scope: !18152)
!18162 = !DILocation(line: 385, column: 27, scope: !18152)
!18163 = !DILocalVariable(name: "ma", scope: !18152, file: !3, line: 386, type: !7763)
!18164 = !DILocation(line: 386, column: 12, scope: !18152)
!18165 = !DILocation(line: 386, column: 17, scope: !18152)
!18166 = !DILocation(line: 386, column: 21, scope: !18152)
!18167 = !DILocation(line: 386, column: 25, scope: !18152)
!18168 = !DILocation(line: 386, column: 29, scope: !18152)
!18169 = !DILocation(line: 386, column: 33, scope: !18152)
!18170 = !DILocation(line: 387, column: 9, scope: !18152)
!18171 = !DILocation(line: 387, column: 14, scope: !18152)
!18172 = !DILocation(line: 387, column: 18, scope: !18152)
!18173 = !DILocation(line: 387, column: 33, scope: !18152)
!18174 = !DILocation(line: 387, column: 37, scope: !18152)
!18175 = !DILocation(line: 387, column: 31, scope: !18152)
!18176 = !DILocation(line: 387, column: 2, scope: !18152)
!18177 = distinct !DISubprogram(name: "project_paint_delayed_face_init", scope: !3, file: !3, line: 2849, type: !18178, scopeLine: 2850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!18178 = !DISubroutineType(types: !18179)
!18179 = !{null, !3674, !11212, !5126}
!18180 = !DILocalVariable(name: "ps", arg: 1, scope: !18177, file: !3, line: 2849, type: !3674)
!18181 = !DILocation(line: 2849, column: 61, scope: !18177)
!18182 = !DILocalVariable(name: "mf", arg: 2, scope: !18177, file: !3, line: 2849, type: !11212)
!18183 = !DILocation(line: 2849, column: 78, scope: !18177)
!18184 = !DILocalVariable(name: "face_index", arg: 3, scope: !18177, file: !3, line: 2849, type: !5126)
!18185 = !DILocation(line: 2849, column: 92, scope: !18177)
!18186 = !DILocalVariable(name: "min", scope: !18177, file: !3, line: 2851, type: !860)
!18187 = !DILocation(line: 2851, column: 8, scope: !18177)
!18188 = !DILocalVariable(name: "max", scope: !18177, file: !3, line: 2851, type: !860)
!18189 = !DILocation(line: 2851, column: 16, scope: !18177)
!18190 = !DILocalVariable(name: "vCoSS", scope: !18177, file: !3, line: 2851, type: !216)
!18191 = !DILocation(line: 2851, column: 25, scope: !18177)
!18192 = !DILocalVariable(name: "bucketMin", scope: !18177, file: !3, line: 2852, type: !2348)
!18193 = !DILocation(line: 2852, column: 6, scope: !18177)
!18194 = !DILocalVariable(name: "bucketMax", scope: !18177, file: !3, line: 2852, type: !2348)
!18195 = !DILocation(line: 2852, column: 20, scope: !18177)
!18196 = !DILocalVariable(name: "fidx", scope: !18177, file: !3, line: 2853, type: !22)
!18197 = !DILocation(line: 2853, column: 6, scope: !18177)
!18198 = !DILocalVariable(name: "bucket_x", scope: !18177, file: !3, line: 2853, type: !22)
!18199 = !DILocation(line: 2853, column: 12, scope: !18177)
!18200 = !DILocalVariable(name: "bucket_y", scope: !18177, file: !3, line: 2853, type: !22)
!18201 = !DILocation(line: 2853, column: 22, scope: !18177)
!18202 = !DILocalVariable(name: "has_x_isect", scope: !18177, file: !3, line: 2854, type: !22)
!18203 = !DILocation(line: 2854, column: 6, scope: !18177)
!18204 = !DILocalVariable(name: "has_isect", scope: !18177, file: !3, line: 2854, type: !22)
!18205 = !DILocation(line: 2854, column: 24, scope: !18177)
!18206 = !DILocalVariable(name: "arena", scope: !18177, file: !3, line: 2855, type: !3868)
!18207 = !DILocation(line: 2855, column: 12, scope: !18177)
!18208 = !DILocation(line: 2855, column: 20, scope: !18177)
!18209 = !DILocation(line: 2855, column: 24, scope: !18177)
!18210 = !DILocation(line: 2857, column: 2, scope: !18211)
!18211 = distinct !DILexicalBlock(scope: !18177, file: !3, line: 2857, column: 2)
!18212 = !DILocation(line: 2859, column: 9, scope: !18177)
!18213 = !DILocation(line: 2859, column: 13, scope: !18177)
!18214 = !DILocation(line: 2859, column: 7, scope: !18177)
!18215 = !DILocation(line: 2860, column: 2, scope: !18177)
!18216 = !DILocation(line: 2861, column: 11, scope: !18217)
!18217 = distinct !DILexicalBlock(scope: !18177, file: !3, line: 2860, column: 5)
!18218 = !DILocation(line: 2861, column: 15, scope: !18217)
!18219 = !DILocation(line: 2861, column: 31, scope: !18217)
!18220 = !DILocation(line: 2861, column: 35, scope: !18217)
!18221 = !DILocation(line: 2861, column: 40, scope: !18217)
!18222 = !DILocation(line: 2861, column: 38, scope: !18217)
!18223 = !DILocation(line: 2861, column: 28, scope: !18217)
!18224 = !DILocation(line: 2861, column: 9, scope: !18217)
!18225 = !DILocation(line: 2862, column: 18, scope: !18217)
!18226 = !DILocation(line: 2862, column: 23, scope: !18217)
!18227 = !DILocation(line: 2862, column: 28, scope: !18217)
!18228 = !DILocation(line: 2862, column: 3, scope: !18217)
!18229 = !DILocation(line: 2863, column: 2, scope: !18217)
!18230 = !DILocation(line: 2863, column: 15, scope: !18177)
!18231 = distinct !{!18231, !18215, !18232}
!18232 = !DILocation(line: 2863, column: 17, scope: !18177)
!18233 = !DILocation(line: 2865, column: 30, scope: !18177)
!18234 = !DILocation(line: 2865, column: 34, scope: !18177)
!18235 = !DILocation(line: 2865, column: 39, scope: !18177)
!18236 = !DILocation(line: 2865, column: 44, scope: !18177)
!18237 = !DILocation(line: 2865, column: 55, scope: !18177)
!18238 = !DILocation(line: 2865, column: 2, scope: !18177)
!18239 = !DILocation(line: 2867, column: 18, scope: !18240)
!18240 = distinct !DILexicalBlock(scope: !18177, file: !3, line: 2867, column: 2)
!18241 = !DILocation(line: 2867, column: 16, scope: !18240)
!18242 = !DILocation(line: 2867, column: 7, scope: !18240)
!18243 = !DILocation(line: 2867, column: 32, scope: !18244)
!18244 = distinct !DILexicalBlock(scope: !18240, file: !3, line: 2867, column: 2)
!18245 = !DILocation(line: 2867, column: 43, scope: !18244)
!18246 = !DILocation(line: 2867, column: 41, scope: !18244)
!18247 = !DILocation(line: 2867, column: 2, scope: !18240)
!18248 = !DILocation(line: 2868, column: 15, scope: !18249)
!18249 = distinct !DILexicalBlock(scope: !18244, file: !3, line: 2867, column: 69)
!18250 = !DILocation(line: 2869, column: 19, scope: !18251)
!18251 = distinct !DILexicalBlock(scope: !18249, file: !3, line: 2869, column: 3)
!18252 = !DILocation(line: 2869, column: 17, scope: !18251)
!18253 = !DILocation(line: 2869, column: 8, scope: !18251)
!18254 = !DILocation(line: 2869, column: 33, scope: !18255)
!18255 = distinct !DILexicalBlock(scope: !18251, file: !3, line: 2869, column: 3)
!18256 = !DILocation(line: 2869, column: 44, scope: !18255)
!18257 = !DILocation(line: 2869, column: 42, scope: !18255)
!18258 = !DILocation(line: 2869, column: 3, scope: !18251)
!18259 = !DILocation(line: 2870, column: 34, scope: !18260)
!18260 = distinct !DILexicalBlock(scope: !18261, file: !3, line: 2870, column: 8)
!18261 = distinct !DILexicalBlock(scope: !18255, file: !3, line: 2869, column: 70)
!18262 = !DILocation(line: 2870, column: 38, scope: !18260)
!18263 = !DILocation(line: 2870, column: 48, scope: !18260)
!18264 = !DILocation(line: 2870, column: 58, scope: !18260)
!18265 = !DILocation(line: 2870, column: 8, scope: !18260)
!18266 = !DILocation(line: 2870, column: 8, scope: !18261)
!18267 = !DILocalVariable(name: "bucket_index", scope: !18268, file: !3, line: 2871, type: !22)
!18268 = distinct !DILexicalBlock(scope: !18260, file: !3, line: 2870, column: 63)
!18269 = !DILocation(line: 2871, column: 9, scope: !18268)
!18270 = !DILocation(line: 2871, column: 24, scope: !18268)
!18271 = !DILocation(line: 2871, column: 36, scope: !18268)
!18272 = !DILocation(line: 2871, column: 47, scope: !18268)
!18273 = !DILocation(line: 2871, column: 51, scope: !18268)
!18274 = !DILocation(line: 2871, column: 45, scope: !18268)
!18275 = !DILocation(line: 2871, column: 33, scope: !18268)
!18276 = !DILocation(line: 2873, column: 14, scope: !18268)
!18277 = !DILocation(line: 2873, column: 18, scope: !18268)
!18278 = !DILocation(line: 2873, column: 30, scope: !18268)
!18279 = !DILocation(line: 2874, column: 13, scope: !18268)
!18280 = !DILocation(line: 2875, column: 13, scope: !18268)
!18281 = !DILocation(line: 2872, column: 5, scope: !18268)
!18282 = !DILocation(line: 2878, column: 29, scope: !18268)
!18283 = !DILocation(line: 2878, column: 17, scope: !18268)
!18284 = !DILocation(line: 2879, column: 4, scope: !18268)
!18285 = !DILocation(line: 2880, column: 13, scope: !18286)
!18286 = distinct !DILexicalBlock(scope: !18260, file: !3, line: 2880, column: 13)
!18287 = !DILocation(line: 2880, column: 13, scope: !18260)
!18288 = !DILocation(line: 2882, column: 5, scope: !18289)
!18289 = distinct !DILexicalBlock(scope: !18286, file: !3, line: 2880, column: 26)
!18290 = !DILocation(line: 2884, column: 3, scope: !18261)
!18291 = !DILocation(line: 2869, column: 66, scope: !18255)
!18292 = !DILocation(line: 2869, column: 3, scope: !18255)
!18293 = distinct !{!18293, !18258, !18294}
!18294 = !DILocation(line: 2884, column: 3, scope: !18251)
!18295 = !DILocation(line: 2887, column: 7, scope: !18296)
!18296 = distinct !DILexicalBlock(scope: !18249, file: !3, line: 2887, column: 7)
!18297 = !DILocation(line: 2887, column: 19, scope: !18296)
!18298 = !DILocation(line: 2887, column: 24, scope: !18296)
!18299 = !DILocation(line: 2887, column: 27, scope: !18296)
!18300 = !DILocation(line: 2887, column: 7, scope: !18249)
!18301 = !DILocation(line: 2888, column: 4, scope: !18302)
!18302 = distinct !DILexicalBlock(scope: !18296, file: !3, line: 2887, column: 38)
!18303 = !DILocation(line: 2890, column: 2, scope: !18249)
!18304 = !DILocation(line: 2867, column: 65, scope: !18244)
!18305 = !DILocation(line: 2867, column: 2, scope: !18244)
!18306 = distinct !{!18306, !18247, !18307}
!18307 = !DILocation(line: 2890, column: 2, scope: !18240)
!18308 = !DILocation(line: 2893, column: 6, scope: !18309)
!18309 = distinct !DILexicalBlock(scope: !18177, file: !3, line: 2893, column: 6)
!18310 = !DILocation(line: 2893, column: 10, scope: !18309)
!18311 = !DILocation(line: 2893, column: 24, scope: !18309)
!18312 = !DILocation(line: 2893, column: 6, scope: !18177)
!18313 = !DILocation(line: 2894, column: 8, scope: !18314)
!18314 = distinct !DILexicalBlock(scope: !18315, file: !3, line: 2894, column: 7)
!18315 = distinct !DILexicalBlock(scope: !18309, file: !3, line: 2893, column: 32)
!18316 = !DILocation(line: 2894, column: 12, scope: !18314)
!18317 = !DILocation(line: 2894, column: 7, scope: !18315)
!18318 = !DILocation(line: 2895, column: 4, scope: !18319)
!18319 = distinct !DILexicalBlock(scope: !18314, file: !3, line: 2894, column: 16)
!18320 = !DILocation(line: 2895, column: 8, scope: !18319)
!18321 = !DILocation(line: 2895, column: 22, scope: !18319)
!18322 = !DILocation(line: 2895, column: 34, scope: !18319)
!18323 = !DILocation(line: 2896, column: 3, scope: !18319)
!18324 = !DILocation(line: 2897, column: 5, scope: !18315)
!18325 = !DILocation(line: 2897, column: 9, scope: !18315)
!18326 = !DILocation(line: 2897, column: 21, scope: !18315)
!18327 = !DILocation(line: 2897, column: 4, scope: !18315)
!18328 = !DILocation(line: 2897, column: 3, scope: !18315)
!18329 = !DILocation(line: 2897, column: 33, scope: !18315)
!18330 = !DILocation(line: 2898, column: 2, scope: !18315)
!18331 = !DILocation(line: 2900, column: 1, scope: !18177)
!18332 = distinct !DISubprogram(name: "project_bucket_face_isect", scope: !3, file: !3, line: 2782, type: !18333, scopeLine: 2783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!18333 = !DISubroutineType(types: !18334)
!18334 = !{!233, !3674, !22, !22, !11212}
!18335 = !DILocalVariable(name: "ps", arg: 1, scope: !18332, file: !3, line: 2782, type: !3674)
!18336 = !DILocation(line: 2782, column: 55, scope: !18332)
!18337 = !DILocalVariable(name: "bucket_x", arg: 2, scope: !18332, file: !3, line: 2782, type: !22)
!18338 = !DILocation(line: 2782, column: 63, scope: !18332)
!18339 = !DILocalVariable(name: "bucket_y", arg: 3, scope: !18332, file: !3, line: 2782, type: !22)
!18340 = !DILocation(line: 2782, column: 77, scope: !18332)
!18341 = !DILocalVariable(name: "mf", arg: 4, scope: !18332, file: !3, line: 2782, type: !11212)
!18342 = !DILocation(line: 2782, column: 100, scope: !18332)
!18343 = !DILocalVariable(name: "bucket_bounds", scope: !18332, file: !3, line: 2785, type: !840)
!18344 = !DILocation(line: 2785, column: 7, scope: !18332)
!18345 = !DILocalVariable(name: "p1", scope: !18332, file: !3, line: 2786, type: !860)
!18346 = !DILocation(line: 2786, column: 8, scope: !18332)
!18347 = !DILocalVariable(name: "p2", scope: !18332, file: !3, line: 2786, type: !860)
!18348 = !DILocation(line: 2786, column: 15, scope: !18332)
!18349 = !DILocalVariable(name: "p3", scope: !18332, file: !3, line: 2786, type: !860)
!18350 = !DILocation(line: 2786, column: 22, scope: !18332)
!18351 = !DILocalVariable(name: "p4", scope: !18332, file: !3, line: 2786, type: !860)
!18352 = !DILocation(line: 2786, column: 29, scope: !18332)
!18353 = !DILocalVariable(name: "v", scope: !18332, file: !3, line: 2787, type: !1944)
!18354 = !DILocation(line: 2787, column: 15, scope: !18332)
!18355 = !DILocalVariable(name: "v1", scope: !18332, file: !3, line: 2787, type: !1944)
!18356 = !DILocation(line: 2787, column: 19, scope: !18332)
!18357 = !DILocalVariable(name: "v2", scope: !18332, file: !3, line: 2787, type: !1944)
!18358 = !DILocation(line: 2787, column: 24, scope: !18332)
!18359 = !DILocalVariable(name: "v3", scope: !18332, file: !3, line: 2787, type: !1944)
!18360 = !DILocation(line: 2787, column: 29, scope: !18332)
!18361 = !DILocalVariable(name: "v4", scope: !18332, file: !3, line: 2787, type: !1944)
!18362 = !DILocation(line: 2787, column: 34, scope: !18332)
!18363 = !DILocalVariable(name: "fidx", scope: !18332, file: !3, line: 2788, type: !22)
!18364 = !DILocation(line: 2788, column: 6, scope: !18332)
!18365 = !DILocation(line: 2790, column: 24, scope: !18332)
!18366 = !DILocation(line: 2790, column: 28, scope: !18332)
!18367 = !DILocation(line: 2790, column: 38, scope: !18332)
!18368 = !DILocation(line: 2790, column: 2, scope: !18332)
!18369 = !DILocation(line: 2794, column: 9, scope: !18332)
!18370 = !DILocation(line: 2794, column: 13, scope: !18332)
!18371 = !DILocation(line: 2794, column: 7, scope: !18332)
!18372 = !DILocation(line: 2795, column: 2, scope: !18332)
!18373 = !DILocation(line: 2796, column: 7, scope: !18374)
!18374 = distinct !DILexicalBlock(scope: !18332, file: !3, line: 2795, column: 5)
!18375 = !DILocation(line: 2796, column: 11, scope: !18374)
!18376 = !DILocation(line: 2796, column: 28, scope: !18374)
!18377 = !DILocation(line: 2796, column: 32, scope: !18374)
!18378 = !DILocation(line: 2796, column: 37, scope: !18374)
!18379 = !DILocation(line: 2796, column: 35, scope: !18374)
!18380 = !DILocation(line: 2796, column: 25, scope: !18374)
!18381 = !DILocation(line: 2796, column: 5, scope: !18374)
!18382 = !DILocation(line: 2797, column: 43, scope: !18383)
!18383 = distinct !DILexicalBlock(scope: !18374, file: !3, line: 2797, column: 7)
!18384 = !DILocation(line: 2797, column: 7, scope: !18383)
!18385 = !DILocation(line: 2797, column: 7, scope: !18374)
!18386 = !DILocation(line: 2798, column: 4, scope: !18387)
!18387 = distinct !DILexicalBlock(scope: !18383, file: !3, line: 2797, column: 47)
!18388 = !DILocation(line: 2800, column: 2, scope: !18374)
!18389 = !DILocation(line: 2800, column: 15, scope: !18332)
!18390 = distinct !{!18390, !18372, !18391}
!18391 = !DILocation(line: 2800, column: 17, scope: !18332)
!18392 = !DILocation(line: 2802, column: 7, scope: !18332)
!18393 = !DILocation(line: 2802, column: 11, scope: !18332)
!18394 = !DILocation(line: 2802, column: 24, scope: !18332)
!18395 = !DILocation(line: 2802, column: 28, scope: !18332)
!18396 = !DILocation(line: 2802, column: 5, scope: !18332)
!18397 = !DILocation(line: 2803, column: 7, scope: !18332)
!18398 = !DILocation(line: 2803, column: 11, scope: !18332)
!18399 = !DILocation(line: 2803, column: 24, scope: !18332)
!18400 = !DILocation(line: 2803, column: 28, scope: !18332)
!18401 = !DILocation(line: 2803, column: 5, scope: !18332)
!18402 = !DILocation(line: 2804, column: 7, scope: !18332)
!18403 = !DILocation(line: 2804, column: 11, scope: !18332)
!18404 = !DILocation(line: 2804, column: 24, scope: !18332)
!18405 = !DILocation(line: 2804, column: 28, scope: !18332)
!18406 = !DILocation(line: 2804, column: 5, scope: !18332)
!18407 = !DILocation(line: 2805, column: 6, scope: !18408)
!18408 = distinct !DILexicalBlock(scope: !18332, file: !3, line: 2805, column: 6)
!18409 = !DILocation(line: 2805, column: 10, scope: !18408)
!18410 = !DILocation(line: 2805, column: 6, scope: !18332)
!18411 = !DILocation(line: 2806, column: 8, scope: !18412)
!18412 = distinct !DILexicalBlock(scope: !18408, file: !3, line: 2805, column: 14)
!18413 = !DILocation(line: 2806, column: 12, scope: !18412)
!18414 = !DILocation(line: 2806, column: 25, scope: !18412)
!18415 = !DILocation(line: 2806, column: 29, scope: !18412)
!18416 = !DILocation(line: 2806, column: 6, scope: !18412)
!18417 = !DILocation(line: 2807, column: 2, scope: !18412)
!18418 = !DILocation(line: 2809, column: 24, scope: !18332)
!18419 = !DILocation(line: 2809, column: 2, scope: !18332)
!18420 = !DILocation(line: 2809, column: 8, scope: !18332)
!18421 = !DILocation(line: 2809, column: 52, scope: !18332)
!18422 = !DILocation(line: 2809, column: 30, scope: !18332)
!18423 = !DILocation(line: 2809, column: 36, scope: !18332)
!18424 = !DILocation(line: 2810, column: 24, scope: !18332)
!18425 = !DILocation(line: 2810, column: 2, scope: !18332)
!18426 = !DILocation(line: 2810, column: 8, scope: !18332)
!18427 = !DILocation(line: 2810, column: 52, scope: !18332)
!18428 = !DILocation(line: 2810, column: 30, scope: !18332)
!18429 = !DILocation(line: 2810, column: 36, scope: !18332)
!18430 = !DILocation(line: 2811, column: 24, scope: !18332)
!18431 = !DILocation(line: 2811, column: 2, scope: !18332)
!18432 = !DILocation(line: 2811, column: 8, scope: !18332)
!18433 = !DILocation(line: 2811, column: 52, scope: !18332)
!18434 = !DILocation(line: 2811, column: 30, scope: !18332)
!18435 = !DILocation(line: 2811, column: 36, scope: !18332)
!18436 = !DILocation(line: 2812, column: 24, scope: !18332)
!18437 = !DILocation(line: 2812, column: 2, scope: !18332)
!18438 = !DILocation(line: 2812, column: 8, scope: !18332)
!18439 = !DILocation(line: 2812, column: 52, scope: !18332)
!18440 = !DILocation(line: 2812, column: 30, scope: !18332)
!18441 = !DILocation(line: 2812, column: 36, scope: !18332)
!18442 = !DILocation(line: 2814, column: 6, scope: !18443)
!18443 = distinct !DILexicalBlock(scope: !18332, file: !3, line: 2814, column: 6)
!18444 = !DILocation(line: 2814, column: 10, scope: !18443)
!18445 = !DILocation(line: 2814, column: 6, scope: !18332)
!18446 = !DILocation(line: 2815, column: 27, scope: !18447)
!18447 = distinct !DILexicalBlock(scope: !18448, file: !3, line: 2815, column: 7)
!18448 = distinct !DILexicalBlock(scope: !18443, file: !3, line: 2814, column: 14)
!18449 = !DILocation(line: 2815, column: 31, scope: !18447)
!18450 = !DILocation(line: 2815, column: 35, scope: !18447)
!18451 = !DILocation(line: 2815, column: 39, scope: !18447)
!18452 = !DILocation(line: 2815, column: 43, scope: !18447)
!18453 = !DILocation(line: 2815, column: 7, scope: !18447)
!18454 = !DILocation(line: 2815, column: 47, scope: !18447)
!18455 = !DILocation(line: 2816, column: 27, scope: !18447)
!18456 = !DILocation(line: 2816, column: 31, scope: !18447)
!18457 = !DILocation(line: 2816, column: 35, scope: !18447)
!18458 = !DILocation(line: 2816, column: 39, scope: !18447)
!18459 = !DILocation(line: 2816, column: 43, scope: !18447)
!18460 = !DILocation(line: 2816, column: 7, scope: !18447)
!18461 = !DILocation(line: 2816, column: 47, scope: !18447)
!18462 = !DILocation(line: 2817, column: 27, scope: !18447)
!18463 = !DILocation(line: 2817, column: 31, scope: !18447)
!18464 = !DILocation(line: 2817, column: 35, scope: !18447)
!18465 = !DILocation(line: 2817, column: 39, scope: !18447)
!18466 = !DILocation(line: 2817, column: 43, scope: !18447)
!18467 = !DILocation(line: 2817, column: 7, scope: !18447)
!18468 = !DILocation(line: 2817, column: 47, scope: !18447)
!18469 = !DILocation(line: 2818, column: 27, scope: !18447)
!18470 = !DILocation(line: 2818, column: 31, scope: !18447)
!18471 = !DILocation(line: 2818, column: 35, scope: !18447)
!18472 = !DILocation(line: 2818, column: 39, scope: !18447)
!18473 = !DILocation(line: 2818, column: 43, scope: !18447)
!18474 = !DILocation(line: 2818, column: 7, scope: !18447)
!18475 = !DILocation(line: 2818, column: 47, scope: !18447)
!18476 = !DILocation(line: 2821, column: 27, scope: !18447)
!18477 = !DILocation(line: 2821, column: 31, scope: !18447)
!18478 = !DILocation(line: 2821, column: 35, scope: !18447)
!18479 = !DILocation(line: 2821, column: 39, scope: !18447)
!18480 = !DILocation(line: 2821, column: 8, scope: !18447)
!18481 = !DILocation(line: 2821, column: 43, scope: !18447)
!18482 = !DILocation(line: 2821, column: 65, scope: !18447)
!18483 = !DILocation(line: 2821, column: 69, scope: !18447)
!18484 = !DILocation(line: 2821, column: 73, scope: !18447)
!18485 = !DILocation(line: 2821, column: 77, scope: !18447)
!18486 = !DILocation(line: 2821, column: 46, scope: !18447)
!18487 = !DILocation(line: 2821, column: 81, scope: !18447)
!18488 = !DILocation(line: 2821, column: 103, scope: !18447)
!18489 = !DILocation(line: 2821, column: 107, scope: !18447)
!18490 = !DILocation(line: 2821, column: 111, scope: !18447)
!18491 = !DILocation(line: 2821, column: 115, scope: !18447)
!18492 = !DILocation(line: 2821, column: 84, scope: !18447)
!18493 = !DILocation(line: 2821, column: 120, scope: !18447)
!18494 = !DILocation(line: 2822, column: 27, scope: !18447)
!18495 = !DILocation(line: 2822, column: 31, scope: !18447)
!18496 = !DILocation(line: 2822, column: 35, scope: !18447)
!18497 = !DILocation(line: 2822, column: 39, scope: !18447)
!18498 = !DILocation(line: 2822, column: 8, scope: !18447)
!18499 = !DILocation(line: 2822, column: 43, scope: !18447)
!18500 = !DILocation(line: 2822, column: 65, scope: !18447)
!18501 = !DILocation(line: 2822, column: 69, scope: !18447)
!18502 = !DILocation(line: 2822, column: 73, scope: !18447)
!18503 = !DILocation(line: 2822, column: 77, scope: !18447)
!18504 = !DILocation(line: 2822, column: 46, scope: !18447)
!18505 = !DILocation(line: 2822, column: 81, scope: !18447)
!18506 = !DILocation(line: 2822, column: 103, scope: !18447)
!18507 = !DILocation(line: 2822, column: 107, scope: !18447)
!18508 = !DILocation(line: 2822, column: 111, scope: !18447)
!18509 = !DILocation(line: 2822, column: 115, scope: !18447)
!18510 = !DILocation(line: 2822, column: 84, scope: !18447)
!18511 = !DILocation(line: 2822, column: 120, scope: !18447)
!18512 = !DILocation(line: 2823, column: 27, scope: !18447)
!18513 = !DILocation(line: 2823, column: 31, scope: !18447)
!18514 = !DILocation(line: 2823, column: 35, scope: !18447)
!18515 = !DILocation(line: 2823, column: 39, scope: !18447)
!18516 = !DILocation(line: 2823, column: 8, scope: !18447)
!18517 = !DILocation(line: 2823, column: 43, scope: !18447)
!18518 = !DILocation(line: 2823, column: 65, scope: !18447)
!18519 = !DILocation(line: 2823, column: 69, scope: !18447)
!18520 = !DILocation(line: 2823, column: 73, scope: !18447)
!18521 = !DILocation(line: 2823, column: 77, scope: !18447)
!18522 = !DILocation(line: 2823, column: 46, scope: !18447)
!18523 = !DILocation(line: 2823, column: 81, scope: !18447)
!18524 = !DILocation(line: 2823, column: 103, scope: !18447)
!18525 = !DILocation(line: 2823, column: 107, scope: !18447)
!18526 = !DILocation(line: 2823, column: 111, scope: !18447)
!18527 = !DILocation(line: 2823, column: 115, scope: !18447)
!18528 = !DILocation(line: 2823, column: 84, scope: !18447)
!18529 = !DILocation(line: 2823, column: 120, scope: !18447)
!18530 = !DILocation(line: 2824, column: 27, scope: !18447)
!18531 = !DILocation(line: 2824, column: 31, scope: !18447)
!18532 = !DILocation(line: 2824, column: 35, scope: !18447)
!18533 = !DILocation(line: 2824, column: 39, scope: !18447)
!18534 = !DILocation(line: 2824, column: 8, scope: !18447)
!18535 = !DILocation(line: 2824, column: 43, scope: !18447)
!18536 = !DILocation(line: 2824, column: 65, scope: !18447)
!18537 = !DILocation(line: 2824, column: 69, scope: !18447)
!18538 = !DILocation(line: 2824, column: 73, scope: !18447)
!18539 = !DILocation(line: 2824, column: 77, scope: !18447)
!18540 = !DILocation(line: 2824, column: 46, scope: !18447)
!18541 = !DILocation(line: 2824, column: 81, scope: !18447)
!18542 = !DILocation(line: 2824, column: 103, scope: !18447)
!18543 = !DILocation(line: 2824, column: 107, scope: !18447)
!18544 = !DILocation(line: 2824, column: 111, scope: !18447)
!18545 = !DILocation(line: 2824, column: 115, scope: !18447)
!18546 = !DILocation(line: 2824, column: 84, scope: !18447)
!18547 = !DILocation(line: 2815, column: 7, scope: !18448)
!18548 = !DILocation(line: 2826, column: 4, scope: !18549)
!18549 = distinct !DILexicalBlock(scope: !18447, file: !3, line: 2825, column: 3)
!18550 = !DILocation(line: 2828, column: 2, scope: !18448)
!18551 = !DILocation(line: 2830, column: 26, scope: !18552)
!18552 = distinct !DILexicalBlock(scope: !18553, file: !3, line: 2830, column: 7)
!18553 = distinct !DILexicalBlock(scope: !18443, file: !3, line: 2829, column: 7)
!18554 = !DILocation(line: 2830, column: 30, scope: !18552)
!18555 = !DILocation(line: 2830, column: 34, scope: !18552)
!18556 = !DILocation(line: 2830, column: 38, scope: !18552)
!18557 = !DILocation(line: 2830, column: 7, scope: !18552)
!18558 = !DILocation(line: 2830, column: 42, scope: !18552)
!18559 = !DILocation(line: 2831, column: 26, scope: !18552)
!18560 = !DILocation(line: 2831, column: 30, scope: !18552)
!18561 = !DILocation(line: 2831, column: 34, scope: !18552)
!18562 = !DILocation(line: 2831, column: 38, scope: !18552)
!18563 = !DILocation(line: 2831, column: 7, scope: !18552)
!18564 = !DILocation(line: 2831, column: 42, scope: !18552)
!18565 = !DILocation(line: 2832, column: 26, scope: !18552)
!18566 = !DILocation(line: 2832, column: 30, scope: !18552)
!18567 = !DILocation(line: 2832, column: 34, scope: !18552)
!18568 = !DILocation(line: 2832, column: 38, scope: !18552)
!18569 = !DILocation(line: 2832, column: 7, scope: !18552)
!18570 = !DILocation(line: 2832, column: 42, scope: !18552)
!18571 = !DILocation(line: 2833, column: 26, scope: !18552)
!18572 = !DILocation(line: 2833, column: 30, scope: !18552)
!18573 = !DILocation(line: 2833, column: 34, scope: !18552)
!18574 = !DILocation(line: 2833, column: 38, scope: !18552)
!18575 = !DILocation(line: 2833, column: 7, scope: !18552)
!18576 = !DILocation(line: 2833, column: 42, scope: !18552)
!18577 = !DILocation(line: 2835, column: 27, scope: !18552)
!18578 = !DILocation(line: 2835, column: 31, scope: !18552)
!18579 = !DILocation(line: 2835, column: 35, scope: !18552)
!18580 = !DILocation(line: 2835, column: 39, scope: !18552)
!18581 = !DILocation(line: 2835, column: 8, scope: !18552)
!18582 = !DILocation(line: 2835, column: 43, scope: !18552)
!18583 = !DILocation(line: 2835, column: 65, scope: !18552)
!18584 = !DILocation(line: 2835, column: 69, scope: !18552)
!18585 = !DILocation(line: 2835, column: 73, scope: !18552)
!18586 = !DILocation(line: 2835, column: 77, scope: !18552)
!18587 = !DILocation(line: 2835, column: 46, scope: !18552)
!18588 = !DILocation(line: 2835, column: 82, scope: !18552)
!18589 = !DILocation(line: 2836, column: 27, scope: !18552)
!18590 = !DILocation(line: 2836, column: 31, scope: !18552)
!18591 = !DILocation(line: 2836, column: 35, scope: !18552)
!18592 = !DILocation(line: 2836, column: 39, scope: !18552)
!18593 = !DILocation(line: 2836, column: 8, scope: !18552)
!18594 = !DILocation(line: 2836, column: 43, scope: !18552)
!18595 = !DILocation(line: 2836, column: 65, scope: !18552)
!18596 = !DILocation(line: 2836, column: 69, scope: !18552)
!18597 = !DILocation(line: 2836, column: 73, scope: !18552)
!18598 = !DILocation(line: 2836, column: 77, scope: !18552)
!18599 = !DILocation(line: 2836, column: 46, scope: !18552)
!18600 = !DILocation(line: 2836, column: 82, scope: !18552)
!18601 = !DILocation(line: 2837, column: 27, scope: !18552)
!18602 = !DILocation(line: 2837, column: 31, scope: !18552)
!18603 = !DILocation(line: 2837, column: 35, scope: !18552)
!18604 = !DILocation(line: 2837, column: 39, scope: !18552)
!18605 = !DILocation(line: 2837, column: 8, scope: !18552)
!18606 = !DILocation(line: 2837, column: 43, scope: !18552)
!18607 = !DILocation(line: 2837, column: 65, scope: !18552)
!18608 = !DILocation(line: 2837, column: 69, scope: !18552)
!18609 = !DILocation(line: 2837, column: 73, scope: !18552)
!18610 = !DILocation(line: 2837, column: 77, scope: !18552)
!18611 = !DILocation(line: 2837, column: 46, scope: !18552)
!18612 = !DILocation(line: 2837, column: 82, scope: !18552)
!18613 = !DILocation(line: 2838, column: 27, scope: !18552)
!18614 = !DILocation(line: 2838, column: 31, scope: !18552)
!18615 = !DILocation(line: 2838, column: 35, scope: !18552)
!18616 = !DILocation(line: 2838, column: 39, scope: !18552)
!18617 = !DILocation(line: 2838, column: 8, scope: !18552)
!18618 = !DILocation(line: 2838, column: 43, scope: !18552)
!18619 = !DILocation(line: 2838, column: 65, scope: !18552)
!18620 = !DILocation(line: 2838, column: 69, scope: !18552)
!18621 = !DILocation(line: 2838, column: 73, scope: !18552)
!18622 = !DILocation(line: 2838, column: 77, scope: !18552)
!18623 = !DILocation(line: 2838, column: 46, scope: !18552)
!18624 = !DILocation(line: 2830, column: 7, scope: !18553)
!18625 = !DILocation(line: 2840, column: 4, scope: !18626)
!18626 = distinct !DILexicalBlock(scope: !18552, file: !3, line: 2839, column: 3)
!18627 = !DILocation(line: 2844, column: 2, scope: !18332)
!18628 = !DILocation(line: 2845, column: 1, scope: !18332)
!18629 = distinct !DISubprogram(name: "proj_paint_add_slot", scope: !3, file: !3, line: 5025, type: !18630, scopeLine: 5026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!18630 = !DISubroutineType(types: !18631)
!18631 = !{!233, !4645, !7232}
!18632 = !DILocalVariable(name: "C", arg: 1, scope: !18629, file: !3, line: 5025, type: !4645)
!18633 = !DILocation(line: 5025, column: 43, scope: !18629)
!18634 = !DILocalVariable(name: "op", arg: 2, scope: !18629, file: !3, line: 5025, type: !7232)
!18635 = !DILocation(line: 5025, column: 58, scope: !18629)
!18636 = !DILocalVariable(name: "ob", scope: !18629, file: !3, line: 5027, type: !3842)
!18637 = !DILocation(line: 5027, column: 10, scope: !18629)
!18638 = !DILocation(line: 5027, column: 38, scope: !18629)
!18639 = !DILocation(line: 5027, column: 15, scope: !18629)
!18640 = !DILocalVariable(name: "scene", scope: !18629, file: !3, line: 5028, type: !3828)
!18641 = !DILocation(line: 5028, column: 9, scope: !18629)
!18642 = !DILocation(line: 5028, column: 32, scope: !18629)
!18643 = !DILocation(line: 5028, column: 17, scope: !18629)
!18644 = !DILocalVariable(name: "ma", scope: !18629, file: !3, line: 5029, type: !7763)
!18645 = !DILocation(line: 5029, column: 12, scope: !18629)
!18646 = !DILocalVariable(name: "is_bi", scope: !18629, file: !3, line: 5030, type: !233)
!18647 = !DILocation(line: 5030, column: 7, scope: !18629)
!18648 = !DILocation(line: 5030, column: 47, scope: !18629)
!18649 = !DILocation(line: 5030, column: 15, scope: !18629)
!18650 = !DILocation(line: 5030, column: 54, scope: !18629)
!18651 = !DILocation(line: 5030, column: 85, scope: !18629)
!18652 = !DILocation(line: 5030, column: 57, scope: !18629)
!18653 = !DILocalVariable(name: "ima", scope: !18629, file: !3, line: 5031, type: !3861)
!18654 = !DILocation(line: 5031, column: 9, scope: !18629)
!18655 = !DILocation(line: 5033, column: 7, scope: !18656)
!18656 = distinct !DILexicalBlock(scope: !18629, file: !3, line: 5033, column: 6)
!18657 = !DILocation(line: 5033, column: 6, scope: !18629)
!18658 = !DILocation(line: 5034, column: 3, scope: !18656)
!18659 = !DILocation(line: 5036, column: 29, scope: !18629)
!18660 = !DILocation(line: 5036, column: 33, scope: !18629)
!18661 = !DILocation(line: 5036, column: 37, scope: !18629)
!18662 = !DILocation(line: 5036, column: 7, scope: !18629)
!18663 = !DILocation(line: 5036, column: 5, scope: !18629)
!18664 = !DILocation(line: 5038, column: 6, scope: !18665)
!18665 = distinct !DILexicalBlock(scope: !18629, file: !3, line: 5038, column: 6)
!18666 = !DILocation(line: 5038, column: 6, scope: !18629)
!18667 = !DILocalVariable(name: "bmain", scope: !18668, file: !3, line: 5039, type: !18669)
!18668 = distinct !DILexicalBlock(scope: !18665, file: !3, line: 5038, column: 10)
!18669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18670, size: 64)
!18670 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !18671, line: 104, baseType: !18672)
!18671 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!18672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !18671, line: 53, size: 15232, elements: !18673)
!18673 = !{!18674, !18676, !18677, !18678, !18679, !18680, !18681, !18682, !18683, !18687, !18688, !18689, !18690, !18691, !18692, !18693, !18694, !18695, !18696, !18697, !18698, !18699, !18700, !18701, !18702, !18703, !18704, !18705, !18706, !18707, !18708, !18709, !18710, !18711, !18712, !18713, !18714, !18715, !18716, !18717, !18718, !18719, !18720, !18721, !18722, !18723, !18724, !18730}
!18674 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !18672, file: !18671, line: 54, baseType: !18675, size: 64)
!18675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18672, size: 64)
!18676 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !18672, file: !18671, line: 54, baseType: !18675, size: 64, offset: 64)
!18677 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !18672, file: !18671, line: 55, baseType: !131, size: 8192, offset: 128)
!18678 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !18672, file: !18671, line: 56, baseType: !48, size: 16, offset: 8320)
!18679 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !18672, file: !18671, line: 56, baseType: !48, size: 16, offset: 8336)
!18680 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !18672, file: !18671, line: 57, baseType: !48, size: 16, offset: 8352)
!18681 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !18672, file: !18671, line: 57, baseType: !48, size: 16, offset: 8368)
!18682 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !18672, file: !18671, line: 58, baseType: !2092, size: 64, offset: 8384)
!18683 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !18672, file: !18671, line: 59, baseType: !18684, size: 128, offset: 8448)
!18684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 128, elements: !18685)
!18685 = !{!18686}
!18686 = !DISubrange(count: 16)
!18687 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !18672, file: !18671, line: 60, baseType: !48, size: 16, offset: 8576)
!18688 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !18672, file: !18671, line: 62, baseType: !121, size: 64, offset: 8640)
!18689 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !18672, file: !18671, line: 63, baseType: !58, size: 128, offset: 8704)
!18690 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !18672, file: !18671, line: 64, baseType: !58, size: 128, offset: 8832)
!18691 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !18672, file: !18671, line: 65, baseType: !58, size: 128, offset: 8960)
!18692 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !18672, file: !18671, line: 66, baseType: !58, size: 128, offset: 9088)
!18693 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !18672, file: !18671, line: 67, baseType: !58, size: 128, offset: 9216)
!18694 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !18672, file: !18671, line: 68, baseType: !58, size: 128, offset: 9344)
!18695 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !18672, file: !18671, line: 69, baseType: !58, size: 128, offset: 9472)
!18696 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !18672, file: !18671, line: 70, baseType: !58, size: 128, offset: 9600)
!18697 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !18672, file: !18671, line: 71, baseType: !58, size: 128, offset: 9728)
!18698 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !18672, file: !18671, line: 72, baseType: !58, size: 128, offset: 9856)
!18699 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !18672, file: !18671, line: 73, baseType: !58, size: 128, offset: 9984)
!18700 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !18672, file: !18671, line: 74, baseType: !58, size: 128, offset: 10112)
!18701 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !18672, file: !18671, line: 75, baseType: !58, size: 128, offset: 10240)
!18702 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18672, file: !18671, line: 76, baseType: !58, size: 128, offset: 10368)
!18703 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !18672, file: !18671, line: 77, baseType: !58, size: 128, offset: 10496)
!18704 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !18672, file: !18671, line: 78, baseType: !58, size: 128, offset: 10624)
!18705 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !18672, file: !18671, line: 79, baseType: !58, size: 128, offset: 10752)
!18706 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !18672, file: !18671, line: 80, baseType: !58, size: 128, offset: 10880)
!18707 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !18672, file: !18671, line: 81, baseType: !58, size: 128, offset: 11008)
!18708 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !18672, file: !18671, line: 82, baseType: !58, size: 128, offset: 11136)
!18709 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !18672, file: !18671, line: 83, baseType: !58, size: 128, offset: 11264)
!18710 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !18672, file: !18671, line: 84, baseType: !58, size: 128, offset: 11392)
!18711 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !18672, file: !18671, line: 85, baseType: !58, size: 128, offset: 11520)
!18712 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !18672, file: !18671, line: 86, baseType: !58, size: 128, offset: 11648)
!18713 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !18672, file: !18671, line: 87, baseType: !58, size: 128, offset: 11776)
!18714 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !18672, file: !18671, line: 88, baseType: !58, size: 128, offset: 11904)
!18715 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !18672, file: !18671, line: 89, baseType: !58, size: 128, offset: 12032)
!18716 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !18672, file: !18671, line: 90, baseType: !58, size: 128, offset: 12160)
!18717 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !18672, file: !18671, line: 91, baseType: !58, size: 128, offset: 12288)
!18718 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !18672, file: !18671, line: 92, baseType: !58, size: 128, offset: 12416)
!18719 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !18672, file: !18671, line: 93, baseType: !58, size: 128, offset: 12544)
!18720 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !18672, file: !18671, line: 94, baseType: !58, size: 128, offset: 12672)
!18721 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !18672, file: !18671, line: 95, baseType: !58, size: 128, offset: 12800)
!18722 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !18672, file: !18671, line: 96, baseType: !58, size: 128, offset: 12928)
!18723 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !18672, file: !18671, line: 98, baseType: !636, size: 2048, offset: 13056)
!18724 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !18672, file: !18671, line: 101, baseType: !18725, size: 64, offset: 15104)
!18725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18726, size: 64)
!18726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !18727, line: 58, size: 32, elements: !18728)
!18727 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!18728 = !{!18729}
!18729 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !18726, file: !18727, line: 59, baseType: !22, size: 32)
!18730 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !18672, file: !18671, line: 103, baseType: !18731, size: 64, offset: 15168)
!18731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18732, size: 64)
!18732 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !18671, line: 51, flags: DIFlagFwdDecl)
!18733 = !DILocation(line: 5039, column: 9, scope: !18668)
!18734 = !DILocation(line: 5039, column: 31, scope: !18668)
!18735 = !DILocation(line: 5039, column: 17, scope: !18668)
!18736 = !DILocation(line: 5041, column: 8, scope: !18737)
!18737 = distinct !DILexicalBlock(scope: !18668, file: !3, line: 5041, column: 7)
!18738 = !DILocation(line: 5041, column: 14, scope: !18737)
!18739 = !DILocation(line: 5041, column: 49, scope: !18737)
!18740 = !DILocation(line: 5041, column: 17, scope: !18737)
!18741 = !DILocation(line: 5041, column: 7, scope: !18668)
!18742 = !DILocalVariable(name: "imanode", scope: !18743, file: !3, line: 5042, type: !793)
!18743 = distinct !DILexicalBlock(scope: !18737, file: !3, line: 5041, column: 57)
!18744 = !DILocation(line: 5042, column: 11, scope: !18743)
!18745 = !DILocalVariable(name: "ntree", scope: !18743, file: !3, line: 5043, type: !18746)
!18746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18747, size: 64)
!18747 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeTree", file: !83, line: 391, baseType: !623)
!18748 = !DILocation(line: 5043, column: 15, scope: !18743)
!18749 = !DILocation(line: 5043, column: 23, scope: !18743)
!18750 = !DILocation(line: 5043, column: 27, scope: !18743)
!18751 = !DILocation(line: 5045, column: 9, scope: !18752)
!18752 = distinct !DILexicalBlock(scope: !18743, file: !3, line: 5045, column: 8)
!18753 = !DILocation(line: 5045, column: 8, scope: !18743)
!18754 = !DILocation(line: 5046, column: 28, scope: !18755)
!18755 = distinct !DILexicalBlock(scope: !18752, file: !3, line: 5045, column: 16)
!18756 = !DILocation(line: 5046, column: 32, scope: !18755)
!18757 = !DILocation(line: 5046, column: 36, scope: !18755)
!18758 = !DILocation(line: 5046, column: 5, scope: !18755)
!18759 = !DILocation(line: 5047, column: 13, scope: !18755)
!18760 = !DILocation(line: 5047, column: 17, scope: !18755)
!18761 = !DILocation(line: 5047, column: 11, scope: !18755)
!18762 = !DILocation(line: 5048, column: 4, scope: !18755)
!18763 = !DILocation(line: 5050, column: 4, scope: !18743)
!18764 = !DILocation(line: 5050, column: 8, scope: !18743)
!18765 = !DILocation(line: 5050, column: 18, scope: !18743)
!18766 = !DILocation(line: 5053, column: 32, scope: !18743)
!18767 = !DILocation(line: 5053, column: 35, scope: !18743)
!18768 = !DILocation(line: 5053, column: 14, scope: !18743)
!18769 = !DILocation(line: 5053, column: 12, scope: !18743)
!18770 = !DILocation(line: 5055, column: 34, scope: !18743)
!18771 = !DILocation(line: 5055, column: 38, scope: !18743)
!18772 = !DILocation(line: 5055, column: 10, scope: !18743)
!18773 = !DILocation(line: 5055, column: 8, scope: !18743)
!18774 = !DILocation(line: 5056, column: 19, scope: !18743)
!18775 = !DILocation(line: 5056, column: 24, scope: !18743)
!18776 = !DILocation(line: 5056, column: 4, scope: !18743)
!18777 = !DILocation(line: 5056, column: 13, scope: !18743)
!18778 = !DILocation(line: 5056, column: 16, scope: !18743)
!18779 = !DILocation(line: 5058, column: 18, scope: !18743)
!18780 = !DILocation(line: 5058, column: 25, scope: !18743)
!18781 = !DILocation(line: 5058, column: 4, scope: !18743)
!18782 = !DILocation(line: 5060, column: 34, scope: !18743)
!18783 = !DILocation(line: 5060, column: 20, scope: !18743)
!18784 = !DILocation(line: 5060, column: 38, scope: !18743)
!18785 = !DILocation(line: 5060, column: 4, scope: !18743)
!18786 = !DILocation(line: 5061, column: 3, scope: !18743)
!18787 = !DILocalVariable(name: "mtex", scope: !18788, file: !3, line: 5063, type: !8972)
!18788 = distinct !DILexicalBlock(scope: !18737, file: !3, line: 5062, column: 8)
!18789 = !DILocation(line: 5063, column: 10, scope: !18788)
!18790 = !DILocation(line: 5063, column: 30, scope: !18788)
!18791 = !DILocation(line: 5063, column: 34, scope: !18788)
!18792 = !DILocation(line: 5063, column: 17, scope: !18788)
!18793 = !DILocation(line: 5066, column: 8, scope: !18794)
!18794 = distinct !DILexicalBlock(scope: !18788, file: !3, line: 5066, column: 8)
!18795 = !DILocation(line: 5066, column: 8, scope: !18788)
!18796 = !DILocalVariable(name: "type", scope: !18797, file: !3, line: 5067, type: !22)
!18797 = distinct !DILexicalBlock(scope: !18794, file: !3, line: 5066, column: 14)
!18798 = !DILocation(line: 5067, column: 9, scope: !18797)
!18799 = !DILocalVariable(name: "type_id", scope: !18797, file: !3, line: 5068, type: !22)
!18800 = !DILocation(line: 5068, column: 9, scope: !18797)
!18801 = !DILocation(line: 5070, column: 9, scope: !18802)
!18802 = distinct !DILexicalBlock(scope: !18797, file: !3, line: 5070, column: 9)
!18803 = !DILocation(line: 5070, column: 9, scope: !18797)
!18804 = !DILocalVariable(name: "i", scope: !18805, file: !3, line: 5071, type: !22)
!18805 = distinct !DILexicalBlock(scope: !18802, file: !3, line: 5070, column: 13)
!18806 = !DILocation(line: 5071, column: 10, scope: !18805)
!18807 = !DILocation(line: 5072, column: 26, scope: !18805)
!18808 = !DILocation(line: 5072, column: 30, scope: !18805)
!18809 = !DILocation(line: 5072, column: 13, scope: !18805)
!18810 = !DILocation(line: 5072, column: 11, scope: !18805)
!18811 = !DILocation(line: 5074, column: 13, scope: !18812)
!18812 = distinct !DILexicalBlock(scope: !18805, file: !3, line: 5074, column: 6)
!18813 = !DILocation(line: 5074, column: 11, scope: !18812)
!18814 = !DILocation(line: 5074, column: 18, scope: !18815)
!18815 = distinct !DILexicalBlock(scope: !18812, file: !3, line: 5074, column: 6)
!18816 = !DILocation(line: 5074, column: 20, scope: !18815)
!18817 = !DILocation(line: 5074, column: 6, scope: !18812)
!18818 = !DILocation(line: 5075, column: 28, scope: !18819)
!18819 = distinct !DILexicalBlock(scope: !18820, file: !3, line: 5075, column: 11)
!18820 = distinct !DILexicalBlock(scope: !18815, file: !3, line: 5074, column: 57)
!18821 = !DILocation(line: 5075, column: 11, scope: !18819)
!18822 = !DILocation(line: 5075, column: 31, scope: !18819)
!18823 = !DILocation(line: 5075, column: 40, scope: !18819)
!18824 = !DILocation(line: 5075, column: 37, scope: !18819)
!18825 = !DILocation(line: 5075, column: 11, scope: !18820)
!18826 = !DILocation(line: 5076, column: 18, scope: !18827)
!18827 = distinct !DILexicalBlock(scope: !18819, file: !3, line: 5075, column: 46)
!18828 = !DILocation(line: 5076, column: 16, scope: !18827)
!18829 = !DILocation(line: 5077, column: 8, scope: !18827)
!18830 = !DILocation(line: 5079, column: 6, scope: !18820)
!18831 = !DILocation(line: 5074, column: 53, scope: !18815)
!18832 = !DILocation(line: 5074, column: 6, scope: !18815)
!18833 = distinct !{!18833, !18817, !18834}
!18834 = !DILocation(line: 5079, column: 6, scope: !18812)
!18835 = !DILocation(line: 5080, column: 5, scope: !18805)
!18836 = !DILocation(line: 5082, column: 29, scope: !18797)
!18837 = !DILocation(line: 5082, column: 36, scope: !18797)
!18838 = !DILocation(line: 5082, column: 17, scope: !18797)
!18839 = !DILocation(line: 5082, column: 5, scope: !18797)
!18840 = !DILocation(line: 5082, column: 11, scope: !18797)
!18841 = !DILocation(line: 5082, column: 15, scope: !18797)
!18842 = !DILocation(line: 5083, column: 19, scope: !18797)
!18843 = !DILocation(line: 5083, column: 5, scope: !18797)
!18844 = !DILocation(line: 5083, column: 11, scope: !18797)
!18845 = !DILocation(line: 5083, column: 17, scope: !18797)
!18846 = !DILocation(line: 5085, column: 9, scope: !18847)
!18847 = distinct !DILexicalBlock(scope: !18797, file: !3, line: 5085, column: 9)
!18848 = !DILocation(line: 5085, column: 15, scope: !18847)
!18849 = !DILocation(line: 5085, column: 9, scope: !18797)
!18850 = !DILocation(line: 5086, column: 53, scope: !18851)
!18851 = distinct !DILexicalBlock(scope: !18847, file: !3, line: 5085, column: 20)
!18852 = !DILocation(line: 5086, column: 57, scope: !18851)
!18853 = !DILocation(line: 5086, column: 29, scope: !18851)
!18854 = !DILocation(line: 5086, column: 12, scope: !18851)
!18855 = !DILocation(line: 5086, column: 18, scope: !18851)
!18856 = !DILocation(line: 5086, column: 23, scope: !18851)
!18857 = !DILocation(line: 5086, column: 27, scope: !18851)
!18858 = !DILocation(line: 5086, column: 10, scope: !18851)
!18859 = !DILocation(line: 5087, column: 5, scope: !18851)
!18860 = !DILocation(line: 5089, column: 27, scope: !18797)
!18861 = !DILocation(line: 5089, column: 53, scope: !18797)
!18862 = !DILocation(line: 5089, column: 59, scope: !18797)
!18863 = !DILocation(line: 5089, column: 5, scope: !18797)
!18864 = !DILocation(line: 5090, column: 4, scope: !18797)
!18865 = !DILocation(line: 5093, column: 7, scope: !18866)
!18866 = distinct !DILexicalBlock(scope: !18668, file: !3, line: 5093, column: 7)
!18867 = !DILocation(line: 5093, column: 7, scope: !18668)
!18868 = !DILocation(line: 5094, column: 36, scope: !18869)
!18869 = distinct !DILexicalBlock(scope: !18866, file: !3, line: 5093, column: 12)
!18870 = !DILocation(line: 5094, column: 43, scope: !18869)
!18871 = !DILocation(line: 5094, column: 4, scope: !18869)
!18872 = !DILocation(line: 5095, column: 21, scope: !18869)
!18873 = !DILocation(line: 5095, column: 4, scope: !18869)
!18874 = !DILocation(line: 5096, column: 26, scope: !18869)
!18875 = !DILocation(line: 5096, column: 50, scope: !18869)
!18876 = !DILocation(line: 5096, column: 4, scope: !18869)
!18877 = !DILocation(line: 5097, column: 23, scope: !18869)
!18878 = !DILocation(line: 5097, column: 27, scope: !18869)
!18879 = !DILocation(line: 5097, column: 4, scope: !18869)
!18880 = !DILocation(line: 5098, column: 35, scope: !18869)
!18881 = !DILocation(line: 5098, column: 23, scope: !18869)
!18882 = !DILocation(line: 5098, column: 4, scope: !18869)
!18883 = !DILocation(line: 5100, column: 4, scope: !18869)
!18884 = !DILocation(line: 5102, column: 2, scope: !18668)
!18885 = !DILocation(line: 5104, column: 2, scope: !18629)
!18886 = !DILocation(line: 5105, column: 1, scope: !18629)
!18887 = distinct !DISubprogram(name: "proj_paint_image_create", scope: !3, file: !3, line: 4999, type: !18888, scopeLine: 5000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3431, retainedNodes: !4156)
!18888 = !DISubroutineType(types: !18889)
!18889 = !{!3861, !7232, !18669}
!18890 = !DILocalVariable(name: "op", arg: 1, scope: !18887, file: !3, line: 4999, type: !7232)
!18891 = !DILocation(line: 4999, column: 51, scope: !18887)
!18892 = !DILocalVariable(name: "bmain", arg: 2, scope: !18887, file: !3, line: 4999, type: !18669)
!18893 = !DILocation(line: 4999, column: 61, scope: !18887)
!18894 = !DILocalVariable(name: "ima", scope: !18887, file: !3, line: 5001, type: !3861)
!18895 = !DILocation(line: 5001, column: 9, scope: !18887)
!18896 = !DILocalVariable(name: "color", scope: !18887, file: !3, line: 5002, type: !496)
!18897 = !DILocation(line: 5002, column: 8, scope: !18887)
!18898 = !DILocalVariable(name: "imagename", scope: !18887, file: !3, line: 5003, type: !33)
!18899 = !DILocation(line: 5003, column: 7, scope: !18887)
!18900 = !DILocalVariable(name: "width", scope: !18887, file: !3, line: 5004, type: !22)
!18901 = !DILocation(line: 5004, column: 6, scope: !18887)
!18902 = !DILocalVariable(name: "height", scope: !18887, file: !3, line: 5005, type: !22)
!18903 = !DILocation(line: 5005, column: 6, scope: !18887)
!18904 = !DILocalVariable(name: "use_float", scope: !18887, file: !3, line: 5006, type: !233)
!18905 = !DILocation(line: 5006, column: 7, scope: !18887)
!18906 = !DILocalVariable(name: "gen_type", scope: !18887, file: !3, line: 5007, type: !48)
!18907 = !DILocation(line: 5007, column: 8, scope: !18887)
!18908 = !DILocalVariable(name: "alpha", scope: !18887, file: !3, line: 5008, type: !233)
!18909 = !DILocation(line: 5008, column: 7, scope: !18887)
!18910 = !DILocation(line: 5010, column: 6, scope: !18911)
!18911 = distinct !DILexicalBlock(scope: !18887, file: !3, line: 5010, column: 6)
!18912 = !DILocation(line: 5010, column: 6, scope: !18887)
!18913 = !DILocation(line: 5011, column: 23, scope: !18914)
!18914 = distinct !DILexicalBlock(scope: !18911, file: !3, line: 5010, column: 10)
!18915 = !DILocation(line: 5011, column: 27, scope: !18914)
!18916 = !DILocation(line: 5011, column: 11, scope: !18914)
!18917 = !DILocation(line: 5011, column: 9, scope: !18914)
!18918 = !DILocation(line: 5012, column: 24, scope: !18914)
!18919 = !DILocation(line: 5012, column: 28, scope: !18914)
!18920 = !DILocation(line: 5012, column: 12, scope: !18914)
!18921 = !DILocation(line: 5012, column: 10, scope: !18914)
!18922 = !DILocation(line: 5013, column: 31, scope: !18914)
!18923 = !DILocation(line: 5013, column: 35, scope: !18914)
!18924 = !DILocation(line: 5013, column: 15, scope: !18914)
!18925 = !DILocation(line: 5013, column: 13, scope: !18914)
!18926 = !DILocation(line: 5014, column: 27, scope: !18914)
!18927 = !DILocation(line: 5014, column: 31, scope: !18914)
!18928 = !DILocation(line: 5014, column: 14, scope: !18914)
!18929 = !DILocation(line: 5014, column: 12, scope: !18914)
!18930 = !DILocation(line: 5015, column: 23, scope: !18914)
!18931 = !DILocation(line: 5015, column: 27, scope: !18914)
!18932 = !DILocation(line: 5015, column: 41, scope: !18914)
!18933 = !DILocation(line: 5015, column: 3, scope: !18914)
!18934 = !DILocation(line: 5016, column: 27, scope: !18914)
!18935 = !DILocation(line: 5016, column: 31, scope: !18914)
!18936 = !DILocation(line: 5016, column: 11, scope: !18914)
!18937 = !DILocation(line: 5016, column: 9, scope: !18914)
!18938 = !DILocation(line: 5017, column: 18, scope: !18914)
!18939 = !DILocation(line: 5017, column: 22, scope: !18914)
!18940 = !DILocation(line: 5017, column: 35, scope: !18914)
!18941 = !DILocation(line: 5017, column: 3, scope: !18914)
!18942 = !DILocation(line: 5018, column: 2, scope: !18914)
!18943 = !DILocation(line: 5019, column: 32, scope: !18887)
!18944 = !DILocation(line: 5019, column: 39, scope: !18887)
!18945 = !DILocation(line: 5019, column: 46, scope: !18887)
!18946 = !DILocation(line: 5019, column: 54, scope: !18887)
!18947 = !DILocation(line: 5019, column: 65, scope: !18887)
!18948 = !DILocation(line: 5019, column: 82, scope: !18887)
!18949 = !DILocation(line: 5020, column: 49, scope: !18887)
!18950 = !DILocation(line: 5020, column: 59, scope: !18887)
!18951 = !DILocation(line: 5019, column: 8, scope: !18887)
!18952 = !DILocation(line: 5019, column: 6, scope: !18887)
!18953 = !DILocation(line: 5022, column: 9, scope: !18887)
!18954 = !DILocation(line: 5022, column: 2, scope: !18887)
