; ModuleID = 'XMLString.cpp'
source_filename = "XMLString.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.xercesc_2_7::MemoryManager" = type { i32 (...)** }
%"class.xercesc_2_7::XMLLCPTranscoder" = type { i32 (...)** }
%"class.xercesc_2_7::XMLTransService" = type { i32 (...)** }
%"class.xercesc_2_7::XMLDeleter" = type { i32 (...)** }
%"class.xercesc_2_7::IllegalArgumentException" = type { %"class.xercesc_2_7::XMLException" }
%"class.xercesc_2_7::XMLException" = type { i32 (...)**, i32, i8*, i32, i16*, %"class.xercesc_2_7::MemoryManager"* }
%"class.xercesc_2_7::RuntimeException" = type { %"class.xercesc_2_7::XMLException" }
%"class.xercesc_2_7::ArrayIndexOutOfBoundsException" = type { %"class.xercesc_2_7::XMLException" }
%"class.xercesc_2_7::ArrayJanitor" = type { i16*, %"class.xercesc_2_7::MemoryManager"* }
%"class.xercesc_2_7::XMemory" = type { i8 }
%"class.xercesc_2_7::XMLUri" = type { %"class.xercesc_2_7::XSerializable", i32, i16*, i16*, i16*, i16*, i16*, i16*, i16*, i16*, %"class.xercesc_2_7::MemoryManager"* }
%"class.xercesc_2_7::XSerializable" = type { i32 (...)** }
%"class.xercesc_2_7::MalformedURLException" = type { %"class.xercesc_2_7::XMLException" }
%"class.xercesc_2_7::ArrayJanitor.0" = type { i8*, %"class.xercesc_2_7::MemoryManager"* }
%"class.xercesc_2_7::NumberFormatException" = type { %"class.xercesc_2_7::XMLException" }
%"class.xercesc_2_7::BaseRefVectorOf" = type { i32 (...)**, i8, i32, i32, i16**, %"class.xercesc_2_7::MemoryManager"* }
%"class.xercesc_2_7::RefArrayVectorOf" = type { %"class.xercesc_2_7::BaseRefVectorOf" }
%"class.xercesc_2_7::XMLBuffer" = type { i32, i32, i32, i8, %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::XMLBufferFullHandler"*, i16* }
%"class.xercesc_2_7::XMLBufferFullHandler" = type { i32 (...)** }

$_ZN11xercesc_2_710XMLDeleterD0Ev = comdat any

$_ZN11xercesc_2_710XMLDeleterD2Ev = comdat any

$_ZN11xercesc_2_724IllegalArgumentExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE = comdat any

$_ZN11xercesc_2_724IllegalArgumentExceptionD2Ev = comdat any

$_ZN11xercesc_2_716RuntimeExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE = comdat any

$_ZN11xercesc_2_716RuntimeExceptionD2Ev = comdat any

$_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE = comdat any

$_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionD2Ev = comdat any

$_ZN11xercesc_2_79XMLString9replicateEPKtPNS_13MemoryManagerE = comdat any

$_ZN11xercesc_2_712ArrayJanitorItEC2EPtPNS_13MemoryManagerE = comdat any

$_ZN11xercesc_2_712ArrayJanitorItED2Ev = comdat any

$_ZN11xercesc_2_79XMLString9stringLenEPKt = comdat any

$_ZN11xercesc_2_79XMLString11lastIndexOfEPKtt = comdat any

$_ZN11xercesc_2_79XMLString14validateRegionEPKtiS2_ij = comdat any

$_ZN11xercesc_2_712ArrayJanitorIcEC2EPcPNS_13MemoryManagerE = comdat any

$_ZN11xercesc_2_712ArrayJanitorIcED2Ev = comdat any

$_ZN11xercesc_2_721NumberFormatExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE = comdat any

$_ZN11xercesc_2_721NumberFormatExceptionD2Ev = comdat any

$_ZN11xercesc_2_710XMLChar1_012isWhitespaceEt = comdat any

$_ZN11xercesc_2_716RefArrayVectorOfItEC2EjbPNS_13MemoryManagerE = comdat any

$_ZN11xercesc_2_715BaseRefVectorOfItE10addElementEPt = comdat any

$_ZN11xercesc_2_79XMLString9moveCharsEPtPKtj = comdat any

$_ZN11xercesc_2_79XMLBuffer5resetEv = comdat any

$_ZN11xercesc_2_79XMLBuffer6appendEt = comdat any

$_ZN11xercesc_2_724IllegalArgumentExceptionD0Ev = comdat any

$_ZNK11xercesc_2_724IllegalArgumentException7getTypeEv = comdat any

$_ZNK11xercesc_2_724IllegalArgumentException9duplicateEv = comdat any

$_ZN11xercesc_2_724IllegalArgumentExceptionC2ERKS0_ = comdat any

$_ZN11xercesc_2_716RuntimeExceptionD0Ev = comdat any

$_ZNK11xercesc_2_716RuntimeException7getTypeEv = comdat any

$_ZNK11xercesc_2_716RuntimeException9duplicateEv = comdat any

$_ZN11xercesc_2_716RuntimeExceptionC2ERKS0_ = comdat any

$_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionD0Ev = comdat any

$_ZNK11xercesc_2_730ArrayIndexOutOfBoundsException7getTypeEv = comdat any

$_ZNK11xercesc_2_730ArrayIndexOutOfBoundsException9duplicateEv = comdat any

$_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionC2ERKS0_ = comdat any

$_ZN11xercesc_2_721NumberFormatExceptionD0Ev = comdat any

$_ZNK11xercesc_2_721NumberFormatException7getTypeEv = comdat any

$_ZNK11xercesc_2_721NumberFormatException9duplicateEv = comdat any

$_ZN11xercesc_2_721NumberFormatExceptionC2ERKS0_ = comdat any

$_ZN11xercesc_2_77XMemoryC2Ev = comdat any

$_ZN11xercesc_2_712ArrayJanitorItE5resetEPt = comdat any

$__clang_call_terminate = comdat any

$_ZN11xercesc_2_712ArrayJanitorIcE5resetEPc = comdat any

$_ZN11xercesc_2_715BaseRefVectorOfItEC2EjbPNS_13MemoryManagerE = comdat any

$_ZN11xercesc_2_716RefArrayVectorOfItED2Ev = comdat any

$_ZN11xercesc_2_716RefArrayVectorOfItED0Ev = comdat any

$_ZN11xercesc_2_716RefArrayVectorOfItE12setElementAtEPtj = comdat any

$_ZN11xercesc_2_716RefArrayVectorOfItE17removeAllElementsEv = comdat any

$_ZN11xercesc_2_716RefArrayVectorOfItE15removeElementAtEj = comdat any

$_ZN11xercesc_2_716RefArrayVectorOfItE17removeLastElementEv = comdat any

$_ZN11xercesc_2_716RefArrayVectorOfItE7cleanupEv = comdat any

$_ZN11xercesc_2_715BaseRefVectorOfItED2Ev = comdat any

$_ZN11xercesc_2_715BaseRefVectorOfItED0Ev = comdat any

$_ZN11xercesc_2_715BaseRefVectorOfItE12setElementAtEPtj = comdat any

$_ZN11xercesc_2_715BaseRefVectorOfItE17removeAllElementsEv = comdat any

$_ZN11xercesc_2_715BaseRefVectorOfItE15removeElementAtEj = comdat any

$_ZN11xercesc_2_715BaseRefVectorOfItE17removeLastElementEv = comdat any

$_ZN11xercesc_2_715BaseRefVectorOfItE7cleanupEv = comdat any

$_ZN11xercesc_2_715BaseRefVectorOfItE19ensureExtraCapacityEj = comdat any

$_ZTSN11xercesc_2_724IllegalArgumentExceptionE = comdat any

$_ZTIN11xercesc_2_724IllegalArgumentExceptionE = comdat any

$_ZTSN11xercesc_2_716RuntimeExceptionE = comdat any

$_ZTIN11xercesc_2_716RuntimeExceptionE = comdat any

$_ZTSN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE = comdat any

$_ZTIN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE = comdat any

$_ZTSN11xercesc_2_721MalformedURLExceptionE = comdat any

$_ZTIN11xercesc_2_721MalformedURLExceptionE = comdat any

$_ZTSN11xercesc_2_721NumberFormatExceptionE = comdat any

$_ZTIN11xercesc_2_721NumberFormatExceptionE = comdat any

$_ZTVN11xercesc_2_710XMLDeleterE = comdat any

$_ZTSN11xercesc_2_710XMLDeleterE = comdat any

$_ZTIN11xercesc_2_710XMLDeleterE = comdat any

$_ZTVN11xercesc_2_724IllegalArgumentExceptionE = comdat any

$_ZTVN11xercesc_2_716RuntimeExceptionE = comdat any

$_ZTVN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE = comdat any

$_ZTVN11xercesc_2_721NumberFormatExceptionE = comdat any

$_ZTVN11xercesc_2_716RefArrayVectorOfItEE = comdat any

$_ZTSN11xercesc_2_716RefArrayVectorOfItEE = comdat any

$_ZTSN11xercesc_2_715BaseRefVectorOfItEE = comdat any

$_ZTSN11xercesc_2_77XMemoryE = comdat any

$_ZTIN11xercesc_2_77XMemoryE = comdat any

$_ZTIN11xercesc_2_715BaseRefVectorOfItEE = comdat any

$_ZTIN11xercesc_2_716RefArrayVectorOfItEE = comdat any

$_ZTVN11xercesc_2_715BaseRefVectorOfItEE = comdat any

@_ZN11xercesc_2_79XMLString15fgMemoryManagerE = dso_local global %"class.xercesc_2_7::MemoryManager"* null, align 8, !dbg !0
@_ZZN11xercesc_2_79XMLString9binToTextEmPcjjPNS_13MemoryManagerEE9digitList = internal constant [16 x i8] c"0123456789ABCDEF", align 16, !dbg !446
@.str = private unnamed_addr constant [14 x i8] c"XMLString.cpp\00", align 1
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTSN11xercesc_2_724IllegalArgumentExceptionE = linkonce_odr dso_local constant [42 x i8] c"N11xercesc_2_724IllegalArgumentExceptionE\00", comdat, align 1
@_ZTIN11xercesc_2_712XMLExceptionE = external dso_local constant i8*
@_ZTIN11xercesc_2_724IllegalArgumentExceptionE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @_ZTSN11xercesc_2_724IllegalArgumentExceptionE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN11xercesc_2_712XMLExceptionE to i8*) }, comdat, align 8
@_ZTSN11xercesc_2_716RuntimeExceptionE = linkonce_odr dso_local constant [34 x i8] c"N11xercesc_2_716RuntimeExceptionE\00", comdat, align 1
@_ZTIN11xercesc_2_716RuntimeExceptionE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @_ZTSN11xercesc_2_716RuntimeExceptionE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN11xercesc_2_712XMLExceptionE to i8*) }, comdat, align 8
@_ZTSN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE = linkonce_odr dso_local constant [48 x i8] c"N11xercesc_2_730ArrayIndexOutOfBoundsExceptionE\00", comdat, align 1
@_ZTIN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @_ZTSN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN11xercesc_2_712XMLExceptionE to i8*) }, comdat, align 8
@_ZN11xercesc_2_7L8gNullStrE = internal global [7 x i16] [i16 123, i16 110, i16 117, i16 108, i16 108, i16 125, i16 0], align 2, !dbg !932
@_ZN11xercesc_2_7L11gTranscoderE = internal global %"class.xercesc_2_7::XMLLCPTranscoder"* null, align 8, !dbg !937
@_ZTSN11xercesc_2_721MalformedURLExceptionE = linkonce_odr dso_local constant [39 x i8] c"N11xercesc_2_721MalformedURLExceptionE\00", comdat, align 1
@_ZTIN11xercesc_2_721MalformedURLExceptionE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @_ZTSN11xercesc_2_721MalformedURLExceptionE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN11xercesc_2_712XMLExceptionE to i8*) }, comdat, align 8
@_ZZN11xercesc_2_79XMLString9binToTextEmPtjjPNS_13MemoryManagerEE9digitList = internal constant [16 x i16] [i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 65, i16 66, i16 67, i16 68, i16 101, i16 70], align 16, !dbg !901
@_ZN11xercesc_2_716XMLPlatformUtils14fgTransServiceE = external dso_local global %"class.xercesc_2_7::XMLTransService"*, align 8
@_ZTSN11xercesc_2_721NumberFormatExceptionE = linkonce_odr dso_local constant [39 x i8] c"N11xercesc_2_721NumberFormatExceptionE\00", comdat, align 1
@_ZTIN11xercesc_2_721NumberFormatExceptionE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @_ZTSN11xercesc_2_721NumberFormatExceptionE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN11xercesc_2_712XMLExceptionE to i8*) }, comdat, align 8
@_ZTVN11xercesc_2_710XMLDeleterE = linkonce_odr dso_local unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN11xercesc_2_710XMLDeleterE to i8*), i8* bitcast (void (%"class.xercesc_2_7::XMLDeleter"*)* @_ZN11xercesc_2_710XMLDeleterD2Ev to i8*), i8* bitcast (void (%"class.xercesc_2_7::XMLDeleter"*)* @_ZN11xercesc_2_710XMLDeleterD0Ev to i8*)] }, comdat, align 8
@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
@_ZTSN11xercesc_2_710XMLDeleterE = linkonce_odr dso_local constant [28 x i8] c"N11xercesc_2_710XMLDeleterE\00", comdat, align 1
@_ZTIN11xercesc_2_710XMLDeleterE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZTSN11xercesc_2_710XMLDeleterE, i32 0, i32 0) }, comdat, align 8
@_ZTVN11xercesc_2_724IllegalArgumentExceptionE = linkonce_odr dso_local unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_724IllegalArgumentExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::IllegalArgumentException"*)* @_ZN11xercesc_2_724IllegalArgumentExceptionD2Ev to i8*), i8* bitcast (void (%"class.xercesc_2_7::IllegalArgumentException"*)* @_ZN11xercesc_2_724IllegalArgumentExceptionD0Ev to i8*), i8* bitcast (i16* (%"class.xercesc_2_7::IllegalArgumentException"*)* @_ZNK11xercesc_2_724IllegalArgumentException7getTypeEv to i8*), i8* bitcast (%"class.xercesc_2_7::XMLException"* (%"class.xercesc_2_7::IllegalArgumentException"*)* @_ZNK11xercesc_2_724IllegalArgumentException9duplicateEv to i8*)] }, comdat, align 8
@_ZN11xercesc_2_76XMLUni31fgIllegalArgumentException_NameE = external dso_local constant [0 x i16], align 2
@_ZTVN11xercesc_2_716RuntimeExceptionE = linkonce_odr dso_local unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_716RuntimeExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::RuntimeException"*)* @_ZN11xercesc_2_716RuntimeExceptionD2Ev to i8*), i8* bitcast (void (%"class.xercesc_2_7::RuntimeException"*)* @_ZN11xercesc_2_716RuntimeExceptionD0Ev to i8*), i8* bitcast (i16* (%"class.xercesc_2_7::RuntimeException"*)* @_ZNK11xercesc_2_716RuntimeException7getTypeEv to i8*), i8* bitcast (%"class.xercesc_2_7::XMLException"* (%"class.xercesc_2_7::RuntimeException"*)* @_ZNK11xercesc_2_716RuntimeException9duplicateEv to i8*)] }, comdat, align 8
@_ZN11xercesc_2_76XMLUni23fgRuntimeException_NameE = external dso_local constant [0 x i16], align 2
@_ZTVN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE = linkonce_odr dso_local unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*)* @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionD2Ev to i8*), i8* bitcast (void (%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*)* @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionD0Ev to i8*), i8* bitcast (i16* (%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*)* @_ZNK11xercesc_2_730ArrayIndexOutOfBoundsException7getTypeEv to i8*), i8* bitcast (%"class.xercesc_2_7::XMLException"* (%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*)* @_ZNK11xercesc_2_730ArrayIndexOutOfBoundsException9duplicateEv to i8*)] }, comdat, align 8
@_ZN11xercesc_2_76XMLUni37fgArrayIndexOutOfBoundsException_NameE = external dso_local constant [0 x i16], align 2
@_ZTVN11xercesc_2_721NumberFormatExceptionE = linkonce_odr dso_local unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_721NumberFormatExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::NumberFormatException"*)* @_ZN11xercesc_2_721NumberFormatExceptionD2Ev to i8*), i8* bitcast (void (%"class.xercesc_2_7::NumberFormatException"*)* @_ZN11xercesc_2_721NumberFormatExceptionD0Ev to i8*), i8* bitcast (i16* (%"class.xercesc_2_7::NumberFormatException"*)* @_ZNK11xercesc_2_721NumberFormatException7getTypeEv to i8*), i8* bitcast (%"class.xercesc_2_7::XMLException"* (%"class.xercesc_2_7::NumberFormatException"*)* @_ZNK11xercesc_2_721NumberFormatException9duplicateEv to i8*)] }, comdat, align 8
@_ZN11xercesc_2_76XMLUni28fgNumberFormatException_NameE = external dso_local constant [0 x i16], align 2
@_ZN11xercesc_2_710XMLChar1_019fgCharCharsTable1_0E = external dso_local global [65536 x i8], align 16
@_ZTVN11xercesc_2_716RefArrayVectorOfItEE = linkonce_odr dso_local unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_716RefArrayVectorOfItEE to i8*), i8* bitcast (void (%"class.xercesc_2_7::RefArrayVectorOf"*)* @_ZN11xercesc_2_716RefArrayVectorOfItED2Ev to i8*), i8* bitcast (void (%"class.xercesc_2_7::RefArrayVectorOf"*)* @_ZN11xercesc_2_716RefArrayVectorOfItED0Ev to i8*), i8* bitcast (void (%"class.xercesc_2_7::RefArrayVectorOf"*, i16*, i32)* @_ZN11xercesc_2_716RefArrayVectorOfItE12setElementAtEPtj to i8*), i8* bitcast (void (%"class.xercesc_2_7::RefArrayVectorOf"*)* @_ZN11xercesc_2_716RefArrayVectorOfItE17removeAllElementsEv to i8*), i8* bitcast (void (%"class.xercesc_2_7::RefArrayVectorOf"*, i32)* @_ZN11xercesc_2_716RefArrayVectorOfItE15removeElementAtEj to i8*), i8* bitcast (void (%"class.xercesc_2_7::RefArrayVectorOf"*)* @_ZN11xercesc_2_716RefArrayVectorOfItE17removeLastElementEv to i8*), i8* bitcast (void (%"class.xercesc_2_7::RefArrayVectorOf"*)* @_ZN11xercesc_2_716RefArrayVectorOfItE7cleanupEv to i8*)] }, comdat, align 8
@_ZTSN11xercesc_2_716RefArrayVectorOfItEE = linkonce_odr dso_local constant [37 x i8] c"N11xercesc_2_716RefArrayVectorOfItEE\00", comdat, align 1
@_ZTSN11xercesc_2_715BaseRefVectorOfItEE = linkonce_odr dso_local constant [36 x i8] c"N11xercesc_2_715BaseRefVectorOfItEE\00", comdat, align 1
@_ZTSN11xercesc_2_77XMemoryE = linkonce_odr dso_local constant [24 x i8] c"N11xercesc_2_77XMemoryE\00", comdat, align 1
@_ZTIN11xercesc_2_77XMemoryE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTSN11xercesc_2_77XMemoryE, i32 0, i32 0) }, comdat, align 8
@_ZTIN11xercesc_2_715BaseRefVectorOfItEE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @_ZTSN11xercesc_2_715BaseRefVectorOfItEE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN11xercesc_2_77XMemoryE to i8*) }, comdat, align 8
@_ZTIN11xercesc_2_716RefArrayVectorOfItEE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @_ZTSN11xercesc_2_716RefArrayVectorOfItEE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_715BaseRefVectorOfItEE to i8*) }, comdat, align 8
@_ZTVN11xercesc_2_715BaseRefVectorOfItEE = linkonce_odr dso_local unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_715BaseRefVectorOfItEE to i8*), i8* bitcast (void (%"class.xercesc_2_7::BaseRefVectorOf"*)* @_ZN11xercesc_2_715BaseRefVectorOfItED2Ev to i8*), i8* bitcast (void (%"class.xercesc_2_7::BaseRefVectorOf"*)* @_ZN11xercesc_2_715BaseRefVectorOfItED0Ev to i8*), i8* bitcast (void (%"class.xercesc_2_7::BaseRefVectorOf"*, i16*, i32)* @_ZN11xercesc_2_715BaseRefVectorOfItE12setElementAtEPtj to i8*), i8* bitcast (void (%"class.xercesc_2_7::BaseRefVectorOf"*)* @_ZN11xercesc_2_715BaseRefVectorOfItE17removeAllElementsEv to i8*), i8* bitcast (void (%"class.xercesc_2_7::BaseRefVectorOf"*, i32)* @_ZN11xercesc_2_715BaseRefVectorOfItE15removeElementAtEj to i8*), i8* bitcast (void (%"class.xercesc_2_7::BaseRefVectorOf"*)* @_ZN11xercesc_2_715BaseRefVectorOfItE17removeLastElementEv to i8*), i8* bitcast (void (%"class.xercesc_2_7::BaseRefVectorOf"*)* @_ZN11xercesc_2_715BaseRefVectorOfItE7cleanupEv to i8*)] }, comdat, align 8
@.str.1 = private unnamed_addr constant [33 x i8] c"./xercesc/util/BaseRefVectorOf.c\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"./xercesc/util/RefArrayVectorOf.c\00", align 1

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_710XMLDeleterD0Ev(%"class.xercesc_2_7::XMLDeleter"* %this) unnamed_addr #1 comdat align 2 !dbg !1345 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::XMLDeleter"*, align 8
  store %"class.xercesc_2_7::XMLDeleter"* %this, %"class.xercesc_2_7::XMLDeleter"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::XMLDeleter"** %this.addr, metadata !1364, metadata !DIExpression()), !dbg !1366
  %this1 = load %"class.xercesc_2_7::XMLDeleter"*, %"class.xercesc_2_7::XMLDeleter"** %this.addr, align 8
  call void @_ZN11xercesc_2_710XMLDeleterD2Ev(%"class.xercesc_2_7::XMLDeleter"* %this1) #12, !dbg !1367
  %0 = bitcast %"class.xercesc_2_7::XMLDeleter"* %this1 to i8*, !dbg !1367
  call void @_ZdlPv(i8* %0) #13, !dbg !1367
  ret void, !dbg !1368
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_710XMLDeleterD2Ev(%"class.xercesc_2_7::XMLDeleter"* %this) unnamed_addr #1 comdat align 2 !dbg !1369 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::XMLDeleter"*, align 8
  store %"class.xercesc_2_7::XMLDeleter"* %this, %"class.xercesc_2_7::XMLDeleter"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::XMLDeleter"** %this.addr, metadata !1370, metadata !DIExpression()), !dbg !1371
  %this1 = load %"class.xercesc_2_7::XMLDeleter"*, %"class.xercesc_2_7::XMLDeleter"** %this.addr, align 8
  ret void, !dbg !1372
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) #2

; Function Attrs: noinline uwtable
define dso_local void @_ZN11xercesc_2_79XMLString9binToTextEmPcjjPNS_13MemoryManagerE(i64 %toFormat, i8* %toFill, i32 %maxChars, i32 %radix, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !448 {
entry:
  %toFormat.addr = alloca i64, align 8
  %toFill.addr = alloca i8*, align 8
  %maxChars.addr = alloca i32, align 4
  %radix.addr = alloca i32, align 4
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %tmpIndex = alloca i32, align 4
  %tmpVal = alloca i32, align 4
  %tmpBuf = alloca [128 x i8], align 16
  %charInd = alloca i32, align 4
  %charInd38 = alloca i32, align 4
  %outIndex = alloca i32, align 4
  store i64 %toFormat, i64* %toFormat.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %toFormat.addr, metadata !1373, metadata !DIExpression()), !dbg !1374
  store i8* %toFill, i8** %toFill.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toFill.addr, metadata !1375, metadata !DIExpression()), !dbg !1376
  store i32 %maxChars, i32* %maxChars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxChars.addr, metadata !1377, metadata !DIExpression()), !dbg !1378
  store i32 %radix, i32* %radix.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %radix.addr, metadata !1379, metadata !DIExpression()), !dbg !1380
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !1381, metadata !DIExpression()), !dbg !1382
  %0 = load i32, i32* %maxChars.addr, align 4, !dbg !1383
  %tobool = icmp ne i32 %0, 0, !dbg !1383
  br i1 %tobool, label %if.end, label %if.then, !dbg !1385

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !1386
  %1 = bitcast i8* %exception to %"class.xercesc_2_7::IllegalArgumentException"*, !dbg !1386
  %2 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !1386
  invoke void @_ZN11xercesc_2_724IllegalArgumentExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::IllegalArgumentException"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 94, i32 81, %"class.xercesc_2_7::MemoryManager"* %2)
          to label %invoke.cont unwind label %lpad, !dbg !1386

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_724IllegalArgumentExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::IllegalArgumentException"*)* @_ZN11xercesc_2_724IllegalArgumentExceptionD2Ev to i8*)) #14, !dbg !1386
  unreachable, !dbg !1386

lpad:                                             ; preds = %if.then
  %3 = landingpad { i8*, i32 }
          cleanup, !dbg !1387
  %4 = extractvalue { i8*, i32 } %3, 0, !dbg !1387
  store i8* %4, i8** %exn.slot, align 8, !dbg !1387
  %5 = extractvalue { i8*, i32 } %3, 1, !dbg !1387
  store i32 %5, i32* %ehselector.slot, align 4, !dbg !1387
  call void @__cxa_free_exception(i8* %exception) #12, !dbg !1386
  br label %eh.resume, !dbg !1386

if.end:                                           ; preds = %entry
  %6 = load i64, i64* %toFormat.addr, align 8, !dbg !1388
  %tobool1 = icmp ne i64 %6, 0, !dbg !1388
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !1390

if.then2:                                         ; preds = %if.end
  %7 = load i8*, i8** %toFill.addr, align 8, !dbg !1391
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !1391
  store i8 48, i8* %arrayidx, align 1, !dbg !1393
  %8 = load i8*, i8** %toFill.addr, align 8, !dbg !1394
  %arrayidx3 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !1394
  store i8 0, i8* %arrayidx3, align 1, !dbg !1395
  br label %return, !dbg !1396

if.end4:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %tmpIndex, metadata !1397, metadata !DIExpression()), !dbg !1398
  store i32 0, i32* %tmpIndex, align 4, !dbg !1398
  call void @llvm.dbg.declare(metadata i32* %tmpVal, metadata !1399, metadata !DIExpression()), !dbg !1400
  %9 = load i64, i64* %toFormat.addr, align 8, !dbg !1401
  %conv = trunc i64 %9 to i32, !dbg !1401
  store i32 %conv, i32* %tmpVal, align 4, !dbg !1400
  call void @llvm.dbg.declare(metadata [128 x i8]* %tmpBuf, metadata !1402, metadata !DIExpression()), !dbg !1406
  %10 = load i32, i32* %radix.addr, align 4, !dbg !1407
  %cmp = icmp eq i32 %10, 2, !dbg !1409
  br i1 %cmp, label %if.then5, label %if.else15, !dbg !1410

if.then5:                                         ; preds = %if.end4
  br label %while.cond, !dbg !1411

while.cond:                                       ; preds = %if.end14, %if.then5
  %11 = load i32, i32* %tmpVal, align 4, !dbg !1413
  %tobool6 = icmp ne i32 %11, 0, !dbg !1413
  br i1 %tobool6, label %while.body, label %while.end, !dbg !1411

while.body:                                       ; preds = %while.cond
  %12 = load i32, i32* %tmpVal, align 4, !dbg !1414
  %conv7 = zext i32 %12 to i64, !dbg !1414
  %and = and i64 %conv7, 1, !dbg !1417
  %tobool8 = icmp ne i64 %and, 0, !dbg !1414
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !1418

if.then9:                                         ; preds = %while.body
  %13 = load i32, i32* %tmpIndex, align 4, !dbg !1419
  %inc = add i32 %13, 1, !dbg !1419
  store i32 %inc, i32* %tmpIndex, align 4, !dbg !1419
  %idxprom = zext i32 %13 to i64, !dbg !1420
  %arrayidx10 = getelementptr inbounds [128 x i8], [128 x i8]* %tmpBuf, i64 0, i64 %idxprom, !dbg !1420
  store i8 49, i8* %arrayidx10, align 1, !dbg !1421
  br label %if.end14, !dbg !1420

if.else:                                          ; preds = %while.body
  %14 = load i32, i32* %tmpIndex, align 4, !dbg !1422
  %inc11 = add i32 %14, 1, !dbg !1422
  store i32 %inc11, i32* %tmpIndex, align 4, !dbg !1422
  %idxprom12 = zext i32 %14 to i64, !dbg !1423
  %arrayidx13 = getelementptr inbounds [128 x i8], [128 x i8]* %tmpBuf, i64 0, i64 %idxprom12, !dbg !1423
  store i8 48, i8* %arrayidx13, align 1, !dbg !1424
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then9
  %15 = load i32, i32* %tmpVal, align 4, !dbg !1425
  %shr = lshr i32 %15, 1, !dbg !1425
  store i32 %shr, i32* %tmpVal, align 4, !dbg !1425
  br label %while.cond, !dbg !1411, !llvm.loop !1426

while.end:                                        ; preds = %while.cond
  br label %if.end51, !dbg !1428

if.else15:                                        ; preds = %if.end4
  %16 = load i32, i32* %radix.addr, align 4, !dbg !1429
  %cmp16 = icmp eq i32 %16, 16, !dbg !1431
  br i1 %cmp16, label %if.then17, label %if.else31, !dbg !1432

if.then17:                                        ; preds = %if.else15
  br label %while.cond18, !dbg !1433

while.cond18:                                     ; preds = %while.body20, %if.then17
  %17 = load i32, i32* %tmpVal, align 4, !dbg !1435
  %tobool19 = icmp ne i32 %17, 0, !dbg !1435
  br i1 %tobool19, label %while.body20, label %while.end30, !dbg !1433

while.body20:                                     ; preds = %while.cond18
  call void @llvm.dbg.declare(metadata i32* %charInd, metadata !1436, metadata !DIExpression()), !dbg !1438
  %18 = load i32, i32* %tmpVal, align 4, !dbg !1439
  %conv21 = zext i32 %18 to i64, !dbg !1439
  %and22 = and i64 %conv21, 15, !dbg !1440
  %conv23 = trunc i64 %and22 to i32, !dbg !1441
  store i32 %conv23, i32* %charInd, align 4, !dbg !1438
  %19 = load i32, i32* %charInd, align 4, !dbg !1442
  %idxprom24 = zext i32 %19 to i64, !dbg !1443
  %arrayidx25 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN11xercesc_2_79XMLString9binToTextEmPcjjPNS_13MemoryManagerEE9digitList, i64 0, i64 %idxprom24, !dbg !1443
  %20 = load i8, i8* %arrayidx25, align 1, !dbg !1443
  %21 = load i32, i32* %tmpIndex, align 4, !dbg !1444
  %inc26 = add i32 %21, 1, !dbg !1444
  store i32 %inc26, i32* %tmpIndex, align 4, !dbg !1444
  %idxprom27 = zext i32 %21 to i64, !dbg !1445
  %arrayidx28 = getelementptr inbounds [128 x i8], [128 x i8]* %tmpBuf, i64 0, i64 %idxprom27, !dbg !1445
  store i8 %20, i8* %arrayidx28, align 1, !dbg !1446
  %22 = load i32, i32* %tmpVal, align 4, !dbg !1447
  %shr29 = lshr i32 %22, 4, !dbg !1447
  store i32 %shr29, i32* %tmpVal, align 4, !dbg !1447
  br label %while.cond18, !dbg !1433, !llvm.loop !1448

while.end30:                                      ; preds = %while.cond18
  br label %if.end50, !dbg !1450

if.else31:                                        ; preds = %if.else15
  %23 = load i32, i32* %radix.addr, align 4, !dbg !1451
  %cmp32 = icmp eq i32 %23, 8, !dbg !1453
  br i1 %cmp32, label %if.then34, label %lor.lhs.false, !dbg !1454

lor.lhs.false:                                    ; preds = %if.else31
  %24 = load i32, i32* %radix.addr, align 4, !dbg !1455
  %cmp33 = icmp eq i32 %24, 10, !dbg !1456
  br i1 %cmp33, label %if.then34, label %if.else45, !dbg !1457

if.then34:                                        ; preds = %lor.lhs.false, %if.else31
  br label %while.cond35, !dbg !1458

while.cond35:                                     ; preds = %while.body37, %if.then34
  %25 = load i32, i32* %tmpVal, align 4, !dbg !1460
  %tobool36 = icmp ne i32 %25, 0, !dbg !1460
  br i1 %tobool36, label %while.body37, label %while.end44, !dbg !1458

while.body37:                                     ; preds = %while.cond35
  call void @llvm.dbg.declare(metadata i32* %charInd38, metadata !1461, metadata !DIExpression()), !dbg !1463
  %26 = load i32, i32* %tmpVal, align 4, !dbg !1464
  %27 = load i32, i32* %radix.addr, align 4, !dbg !1465
  %rem = urem i32 %26, %27, !dbg !1466
  store i32 %rem, i32* %charInd38, align 4, !dbg !1463
  %28 = load i32, i32* %charInd38, align 4, !dbg !1467
  %idxprom39 = zext i32 %28 to i64, !dbg !1468
  %arrayidx40 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN11xercesc_2_79XMLString9binToTextEmPcjjPNS_13MemoryManagerEE9digitList, i64 0, i64 %idxprom39, !dbg !1468
  %29 = load i8, i8* %arrayidx40, align 1, !dbg !1468
  %30 = load i32, i32* %tmpIndex, align 4, !dbg !1469
  %inc41 = add i32 %30, 1, !dbg !1469
  store i32 %inc41, i32* %tmpIndex, align 4, !dbg !1469
  %idxprom42 = zext i32 %30 to i64, !dbg !1470
  %arrayidx43 = getelementptr inbounds [128 x i8], [128 x i8]* %tmpBuf, i64 0, i64 %idxprom42, !dbg !1470
  store i8 %29, i8* %arrayidx43, align 1, !dbg !1471
  %31 = load i32, i32* %radix.addr, align 4, !dbg !1472
  %32 = load i32, i32* %tmpVal, align 4, !dbg !1473
  %div = udiv i32 %32, %31, !dbg !1473
  store i32 %div, i32* %tmpVal, align 4, !dbg !1473
  br label %while.cond35, !dbg !1458, !llvm.loop !1474

while.end44:                                      ; preds = %while.cond35
  br label %if.end49, !dbg !1476

if.else45:                                        ; preds = %lor.lhs.false
  %exception46 = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !1477
  %33 = bitcast i8* %exception46 to %"class.xercesc_2_7::RuntimeException"*, !dbg !1477
  %34 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !1477
  invoke void @_ZN11xercesc_2_716RuntimeExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::RuntimeException"* %33, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 153, i32 82, %"class.xercesc_2_7::MemoryManager"* %34)
          to label %invoke.cont48 unwind label %lpad47, !dbg !1477

invoke.cont48:                                    ; preds = %if.else45
  call void @__cxa_throw(i8* %exception46, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_716RuntimeExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::RuntimeException"*)* @_ZN11xercesc_2_716RuntimeExceptionD2Ev to i8*)) #14, !dbg !1477
  unreachable, !dbg !1477

lpad47:                                           ; preds = %if.else45
  %35 = landingpad { i8*, i32 }
          cleanup, !dbg !1479
  %36 = extractvalue { i8*, i32 } %35, 0, !dbg !1479
  store i8* %36, i8** %exn.slot, align 8, !dbg !1479
  %37 = extractvalue { i8*, i32 } %35, 1, !dbg !1479
  store i32 %37, i32* %ehselector.slot, align 4, !dbg !1479
  call void @__cxa_free_exception(i8* %exception46) #12, !dbg !1477
  br label %eh.resume, !dbg !1477

if.end49:                                         ; preds = %while.end44
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %while.end30
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %while.end
  %38 = load i32, i32* %tmpIndex, align 4, !dbg !1480
  %39 = load i32, i32* %maxChars.addr, align 4, !dbg !1482
  %cmp52 = icmp ugt i32 %38, %39, !dbg !1483
  br i1 %cmp52, label %if.then53, label %if.end57, !dbg !1484

if.then53:                                        ; preds = %if.end51
  %exception54 = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !1485
  %40 = bitcast i8* %exception54 to %"class.xercesc_2_7::IllegalArgumentException"*, !dbg !1485
  %41 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !1485
  invoke void @_ZN11xercesc_2_724IllegalArgumentExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::IllegalArgumentException"* %40, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 159, i32 83, %"class.xercesc_2_7::MemoryManager"* %41)
          to label %invoke.cont56 unwind label %lpad55, !dbg !1485

invoke.cont56:                                    ; preds = %if.then53
  call void @__cxa_throw(i8* %exception54, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_724IllegalArgumentExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::IllegalArgumentException"*)* @_ZN11xercesc_2_724IllegalArgumentExceptionD2Ev to i8*)) #14, !dbg !1485
  unreachable, !dbg !1485

lpad55:                                           ; preds = %if.then53
  %42 = landingpad { i8*, i32 }
          cleanup, !dbg !1487
  %43 = extractvalue { i8*, i32 } %42, 0, !dbg !1487
  store i8* %43, i8** %exn.slot, align 8, !dbg !1487
  %44 = extractvalue { i8*, i32 } %42, 1, !dbg !1487
  store i32 %44, i32* %ehselector.slot, align 4, !dbg !1487
  call void @__cxa_free_exception(i8* %exception54) #12, !dbg !1485
  br label %eh.resume, !dbg !1485

if.end57:                                         ; preds = %if.end51
  call void @llvm.dbg.declare(metadata i32* %outIndex, metadata !1488, metadata !DIExpression()), !dbg !1489
  store i32 0, i32* %outIndex, align 4, !dbg !1489
  br label %for.cond, !dbg !1490

for.cond:                                         ; preds = %for.inc, %if.end57
  %45 = load i32, i32* %tmpIndex, align 4, !dbg !1491
  %cmp58 = icmp ugt i32 %45, 0, !dbg !1494
  br i1 %cmp58, label %for.body, label %for.end, !dbg !1495

for.body:                                         ; preds = %for.cond
  %46 = load i32, i32* %tmpIndex, align 4, !dbg !1496
  %sub = sub i32 %46, 1, !dbg !1497
  %idxprom59 = zext i32 %sub to i64, !dbg !1498
  %arrayidx60 = getelementptr inbounds [128 x i8], [128 x i8]* %tmpBuf, i64 0, i64 %idxprom59, !dbg !1498
  %47 = load i8, i8* %arrayidx60, align 1, !dbg !1498
  %48 = load i8*, i8** %toFill.addr, align 8, !dbg !1499
  %49 = load i32, i32* %outIndex, align 4, !dbg !1500
  %inc61 = add i32 %49, 1, !dbg !1500
  store i32 %inc61, i32* %outIndex, align 4, !dbg !1500
  %idxprom62 = zext i32 %49 to i64, !dbg !1499
  %arrayidx63 = getelementptr inbounds i8, i8* %48, i64 %idxprom62, !dbg !1499
  store i8 %47, i8* %arrayidx63, align 1, !dbg !1501
  br label %for.inc, !dbg !1499

for.inc:                                          ; preds = %for.body
  %50 = load i32, i32* %tmpIndex, align 4, !dbg !1502
  %dec = add i32 %50, -1, !dbg !1502
  store i32 %dec, i32* %tmpIndex, align 4, !dbg !1502
  br label %for.cond, !dbg !1503, !llvm.loop !1504

for.end:                                          ; preds = %for.cond
  %51 = load i8*, i8** %toFill.addr, align 8, !dbg !1506
  %52 = load i32, i32* %outIndex, align 4, !dbg !1507
  %idxprom64 = zext i32 %52 to i64, !dbg !1506
  %arrayidx65 = getelementptr inbounds i8, i8* %51, i64 %idxprom64, !dbg !1506
  store i8 0, i8* %arrayidx65, align 1, !dbg !1508
  br label %return, !dbg !1509

return:                                           ; preds = %for.end, %if.then2
  ret void, !dbg !1509

eh.resume:                                        ; preds = %lpad55, %lpad47, %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !1386
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !1386
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !1386
  %lpad.val66 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !1386
  resume { i8*, i32 } %lpad.val66, !dbg !1386
}

declare dso_local i8* @__cxa_allocate_exception(i64)

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_724IllegalArgumentExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::IllegalArgumentException"* %this, i8* %srcFile, i32 %srcLine, i32 %toThrow, %"class.xercesc_2_7::MemoryManager"* %memoryManager) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !1510 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::IllegalArgumentException"*, align 8
  %srcFile.addr = alloca i8*, align 8
  %srcLine.addr = alloca i32, align 4
  %toThrow.addr = alloca i32, align 4
  %memoryManager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.xercesc_2_7::IllegalArgumentException"* %this, %"class.xercesc_2_7::IllegalArgumentException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::IllegalArgumentException"** %this.addr, metadata !1549, metadata !DIExpression()), !dbg !1551
  store i8* %srcFile, i8** %srcFile.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srcFile.addr, metadata !1552, metadata !DIExpression()), !dbg !1553
  store i32 %srcLine, i32* %srcLine.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srcLine.addr, metadata !1554, metadata !DIExpression()), !dbg !1553
  store i32 %toThrow, i32* %toThrow.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %toThrow.addr, metadata !1555, metadata !DIExpression()), !dbg !1553
  store %"class.xercesc_2_7::MemoryManager"* %memoryManager, %"class.xercesc_2_7::MemoryManager"** %memoryManager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %memoryManager.addr, metadata !1556, metadata !DIExpression()), !dbg !1553
  %this1 = load %"class.xercesc_2_7::IllegalArgumentException"*, %"class.xercesc_2_7::IllegalArgumentException"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::IllegalArgumentException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !1553
  %1 = load i8*, i8** %srcFile.addr, align 8, !dbg !1553
  %2 = load i32, i32* %srcLine.addr, align 4, !dbg !1553
  %3 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %memoryManager.addr, align 8, !dbg !1553
  call void @_ZN11xercesc_2_712XMLExceptionC2EPKcjPNS_13MemoryManagerE(%"class.xercesc_2_7::XMLException"* %0, i8* %1, i32 %2, %"class.xercesc_2_7::MemoryManager"* %3), !dbg !1553
  %4 = bitcast %"class.xercesc_2_7::IllegalArgumentException"* %this1 to i32 (...)***, !dbg !1553
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11xercesc_2_724IllegalArgumentExceptionE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8, !dbg !1553
  %5 = bitcast %"class.xercesc_2_7::IllegalArgumentException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !1557
  %6 = load i32, i32* %toThrow.addr, align 4, !dbg !1557
  invoke void @_ZN11xercesc_2_712XMLException14loadExceptTextENS_10XMLExcepts5CodesE(%"class.xercesc_2_7::XMLException"* %5, i32 %6)
          to label %invoke.cont unwind label %lpad, !dbg !1557

invoke.cont:                                      ; preds = %entry
  ret void, !dbg !1553

lpad:                                             ; preds = %entry
  %7 = landingpad { i8*, i32 }
          cleanup, !dbg !1557
  %8 = extractvalue { i8*, i32 } %7, 0, !dbg !1557
  store i8* %8, i8** %exn.slot, align 8, !dbg !1557
  %9 = extractvalue { i8*, i32 } %7, 1, !dbg !1557
  store i32 %9, i32* %ehselector.slot, align 4, !dbg !1557
  %10 = bitcast %"class.xercesc_2_7::IllegalArgumentException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !1557
  call void @_ZN11xercesc_2_712XMLExceptionD2Ev(%"class.xercesc_2_7::XMLException"* %10) #12, !dbg !1557
  br label %eh.resume, !dbg !1557

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !1557
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !1557
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !1557
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !1557
  resume { i8*, i32 } %lpad.val2, !dbg !1557
}

declare dso_local i32 @__gxx_personality_v0(...)

declare dso_local void @__cxa_free_exception(i8*)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_724IllegalArgumentExceptionD2Ev(%"class.xercesc_2_7::IllegalArgumentException"* %this) unnamed_addr #1 comdat align 2 !dbg !1559 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::IllegalArgumentException"*, align 8
  store %"class.xercesc_2_7::IllegalArgumentException"* %this, %"class.xercesc_2_7::IllegalArgumentException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::IllegalArgumentException"** %this.addr, metadata !1560, metadata !DIExpression()), !dbg !1561
  %this1 = load %"class.xercesc_2_7::IllegalArgumentException"*, %"class.xercesc_2_7::IllegalArgumentException"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::IllegalArgumentException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !1562
  call void @_ZN11xercesc_2_712XMLExceptionD2Ev(%"class.xercesc_2_7::XMLException"* %0) #12, !dbg !1562
  ret void, !dbg !1564
}

declare dso_local void @__cxa_throw(i8*, i8*, i8*)

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_716RuntimeExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::RuntimeException"* %this, i8* %srcFile, i32 %srcLine, i32 %toThrow, %"class.xercesc_2_7::MemoryManager"* %memoryManager) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !1565 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::RuntimeException"*, align 8
  %srcFile.addr = alloca i8*, align 8
  %srcLine.addr = alloca i32, align 4
  %toThrow.addr = alloca i32, align 4
  %memoryManager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.xercesc_2_7::RuntimeException"* %this, %"class.xercesc_2_7::RuntimeException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::RuntimeException"** %this.addr, metadata !1600, metadata !DIExpression()), !dbg !1602
  store i8* %srcFile, i8** %srcFile.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srcFile.addr, metadata !1603, metadata !DIExpression()), !dbg !1604
  store i32 %srcLine, i32* %srcLine.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srcLine.addr, metadata !1605, metadata !DIExpression()), !dbg !1604
  store i32 %toThrow, i32* %toThrow.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %toThrow.addr, metadata !1606, metadata !DIExpression()), !dbg !1604
  store %"class.xercesc_2_7::MemoryManager"* %memoryManager, %"class.xercesc_2_7::MemoryManager"** %memoryManager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %memoryManager.addr, metadata !1607, metadata !DIExpression()), !dbg !1604
  %this1 = load %"class.xercesc_2_7::RuntimeException"*, %"class.xercesc_2_7::RuntimeException"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::RuntimeException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !1604
  %1 = load i8*, i8** %srcFile.addr, align 8, !dbg !1604
  %2 = load i32, i32* %srcLine.addr, align 4, !dbg !1604
  %3 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %memoryManager.addr, align 8, !dbg !1604
  call void @_ZN11xercesc_2_712XMLExceptionC2EPKcjPNS_13MemoryManagerE(%"class.xercesc_2_7::XMLException"* %0, i8* %1, i32 %2, %"class.xercesc_2_7::MemoryManager"* %3), !dbg !1604
  %4 = bitcast %"class.xercesc_2_7::RuntimeException"* %this1 to i32 (...)***, !dbg !1604
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11xercesc_2_716RuntimeExceptionE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8, !dbg !1604
  %5 = bitcast %"class.xercesc_2_7::RuntimeException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !1608
  %6 = load i32, i32* %toThrow.addr, align 4, !dbg !1608
  invoke void @_ZN11xercesc_2_712XMLException14loadExceptTextENS_10XMLExcepts5CodesE(%"class.xercesc_2_7::XMLException"* %5, i32 %6)
          to label %invoke.cont unwind label %lpad, !dbg !1608

invoke.cont:                                      ; preds = %entry
  ret void, !dbg !1604

lpad:                                             ; preds = %entry
  %7 = landingpad { i8*, i32 }
          cleanup, !dbg !1608
  %8 = extractvalue { i8*, i32 } %7, 0, !dbg !1608
  store i8* %8, i8** %exn.slot, align 8, !dbg !1608
  %9 = extractvalue { i8*, i32 } %7, 1, !dbg !1608
  store i32 %9, i32* %ehselector.slot, align 4, !dbg !1608
  %10 = bitcast %"class.xercesc_2_7::RuntimeException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !1608
  call void @_ZN11xercesc_2_712XMLExceptionD2Ev(%"class.xercesc_2_7::XMLException"* %10) #12, !dbg !1608
  br label %eh.resume, !dbg !1608

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !1608
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !1608
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !1608
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !1608
  resume { i8*, i32 } %lpad.val2, !dbg !1608
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_716RuntimeExceptionD2Ev(%"class.xercesc_2_7::RuntimeException"* %this) unnamed_addr #1 comdat align 2 !dbg !1610 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::RuntimeException"*, align 8
  store %"class.xercesc_2_7::RuntimeException"* %this, %"class.xercesc_2_7::RuntimeException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::RuntimeException"** %this.addr, metadata !1611, metadata !DIExpression()), !dbg !1612
  %this1 = load %"class.xercesc_2_7::RuntimeException"*, %"class.xercesc_2_7::RuntimeException"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::RuntimeException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !1613
  call void @_ZN11xercesc_2_712XMLExceptionD2Ev(%"class.xercesc_2_7::XMLException"* %0) #12, !dbg !1613
  ret void, !dbg !1615
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN11xercesc_2_79XMLString9binToTextEjPcjjPNS_13MemoryManagerE(i32 %toFormat, i8* %toFill, i32 %maxChars, i32 %radix, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 !dbg !1616 {
entry:
  %toFormat.addr = alloca i32, align 4
  %toFill.addr = alloca i8*, align 8
  %maxChars.addr = alloca i32, align 4
  %radix.addr = alloca i32, align 4
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  store i32 %toFormat, i32* %toFormat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %toFormat.addr, metadata !1617, metadata !DIExpression()), !dbg !1618
  store i8* %toFill, i8** %toFill.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toFill.addr, metadata !1619, metadata !DIExpression()), !dbg !1620
  store i32 %maxChars, i32* %maxChars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxChars.addr, metadata !1621, metadata !DIExpression()), !dbg !1622
  store i32 %radix, i32* %radix.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %radix.addr, metadata !1623, metadata !DIExpression()), !dbg !1624
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !1625, metadata !DIExpression()), !dbg !1626
  %0 = load i32, i32* %toFormat.addr, align 4, !dbg !1627
  %conv = zext i32 %0 to i64, !dbg !1627
  %1 = load i8*, i8** %toFill.addr, align 8, !dbg !1628
  %2 = load i32, i32* %maxChars.addr, align 4, !dbg !1629
  %3 = load i32, i32* %radix.addr, align 4, !dbg !1630
  %4 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !1631
  call void @_ZN11xercesc_2_79XMLString9binToTextEmPcjjPNS_13MemoryManagerE(i64 %conv, i8* %1, i32 %2, i32 %3, %"class.xercesc_2_7::MemoryManager"* %4), !dbg !1632
  ret void, !dbg !1633
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN11xercesc_2_79XMLString9binToTextElPcjjPNS_13MemoryManagerE(i64 %toFormat, i8* %toFill, i32 %maxChars, i32 %radix, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 !dbg !1634 {
entry:
  %toFormat.addr = alloca i64, align 8
  %toFill.addr = alloca i8*, align 8
  %maxChars.addr = alloca i32, align 4
  %radix.addr = alloca i32, align 4
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %startInd = alloca i32, align 4
  %actualVal = alloca i64, align 8
  store i64 %toFormat, i64* %toFormat.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %toFormat.addr, metadata !1635, metadata !DIExpression()), !dbg !1636
  store i8* %toFill, i8** %toFill.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toFill.addr, metadata !1637, metadata !DIExpression()), !dbg !1638
  store i32 %maxChars, i32* %maxChars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxChars.addr, metadata !1639, metadata !DIExpression()), !dbg !1640
  store i32 %radix, i32* %radix.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %radix.addr, metadata !1641, metadata !DIExpression()), !dbg !1642
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !1643, metadata !DIExpression()), !dbg !1644
  call void @llvm.dbg.declare(metadata i32* %startInd, metadata !1645, metadata !DIExpression()), !dbg !1646
  store i32 0, i32* %startInd, align 4, !dbg !1646
  call void @llvm.dbg.declare(metadata i64* %actualVal, metadata !1647, metadata !DIExpression()), !dbg !1648
  %0 = load i64, i64* %toFormat.addr, align 8, !dbg !1649
  %cmp = icmp slt i64 %0, 0, !dbg !1651
  br i1 %cmp, label %if.then, label %if.else, !dbg !1652

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %toFill.addr, align 8, !dbg !1653
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !1653
  store i8 45, i8* %arrayidx, align 1, !dbg !1655
  %2 = load i32, i32* %startInd, align 4, !dbg !1656
  %inc = add i32 %2, 1, !dbg !1656
  store i32 %inc, i32* %startInd, align 4, !dbg !1656
  %3 = load i64, i64* %toFormat.addr, align 8, !dbg !1657
  %mul = mul nsw i64 %3, -1, !dbg !1658
  store i64 %mul, i64* %actualVal, align 8, !dbg !1659
  br label %if.end, !dbg !1660

if.else:                                          ; preds = %entry
  %4 = load i64, i64* %toFormat.addr, align 8, !dbg !1661
  store i64 %4, i64* %actualVal, align 8, !dbg !1663
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load i64, i64* %actualVal, align 8, !dbg !1664
  %6 = load i8*, i8** %toFill.addr, align 8, !dbg !1665
  %7 = load i32, i32* %startInd, align 4, !dbg !1666
  %idxprom = zext i32 %7 to i64, !dbg !1665
  %arrayidx1 = getelementptr inbounds i8, i8* %6, i64 %idxprom, !dbg !1665
  %8 = load i32, i32* %maxChars.addr, align 4, !dbg !1667
  %9 = load i32, i32* %radix.addr, align 4, !dbg !1668
  %10 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !1669
  call void @_ZN11xercesc_2_79XMLString9binToTextEmPcjjPNS_13MemoryManagerE(i64 %5, i8* %arrayidx1, i32 %8, i32 %9, %"class.xercesc_2_7::MemoryManager"* %10), !dbg !1670
  ret void, !dbg !1671
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN11xercesc_2_79XMLString9binToTextEiPcjjPNS_13MemoryManagerE(i32 %toFormat, i8* %toFill, i32 %maxChars, i32 %radix, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 !dbg !1672 {
entry:
  %toFormat.addr = alloca i32, align 4
  %toFill.addr = alloca i8*, align 8
  %maxChars.addr = alloca i32, align 4
  %radix.addr = alloca i32, align 4
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %startInd = alloca i32, align 4
  %actualVal = alloca i64, align 8
  store i32 %toFormat, i32* %toFormat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %toFormat.addr, metadata !1673, metadata !DIExpression()), !dbg !1674
  store i8* %toFill, i8** %toFill.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toFill.addr, metadata !1675, metadata !DIExpression()), !dbg !1676
  store i32 %maxChars, i32* %maxChars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxChars.addr, metadata !1677, metadata !DIExpression()), !dbg !1678
  store i32 %radix, i32* %radix.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %radix.addr, metadata !1679, metadata !DIExpression()), !dbg !1680
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !1681, metadata !DIExpression()), !dbg !1682
  call void @llvm.dbg.declare(metadata i32* %startInd, metadata !1683, metadata !DIExpression()), !dbg !1684
  store i32 0, i32* %startInd, align 4, !dbg !1684
  call void @llvm.dbg.declare(metadata i64* %actualVal, metadata !1685, metadata !DIExpression()), !dbg !1686
  %0 = load i32, i32* %toFormat.addr, align 4, !dbg !1687
  %cmp = icmp slt i32 %0, 0, !dbg !1689
  br i1 %cmp, label %if.then, label %if.else, !dbg !1690

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %toFill.addr, align 8, !dbg !1691
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !1691
  store i8 45, i8* %arrayidx, align 1, !dbg !1693
  %2 = load i32, i32* %startInd, align 4, !dbg !1694
  %inc = add i32 %2, 1, !dbg !1694
  store i32 %inc, i32* %startInd, align 4, !dbg !1694
  %3 = load i32, i32* %toFormat.addr, align 4, !dbg !1695
  %mul = mul nsw i32 %3, -1, !dbg !1696
  %conv = sext i32 %mul to i64, !dbg !1697
  store i64 %conv, i64* %actualVal, align 8, !dbg !1698
  br label %if.end, !dbg !1699

if.else:                                          ; preds = %entry
  %4 = load i32, i32* %toFormat.addr, align 4, !dbg !1700
  %conv1 = sext i32 %4 to i64, !dbg !1702
  store i64 %conv1, i64* %actualVal, align 8, !dbg !1703
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load i64, i64* %actualVal, align 8, !dbg !1704
  %6 = load i8*, i8** %toFill.addr, align 8, !dbg !1705
  %7 = load i32, i32* %startInd, align 4, !dbg !1706
  %idxprom = zext i32 %7 to i64, !dbg !1705
  %arrayidx2 = getelementptr inbounds i8, i8* %6, i64 %idxprom, !dbg !1705
  %8 = load i32, i32* %maxChars.addr, align 4, !dbg !1707
  %9 = load i32, i32* %radix.addr, align 4, !dbg !1708
  %10 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !1709
  call void @_ZN11xercesc_2_79XMLString9binToTextEmPcjjPNS_13MemoryManagerE(i64 %5, i8* %arrayidx2, i32 %8, i32 %9, %"class.xercesc_2_7::MemoryManager"* %10), !dbg !1710
  ret void, !dbg !1711
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN11xercesc_2_79XMLString9catStringEPcPKc(i8* %target, i8* %src) #1 align 2 !dbg !1712 {
entry:
  %target.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  store i8* %target, i8** %target.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %target.addr, metadata !1713, metadata !DIExpression()), !dbg !1714
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1715, metadata !DIExpression()), !dbg !1716
  %0 = load i8*, i8** %target.addr, align 8, !dbg !1717
  %1 = load i8*, i8** %src.addr, align 8, !dbg !1718
  %call = call i8* @strcat(i8* %0, i8* %1) #12, !dbg !1719
  ret void, !dbg !1720
}

; Function Attrs: nounwind
declare dso_local i8* @strcat(i8*, i8*) #4

; Function Attrs: noinline uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString14compareIStringEPKcS2_(i8* %str1, i8* %str2) #3 align 2 !dbg !1721 {
entry:
  %str1.addr = alloca i8*, align 8
  %str2.addr = alloca i8*, align 8
  store i8* %str1, i8** %str1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str1.addr, metadata !1722, metadata !DIExpression()), !dbg !1723
  store i8* %str2, i8** %str2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str2.addr, metadata !1724, metadata !DIExpression()), !dbg !1725
  %0 = load i8*, i8** %str1.addr, align 8, !dbg !1726
  %1 = load i8*, i8** %str2.addr, align 8, !dbg !1727
  %call = call i32 @_Z7stricmpPKcS0_(i8* %0, i8* %1), !dbg !1728
  ret i32 %call, !dbg !1729
}

declare dso_local i32 @_Z7stricmpPKcS0_(i8*, i8*) #5

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString14compareNStringEPKcS2_j(i8* %str1, i8* %str2, i32 %count) #1 align 2 !dbg !1730 {
entry:
  %retval = alloca i32, align 4
  %str1.addr = alloca i8*, align 8
  %str2.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  store i8* %str1, i8** %str1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str1.addr, metadata !1731, metadata !DIExpression()), !dbg !1732
  store i8* %str2, i8** %str2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str2.addr, metadata !1733, metadata !DIExpression()), !dbg !1734
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !1735, metadata !DIExpression()), !dbg !1736
  %0 = load i32, i32* %count.addr, align 4, !dbg !1737
  %tobool = icmp ne i32 %0, 0, !dbg !1737
  br i1 %tobool, label %if.end, label %if.then, !dbg !1739

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !1740
  br label %return, !dbg !1740

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %str1.addr, align 8, !dbg !1741
  %2 = load i8*, i8** %str2.addr, align 8, !dbg !1742
  %3 = load i32, i32* %count.addr, align 4, !dbg !1743
  %conv = zext i32 %3 to i64, !dbg !1743
  %call = call i32 @strncmp(i8* %1, i8* %2, i64 %conv) #15, !dbg !1744
  store i32 %call, i32* %retval, align 4, !dbg !1745
  br label %return, !dbg !1745

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !1746
  ret i32 %4, !dbg !1746
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #6

; Function Attrs: noinline uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString15compareNIStringEPKcS2_j(i8* %str1, i8* %str2, i32 %count) #3 align 2 !dbg !1747 {
entry:
  %retval = alloca i32, align 4
  %str1.addr = alloca i8*, align 8
  %str2.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  store i8* %str1, i8** %str1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str1.addr, metadata !1748, metadata !DIExpression()), !dbg !1749
  store i8* %str2, i8** %str2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str2.addr, metadata !1750, metadata !DIExpression()), !dbg !1751
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !1752, metadata !DIExpression()), !dbg !1753
  %0 = load i32, i32* %count.addr, align 4, !dbg !1754
  %tobool = icmp ne i32 %0, 0, !dbg !1754
  br i1 %tobool, label %if.end, label %if.then, !dbg !1756

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !1757
  br label %return, !dbg !1757

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %str1.addr, align 8, !dbg !1758
  %2 = load i8*, i8** %str2.addr, align 8, !dbg !1759
  %3 = load i32, i32* %count.addr, align 4, !dbg !1760
  %call = call i32 @_Z8strnicmpPKcS0_j(i8* %1, i8* %2, i32 %3), !dbg !1761
  store i32 %call, i32* %retval, align 4, !dbg !1762
  br label %return, !dbg !1762

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !1763
  ret i32 %4, !dbg !1763
}

declare dso_local i32 @_Z8strnicmpPKcS0_j(i8*, i8*, i32) #5

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString13compareStringEPKcS2_(i8* %str1, i8* %str2) #1 align 2 !dbg !1764 {
entry:
  %str1.addr = alloca i8*, align 8
  %str2.addr = alloca i8*, align 8
  store i8* %str1, i8** %str1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str1.addr, metadata !1765, metadata !DIExpression()), !dbg !1766
  store i8* %str2, i8** %str2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str2.addr, metadata !1767, metadata !DIExpression()), !dbg !1768
  %0 = load i8*, i8** %str1.addr, align 8, !dbg !1769
  %1 = load i8*, i8** %str2.addr, align 8, !dbg !1770
  %call = call i32 @strcmp(i8* %0, i8* %1) #15, !dbg !1771
  ret i32 %call, !dbg !1772
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #6

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN11xercesc_2_79XMLString10copyStringEPcPKc(i8* %target, i8* %src) #1 align 2 !dbg !1773 {
entry:
  %target.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  store i8* %target, i8** %target.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %target.addr, metadata !1774, metadata !DIExpression()), !dbg !1775
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1776, metadata !DIExpression()), !dbg !1777
  %0 = load i8*, i8** %target.addr, align 8, !dbg !1778
  %1 = load i8*, i8** %src.addr, align 8, !dbg !1779
  %call = call i8* @strcpy(i8* %0, i8* %1) #12, !dbg !1780
  ret void, !dbg !1781
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN11xercesc_2_79XMLString3cutEPtj(i16* %toCutFrom, i32 %count) #1 align 2 !dbg !1782 {
entry:
  %toCutFrom.addr = alloca i16*, align 8
  %count.addr = alloca i32, align 4
  %targetPtr = alloca i16*, align 8
  %srcPtr = alloca i16*, align 8
  store i16* %toCutFrom, i16** %toCutFrom.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toCutFrom.addr, metadata !1783, metadata !DIExpression()), !dbg !1784
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !1785, metadata !DIExpression()), !dbg !1786
  %0 = load i32, i32* %count.addr, align 4, !dbg !1787
  %tobool = icmp ne i32 %0, 0, !dbg !1787
  br i1 %tobool, label %if.end, label %if.then, !dbg !1789

if.then:                                          ; preds = %entry
  br label %return, !dbg !1790

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i16** %targetPtr, metadata !1791, metadata !DIExpression()), !dbg !1792
  %1 = load i16*, i16** %toCutFrom.addr, align 8, !dbg !1793
  store i16* %1, i16** %targetPtr, align 8, !dbg !1792
  call void @llvm.dbg.declare(metadata i16** %srcPtr, metadata !1794, metadata !DIExpression()), !dbg !1795
  %2 = load i16*, i16** %toCutFrom.addr, align 8, !dbg !1796
  %3 = load i32, i32* %count.addr, align 4, !dbg !1797
  %idx.ext = zext i32 %3 to i64, !dbg !1798
  %add.ptr = getelementptr inbounds i16, i16* %2, i64 %idx.ext, !dbg !1798
  store i16* %add.ptr, i16** %srcPtr, align 8, !dbg !1795
  br label %while.cond, !dbg !1799

while.cond:                                       ; preds = %while.body, %if.end
  %4 = load i16*, i16** %srcPtr, align 8, !dbg !1800
  %5 = load i16, i16* %4, align 2, !dbg !1801
  %tobool1 = icmp ne i16 %5, 0, !dbg !1801
  br i1 %tobool1, label %while.body, label %while.end, !dbg !1799

while.body:                                       ; preds = %while.cond
  %6 = load i16*, i16** %srcPtr, align 8, !dbg !1802
  %incdec.ptr = getelementptr inbounds i16, i16* %6, i32 1, !dbg !1802
  store i16* %incdec.ptr, i16** %srcPtr, align 8, !dbg !1802
  %7 = load i16, i16* %6, align 2, !dbg !1803
  %8 = load i16*, i16** %targetPtr, align 8, !dbg !1804
  %incdec.ptr2 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !1804
  store i16* %incdec.ptr2, i16** %targetPtr, align 8, !dbg !1804
  store i16 %7, i16* %8, align 2, !dbg !1805
  br label %while.cond, !dbg !1799, !llvm.loop !1806

while.end:                                        ; preds = %while.cond
  %9 = load i16*, i16** %targetPtr, align 8, !dbg !1807
  store i16 0, i16* %9, align 2, !dbg !1808
  br label %return, !dbg !1809

return:                                           ; preds = %while.end, %if.then
  ret void, !dbg !1809
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString4hashEPKcjPNS_13MemoryManagerE(i8* %tohash, i32 %hashModulus, %"class.xercesc_2_7::MemoryManager"* %0) #1 align 2 !dbg !1810 {
entry:
  %tohash.addr = alloca i8*, align 8
  %hashModulus.addr = alloca i32, align 4
  %.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %hashVal = alloca i32, align 4
  %curCh = alloca i8*, align 8
  %top = alloca i32, align 4
  store i8* %tohash, i8** %tohash.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tohash.addr, metadata !1811, metadata !DIExpression()), !dbg !1812
  store i32 %hashModulus, i32* %hashModulus.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hashModulus.addr, metadata !1813, metadata !DIExpression()), !dbg !1814
  store %"class.xercesc_2_7::MemoryManager"* %0, %"class.xercesc_2_7::MemoryManager"** %.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %.addr, metadata !1815, metadata !DIExpression()), !dbg !1816
  call void @llvm.dbg.declare(metadata i32* %hashVal, metadata !1817, metadata !DIExpression()), !dbg !1818
  store i32 0, i32* %hashVal, align 4, !dbg !1818
  %1 = load i8*, i8** %tohash.addr, align 8, !dbg !1819
  %tobool = icmp ne i8* %1, null, !dbg !1819
  br i1 %tobool, label %if.then, label %if.end, !dbg !1821

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %curCh, metadata !1822, metadata !DIExpression()), !dbg !1824
  %2 = load i8*, i8** %tohash.addr, align 8, !dbg !1825
  store i8* %2, i8** %curCh, align 8, !dbg !1824
  br label %while.cond, !dbg !1826

while.cond:                                       ; preds = %while.body, %if.then
  %3 = load i8*, i8** %curCh, align 8, !dbg !1827
  %4 = load i8, i8* %3, align 1, !dbg !1828
  %tobool1 = icmp ne i8 %4, 0, !dbg !1828
  br i1 %tobool1, label %while.body, label %while.end, !dbg !1826

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %top, metadata !1829, metadata !DIExpression()), !dbg !1831
  %5 = load i32, i32* %hashVal, align 4, !dbg !1832
  %shr = lshr i32 %5, 24, !dbg !1833
  store i32 %shr, i32* %top, align 4, !dbg !1831
  %6 = load i32, i32* %hashVal, align 4, !dbg !1834
  %mul = mul i32 %6, 37, !dbg !1835
  %7 = load i32, i32* %top, align 4, !dbg !1836
  %add = add i32 %mul, %7, !dbg !1837
  %8 = load i8*, i8** %curCh, align 8, !dbg !1838
  %9 = load i8, i8* %8, align 1, !dbg !1839
  %conv = sext i8 %9 to i32, !dbg !1840
  %add2 = add i32 %add, %conv, !dbg !1841
  %10 = load i32, i32* %hashVal, align 4, !dbg !1842
  %add3 = add i32 %10, %add2, !dbg !1842
  store i32 %add3, i32* %hashVal, align 4, !dbg !1842
  %11 = load i8*, i8** %curCh, align 8, !dbg !1843
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !1843
  store i8* %incdec.ptr, i8** %curCh, align 8, !dbg !1843
  br label %while.cond, !dbg !1826, !llvm.loop !1844

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !1846

if.end:                                           ; preds = %while.end, %entry
  %12 = load i32, i32* %hashVal, align 4, !dbg !1847
  %13 = load i32, i32* %hashModulus.addr, align 4, !dbg !1848
  %rem = urem i32 %12, %13, !dbg !1849
  ret i32 %rem, !dbg !1850
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString7indexOfEPKcc(i8* %toSearch, i8 signext %ch) #1 align 2 !dbg !1851 {
entry:
  %retval = alloca i32, align 4
  %toSearch.addr = alloca i8*, align 8
  %ch.addr = alloca i8, align 1
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %toSearch, i8** %toSearch.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toSearch.addr, metadata !1852, metadata !DIExpression()), !dbg !1853
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !1854, metadata !DIExpression()), !dbg !1855
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1856, metadata !DIExpression()), !dbg !1857
  %0 = load i8*, i8** %toSearch.addr, align 8, !dbg !1858
  %call = call i64 @strlen(i8* %0) #15, !dbg !1859
  %conv = trunc i64 %call to i32, !dbg !1859
  store i32 %conv, i32* %len, align 4, !dbg !1857
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1860, metadata !DIExpression()), !dbg !1862
  store i32 0, i32* %i, align 4, !dbg !1862
  br label %for.cond, !dbg !1863

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !1864
  %2 = load i32, i32* %len, align 4, !dbg !1866
  %cmp = icmp ult i32 %1, %2, !dbg !1867
  br i1 %cmp, label %for.body, label %for.end, !dbg !1868

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %toSearch.addr, align 8, !dbg !1869
  %4 = load i32, i32* %i, align 4, !dbg !1872
  %idxprom = zext i32 %4 to i64, !dbg !1869
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !1869
  %5 = load i8, i8* %arrayidx, align 1, !dbg !1869
  %conv1 = sext i8 %5 to i32, !dbg !1869
  %6 = load i8, i8* %ch.addr, align 1, !dbg !1873
  %conv2 = sext i8 %6 to i32, !dbg !1873
  %cmp3 = icmp eq i32 %conv1, %conv2, !dbg !1874
  br i1 %cmp3, label %if.then, label %if.end, !dbg !1875

if.then:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !1876
  store i32 %7, i32* %retval, align 4, !dbg !1877
  br label %return, !dbg !1877

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !1878

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !1879
  %inc = add i32 %8, 1, !dbg !1879
  store i32 %inc, i32* %i, align 4, !dbg !1879
  br label %for.cond, !dbg !1880, !llvm.loop !1881

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !1883
  br label %return, !dbg !1883

return:                                           ; preds = %for.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !1884
  ret i32 %9, !dbg !1884
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #6

; Function Attrs: noinline uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString7indexOfEPKccjPNS_13MemoryManagerE(i8* %toSearch, i8 signext %ch, i32 %fromIndex, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !1885 {
entry:
  %retval = alloca i32, align 4
  %toSearch.addr = alloca i8*, align 8
  %ch.addr = alloca i8, align 1
  %fromIndex.addr = alloca i32, align 4
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %len = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %i = alloca i32, align 4
  store i8* %toSearch, i8** %toSearch.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toSearch.addr, metadata !1886, metadata !DIExpression()), !dbg !1887
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !1888, metadata !DIExpression()), !dbg !1889
  store i32 %fromIndex, i32* %fromIndex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fromIndex.addr, metadata !1890, metadata !DIExpression()), !dbg !1891
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !1892, metadata !DIExpression()), !dbg !1893
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1894, metadata !DIExpression()), !dbg !1895
  %0 = load i8*, i8** %toSearch.addr, align 8, !dbg !1896
  %call = call i64 @strlen(i8* %0) #15, !dbg !1897
  %conv = trunc i64 %call to i32, !dbg !1897
  store i32 %conv, i32* %len, align 4, !dbg !1895
  %1 = load i32, i32* %fromIndex.addr, align 4, !dbg !1898
  %2 = load i32, i32* %len, align 4, !dbg !1900
  %sub = sub nsw i32 %2, 1, !dbg !1901
  %cmp = icmp sgt i32 %1, %sub, !dbg !1902
  br i1 %cmp, label %if.then, label %if.end, !dbg !1903

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !1904
  %3 = bitcast i8* %exception to %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, !dbg !1904
  %4 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !1904
  invoke void @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 352, i32 84, %"class.xercesc_2_7::MemoryManager"* %4)
          to label %invoke.cont unwind label %lpad, !dbg !1904

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*)* @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionD2Ev to i8*)) #14, !dbg !1904
  unreachable, !dbg !1904

lpad:                                             ; preds = %if.then
  %5 = landingpad { i8*, i32 }
          cleanup, !dbg !1905
  %6 = extractvalue { i8*, i32 } %5, 0, !dbg !1905
  store i8* %6, i8** %exn.slot, align 8, !dbg !1905
  %7 = extractvalue { i8*, i32 } %5, 1, !dbg !1905
  store i32 %7, i32* %ehselector.slot, align 4, !dbg !1905
  call void @__cxa_free_exception(i8* %exception) #12, !dbg !1904
  br label %eh.resume, !dbg !1904

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1906, metadata !DIExpression()), !dbg !1908
  %8 = load i32, i32* %fromIndex.addr, align 4, !dbg !1909
  store i32 %8, i32* %i, align 4, !dbg !1908
  br label %for.cond, !dbg !1910

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !1911
  %10 = load i32, i32* %len, align 4, !dbg !1913
  %cmp1 = icmp ult i32 %9, %10, !dbg !1914
  br i1 %cmp1, label %for.body, label %for.end, !dbg !1915

for.body:                                         ; preds = %for.cond
  %11 = load i8*, i8** %toSearch.addr, align 8, !dbg !1916
  %12 = load i32, i32* %i, align 4, !dbg !1919
  %idxprom = zext i32 %12 to i64, !dbg !1916
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 %idxprom, !dbg !1916
  %13 = load i8, i8* %arrayidx, align 1, !dbg !1916
  %conv2 = sext i8 %13 to i32, !dbg !1916
  %14 = load i8, i8* %ch.addr, align 1, !dbg !1920
  %conv3 = sext i8 %14 to i32, !dbg !1920
  %cmp4 = icmp eq i32 %conv2, %conv3, !dbg !1921
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !1922

if.then5:                                         ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !1923
  store i32 %15, i32* %retval, align 4, !dbg !1924
  br label %return, !dbg !1924

if.end6:                                          ; preds = %for.body
  br label %for.inc, !dbg !1925

for.inc:                                          ; preds = %if.end6
  %16 = load i32, i32* %i, align 4, !dbg !1926
  %inc = add i32 %16, 1, !dbg !1926
  store i32 %inc, i32* %i, align 4, !dbg !1926
  br label %for.cond, !dbg !1927, !llvm.loop !1928

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !1930
  br label %return, !dbg !1930

return:                                           ; preds = %for.end, %if.then5
  %17 = load i32, i32* %retval, align 4, !dbg !1931
  ret i32 %17, !dbg !1931

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !1904
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !1904
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !1904
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !1904
  resume { i8*, i32 } %lpad.val7, !dbg !1904
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this, i8* %srcFile, i32 %srcLine, i32 %toThrow, %"class.xercesc_2_7::MemoryManager"* %memoryManager) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !1932 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, align 8
  %srcFile.addr = alloca i8*, align 8
  %srcLine.addr = alloca i32, align 4
  %toThrow.addr = alloca i32, align 4
  %memoryManager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this, %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %this.addr, metadata !1967, metadata !DIExpression()), !dbg !1969
  store i8* %srcFile, i8** %srcFile.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srcFile.addr, metadata !1970, metadata !DIExpression()), !dbg !1971
  store i32 %srcLine, i32* %srcLine.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srcLine.addr, metadata !1972, metadata !DIExpression()), !dbg !1971
  store i32 %toThrow, i32* %toThrow.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %toThrow.addr, metadata !1973, metadata !DIExpression()), !dbg !1971
  store %"class.xercesc_2_7::MemoryManager"* %memoryManager, %"class.xercesc_2_7::MemoryManager"** %memoryManager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %memoryManager.addr, metadata !1974, metadata !DIExpression()), !dbg !1971
  %this1 = load %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !1971
  %1 = load i8*, i8** %srcFile.addr, align 8, !dbg !1971
  %2 = load i32, i32* %srcLine.addr, align 4, !dbg !1971
  %3 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %memoryManager.addr, align 8, !dbg !1971
  call void @_ZN11xercesc_2_712XMLExceptionC2EPKcjPNS_13MemoryManagerE(%"class.xercesc_2_7::XMLException"* %0, i8* %1, i32 %2, %"class.xercesc_2_7::MemoryManager"* %3), !dbg !1971
  %4 = bitcast %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this1 to i32 (...)***, !dbg !1971
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8, !dbg !1971
  %5 = bitcast %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !1975
  %6 = load i32, i32* %toThrow.addr, align 4, !dbg !1975
  invoke void @_ZN11xercesc_2_712XMLException14loadExceptTextENS_10XMLExcepts5CodesE(%"class.xercesc_2_7::XMLException"* %5, i32 %6)
          to label %invoke.cont unwind label %lpad, !dbg !1975

invoke.cont:                                      ; preds = %entry
  ret void, !dbg !1971

lpad:                                             ; preds = %entry
  %7 = landingpad { i8*, i32 }
          cleanup, !dbg !1975
  %8 = extractvalue { i8*, i32 } %7, 0, !dbg !1975
  store i8* %8, i8** %exn.slot, align 8, !dbg !1975
  %9 = extractvalue { i8*, i32 } %7, 1, !dbg !1975
  store i32 %9, i32* %ehselector.slot, align 4, !dbg !1975
  %10 = bitcast %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !1975
  call void @_ZN11xercesc_2_712XMLExceptionD2Ev(%"class.xercesc_2_7::XMLException"* %10) #12, !dbg !1975
  br label %eh.resume, !dbg !1975

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !1975
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !1975
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !1975
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !1975
  resume { i8*, i32 } %lpad.val2, !dbg !1975
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionD2Ev(%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this) unnamed_addr #1 comdat align 2 !dbg !1977 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, align 8
  store %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this, %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %this.addr, metadata !1978, metadata !DIExpression()), !dbg !1979
  %this1 = load %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !1980
  call void @_ZN11xercesc_2_712XMLExceptionD2Ev(%"class.xercesc_2_7::XMLException"* %0) #12, !dbg !1980
  ret void, !dbg !1982
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString11lastIndexOfEPKcc(i8* %toSearch, i8 signext %ch) #1 align 2 !dbg !1983 {
entry:
  %retval = alloca i32, align 4
  %toSearch.addr = alloca i8*, align 8
  %ch.addr = alloca i8, align 1
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %toSearch, i8** %toSearch.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toSearch.addr, metadata !1984, metadata !DIExpression()), !dbg !1985
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !1986, metadata !DIExpression()), !dbg !1987
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1988, metadata !DIExpression()), !dbg !1989
  %0 = load i8*, i8** %toSearch.addr, align 8, !dbg !1990
  %call = call i64 @strlen(i8* %0) #15, !dbg !1991
  %conv = trunc i64 %call to i32, !dbg !1991
  store i32 %conv, i32* %len, align 4, !dbg !1989
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1992, metadata !DIExpression()), !dbg !1994
  %1 = load i32, i32* %len, align 4, !dbg !1995
  %sub = sub nsw i32 %1, 1, !dbg !1996
  store i32 %sub, i32* %i, align 4, !dbg !1994
  br label %for.cond, !dbg !1997

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !1998
  %cmp = icmp sge i32 %2, 0, !dbg !2000
  br i1 %cmp, label %for.body, label %for.end, !dbg !2001

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %toSearch.addr, align 8, !dbg !2002
  %4 = load i32, i32* %i, align 4, !dbg !2005
  %idxprom = sext i32 %4 to i64, !dbg !2002
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !2002
  %5 = load i8, i8* %arrayidx, align 1, !dbg !2002
  %conv1 = sext i8 %5 to i32, !dbg !2002
  %6 = load i8, i8* %ch.addr, align 1, !dbg !2006
  %conv2 = sext i8 %6 to i32, !dbg !2006
  %cmp3 = icmp eq i32 %conv1, %conv2, !dbg !2007
  br i1 %cmp3, label %if.then, label %if.end, !dbg !2008

if.then:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !2009
  store i32 %7, i32* %retval, align 4, !dbg !2010
  br label %return, !dbg !2010

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !2011

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !2012
  %dec = add nsw i32 %8, -1, !dbg !2012
  store i32 %dec, i32* %i, align 4, !dbg !2012
  br label %for.cond, !dbg !2013, !llvm.loop !2014

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !2016
  br label %return, !dbg !2016

return:                                           ; preds = %for.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !2017
  ret i32 %9, !dbg !2017
}

; Function Attrs: noinline uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString11lastIndexOfEPKccjPNS_13MemoryManagerE(i8* %toSearch, i8 signext %ch, i32 %fromIndex, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !2018 {
entry:
  %retval = alloca i32, align 4
  %toSearch.addr = alloca i8*, align 8
  %ch.addr = alloca i8, align 1
  %fromIndex.addr = alloca i32, align 4
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %len = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %i = alloca i32, align 4
  store i8* %toSearch, i8** %toSearch.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toSearch.addr, metadata !2019, metadata !DIExpression()), !dbg !2020
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !2021, metadata !DIExpression()), !dbg !2022
  store i32 %fromIndex, i32* %fromIndex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fromIndex.addr, metadata !2023, metadata !DIExpression()), !dbg !2024
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !2025, metadata !DIExpression()), !dbg !2026
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2027, metadata !DIExpression()), !dbg !2028
  %0 = load i8*, i8** %toSearch.addr, align 8, !dbg !2029
  %call = call i64 @strlen(i8* %0) #15, !dbg !2030
  %conv = trunc i64 %call to i32, !dbg !2030
  store i32 %conv, i32* %len, align 4, !dbg !2028
  %1 = load i32, i32* %fromIndex.addr, align 4, !dbg !2031
  %2 = load i32, i32* %len, align 4, !dbg !2033
  %sub = sub nsw i32 %2, 1, !dbg !2034
  %cmp = icmp sgt i32 %1, %sub, !dbg !2035
  br i1 %cmp, label %if.then, label %if.end, !dbg !2036

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !2037
  %3 = bitcast i8* %exception to %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, !dbg !2037
  %4 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !2037
  invoke void @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 382, i32 84, %"class.xercesc_2_7::MemoryManager"* %4)
          to label %invoke.cont unwind label %lpad, !dbg !2037

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*)* @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionD2Ev to i8*)) #14, !dbg !2037
  unreachable, !dbg !2037

lpad:                                             ; preds = %if.then
  %5 = landingpad { i8*, i32 }
          cleanup, !dbg !2038
  %6 = extractvalue { i8*, i32 } %5, 0, !dbg !2038
  store i8* %6, i8** %exn.slot, align 8, !dbg !2038
  %7 = extractvalue { i8*, i32 } %5, 1, !dbg !2038
  store i32 %7, i32* %ehselector.slot, align 4, !dbg !2038
  call void @__cxa_free_exception(i8* %exception) #12, !dbg !2037
  br label %eh.resume, !dbg !2037

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2039, metadata !DIExpression()), !dbg !2041
  %8 = load i32, i32* %fromIndex.addr, align 4, !dbg !2042
  store i32 %8, i32* %i, align 4, !dbg !2041
  br label %for.cond, !dbg !2043

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !2044
  %cmp1 = icmp sge i32 %9, 0, !dbg !2046
  br i1 %cmp1, label %for.body, label %for.end, !dbg !2047

for.body:                                         ; preds = %for.cond
  %10 = load i8*, i8** %toSearch.addr, align 8, !dbg !2048
  %11 = load i32, i32* %i, align 4, !dbg !2051
  %idxprom = sext i32 %11 to i64, !dbg !2048
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %idxprom, !dbg !2048
  %12 = load i8, i8* %arrayidx, align 1, !dbg !2048
  %conv2 = sext i8 %12 to i32, !dbg !2048
  %13 = load i8, i8* %ch.addr, align 1, !dbg !2052
  %conv3 = sext i8 %13 to i32, !dbg !2052
  %cmp4 = icmp eq i32 %conv2, %conv3, !dbg !2053
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !2054

if.then5:                                         ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !2055
  store i32 %14, i32* %retval, align 4, !dbg !2056
  br label %return, !dbg !2056

if.end6:                                          ; preds = %for.body
  br label %for.inc, !dbg !2057

for.inc:                                          ; preds = %if.end6
  %15 = load i32, i32* %i, align 4, !dbg !2058
  %dec = add nsw i32 %15, -1, !dbg !2058
  store i32 %dec, i32* %i, align 4, !dbg !2058
  br label %for.cond, !dbg !2059, !llvm.loop !2060

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !2062
  br label %return, !dbg !2062

return:                                           ; preds = %for.end, %if.then5
  %16 = load i32, i32* %retval, align 4, !dbg !2063
  ret i32 %16, !dbg !2063

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !2037
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !2037
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !2037
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !2037
  resume { i8*, i32 } %lpad.val7, !dbg !2037
}

; Function Attrs: noinline uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString13replaceTokensEPtjPKtS3_S3_S3_PNS_13MemoryManagerE(i16* %errText, i32 %maxChars, i16* %text1, i16* %text2, i16* %text3, i16* %text4, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 !dbg !2064 {
entry:
  %errText.addr = alloca i16*, align 8
  %maxChars.addr = alloca i32, align 4
  %text1.addr = alloca i16*, align 8
  %text2.addr = alloca i16*, align 8
  %text3.addr = alloca i16*, align 8
  %text4.addr = alloca i16*, align 8
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %orgText = alloca i16*, align 8
  %janText = alloca %"class.xercesc_2_7::ArrayJanitor", align 8
  %pszSrc = alloca i16*, align 8
  %curOutInd = alloca i32, align 4
  %tokCh = alloca i16, align 2
  %repText = alloca i16*, align 8
  store i16* %errText, i16** %errText.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %errText.addr, metadata !2065, metadata !DIExpression()), !dbg !2066
  store i32 %maxChars, i32* %maxChars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxChars.addr, metadata !2067, metadata !DIExpression()), !dbg !2068
  store i16* %text1, i16** %text1.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %text1.addr, metadata !2069, metadata !DIExpression()), !dbg !2070
  store i16* %text2, i16** %text2.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %text2.addr, metadata !2071, metadata !DIExpression()), !dbg !2072
  store i16* %text3, i16** %text3.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %text3.addr, metadata !2073, metadata !DIExpression()), !dbg !2074
  store i16* %text4, i16** %text4.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %text4.addr, metadata !2075, metadata !DIExpression()), !dbg !2076
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !2077, metadata !DIExpression()), !dbg !2078
  call void @llvm.dbg.declare(metadata i16** %orgText, metadata !2079, metadata !DIExpression()), !dbg !2080
  %0 = load i16*, i16** %errText.addr, align 8, !dbg !2081
  %1 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !2082
  %call = call i16* @_ZN11xercesc_2_79XMLString9replicateEPKtPNS_13MemoryManagerE(i16* %0, %"class.xercesc_2_7::MemoryManager"* %1), !dbg !2083
  store i16* %call, i16** %orgText, align 8, !dbg !2080
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::ArrayJanitor"* %janText, metadata !2084, metadata !DIExpression()), !dbg !2131
  %2 = load i16*, i16** %orgText, align 8, !dbg !2132
  %3 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !2133
  call void @_ZN11xercesc_2_712ArrayJanitorItEC2EPtPNS_13MemoryManagerE(%"class.xercesc_2_7::ArrayJanitor"* %janText, i16* %2, %"class.xercesc_2_7::MemoryManager"* %3), !dbg !2131
  call void @llvm.dbg.declare(metadata i16** %pszSrc, metadata !2134, metadata !DIExpression()), !dbg !2135
  %4 = load i16*, i16** %orgText, align 8, !dbg !2136
  store i16* %4, i16** %pszSrc, align 8, !dbg !2135
  call void @llvm.dbg.declare(metadata i32* %curOutInd, metadata !2137, metadata !DIExpression()), !dbg !2138
  store i32 0, i32* %curOutInd, align 4, !dbg !2138
  br label %while.cond, !dbg !2139

while.cond:                                       ; preds = %if.end61, %entry
  %5 = load i16*, i16** %pszSrc, align 8, !dbg !2140
  %6 = load i16, i16* %5, align 2, !dbg !2141
  %tobool = icmp ne i16 %6, 0, !dbg !2141
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2142

land.rhs:                                         ; preds = %while.cond
  %7 = load i32, i32* %curOutInd, align 4, !dbg !2143
  %8 = load i32, i32* %maxChars.addr, align 4, !dbg !2144
  %cmp = icmp ult i32 %7, %8, !dbg !2145
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %9 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !2146
  br i1 %9, label %while.body, label %while.end62, !dbg !2139

while.body:                                       ; preds = %land.end
  br label %while.cond1, !dbg !2147

while.cond1:                                      ; preds = %if.end, %while.body
  %10 = load i16*, i16** %pszSrc, align 8, !dbg !2149
  %11 = load i16, i16* %10, align 2, !dbg !2150
  %conv = zext i16 %11 to i32, !dbg !2150
  %cmp2 = icmp ne i32 %conv, 123, !dbg !2151
  br i1 %cmp2, label %land.rhs3, label %land.end5, !dbg !2152

land.rhs3:                                        ; preds = %while.cond1
  %12 = load i32, i32* %curOutInd, align 4, !dbg !2153
  %13 = load i32, i32* %maxChars.addr, align 4, !dbg !2154
  %cmp4 = icmp ult i32 %12, %13, !dbg !2155
  br label %land.end5

land.end5:                                        ; preds = %land.rhs3, %while.cond1
  %14 = phi i1 [ false, %while.cond1 ], [ %cmp4, %land.rhs3 ], !dbg !2156
  br i1 %14, label %while.body6, label %while.end, !dbg !2147

while.body6:                                      ; preds = %land.end5
  %15 = load i16*, i16** %pszSrc, align 8, !dbg !2157
  %16 = load i16, i16* %15, align 2, !dbg !2160
  %tobool7 = icmp ne i16 %16, 0, !dbg !2160
  br i1 %tobool7, label %if.end, label %if.then, !dbg !2161

if.then:                                          ; preds = %while.body6
  br label %while.end, !dbg !2162

if.end:                                           ; preds = %while.body6
  %17 = load i16*, i16** %pszSrc, align 8, !dbg !2163
  %incdec.ptr = getelementptr inbounds i16, i16* %17, i32 1, !dbg !2163
  store i16* %incdec.ptr, i16** %pszSrc, align 8, !dbg !2163
  %18 = load i16, i16* %17, align 2, !dbg !2164
  %19 = load i16*, i16** %errText.addr, align 8, !dbg !2165
  %20 = load i32, i32* %curOutInd, align 4, !dbg !2166
  %inc = add i32 %20, 1, !dbg !2166
  store i32 %inc, i32* %curOutInd, align 4, !dbg !2166
  %idxprom = zext i32 %20 to i64, !dbg !2165
  %arrayidx = getelementptr inbounds i16, i16* %19, i64 %idxprom, !dbg !2165
  store i16 %18, i16* %arrayidx, align 2, !dbg !2167
  br label %while.cond1, !dbg !2147, !llvm.loop !2168

while.end:                                        ; preds = %if.then, %land.end5
  %21 = load i16*, i16** %pszSrc, align 8, !dbg !2170
  %22 = load i16, i16* %21, align 2, !dbg !2172
  %conv8 = zext i16 %22 to i32, !dbg !2172
  %cmp9 = icmp ne i32 %conv8, 123, !dbg !2173
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !2174

if.then10:                                        ; preds = %while.end
  br label %while.end62, !dbg !2175

if.end11:                                         ; preds = %while.end
  %23 = load i16*, i16** %pszSrc, align 8, !dbg !2176
  %add.ptr = getelementptr inbounds i16, i16* %23, i64 1, !dbg !2178
  %24 = load i16, i16* %add.ptr, align 2, !dbg !2179
  %conv12 = zext i16 %24 to i32, !dbg !2179
  %cmp13 = icmp sge i32 %conv12, 48, !dbg !2180
  br i1 %cmp13, label %land.lhs.true, label %if.else56, !dbg !2181

land.lhs.true:                                    ; preds = %if.end11
  %25 = load i16*, i16** %pszSrc, align 8, !dbg !2182
  %add.ptr14 = getelementptr inbounds i16, i16* %25, i64 1, !dbg !2183
  %26 = load i16, i16* %add.ptr14, align 2, !dbg !2184
  %conv15 = zext i16 %26 to i32, !dbg !2184
  %cmp16 = icmp sle i32 %conv15, 51, !dbg !2185
  br i1 %cmp16, label %land.lhs.true17, label %if.else56, !dbg !2186

land.lhs.true17:                                  ; preds = %land.lhs.true
  %27 = load i16*, i16** %pszSrc, align 8, !dbg !2187
  %add.ptr18 = getelementptr inbounds i16, i16* %27, i64 2, !dbg !2188
  %28 = load i16, i16* %add.ptr18, align 2, !dbg !2189
  %conv19 = zext i16 %28 to i32, !dbg !2189
  %cmp20 = icmp eq i32 %conv19, 125, !dbg !2190
  br i1 %cmp20, label %if.then21, label %if.else56, !dbg !2191

if.then21:                                        ; preds = %land.lhs.true17
  call void @llvm.dbg.declare(metadata i16* %tokCh, metadata !2192, metadata !DIExpression()), !dbg !2194
  %29 = load i16*, i16** %pszSrc, align 8, !dbg !2195
  %add.ptr22 = getelementptr inbounds i16, i16* %29, i64 1, !dbg !2196
  %30 = load i16, i16* %add.ptr22, align 2, !dbg !2197
  store i16 %30, i16* %tokCh, align 2, !dbg !2194
  %31 = load i16*, i16** %pszSrc, align 8, !dbg !2198
  %add.ptr23 = getelementptr inbounds i16, i16* %31, i64 3, !dbg !2198
  store i16* %add.ptr23, i16** %pszSrc, align 8, !dbg !2198
  call void @llvm.dbg.declare(metadata i16** %repText, metadata !2199, metadata !DIExpression()), !dbg !2200
  store i16* null, i16** %repText, align 8, !dbg !2200
  %32 = load i16, i16* %tokCh, align 2, !dbg !2201
  %conv24 = zext i16 %32 to i32, !dbg !2201
  %cmp25 = icmp eq i32 %conv24, 48, !dbg !2203
  br i1 %cmp25, label %if.then26, label %if.else, !dbg !2204

if.then26:                                        ; preds = %if.then21
  %33 = load i16*, i16** %text1.addr, align 8, !dbg !2205
  store i16* %33, i16** %repText, align 8, !dbg !2206
  br label %if.end41, !dbg !2207

if.else:                                          ; preds = %if.then21
  %34 = load i16, i16* %tokCh, align 2, !dbg !2208
  %conv27 = zext i16 %34 to i32, !dbg !2208
  %cmp28 = icmp eq i32 %conv27, 49, !dbg !2210
  br i1 %cmp28, label %if.then29, label %if.else30, !dbg !2211

if.then29:                                        ; preds = %if.else
  %35 = load i16*, i16** %text2.addr, align 8, !dbg !2212
  store i16* %35, i16** %repText, align 8, !dbg !2213
  br label %if.end40, !dbg !2214

if.else30:                                        ; preds = %if.else
  %36 = load i16, i16* %tokCh, align 2, !dbg !2215
  %conv31 = zext i16 %36 to i32, !dbg !2215
  %cmp32 = icmp eq i32 %conv31, 50, !dbg !2217
  br i1 %cmp32, label %if.then33, label %if.else34, !dbg !2218

if.then33:                                        ; preds = %if.else30
  %37 = load i16*, i16** %text3.addr, align 8, !dbg !2219
  store i16* %37, i16** %repText, align 8, !dbg !2220
  br label %if.end39, !dbg !2221

if.else34:                                        ; preds = %if.else30
  %38 = load i16, i16* %tokCh, align 2, !dbg !2222
  %conv35 = zext i16 %38 to i32, !dbg !2222
  %cmp36 = icmp eq i32 %conv35, 51, !dbg !2224
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !2225

if.then37:                                        ; preds = %if.else34
  %39 = load i16*, i16** %text4.addr, align 8, !dbg !2226
  store i16* %39, i16** %repText, align 8, !dbg !2227
  br label %if.end38, !dbg !2228

if.end38:                                         ; preds = %if.then37, %if.else34
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then33
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then29
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then26
  %40 = load i16*, i16** %repText, align 8, !dbg !2229
  %tobool42 = icmp ne i16* %40, null, !dbg !2229
  br i1 %tobool42, label %if.end44, label %if.then43, !dbg !2231

if.then43:                                        ; preds = %if.end41
  store i16* getelementptr inbounds ([7 x i16], [7 x i16]* @_ZN11xercesc_2_7L8gNullStrE, i64 0, i64 0), i16** %repText, align 8, !dbg !2232
  br label %if.end44, !dbg !2233

if.end44:                                         ; preds = %if.then43, %if.end41
  br label %while.cond45, !dbg !2234

while.cond45:                                     ; preds = %while.body50, %if.end44
  %41 = load i16*, i16** %repText, align 8, !dbg !2235
  %42 = load i16, i16* %41, align 2, !dbg !2236
  %tobool46 = icmp ne i16 %42, 0, !dbg !2236
  br i1 %tobool46, label %land.rhs47, label %land.end49, !dbg !2237

land.rhs47:                                       ; preds = %while.cond45
  %43 = load i32, i32* %curOutInd, align 4, !dbg !2238
  %44 = load i32, i32* %maxChars.addr, align 4, !dbg !2239
  %cmp48 = icmp ult i32 %43, %44, !dbg !2240
  br label %land.end49

land.end49:                                       ; preds = %land.rhs47, %while.cond45
  %45 = phi i1 [ false, %while.cond45 ], [ %cmp48, %land.rhs47 ], !dbg !2241
  br i1 %45, label %while.body50, label %while.end55, !dbg !2234

while.body50:                                     ; preds = %land.end49
  %46 = load i16*, i16** %repText, align 8, !dbg !2242
  %incdec.ptr51 = getelementptr inbounds i16, i16* %46, i32 1, !dbg !2242
  store i16* %incdec.ptr51, i16** %repText, align 8, !dbg !2242
  %47 = load i16, i16* %46, align 2, !dbg !2243
  %48 = load i16*, i16** %errText.addr, align 8, !dbg !2244
  %49 = load i32, i32* %curOutInd, align 4, !dbg !2245
  %inc52 = add i32 %49, 1, !dbg !2245
  store i32 %inc52, i32* %curOutInd, align 4, !dbg !2245
  %idxprom53 = zext i32 %49 to i64, !dbg !2244
  %arrayidx54 = getelementptr inbounds i16, i16* %48, i64 %idxprom53, !dbg !2244
  store i16 %47, i16* %arrayidx54, align 2, !dbg !2246
  br label %while.cond45, !dbg !2234, !llvm.loop !2247

while.end55:                                      ; preds = %land.end49
  br label %if.end61, !dbg !2248

if.else56:                                        ; preds = %land.lhs.true17, %land.lhs.true, %if.end11
  %50 = load i16*, i16** %pszSrc, align 8, !dbg !2249
  %incdec.ptr57 = getelementptr inbounds i16, i16* %50, i32 1, !dbg !2249
  store i16* %incdec.ptr57, i16** %pszSrc, align 8, !dbg !2249
  %51 = load i16, i16* %50, align 2, !dbg !2251
  %52 = load i16*, i16** %errText.addr, align 8, !dbg !2252
  %53 = load i32, i32* %curOutInd, align 4, !dbg !2253
  %inc58 = add i32 %53, 1, !dbg !2253
  store i32 %inc58, i32* %curOutInd, align 4, !dbg !2253
  %idxprom59 = zext i32 %53 to i64, !dbg !2252
  %arrayidx60 = getelementptr inbounds i16, i16* %52, i64 %idxprom59, !dbg !2252
  store i16 %51, i16* %arrayidx60, align 2, !dbg !2254
  br label %if.end61

if.end61:                                         ; preds = %if.else56, %while.end55
  br label %while.cond, !dbg !2139, !llvm.loop !2255

while.end62:                                      ; preds = %if.then10, %land.end
  %54 = load i16*, i16** %errText.addr, align 8, !dbg !2257
  %55 = load i32, i32* %curOutInd, align 4, !dbg !2258
  %idxprom63 = zext i32 %55 to i64, !dbg !2257
  %arrayidx64 = getelementptr inbounds i16, i16* %54, i64 %idxprom63, !dbg !2257
  store i16 0, i16* %arrayidx64, align 2, !dbg !2259
  %56 = load i32, i32* %curOutInd, align 4, !dbg !2260
  call void @_ZN11xercesc_2_712ArrayJanitorItED2Ev(%"class.xercesc_2_7::ArrayJanitor"* %janText) #12, !dbg !2261
  ret i32 %56, !dbg !2261
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i16* @_ZN11xercesc_2_79XMLString9replicateEPKtPNS_13MemoryManagerE(i16* %toRep, %"class.xercesc_2_7::MemoryManager"* %manager) #3 comdat align 2 !dbg !2262 {
entry:
  %toRep.addr = alloca i16*, align 8
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %ret = alloca i16*, align 8
  %len = alloca i32, align 4
  store i16* %toRep, i16** %toRep.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toRep.addr, metadata !2263, metadata !DIExpression()), !dbg !2264
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !2265, metadata !DIExpression()), !dbg !2266
  call void @llvm.dbg.declare(metadata i16** %ret, metadata !2267, metadata !DIExpression()), !dbg !2268
  store i16* null, i16** %ret, align 8, !dbg !2268
  %0 = load i16*, i16** %toRep.addr, align 8, !dbg !2269
  %tobool = icmp ne i16* %0, null, !dbg !2269
  br i1 %tobool, label %if.then, label %if.end, !dbg !2271

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2272, metadata !DIExpression()), !dbg !2274
  %1 = load i16*, i16** %toRep.addr, align 8, !dbg !2275
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %1), !dbg !2276
  store i32 %call, i32* %len, align 4, !dbg !2274
  %2 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !2277
  %3 = load i32, i32* %len, align 4, !dbg !2278
  %add = add i32 %3, 1, !dbg !2279
  %conv = zext i32 %add to i64, !dbg !2280
  %mul = mul i64 %conv, 2, !dbg !2281
  %4 = bitcast %"class.xercesc_2_7::MemoryManager"* %2 to i8* (%"class.xercesc_2_7::MemoryManager"*, i64)***, !dbg !2282
  %vtable = load i8* (%"class.xercesc_2_7::MemoryManager"*, i64)**, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*** %4, align 8, !dbg !2282
  %vfn = getelementptr inbounds i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)** %vtable, i64 2, !dbg !2282
  %5 = load i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)** %vfn, align 8, !dbg !2282
  %call1 = call i8* %5(%"class.xercesc_2_7::MemoryManager"* %2, i64 %mul), !dbg !2282
  %6 = bitcast i8* %call1 to i16*, !dbg !2283
  store i16* %6, i16** %ret, align 8, !dbg !2284
  %7 = load i16*, i16** %ret, align 8, !dbg !2285
  %8 = bitcast i16* %7 to i8*, !dbg !2286
  %9 = load i16*, i16** %toRep.addr, align 8, !dbg !2287
  %10 = bitcast i16* %9 to i8*, !dbg !2286
  %11 = load i32, i32* %len, align 4, !dbg !2288
  %add2 = add i32 %11, 1, !dbg !2289
  %conv3 = zext i32 %add2 to i64, !dbg !2290
  %mul4 = mul i64 %conv3, 2, !dbg !2291
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %8, i8* align 2 %10, i64 %mul4, i1 false), !dbg !2286
  br label %if.end, !dbg !2292

if.end:                                           ; preds = %if.then, %entry
  %12 = load i16*, i16** %ret, align 8, !dbg !2293
  ret i16* %12, !dbg !2294
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_712ArrayJanitorItEC2EPtPNS_13MemoryManagerE(%"class.xercesc_2_7::ArrayJanitor"* %this, i16* %toDelete, %"class.xercesc_2_7::MemoryManager"* %manager) unnamed_addr #3 comdat align 2 !dbg !2295 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::ArrayJanitor"*, align 8
  %toDelete.addr = alloca i16*, align 8
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  store %"class.xercesc_2_7::ArrayJanitor"* %this, %"class.xercesc_2_7::ArrayJanitor"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::ArrayJanitor"** %this.addr, metadata !2297, metadata !DIExpression()), !dbg !2299
  store i16* %toDelete, i16** %toDelete.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toDelete.addr, metadata !2300, metadata !DIExpression()), !dbg !2301
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !2302, metadata !DIExpression()), !dbg !2303
  %this1 = load %"class.xercesc_2_7::ArrayJanitor"*, %"class.xercesc_2_7::ArrayJanitor"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::ArrayJanitor"* %this1 to %"class.xercesc_2_7::XMemory"*, !dbg !2304
  call void @_ZN11xercesc_2_77XMemoryC2Ev(%"class.xercesc_2_7::XMemory"* %0), !dbg !2305
  %fData = getelementptr inbounds %"class.xercesc_2_7::ArrayJanitor", %"class.xercesc_2_7::ArrayJanitor"* %this1, i32 0, i32 0, !dbg !2307
  %1 = load i16*, i16** %toDelete.addr, align 8, !dbg !2309
  store i16* %1, i16** %fData, align 8, !dbg !2307
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_7::ArrayJanitor", %"class.xercesc_2_7::ArrayJanitor"* %this1, i32 0, i32 1, !dbg !2310
  %2 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !2311
  store %"class.xercesc_2_7::MemoryManager"* %2, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager, align 8, !dbg !2310
  ret void, !dbg !2312
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_712ArrayJanitorItED2Ev(%"class.xercesc_2_7::ArrayJanitor"* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !2313 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::ArrayJanitor"*, align 8
  store %"class.xercesc_2_7::ArrayJanitor"* %this, %"class.xercesc_2_7::ArrayJanitor"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::ArrayJanitor"** %this.addr, metadata !2314, metadata !DIExpression()), !dbg !2315
  %this1 = load %"class.xercesc_2_7::ArrayJanitor"*, %"class.xercesc_2_7::ArrayJanitor"** %this.addr, align 8
  invoke void @_ZN11xercesc_2_712ArrayJanitorItE5resetEPt(%"class.xercesc_2_7::ArrayJanitor"* %this1, i16* null)
          to label %invoke.cont unwind label %terminate.lpad, !dbg !2316

invoke.cont:                                      ; preds = %entry
  ret void, !dbg !2318

terminate.lpad:                                   ; preds = %entry
  %0 = landingpad { i8*, i32 }
          catch i8* null, !dbg !2316
  %1 = extractvalue { i8*, i32 } %0, 0, !dbg !2316
  call void @__clang_call_terminate(i8* %1) #16, !dbg !2316
  unreachable, !dbg !2316
}

; Function Attrs: noinline uwtable
define dso_local i16* @_ZN11xercesc_2_79XMLString9replicateEPKt(i16* %toRep) #3 align 2 !dbg !2319 {
entry:
  %toRep.addr = alloca i16*, align 8
  %ret = alloca i16*, align 8
  %len = alloca i32, align 4
  store i16* %toRep, i16** %toRep.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toRep.addr, metadata !2320, metadata !DIExpression()), !dbg !2321
  call void @llvm.dbg.declare(metadata i16** %ret, metadata !2322, metadata !DIExpression()), !dbg !2323
  store i16* null, i16** %ret, align 8, !dbg !2323
  %0 = load i16*, i16** %toRep.addr, align 8, !dbg !2324
  %tobool = icmp ne i16* %0, null, !dbg !2324
  br i1 %tobool, label %if.then, label %if.end, !dbg !2326

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2327, metadata !DIExpression()), !dbg !2329
  %1 = load i16*, i16** %toRep.addr, align 8, !dbg !2330
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %1), !dbg !2331
  store i32 %call, i32* %len, align 4, !dbg !2329
  %2 = load i32, i32* %len, align 4, !dbg !2332
  %add = add i32 %2, 1, !dbg !2333
  %conv = zext i32 %add to i64, !dbg !2332
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 2), !dbg !2334
  %4 = extractvalue { i64, i1 } %3, 1, !dbg !2334
  %5 = extractvalue { i64, i1 } %3, 0, !dbg !2334
  %6 = select i1 %4, i64 -1, i64 %5, !dbg !2334
  %call1 = call i8* @_Znam(i64 %6) #17, !dbg !2334
  %7 = bitcast i8* %call1 to i16*, !dbg !2334
  store i16* %7, i16** %ret, align 8, !dbg !2335
  %8 = load i16*, i16** %ret, align 8, !dbg !2336
  %9 = bitcast i16* %8 to i8*, !dbg !2337
  %10 = load i16*, i16** %toRep.addr, align 8, !dbg !2338
  %11 = bitcast i16* %10 to i8*, !dbg !2337
  %12 = load i32, i32* %len, align 4, !dbg !2339
  %add2 = add i32 %12, 1, !dbg !2340
  %conv3 = zext i32 %add2 to i64, !dbg !2341
  %mul = mul i64 %conv3, 2, !dbg !2342
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %9, i8* align 2 %11, i64 %mul, i1 false), !dbg !2337
  br label %if.end, !dbg !2343

if.end:                                           ; preds = %if.then, %entry
  %13 = load i16*, i16** %ret, align 8, !dbg !2344
  ret i16* %13, !dbg !2345
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %src) #1 comdat align 2 !dbg !2346 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i16*, align 8
  %pszTmp = alloca i16*, align 8
  store i16* %src, i16** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %src.addr, metadata !2347, metadata !DIExpression()), !dbg !2348
  %0 = load i16*, i16** %src.addr, align 8, !dbg !2349
  %cmp = icmp eq i16* %0, null, !dbg !2351
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2352

lor.lhs.false:                                    ; preds = %entry
  %1 = load i16*, i16** %src.addr, align 8, !dbg !2353
  %2 = load i16, i16* %1, align 2, !dbg !2354
  %conv = zext i16 %2 to i32, !dbg !2354
  %cmp1 = icmp eq i32 %conv, 0, !dbg !2355
  br i1 %cmp1, label %if.then, label %if.else, !dbg !2356

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !2357
  br label %return, !dbg !2357

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i16** %pszTmp, metadata !2359, metadata !DIExpression()), !dbg !2361
  %3 = load i16*, i16** %src.addr, align 8, !dbg !2362
  %add.ptr = getelementptr inbounds i16, i16* %3, i64 1, !dbg !2363
  store i16* %add.ptr, i16** %pszTmp, align 8, !dbg !2361
  br label %while.cond, !dbg !2364

while.cond:                                       ; preds = %while.body, %if.else
  %4 = load i16*, i16** %pszTmp, align 8, !dbg !2365
  %5 = load i16, i16* %4, align 2, !dbg !2366
  %tobool = icmp ne i16 %5, 0, !dbg !2366
  br i1 %tobool, label %while.body, label %while.end, !dbg !2364

while.body:                                       ; preds = %while.cond
  %6 = load i16*, i16** %pszTmp, align 8, !dbg !2367
  %incdec.ptr = getelementptr inbounds i16, i16* %6, i32 1, !dbg !2367
  store i16* %incdec.ptr, i16** %pszTmp, align 8, !dbg !2367
  br label %while.cond, !dbg !2364, !llvm.loop !2368

while.end:                                        ; preds = %while.cond
  %7 = load i16*, i16** %pszTmp, align 8, !dbg !2370
  %8 = load i16*, i16** %src.addr, align 8, !dbg !2371
  %sub.ptr.lhs.cast = ptrtoint i16* %7 to i64, !dbg !2372
  %sub.ptr.rhs.cast = ptrtoint i16* %8 to i64, !dbg !2372
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2372
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !2372
  %conv2 = trunc i64 %sub.ptr.div to i32, !dbg !2373
  store i32 %conv2, i32* %retval, align 4, !dbg !2374
  br label %return, !dbg !2374

return:                                           ; preds = %while.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !2375
  ret i32 %9, !dbg !2375
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #0

; Function Attrs: nobuiltin
declare dso_local noalias i8* @_Znam(i64) #7

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: noinline uwtable
define dso_local i8* @_ZN11xercesc_2_79XMLString9replicateEPKc(i8* %toRep) #3 align 2 !dbg !2376 {
entry:
  %retval = alloca i8*, align 8
  %toRep.addr = alloca i8*, align 8
  %srcLen = alloca i32, align 4
  %ret = alloca i8*, align 8
  store i8* %toRep, i8** %toRep.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toRep.addr, metadata !2377, metadata !DIExpression()), !dbg !2378
  %0 = load i8*, i8** %toRep.addr, align 8, !dbg !2379
  %tobool = icmp ne i8* %0, null, !dbg !2379
  br i1 %tobool, label %if.end, label %if.then, !dbg !2381

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !2382
  br label %return, !dbg !2382

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %srcLen, metadata !2383, metadata !DIExpression()), !dbg !2384
  %1 = load i8*, i8** %toRep.addr, align 8, !dbg !2385
  %call = call i64 @strlen(i8* %1) #15, !dbg !2386
  %conv = trunc i64 %call to i32, !dbg !2386
  store i32 %conv, i32* %srcLen, align 4, !dbg !2384
  call void @llvm.dbg.declare(metadata i8** %ret, metadata !2387, metadata !DIExpression()), !dbg !2388
  %2 = load i32, i32* %srcLen, align 4, !dbg !2389
  %add = add i32 %2, 1, !dbg !2390
  %conv1 = zext i32 %add to i64, !dbg !2389
  %call2 = call i8* @_Znam(i64 %conv1) #17, !dbg !2391
  store i8* %call2, i8** %ret, align 8, !dbg !2388
  %3 = load i8*, i8** %ret, align 8, !dbg !2392
  %4 = load i8*, i8** %toRep.addr, align 8, !dbg !2393
  %5 = load i32, i32* %srcLen, align 4, !dbg !2394
  %add3 = add i32 %5, 1, !dbg !2395
  %conv4 = zext i32 %add3 to i64, !dbg !2396
  %mul = mul i64 %conv4, 1, !dbg !2397
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 %mul, i1 false), !dbg !2398
  %6 = load i8*, i8** %ret, align 8, !dbg !2399
  store i8* %6, i8** %retval, align 8, !dbg !2400
  br label %return, !dbg !2400

return:                                           ; preds = %if.end, %if.then
  %7 = load i8*, i8** %retval, align 8, !dbg !2401
  ret i8* %7, !dbg !2401
}

; Function Attrs: noinline uwtable
define dso_local i8* @_ZN11xercesc_2_79XMLString9replicateEPKcPNS_13MemoryManagerE(i8* %toRep, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 !dbg !2402 {
entry:
  %retval = alloca i8*, align 8
  %toRep.addr = alloca i8*, align 8
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %srcLen = alloca i32, align 4
  %ret = alloca i8*, align 8
  store i8* %toRep, i8** %toRep.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toRep.addr, metadata !2403, metadata !DIExpression()), !dbg !2404
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !2405, metadata !DIExpression()), !dbg !2406
  %0 = load i8*, i8** %toRep.addr, align 8, !dbg !2407
  %tobool = icmp ne i8* %0, null, !dbg !2407
  br i1 %tobool, label %if.end, label %if.then, !dbg !2409

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !2410
  br label %return, !dbg !2410

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %srcLen, metadata !2411, metadata !DIExpression()), !dbg !2412
  %1 = load i8*, i8** %toRep.addr, align 8, !dbg !2413
  %call = call i64 @strlen(i8* %1) #15, !dbg !2414
  %conv = trunc i64 %call to i32, !dbg !2414
  store i32 %conv, i32* %srcLen, align 4, !dbg !2412
  call void @llvm.dbg.declare(metadata i8** %ret, metadata !2415, metadata !DIExpression()), !dbg !2416
  %2 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !2417
  %3 = load i32, i32* %srcLen, align 4, !dbg !2418
  %add = add i32 %3, 1, !dbg !2419
  %conv1 = zext i32 %add to i64, !dbg !2420
  %mul = mul i64 %conv1, 1, !dbg !2421
  %4 = bitcast %"class.xercesc_2_7::MemoryManager"* %2 to i8* (%"class.xercesc_2_7::MemoryManager"*, i64)***, !dbg !2422
  %vtable = load i8* (%"class.xercesc_2_7::MemoryManager"*, i64)**, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*** %4, align 8, !dbg !2422
  %vfn = getelementptr inbounds i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)** %vtable, i64 2, !dbg !2422
  %5 = load i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)** %vfn, align 8, !dbg !2422
  %call2 = call i8* %5(%"class.xercesc_2_7::MemoryManager"* %2, i64 %mul), !dbg !2422
  store i8* %call2, i8** %ret, align 8, !dbg !2416
  %6 = load i8*, i8** %ret, align 8, !dbg !2423
  %7 = load i8*, i8** %toRep.addr, align 8, !dbg !2424
  %8 = load i32, i32* %srcLen, align 4, !dbg !2425
  %add3 = add i32 %8, 1, !dbg !2426
  %conv4 = zext i32 %add3 to i64, !dbg !2427
  %mul5 = mul i64 %conv4, 1, !dbg !2428
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 %mul5, i1 false), !dbg !2429
  %9 = load i8*, i8** %ret, align 8, !dbg !2430
  store i8* %9, i8** %retval, align 8, !dbg !2431
  br label %return, !dbg !2431

return:                                           ; preds = %if.end, %if.then
  %10 = load i8*, i8** %retval, align 8, !dbg !2432
  ret i8* %10, !dbg !2432
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString10startsWithEPKcS2_(i8* %toTest, i8* %prefix) #1 align 2 !dbg !2433 {
entry:
  %toTest.addr = alloca i8*, align 8
  %prefix.addr = alloca i8*, align 8
  store i8* %toTest, i8** %toTest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toTest.addr, metadata !2434, metadata !DIExpression()), !dbg !2435
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !2436, metadata !DIExpression()), !dbg !2437
  %0 = load i8*, i8** %toTest.addr, align 8, !dbg !2438
  %1 = load i8*, i8** %prefix.addr, align 8, !dbg !2439
  %2 = load i8*, i8** %prefix.addr, align 8, !dbg !2440
  %call = call i64 @strlen(i8* %2) #15, !dbg !2441
  %call1 = call i32 @strncmp(i8* %0, i8* %1, i64 %call) #15, !dbg !2442
  %cmp = icmp eq i32 %call1, 0, !dbg !2443
  ret i1 %cmp, !dbg !2444
}

; Function Attrs: noinline uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString11startsWithIEPKcS2_(i8* %toTest, i8* %prefix) #3 align 2 !dbg !2445 {
entry:
  %toTest.addr = alloca i8*, align 8
  %prefix.addr = alloca i8*, align 8
  store i8* %toTest, i8** %toTest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toTest.addr, metadata !2446, metadata !DIExpression()), !dbg !2447
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !2448, metadata !DIExpression()), !dbg !2449
  %0 = load i8*, i8** %toTest.addr, align 8, !dbg !2450
  %1 = load i8*, i8** %prefix.addr, align 8, !dbg !2451
  %2 = load i8*, i8** %prefix.addr, align 8, !dbg !2452
  %call = call i64 @strlen(i8* %2) #15, !dbg !2453
  %conv = trunc i64 %call to i32, !dbg !2453
  %call1 = call i32 @_Z8strnicmpPKcS0_j(i8* %0, i8* %1, i32 %conv), !dbg !2454
  %cmp = icmp eq i32 %call1, 0, !dbg !2455
  ret i1 %cmp, !dbg !2456
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString9stringLenEPKc(i8* %src) #1 align 2 !dbg !2457 {
entry:
  %src.addr = alloca i8*, align 8
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !2458, metadata !DIExpression()), !dbg !2459
  %0 = load i8*, i8** %src.addr, align 8, !dbg !2460
  %call = call i64 @strlen(i8* %0) #15, !dbg !2461
  %conv = trunc i64 %call to i32, !dbg !2461
  ret i32 %conv, !dbg !2462
}

; Function Attrs: noinline uwtable
define dso_local i8* @_ZN11xercesc_2_79XMLString9transcodeEPKt(i16* %toTranscode) #3 align 2 !dbg !2463 {
entry:
  %toTranscode.addr = alloca i16*, align 8
  store i16* %toTranscode, i16** %toTranscode.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toTranscode.addr, metadata !2464, metadata !DIExpression()), !dbg !2465
  %0 = load %"class.xercesc_2_7::XMLLCPTranscoder"*, %"class.xercesc_2_7::XMLLCPTranscoder"** @_ZN11xercesc_2_7L11gTranscoderE, align 8, !dbg !2466
  %1 = load i16*, i16** %toTranscode.addr, align 8, !dbg !2467
  %2 = bitcast %"class.xercesc_2_7::XMLLCPTranscoder"* %0 to i8* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*)***, !dbg !2468
  %vtable = load i8* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*)**, i8* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*)*** %2, align 8, !dbg !2468
  %vfn = getelementptr inbounds i8* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*)*, i8* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*)** %vtable, i64 4, !dbg !2468
  %3 = load i8* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*)*, i8* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*)** %vfn, align 8, !dbg !2468
  %call = call i8* %3(%"class.xercesc_2_7::XMLLCPTranscoder"* %0, i16* %1), !dbg !2468
  ret i8* %call, !dbg !2469
}

; Function Attrs: noinline uwtable
define dso_local i8* @_ZN11xercesc_2_79XMLString9transcodeEPKtPNS_13MemoryManagerE(i16* %toTranscode, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 !dbg !2470 {
entry:
  %toTranscode.addr = alloca i16*, align 8
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  store i16* %toTranscode, i16** %toTranscode.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toTranscode.addr, metadata !2471, metadata !DIExpression()), !dbg !2472
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !2473, metadata !DIExpression()), !dbg !2474
  %0 = load %"class.xercesc_2_7::XMLLCPTranscoder"*, %"class.xercesc_2_7::XMLLCPTranscoder"** @_ZN11xercesc_2_7L11gTranscoderE, align 8, !dbg !2475
  %1 = load i16*, i16** %toTranscode.addr, align 8, !dbg !2476
  %2 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !2477
  %3 = bitcast %"class.xercesc_2_7::XMLLCPTranscoder"* %0 to i8* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*, %"class.xercesc_2_7::MemoryManager"*)***, !dbg !2478
  %vtable = load i8* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*, %"class.xercesc_2_7::MemoryManager"*)**, i8* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*, %"class.xercesc_2_7::MemoryManager"*)*** %3, align 8, !dbg !2478
  %vfn = getelementptr inbounds i8* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*, %"class.xercesc_2_7::MemoryManager"*)*, i8* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*, %"class.xercesc_2_7::MemoryManager"*)** %vtable, i64 5, !dbg !2478
  %4 = load i8* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*, %"class.xercesc_2_7::MemoryManager"*)*, i8* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*, %"class.xercesc_2_7::MemoryManager"*)** %vfn, align 8, !dbg !2478
  %call = call i8* %4(%"class.xercesc_2_7::XMLLCPTranscoder"* %0, i16* %1, %"class.xercesc_2_7::MemoryManager"* %2), !dbg !2478
  ret i8* %call, !dbg !2479
}

; Function Attrs: noinline uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString9transcodeEPKtPcjPNS_13MemoryManagerE(i16* %toTranscode, i8* %toFill, i32 %maxChars, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 !dbg !2480 {
entry:
  %retval = alloca i1, align 1
  %toTranscode.addr = alloca i16*, align 8
  %toFill.addr = alloca i8*, align 8
  %maxChars.addr = alloca i32, align 4
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  store i16* %toTranscode, i16** %toTranscode.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toTranscode.addr, metadata !2481, metadata !DIExpression()), !dbg !2482
  store i8* %toFill, i8** %toFill.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toFill.addr, metadata !2483, metadata !DIExpression()), !dbg !2484
  store i32 %maxChars, i32* %maxChars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxChars.addr, metadata !2485, metadata !DIExpression()), !dbg !2486
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !2487, metadata !DIExpression()), !dbg !2488
  %0 = load %"class.xercesc_2_7::XMLLCPTranscoder"*, %"class.xercesc_2_7::XMLLCPTranscoder"** @_ZN11xercesc_2_7L11gTranscoderE, align 8, !dbg !2489
  %1 = load i16*, i16** %toTranscode.addr, align 8, !dbg !2491
  %2 = load i8*, i8** %toFill.addr, align 8, !dbg !2492
  %3 = load i32, i32* %maxChars.addr, align 4, !dbg !2493
  %4 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !2494
  %5 = bitcast %"class.xercesc_2_7::XMLLCPTranscoder"* %0 to i1 (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*, i8*, i32, %"class.xercesc_2_7::MemoryManager"*)***, !dbg !2495
  %vtable = load i1 (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*, i8*, i32, %"class.xercesc_2_7::MemoryManager"*)**, i1 (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*, i8*, i32, %"class.xercesc_2_7::MemoryManager"*)*** %5, align 8, !dbg !2495
  %vfn = getelementptr inbounds i1 (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*, i8*, i32, %"class.xercesc_2_7::MemoryManager"*)*, i1 (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*, i8*, i32, %"class.xercesc_2_7::MemoryManager"*)** %vtable, i64 9, !dbg !2495
  %6 = load i1 (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*, i8*, i32, %"class.xercesc_2_7::MemoryManager"*)*, i1 (%"class.xercesc_2_7::XMLLCPTranscoder"*, i16*, i8*, i32, %"class.xercesc_2_7::MemoryManager"*)** %vfn, align 8, !dbg !2495
  %call = call zeroext i1 %6(%"class.xercesc_2_7::XMLLCPTranscoder"* %0, i16* %1, i8* %2, i32 %3, %"class.xercesc_2_7::MemoryManager"* %4), !dbg !2495
  br i1 %call, label %if.end, label %if.then, !dbg !2496

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !2497
  br label %return, !dbg !2497

if.end:                                           ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !2498
  br label %return, !dbg !2498

return:                                           ; preds = %if.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !2499
  ret i1 %7, !dbg !2499
}

; Function Attrs: noinline uwtable
define dso_local i16* @_ZN11xercesc_2_79XMLString9transcodeEPKc(i8* %toTranscode) #3 align 2 !dbg !2500 {
entry:
  %toTranscode.addr = alloca i8*, align 8
  store i8* %toTranscode, i8** %toTranscode.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toTranscode.addr, metadata !2501, metadata !DIExpression()), !dbg !2502
  %0 = load %"class.xercesc_2_7::XMLLCPTranscoder"*, %"class.xercesc_2_7::XMLLCPTranscoder"** @_ZN11xercesc_2_7L11gTranscoderE, align 8, !dbg !2503
  %1 = load i8*, i8** %toTranscode.addr, align 8, !dbg !2504
  %2 = bitcast %"class.xercesc_2_7::XMLLCPTranscoder"* %0 to i16* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*)***, !dbg !2505
  %vtable = load i16* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*)**, i16* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*)*** %2, align 8, !dbg !2505
  %vfn = getelementptr inbounds i16* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*)*, i16* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*)** %vtable, i64 6, !dbg !2505
  %3 = load i16* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*)*, i16* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*)** %vfn, align 8, !dbg !2505
  %call = call i16* %3(%"class.xercesc_2_7::XMLLCPTranscoder"* %0, i8* %1), !dbg !2505
  ret i16* %call, !dbg !2506
}

; Function Attrs: noinline uwtable
define dso_local i16* @_ZN11xercesc_2_79XMLString9transcodeEPKcPNS_13MemoryManagerE(i8* %toTranscode, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 !dbg !2507 {
entry:
  %toTranscode.addr = alloca i8*, align 8
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  store i8* %toTranscode, i8** %toTranscode.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toTranscode.addr, metadata !2508, metadata !DIExpression()), !dbg !2509
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !2510, metadata !DIExpression()), !dbg !2511
  %0 = load %"class.xercesc_2_7::XMLLCPTranscoder"*, %"class.xercesc_2_7::XMLLCPTranscoder"** @_ZN11xercesc_2_7L11gTranscoderE, align 8, !dbg !2512
  %1 = load i8*, i8** %toTranscode.addr, align 8, !dbg !2513
  %2 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !2514
  %3 = bitcast %"class.xercesc_2_7::XMLLCPTranscoder"* %0 to i16* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*, %"class.xercesc_2_7::MemoryManager"*)***, !dbg !2515
  %vtable = load i16* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*, %"class.xercesc_2_7::MemoryManager"*)**, i16* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*, %"class.xercesc_2_7::MemoryManager"*)*** %3, align 8, !dbg !2515
  %vfn = getelementptr inbounds i16* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*, %"class.xercesc_2_7::MemoryManager"*)*, i16* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*, %"class.xercesc_2_7::MemoryManager"*)** %vtable, i64 7, !dbg !2515
  %4 = load i16* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*, %"class.xercesc_2_7::MemoryManager"*)*, i16* (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*, %"class.xercesc_2_7::MemoryManager"*)** %vfn, align 8, !dbg !2515
  %call = call i16* %4(%"class.xercesc_2_7::XMLLCPTranscoder"* %0, i8* %1, %"class.xercesc_2_7::MemoryManager"* %2), !dbg !2515
  ret i16* %call, !dbg !2516
}

; Function Attrs: noinline uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString9transcodeEPKcPtjPNS_13MemoryManagerE(i8* %toTranscode, i16* %toFill, i32 %maxChars, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 !dbg !2517 {
entry:
  %retval = alloca i1, align 1
  %toTranscode.addr = alloca i8*, align 8
  %toFill.addr = alloca i16*, align 8
  %maxChars.addr = alloca i32, align 4
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  store i8* %toTranscode, i8** %toTranscode.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toTranscode.addr, metadata !2518, metadata !DIExpression()), !dbg !2519
  store i16* %toFill, i16** %toFill.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toFill.addr, metadata !2520, metadata !DIExpression()), !dbg !2521
  store i32 %maxChars, i32* %maxChars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxChars.addr, metadata !2522, metadata !DIExpression()), !dbg !2523
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !2524, metadata !DIExpression()), !dbg !2525
  %0 = load %"class.xercesc_2_7::XMLLCPTranscoder"*, %"class.xercesc_2_7::XMLLCPTranscoder"** @_ZN11xercesc_2_7L11gTranscoderE, align 8, !dbg !2526
  %1 = load i8*, i8** %toTranscode.addr, align 8, !dbg !2528
  %2 = load i16*, i16** %toFill.addr, align 8, !dbg !2529
  %3 = load i32, i32* %maxChars.addr, align 4, !dbg !2530
  %4 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !2531
  %5 = bitcast %"class.xercesc_2_7::XMLLCPTranscoder"* %0 to i1 (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*, i16*, i32, %"class.xercesc_2_7::MemoryManager"*)***, !dbg !2532
  %vtable = load i1 (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*, i16*, i32, %"class.xercesc_2_7::MemoryManager"*)**, i1 (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*, i16*, i32, %"class.xercesc_2_7::MemoryManager"*)*** %5, align 8, !dbg !2532
  %vfn = getelementptr inbounds i1 (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*, i16*, i32, %"class.xercesc_2_7::MemoryManager"*)*, i1 (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*, i16*, i32, %"class.xercesc_2_7::MemoryManager"*)** %vtable, i64 8, !dbg !2532
  %6 = load i1 (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*, i16*, i32, %"class.xercesc_2_7::MemoryManager"*)*, i1 (%"class.xercesc_2_7::XMLLCPTranscoder"*, i8*, i16*, i32, %"class.xercesc_2_7::MemoryManager"*)** %vfn, align 8, !dbg !2532
  %call = call zeroext i1 %6(%"class.xercesc_2_7::XMLLCPTranscoder"* %0, i8* %1, i16* %2, i32 %3, %"class.xercesc_2_7::MemoryManager"* %4), !dbg !2532
  br i1 %call, label %if.end, label %if.then, !dbg !2533

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !2534
  br label %return, !dbg !2534

if.end:                                           ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !2535
  br label %return, !dbg !2535

return:                                           ; preds = %if.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !2536
  ret i1 %7, !dbg !2536
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN11xercesc_2_79XMLString4trimEPc(i8* %toTrim) #1 align 2 !dbg !2537 {
entry:
  %toTrim.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %skip = alloca i32, align 4
  %scrape = alloca i32, align 4
  %index = alloca i32, align 4
  store i8* %toTrim, i8** %toTrim.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toTrim.addr, metadata !2538, metadata !DIExpression()), !dbg !2539
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2540, metadata !DIExpression()), !dbg !2541
  %0 = load i8*, i8** %toTrim.addr, align 8, !dbg !2542
  %call = call i64 @strlen(i8* %0) #15, !dbg !2543
  %conv = trunc i64 %call to i32, !dbg !2543
  store i32 %conv, i32* %len, align 4, !dbg !2541
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !2544, metadata !DIExpression()), !dbg !2545
  call void @llvm.dbg.declare(metadata i32* %scrape, metadata !2546, metadata !DIExpression()), !dbg !2547
  store i32 0, i32* %skip, align 4, !dbg !2548
  br label %for.cond, !dbg !2550

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %skip, align 4, !dbg !2551
  %2 = load i32, i32* %len, align 4, !dbg !2553
  %cmp = icmp ult i32 %1, %2, !dbg !2554
  br i1 %cmp, label %for.body, label %for.end, !dbg !2555

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %toTrim.addr, align 8, !dbg !2556
  %4 = load i32, i32* %skip, align 4, !dbg !2559
  %idxprom = zext i32 %4 to i64, !dbg !2556
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !2556
  %5 = load i8, i8* %arrayidx, align 1, !dbg !2556
  %conv1 = sext i8 %5 to i32, !dbg !2556
  %call2 = call i32 @isspace(i32 %conv1) #15, !dbg !2560
  %tobool = icmp ne i32 %call2, 0, !dbg !2560
  br i1 %tobool, label %if.end, label %if.then, !dbg !2561

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !2562

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !2563

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %skip, align 4, !dbg !2564
  %inc = add i32 %6, 1, !dbg !2564
  store i32 %inc, i32* %skip, align 4, !dbg !2564
  br label %for.cond, !dbg !2565, !llvm.loop !2566

for.end:                                          ; preds = %if.then, %for.cond
  %7 = load i32, i32* %len, align 4, !dbg !2568
  store i32 %7, i32* %scrape, align 4, !dbg !2570
  br label %for.cond3, !dbg !2571

for.cond3:                                        ; preds = %for.inc13, %for.end
  %8 = load i32, i32* %scrape, align 4, !dbg !2572
  %9 = load i32, i32* %skip, align 4, !dbg !2574
  %cmp4 = icmp ugt i32 %8, %9, !dbg !2575
  br i1 %cmp4, label %for.body5, label %for.end14, !dbg !2576

for.body5:                                        ; preds = %for.cond3
  %10 = load i8*, i8** %toTrim.addr, align 8, !dbg !2577
  %11 = load i32, i32* %scrape, align 4, !dbg !2580
  %sub = sub i32 %11, 1, !dbg !2581
  %idxprom6 = zext i32 %sub to i64, !dbg !2577
  %arrayidx7 = getelementptr inbounds i8, i8* %10, i64 %idxprom6, !dbg !2577
  %12 = load i8, i8* %arrayidx7, align 1, !dbg !2577
  %conv8 = sext i8 %12 to i32, !dbg !2577
  %call9 = call i32 @isspace(i32 %conv8) #15, !dbg !2582
  %tobool10 = icmp ne i32 %call9, 0, !dbg !2582
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !2583

if.then11:                                        ; preds = %for.body5
  br label %for.end14, !dbg !2584

if.end12:                                         ; preds = %for.body5
  br label %for.inc13, !dbg !2585

for.inc13:                                        ; preds = %if.end12
  %13 = load i32, i32* %scrape, align 4, !dbg !2586
  %dec = add i32 %13, -1, !dbg !2586
  store i32 %dec, i32* %scrape, align 4, !dbg !2586
  br label %for.cond3, !dbg !2587, !llvm.loop !2588

for.end14:                                        ; preds = %if.then11, %for.cond3
  %14 = load i32, i32* %scrape, align 4, !dbg !2590
  %15 = load i32, i32* %len, align 4, !dbg !2592
  %cmp15 = icmp ne i32 %14, %15, !dbg !2593
  br i1 %cmp15, label %if.then16, label %if.end19, !dbg !2594

if.then16:                                        ; preds = %for.end14
  %16 = load i8*, i8** %toTrim.addr, align 8, !dbg !2595
  %17 = load i32, i32* %scrape, align 4, !dbg !2596
  %idxprom17 = zext i32 %17 to i64, !dbg !2595
  %arrayidx18 = getelementptr inbounds i8, i8* %16, i64 %idxprom17, !dbg !2595
  store i8 0, i8* %arrayidx18, align 1, !dbg !2597
  br label %if.end19, !dbg !2595

if.end19:                                         ; preds = %if.then16, %for.end14
  %18 = load i32, i32* %skip, align 4, !dbg !2598
  %tobool20 = icmp ne i32 %18, 0, !dbg !2598
  br i1 %tobool20, label %if.then21, label %if.end33, !dbg !2600

if.then21:                                        ; preds = %if.end19
  call void @llvm.dbg.declare(metadata i32* %index, metadata !2601, metadata !DIExpression()), !dbg !2603
  store i32 0, i32* %index, align 4, !dbg !2603
  br label %while.cond, !dbg !2604

while.cond:                                       ; preds = %while.body, %if.then21
  %19 = load i8*, i8** %toTrim.addr, align 8, !dbg !2605
  %20 = load i32, i32* %skip, align 4, !dbg !2606
  %idxprom22 = zext i32 %20 to i64, !dbg !2605
  %arrayidx23 = getelementptr inbounds i8, i8* %19, i64 %idxprom22, !dbg !2605
  %21 = load i8, i8* %arrayidx23, align 1, !dbg !2605
  %tobool24 = icmp ne i8 %21, 0, !dbg !2605
  br i1 %tobool24, label %while.body, label %while.end, !dbg !2604

while.body:                                       ; preds = %while.cond
  %22 = load i8*, i8** %toTrim.addr, align 8, !dbg !2607
  %23 = load i32, i32* %skip, align 4, !dbg !2608
  %inc25 = add i32 %23, 1, !dbg !2608
  store i32 %inc25, i32* %skip, align 4, !dbg !2608
  %idxprom26 = zext i32 %23 to i64, !dbg !2607
  %arrayidx27 = getelementptr inbounds i8, i8* %22, i64 %idxprom26, !dbg !2607
  %24 = load i8, i8* %arrayidx27, align 1, !dbg !2607
  %25 = load i8*, i8** %toTrim.addr, align 8, !dbg !2609
  %26 = load i32, i32* %index, align 4, !dbg !2610
  %inc28 = add i32 %26, 1, !dbg !2610
  store i32 %inc28, i32* %index, align 4, !dbg !2610
  %idxprom29 = zext i32 %26 to i64, !dbg !2609
  %arrayidx30 = getelementptr inbounds i8, i8* %25, i64 %idxprom29, !dbg !2609
  store i8 %24, i8* %arrayidx30, align 1, !dbg !2611
  br label %while.cond, !dbg !2604, !llvm.loop !2612

while.end:                                        ; preds = %while.cond
  %27 = load i8*, i8** %toTrim.addr, align 8, !dbg !2614
  %28 = load i32, i32* %index, align 4, !dbg !2615
  %idxprom31 = zext i32 %28 to i64, !dbg !2614
  %arrayidx32 = getelementptr inbounds i8, i8* %27, i64 %idxprom31, !dbg !2614
  store i8 0, i8* %arrayidx32, align 1, !dbg !2616
  br label %if.end33, !dbg !2617

if.end33:                                         ; preds = %while.end, %if.end19
  ret void, !dbg !2618
}

; Function Attrs: nounwind readonly
declare dso_local i32 @isspace(i32) #6

; Function Attrs: noinline uwtable
define dso_local void @_ZN11xercesc_2_79XMLString9subStringEPcPKciiPNS_13MemoryManagerE(i8* %targetStr, i8* %srcStr, i32 %startIndex, i32 %endIndex, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !2619 {
entry:
  %targetStr.addr = alloca i8*, align 8
  %srcStr.addr = alloca i8*, align 8
  %startIndex.addr = alloca i32, align 4
  %endIndex.addr = alloca i32, align 4
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %srcLen = alloca i32, align 4
  %copySize = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %targetStr, i8** %targetStr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %targetStr.addr, metadata !2620, metadata !DIExpression()), !dbg !2621
  store i8* %srcStr, i8** %srcStr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srcStr.addr, metadata !2622, metadata !DIExpression()), !dbg !2623
  store i32 %startIndex, i32* %startIndex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %startIndex.addr, metadata !2624, metadata !DIExpression()), !dbg !2625
  store i32 %endIndex, i32* %endIndex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %endIndex.addr, metadata !2626, metadata !DIExpression()), !dbg !2627
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !2628, metadata !DIExpression()), !dbg !2629
  %0 = load i8*, i8** %targetStr.addr, align 8, !dbg !2630
  %cmp = icmp eq i8* %0, null, !dbg !2632
  br i1 %cmp, label %if.then, label %if.end, !dbg !2633

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !2634
  %1 = bitcast i8* %exception to %"class.xercesc_2_7::IllegalArgumentException"*, !dbg !2634
  %2 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !2634
  invoke void @_ZN11xercesc_2_724IllegalArgumentExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::IllegalArgumentException"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 630, i32 81, %"class.xercesc_2_7::MemoryManager"* %2)
          to label %invoke.cont unwind label %lpad, !dbg !2634

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_724IllegalArgumentExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::IllegalArgumentException"*)* @_ZN11xercesc_2_724IllegalArgumentExceptionD2Ev to i8*)) #14, !dbg !2634
  unreachable, !dbg !2634

lpad:                                             ; preds = %if.then
  %3 = landingpad { i8*, i32 }
          cleanup, !dbg !2635
  %4 = extractvalue { i8*, i32 } %3, 0, !dbg !2635
  store i8* %4, i8** %exn.slot, align 8, !dbg !2635
  %5 = extractvalue { i8*, i32 } %3, 1, !dbg !2635
  store i32 %5, i32* %ehselector.slot, align 4, !dbg !2635
  call void @__cxa_free_exception(i8* %exception) #12, !dbg !2634
  br label %eh.resume, !dbg !2634

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %srcLen, metadata !2636, metadata !DIExpression()), !dbg !2637
  %6 = load i8*, i8** %srcStr.addr, align 8, !dbg !2638
  %call = call i64 @strlen(i8* %6) #15, !dbg !2639
  %conv = trunc i64 %call to i32, !dbg !2639
  store i32 %conv, i32* %srcLen, align 4, !dbg !2637
  call void @llvm.dbg.declare(metadata i32* %copySize, metadata !2640, metadata !DIExpression()), !dbg !2641
  %7 = load i32, i32* %endIndex.addr, align 4, !dbg !2642
  %8 = load i32, i32* %startIndex.addr, align 4, !dbg !2643
  %sub = sub nsw i32 %7, %8, !dbg !2644
  store i32 %sub, i32* %copySize, align 4, !dbg !2641
  %9 = load i32, i32* %startIndex.addr, align 4, !dbg !2645
  %cmp1 = icmp slt i32 %9, 0, !dbg !2647
  br i1 %cmp1, label %if.then5, label %lor.lhs.false, !dbg !2648

lor.lhs.false:                                    ; preds = %if.end
  %10 = load i32, i32* %startIndex.addr, align 4, !dbg !2649
  %11 = load i32, i32* %endIndex.addr, align 4, !dbg !2650
  %cmp2 = icmp sgt i32 %10, %11, !dbg !2651
  br i1 %cmp2, label %if.then5, label %lor.lhs.false3, !dbg !2652

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %12 = load i32, i32* %endIndex.addr, align 4, !dbg !2653
  %13 = load i32, i32* %srcLen, align 4, !dbg !2654
  %cmp4 = icmp sgt i32 %12, %13, !dbg !2655
  br i1 %cmp4, label %if.then5, label %if.end9, !dbg !2656

if.then5:                                         ; preds = %lor.lhs.false3, %lor.lhs.false, %if.end
  %exception6 = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !2657
  %14 = bitcast i8* %exception6 to %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, !dbg !2657
  %15 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !2657
  invoke void @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %14, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 637, i32 84, %"class.xercesc_2_7::MemoryManager"* %15)
          to label %invoke.cont8 unwind label %lpad7, !dbg !2657

invoke.cont8:                                     ; preds = %if.then5
  call void @__cxa_throw(i8* %exception6, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*)* @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionD2Ev to i8*)) #14, !dbg !2657
  unreachable, !dbg !2657

lpad7:                                            ; preds = %if.then5
  %16 = landingpad { i8*, i32 }
          cleanup, !dbg !2658
  %17 = extractvalue { i8*, i32 } %16, 0, !dbg !2658
  store i8* %17, i8** %exn.slot, align 8, !dbg !2658
  %18 = extractvalue { i8*, i32 } %16, 1, !dbg !2658
  store i32 %18, i32* %ehselector.slot, align 4, !dbg !2658
  call void @__cxa_free_exception(i8* %exception6) #12, !dbg !2657
  br label %eh.resume, !dbg !2657

if.end9:                                          ; preds = %lor.lhs.false3
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2659, metadata !DIExpression()), !dbg !2661
  %19 = load i32, i32* %startIndex.addr, align 4, !dbg !2662
  store i32 %19, i32* %i, align 4, !dbg !2661
  br label %for.cond, !dbg !2663

for.cond:                                         ; preds = %for.inc, %if.end9
  %20 = load i32, i32* %i, align 4, !dbg !2664
  %21 = load i32, i32* %endIndex.addr, align 4, !dbg !2666
  %cmp10 = icmp slt i32 %20, %21, !dbg !2667
  br i1 %cmp10, label %for.body, label %for.end, !dbg !2668

for.body:                                         ; preds = %for.cond
  %22 = load i8*, i8** %srcStr.addr, align 8, !dbg !2669
  %23 = load i32, i32* %i, align 4, !dbg !2671
  %idxprom = sext i32 %23 to i64, !dbg !2669
  %arrayidx = getelementptr inbounds i8, i8* %22, i64 %idxprom, !dbg !2669
  %24 = load i8, i8* %arrayidx, align 1, !dbg !2669
  %25 = load i8*, i8** %targetStr.addr, align 8, !dbg !2672
  %26 = load i32, i32* %i, align 4, !dbg !2673
  %27 = load i32, i32* %startIndex.addr, align 4, !dbg !2674
  %sub11 = sub nsw i32 %26, %27, !dbg !2675
  %idxprom12 = sext i32 %sub11 to i64, !dbg !2672
  %arrayidx13 = getelementptr inbounds i8, i8* %25, i64 %idxprom12, !dbg !2672
  store i8 %24, i8* %arrayidx13, align 1, !dbg !2676
  br label %for.inc, !dbg !2677

for.inc:                                          ; preds = %for.body
  %28 = load i32, i32* %i, align 4, !dbg !2678
  %inc = add nsw i32 %28, 1, !dbg !2678
  store i32 %inc, i32* %i, align 4, !dbg !2678
  br label %for.cond, !dbg !2679, !llvm.loop !2680

for.end:                                          ; preds = %for.cond
  %29 = load i8*, i8** %targetStr.addr, align 8, !dbg !2682
  %30 = load i32, i32* %copySize, align 4, !dbg !2683
  %idxprom14 = sext i32 %30 to i64, !dbg !2682
  %arrayidx15 = getelementptr inbounds i8, i8* %29, i64 %idxprom14, !dbg !2682
  store i8 0, i8* %arrayidx15, align 1, !dbg !2684
  ret void, !dbg !2685

eh.resume:                                        ; preds = %lpad7, %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !2634
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !2634
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !2634
  %lpad.val16 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !2634
  resume { i8*, i32 } %lpad.val16, !dbg !2634
}

; Function Attrs: noinline uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString15isValidNOTATIONEPKtPNS_13MemoryManagerE(i16* %name, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !2686 {
entry:
  %retval = alloca i1, align 1
  %name.addr = alloca i16*, align 8
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %nameLen = alloca i32, align 4
  %colPos = alloca i32, align 4
  %temp = alloca i16*, align 8
  %jan = alloca %"class.xercesc_2_7::ArrayJanitor", align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %newURI = alloca %"class.xercesc_2_7::XMLUri", align 8
  %0 = alloca %"class.xercesc_2_7::MalformedURLException"*, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store i16* %name, i16** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %name.addr, metadata !2687, metadata !DIExpression()), !dbg !2688
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !2689, metadata !DIExpression()), !dbg !2690
  call void @llvm.dbg.declare(metadata i32* %nameLen, metadata !2691, metadata !DIExpression()), !dbg !2692
  %1 = load i16*, i16** %name.addr, align 8, !dbg !2693
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %1), !dbg !2694
  store i32 %call, i32* %nameLen, align 4, !dbg !2692
  call void @llvm.dbg.declare(metadata i32* %colPos, metadata !2695, metadata !DIExpression()), !dbg !2696
  %2 = load i16*, i16** %name.addr, align 8, !dbg !2697
  %call1 = call i32 @_ZN11xercesc_2_79XMLString11lastIndexOfEPKtt(i16* %2, i16 zeroext 58), !dbg !2698
  store i32 %call1, i32* %colPos, align 4, !dbg !2696
  %3 = load i32, i32* %colPos, align 4, !dbg !2699
  %cmp = icmp eq i32 %3, -1, !dbg !2701
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2702

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %colPos, align 4, !dbg !2703
  %5 = load i32, i32* %nameLen, align 4, !dbg !2704
  %sub = sub nsw i32 %5, 1, !dbg !2705
  %cmp2 = icmp eq i32 %4, %sub, !dbg !2706
  br i1 %cmp2, label %if.then, label %if.end, !dbg !2707

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !2708
  br label %return, !dbg !2708

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i16*, i16** %name.addr, align 8, !dbg !2709
  %7 = load i32, i32* %colPos, align 4, !dbg !2711
  %add = add nsw i32 %7, 1, !dbg !2712
  %idxprom = sext i32 %add to i64, !dbg !2709
  %arrayidx = getelementptr inbounds i16, i16* %6, i64 %idxprom, !dbg !2709
  %call3 = call zeroext i1 @_ZN11xercesc_2_79XMLString13isValidNCNameEPKt(i16* %arrayidx), !dbg !2713
  br i1 %call3, label %if.else, label %if.then4, !dbg !2714

if.then4:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !2715
  br label %return, !dbg !2715

if.else:                                          ; preds = %if.end
  %8 = load i32, i32* %colPos, align 4, !dbg !2717
  %cmp5 = icmp eq i32 %8, 0, !dbg !2719
  br i1 %cmp5, label %if.then6, label %if.else7, !dbg !2720

if.then6:                                         ; preds = %if.else
  store i1 true, i1* %retval, align 1, !dbg !2721
  br label %return, !dbg !2721

if.else7:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i16** %temp, metadata !2723, metadata !DIExpression()), !dbg !2725
  %9 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !2726
  %10 = load i32, i32* %colPos, align 4, !dbg !2727
  %add8 = add nsw i32 %10, 1, !dbg !2728
  %conv = sext i32 %add8 to i64, !dbg !2729
  %mul = mul i64 %conv, 2, !dbg !2730
  %11 = bitcast %"class.xercesc_2_7::MemoryManager"* %9 to i8* (%"class.xercesc_2_7::MemoryManager"*, i64)***, !dbg !2731
  %vtable = load i8* (%"class.xercesc_2_7::MemoryManager"*, i64)**, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*** %11, align 8, !dbg !2731
  %vfn = getelementptr inbounds i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)** %vtable, i64 2, !dbg !2731
  %12 = load i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)** %vfn, align 8, !dbg !2731
  %call9 = call i8* %12(%"class.xercesc_2_7::MemoryManager"* %9, i64 %mul), !dbg !2731
  %13 = bitcast i8* %call9 to i16*, !dbg !2732
  store i16* %13, i16** %temp, align 8, !dbg !2725
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::ArrayJanitor"* %jan, metadata !2733, metadata !DIExpression()), !dbg !2734
  %14 = load i16*, i16** %temp, align 8, !dbg !2735
  %15 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !2736
  call void @_ZN11xercesc_2_712ArrayJanitorItEC2EPtPNS_13MemoryManagerE(%"class.xercesc_2_7::ArrayJanitor"* %jan, i16* %14, %"class.xercesc_2_7::MemoryManager"* %15), !dbg !2734
  %16 = load i16*, i16** %temp, align 8, !dbg !2737
  %17 = load i16*, i16** %name.addr, align 8, !dbg !2738
  %18 = load i32, i32* %colPos, align 4, !dbg !2739
  %call10 = invoke zeroext i1 @_ZN11xercesc_2_79XMLString11copyNStringEPtPKtj(i16* %16, i16* %17, i32 %18)
          to label %invoke.cont unwind label %lpad, !dbg !2740

invoke.cont:                                      ; preds = %if.else7
  %19 = load i16*, i16** %temp, align 8, !dbg !2741
  %20 = load i32, i32* %colPos, align 4, !dbg !2742
  %idxprom11 = sext i32 %20 to i64, !dbg !2741
  %arrayidx12 = getelementptr inbounds i16, i16* %19, i64 %idxprom11, !dbg !2741
  store i16 0, i16* %arrayidx12, align 2, !dbg !2743
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::XMLUri"* %newURI, metadata !2744, metadata !DIExpression()), !dbg !2748
  %21 = load i16*, i16** %temp, align 8, !dbg !2749
  %22 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !2750
  invoke void @_ZN11xercesc_2_76XMLUriC1EPKtPNS_13MemoryManagerE(%"class.xercesc_2_7::XMLUri"* %newURI, i16* %21, %"class.xercesc_2_7::MemoryManager"* %22)
          to label %invoke.cont14 unwind label %lpad13, !dbg !2748

invoke.cont14:                                    ; preds = %invoke.cont
  call void @_ZN11xercesc_2_76XMLUriD1Ev(%"class.xercesc_2_7::XMLUri"* %newURI) #12, !dbg !2751
  br label %try.cont, !dbg !2752

lpad:                                             ; preds = %catch, %if.else7
  %23 = landingpad { i8*, i32 }
          cleanup, !dbg !2753
  %24 = extractvalue { i8*, i32 } %23, 0, !dbg !2753
  store i8* %24, i8** %exn.slot, align 8, !dbg !2753
  %25 = extractvalue { i8*, i32 } %23, 1, !dbg !2753
  store i32 %25, i32* %ehselector.slot, align 4, !dbg !2753
  br label %ehcleanup, !dbg !2753

lpad13:                                           ; preds = %invoke.cont
  %26 = landingpad { i8*, i32 }
          cleanup
          catch i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_721MalformedURLExceptionE to i8*), !dbg !2754
  %27 = extractvalue { i8*, i32 } %26, 0, !dbg !2754
  store i8* %27, i8** %exn.slot, align 8, !dbg !2754
  %28 = extractvalue { i8*, i32 } %26, 1, !dbg !2754
  store i32 %28, i32* %ehselector.slot, align 4, !dbg !2754
  br label %catch.dispatch, !dbg !2754

catch.dispatch:                                   ; preds = %lpad13
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !2752
  %29 = call i32 @llvm.eh.typeid.for(i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_721MalformedURLExceptionE to i8*)) #12, !dbg !2752
  %matches = icmp eq i32 %sel, %29, !dbg !2752
  br i1 %matches, label %catch, label %ehcleanup, !dbg !2752

catch:                                            ; preds = %catch.dispatch
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MalformedURLException"** %0, metadata !2755, metadata !DIExpression()), !dbg !2760
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !2752
  %30 = call i8* @__cxa_begin_catch(i8* %exn) #12, !dbg !2752
  %exn.byref = bitcast i8* %30 to %"class.xercesc_2_7::MalformedURLException"*, !dbg !2752
  store %"class.xercesc_2_7::MalformedURLException"* %exn.byref, %"class.xercesc_2_7::MalformedURLException"** %0, align 8, !dbg !2752
  store i1 false, i1* %retval, align 1, !dbg !2761
  store i32 1, i32* %cleanup.dest.slot, align 4
  invoke void @__cxa_end_catch()
          to label %invoke.cont15 unwind label %lpad, !dbg !2763

invoke.cont15:                                    ; preds = %catch
  br label %cleanup

try.cont:                                         ; preds = %invoke.cont14
  store i1 true, i1* %retval, align 1, !dbg !2764
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2764

cleanup:                                          ; preds = %try.cont, %invoke.cont15
  call void @_ZN11xercesc_2_712ArrayJanitorItED2Ev(%"class.xercesc_2_7::ArrayJanitor"* %jan) #12, !dbg !2765
  br label %return

ehcleanup:                                        ; preds = %catch.dispatch, %lpad
  call void @_ZN11xercesc_2_712ArrayJanitorItED2Ev(%"class.xercesc_2_7::ArrayJanitor"* %jan) #12, !dbg !2765
  br label %eh.resume, !dbg !2765

return:                                           ; preds = %cleanup, %if.then6, %if.then4, %if.then
  %31 = load i1, i1* %retval, align 1, !dbg !2766
  ret i1 %31, !dbg !2766

eh.resume:                                        ; preds = %ehcleanup
  %exn16 = load i8*, i8** %exn.slot, align 8, !dbg !2765
  %sel17 = load i32, i32* %ehselector.slot, align 4, !dbg !2765
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn16, 0, !dbg !2765
  %lpad.val18 = insertvalue { i8*, i32 } %lpad.val, i32 %sel17, 1, !dbg !2765
  resume { i8*, i32 } %lpad.val18, !dbg !2765
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZN11xercesc_2_79XMLString11lastIndexOfEPKtt(i16* %toSearch, i16 zeroext %ch) #1 comdat align 2 !dbg !2767 {
entry:
  %toSearch.addr = alloca i16*, align 8
  %ch.addr = alloca i16, align 2
  store i16* %toSearch, i16** %toSearch.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toSearch.addr, metadata !2768, metadata !DIExpression()), !dbg !2769
  store i16 %ch, i16* %ch.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %ch.addr, metadata !2770, metadata !DIExpression()), !dbg !2771
  %0 = load i16, i16* %ch.addr, align 2, !dbg !2772
  %1 = load i16*, i16** %toSearch.addr, align 8, !dbg !2773
  %2 = load i16*, i16** %toSearch.addr, align 8, !dbg !2774
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %2), !dbg !2775
  %call1 = call i32 @_ZN11xercesc_2_79XMLString11lastIndexOfEtPKtj(i16 zeroext %0, i16* %1, i32 %call), !dbg !2776
  ret i32 %call1, !dbg !2777
}

; Function Attrs: noinline uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString13isValidNCNameEPKt(i16* %name) #3 align 2 !dbg !2778 {
entry:
  %name.addr = alloca i16*, align 8
  store i16* %name, i16** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %name.addr, metadata !2779, metadata !DIExpression()), !dbg !2780
  %0 = load i16*, i16** %name.addr, align 8, !dbg !2781
  %1 = load i16*, i16** %name.addr, align 8, !dbg !2782
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %1), !dbg !2783
  %call1 = call zeroext i1 @_ZN11xercesc_2_710XMLChar1_013isValidNCNameEPKtj(i16* %0, i32 %call), !dbg !2784
  ret i1 %call1, !dbg !2785
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString11copyNStringEPtPKtj(i16* %target, i16* %src, i32 %maxChars) #1 align 2 !dbg !2786 {
entry:
  %target.addr = alloca i16*, align 8
  %src.addr = alloca i16*, align 8
  %maxChars.addr = alloca i32, align 4
  %outPtr = alloca i16*, align 8
  %srcPtr = alloca i16*, align 8
  %endPtr = alloca i16*, align 8
  store i16* %target, i16** %target.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %target.addr, metadata !2787, metadata !DIExpression()), !dbg !2788
  store i16* %src, i16** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %src.addr, metadata !2789, metadata !DIExpression()), !dbg !2790
  store i32 %maxChars, i32* %maxChars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxChars.addr, metadata !2791, metadata !DIExpression()), !dbg !2792
  call void @llvm.dbg.declare(metadata i16** %outPtr, metadata !2793, metadata !DIExpression()), !dbg !2794
  %0 = load i16*, i16** %target.addr, align 8, !dbg !2795
  store i16* %0, i16** %outPtr, align 8, !dbg !2794
  call void @llvm.dbg.declare(metadata i16** %srcPtr, metadata !2796, metadata !DIExpression()), !dbg !2797
  %1 = load i16*, i16** %src.addr, align 8, !dbg !2798
  store i16* %1, i16** %srcPtr, align 8, !dbg !2797
  call void @llvm.dbg.declare(metadata i16** %endPtr, metadata !2799, metadata !DIExpression()), !dbg !2800
  %2 = load i16*, i16** %target.addr, align 8, !dbg !2801
  %3 = load i32, i32* %maxChars.addr, align 4, !dbg !2802
  %idx.ext = zext i32 %3 to i64, !dbg !2803
  %add.ptr = getelementptr inbounds i16, i16* %2, i64 %idx.ext, !dbg !2803
  %add.ptr1 = getelementptr inbounds i16, i16* %add.ptr, i64 -1, !dbg !2804
  store i16* %add.ptr1, i16** %endPtr, align 8, !dbg !2800
  br label %while.cond, !dbg !2805

while.cond:                                       ; preds = %while.body, %entry
  %4 = load i16*, i16** %srcPtr, align 8, !dbg !2806
  %5 = load i16, i16* %4, align 2, !dbg !2807
  %tobool = icmp ne i16 %5, 0, !dbg !2807
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2808

land.rhs:                                         ; preds = %while.cond
  %6 = load i16*, i16** %outPtr, align 8, !dbg !2809
  %7 = load i16*, i16** %endPtr, align 8, !dbg !2810
  %cmp = icmp ule i16* %6, %7, !dbg !2811
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %8 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !2812
  br i1 %8, label %while.body, label %while.end, !dbg !2805

while.body:                                       ; preds = %land.end
  %9 = load i16*, i16** %srcPtr, align 8, !dbg !2813
  %incdec.ptr = getelementptr inbounds i16, i16* %9, i32 1, !dbg !2813
  store i16* %incdec.ptr, i16** %srcPtr, align 8, !dbg !2813
  %10 = load i16, i16* %9, align 2, !dbg !2814
  %11 = load i16*, i16** %outPtr, align 8, !dbg !2815
  %incdec.ptr2 = getelementptr inbounds i16, i16* %11, i32 1, !dbg !2815
  store i16* %incdec.ptr2, i16** %outPtr, align 8, !dbg !2815
  store i16 %10, i16* %11, align 2, !dbg !2816
  br label %while.cond, !dbg !2805, !llvm.loop !2817

while.end:                                        ; preds = %land.end
  %12 = load i16*, i16** %outPtr, align 8, !dbg !2818
  store i16 0, i16* %12, align 2, !dbg !2819
  %13 = load i16*, i16** %srcPtr, align 8, !dbg !2820
  %14 = load i16, i16* %13, align 2, !dbg !2821
  %conv = zext i16 %14 to i32, !dbg !2821
  %cmp3 = icmp eq i32 %conv, 0, !dbg !2822
  ret i1 %cmp3, !dbg !2823
}

declare dso_local void @_ZN11xercesc_2_76XMLUriC1EPKtPNS_13MemoryManagerE(%"class.xercesc_2_7::XMLUri"*, i16*, %"class.xercesc_2_7::MemoryManager"*) unnamed_addr #5

; Function Attrs: nounwind
declare dso_local void @_ZN11xercesc_2_76XMLUriD1Ev(%"class.xercesc_2_7::XMLUri"*) unnamed_addr #4

; Function Attrs: nounwind readnone
declare i32 @llvm.eh.typeid.for(i8*) #9

declare dso_local i8* @__cxa_begin_catch(i8*)

declare dso_local void @__cxa_end_catch()

declare dso_local zeroext i1 @_ZN11xercesc_2_710XMLChar1_013isValidNCNameEPKtj(i16*, i32) #5

; Function Attrs: noinline uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString11isValidNameEPKt(i16* %name) #3 align 2 !dbg !2824 {
entry:
  %name.addr = alloca i16*, align 8
  store i16* %name, i16** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %name.addr, metadata !2825, metadata !DIExpression()), !dbg !2826
  %0 = load i16*, i16** %name.addr, align 8, !dbg !2827
  %1 = load i16*, i16** %name.addr, align 8, !dbg !2828
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %1), !dbg !2829
  %call1 = call zeroext i1 @_ZN11xercesc_2_710XMLChar1_011isValidNameEPKtj(i16* %0, i32 %call), !dbg !2830
  ret i1 %call1, !dbg !2831
}

declare dso_local zeroext i1 @_ZN11xercesc_2_710XMLChar1_011isValidNameEPKtj(i16*, i32) #5

; Function Attrs: noinline uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString14isValidEncNameEPKt(i16* %name) #3 align 2 !dbg !2832 {
entry:
  %retval = alloca i1, align 1
  %name.addr = alloca i16*, align 8
  %tempName = alloca i16*, align 8
  %firstChar = alloca i16, align 2
  store i16* %name, i16** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %name.addr, metadata !2833, metadata !DIExpression()), !dbg !2834
  %0 = load i16*, i16** %name.addr, align 8, !dbg !2835
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %0), !dbg !2837
  %cmp = icmp eq i32 %call, 0, !dbg !2838
  br i1 %cmp, label %if.then, label %if.end, !dbg !2839

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !2840
  br label %return, !dbg !2840

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i16** %tempName, metadata !2841, metadata !DIExpression()), !dbg !2842
  %1 = load i16*, i16** %name.addr, align 8, !dbg !2843
  store i16* %1, i16** %tempName, align 8, !dbg !2842
  call void @llvm.dbg.declare(metadata i16* %firstChar, metadata !2844, metadata !DIExpression()), !dbg !2845
  %2 = load i16*, i16** %tempName, align 8, !dbg !2846
  %incdec.ptr = getelementptr inbounds i16, i16* %2, i32 1, !dbg !2846
  store i16* %incdec.ptr, i16** %tempName, align 8, !dbg !2846
  %3 = load i16, i16* %2, align 2, !dbg !2847
  store i16 %3, i16* %firstChar, align 2, !dbg !2845
  %4 = load i16, i16* %firstChar, align 2, !dbg !2848
  %call1 = call zeroext i1 @_ZN11xercesc_2_79XMLString7isAlphaEt(i16 zeroext %4), !dbg !2850
  br i1 %call1, label %if.end3, label %if.then2, !dbg !2851

if.then2:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !2852
  br label %return, !dbg !2852

if.end3:                                          ; preds = %if.end
  br label %while.cond, !dbg !2853

while.cond:                                       ; preds = %if.end15, %if.end3
  %5 = load i16*, i16** %tempName, align 8, !dbg !2854
  %6 = load i16, i16* %5, align 2, !dbg !2855
  %tobool = icmp ne i16 %6, 0, !dbg !2855
  br i1 %tobool, label %while.body, label %while.end, !dbg !2853

while.body:                                       ; preds = %while.cond
  %7 = load i16*, i16** %tempName, align 8, !dbg !2856
  %8 = load i16, i16* %7, align 2, !dbg !2859
  %call4 = call zeroext i1 @_ZN11xercesc_2_79XMLString7isAlphaEt(i16 zeroext %8), !dbg !2860
  br i1 %call4, label %if.end15, label %land.lhs.true, !dbg !2861

land.lhs.true:                                    ; preds = %while.body
  %9 = load i16*, i16** %tempName, align 8, !dbg !2862
  %10 = load i16, i16* %9, align 2, !dbg !2863
  %call5 = call zeroext i1 @_ZN11xercesc_2_79XMLString7isDigitEt(i16 zeroext %10), !dbg !2864
  br i1 %call5, label %if.end15, label %land.lhs.true6, !dbg !2865

land.lhs.true6:                                   ; preds = %land.lhs.true
  %11 = load i16*, i16** %tempName, align 8, !dbg !2866
  %12 = load i16, i16* %11, align 2, !dbg !2867
  %conv = zext i16 %12 to i32, !dbg !2867
  %cmp7 = icmp ne i32 %conv, 46, !dbg !2868
  br i1 %cmp7, label %land.lhs.true8, label %if.end15, !dbg !2869

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %13 = load i16*, i16** %tempName, align 8, !dbg !2870
  %14 = load i16, i16* %13, align 2, !dbg !2871
  %conv9 = zext i16 %14 to i32, !dbg !2871
  %cmp10 = icmp ne i32 %conv9, 95, !dbg !2872
  br i1 %cmp10, label %land.lhs.true11, label %if.end15, !dbg !2873

land.lhs.true11:                                  ; preds = %land.lhs.true8
  %15 = load i16*, i16** %tempName, align 8, !dbg !2874
  %16 = load i16, i16* %15, align 2, !dbg !2875
  %conv12 = zext i16 %16 to i32, !dbg !2875
  %cmp13 = icmp ne i32 %conv12, 45, !dbg !2876
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !2877

if.then14:                                        ; preds = %land.lhs.true11
  store i1 false, i1* %retval, align 1, !dbg !2878
  br label %return, !dbg !2878

if.end15:                                         ; preds = %land.lhs.true11, %land.lhs.true8, %land.lhs.true6, %land.lhs.true, %while.body
  %17 = load i16*, i16** %tempName, align 8, !dbg !2879
  %incdec.ptr16 = getelementptr inbounds i16, i16* %17, i32 1, !dbg !2879
  store i16* %incdec.ptr16, i16** %tempName, align 8, !dbg !2879
  br label %while.cond, !dbg !2853, !llvm.loop !2880

while.end:                                        ; preds = %while.cond
  store i1 true, i1* %retval, align 1, !dbg !2882
  br label %return, !dbg !2882

return:                                           ; preds = %while.end, %if.then14, %if.then2, %if.then
  %18 = load i1, i1* %retval, align 1, !dbg !2883
  ret i1 %18, !dbg !2883
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString7isAlphaEt(i16 zeroext %theChar) #1 align 2 !dbg !2884 {
entry:
  %retval = alloca i1, align 1
  %theChar.addr = alloca i16, align 2
  store i16 %theChar, i16* %theChar.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %theChar.addr, metadata !2885, metadata !DIExpression()), !dbg !2886
  %0 = load i16, i16* %theChar.addr, align 2, !dbg !2887
  %conv = zext i16 %0 to i32, !dbg !2887
  %cmp = icmp sge i32 %conv, 97, !dbg !2889
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !2890

land.lhs.true:                                    ; preds = %entry
  %1 = load i16, i16* %theChar.addr, align 2, !dbg !2891
  %conv1 = zext i16 %1 to i32, !dbg !2891
  %cmp2 = icmp sle i32 %conv1, 122, !dbg !2892
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !2893

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %2 = load i16, i16* %theChar.addr, align 2, !dbg !2894
  %conv3 = zext i16 %2 to i32, !dbg !2894
  %cmp4 = icmp sge i32 %conv3, 65, !dbg !2895
  br i1 %cmp4, label %land.lhs.true5, label %if.end, !dbg !2896

land.lhs.true5:                                   ; preds = %lor.lhs.false
  %3 = load i16, i16* %theChar.addr, align 2, !dbg !2897
  %conv6 = zext i16 %3 to i32, !dbg !2897
  %cmp7 = icmp sle i32 %conv6, 90, !dbg !2898
  br i1 %cmp7, label %if.then, label %if.end, !dbg !2899

if.then:                                          ; preds = %land.lhs.true5, %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !2900
  br label %return, !dbg !2900

if.end:                                           ; preds = %land.lhs.true5, %lor.lhs.false
  store i1 false, i1* %retval, align 1, !dbg !2901
  br label %return, !dbg !2901

return:                                           ; preds = %if.end, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !2902
  ret i1 %4, !dbg !2902
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString7isDigitEt(i16 zeroext %theChar) #1 align 2 !dbg !2903 {
entry:
  %retval = alloca i1, align 1
  %theChar.addr = alloca i16, align 2
  store i16 %theChar, i16* %theChar.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %theChar.addr, metadata !2904, metadata !DIExpression()), !dbg !2905
  %0 = load i16, i16* %theChar.addr, align 2, !dbg !2906
  %conv = zext i16 %0 to i32, !dbg !2906
  %cmp = icmp sge i32 %conv, 48, !dbg !2908
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2909

land.lhs.true:                                    ; preds = %entry
  %1 = load i16, i16* %theChar.addr, align 2, !dbg !2910
  %conv1 = zext i16 %1 to i32, !dbg !2910
  %cmp2 = icmp sle i32 %conv1, 57, !dbg !2911
  br i1 %cmp2, label %if.then, label %if.end, !dbg !2912

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !2913
  br label %return, !dbg !2913

if.end:                                           ; preds = %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !2914
  br label %return, !dbg !2914

return:                                           ; preds = %if.end, %if.then
  %2 = load i1, i1* %retval, align 1, !dbg !2915
  ret i1 %2, !dbg !2915
}

; Function Attrs: noinline uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString12isValidQNameEPKt(i16* %name) #3 align 2 !dbg !2916 {
entry:
  %name.addr = alloca i16*, align 8
  store i16* %name, i16** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %name.addr, metadata !2917, metadata !DIExpression()), !dbg !2918
  %0 = load i16*, i16** %name.addr, align 8, !dbg !2919
  %1 = load i16*, i16** %name.addr, align 8, !dbg !2920
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %1), !dbg !2921
  %call1 = call zeroext i1 @_ZN11xercesc_2_710XMLChar1_012isValidQNameEPKtj(i16* %0, i32 %call), !dbg !2922
  ret i1 %call1, !dbg !2923
}

declare dso_local zeroext i1 @_ZN11xercesc_2_710XMLChar1_012isValidQNameEPKtj(i16*, i32) #5

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString10isAlphaNumEt(i16 zeroext %theChar) #1 align 2 !dbg !2924 {
entry:
  %theChar.addr = alloca i16, align 2
  store i16 %theChar, i16* %theChar.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %theChar.addr, metadata !2925, metadata !DIExpression()), !dbg !2926
  %0 = load i16, i16* %theChar.addr, align 2, !dbg !2927
  %call = call zeroext i1 @_ZN11xercesc_2_79XMLString7isAlphaEt(i16 zeroext %0), !dbg !2928
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !2929

lor.rhs:                                          ; preds = %entry
  %1 = load i16, i16* %theChar.addr, align 2, !dbg !2930
  %call1 = call zeroext i1 @_ZN11xercesc_2_79XMLString7isDigitEt(i16 zeroext %1), !dbg !2931
  br label %lor.end, !dbg !2929

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %call1, %lor.rhs ]
  ret i1 %2, !dbg !2932
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString5isHexEt(i16 zeroext %theChar) #1 align 2 !dbg !2933 {
entry:
  %theChar.addr = alloca i16, align 2
  store i16 %theChar, i16* %theChar.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %theChar.addr, metadata !2934, metadata !DIExpression()), !dbg !2935
  %0 = load i16, i16* %theChar.addr, align 2, !dbg !2936
  %call = call zeroext i1 @_ZN11xercesc_2_79XMLString7isDigitEt(i16 zeroext %0), !dbg !2937
  br i1 %call, label %lor.end, label %lor.lhs.false, !dbg !2938

lor.lhs.false:                                    ; preds = %entry
  %1 = load i16, i16* %theChar.addr, align 2, !dbg !2939
  %conv = zext i16 %1 to i32, !dbg !2939
  %cmp = icmp sge i32 %conv, 97, !dbg !2940
  br i1 %cmp, label %land.lhs.true, label %lor.rhs, !dbg !2941

land.lhs.true:                                    ; preds = %lor.lhs.false
  %2 = load i16, i16* %theChar.addr, align 2, !dbg !2942
  %conv1 = zext i16 %2 to i32, !dbg !2942
  %cmp2 = icmp sle i32 %conv1, 102, !dbg !2943
  br i1 %cmp2, label %lor.end, label %lor.rhs, !dbg !2944

lor.rhs:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %3 = load i16, i16* %theChar.addr, align 2, !dbg !2945
  %conv3 = zext i16 %3 to i32, !dbg !2945
  %cmp4 = icmp sge i32 %conv3, 65, !dbg !2946
  br i1 %cmp4, label %land.rhs, label %land.end, !dbg !2947

land.rhs:                                         ; preds = %lor.rhs
  %4 = load i16, i16* %theChar.addr, align 2, !dbg !2948
  %conv5 = zext i16 %4 to i32, !dbg !2948
  %cmp6 = icmp sle i32 %conv5, 70, !dbg !2949
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %5 = phi i1 [ false, %lor.rhs ], [ %cmp6, %land.rhs ], !dbg !2950
  br label %lor.end, !dbg !2944

lor.end:                                          ; preds = %land.end, %land.lhs.true, %entry
  %6 = phi i1 [ true, %land.lhs.true ], [ true, %entry ], [ %5, %land.end ]
  ret i1 %6, !dbg !2951
}

; Function Attrs: noinline uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString15isAllWhiteSpaceEPKt(i16* %toCheck) #3 align 2 !dbg !2952 {
entry:
  %toCheck.addr = alloca i16*, align 8
  store i16* %toCheck, i16** %toCheck.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toCheck.addr, metadata !2953, metadata !DIExpression()), !dbg !2954
  %0 = load i16*, i16** %toCheck.addr, align 8, !dbg !2955
  %1 = load i16*, i16** %toCheck.addr, align 8, !dbg !2956
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %1), !dbg !2957
  %call1 = call zeroext i1 @_ZN11xercesc_2_710XMLChar1_011isAllSpacesEPKtj(i16* %0, i32 %call), !dbg !2958
  ret i1 %call1, !dbg !2959
}

declare dso_local zeroext i1 @_ZN11xercesc_2_710XMLChar1_011isAllSpacesEPKtj(i16*, i32) #5

; Function Attrs: noinline uwtable
define dso_local void @_ZN11xercesc_2_79XMLString9binToTextEmPtjjPNS_13MemoryManagerE(i64 %toFormat, i16* %toFill, i32 %maxChars, i32 %radix, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !903 {
entry:
  %toFormat.addr = alloca i64, align 8
  %toFill.addr = alloca i16*, align 8
  %maxChars.addr = alloca i32, align 4
  %radix.addr = alloca i32, align 4
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %tmpIndex = alloca i32, align 4
  %tmpVal = alloca i32, align 4
  %tmpBuf = alloca [128 x i16], align 16
  %charInd = alloca i32, align 4
  %charInd38 = alloca i32, align 4
  %outIndex = alloca i32, align 4
  store i64 %toFormat, i64* %toFormat.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %toFormat.addr, metadata !2960, metadata !DIExpression()), !dbg !2961
  store i16* %toFill, i16** %toFill.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toFill.addr, metadata !2962, metadata !DIExpression()), !dbg !2963
  store i32 %maxChars, i32* %maxChars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxChars.addr, metadata !2964, metadata !DIExpression()), !dbg !2965
  store i32 %radix, i32* %radix.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %radix.addr, metadata !2966, metadata !DIExpression()), !dbg !2967
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !2968, metadata !DIExpression()), !dbg !2969
  %0 = load i32, i32* %maxChars.addr, align 4, !dbg !2970
  %tobool = icmp ne i32 %0, 0, !dbg !2970
  br i1 %tobool, label %if.end, label %if.then, !dbg !2972

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !2973
  %1 = bitcast i8* %exception to %"class.xercesc_2_7::IllegalArgumentException"*, !dbg !2973
  %2 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !2973
  invoke void @_ZN11xercesc_2_724IllegalArgumentExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::IllegalArgumentException"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 807, i32 81, %"class.xercesc_2_7::MemoryManager"* %2)
          to label %invoke.cont unwind label %lpad, !dbg !2973

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_724IllegalArgumentExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::IllegalArgumentException"*)* @_ZN11xercesc_2_724IllegalArgumentExceptionD2Ev to i8*)) #14, !dbg !2973
  unreachable, !dbg !2973

lpad:                                             ; preds = %if.then
  %3 = landingpad { i8*, i32 }
          cleanup, !dbg !2974
  %4 = extractvalue { i8*, i32 } %3, 0, !dbg !2974
  store i8* %4, i8** %exn.slot, align 8, !dbg !2974
  %5 = extractvalue { i8*, i32 } %3, 1, !dbg !2974
  store i32 %5, i32* %ehselector.slot, align 4, !dbg !2974
  call void @__cxa_free_exception(i8* %exception) #12, !dbg !2973
  br label %eh.resume, !dbg !2973

if.end:                                           ; preds = %entry
  %6 = load i64, i64* %toFormat.addr, align 8, !dbg !2975
  %tobool1 = icmp ne i64 %6, 0, !dbg !2975
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !2977

if.then2:                                         ; preds = %if.end
  %7 = load i16*, i16** %toFill.addr, align 8, !dbg !2978
  %arrayidx = getelementptr inbounds i16, i16* %7, i64 0, !dbg !2978
  store i16 48, i16* %arrayidx, align 2, !dbg !2980
  %8 = load i16*, i16** %toFill.addr, align 8, !dbg !2981
  %arrayidx3 = getelementptr inbounds i16, i16* %8, i64 1, !dbg !2981
  store i16 0, i16* %arrayidx3, align 2, !dbg !2982
  br label %return, !dbg !2983

if.end4:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %tmpIndex, metadata !2984, metadata !DIExpression()), !dbg !2985
  store i32 0, i32* %tmpIndex, align 4, !dbg !2985
  call void @llvm.dbg.declare(metadata i32* %tmpVal, metadata !2986, metadata !DIExpression()), !dbg !2987
  %9 = load i64, i64* %toFormat.addr, align 8, !dbg !2988
  %conv = trunc i64 %9 to i32, !dbg !2988
  store i32 %conv, i32* %tmpVal, align 4, !dbg !2987
  call void @llvm.dbg.declare(metadata [128 x i16]* %tmpBuf, metadata !2989, metadata !DIExpression()), !dbg !2991
  %10 = load i32, i32* %radix.addr, align 4, !dbg !2992
  %cmp = icmp eq i32 %10, 2, !dbg !2994
  br i1 %cmp, label %if.then5, label %if.else15, !dbg !2995

if.then5:                                         ; preds = %if.end4
  br label %while.cond, !dbg !2996

while.cond:                                       ; preds = %if.end14, %if.then5
  %11 = load i32, i32* %tmpVal, align 4, !dbg !2998
  %tobool6 = icmp ne i32 %11, 0, !dbg !2998
  br i1 %tobool6, label %while.body, label %while.end, !dbg !2996

while.body:                                       ; preds = %while.cond
  %12 = load i32, i32* %tmpVal, align 4, !dbg !2999
  %conv7 = zext i32 %12 to i64, !dbg !2999
  %and = and i64 %conv7, 1, !dbg !3002
  %tobool8 = icmp ne i64 %and, 0, !dbg !2999
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !3003

if.then9:                                         ; preds = %while.body
  %13 = load i32, i32* %tmpIndex, align 4, !dbg !3004
  %inc = add i32 %13, 1, !dbg !3004
  store i32 %inc, i32* %tmpIndex, align 4, !dbg !3004
  %idxprom = zext i32 %13 to i64, !dbg !3005
  %arrayidx10 = getelementptr inbounds [128 x i16], [128 x i16]* %tmpBuf, i64 0, i64 %idxprom, !dbg !3005
  store i16 49, i16* %arrayidx10, align 2, !dbg !3006
  br label %if.end14, !dbg !3005

if.else:                                          ; preds = %while.body
  %14 = load i32, i32* %tmpIndex, align 4, !dbg !3007
  %inc11 = add i32 %14, 1, !dbg !3007
  store i32 %inc11, i32* %tmpIndex, align 4, !dbg !3007
  %idxprom12 = zext i32 %14 to i64, !dbg !3008
  %arrayidx13 = getelementptr inbounds [128 x i16], [128 x i16]* %tmpBuf, i64 0, i64 %idxprom12, !dbg !3008
  store i16 48, i16* %arrayidx13, align 2, !dbg !3009
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then9
  %15 = load i32, i32* %tmpVal, align 4, !dbg !3010
  %shr = lshr i32 %15, 1, !dbg !3010
  store i32 %shr, i32* %tmpVal, align 4, !dbg !3010
  br label %while.cond, !dbg !2996, !llvm.loop !3011

while.end:                                        ; preds = %while.cond
  br label %if.end51, !dbg !3013

if.else15:                                        ; preds = %if.end4
  %16 = load i32, i32* %radix.addr, align 4, !dbg !3014
  %cmp16 = icmp eq i32 %16, 16, !dbg !3016
  br i1 %cmp16, label %if.then17, label %if.else31, !dbg !3017

if.then17:                                        ; preds = %if.else15
  br label %while.cond18, !dbg !3018

while.cond18:                                     ; preds = %while.body20, %if.then17
  %17 = load i32, i32* %tmpVal, align 4, !dbg !3020
  %tobool19 = icmp ne i32 %17, 0, !dbg !3020
  br i1 %tobool19, label %while.body20, label %while.end30, !dbg !3018

while.body20:                                     ; preds = %while.cond18
  call void @llvm.dbg.declare(metadata i32* %charInd, metadata !3021, metadata !DIExpression()), !dbg !3023
  %18 = load i32, i32* %tmpVal, align 4, !dbg !3024
  %conv21 = zext i32 %18 to i64, !dbg !3024
  %and22 = and i64 %conv21, 15, !dbg !3025
  %conv23 = trunc i64 %and22 to i32, !dbg !3026
  store i32 %conv23, i32* %charInd, align 4, !dbg !3023
  %19 = load i32, i32* %charInd, align 4, !dbg !3027
  %idxprom24 = zext i32 %19 to i64, !dbg !3028
  %arrayidx25 = getelementptr inbounds [16 x i16], [16 x i16]* @_ZZN11xercesc_2_79XMLString9binToTextEmPtjjPNS_13MemoryManagerEE9digitList, i64 0, i64 %idxprom24, !dbg !3028
  %20 = load i16, i16* %arrayidx25, align 2, !dbg !3028
  %21 = load i32, i32* %tmpIndex, align 4, !dbg !3029
  %inc26 = add i32 %21, 1, !dbg !3029
  store i32 %inc26, i32* %tmpIndex, align 4, !dbg !3029
  %idxprom27 = zext i32 %21 to i64, !dbg !3030
  %arrayidx28 = getelementptr inbounds [128 x i16], [128 x i16]* %tmpBuf, i64 0, i64 %idxprom27, !dbg !3030
  store i16 %20, i16* %arrayidx28, align 2, !dbg !3031
  %22 = load i32, i32* %tmpVal, align 4, !dbg !3032
  %shr29 = lshr i32 %22, 4, !dbg !3032
  store i32 %shr29, i32* %tmpVal, align 4, !dbg !3032
  br label %while.cond18, !dbg !3018, !llvm.loop !3033

while.end30:                                      ; preds = %while.cond18
  br label %if.end50, !dbg !3035

if.else31:                                        ; preds = %if.else15
  %23 = load i32, i32* %radix.addr, align 4, !dbg !3036
  %cmp32 = icmp eq i32 %23, 8, !dbg !3038
  br i1 %cmp32, label %if.then34, label %lor.lhs.false, !dbg !3039

lor.lhs.false:                                    ; preds = %if.else31
  %24 = load i32, i32* %radix.addr, align 4, !dbg !3040
  %cmp33 = icmp eq i32 %24, 10, !dbg !3041
  br i1 %cmp33, label %if.then34, label %if.else45, !dbg !3042

if.then34:                                        ; preds = %lor.lhs.false, %if.else31
  br label %while.cond35, !dbg !3043

while.cond35:                                     ; preds = %while.body37, %if.then34
  %25 = load i32, i32* %tmpVal, align 4, !dbg !3045
  %tobool36 = icmp ne i32 %25, 0, !dbg !3045
  br i1 %tobool36, label %while.body37, label %while.end44, !dbg !3043

while.body37:                                     ; preds = %while.cond35
  call void @llvm.dbg.declare(metadata i32* %charInd38, metadata !3046, metadata !DIExpression()), !dbg !3048
  %26 = load i32, i32* %tmpVal, align 4, !dbg !3049
  %27 = load i32, i32* %radix.addr, align 4, !dbg !3050
  %rem = urem i32 %26, %27, !dbg !3051
  store i32 %rem, i32* %charInd38, align 4, !dbg !3048
  %28 = load i32, i32* %charInd38, align 4, !dbg !3052
  %idxprom39 = zext i32 %28 to i64, !dbg !3053
  %arrayidx40 = getelementptr inbounds [16 x i16], [16 x i16]* @_ZZN11xercesc_2_79XMLString9binToTextEmPtjjPNS_13MemoryManagerEE9digitList, i64 0, i64 %idxprom39, !dbg !3053
  %29 = load i16, i16* %arrayidx40, align 2, !dbg !3053
  %30 = load i32, i32* %tmpIndex, align 4, !dbg !3054
  %inc41 = add i32 %30, 1, !dbg !3054
  store i32 %inc41, i32* %tmpIndex, align 4, !dbg !3054
  %idxprom42 = zext i32 %30 to i64, !dbg !3055
  %arrayidx43 = getelementptr inbounds [128 x i16], [128 x i16]* %tmpBuf, i64 0, i64 %idxprom42, !dbg !3055
  store i16 %29, i16* %arrayidx43, align 2, !dbg !3056
  %31 = load i32, i32* %radix.addr, align 4, !dbg !3057
  %32 = load i32, i32* %tmpVal, align 4, !dbg !3058
  %div = udiv i32 %32, %31, !dbg !3058
  store i32 %div, i32* %tmpVal, align 4, !dbg !3058
  br label %while.cond35, !dbg !3043, !llvm.loop !3059

while.end44:                                      ; preds = %while.cond35
  br label %if.end49, !dbg !3061

if.else45:                                        ; preds = %lor.lhs.false
  %exception46 = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !3062
  %33 = bitcast i8* %exception46 to %"class.xercesc_2_7::RuntimeException"*, !dbg !3062
  %34 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !3062
  invoke void @_ZN11xercesc_2_716RuntimeExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::RuntimeException"* %33, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 866, i32 82, %"class.xercesc_2_7::MemoryManager"* %34)
          to label %invoke.cont48 unwind label %lpad47, !dbg !3062

invoke.cont48:                                    ; preds = %if.else45
  call void @__cxa_throw(i8* %exception46, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_716RuntimeExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::RuntimeException"*)* @_ZN11xercesc_2_716RuntimeExceptionD2Ev to i8*)) #14, !dbg !3062
  unreachable, !dbg !3062

lpad47:                                           ; preds = %if.else45
  %35 = landingpad { i8*, i32 }
          cleanup, !dbg !3064
  %36 = extractvalue { i8*, i32 } %35, 0, !dbg !3064
  store i8* %36, i8** %exn.slot, align 8, !dbg !3064
  %37 = extractvalue { i8*, i32 } %35, 1, !dbg !3064
  store i32 %37, i32* %ehselector.slot, align 4, !dbg !3064
  call void @__cxa_free_exception(i8* %exception46) #12, !dbg !3062
  br label %eh.resume, !dbg !3062

if.end49:                                         ; preds = %while.end44
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %while.end30
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %while.end
  %38 = load i32, i32* %tmpIndex, align 4, !dbg !3065
  %39 = load i32, i32* %maxChars.addr, align 4, !dbg !3067
  %cmp52 = icmp ugt i32 %38, %39, !dbg !3068
  br i1 %cmp52, label %if.then53, label %if.end57, !dbg !3069

if.then53:                                        ; preds = %if.end51
  %exception54 = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !3070
  %40 = bitcast i8* %exception54 to %"class.xercesc_2_7::IllegalArgumentException"*, !dbg !3070
  %41 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !3070
  invoke void @_ZN11xercesc_2_724IllegalArgumentExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::IllegalArgumentException"* %40, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 872, i32 83, %"class.xercesc_2_7::MemoryManager"* %41)
          to label %invoke.cont56 unwind label %lpad55, !dbg !3070

invoke.cont56:                                    ; preds = %if.then53
  call void @__cxa_throw(i8* %exception54, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_724IllegalArgumentExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::IllegalArgumentException"*)* @_ZN11xercesc_2_724IllegalArgumentExceptionD2Ev to i8*)) #14, !dbg !3070
  unreachable, !dbg !3070

lpad55:                                           ; preds = %if.then53
  %42 = landingpad { i8*, i32 }
          cleanup, !dbg !3072
  %43 = extractvalue { i8*, i32 } %42, 0, !dbg !3072
  store i8* %43, i8** %exn.slot, align 8, !dbg !3072
  %44 = extractvalue { i8*, i32 } %42, 1, !dbg !3072
  store i32 %44, i32* %ehselector.slot, align 4, !dbg !3072
  call void @__cxa_free_exception(i8* %exception54) #12, !dbg !3070
  br label %eh.resume, !dbg !3070

if.end57:                                         ; preds = %if.end51
  call void @llvm.dbg.declare(metadata i32* %outIndex, metadata !3073, metadata !DIExpression()), !dbg !3074
  store i32 0, i32* %outIndex, align 4, !dbg !3074
  br label %for.cond, !dbg !3075

for.cond:                                         ; preds = %for.inc, %if.end57
  %45 = load i32, i32* %tmpIndex, align 4, !dbg !3076
  %cmp58 = icmp ugt i32 %45, 0, !dbg !3079
  br i1 %cmp58, label %for.body, label %for.end, !dbg !3080

for.body:                                         ; preds = %for.cond
  %46 = load i32, i32* %tmpIndex, align 4, !dbg !3081
  %sub = sub i32 %46, 1, !dbg !3082
  %idxprom59 = zext i32 %sub to i64, !dbg !3083
  %arrayidx60 = getelementptr inbounds [128 x i16], [128 x i16]* %tmpBuf, i64 0, i64 %idxprom59, !dbg !3083
  %47 = load i16, i16* %arrayidx60, align 2, !dbg !3083
  %48 = load i16*, i16** %toFill.addr, align 8, !dbg !3084
  %49 = load i32, i32* %outIndex, align 4, !dbg !3085
  %inc61 = add i32 %49, 1, !dbg !3085
  store i32 %inc61, i32* %outIndex, align 4, !dbg !3085
  %idxprom62 = zext i32 %49 to i64, !dbg !3084
  %arrayidx63 = getelementptr inbounds i16, i16* %48, i64 %idxprom62, !dbg !3084
  store i16 %47, i16* %arrayidx63, align 2, !dbg !3086
  br label %for.inc, !dbg !3084

for.inc:                                          ; preds = %for.body
  %50 = load i32, i32* %tmpIndex, align 4, !dbg !3087
  %dec = add i32 %50, -1, !dbg !3087
  store i32 %dec, i32* %tmpIndex, align 4, !dbg !3087
  br label %for.cond, !dbg !3088, !llvm.loop !3089

for.end:                                          ; preds = %for.cond
  %51 = load i16*, i16** %toFill.addr, align 8, !dbg !3091
  %52 = load i32, i32* %outIndex, align 4, !dbg !3092
  %idxprom64 = zext i32 %52 to i64, !dbg !3091
  %arrayidx65 = getelementptr inbounds i16, i16* %51, i64 %idxprom64, !dbg !3091
  store i16 0, i16* %arrayidx65, align 2, !dbg !3093
  br label %return, !dbg !3094

return:                                           ; preds = %for.end, %if.then2
  ret void, !dbg !3094

eh.resume:                                        ; preds = %lpad55, %lpad47, %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !2973
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !2973
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !2973
  %lpad.val66 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !2973
  resume { i8*, i32 } %lpad.val66, !dbg !2973
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN11xercesc_2_79XMLString9binToTextEjPtjjPNS_13MemoryManagerE(i32 %toFormat, i16* %toFill, i32 %maxChars, i32 %radix, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 !dbg !3095 {
entry:
  %toFormat.addr = alloca i32, align 4
  %toFill.addr = alloca i16*, align 8
  %maxChars.addr = alloca i32, align 4
  %radix.addr = alloca i32, align 4
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  store i32 %toFormat, i32* %toFormat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %toFormat.addr, metadata !3096, metadata !DIExpression()), !dbg !3097
  store i16* %toFill, i16** %toFill.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toFill.addr, metadata !3098, metadata !DIExpression()), !dbg !3099
  store i32 %maxChars, i32* %maxChars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxChars.addr, metadata !3100, metadata !DIExpression()), !dbg !3101
  store i32 %radix, i32* %radix.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %radix.addr, metadata !3102, metadata !DIExpression()), !dbg !3103
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !3104, metadata !DIExpression()), !dbg !3105
  %0 = load i32, i32* %toFormat.addr, align 4, !dbg !3106
  %conv = zext i32 %0 to i64, !dbg !3106
  %1 = load i16*, i16** %toFill.addr, align 8, !dbg !3107
  %2 = load i32, i32* %maxChars.addr, align 4, !dbg !3108
  %3 = load i32, i32* %radix.addr, align 4, !dbg !3109
  %4 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !3110
  call void @_ZN11xercesc_2_79XMLString9binToTextEmPtjjPNS_13MemoryManagerE(i64 %conv, i16* %1, i32 %2, i32 %3, %"class.xercesc_2_7::MemoryManager"* %4), !dbg !3111
  ret void, !dbg !3112
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN11xercesc_2_79XMLString9binToTextElPtjjPNS_13MemoryManagerE(i64 %toFormat, i16* %toFill, i32 %maxChars, i32 %radix, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 !dbg !3113 {
entry:
  %toFormat.addr = alloca i64, align 8
  %toFill.addr = alloca i16*, align 8
  %maxChars.addr = alloca i32, align 4
  %radix.addr = alloca i32, align 4
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %startInd = alloca i32, align 4
  %actualVal = alloca i64, align 8
  store i64 %toFormat, i64* %toFormat.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %toFormat.addr, metadata !3114, metadata !DIExpression()), !dbg !3115
  store i16* %toFill, i16** %toFill.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toFill.addr, metadata !3116, metadata !DIExpression()), !dbg !3117
  store i32 %maxChars, i32* %maxChars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxChars.addr, metadata !3118, metadata !DIExpression()), !dbg !3119
  store i32 %radix, i32* %radix.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %radix.addr, metadata !3120, metadata !DIExpression()), !dbg !3121
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !3122, metadata !DIExpression()), !dbg !3123
  call void @llvm.dbg.declare(metadata i32* %startInd, metadata !3124, metadata !DIExpression()), !dbg !3125
  store i32 0, i32* %startInd, align 4, !dbg !3125
  call void @llvm.dbg.declare(metadata i64* %actualVal, metadata !3126, metadata !DIExpression()), !dbg !3127
  %0 = load i64, i64* %toFormat.addr, align 8, !dbg !3128
  %cmp = icmp slt i64 %0, 0, !dbg !3130
  br i1 %cmp, label %if.then, label %if.else, !dbg !3131

if.then:                                          ; preds = %entry
  %1 = load i16*, i16** %toFill.addr, align 8, !dbg !3132
  %arrayidx = getelementptr inbounds i16, i16* %1, i64 0, !dbg !3132
  store i16 45, i16* %arrayidx, align 2, !dbg !3134
  %2 = load i32, i32* %startInd, align 4, !dbg !3135
  %inc = add i32 %2, 1, !dbg !3135
  store i32 %inc, i32* %startInd, align 4, !dbg !3135
  %3 = load i64, i64* %toFormat.addr, align 8, !dbg !3136
  %mul = mul nsw i64 %3, -1, !dbg !3137
  store i64 %mul, i64* %actualVal, align 8, !dbg !3138
  br label %if.end, !dbg !3139

if.else:                                          ; preds = %entry
  %4 = load i64, i64* %toFormat.addr, align 8, !dbg !3140
  store i64 %4, i64* %actualVal, align 8, !dbg !3142
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load i64, i64* %actualVal, align 8, !dbg !3143
  %6 = load i16*, i16** %toFill.addr, align 8, !dbg !3144
  %7 = load i32, i32* %startInd, align 4, !dbg !3145
  %idxprom = zext i32 %7 to i64, !dbg !3144
  %arrayidx1 = getelementptr inbounds i16, i16* %6, i64 %idxprom, !dbg !3144
  %8 = load i32, i32* %maxChars.addr, align 4, !dbg !3146
  %9 = load i32, i32* %radix.addr, align 4, !dbg !3147
  %10 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !3148
  call void @_ZN11xercesc_2_79XMLString9binToTextEmPtjjPNS_13MemoryManagerE(i64 %5, i16* %arrayidx1, i32 %8, i32 %9, %"class.xercesc_2_7::MemoryManager"* %10), !dbg !3149
  ret void, !dbg !3150
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN11xercesc_2_79XMLString9binToTextEiPtjjPNS_13MemoryManagerE(i32 %toFormat, i16* %toFill, i32 %maxChars, i32 %radix, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 !dbg !3151 {
entry:
  %toFormat.addr = alloca i32, align 4
  %toFill.addr = alloca i16*, align 8
  %maxChars.addr = alloca i32, align 4
  %radix.addr = alloca i32, align 4
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %startInd = alloca i32, align 4
  %actualVal = alloca i64, align 8
  store i32 %toFormat, i32* %toFormat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %toFormat.addr, metadata !3152, metadata !DIExpression()), !dbg !3153
  store i16* %toFill, i16** %toFill.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toFill.addr, metadata !3154, metadata !DIExpression()), !dbg !3155
  store i32 %maxChars, i32* %maxChars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxChars.addr, metadata !3156, metadata !DIExpression()), !dbg !3157
  store i32 %radix, i32* %radix.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %radix.addr, metadata !3158, metadata !DIExpression()), !dbg !3159
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !3160, metadata !DIExpression()), !dbg !3161
  call void @llvm.dbg.declare(metadata i32* %startInd, metadata !3162, metadata !DIExpression()), !dbg !3163
  store i32 0, i32* %startInd, align 4, !dbg !3163
  call void @llvm.dbg.declare(metadata i64* %actualVal, metadata !3164, metadata !DIExpression()), !dbg !3165
  %0 = load i32, i32* %toFormat.addr, align 4, !dbg !3166
  %cmp = icmp slt i32 %0, 0, !dbg !3168
  br i1 %cmp, label %if.then, label %if.else, !dbg !3169

if.then:                                          ; preds = %entry
  %1 = load i16*, i16** %toFill.addr, align 8, !dbg !3170
  %arrayidx = getelementptr inbounds i16, i16* %1, i64 0, !dbg !3170
  store i16 45, i16* %arrayidx, align 2, !dbg !3172
  %2 = load i32, i32* %startInd, align 4, !dbg !3173
  %inc = add i32 %2, 1, !dbg !3173
  store i32 %inc, i32* %startInd, align 4, !dbg !3173
  %3 = load i32, i32* %toFormat.addr, align 4, !dbg !3174
  %mul = mul nsw i32 %3, -1, !dbg !3175
  %conv = sext i32 %mul to i64, !dbg !3176
  store i64 %conv, i64* %actualVal, align 8, !dbg !3177
  br label %if.end, !dbg !3178

if.else:                                          ; preds = %entry
  %4 = load i32, i32* %toFormat.addr, align 4, !dbg !3179
  %conv1 = sext i32 %4 to i64, !dbg !3181
  store i64 %conv1, i64* %actualVal, align 8, !dbg !3182
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load i64, i64* %actualVal, align 8, !dbg !3183
  %6 = load i16*, i16** %toFill.addr, align 8, !dbg !3184
  %7 = load i32, i32* %startInd, align 4, !dbg !3185
  %idxprom = zext i32 %7 to i64, !dbg !3184
  %arrayidx2 = getelementptr inbounds i16, i16* %6, i64 %idxprom, !dbg !3184
  %8 = load i32, i32* %maxChars.addr, align 4, !dbg !3186
  %9 = load i32, i32* %radix.addr, align 4, !dbg !3187
  %10 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !3188
  call void @_ZN11xercesc_2_79XMLString9binToTextEmPtjjPNS_13MemoryManagerE(i64 %5, i16* %arrayidx2, i32 %8, i32 %9, %"class.xercesc_2_7::MemoryManager"* %10), !dbg !3189
  ret void, !dbg !3190
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN11xercesc_2_79XMLString9catStringEPtPKt(i16* %target, i16* %src) #3 align 2 !dbg !3191 {
entry:
  %target.addr = alloca i16*, align 8
  %src.addr = alloca i16*, align 8
  %index = alloca i32, align 4
  %pszTmp = alloca i16*, align 8
  store i16* %target, i16** %target.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %target.addr, metadata !3192, metadata !DIExpression()), !dbg !3193
  store i16* %src, i16** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %src.addr, metadata !3194, metadata !DIExpression()), !dbg !3195
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3196, metadata !DIExpression()), !dbg !3197
  %0 = load i16*, i16** %target.addr, align 8, !dbg !3198
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %0), !dbg !3199
  store i32 %call, i32* %index, align 4, !dbg !3197
  call void @llvm.dbg.declare(metadata i16** %pszTmp, metadata !3200, metadata !DIExpression()), !dbg !3201
  %1 = load i16*, i16** %src.addr, align 8, !dbg !3202
  store i16* %1, i16** %pszTmp, align 8, !dbg !3201
  br label %while.cond, !dbg !3203

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i16*, i16** %pszTmp, align 8, !dbg !3204
  %3 = load i16, i16* %2, align 2, !dbg !3205
  %tobool = icmp ne i16 %3, 0, !dbg !3205
  br i1 %tobool, label %while.body, label %while.end, !dbg !3203

while.body:                                       ; preds = %while.cond
  %4 = load i16*, i16** %pszTmp, align 8, !dbg !3206
  %incdec.ptr = getelementptr inbounds i16, i16* %4, i32 1, !dbg !3206
  store i16* %incdec.ptr, i16** %pszTmp, align 8, !dbg !3206
  %5 = load i16, i16* %4, align 2, !dbg !3207
  %6 = load i16*, i16** %target.addr, align 8, !dbg !3208
  %7 = load i32, i32* %index, align 4, !dbg !3209
  %inc = add i32 %7, 1, !dbg !3209
  store i32 %inc, i32* %index, align 4, !dbg !3209
  %idxprom = zext i32 %7 to i64, !dbg !3208
  %arrayidx = getelementptr inbounds i16, i16* %6, i64 %idxprom, !dbg !3208
  store i16 %5, i16* %arrayidx, align 2, !dbg !3210
  br label %while.cond, !dbg !3203, !llvm.loop !3211

while.end:                                        ; preds = %while.cond
  %8 = load i16*, i16** %target.addr, align 8, !dbg !3212
  %9 = load i32, i32* %index, align 4, !dbg !3213
  %idxprom1 = zext i32 %9 to i64, !dbg !3212
  %arrayidx2 = getelementptr inbounds i16, i16* %8, i64 %idxprom1, !dbg !3212
  store i16 0, i16* %arrayidx2, align 2, !dbg !3214
  ret void, !dbg !3215
}

; Function Attrs: noinline uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString14compareIStringEPKtS2_(i16* %str1, i16* %str2) #3 align 2 !dbg !3216 {
entry:
  %str1.addr = alloca i16*, align 8
  %str2.addr = alloca i16*, align 8
  store i16* %str1, i16** %str1.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %str1.addr, metadata !3217, metadata !DIExpression()), !dbg !3218
  store i16* %str2, i16** %str2.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %str2.addr, metadata !3219, metadata !DIExpression()), !dbg !3220
  %0 = load %"class.xercesc_2_7::XMLTransService"*, %"class.xercesc_2_7::XMLTransService"** @_ZN11xercesc_2_716XMLPlatformUtils14fgTransServiceE, align 8, !dbg !3221
  %1 = load i16*, i16** %str1.addr, align 8, !dbg !3222
  %2 = load i16*, i16** %str2.addr, align 8, !dbg !3223
  %3 = bitcast %"class.xercesc_2_7::XMLTransService"* %0 to i32 (%"class.xercesc_2_7::XMLTransService"*, i16*, i16*)***, !dbg !3224
  %vtable = load i32 (%"class.xercesc_2_7::XMLTransService"*, i16*, i16*)**, i32 (%"class.xercesc_2_7::XMLTransService"*, i16*, i16*)*** %3, align 8, !dbg !3224
  %vfn = getelementptr inbounds i32 (%"class.xercesc_2_7::XMLTransService"*, i16*, i16*)*, i32 (%"class.xercesc_2_7::XMLTransService"*, i16*, i16*)** %vtable, i64 2, !dbg !3224
  %4 = load i32 (%"class.xercesc_2_7::XMLTransService"*, i16*, i16*)*, i32 (%"class.xercesc_2_7::XMLTransService"*, i16*, i16*)** %vfn, align 8, !dbg !3224
  %call = call i32 %4(%"class.xercesc_2_7::XMLTransService"* %0, i16* %1, i16* %2), !dbg !3224
  ret i32 %call, !dbg !3225
}

; Function Attrs: noinline uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString19compareIStringASCIIEPKtS2_(i16* %str1, i16* %str2) #3 align 2 !dbg !3226 {
entry:
  %retval = alloca i32, align 4
  %str1.addr = alloca i16*, align 8
  %str2.addr = alloca i16*, align 8
  %psz1 = alloca i16*, align 8
  %psz2 = alloca i16*, align 8
  %ch1 = alloca i16, align 2
  %ch2 = alloca i16, align 2
  store i16* %str1, i16** %str1.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %str1.addr, metadata !3227, metadata !DIExpression()), !dbg !3228
  store i16* %str2, i16** %str2.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %str2.addr, metadata !3229, metadata !DIExpression()), !dbg !3230
  call void @llvm.dbg.declare(metadata i16** %psz1, metadata !3231, metadata !DIExpression()), !dbg !3232
  %0 = load i16*, i16** %str1.addr, align 8, !dbg !3233
  store i16* %0, i16** %psz1, align 8, !dbg !3232
  call void @llvm.dbg.declare(metadata i16** %psz2, metadata !3234, metadata !DIExpression()), !dbg !3235
  %1 = load i16*, i16** %str2.addr, align 8, !dbg !3236
  store i16* %1, i16** %psz2, align 8, !dbg !3235
  %2 = load i16*, i16** %psz1, align 8, !dbg !3237
  %cmp = icmp eq i16* %2, null, !dbg !3239
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3240

lor.lhs.false:                                    ; preds = %entry
  %3 = load i16*, i16** %psz2, align 8, !dbg !3241
  %cmp1 = icmp eq i16* %3, null, !dbg !3242
  br i1 %cmp1, label %if.then, label %if.end8, !dbg !3243

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load i16*, i16** %psz1, align 8, !dbg !3244
  %cmp2 = icmp eq i16* %4, null, !dbg !3247
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !3248

if.then3:                                         ; preds = %if.then
  %5 = load i16*, i16** %psz2, align 8, !dbg !3249
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %5), !dbg !3251
  %sub = sub i32 0, %call, !dbg !3252
  store i32 %sub, i32* %retval, align 4, !dbg !3253
  br label %return, !dbg !3253

if.else:                                          ; preds = %if.then
  %6 = load i16*, i16** %psz2, align 8, !dbg !3254
  %cmp4 = icmp eq i16* %6, null, !dbg !3256
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !3257

if.then5:                                         ; preds = %if.else
  %7 = load i16*, i16** %psz1, align 8, !dbg !3258
  %call6 = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %7), !dbg !3260
  store i32 %call6, i32* %retval, align 4, !dbg !3261
  br label %return, !dbg !3261

if.end:                                           ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end
  br label %if.end8, !dbg !3262

if.end8:                                          ; preds = %if.end7, %lor.lhs.false
  call void @llvm.dbg.declare(metadata i16* %ch1, metadata !3263, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.declare(metadata i16* %ch2, metadata !3265, metadata !DIExpression()), !dbg !3266
  br label %while.body, !dbg !3267

while.body:                                       ; preds = %if.end8, %if.end39
  %8 = load i16*, i16** %psz1, align 8, !dbg !3268
  %9 = load i16, i16* %8, align 2, !dbg !3271
  %conv = zext i16 %9 to i32, !dbg !3271
  %cmp9 = icmp sge i32 %conv, 65, !dbg !3272
  br i1 %cmp9, label %land.lhs.true, label %if.else16, !dbg !3273

land.lhs.true:                                    ; preds = %while.body
  %10 = load i16*, i16** %psz1, align 8, !dbg !3274
  %11 = load i16, i16* %10, align 2, !dbg !3275
  %conv10 = zext i16 %11 to i32, !dbg !3275
  %cmp11 = icmp sle i32 %conv10, 90, !dbg !3276
  br i1 %cmp11, label %if.then12, label %if.else16, !dbg !3277

if.then12:                                        ; preds = %land.lhs.true
  %12 = load i16*, i16** %psz1, align 8, !dbg !3278
  %13 = load i16, i16* %12, align 2, !dbg !3279
  %conv13 = zext i16 %13 to i32, !dbg !3279
  %sub14 = sub nsw i32 %conv13, 65, !dbg !3280
  %add = add nsw i32 %sub14, 97, !dbg !3281
  %conv15 = trunc i32 %add to i16, !dbg !3279
  store i16 %conv15, i16* %ch1, align 2, !dbg !3282
  br label %if.end17, !dbg !3283

if.else16:                                        ; preds = %land.lhs.true, %while.body
  %14 = load i16*, i16** %psz1, align 8, !dbg !3284
  %15 = load i16, i16* %14, align 2, !dbg !3285
  store i16 %15, i16* %ch1, align 2, !dbg !3286
  br label %if.end17

if.end17:                                         ; preds = %if.else16, %if.then12
  %16 = load i16*, i16** %psz2, align 8, !dbg !3287
  %17 = load i16, i16* %16, align 2, !dbg !3289
  %conv18 = zext i16 %17 to i32, !dbg !3289
  %cmp19 = icmp sge i32 %conv18, 65, !dbg !3290
  br i1 %cmp19, label %land.lhs.true20, label %if.else28, !dbg !3291

land.lhs.true20:                                  ; preds = %if.end17
  %18 = load i16*, i16** %psz2, align 8, !dbg !3292
  %19 = load i16, i16* %18, align 2, !dbg !3293
  %conv21 = zext i16 %19 to i32, !dbg !3293
  %cmp22 = icmp sle i32 %conv21, 90, !dbg !3294
  br i1 %cmp22, label %if.then23, label %if.else28, !dbg !3295

if.then23:                                        ; preds = %land.lhs.true20
  %20 = load i16*, i16** %psz2, align 8, !dbg !3296
  %21 = load i16, i16* %20, align 2, !dbg !3297
  %conv24 = zext i16 %21 to i32, !dbg !3297
  %sub25 = sub nsw i32 %conv24, 65, !dbg !3298
  %add26 = add nsw i32 %sub25, 97, !dbg !3299
  %conv27 = trunc i32 %add26 to i16, !dbg !3297
  store i16 %conv27, i16* %ch2, align 2, !dbg !3300
  br label %if.end29, !dbg !3301

if.else28:                                        ; preds = %land.lhs.true20, %if.end17
  %22 = load i16*, i16** %psz2, align 8, !dbg !3302
  %23 = load i16, i16* %22, align 2, !dbg !3303
  store i16 %23, i16* %ch2, align 2, !dbg !3304
  br label %if.end29

if.end29:                                         ; preds = %if.else28, %if.then23
  %24 = load i16, i16* %ch1, align 2, !dbg !3305
  %conv30 = zext i16 %24 to i32, !dbg !3305
  %25 = load i16, i16* %ch2, align 2, !dbg !3307
  %conv31 = zext i16 %25 to i32, !dbg !3307
  %cmp32 = icmp ne i32 %conv30, %conv31, !dbg !3308
  br i1 %cmp32, label %if.then33, label %if.end37, !dbg !3309

if.then33:                                        ; preds = %if.end29
  %26 = load i16, i16* %ch1, align 2, !dbg !3310
  %conv34 = zext i16 %26 to i32, !dbg !3310
  %27 = load i16, i16* %ch2, align 2, !dbg !3311
  %conv35 = zext i16 %27 to i32, !dbg !3311
  %sub36 = sub nsw i32 %conv34, %conv35, !dbg !3312
  store i32 %sub36, i32* %retval, align 4, !dbg !3313
  br label %return, !dbg !3313

if.end37:                                         ; preds = %if.end29
  %28 = load i16, i16* %ch1, align 2, !dbg !3314
  %tobool = icmp ne i16 %28, 0, !dbg !3314
  br i1 %tobool, label %if.end39, label %if.then38, !dbg !3316

if.then38:                                        ; preds = %if.end37
  br label %while.end, !dbg !3317

if.end39:                                         ; preds = %if.end37
  %29 = load i16*, i16** %psz1, align 8, !dbg !3318
  %incdec.ptr = getelementptr inbounds i16, i16* %29, i32 1, !dbg !3318
  store i16* %incdec.ptr, i16** %psz1, align 8, !dbg !3318
  %30 = load i16*, i16** %psz2, align 8, !dbg !3319
  %incdec.ptr40 = getelementptr inbounds i16, i16* %30, i32 1, !dbg !3319
  store i16* %incdec.ptr40, i16** %psz2, align 8, !dbg !3319
  br label %while.body, !dbg !3267, !llvm.loop !3320

while.end:                                        ; preds = %if.then38
  store i32 0, i32* %retval, align 4, !dbg !3322
  br label %return, !dbg !3322

return:                                           ; preds = %while.end, %if.then33, %if.then5, %if.then3
  %31 = load i32, i32* %retval, align 4, !dbg !3323
  ret i32 %31, !dbg !3323
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString14compareNStringEPKtS2_j(i16* %str1, i16* %str2, i32 %maxChars) #1 align 2 !dbg !3324 {
entry:
  %retval = alloca i32, align 4
  %str1.addr = alloca i16*, align 8
  %str2.addr = alloca i16*, align 8
  %maxChars.addr = alloca i32, align 4
  %psz1 = alloca i16*, align 8
  %psz2 = alloca i16*, align 8
  %curCount = alloca i32, align 4
  store i16* %str1, i16** %str1.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %str1.addr, metadata !3325, metadata !DIExpression()), !dbg !3326
  store i16* %str2, i16** %str2.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %str2.addr, metadata !3327, metadata !DIExpression()), !dbg !3328
  store i32 %maxChars, i32* %maxChars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxChars.addr, metadata !3329, metadata !DIExpression()), !dbg !3330
  call void @llvm.dbg.declare(metadata i16** %psz1, metadata !3331, metadata !DIExpression()), !dbg !3332
  %0 = load i16*, i16** %str1.addr, align 8, !dbg !3333
  store i16* %0, i16** %psz1, align 8, !dbg !3332
  call void @llvm.dbg.declare(metadata i16** %psz2, metadata !3334, metadata !DIExpression()), !dbg !3335
  %1 = load i16*, i16** %str2.addr, align 8, !dbg !3336
  store i16* %1, i16** %psz2, align 8, !dbg !3335
  call void @llvm.dbg.declare(metadata i32* %curCount, metadata !3337, metadata !DIExpression()), !dbg !3338
  store i32 0, i32* %curCount, align 4, !dbg !3338
  br label %while.cond, !dbg !3339

while.cond:                                       ; preds = %if.end6, %entry
  %2 = load i32, i32* %curCount, align 4, !dbg !3340
  %3 = load i32, i32* %maxChars.addr, align 4, !dbg !3341
  %cmp = icmp ult i32 %2, %3, !dbg !3342
  br i1 %cmp, label %while.body, label %while.end, !dbg !3339

while.body:                                       ; preds = %while.cond
  %4 = load i16*, i16** %psz1, align 8, !dbg !3343
  %5 = load i16, i16* %4, align 2, !dbg !3346
  %conv = zext i16 %5 to i32, !dbg !3346
  %6 = load i16*, i16** %psz2, align 8, !dbg !3347
  %7 = load i16, i16* %6, align 2, !dbg !3348
  %conv1 = zext i16 %7 to i32, !dbg !3348
  %cmp2 = icmp ne i32 %conv, %conv1, !dbg !3349
  br i1 %cmp2, label %if.then, label %if.end, !dbg !3350

if.then:                                          ; preds = %while.body
  %8 = load i16*, i16** %psz1, align 8, !dbg !3351
  %9 = load i16, i16* %8, align 2, !dbg !3352
  %conv3 = zext i16 %9 to i32, !dbg !3352
  %10 = load i16*, i16** %psz2, align 8, !dbg !3353
  %11 = load i16, i16* %10, align 2, !dbg !3354
  %conv4 = zext i16 %11 to i32, !dbg !3354
  %sub = sub nsw i32 %conv3, %conv4, !dbg !3355
  store i32 %sub, i32* %retval, align 4, !dbg !3356
  br label %return, !dbg !3356

if.end:                                           ; preds = %while.body
  %12 = load i16*, i16** %psz1, align 8, !dbg !3357
  %13 = load i16, i16* %12, align 2, !dbg !3359
  %tobool = icmp ne i16 %13, 0, !dbg !3359
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !3360

if.then5:                                         ; preds = %if.end
  br label %while.end, !dbg !3361

if.end6:                                          ; preds = %if.end
  %14 = load i16*, i16** %psz1, align 8, !dbg !3362
  %incdec.ptr = getelementptr inbounds i16, i16* %14, i32 1, !dbg !3362
  store i16* %incdec.ptr, i16** %psz1, align 8, !dbg !3362
  %15 = load i16*, i16** %psz2, align 8, !dbg !3363
  %incdec.ptr7 = getelementptr inbounds i16, i16* %15, i32 1, !dbg !3363
  store i16* %incdec.ptr7, i16** %psz2, align 8, !dbg !3363
  %16 = load i32, i32* %curCount, align 4, !dbg !3364
  %inc = add i32 %16, 1, !dbg !3364
  store i32 %inc, i32* %curCount, align 4, !dbg !3364
  br label %while.cond, !dbg !3339, !llvm.loop !3365

while.end:                                        ; preds = %if.then5, %while.cond
  store i32 0, i32* %retval, align 4, !dbg !3367
  br label %return, !dbg !3367

return:                                           ; preds = %while.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !3368
  ret i32 %17, !dbg !3368
}

; Function Attrs: noinline uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString15compareNIStringEPKtS2_j(i16* %str1, i16* %str2, i32 %maxChars) #3 align 2 !dbg !3369 {
entry:
  %str1.addr = alloca i16*, align 8
  %str2.addr = alloca i16*, align 8
  %maxChars.addr = alloca i32, align 4
  store i16* %str1, i16** %str1.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %str1.addr, metadata !3370, metadata !DIExpression()), !dbg !3371
  store i16* %str2, i16** %str2.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %str2.addr, metadata !3372, metadata !DIExpression()), !dbg !3373
  store i32 %maxChars, i32* %maxChars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxChars.addr, metadata !3374, metadata !DIExpression()), !dbg !3375
  %0 = load %"class.xercesc_2_7::XMLTransService"*, %"class.xercesc_2_7::XMLTransService"** @_ZN11xercesc_2_716XMLPlatformUtils14fgTransServiceE, align 8, !dbg !3376
  %1 = load i16*, i16** %str1.addr, align 8, !dbg !3377
  %2 = load i16*, i16** %str2.addr, align 8, !dbg !3378
  %3 = load i32, i32* %maxChars.addr, align 4, !dbg !3379
  %4 = bitcast %"class.xercesc_2_7::XMLTransService"* %0 to i32 (%"class.xercesc_2_7::XMLTransService"*, i16*, i16*, i32)***, !dbg !3380
  %vtable = load i32 (%"class.xercesc_2_7::XMLTransService"*, i16*, i16*, i32)**, i32 (%"class.xercesc_2_7::XMLTransService"*, i16*, i16*, i32)*** %4, align 8, !dbg !3380
  %vfn = getelementptr inbounds i32 (%"class.xercesc_2_7::XMLTransService"*, i16*, i16*, i32)*, i32 (%"class.xercesc_2_7::XMLTransService"*, i16*, i16*, i32)** %vtable, i64 3, !dbg !3380
  %5 = load i32 (%"class.xercesc_2_7::XMLTransService"*, i16*, i16*, i32)*, i32 (%"class.xercesc_2_7::XMLTransService"*, i16*, i16*, i32)** %vfn, align 8, !dbg !3380
  %call = call i32 %5(%"class.xercesc_2_7::XMLTransService"* %0, i16* %1, i16* %2, i32 %3), !dbg !3380
  ret i32 %call, !dbg !3381
}

; Function Attrs: noinline uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString13compareStringEPKtS2_(i16* %str1, i16* %str2) #3 align 2 !dbg !3382 {
entry:
  %retval = alloca i32, align 4
  %str1.addr = alloca i16*, align 8
  %str2.addr = alloca i16*, align 8
  %psz1 = alloca i16*, align 8
  %psz2 = alloca i16*, align 8
  store i16* %str1, i16** %str1.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %str1.addr, metadata !3383, metadata !DIExpression()), !dbg !3384
  store i16* %str2, i16** %str2.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %str2.addr, metadata !3385, metadata !DIExpression()), !dbg !3386
  call void @llvm.dbg.declare(metadata i16** %psz1, metadata !3387, metadata !DIExpression()), !dbg !3388
  %0 = load i16*, i16** %str1.addr, align 8, !dbg !3389
  store i16* %0, i16** %psz1, align 8, !dbg !3388
  call void @llvm.dbg.declare(metadata i16** %psz2, metadata !3390, metadata !DIExpression()), !dbg !3391
  %1 = load i16*, i16** %str2.addr, align 8, !dbg !3392
  store i16* %1, i16** %psz2, align 8, !dbg !3391
  %2 = load i16*, i16** %psz1, align 8, !dbg !3393
  %cmp = icmp eq i16* %2, null, !dbg !3395
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3396

lor.lhs.false:                                    ; preds = %entry
  %3 = load i16*, i16** %psz2, align 8, !dbg !3397
  %cmp1 = icmp eq i16* %3, null, !dbg !3398
  br i1 %cmp1, label %if.then, label %if.end8, !dbg !3399

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load i16*, i16** %psz1, align 8, !dbg !3400
  %cmp2 = icmp eq i16* %4, null, !dbg !3403
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !3404

if.then3:                                         ; preds = %if.then
  %5 = load i16*, i16** %psz2, align 8, !dbg !3405
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %5), !dbg !3407
  %sub = sub i32 0, %call, !dbg !3408
  store i32 %sub, i32* %retval, align 4, !dbg !3409
  br label %return, !dbg !3409

if.else:                                          ; preds = %if.then
  %6 = load i16*, i16** %psz2, align 8, !dbg !3410
  %cmp4 = icmp eq i16* %6, null, !dbg !3412
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !3413

if.then5:                                         ; preds = %if.else
  %7 = load i16*, i16** %psz1, align 8, !dbg !3414
  %call6 = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %7), !dbg !3416
  store i32 %call6, i32* %retval, align 4, !dbg !3417
  br label %return, !dbg !3417

if.end:                                           ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end
  br label %if.end8, !dbg !3418

if.end8:                                          ; preds = %if.end7, %lor.lhs.false
  br label %while.body, !dbg !3419

while.body:                                       ; preds = %if.end8, %if.end17
  %8 = load i16*, i16** %psz1, align 8, !dbg !3420
  %9 = load i16, i16* %8, align 2, !dbg !3423
  %conv = zext i16 %9 to i32, !dbg !3423
  %10 = load i16*, i16** %psz2, align 8, !dbg !3424
  %11 = load i16, i16* %10, align 2, !dbg !3425
  %conv9 = zext i16 %11 to i32, !dbg !3425
  %cmp10 = icmp ne i32 %conv, %conv9, !dbg !3426
  br i1 %cmp10, label %if.then11, label %if.end15, !dbg !3427

if.then11:                                        ; preds = %while.body
  %12 = load i16*, i16** %psz1, align 8, !dbg !3428
  %13 = load i16, i16* %12, align 2, !dbg !3429
  %conv12 = zext i16 %13 to i32, !dbg !3429
  %14 = load i16*, i16** %psz2, align 8, !dbg !3430
  %15 = load i16, i16* %14, align 2, !dbg !3431
  %conv13 = zext i16 %15 to i32, !dbg !3431
  %sub14 = sub nsw i32 %conv12, %conv13, !dbg !3432
  store i32 %sub14, i32* %retval, align 4, !dbg !3433
  br label %return, !dbg !3433

if.end15:                                         ; preds = %while.body
  %16 = load i16*, i16** %psz1, align 8, !dbg !3434
  %17 = load i16, i16* %16, align 2, !dbg !3436
  %tobool = icmp ne i16 %17, 0, !dbg !3436
  br i1 %tobool, label %if.end17, label %if.then16, !dbg !3437

if.then16:                                        ; preds = %if.end15
  br label %while.end, !dbg !3438

if.end17:                                         ; preds = %if.end15
  %18 = load i16*, i16** %psz1, align 8, !dbg !3439
  %incdec.ptr = getelementptr inbounds i16, i16* %18, i32 1, !dbg !3439
  store i16* %incdec.ptr, i16** %psz1, align 8, !dbg !3439
  %19 = load i16*, i16** %psz2, align 8, !dbg !3440
  %incdec.ptr18 = getelementptr inbounds i16, i16* %19, i32 1, !dbg !3440
  store i16* %incdec.ptr18, i16** %psz2, align 8, !dbg !3440
  br label %while.body, !dbg !3419, !llvm.loop !3441

while.end:                                        ; preds = %if.then16
  store i32 0, i32* %retval, align 4, !dbg !3443
  br label %return, !dbg !3443

return:                                           ; preds = %while.end, %if.then11, %if.then5, %if.then3
  %20 = load i32, i32* %retval, align 4, !dbg !3444
  ret i32 %20, !dbg !3444
}

; Function Attrs: noinline uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString13regionMatchesEPKtiS2_ij(i16* %str1, i32 %offset1, i16* %str2, i32 %offset2, i32 %charCount) #3 align 2 !dbg !3445 {
entry:
  %retval = alloca i1, align 1
  %str1.addr = alloca i16*, align 8
  %offset1.addr = alloca i32, align 4
  %str2.addr = alloca i16*, align 8
  %offset2.addr = alloca i32, align 4
  %charCount.addr = alloca i32, align 4
  store i16* %str1, i16** %str1.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %str1.addr, metadata !3446, metadata !DIExpression()), !dbg !3447
  store i32 %offset1, i32* %offset1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset1.addr, metadata !3448, metadata !DIExpression()), !dbg !3449
  store i16* %str2, i16** %str2.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %str2.addr, metadata !3450, metadata !DIExpression()), !dbg !3451
  store i32 %offset2, i32* %offset2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset2.addr, metadata !3452, metadata !DIExpression()), !dbg !3453
  store i32 %charCount, i32* %charCount.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %charCount.addr, metadata !3454, metadata !DIExpression()), !dbg !3455
  %0 = load i16*, i16** %str1.addr, align 8, !dbg !3456
  %1 = load i32, i32* %offset1.addr, align 4, !dbg !3458
  %2 = load i16*, i16** %str2.addr, align 8, !dbg !3459
  %3 = load i32, i32* %offset2.addr, align 4, !dbg !3460
  %4 = load i32, i32* %charCount.addr, align 4, !dbg !3461
  %call = call zeroext i1 @_ZN11xercesc_2_79XMLString14validateRegionEPKtiS2_ij(i16* %0, i32 %1, i16* %2, i32 %3, i32 %4), !dbg !3462
  br i1 %call, label %if.end, label %if.then, !dbg !3463

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !3464
  br label %return, !dbg !3464

if.end:                                           ; preds = %entry
  %5 = load i16*, i16** %str1.addr, align 8, !dbg !3465
  %6 = load i32, i32* %offset1.addr, align 4, !dbg !3467
  %idx.ext = sext i32 %6 to i64, !dbg !3468
  %add.ptr = getelementptr inbounds i16, i16* %5, i64 %idx.ext, !dbg !3468
  %7 = load i16*, i16** %str2.addr, align 8, !dbg !3469
  %8 = load i32, i32* %offset2.addr, align 4, !dbg !3470
  %idx.ext1 = sext i32 %8 to i64, !dbg !3471
  %add.ptr2 = getelementptr inbounds i16, i16* %7, i64 %idx.ext1, !dbg !3471
  %9 = load i32, i32* %charCount.addr, align 4, !dbg !3472
  %call3 = call i32 @_ZN11xercesc_2_79XMLString14compareNStringEPKtS2_j(i16* %add.ptr, i16* %add.ptr2, i32 %9), !dbg !3473
  %cmp = icmp ne i32 %call3, 0, !dbg !3474
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !3475

if.then4:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !3476
  br label %return, !dbg !3476

if.end5:                                          ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !3477
  br label %return, !dbg !3477

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %10 = load i1, i1* %retval, align 1, !dbg !3478
  ret i1 %10, !dbg !3478
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZN11xercesc_2_79XMLString14validateRegionEPKtiS2_ij(i16* %str1, i32 %offset1, i16* %str2, i32 %offset2, i32 %charCount) #1 comdat align 2 !dbg !3479 {
entry:
  %retval = alloca i1, align 1
  %str1.addr = alloca i16*, align 8
  %offset1.addr = alloca i32, align 4
  %str2.addr = alloca i16*, align 8
  %offset2.addr = alloca i32, align 4
  %charCount.addr = alloca i32, align 4
  store i16* %str1, i16** %str1.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %str1.addr, metadata !3480, metadata !DIExpression()), !dbg !3481
  store i32 %offset1, i32* %offset1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset1.addr, metadata !3482, metadata !DIExpression()), !dbg !3483
  store i16* %str2, i16** %str2.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %str2.addr, metadata !3484, metadata !DIExpression()), !dbg !3485
  store i32 %offset2, i32* %offset2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset2.addr, metadata !3486, metadata !DIExpression()), !dbg !3487
  store i32 %charCount, i32* %charCount.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %charCount.addr, metadata !3488, metadata !DIExpression()), !dbg !3489
  %0 = load i32, i32* %offset1.addr, align 4, !dbg !3490
  %cmp = icmp slt i32 %0, 0, !dbg !3492
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3493

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %offset2.addr, align 4, !dbg !3494
  %cmp1 = icmp slt i32 %1, 0, !dbg !3495
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !3496

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %offset1.addr, align 4, !dbg !3497
  %3 = load i32, i32* %charCount.addr, align 4, !dbg !3498
  %add = add i32 %2, %3, !dbg !3499
  %4 = load i16*, i16** %str1.addr, align 8, !dbg !3500
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %4), !dbg !3501
  %cmp3 = icmp ugt i32 %add, %call, !dbg !3502
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !3503

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %5 = load i32, i32* %offset2.addr, align 4, !dbg !3504
  %6 = load i32, i32* %charCount.addr, align 4, !dbg !3505
  %add5 = add i32 %5, %6, !dbg !3506
  %7 = load i16*, i16** %str2.addr, align 8, !dbg !3507
  %call6 = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %7), !dbg !3508
  %cmp7 = icmp ugt i32 %add5, %call6, !dbg !3509
  br i1 %cmp7, label %if.then, label %if.end, !dbg !3510

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !3511
  br label %return, !dbg !3511

if.end:                                           ; preds = %lor.lhs.false4
  store i1 true, i1* %retval, align 1, !dbg !3512
  br label %return, !dbg !3512

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !3513
  ret i1 %8, !dbg !3513
}

; Function Attrs: noinline uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString14regionIMatchesEPKtiS2_ij(i16* %str1, i32 %offset1, i16* %str2, i32 %offset2, i32 %charCount) #3 align 2 !dbg !3514 {
entry:
  %retval = alloca i1, align 1
  %str1.addr = alloca i16*, align 8
  %offset1.addr = alloca i32, align 4
  %str2.addr = alloca i16*, align 8
  %offset2.addr = alloca i32, align 4
  %charCount.addr = alloca i32, align 4
  store i16* %str1, i16** %str1.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %str1.addr, metadata !3515, metadata !DIExpression()), !dbg !3516
  store i32 %offset1, i32* %offset1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset1.addr, metadata !3517, metadata !DIExpression()), !dbg !3518
  store i16* %str2, i16** %str2.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %str2.addr, metadata !3519, metadata !DIExpression()), !dbg !3520
  store i32 %offset2, i32* %offset2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset2.addr, metadata !3521, metadata !DIExpression()), !dbg !3522
  store i32 %charCount, i32* %charCount.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %charCount.addr, metadata !3523, metadata !DIExpression()), !dbg !3524
  %0 = load i16*, i16** %str1.addr, align 8, !dbg !3525
  %1 = load i32, i32* %offset1.addr, align 4, !dbg !3527
  %2 = load i16*, i16** %str2.addr, align 8, !dbg !3528
  %3 = load i32, i32* %offset2.addr, align 4, !dbg !3529
  %4 = load i32, i32* %charCount.addr, align 4, !dbg !3530
  %call = call zeroext i1 @_ZN11xercesc_2_79XMLString14validateRegionEPKtiS2_ij(i16* %0, i32 %1, i16* %2, i32 %3, i32 %4), !dbg !3531
  br i1 %call, label %if.end, label %if.then, !dbg !3532

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !3533
  br label %return, !dbg !3533

if.end:                                           ; preds = %entry
  %5 = load i16*, i16** %str1.addr, align 8, !dbg !3534
  %6 = load i32, i32* %offset1.addr, align 4, !dbg !3536
  %idx.ext = sext i32 %6 to i64, !dbg !3537
  %add.ptr = getelementptr inbounds i16, i16* %5, i64 %idx.ext, !dbg !3537
  %7 = load i16*, i16** %str2.addr, align 8, !dbg !3538
  %8 = load i32, i32* %offset2.addr, align 4, !dbg !3539
  %idx.ext1 = sext i32 %8 to i64, !dbg !3540
  %add.ptr2 = getelementptr inbounds i16, i16* %7, i64 %idx.ext1, !dbg !3540
  %9 = load i32, i32* %charCount.addr, align 4, !dbg !3541
  %call3 = call i32 @_ZN11xercesc_2_79XMLString15compareNIStringEPKtS2_j(i16* %add.ptr, i16* %add.ptr2, i32 %9), !dbg !3542
  %cmp = icmp ne i32 %call3, 0, !dbg !3543
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !3544

if.then4:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !3545
  br label %return, !dbg !3545

if.end5:                                          ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !3546
  br label %return, !dbg !3546

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %10 = load i1, i1* %retval, align 1, !dbg !3547
  ret i1 %10, !dbg !3547
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN11xercesc_2_79XMLString10copyStringEPtPKt(i16* %target, i16* %src) #1 align 2 !dbg !3548 {
entry:
  %target.addr = alloca i16*, align 8
  %src.addr = alloca i16*, align 8
  %pszOut = alloca i16*, align 8
  %pszIn = alloca i16*, align 8
  store i16* %target, i16** %target.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %target.addr, metadata !3549, metadata !DIExpression()), !dbg !3550
  store i16* %src, i16** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %src.addr, metadata !3551, metadata !DIExpression()), !dbg !3552
  %0 = load i16*, i16** %src.addr, align 8, !dbg !3553
  %tobool = icmp ne i16* %0, null, !dbg !3553
  br i1 %tobool, label %if.end, label %if.then, !dbg !3555

if.then:                                          ; preds = %entry
  %1 = load i16*, i16** %target.addr, align 8, !dbg !3556
  store i16 0, i16* %1, align 2, !dbg !3558
  br label %return, !dbg !3559

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i16** %pszOut, metadata !3560, metadata !DIExpression()), !dbg !3561
  %2 = load i16*, i16** %target.addr, align 8, !dbg !3562
  store i16* %2, i16** %pszOut, align 8, !dbg !3561
  call void @llvm.dbg.declare(metadata i16** %pszIn, metadata !3563, metadata !DIExpression()), !dbg !3564
  %3 = load i16*, i16** %src.addr, align 8, !dbg !3565
  store i16* %3, i16** %pszIn, align 8, !dbg !3564
  br label %while.cond, !dbg !3566

while.cond:                                       ; preds = %while.body, %if.end
  %4 = load i16*, i16** %pszIn, align 8, !dbg !3567
  %5 = load i16, i16* %4, align 2, !dbg !3568
  %tobool1 = icmp ne i16 %5, 0, !dbg !3568
  br i1 %tobool1, label %while.body, label %while.end, !dbg !3566

while.body:                                       ; preds = %while.cond
  %6 = load i16*, i16** %pszIn, align 8, !dbg !3569
  %incdec.ptr = getelementptr inbounds i16, i16* %6, i32 1, !dbg !3569
  store i16* %incdec.ptr, i16** %pszIn, align 8, !dbg !3569
  %7 = load i16, i16* %6, align 2, !dbg !3570
  %8 = load i16*, i16** %pszOut, align 8, !dbg !3571
  %incdec.ptr2 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !3571
  store i16* %incdec.ptr2, i16** %pszOut, align 8, !dbg !3571
  store i16 %7, i16* %8, align 2, !dbg !3572
  br label %while.cond, !dbg !3566, !llvm.loop !3573

while.end:                                        ; preds = %while.cond
  %9 = load i16*, i16** %pszOut, align 8, !dbg !3574
  store i16 0, i16* %9, align 2, !dbg !3575
  br label %return, !dbg !3576

return:                                           ; preds = %while.end, %if.then
  ret void, !dbg !3576
}

; Function Attrs: noinline nounwind uwtable
define dso_local i16* @_ZN11xercesc_2_79XMLString7findAnyEPKtS2_(i16* %toSearch, i16* %searchList) #1 align 2 !dbg !3577 {
entry:
  %retval = alloca i16*, align 8
  %toSearch.addr = alloca i16*, align 8
  %searchList.addr = alloca i16*, align 8
  %srcPtr = alloca i16*, align 8
  %listPtr = alloca i16*, align 8
  %curCh = alloca i16, align 2
  store i16* %toSearch, i16** %toSearch.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toSearch.addr, metadata !3578, metadata !DIExpression()), !dbg !3579
  store i16* %searchList, i16** %searchList.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %searchList.addr, metadata !3580, metadata !DIExpression()), !dbg !3581
  call void @llvm.dbg.declare(metadata i16** %srcPtr, metadata !3582, metadata !DIExpression()), !dbg !3583
  %0 = load i16*, i16** %toSearch.addr, align 8, !dbg !3584
  store i16* %0, i16** %srcPtr, align 8, !dbg !3583
  br label %while.cond, !dbg !3585

while.cond:                                       ; preds = %while.end, %entry
  %1 = load i16*, i16** %srcPtr, align 8, !dbg !3586
  %2 = load i16, i16* %1, align 2, !dbg !3587
  %tobool = icmp ne i16 %2, 0, !dbg !3587
  br i1 %tobool, label %while.body, label %while.end6, !dbg !3585

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i16** %listPtr, metadata !3588, metadata !DIExpression()), !dbg !3590
  %3 = load i16*, i16** %searchList.addr, align 8, !dbg !3591
  store i16* %3, i16** %listPtr, align 8, !dbg !3590
  call void @llvm.dbg.declare(metadata i16* %curCh, metadata !3592, metadata !DIExpression()), !dbg !3593
  %4 = load i16*, i16** %srcPtr, align 8, !dbg !3594
  %5 = load i16, i16* %4, align 2, !dbg !3595
  store i16 %5, i16* %curCh, align 2, !dbg !3593
  br label %while.cond1, !dbg !3596

while.cond1:                                      ; preds = %if.end, %while.body
  %6 = load i16*, i16** %listPtr, align 8, !dbg !3597
  %7 = load i16, i16* %6, align 2, !dbg !3598
  %tobool2 = icmp ne i16 %7, 0, !dbg !3598
  br i1 %tobool2, label %while.body3, label %while.end, !dbg !3596

while.body3:                                      ; preds = %while.cond1
  %8 = load i16, i16* %curCh, align 2, !dbg !3599
  %conv = zext i16 %8 to i32, !dbg !3599
  %9 = load i16*, i16** %listPtr, align 8, !dbg !3602
  %incdec.ptr = getelementptr inbounds i16, i16* %9, i32 1, !dbg !3602
  store i16* %incdec.ptr, i16** %listPtr, align 8, !dbg !3602
  %10 = load i16, i16* %9, align 2, !dbg !3603
  %conv4 = zext i16 %10 to i32, !dbg !3603
  %cmp = icmp eq i32 %conv, %conv4, !dbg !3604
  br i1 %cmp, label %if.then, label %if.end, !dbg !3605

if.then:                                          ; preds = %while.body3
  %11 = load i16*, i16** %srcPtr, align 8, !dbg !3606
  store i16* %11, i16** %retval, align 8, !dbg !3607
  br label %return, !dbg !3607

if.end:                                           ; preds = %while.body3
  br label %while.cond1, !dbg !3596, !llvm.loop !3608

while.end:                                        ; preds = %while.cond1
  %12 = load i16*, i16** %srcPtr, align 8, !dbg !3610
  %incdec.ptr5 = getelementptr inbounds i16, i16* %12, i32 1, !dbg !3610
  store i16* %incdec.ptr5, i16** %srcPtr, align 8, !dbg !3610
  br label %while.cond, !dbg !3585, !llvm.loop !3611

while.end6:                                       ; preds = %while.cond
  store i16* null, i16** %retval, align 8, !dbg !3613
  br label %return, !dbg !3613

return:                                           ; preds = %while.end6, %if.then
  %13 = load i16*, i16** %retval, align 8, !dbg !3614
  ret i16* %13, !dbg !3614
}

; Function Attrs: noinline nounwind uwtable
define dso_local i16* @_ZN11xercesc_2_79XMLString7findAnyEPtPKt(i16* %toSearch, i16* %searchList) #1 align 2 !dbg !3615 {
entry:
  %retval = alloca i16*, align 8
  %toSearch.addr = alloca i16*, align 8
  %searchList.addr = alloca i16*, align 8
  %srcPtr = alloca i16*, align 8
  %listPtr = alloca i16*, align 8
  %curCh = alloca i16, align 2
  store i16* %toSearch, i16** %toSearch.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toSearch.addr, metadata !3616, metadata !DIExpression()), !dbg !3617
  store i16* %searchList, i16** %searchList.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %searchList.addr, metadata !3618, metadata !DIExpression()), !dbg !3619
  call void @llvm.dbg.declare(metadata i16** %srcPtr, metadata !3620, metadata !DIExpression()), !dbg !3621
  %0 = load i16*, i16** %toSearch.addr, align 8, !dbg !3622
  store i16* %0, i16** %srcPtr, align 8, !dbg !3621
  br label %while.cond, !dbg !3623

while.cond:                                       ; preds = %while.end, %entry
  %1 = load i16*, i16** %srcPtr, align 8, !dbg !3624
  %2 = load i16, i16* %1, align 2, !dbg !3625
  %tobool = icmp ne i16 %2, 0, !dbg !3625
  br i1 %tobool, label %while.body, label %while.end6, !dbg !3623

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i16** %listPtr, metadata !3626, metadata !DIExpression()), !dbg !3628
  %3 = load i16*, i16** %searchList.addr, align 8, !dbg !3629
  store i16* %3, i16** %listPtr, align 8, !dbg !3628
  call void @llvm.dbg.declare(metadata i16* %curCh, metadata !3630, metadata !DIExpression()), !dbg !3631
  %4 = load i16*, i16** %srcPtr, align 8, !dbg !3632
  %5 = load i16, i16* %4, align 2, !dbg !3633
  store i16 %5, i16* %curCh, align 2, !dbg !3631
  br label %while.cond1, !dbg !3634

while.cond1:                                      ; preds = %if.end, %while.body
  %6 = load i16*, i16** %listPtr, align 8, !dbg !3635
  %7 = load i16, i16* %6, align 2, !dbg !3636
  %tobool2 = icmp ne i16 %7, 0, !dbg !3636
  br i1 %tobool2, label %while.body3, label %while.end, !dbg !3634

while.body3:                                      ; preds = %while.cond1
  %8 = load i16, i16* %curCh, align 2, !dbg !3637
  %conv = zext i16 %8 to i32, !dbg !3637
  %9 = load i16*, i16** %listPtr, align 8, !dbg !3640
  %incdec.ptr = getelementptr inbounds i16, i16* %9, i32 1, !dbg !3640
  store i16* %incdec.ptr, i16** %listPtr, align 8, !dbg !3640
  %10 = load i16, i16* %9, align 2, !dbg !3641
  %conv4 = zext i16 %10 to i32, !dbg !3641
  %cmp = icmp eq i32 %conv, %conv4, !dbg !3642
  br i1 %cmp, label %if.then, label %if.end, !dbg !3643

if.then:                                          ; preds = %while.body3
  %11 = load i16*, i16** %srcPtr, align 8, !dbg !3644
  store i16* %11, i16** %retval, align 8, !dbg !3645
  br label %return, !dbg !3645

if.end:                                           ; preds = %while.body3
  br label %while.cond1, !dbg !3634, !llvm.loop !3646

while.end:                                        ; preds = %while.cond1
  %12 = load i16*, i16** %srcPtr, align 8, !dbg !3648
  %incdec.ptr5 = getelementptr inbounds i16, i16* %12, i32 1, !dbg !3648
  store i16* %incdec.ptr5, i16** %srcPtr, align 8, !dbg !3648
  br label %while.cond, !dbg !3623, !llvm.loop !3649

while.end6:                                       ; preds = %while.cond
  store i16* null, i16** %retval, align 8, !dbg !3651
  br label %return, !dbg !3651

return:                                           ; preds = %while.end6, %if.then
  %13 = load i16*, i16** %retval, align 8, !dbg !3652
  ret i16* %13, !dbg !3652
}

; Function Attrs: noinline uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString12patternMatchEPKtS2_(i16* %toSearch, i16* %pattern) #3 align 2 !dbg !3653 {
entry:
  %retval = alloca i32, align 4
  %toSearch.addr = alloca i16*, align 8
  %pattern.addr = alloca i16*, align 8
  %patnLen = alloca i32, align 4
  %srcPtr = alloca i16*, align 8
  %patnStart = alloca i16*, align 8
  %patnIndex = alloca i32, align 4
  store i16* %toSearch, i16** %toSearch.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toSearch.addr, metadata !3654, metadata !DIExpression()), !dbg !3655
  store i16* %pattern, i16** %pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pattern.addr, metadata !3656, metadata !DIExpression()), !dbg !3657
  %0 = load i16*, i16** %toSearch.addr, align 8, !dbg !3658
  %tobool = icmp ne i16* %0, null, !dbg !3658
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !3660

lor.lhs.false:                                    ; preds = %entry
  %1 = load i16*, i16** %toSearch.addr, align 8, !dbg !3661
  %2 = load i16, i16* %1, align 2, !dbg !3662
  %tobool1 = icmp ne i16 %2, 0, !dbg !3662
  br i1 %tobool1, label %if.end, label %if.then, !dbg !3663

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !3664
  br label %return, !dbg !3664

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %patnLen, metadata !3665, metadata !DIExpression()), !dbg !3666
  %3 = load i16*, i16** %pattern.addr, align 8, !dbg !3667
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %3), !dbg !3668
  store i32 %call, i32* %patnLen, align 4, !dbg !3666
  %4 = load i32, i32* %patnLen, align 4, !dbg !3669
  %tobool2 = icmp ne i32 %4, 0, !dbg !3669
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !3671

if.then3:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !3672
  br label %return, !dbg !3672

if.end4:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16** %srcPtr, metadata !3673, metadata !DIExpression()), !dbg !3674
  %5 = load i16*, i16** %toSearch.addr, align 8, !dbg !3675
  store i16* %5, i16** %srcPtr, align 8, !dbg !3674
  call void @llvm.dbg.declare(metadata i16** %patnStart, metadata !3676, metadata !DIExpression()), !dbg !3677
  %6 = load i16*, i16** %toSearch.addr, align 8, !dbg !3678
  store i16* %6, i16** %patnStart, align 8, !dbg !3677
  call void @llvm.dbg.declare(metadata i32* %patnIndex, metadata !3679, metadata !DIExpression()), !dbg !3680
  store i32 0, i32* %patnIndex, align 4, !dbg !3680
  br label %while.cond, !dbg !3681

while.cond:                                       ; preds = %if.end13, %if.end4
  %7 = load i16*, i16** %srcPtr, align 8, !dbg !3682
  %8 = load i16, i16* %7, align 2, !dbg !3683
  %tobool5 = icmp ne i16 %8, 0, !dbg !3683
  br i1 %tobool5, label %while.body, label %while.end, !dbg !3681

while.body:                                       ; preds = %while.cond
  %9 = load i16*, i16** %srcPtr, align 8, !dbg !3684
  %incdec.ptr = getelementptr inbounds i16, i16* %9, i32 1, !dbg !3684
  store i16* %incdec.ptr, i16** %srcPtr, align 8, !dbg !3684
  %10 = load i16, i16* %9, align 2, !dbg !3687
  %conv = zext i16 %10 to i32, !dbg !3687
  %11 = load i16*, i16** %pattern.addr, align 8, !dbg !3688
  %12 = load i32, i32* %patnIndex, align 4, !dbg !3689
  %idxprom = sext i32 %12 to i64, !dbg !3688
  %arrayidx = getelementptr inbounds i16, i16* %11, i64 %idxprom, !dbg !3688
  %13 = load i16, i16* %arrayidx, align 2, !dbg !3688
  %conv6 = zext i16 %13 to i32, !dbg !3688
  %cmp = icmp eq i32 %conv, %conv6, !dbg !3690
  br i1 %cmp, label %if.else, label %if.then7, !dbg !3691

if.then7:                                         ; preds = %while.body
  store i32 0, i32* %patnIndex, align 4, !dbg !3692
  %14 = load i16*, i16** %patnStart, align 8, !dbg !3694
  %incdec.ptr8 = getelementptr inbounds i16, i16* %14, i32 1, !dbg !3694
  store i16* %incdec.ptr8, i16** %patnStart, align 8, !dbg !3694
  store i16* %incdec.ptr8, i16** %srcPtr, align 8, !dbg !3695
  br label %if.end13, !dbg !3696

if.else:                                          ; preds = %while.body
  %15 = load i32, i32* %patnIndex, align 4, !dbg !3697
  %inc = add nsw i32 %15, 1, !dbg !3697
  store i32 %inc, i32* %patnIndex, align 4, !dbg !3697
  %16 = load i32, i32* %patnLen, align 4, !dbg !3700
  %cmp9 = icmp eq i32 %inc, %16, !dbg !3701
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !3702

if.then10:                                        ; preds = %if.else
  %17 = load i16*, i16** %srcPtr, align 8, !dbg !3703
  %18 = load i32, i32* %patnLen, align 4, !dbg !3704
  %idx.ext = sext i32 %18 to i64, !dbg !3705
  %idx.neg = sub i64 0, %idx.ext, !dbg !3705
  %add.ptr = getelementptr inbounds i16, i16* %17, i64 %idx.neg, !dbg !3705
  %19 = load i16*, i16** %toSearch.addr, align 8, !dbg !3706
  %sub.ptr.lhs.cast = ptrtoint i16* %add.ptr to i64, !dbg !3707
  %sub.ptr.rhs.cast = ptrtoint i16* %19 to i64, !dbg !3707
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3707
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !3707
  %conv11 = trunc i64 %sub.ptr.div to i32, !dbg !3708
  store i32 %conv11, i32* %retval, align 4, !dbg !3709
  br label %return, !dbg !3709

if.end12:                                         ; preds = %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then7
  br label %while.cond, !dbg !3681, !llvm.loop !3710

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !3712
  br label %return, !dbg !3712

return:                                           ; preds = %while.end, %if.then10, %if.then3, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !3713
  ret i32 %20, !dbg !3713
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString5hashNEPKtjjPNS_13MemoryManagerE(i16* %tohash, i32 %n, i32 %hashModulus, %"class.xercesc_2_7::MemoryManager"* %0) #1 align 2 !dbg !3714 {
entry:
  %tohash.addr = alloca i16*, align 8
  %n.addr = alloca i32, align 4
  %hashModulus.addr = alloca i32, align 4
  %.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %hashVal = alloca i32, align 4
  %curCh = alloca i16*, align 8
  %i = alloca i32, align 4
  %top = alloca i32, align 4
  store i16* %tohash, i16** %tohash.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %tohash.addr, metadata !3715, metadata !DIExpression()), !dbg !3716
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3717, metadata !DIExpression()), !dbg !3718
  store i32 %hashModulus, i32* %hashModulus.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hashModulus.addr, metadata !3719, metadata !DIExpression()), !dbg !3720
  store %"class.xercesc_2_7::MemoryManager"* %0, %"class.xercesc_2_7::MemoryManager"** %.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %.addr, metadata !3721, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.declare(metadata i32* %hashVal, metadata !3723, metadata !DIExpression()), !dbg !3724
  store i32 0, i32* %hashVal, align 4, !dbg !3724
  %1 = load i16*, i16** %tohash.addr, align 8, !dbg !3725
  %tobool = icmp ne i16* %1, null, !dbg !3725
  br i1 %tobool, label %if.then, label %if.end, !dbg !3727

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i16** %curCh, metadata !3728, metadata !DIExpression()), !dbg !3730
  %2 = load i16*, i16** %tohash.addr, align 8, !dbg !3731
  store i16* %2, i16** %curCh, align 8, !dbg !3730
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3732, metadata !DIExpression()), !dbg !3733
  %3 = load i32, i32* %n.addr, align 4, !dbg !3734
  store i32 %3, i32* %i, align 4, !dbg !3733
  br label %while.cond, !dbg !3735

while.cond:                                       ; preds = %while.body, %if.then
  %4 = load i32, i32* %i, align 4, !dbg !3736
  %dec = add nsw i32 %4, -1, !dbg !3736
  store i32 %dec, i32* %i, align 4, !dbg !3736
  %tobool1 = icmp ne i32 %4, 0, !dbg !3737
  br i1 %tobool1, label %while.body, label %while.end, !dbg !3735

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %top, metadata !3738, metadata !DIExpression()), !dbg !3740
  %5 = load i32, i32* %hashVal, align 4, !dbg !3741
  %shr = lshr i32 %5, 24, !dbg !3742
  store i32 %shr, i32* %top, align 4, !dbg !3740
  %6 = load i32, i32* %hashVal, align 4, !dbg !3743
  %mul = mul i32 %6, 37, !dbg !3744
  %7 = load i32, i32* %top, align 4, !dbg !3745
  %add = add i32 %mul, %7, !dbg !3746
  %8 = load i16*, i16** %curCh, align 8, !dbg !3747
  %9 = load i16, i16* %8, align 2, !dbg !3748
  %conv = zext i16 %9 to i32, !dbg !3749
  %add2 = add i32 %add, %conv, !dbg !3750
  %10 = load i32, i32* %hashVal, align 4, !dbg !3751
  %add3 = add i32 %10, %add2, !dbg !3751
  store i32 %add3, i32* %hashVal, align 4, !dbg !3751
  %11 = load i16*, i16** %curCh, align 8, !dbg !3752
  %incdec.ptr = getelementptr inbounds i16, i16* %11, i32 1, !dbg !3752
  store i16* %incdec.ptr, i16** %curCh, align 8, !dbg !3752
  br label %while.cond, !dbg !3735, !llvm.loop !3753

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !3755

if.end:                                           ; preds = %while.end, %entry
  %12 = load i32, i32* %hashVal, align 4, !dbg !3756
  %13 = load i32, i32* %hashModulus.addr, align 4, !dbg !3757
  %rem = urem i32 %12, %13, !dbg !3758
  ret i32 %rem, !dbg !3759
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString7indexOfEPKtt(i16* %toSearch, i16 zeroext %ch) #1 align 2 !dbg !3760 {
entry:
  %retval = alloca i32, align 4
  %toSearch.addr = alloca i16*, align 8
  %ch.addr = alloca i16, align 2
  %srcPtr = alloca i16*, align 8
  store i16* %toSearch, i16** %toSearch.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toSearch.addr, metadata !3761, metadata !DIExpression()), !dbg !3762
  store i16 %ch, i16* %ch.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %ch.addr, metadata !3763, metadata !DIExpression()), !dbg !3764
  %0 = load i16*, i16** %toSearch.addr, align 8, !dbg !3765
  %tobool = icmp ne i16* %0, null, !dbg !3765
  br i1 %tobool, label %if.then, label %if.end5, !dbg !3767

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i16** %srcPtr, metadata !3768, metadata !DIExpression()), !dbg !3770
  %1 = load i16*, i16** %toSearch.addr, align 8, !dbg !3771
  store i16* %1, i16** %srcPtr, align 8, !dbg !3770
  br label %while.cond, !dbg !3772

while.cond:                                       ; preds = %if.end, %if.then
  %2 = load i16*, i16** %srcPtr, align 8, !dbg !3773
  %3 = load i16, i16* %2, align 2, !dbg !3774
  %tobool1 = icmp ne i16 %3, 0, !dbg !3774
  br i1 %tobool1, label %while.body, label %while.end, !dbg !3772

while.body:                                       ; preds = %while.cond
  %4 = load i16, i16* %ch.addr, align 2, !dbg !3775
  %conv = zext i16 %4 to i32, !dbg !3775
  %5 = load i16*, i16** %srcPtr, align 8, !dbg !3778
  %6 = load i16, i16* %5, align 2, !dbg !3779
  %conv2 = zext i16 %6 to i32, !dbg !3779
  %cmp = icmp eq i32 %conv, %conv2, !dbg !3780
  br i1 %cmp, label %if.then3, label %if.end, !dbg !3781

if.then3:                                         ; preds = %while.body
  %7 = load i16*, i16** %srcPtr, align 8, !dbg !3782
  %8 = load i16*, i16** %toSearch.addr, align 8, !dbg !3783
  %sub.ptr.lhs.cast = ptrtoint i16* %7 to i64, !dbg !3784
  %sub.ptr.rhs.cast = ptrtoint i16* %8 to i64, !dbg !3784
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3784
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !3784
  %conv4 = trunc i64 %sub.ptr.div to i32, !dbg !3785
  store i32 %conv4, i32* %retval, align 4, !dbg !3786
  br label %return, !dbg !3786

if.end:                                           ; preds = %while.body
  %9 = load i16*, i16** %srcPtr, align 8, !dbg !3787
  %incdec.ptr = getelementptr inbounds i16, i16* %9, i32 1, !dbg !3787
  store i16* %incdec.ptr, i16** %srcPtr, align 8, !dbg !3787
  br label %while.cond, !dbg !3772, !llvm.loop !3788

while.end:                                        ; preds = %while.cond
  br label %if.end5, !dbg !3790

if.end5:                                          ; preds = %while.end, %entry
  store i32 -1, i32* %retval, align 4, !dbg !3791
  br label %return, !dbg !3791

return:                                           ; preds = %if.end5, %if.then3
  %10 = load i32, i32* %retval, align 4, !dbg !3792
  ret i32 %10, !dbg !3792
}

; Function Attrs: noinline uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString7indexOfEPKttjPNS_13MemoryManagerE(i16* %toSearch, i16 zeroext %ch, i32 %fromIndex, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !3793 {
entry:
  %retval = alloca i32, align 4
  %toSearch.addr = alloca i16*, align 8
  %ch.addr = alloca i16, align 2
  %fromIndex.addr = alloca i32, align 4
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %len = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %i = alloca i32, align 4
  store i16* %toSearch, i16** %toSearch.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toSearch.addr, metadata !3794, metadata !DIExpression()), !dbg !3795
  store i16 %ch, i16* %ch.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %ch.addr, metadata !3796, metadata !DIExpression()), !dbg !3797
  store i32 %fromIndex, i32* %fromIndex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fromIndex.addr, metadata !3798, metadata !DIExpression()), !dbg !3799
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !3800, metadata !DIExpression()), !dbg !3801
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3802, metadata !DIExpression()), !dbg !3803
  %0 = load i16*, i16** %toSearch.addr, align 8, !dbg !3804
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %0), !dbg !3805
  store i32 %call, i32* %len, align 4, !dbg !3803
  %1 = load i32, i32* %fromIndex.addr, align 4, !dbg !3806
  %2 = load i32, i32* %len, align 4, !dbg !3808
  %sub = sub nsw i32 %2, 1, !dbg !3809
  %cmp = icmp sgt i32 %1, %sub, !dbg !3810
  br i1 %cmp, label %if.then, label %if.end, !dbg !3811

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !3812
  %3 = bitcast i8* %exception to %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, !dbg !3812
  %4 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !3812
  invoke void @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1278, i32 84, %"class.xercesc_2_7::MemoryManager"* %4)
          to label %invoke.cont unwind label %lpad, !dbg !3812

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*)* @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionD2Ev to i8*)) #14, !dbg !3812
  unreachable, !dbg !3812

lpad:                                             ; preds = %if.then
  %5 = landingpad { i8*, i32 }
          cleanup, !dbg !3813
  %6 = extractvalue { i8*, i32 } %5, 0, !dbg !3813
  store i8* %6, i8** %exn.slot, align 8, !dbg !3813
  %7 = extractvalue { i8*, i32 } %5, 1, !dbg !3813
  store i32 %7, i32* %ehselector.slot, align 4, !dbg !3813
  call void @__cxa_free_exception(i8* %exception) #12, !dbg !3812
  br label %eh.resume, !dbg !3812

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3814, metadata !DIExpression()), !dbg !3816
  %8 = load i32, i32* %fromIndex.addr, align 4, !dbg !3817
  store i32 %8, i32* %i, align 4, !dbg !3816
  br label %for.cond, !dbg !3818

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !3819
  %10 = load i32, i32* %len, align 4, !dbg !3821
  %cmp1 = icmp slt i32 %9, %10, !dbg !3822
  br i1 %cmp1, label %for.body, label %for.end, !dbg !3823

for.body:                                         ; preds = %for.cond
  %11 = load i16*, i16** %toSearch.addr, align 8, !dbg !3824
  %12 = load i32, i32* %i, align 4, !dbg !3827
  %idxprom = sext i32 %12 to i64, !dbg !3824
  %arrayidx = getelementptr inbounds i16, i16* %11, i64 %idxprom, !dbg !3824
  %13 = load i16, i16* %arrayidx, align 2, !dbg !3824
  %conv = zext i16 %13 to i32, !dbg !3824
  %14 = load i16, i16* %ch.addr, align 2, !dbg !3828
  %conv2 = zext i16 %14 to i32, !dbg !3828
  %cmp3 = icmp eq i32 %conv, %conv2, !dbg !3829
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !3830

if.then4:                                         ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !3831
  store i32 %15, i32* %retval, align 4, !dbg !3832
  br label %return, !dbg !3832

if.end5:                                          ; preds = %for.body
  br label %for.inc, !dbg !3833

for.inc:                                          ; preds = %if.end5
  %16 = load i32, i32* %i, align 4, !dbg !3834
  %inc = add nsw i32 %16, 1, !dbg !3834
  store i32 %inc, i32* %i, align 4, !dbg !3834
  br label %for.cond, !dbg !3835, !llvm.loop !3836

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !3838
  br label %return, !dbg !3838

return:                                           ; preds = %for.end, %if.then4
  %17 = load i32, i32* %retval, align 4, !dbg !3839
  ret i32 %17, !dbg !3839

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !3812
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !3812
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !3812
  %lpad.val6 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !3812
  resume { i8*, i32 } %lpad.val6, !dbg !3812
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString11lastIndexOfEtPKtj(i16 zeroext %ch, i16* %toSearch, i32 %toSearchLen) #1 align 2 !dbg !3840 {
entry:
  %retval = alloca i32, align 4
  %ch.addr = alloca i16, align 2
  %toSearch.addr = alloca i16*, align 8
  %toSearchLen.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i16 %ch, i16* %ch.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %ch.addr, metadata !3841, metadata !DIExpression()), !dbg !3842
  store i16* %toSearch, i16** %toSearch.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toSearch.addr, metadata !3843, metadata !DIExpression()), !dbg !3844
  store i32 %toSearchLen, i32* %toSearchLen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %toSearchLen.addr, metadata !3845, metadata !DIExpression()), !dbg !3846
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3847, metadata !DIExpression()), !dbg !3849
  %0 = load i32, i32* %toSearchLen.addr, align 4, !dbg !3850
  %sub = sub nsw i32 %0, 1, !dbg !3851
  store i32 %sub, i32* %i, align 4, !dbg !3849
  br label %for.cond, !dbg !3852

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !3853
  %cmp = icmp sge i32 %1, 0, !dbg !3855
  br i1 %cmp, label %for.body, label %for.end, !dbg !3856

for.body:                                         ; preds = %for.cond
  %2 = load i16*, i16** %toSearch.addr, align 8, !dbg !3857
  %3 = load i32, i32* %i, align 4, !dbg !3860
  %idxprom = sext i32 %3 to i64, !dbg !3857
  %arrayidx = getelementptr inbounds i16, i16* %2, i64 %idxprom, !dbg !3857
  %4 = load i16, i16* %arrayidx, align 2, !dbg !3857
  %conv = zext i16 %4 to i32, !dbg !3857
  %5 = load i16, i16* %ch.addr, align 2, !dbg !3861
  %conv1 = zext i16 %5 to i32, !dbg !3861
  %cmp2 = icmp eq i32 %conv, %conv1, !dbg !3862
  br i1 %cmp2, label %if.then, label %if.end, !dbg !3863

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !3864
  store i32 %6, i32* %retval, align 4, !dbg !3865
  br label %return, !dbg !3865

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3866

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !3867
  %dec = add nsw i32 %7, -1, !dbg !3867
  store i32 %dec, i32* %i, align 4, !dbg !3867
  br label %for.cond, !dbg !3868, !llvm.loop !3869

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !3871
  br label %return, !dbg !3871

return:                                           ; preds = %for.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !3872
  ret i32 %8, !dbg !3872
}

; Function Attrs: noinline uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString11lastIndexOfEPKttjPNS_13MemoryManagerE(i16* %toSearch, i16 zeroext %ch, i32 %fromIndex, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !3873 {
entry:
  %retval = alloca i32, align 4
  %toSearch.addr = alloca i16*, align 8
  %ch.addr = alloca i16, align 2
  %fromIndex.addr = alloca i32, align 4
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %len = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %i = alloca i32, align 4
  store i16* %toSearch, i16** %toSearch.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toSearch.addr, metadata !3874, metadata !DIExpression()), !dbg !3875
  store i16 %ch, i16* %ch.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %ch.addr, metadata !3876, metadata !DIExpression()), !dbg !3877
  store i32 %fromIndex, i32* %fromIndex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fromIndex.addr, metadata !3878, metadata !DIExpression()), !dbg !3879
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !3880, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3882, metadata !DIExpression()), !dbg !3883
  %0 = load i16*, i16** %toSearch.addr, align 8, !dbg !3884
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %0), !dbg !3885
  store i32 %call, i32* %len, align 4, !dbg !3883
  %1 = load i32, i32* %fromIndex.addr, align 4, !dbg !3886
  %2 = load i32, i32* %len, align 4, !dbg !3888
  %sub = sub nsw i32 %2, 1, !dbg !3889
  %cmp = icmp sgt i32 %1, %sub, !dbg !3890
  br i1 %cmp, label %if.then, label %if.end, !dbg !3891

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !3892
  %3 = bitcast i8* %exception to %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, !dbg !3892
  %4 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !3892
  invoke void @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1307, i32 84, %"class.xercesc_2_7::MemoryManager"* %4)
          to label %invoke.cont unwind label %lpad, !dbg !3892

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*)* @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionD2Ev to i8*)) #14, !dbg !3892
  unreachable, !dbg !3892

lpad:                                             ; preds = %if.then
  %5 = landingpad { i8*, i32 }
          cleanup, !dbg !3893
  %6 = extractvalue { i8*, i32 } %5, 0, !dbg !3893
  store i8* %6, i8** %exn.slot, align 8, !dbg !3893
  %7 = extractvalue { i8*, i32 } %5, 1, !dbg !3893
  store i32 %7, i32* %ehselector.slot, align 4, !dbg !3893
  call void @__cxa_free_exception(i8* %exception) #12, !dbg !3892
  br label %eh.resume, !dbg !3892

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3894, metadata !DIExpression()), !dbg !3896
  %8 = load i32, i32* %fromIndex.addr, align 4, !dbg !3897
  store i32 %8, i32* %i, align 4, !dbg !3896
  br label %for.cond, !dbg !3898

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !3899
  %cmp1 = icmp sge i32 %9, 0, !dbg !3901
  br i1 %cmp1, label %for.body, label %for.end, !dbg !3902

for.body:                                         ; preds = %for.cond
  %10 = load i16*, i16** %toSearch.addr, align 8, !dbg !3903
  %11 = load i32, i32* %i, align 4, !dbg !3906
  %idxprom = sext i32 %11 to i64, !dbg !3903
  %arrayidx = getelementptr inbounds i16, i16* %10, i64 %idxprom, !dbg !3903
  %12 = load i16, i16* %arrayidx, align 2, !dbg !3903
  %conv = zext i16 %12 to i32, !dbg !3903
  %13 = load i16, i16* %ch.addr, align 2, !dbg !3907
  %conv2 = zext i16 %13 to i32, !dbg !3907
  %cmp3 = icmp eq i32 %conv, %conv2, !dbg !3908
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !3909

if.then4:                                         ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !3910
  store i32 %14, i32* %retval, align 4, !dbg !3911
  br label %return, !dbg !3911

if.end5:                                          ; preds = %for.body
  br label %for.inc, !dbg !3912

for.inc:                                          ; preds = %if.end5
  %15 = load i32, i32* %i, align 4, !dbg !3913
  %dec = add nsw i32 %15, -1, !dbg !3913
  store i32 %dec, i32* %i, align 4, !dbg !3913
  br label %for.cond, !dbg !3914, !llvm.loop !3915

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !3917
  br label %return, !dbg !3917

return:                                           ; preds = %for.end, %if.then4
  %16 = load i32, i32* %retval, align 4, !dbg !3918
  ret i32 %16, !dbg !3918

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !3892
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !3892
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !3892
  %lpad.val6 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !3892
  resume { i8*, i32 } %lpad.val6, !dbg !3892
}

; Function Attrs: noinline uwtable
define dso_local i16* @_ZN11xercesc_2_79XMLString9makeUNameEPKtS2_(i16* %pszURI, i16* %pszName) #3 align 2 !dbg !3919 {
entry:
  %pszURI.addr = alloca i16*, align 8
  %pszName.addr = alloca i16*, align 8
  %pszRet = alloca i16*, align 8
  %uriLen = alloca i32, align 4
  %szTmp = alloca [2 x i16], align 2
  store i16* %pszURI, i16** %pszURI.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pszURI.addr, metadata !3920, metadata !DIExpression()), !dbg !3921
  store i16* %pszName, i16** %pszName.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pszName.addr, metadata !3922, metadata !DIExpression()), !dbg !3923
  call void @llvm.dbg.declare(metadata i16** %pszRet, metadata !3924, metadata !DIExpression()), !dbg !3925
  store i16* null, i16** %pszRet, align 8, !dbg !3925
  call void @llvm.dbg.declare(metadata i32* %uriLen, metadata !3926, metadata !DIExpression()), !dbg !3927
  %0 = load i16*, i16** %pszURI.addr, align 8, !dbg !3928
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %0), !dbg !3929
  store i32 %call, i32* %uriLen, align 4, !dbg !3927
  %1 = load i32, i32* %uriLen, align 4, !dbg !3930
  %tobool = icmp ne i32 %1, 0, !dbg !3930
  br i1 %tobool, label %if.then, label %if.else, !dbg !3932

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %uriLen, align 4, !dbg !3933
  %3 = load i16*, i16** %pszName.addr, align 8, !dbg !3935
  %call1 = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %3), !dbg !3936
  %add = add i32 %2, %call1, !dbg !3937
  %add2 = add i32 %add, 3, !dbg !3938
  %conv = zext i32 %add2 to i64, !dbg !3933
  %4 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 2), !dbg !3939
  %5 = extractvalue { i64, i1 } %4, 1, !dbg !3939
  %6 = extractvalue { i64, i1 } %4, 0, !dbg !3939
  %7 = select i1 %5, i64 -1, i64 %6, !dbg !3939
  %call3 = call i8* @_Znam(i64 %7) #17, !dbg !3939
  %8 = bitcast i8* %call3 to i16*, !dbg !3939
  store i16* %8, i16** %pszRet, align 8, !dbg !3940
  call void @llvm.dbg.declare(metadata [2 x i16]* %szTmp, metadata !3941, metadata !DIExpression()), !dbg !3945
  %arrayidx = getelementptr inbounds [2 x i16], [2 x i16]* %szTmp, i64 0, i64 1, !dbg !3946
  store i16 0, i16* %arrayidx, align 2, !dbg !3947
  %arrayidx4 = getelementptr inbounds [2 x i16], [2 x i16]* %szTmp, i64 0, i64 0, !dbg !3948
  store i16 123, i16* %arrayidx4, align 2, !dbg !3949
  %9 = load i16*, i16** %pszRet, align 8, !dbg !3950
  %arraydecay = getelementptr inbounds [2 x i16], [2 x i16]* %szTmp, i64 0, i64 0, !dbg !3951
  call void @_ZN11xercesc_2_79XMLString10copyStringEPtPKt(i16* %9, i16* %arraydecay), !dbg !3952
  %10 = load i16*, i16** %pszRet, align 8, !dbg !3953
  %11 = load i16*, i16** %pszURI.addr, align 8, !dbg !3954
  call void @_ZN11xercesc_2_79XMLString9catStringEPtPKt(i16* %10, i16* %11), !dbg !3955
  %arrayidx5 = getelementptr inbounds [2 x i16], [2 x i16]* %szTmp, i64 0, i64 0, !dbg !3956
  store i16 125, i16* %arrayidx5, align 2, !dbg !3957
  %12 = load i16*, i16** %pszRet, align 8, !dbg !3958
  %arraydecay6 = getelementptr inbounds [2 x i16], [2 x i16]* %szTmp, i64 0, i64 0, !dbg !3959
  call void @_ZN11xercesc_2_79XMLString9catStringEPtPKt(i16* %12, i16* %arraydecay6), !dbg !3960
  %13 = load i16*, i16** %pszRet, align 8, !dbg !3961
  %14 = load i16*, i16** %pszName.addr, align 8, !dbg !3962
  call void @_ZN11xercesc_2_79XMLString9catStringEPtPKt(i16* %13, i16* %14), !dbg !3963
  br label %if.end, !dbg !3964

if.else:                                          ; preds = %entry
  %15 = load i16*, i16** %pszName.addr, align 8, !dbg !3965
  %call7 = call i16* @_ZN11xercesc_2_79XMLString9replicateEPKt(i16* %15), !dbg !3967
  store i16* %call7, i16** %pszRet, align 8, !dbg !3968
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %16 = load i16*, i16** %pszRet, align 8, !dbg !3969
  ret i16* %16, !dbg !3970
}

; Function Attrs: noinline uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString9textToBinEPKtRjPNS_13MemoryManagerE(i16* %toConvert, i32* dereferenceable(4) %toFill, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !3971 {
entry:
  %retval = alloca i1, align 1
  %toConvert.addr = alloca i16*, align 8
  %toFill.addr = alloca i32*, align 8
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %trimmedStr = alloca i16*, align 8
  %jan1 = alloca %"class.xercesc_2_7::ArrayJanitor", align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %trimmedStrLen = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %nptr = alloca i8*, align 8
  %jan2 = alloca %"class.xercesc_2_7::ArrayJanitor.0", align 8
  %endptr = alloca i8*, align 8
  store i16* %toConvert, i16** %toConvert.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toConvert.addr, metadata !3972, metadata !DIExpression()), !dbg !3973
  store i32* %toFill, i32** %toFill.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %toFill.addr, metadata !3974, metadata !DIExpression()), !dbg !3975
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !3976, metadata !DIExpression()), !dbg !3977
  %0 = load i32*, i32** %toFill.addr, align 8, !dbg !3978
  store i32 0, i32* %0, align 4, !dbg !3979
  %1 = load i16*, i16** %toConvert.addr, align 8, !dbg !3980
  %tobool = icmp ne i16* %1, null, !dbg !3980
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !3982

lor.lhs.false:                                    ; preds = %entry
  %2 = load i16*, i16** %toConvert.addr, align 8, !dbg !3983
  %3 = load i16, i16* %2, align 2, !dbg !3984
  %tobool1 = icmp ne i16 %3, 0, !dbg !3984
  br i1 %tobool1, label %if.end, label %if.then, !dbg !3985

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !3986
  br label %return, !dbg !3986

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i16** %trimmedStr, metadata !3987, metadata !DIExpression()), !dbg !3988
  %4 = load i16*, i16** %toConvert.addr, align 8, !dbg !3989
  %5 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !3990
  %call = call i16* @_ZN11xercesc_2_79XMLString9replicateEPKtPNS_13MemoryManagerE(i16* %4, %"class.xercesc_2_7::MemoryManager"* %5), !dbg !3991
  store i16* %call, i16** %trimmedStr, align 8, !dbg !3988
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::ArrayJanitor"* %jan1, metadata !3992, metadata !DIExpression()), !dbg !3993
  %6 = load i16*, i16** %trimmedStr, align 8, !dbg !3994
  %7 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !3995
  call void @_ZN11xercesc_2_712ArrayJanitorItEC2EPtPNS_13MemoryManagerE(%"class.xercesc_2_7::ArrayJanitor"* %jan1, i16* %6, %"class.xercesc_2_7::MemoryManager"* %7), !dbg !3993
  %8 = load i16*, i16** %trimmedStr, align 8, !dbg !3996
  invoke void @_ZN11xercesc_2_79XMLString4trimEPt(i16* %8)
          to label %invoke.cont unwind label %lpad, !dbg !3997

invoke.cont:                                      ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %trimmedStrLen, metadata !3998, metadata !DIExpression()), !dbg !3999
  %9 = load i16*, i16** %trimmedStr, align 8, !dbg !4000
  %call3 = invoke i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %9)
          to label %invoke.cont2 unwind label %lpad, !dbg !4001

invoke.cont2:                                     ; preds = %invoke.cont
  store i32 %call3, i32* %trimmedStrLen, align 4, !dbg !3999
  %10 = load i32, i32* %trimmedStrLen, align 4, !dbg !4002
  %tobool4 = icmp ne i32 %10, 0, !dbg !4002
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !4004

if.then5:                                         ; preds = %invoke.cont2
  store i1 false, i1* %retval, align 1, !dbg !4005
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup23, !dbg !4005

lpad:                                             ; preds = %invoke.cont12, %if.end10, %if.end6, %invoke.cont, %if.end
  %11 = landingpad { i8*, i32 }
          cleanup, !dbg !4006
  %12 = extractvalue { i8*, i32 } %11, 0, !dbg !4006
  store i8* %12, i8** %exn.slot, align 8, !dbg !4006
  %13 = extractvalue { i8*, i32 } %11, 1, !dbg !4006
  store i32 %13, i32* %ehselector.slot, align 4, !dbg !4006
  call void @_ZN11xercesc_2_712ArrayJanitorItED2Ev(%"class.xercesc_2_7::ArrayJanitor"* %jan1) #12, !dbg !4006
  br label %eh.resume, !dbg !4006

if.end6:                                          ; preds = %invoke.cont2
  %14 = load i16*, i16** %trimmedStr, align 8, !dbg !4007
  %15 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4009
  %call8 = invoke i32 @_ZN11xercesc_2_79XMLString7indexOfEPKttjPNS_13MemoryManagerE(i16* %14, i16 zeroext 45, i32 0, %"class.xercesc_2_7::MemoryManager"* %15)
          to label %invoke.cont7 unwind label %lpad, !dbg !4010

invoke.cont7:                                     ; preds = %if.end6
  %cmp = icmp ne i32 %call8, -1, !dbg !4011
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !4012

if.then9:                                         ; preds = %invoke.cont7
  store i1 false, i1* %retval, align 1, !dbg !4013
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup23, !dbg !4013

if.end10:                                         ; preds = %invoke.cont7
  %call11 = call i32* @__errno_location() #9, !dbg !4014
  store i32 0, i32* %call11, align 4, !dbg !4015
  call void @llvm.dbg.declare(metadata i8** %nptr, metadata !4016, metadata !DIExpression()), !dbg !4017
  %16 = load i16*, i16** %trimmedStr, align 8, !dbg !4018
  %17 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4019
  %call13 = invoke i8* @_ZN11xercesc_2_79XMLString9transcodeEPKtPNS_13MemoryManagerE(i16* %16, %"class.xercesc_2_7::MemoryManager"* %17)
          to label %invoke.cont12 unwind label %lpad, !dbg !4020

invoke.cont12:                                    ; preds = %if.end10
  store i8* %call13, i8** %nptr, align 8, !dbg !4017
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::ArrayJanitor.0"* %jan2, metadata !4021, metadata !DIExpression()), !dbg !4067
  %18 = load i8*, i8** %nptr, align 8, !dbg !4068
  %19 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4069
  invoke void @_ZN11xercesc_2_712ArrayJanitorIcEC2EPcPNS_13MemoryManagerE(%"class.xercesc_2_7::ArrayJanitor.0"* %jan2, i8* %18, %"class.xercesc_2_7::MemoryManager"* %19)
          to label %invoke.cont14 unwind label %lpad, !dbg !4067

invoke.cont14:                                    ; preds = %invoke.cont12
  call void @llvm.dbg.declare(metadata i8** %endptr, metadata !4070, metadata !DIExpression()), !dbg !4071
  %20 = load i8*, i8** %nptr, align 8, !dbg !4072
  %call15 = call i64 @strtoul(i8* %20, i8** %endptr, i32 10) #12, !dbg !4073
  %conv = trunc i64 %call15 to i32, !dbg !4073
  %21 = load i32*, i32** %toFill.addr, align 8, !dbg !4074
  store i32 %conv, i32* %21, align 4, !dbg !4075
  %22 = load i8*, i8** %endptr, align 8, !dbg !4076
  %23 = load i8*, i8** %nptr, align 8, !dbg !4078
  %sub.ptr.lhs.cast = ptrtoint i8* %22 to i64, !dbg !4079
  %sub.ptr.rhs.cast = ptrtoint i8* %23 to i64, !dbg !4079
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4079
  %24 = load i32, i32* %trimmedStrLen, align 4, !dbg !4080
  %conv16 = sext i32 %24 to i64, !dbg !4081
  %cmp17 = icmp ne i64 %sub.ptr.sub, %conv16, !dbg !4082
  br i1 %cmp17, label %if.then21, label %lor.lhs.false18, !dbg !4083

lor.lhs.false18:                                  ; preds = %invoke.cont14
  %call19 = call i32* @__errno_location() #9, !dbg !4084
  %25 = load i32, i32* %call19, align 4, !dbg !4084
  %cmp20 = icmp eq i32 %25, 34, !dbg !4085
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !4086

if.then21:                                        ; preds = %lor.lhs.false18, %invoke.cont14
  store i1 false, i1* %retval, align 1, !dbg !4087
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4087

if.end22:                                         ; preds = %lor.lhs.false18
  store i1 true, i1* %retval, align 1, !dbg !4088
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4088

cleanup:                                          ; preds = %if.end22, %if.then21
  call void @_ZN11xercesc_2_712ArrayJanitorIcED2Ev(%"class.xercesc_2_7::ArrayJanitor.0"* %jan2) #12, !dbg !4006
  br label %cleanup23

cleanup23:                                        ; preds = %cleanup, %if.then9, %if.then5
  call void @_ZN11xercesc_2_712ArrayJanitorItED2Ev(%"class.xercesc_2_7::ArrayJanitor"* %jan1) #12, !dbg !4006
  br label %return

return:                                           ; preds = %cleanup23, %if.then
  %26 = load i1, i1* %retval, align 1, !dbg !4006
  ret i1 %26, !dbg !4006

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !4006
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !4006
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !4006
  %lpad.val24 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !4006
  resume { i8*, i32 } %lpad.val24, !dbg !4006
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN11xercesc_2_79XMLString4trimEPt(i16* %toTrim) #3 align 2 !dbg !4089 {
entry:
  %toTrim.addr = alloca i16*, align 8
  %len = alloca i32, align 4
  %skip = alloca i32, align 4
  %scrape = alloca i32, align 4
  %index = alloca i32, align 4
  store i16* %toTrim, i16** %toTrim.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toTrim.addr, metadata !4090, metadata !DIExpression()), !dbg !4091
  call void @llvm.dbg.declare(metadata i32* %len, metadata !4092, metadata !DIExpression()), !dbg !4093
  %0 = load i16*, i16** %toTrim.addr, align 8, !dbg !4094
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %0), !dbg !4095
  store i32 %call, i32* %len, align 4, !dbg !4093
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !4096, metadata !DIExpression()), !dbg !4097
  call void @llvm.dbg.declare(metadata i32* %scrape, metadata !4098, metadata !DIExpression()), !dbg !4099
  store i32 0, i32* %skip, align 4, !dbg !4100
  br label %for.cond, !dbg !4102

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %skip, align 4, !dbg !4103
  %2 = load i32, i32* %len, align 4, !dbg !4105
  %cmp = icmp ult i32 %1, %2, !dbg !4106
  br i1 %cmp, label %for.body, label %for.end, !dbg !4107

for.body:                                         ; preds = %for.cond
  %3 = load i16*, i16** %toTrim.addr, align 8, !dbg !4108
  %4 = load i32, i32* %skip, align 4, !dbg !4111
  %idxprom = zext i32 %4 to i64, !dbg !4108
  %arrayidx = getelementptr inbounds i16, i16* %3, i64 %idxprom, !dbg !4108
  %5 = load i16, i16* %arrayidx, align 2, !dbg !4108
  %call1 = call zeroext i1 @_ZN11xercesc_2_710XMLChar1_012isWhitespaceEt(i16 zeroext %5), !dbg !4112
  br i1 %call1, label %if.end, label %if.then, !dbg !4113

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !4114

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4115

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %skip, align 4, !dbg !4116
  %inc = add i32 %6, 1, !dbg !4116
  store i32 %inc, i32* %skip, align 4, !dbg !4116
  br label %for.cond, !dbg !4117, !llvm.loop !4118

for.end:                                          ; preds = %if.then, %for.cond
  %7 = load i32, i32* %len, align 4, !dbg !4120
  store i32 %7, i32* %scrape, align 4, !dbg !4122
  br label %for.cond2, !dbg !4123

for.cond2:                                        ; preds = %for.inc10, %for.end
  %8 = load i32, i32* %scrape, align 4, !dbg !4124
  %9 = load i32, i32* %skip, align 4, !dbg !4126
  %cmp3 = icmp ugt i32 %8, %9, !dbg !4127
  br i1 %cmp3, label %for.body4, label %for.end11, !dbg !4128

for.body4:                                        ; preds = %for.cond2
  %10 = load i16*, i16** %toTrim.addr, align 8, !dbg !4129
  %11 = load i32, i32* %scrape, align 4, !dbg !4132
  %sub = sub i32 %11, 1, !dbg !4133
  %idxprom5 = zext i32 %sub to i64, !dbg !4129
  %arrayidx6 = getelementptr inbounds i16, i16* %10, i64 %idxprom5, !dbg !4129
  %12 = load i16, i16* %arrayidx6, align 2, !dbg !4129
  %call7 = call zeroext i1 @_ZN11xercesc_2_710XMLChar1_012isWhitespaceEt(i16 zeroext %12), !dbg !4134
  br i1 %call7, label %if.end9, label %if.then8, !dbg !4135

if.then8:                                         ; preds = %for.body4
  br label %for.end11, !dbg !4136

if.end9:                                          ; preds = %for.body4
  br label %for.inc10, !dbg !4137

for.inc10:                                        ; preds = %if.end9
  %13 = load i32, i32* %scrape, align 4, !dbg !4138
  %dec = add i32 %13, -1, !dbg !4138
  store i32 %dec, i32* %scrape, align 4, !dbg !4138
  br label %for.cond2, !dbg !4139, !llvm.loop !4140

for.end11:                                        ; preds = %if.then8, %for.cond2
  %14 = load i32, i32* %scrape, align 4, !dbg !4142
  %15 = load i32, i32* %len, align 4, !dbg !4144
  %cmp12 = icmp ne i32 %14, %15, !dbg !4145
  br i1 %cmp12, label %if.then13, label %if.end16, !dbg !4146

if.then13:                                        ; preds = %for.end11
  %16 = load i16*, i16** %toTrim.addr, align 8, !dbg !4147
  %17 = load i32, i32* %scrape, align 4, !dbg !4148
  %idxprom14 = zext i32 %17 to i64, !dbg !4147
  %arrayidx15 = getelementptr inbounds i16, i16* %16, i64 %idxprom14, !dbg !4147
  store i16 0, i16* %arrayidx15, align 2, !dbg !4149
  br label %if.end16, !dbg !4147

if.end16:                                         ; preds = %if.then13, %for.end11
  %18 = load i32, i32* %skip, align 4, !dbg !4150
  %tobool = icmp ne i32 %18, 0, !dbg !4150
  br i1 %tobool, label %if.then17, label %if.end29, !dbg !4152

if.then17:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4153, metadata !DIExpression()), !dbg !4155
  store i32 0, i32* %index, align 4, !dbg !4155
  br label %while.cond, !dbg !4156

while.cond:                                       ; preds = %while.body, %if.then17
  %19 = load i16*, i16** %toTrim.addr, align 8, !dbg !4157
  %20 = load i32, i32* %skip, align 4, !dbg !4158
  %idxprom18 = zext i32 %20 to i64, !dbg !4157
  %arrayidx19 = getelementptr inbounds i16, i16* %19, i64 %idxprom18, !dbg !4157
  %21 = load i16, i16* %arrayidx19, align 2, !dbg !4157
  %tobool20 = icmp ne i16 %21, 0, !dbg !4157
  br i1 %tobool20, label %while.body, label %while.end, !dbg !4156

while.body:                                       ; preds = %while.cond
  %22 = load i16*, i16** %toTrim.addr, align 8, !dbg !4159
  %23 = load i32, i32* %skip, align 4, !dbg !4160
  %inc21 = add i32 %23, 1, !dbg !4160
  store i32 %inc21, i32* %skip, align 4, !dbg !4160
  %idxprom22 = zext i32 %23 to i64, !dbg !4159
  %arrayidx23 = getelementptr inbounds i16, i16* %22, i64 %idxprom22, !dbg !4159
  %24 = load i16, i16* %arrayidx23, align 2, !dbg !4159
  %25 = load i16*, i16** %toTrim.addr, align 8, !dbg !4161
  %26 = load i32, i32* %index, align 4, !dbg !4162
  %inc24 = add i32 %26, 1, !dbg !4162
  store i32 %inc24, i32* %index, align 4, !dbg !4162
  %idxprom25 = zext i32 %26 to i64, !dbg !4161
  %arrayidx26 = getelementptr inbounds i16, i16* %25, i64 %idxprom25, !dbg !4161
  store i16 %24, i16* %arrayidx26, align 2, !dbg !4163
  br label %while.cond, !dbg !4156, !llvm.loop !4164

while.end:                                        ; preds = %while.cond
  %27 = load i16*, i16** %toTrim.addr, align 8, !dbg !4166
  %28 = load i32, i32* %index, align 4, !dbg !4167
  %idxprom27 = zext i32 %28 to i64, !dbg !4166
  %arrayidx28 = getelementptr inbounds i16, i16* %27, i64 %idxprom27, !dbg !4166
  store i16 0, i16* %arrayidx28, align 2, !dbg !4168
  br label %if.end29, !dbg !4169

if.end29:                                         ; preds = %while.end, %if.end16
  ret void, !dbg !4170
}

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_712ArrayJanitorIcEC2EPcPNS_13MemoryManagerE(%"class.xercesc_2_7::ArrayJanitor.0"* %this, i8* %toDelete, %"class.xercesc_2_7::MemoryManager"* %manager) unnamed_addr #1 comdat align 2 !dbg !4171 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::ArrayJanitor.0"*, align 8
  %toDelete.addr = alloca i8*, align 8
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  store %"class.xercesc_2_7::ArrayJanitor.0"* %this, %"class.xercesc_2_7::ArrayJanitor.0"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::ArrayJanitor.0"** %this.addr, metadata !4172, metadata !DIExpression()), !dbg !4174
  store i8* %toDelete, i8** %toDelete.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toDelete.addr, metadata !4175, metadata !DIExpression()), !dbg !4176
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !4177, metadata !DIExpression()), !dbg !4178
  %this1 = load %"class.xercesc_2_7::ArrayJanitor.0"*, %"class.xercesc_2_7::ArrayJanitor.0"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::ArrayJanitor.0"* %this1 to %"class.xercesc_2_7::XMemory"*, !dbg !4179
  call void @_ZN11xercesc_2_77XMemoryC2Ev(%"class.xercesc_2_7::XMemory"* %0), !dbg !4180
  %fData = getelementptr inbounds %"class.xercesc_2_7::ArrayJanitor.0", %"class.xercesc_2_7::ArrayJanitor.0"* %this1, i32 0, i32 0, !dbg !4182
  %1 = load i8*, i8** %toDelete.addr, align 8, !dbg !4184
  store i8* %1, i8** %fData, align 8, !dbg !4182
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_7::ArrayJanitor.0", %"class.xercesc_2_7::ArrayJanitor.0"* %this1, i32 0, i32 1, !dbg !4185
  %2 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4186
  store %"class.xercesc_2_7::MemoryManager"* %2, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager, align 8, !dbg !4185
  ret void, !dbg !4187
}

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #4

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_712ArrayJanitorIcED2Ev(%"class.xercesc_2_7::ArrayJanitor.0"* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !4188 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::ArrayJanitor.0"*, align 8
  store %"class.xercesc_2_7::ArrayJanitor.0"* %this, %"class.xercesc_2_7::ArrayJanitor.0"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::ArrayJanitor.0"** %this.addr, metadata !4189, metadata !DIExpression()), !dbg !4190
  %this1 = load %"class.xercesc_2_7::ArrayJanitor.0"*, %"class.xercesc_2_7::ArrayJanitor.0"** %this.addr, align 8
  invoke void @_ZN11xercesc_2_712ArrayJanitorIcE5resetEPc(%"class.xercesc_2_7::ArrayJanitor.0"* %this1, i8* null)
          to label %invoke.cont unwind label %terminate.lpad, !dbg !4191

invoke.cont:                                      ; preds = %entry
  ret void, !dbg !4193

terminate.lpad:                                   ; preds = %entry
  %0 = landingpad { i8*, i32 }
          catch i8* null, !dbg !4191
  %1 = extractvalue { i8*, i32 } %0, 0, !dbg !4191
  call void @__clang_call_terminate(i8* %1) #16, !dbg !4191
  unreachable, !dbg !4191
}

; Function Attrs: noinline uwtable
define dso_local i32 @_ZN11xercesc_2_79XMLString8parseIntEPKtPNS_13MemoryManagerE(i16* %toConvert, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !4194 {
entry:
  %toConvert.addr = alloca i16*, align 8
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %trimmedStr = alloca i16*, align 8
  %jan1 = alloca %"class.xercesc_2_7::ArrayJanitor", align 8
  %trimmedStrLen = alloca i32, align 4
  %nptr = alloca i8*, align 8
  %jan2 = alloca %"class.xercesc_2_7::ArrayJanitor.0", align 8
  %endptr = alloca i8*, align 8
  %retVal = alloca i64, align 8
  store i16* %toConvert, i16** %toConvert.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toConvert.addr, metadata !4195, metadata !DIExpression()), !dbg !4196
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !4197, metadata !DIExpression()), !dbg !4198
  %0 = load i16*, i16** %toConvert.addr, align 8, !dbg !4199
  %tobool = icmp ne i16* %0, null, !dbg !4199
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4201

lor.lhs.false:                                    ; preds = %entry
  %1 = load i16*, i16** %toConvert.addr, align 8, !dbg !4202
  %2 = load i16, i16* %1, align 2, !dbg !4203
  %tobool1 = icmp ne i16 %2, 0, !dbg !4203
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4204

if.then:                                          ; preds = %lor.lhs.false, %entry
  %exception = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !4205
  %3 = bitcast i8* %exception to %"class.xercesc_2_7::NumberFormatException"*, !dbg !4205
  %4 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4205
  invoke void @_ZN11xercesc_2_721NumberFormatExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::NumberFormatException"* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1396, i32 265, %"class.xercesc_2_7::MemoryManager"* %4)
          to label %invoke.cont unwind label %lpad, !dbg !4205

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_721NumberFormatExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::NumberFormatException"*)* @_ZN11xercesc_2_721NumberFormatExceptionD2Ev to i8*)) #14, !dbg !4205
  unreachable, !dbg !4205

lpad:                                             ; preds = %if.then
  %5 = landingpad { i8*, i32 }
          cleanup, !dbg !4206
  %6 = extractvalue { i8*, i32 } %5, 0, !dbg !4206
  store i8* %6, i8** %exn.slot, align 8, !dbg !4206
  %7 = extractvalue { i8*, i32 } %5, 1, !dbg !4206
  store i32 %7, i32* %ehselector.slot, align 4, !dbg !4206
  call void @__cxa_free_exception(i8* %exception) #12, !dbg !4205
  br label %eh.resume, !dbg !4205

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i16** %trimmedStr, metadata !4207, metadata !DIExpression()), !dbg !4208
  %8 = load i16*, i16** %toConvert.addr, align 8, !dbg !4209
  %9 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4210
  %call = call i16* @_ZN11xercesc_2_79XMLString9replicateEPKtPNS_13MemoryManagerE(i16* %8, %"class.xercesc_2_7::MemoryManager"* %9), !dbg !4211
  store i16* %call, i16** %trimmedStr, align 8, !dbg !4208
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::ArrayJanitor"* %jan1, metadata !4212, metadata !DIExpression()), !dbg !4213
  %10 = load i16*, i16** %trimmedStr, align 8, !dbg !4214
  %11 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4215
  call void @_ZN11xercesc_2_712ArrayJanitorItEC2EPtPNS_13MemoryManagerE(%"class.xercesc_2_7::ArrayJanitor"* %jan1, i16* %10, %"class.xercesc_2_7::MemoryManager"* %11), !dbg !4213
  %12 = load i16*, i16** %trimmedStr, align 8, !dbg !4216
  invoke void @_ZN11xercesc_2_79XMLString4trimEPt(i16* %12)
          to label %invoke.cont3 unwind label %lpad2, !dbg !4217

invoke.cont3:                                     ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %trimmedStrLen, metadata !4218, metadata !DIExpression()), !dbg !4219
  %13 = load i16*, i16** %trimmedStr, align 8, !dbg !4220
  %call5 = invoke i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %13)
          to label %invoke.cont4 unwind label %lpad2, !dbg !4221

invoke.cont4:                                     ; preds = %invoke.cont3
  store i32 %call5, i32* %trimmedStrLen, align 4, !dbg !4219
  %14 = load i32, i32* %trimmedStrLen, align 4, !dbg !4222
  %tobool6 = icmp ne i32 %14, 0, !dbg !4222
  br i1 %tobool6, label %if.end11, label %if.then7, !dbg !4224

if.then7:                                         ; preds = %invoke.cont4
  %exception8 = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !4225
  %15 = bitcast i8* %exception8 to %"class.xercesc_2_7::NumberFormatException"*, !dbg !4225
  %16 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4225
  invoke void @_ZN11xercesc_2_721NumberFormatExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::NumberFormatException"* %15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1404, i32 265, %"class.xercesc_2_7::MemoryManager"* %16)
          to label %invoke.cont10 unwind label %lpad9, !dbg !4225

invoke.cont10:                                    ; preds = %if.then7
  invoke void @__cxa_throw(i8* %exception8, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_721NumberFormatExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::NumberFormatException"*)* @_ZN11xercesc_2_721NumberFormatExceptionD2Ev to i8*)) #14
          to label %unreachable unwind label %lpad2, !dbg !4225

lpad2:                                            ; preds = %invoke.cont13, %if.end11, %invoke.cont10, %invoke.cont3, %if.end
  %17 = landingpad { i8*, i32 }
          cleanup, !dbg !4226
  %18 = extractvalue { i8*, i32 } %17, 0, !dbg !4226
  store i8* %18, i8** %exn.slot, align 8, !dbg !4226
  %19 = extractvalue { i8*, i32 } %17, 1, !dbg !4226
  store i32 %19, i32* %ehselector.slot, align 4, !dbg !4226
  br label %ehcleanup31, !dbg !4226

lpad9:                                            ; preds = %if.then7
  %20 = landingpad { i8*, i32 }
          cleanup, !dbg !4227
  %21 = extractvalue { i8*, i32 } %20, 0, !dbg !4227
  store i8* %21, i8** %exn.slot, align 8, !dbg !4227
  %22 = extractvalue { i8*, i32 } %20, 1, !dbg !4227
  store i32 %22, i32* %ehselector.slot, align 4, !dbg !4227
  call void @__cxa_free_exception(i8* %exception8) #12, !dbg !4225
  br label %ehcleanup31, !dbg !4225

if.end11:                                         ; preds = %invoke.cont4
  %call12 = call i32* @__errno_location() #9, !dbg !4228
  store i32 0, i32* %call12, align 4, !dbg !4229
  call void @llvm.dbg.declare(metadata i8** %nptr, metadata !4230, metadata !DIExpression()), !dbg !4231
  %23 = load i16*, i16** %trimmedStr, align 8, !dbg !4232
  %24 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4233
  %call14 = invoke i8* @_ZN11xercesc_2_79XMLString9transcodeEPKtPNS_13MemoryManagerE(i16* %23, %"class.xercesc_2_7::MemoryManager"* %24)
          to label %invoke.cont13 unwind label %lpad2, !dbg !4234

invoke.cont13:                                    ; preds = %if.end11
  store i8* %call14, i8** %nptr, align 8, !dbg !4231
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::ArrayJanitor.0"* %jan2, metadata !4235, metadata !DIExpression()), !dbg !4236
  %25 = load i8*, i8** %nptr, align 8, !dbg !4237
  %26 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4238
  invoke void @_ZN11xercesc_2_712ArrayJanitorIcEC2EPcPNS_13MemoryManagerE(%"class.xercesc_2_7::ArrayJanitor.0"* %jan2, i8* %25, %"class.xercesc_2_7::MemoryManager"* %26)
          to label %invoke.cont15 unwind label %lpad2, !dbg !4236

invoke.cont15:                                    ; preds = %invoke.cont13
  call void @llvm.dbg.declare(metadata i8** %endptr, metadata !4239, metadata !DIExpression()), !dbg !4240
  call void @llvm.dbg.declare(metadata i64* %retVal, metadata !4241, metadata !DIExpression()), !dbg !4242
  %27 = load i8*, i8** %nptr, align 8, !dbg !4243
  %call16 = call i64 @strtol(i8* %27, i8** %endptr, i32 10) #12, !dbg !4244
  store i64 %call16, i64* %retVal, align 8, !dbg !4242
  %28 = load i8*, i8** %endptr, align 8, !dbg !4245
  %29 = load i8*, i8** %nptr, align 8, !dbg !4247
  %sub.ptr.lhs.cast = ptrtoint i8* %28 to i64, !dbg !4248
  %sub.ptr.rhs.cast = ptrtoint i8* %29 to i64, !dbg !4248
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4248
  %30 = load i32, i32* %trimmedStrLen, align 4, !dbg !4249
  %conv = sext i32 %30 to i64, !dbg !4250
  %cmp = icmp ne i64 %sub.ptr.sub, %conv, !dbg !4251
  br i1 %cmp, label %if.then17, label %if.end22, !dbg !4252

if.then17:                                        ; preds = %invoke.cont15
  %exception18 = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !4253
  %31 = bitcast i8* %exception18 to %"class.xercesc_2_7::NumberFormatException"*, !dbg !4253
  %32 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4253
  invoke void @_ZN11xercesc_2_721NumberFormatExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::NumberFormatException"* %31, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1417, i32 264, %"class.xercesc_2_7::MemoryManager"* %32)
          to label %invoke.cont20 unwind label %lpad19, !dbg !4253

invoke.cont20:                                    ; preds = %if.then17
  invoke void @__cxa_throw(i8* %exception18, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_721NumberFormatExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::NumberFormatException"*)* @_ZN11xercesc_2_721NumberFormatExceptionD2Ev to i8*)) #14
          to label %unreachable unwind label %lpad21, !dbg !4253

lpad19:                                           ; preds = %if.then17
  %33 = landingpad { i8*, i32 }
          cleanup, !dbg !4254
  %34 = extractvalue { i8*, i32 } %33, 0, !dbg !4254
  store i8* %34, i8** %exn.slot, align 8, !dbg !4254
  %35 = extractvalue { i8*, i32 } %33, 1, !dbg !4254
  store i32 %35, i32* %ehselector.slot, align 4, !dbg !4254
  call void @__cxa_free_exception(i8* %exception18) #12, !dbg !4253
  br label %ehcleanup, !dbg !4253

lpad21:                                           ; preds = %invoke.cont28, %invoke.cont20
  %36 = landingpad { i8*, i32 }
          cleanup, !dbg !4254
  %37 = extractvalue { i8*, i32 } %36, 0, !dbg !4254
  store i8* %37, i8** %exn.slot, align 8, !dbg !4254
  %38 = extractvalue { i8*, i32 } %36, 1, !dbg !4254
  store i32 %38, i32* %ehselector.slot, align 4, !dbg !4254
  br label %ehcleanup, !dbg !4254

if.end22:                                         ; preds = %invoke.cont15
  %call23 = call i32* @__errno_location() #9, !dbg !4255
  %39 = load i32, i32* %call23, align 4, !dbg !4255
  %cmp24 = icmp eq i32 %39, 34, !dbg !4257
  br i1 %cmp24, label %if.then25, label %if.end29, !dbg !4258

if.then25:                                        ; preds = %if.end22
  %exception26 = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !4259
  %40 = bitcast i8* %exception26 to %"class.xercesc_2_7::NumberFormatException"*, !dbg !4259
  %41 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4259
  invoke void @_ZN11xercesc_2_721NumberFormatExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::NumberFormatException"* %40, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1421, i32 85, %"class.xercesc_2_7::MemoryManager"* %41)
          to label %invoke.cont28 unwind label %lpad27, !dbg !4259

invoke.cont28:                                    ; preds = %if.then25
  invoke void @__cxa_throw(i8* %exception26, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_721NumberFormatExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::NumberFormatException"*)* @_ZN11xercesc_2_721NumberFormatExceptionD2Ev to i8*)) #14
          to label %unreachable unwind label %lpad21, !dbg !4259

lpad27:                                           ; preds = %if.then25
  %42 = landingpad { i8*, i32 }
          cleanup, !dbg !4260
  %43 = extractvalue { i8*, i32 } %42, 0, !dbg !4260
  store i8* %43, i8** %exn.slot, align 8, !dbg !4260
  %44 = extractvalue { i8*, i32 } %42, 1, !dbg !4260
  store i32 %44, i32* %ehselector.slot, align 4, !dbg !4260
  call void @__cxa_free_exception(i8* %exception26) #12, !dbg !4259
  br label %ehcleanup, !dbg !4259

if.end29:                                         ; preds = %if.end22
  %45 = load i64, i64* %retVal, align 8, !dbg !4261
  %conv30 = trunc i64 %45 to i32, !dbg !4261
  call void @_ZN11xercesc_2_712ArrayJanitorIcED2Ev(%"class.xercesc_2_7::ArrayJanitor.0"* %jan2) #12, !dbg !4226
  call void @_ZN11xercesc_2_712ArrayJanitorItED2Ev(%"class.xercesc_2_7::ArrayJanitor"* %jan1) #12, !dbg !4226
  ret i32 %conv30, !dbg !4226

ehcleanup:                                        ; preds = %lpad27, %lpad21, %lpad19
  call void @_ZN11xercesc_2_712ArrayJanitorIcED2Ev(%"class.xercesc_2_7::ArrayJanitor.0"* %jan2) #12, !dbg !4226
  br label %ehcleanup31, !dbg !4226

ehcleanup31:                                      ; preds = %ehcleanup, %lpad9, %lpad2
  call void @_ZN11xercesc_2_712ArrayJanitorItED2Ev(%"class.xercesc_2_7::ArrayJanitor"* %jan1) #12, !dbg !4226
  br label %eh.resume, !dbg !4226

eh.resume:                                        ; preds = %ehcleanup31, %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !4205
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !4205
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !4205
  %lpad.val32 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !4205
  resume { i8*, i32 } %lpad.val32, !dbg !4205

unreachable:                                      ; preds = %invoke.cont28, %invoke.cont20, %invoke.cont10
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_721NumberFormatExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::NumberFormatException"* %this, i8* %srcFile, i32 %srcLine, i32 %toThrow, %"class.xercesc_2_7::MemoryManager"* %memoryManager) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !4262 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::NumberFormatException"*, align 8
  %srcFile.addr = alloca i8*, align 8
  %srcLine.addr = alloca i32, align 4
  %toThrow.addr = alloca i32, align 4
  %memoryManager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.xercesc_2_7::NumberFormatException"* %this, %"class.xercesc_2_7::NumberFormatException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::NumberFormatException"** %this.addr, metadata !4297, metadata !DIExpression()), !dbg !4299
  store i8* %srcFile, i8** %srcFile.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srcFile.addr, metadata !4300, metadata !DIExpression()), !dbg !4301
  store i32 %srcLine, i32* %srcLine.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srcLine.addr, metadata !4302, metadata !DIExpression()), !dbg !4301
  store i32 %toThrow, i32* %toThrow.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %toThrow.addr, metadata !4303, metadata !DIExpression()), !dbg !4301
  store %"class.xercesc_2_7::MemoryManager"* %memoryManager, %"class.xercesc_2_7::MemoryManager"** %memoryManager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %memoryManager.addr, metadata !4304, metadata !DIExpression()), !dbg !4301
  %this1 = load %"class.xercesc_2_7::NumberFormatException"*, %"class.xercesc_2_7::NumberFormatException"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::NumberFormatException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !4301
  %1 = load i8*, i8** %srcFile.addr, align 8, !dbg !4301
  %2 = load i32, i32* %srcLine.addr, align 4, !dbg !4301
  %3 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %memoryManager.addr, align 8, !dbg !4301
  call void @_ZN11xercesc_2_712XMLExceptionC2EPKcjPNS_13MemoryManagerE(%"class.xercesc_2_7::XMLException"* %0, i8* %1, i32 %2, %"class.xercesc_2_7::MemoryManager"* %3), !dbg !4301
  %4 = bitcast %"class.xercesc_2_7::NumberFormatException"* %this1 to i32 (...)***, !dbg !4301
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11xercesc_2_721NumberFormatExceptionE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8, !dbg !4301
  %5 = bitcast %"class.xercesc_2_7::NumberFormatException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !4305
  %6 = load i32, i32* %toThrow.addr, align 4, !dbg !4305
  invoke void @_ZN11xercesc_2_712XMLException14loadExceptTextENS_10XMLExcepts5CodesE(%"class.xercesc_2_7::XMLException"* %5, i32 %6)
          to label %invoke.cont unwind label %lpad, !dbg !4305

invoke.cont:                                      ; preds = %entry
  ret void, !dbg !4301

lpad:                                             ; preds = %entry
  %7 = landingpad { i8*, i32 }
          cleanup, !dbg !4305
  %8 = extractvalue { i8*, i32 } %7, 0, !dbg !4305
  store i8* %8, i8** %exn.slot, align 8, !dbg !4305
  %9 = extractvalue { i8*, i32 } %7, 1, !dbg !4305
  store i32 %9, i32* %ehselector.slot, align 4, !dbg !4305
  %10 = bitcast %"class.xercesc_2_7::NumberFormatException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !4305
  call void @_ZN11xercesc_2_712XMLExceptionD2Ev(%"class.xercesc_2_7::XMLException"* %10) #12, !dbg !4305
  br label %eh.resume, !dbg !4305

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !4305
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !4305
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !4305
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !4305
  resume { i8*, i32 } %lpad.val2, !dbg !4305
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_721NumberFormatExceptionD2Ev(%"class.xercesc_2_7::NumberFormatException"* %this) unnamed_addr #1 comdat align 2 !dbg !4307 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::NumberFormatException"*, align 8
  store %"class.xercesc_2_7::NumberFormatException"* %this, %"class.xercesc_2_7::NumberFormatException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::NumberFormatException"** %this.addr, metadata !4308, metadata !DIExpression()), !dbg !4309
  %this1 = load %"class.xercesc_2_7::NumberFormatException"*, %"class.xercesc_2_7::NumberFormatException"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::NumberFormatException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !4310
  call void @_ZN11xercesc_2_712XMLExceptionD2Ev(%"class.xercesc_2_7::XMLException"* %0) #12, !dbg !4310
  ret void, !dbg !4312
}

; Function Attrs: nounwind
declare dso_local i64 @strtol(i8*, i8**, i32) #4

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZN11xercesc_2_710XMLChar1_012isWhitespaceEt(i16 zeroext %toCheck) #1 comdat align 2 !dbg !4313 {
entry:
  %toCheck.addr = alloca i16, align 2
  store i16 %toCheck, i16* %toCheck.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %toCheck.addr, metadata !4351, metadata !DIExpression()), !dbg !4352
  %0 = load i16, i16* %toCheck.addr, align 2, !dbg !4353
  %idxprom = zext i16 %0 to i64, !dbg !4354
  %arrayidx = getelementptr inbounds [65536 x i8], [65536 x i8]* @_ZN11xercesc_2_710XMLChar1_019fgCharCharsTable1_0E, i64 0, i64 %idxprom, !dbg !4354
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4354
  %conv = zext i8 %1 to i32, !dbg !4354
  %and = and i32 %conv, 128, !dbg !4355
  %cmp = icmp ne i32 %and, 0, !dbg !4356
  ret i1 %cmp, !dbg !4357
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN11xercesc_2_79XMLString9upperCaseEPt(i16* %toUpperCase) #3 align 2 !dbg !4358 {
entry:
  %toUpperCase.addr = alloca i16*, align 8
  store i16* %toUpperCase, i16** %toUpperCase.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toUpperCase.addr, metadata !4359, metadata !DIExpression()), !dbg !4360
  %0 = load %"class.xercesc_2_7::XMLTransService"*, %"class.xercesc_2_7::XMLTransService"** @_ZN11xercesc_2_716XMLPlatformUtils14fgTransServiceE, align 8, !dbg !4361
  %1 = load i16*, i16** %toUpperCase.addr, align 8, !dbg !4362
  %2 = bitcast %"class.xercesc_2_7::XMLTransService"* %0 to void (%"class.xercesc_2_7::XMLTransService"*, i16*)***, !dbg !4363
  %vtable = load void (%"class.xercesc_2_7::XMLTransService"*, i16*)**, void (%"class.xercesc_2_7::XMLTransService"*, i16*)*** %2, align 8, !dbg !4363
  %vfn = getelementptr inbounds void (%"class.xercesc_2_7::XMLTransService"*, i16*)*, void (%"class.xercesc_2_7::XMLTransService"*, i16*)** %vtable, i64 8, !dbg !4363
  %3 = load void (%"class.xercesc_2_7::XMLTransService"*, i16*)*, void (%"class.xercesc_2_7::XMLTransService"*, i16*)** %vfn, align 8, !dbg !4363
  call void %3(%"class.xercesc_2_7::XMLTransService"* %0, i16* %1), !dbg !4363
  ret void, !dbg !4364
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN11xercesc_2_79XMLString14upperCaseASCIIEPt(i16* %toUpperCase) #1 align 2 !dbg !4365 {
entry:
  %toUpperCase.addr = alloca i16*, align 8
  %psz1 = alloca i16*, align 8
  store i16* %toUpperCase, i16** %toUpperCase.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toUpperCase.addr, metadata !4366, metadata !DIExpression()), !dbg !4367
  call void @llvm.dbg.declare(metadata i16** %psz1, metadata !4368, metadata !DIExpression()), !dbg !4369
  %0 = load i16*, i16** %toUpperCase.addr, align 8, !dbg !4370
  store i16* %0, i16** %psz1, align 8, !dbg !4369
  %1 = load i16*, i16** %psz1, align 8, !dbg !4371
  %tobool = icmp ne i16* %1, null, !dbg !4371
  br i1 %tobool, label %if.end, label %if.then, !dbg !4373

if.then:                                          ; preds = %entry
  br label %while.end, !dbg !4374

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !4375

while.cond:                                       ; preds = %if.end7, %if.end
  %2 = load i16*, i16** %psz1, align 8, !dbg !4376
  %3 = load i16, i16* %2, align 2, !dbg !4377
  %tobool1 = icmp ne i16 %3, 0, !dbg !4377
  br i1 %tobool1, label %while.body, label %while.end, !dbg !4375

while.body:                                       ; preds = %while.cond
  %4 = load i16*, i16** %psz1, align 8, !dbg !4378
  %5 = load i16, i16* %4, align 2, !dbg !4381
  %conv = zext i16 %5 to i32, !dbg !4381
  %cmp = icmp sge i32 %conv, 97, !dbg !4382
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !4383

land.lhs.true:                                    ; preds = %while.body
  %6 = load i16*, i16** %psz1, align 8, !dbg !4384
  %7 = load i16, i16* %6, align 2, !dbg !4385
  %conv2 = zext i16 %7 to i32, !dbg !4385
  %cmp3 = icmp sle i32 %conv2, 122, !dbg !4386
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !4387

if.then4:                                         ; preds = %land.lhs.true
  %8 = load i16*, i16** %psz1, align 8, !dbg !4388
  %9 = load i16, i16* %8, align 2, !dbg !4389
  %conv5 = zext i16 %9 to i32, !dbg !4389
  %sub = sub nsw i32 %conv5, 97, !dbg !4390
  %add = add nsw i32 %sub, 65, !dbg !4391
  %conv6 = trunc i32 %add to i16, !dbg !4389
  %10 = load i16*, i16** %psz1, align 8, !dbg !4392
  store i16 %conv6, i16* %10, align 2, !dbg !4393
  br label %if.end7, !dbg !4394

if.end7:                                          ; preds = %if.then4, %land.lhs.true, %while.body
  %11 = load i16*, i16** %psz1, align 8, !dbg !4395
  %incdec.ptr = getelementptr inbounds i16, i16* %11, i32 1, !dbg !4395
  store i16* %incdec.ptr, i16** %psz1, align 8, !dbg !4395
  br label %while.cond, !dbg !4375, !llvm.loop !4396

while.end:                                        ; preds = %if.then, %while.cond
  ret void, !dbg !4398
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN11xercesc_2_79XMLString9lowerCaseEPt(i16* %toLowerCase) #3 align 2 !dbg !4399 {
entry:
  %toLowerCase.addr = alloca i16*, align 8
  store i16* %toLowerCase, i16** %toLowerCase.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toLowerCase.addr, metadata !4400, metadata !DIExpression()), !dbg !4401
  %0 = load %"class.xercesc_2_7::XMLTransService"*, %"class.xercesc_2_7::XMLTransService"** @_ZN11xercesc_2_716XMLPlatformUtils14fgTransServiceE, align 8, !dbg !4402
  %1 = load i16*, i16** %toLowerCase.addr, align 8, !dbg !4403
  %2 = bitcast %"class.xercesc_2_7::XMLTransService"* %0 to void (%"class.xercesc_2_7::XMLTransService"*, i16*)***, !dbg !4404
  %vtable = load void (%"class.xercesc_2_7::XMLTransService"*, i16*)**, void (%"class.xercesc_2_7::XMLTransService"*, i16*)*** %2, align 8, !dbg !4404
  %vfn = getelementptr inbounds void (%"class.xercesc_2_7::XMLTransService"*, i16*)*, void (%"class.xercesc_2_7::XMLTransService"*, i16*)** %vtable, i64 9, !dbg !4404
  %3 = load void (%"class.xercesc_2_7::XMLTransService"*, i16*)*, void (%"class.xercesc_2_7::XMLTransService"*, i16*)** %vfn, align 8, !dbg !4404
  call void %3(%"class.xercesc_2_7::XMLTransService"* %0, i16* %1), !dbg !4404
  ret void, !dbg !4405
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN11xercesc_2_79XMLString14lowerCaseASCIIEPt(i16* %toLowerCase) #1 align 2 !dbg !4406 {
entry:
  %toLowerCase.addr = alloca i16*, align 8
  %psz1 = alloca i16*, align 8
  store i16* %toLowerCase, i16** %toLowerCase.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toLowerCase.addr, metadata !4407, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.declare(metadata i16** %psz1, metadata !4409, metadata !DIExpression()), !dbg !4410
  %0 = load i16*, i16** %toLowerCase.addr, align 8, !dbg !4411
  store i16* %0, i16** %psz1, align 8, !dbg !4410
  %1 = load i16*, i16** %psz1, align 8, !dbg !4412
  %tobool = icmp ne i16* %1, null, !dbg !4412
  br i1 %tobool, label %if.end, label %if.then, !dbg !4414

if.then:                                          ; preds = %entry
  br label %while.end, !dbg !4415

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !4416

while.cond:                                       ; preds = %if.end7, %if.end
  %2 = load i16*, i16** %psz1, align 8, !dbg !4417
  %3 = load i16, i16* %2, align 2, !dbg !4418
  %tobool1 = icmp ne i16 %3, 0, !dbg !4418
  br i1 %tobool1, label %while.body, label %while.end, !dbg !4416

while.body:                                       ; preds = %while.cond
  %4 = load i16*, i16** %psz1, align 8, !dbg !4419
  %5 = load i16, i16* %4, align 2, !dbg !4422
  %conv = zext i16 %5 to i32, !dbg !4422
  %cmp = icmp sge i32 %conv, 65, !dbg !4423
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !4424

land.lhs.true:                                    ; preds = %while.body
  %6 = load i16*, i16** %psz1, align 8, !dbg !4425
  %7 = load i16, i16* %6, align 2, !dbg !4426
  %conv2 = zext i16 %7 to i32, !dbg !4426
  %cmp3 = icmp sle i32 %conv2, 90, !dbg !4427
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !4428

if.then4:                                         ; preds = %land.lhs.true
  %8 = load i16*, i16** %psz1, align 8, !dbg !4429
  %9 = load i16, i16* %8, align 2, !dbg !4430
  %conv5 = zext i16 %9 to i32, !dbg !4430
  %sub = sub nsw i32 %conv5, 65, !dbg !4431
  %add = add nsw i32 %sub, 97, !dbg !4432
  %conv6 = trunc i32 %add to i16, !dbg !4430
  %10 = load i16*, i16** %psz1, align 8, !dbg !4433
  store i16 %conv6, i16* %10, align 2, !dbg !4434
  br label %if.end7, !dbg !4435

if.end7:                                          ; preds = %if.then4, %land.lhs.true, %while.body
  %11 = load i16*, i16** %psz1, align 8, !dbg !4436
  %incdec.ptr = getelementptr inbounds i16, i16* %11, i32 1, !dbg !4436
  store i16* %incdec.ptr, i16** %psz1, align 8, !dbg !4436
  br label %while.cond, !dbg !4416, !llvm.loop !4437

while.end:                                        ; preds = %if.then, %while.cond
  ret void, !dbg !4439
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN11xercesc_2_79XMLString9subStringEPtPKtiiPNS_13MemoryManagerE(i16* %targetStr, i16* %srcStr, i32 %startIndex, i32 %endIndex, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 !dbg !4440 {
entry:
  %targetStr.addr = alloca i16*, align 8
  %srcStr.addr = alloca i16*, align 8
  %startIndex.addr = alloca i32, align 4
  %endIndex.addr = alloca i32, align 4
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  store i16* %targetStr, i16** %targetStr.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %targetStr.addr, metadata !4441, metadata !DIExpression()), !dbg !4442
  store i16* %srcStr, i16** %srcStr.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %srcStr.addr, metadata !4443, metadata !DIExpression()), !dbg !4444
  store i32 %startIndex, i32* %startIndex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %startIndex.addr, metadata !4445, metadata !DIExpression()), !dbg !4446
  store i32 %endIndex, i32* %endIndex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %endIndex.addr, metadata !4447, metadata !DIExpression()), !dbg !4448
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !4449, metadata !DIExpression()), !dbg !4450
  %0 = load i16*, i16** %targetStr.addr, align 8, !dbg !4451
  %1 = load i16*, i16** %srcStr.addr, align 8, !dbg !4452
  %2 = load i32, i32* %startIndex.addr, align 4, !dbg !4453
  %3 = load i32, i32* %endIndex.addr, align 4, !dbg !4454
  %4 = load i16*, i16** %srcStr.addr, align 8, !dbg !4455
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %4), !dbg !4456
  %5 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4457
  call void @_ZN11xercesc_2_79XMLString9subStringEPtPKtiiiPNS_13MemoryManagerE(i16* %0, i16* %1, i32 %2, i32 %3, i32 %call, %"class.xercesc_2_7::MemoryManager"* %5), !dbg !4458
  ret void, !dbg !4459
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN11xercesc_2_79XMLString9subStringEPtPKtiiiPNS_13MemoryManagerE(i16* %targetStr, i16* %srcStr, i32 %startIndex, i32 %endIndex, i32 %srcStrLength, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !4460 {
entry:
  %targetStr.addr = alloca i16*, align 8
  %srcStr.addr = alloca i16*, align 8
  %startIndex.addr = alloca i32, align 4
  %endIndex.addr = alloca i32, align 4
  %srcStrLength.addr = alloca i32, align 4
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %copySize = alloca i32, align 4
  %i = alloca i32, align 4
  store i16* %targetStr, i16** %targetStr.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %targetStr.addr, metadata !4461, metadata !DIExpression()), !dbg !4462
  store i16* %srcStr, i16** %srcStr.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %srcStr.addr, metadata !4463, metadata !DIExpression()), !dbg !4464
  store i32 %startIndex, i32* %startIndex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %startIndex.addr, metadata !4465, metadata !DIExpression()), !dbg !4466
  store i32 %endIndex, i32* %endIndex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %endIndex.addr, metadata !4467, metadata !DIExpression()), !dbg !4468
  store i32 %srcStrLength, i32* %srcStrLength.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srcStrLength.addr, metadata !4469, metadata !DIExpression()), !dbg !4470
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !4471, metadata !DIExpression()), !dbg !4472
  %0 = load i16*, i16** %targetStr.addr, align 8, !dbg !4473
  %cmp = icmp eq i16* %0, null, !dbg !4475
  br i1 %cmp, label %if.then, label %if.end, !dbg !4476

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !4477
  %1 = bitcast i8* %exception to %"class.xercesc_2_7::IllegalArgumentException"*, !dbg !4477
  %2 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4477
  invoke void @_ZN11xercesc_2_724IllegalArgumentExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::IllegalArgumentException"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1522, i32 81, %"class.xercesc_2_7::MemoryManager"* %2)
          to label %invoke.cont unwind label %lpad, !dbg !4477

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_724IllegalArgumentExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::IllegalArgumentException"*)* @_ZN11xercesc_2_724IllegalArgumentExceptionD2Ev to i8*)) #14, !dbg !4477
  unreachable, !dbg !4477

lpad:                                             ; preds = %if.then
  %3 = landingpad { i8*, i32 }
          cleanup, !dbg !4478
  %4 = extractvalue { i8*, i32 } %3, 0, !dbg !4478
  store i8* %4, i8** %exn.slot, align 8, !dbg !4478
  %5 = extractvalue { i8*, i32 } %3, 1, !dbg !4478
  store i32 %5, i32* %ehselector.slot, align 4, !dbg !4478
  call void @__cxa_free_exception(i8* %exception) #12, !dbg !4477
  br label %eh.resume, !dbg !4477

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %copySize, metadata !4479, metadata !DIExpression()), !dbg !4480
  %6 = load i32, i32* %endIndex.addr, align 4, !dbg !4481
  %7 = load i32, i32* %startIndex.addr, align 4, !dbg !4482
  %sub = sub nsw i32 %6, %7, !dbg !4483
  store i32 %sub, i32* %copySize, align 4, !dbg !4480
  %8 = load i32, i32* %startIndex.addr, align 4, !dbg !4484
  %cmp1 = icmp slt i32 %8, 0, !dbg !4486
  br i1 %cmp1, label %if.then5, label %lor.lhs.false, !dbg !4487

lor.lhs.false:                                    ; preds = %if.end
  %9 = load i32, i32* %startIndex.addr, align 4, !dbg !4488
  %10 = load i32, i32* %endIndex.addr, align 4, !dbg !4489
  %cmp2 = icmp sgt i32 %9, %10, !dbg !4490
  br i1 %cmp2, label %if.then5, label %lor.lhs.false3, !dbg !4491

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %11 = load i32, i32* %endIndex.addr, align 4, !dbg !4492
  %12 = load i32, i32* %srcStrLength.addr, align 4, !dbg !4493
  %cmp4 = icmp sgt i32 %11, %12, !dbg !4494
  br i1 %cmp4, label %if.then5, label %if.end9, !dbg !4495

if.then5:                                         ; preds = %lor.lhs.false3, %lor.lhs.false, %if.end
  %exception6 = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !4496
  %13 = bitcast i8* %exception6 to %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, !dbg !4496
  %14 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4496
  invoke void @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1528, i32 84, %"class.xercesc_2_7::MemoryManager"* %14)
          to label %invoke.cont8 unwind label %lpad7, !dbg !4496

invoke.cont8:                                     ; preds = %if.then5
  call void @__cxa_throw(i8* %exception6, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*)* @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionD2Ev to i8*)) #14, !dbg !4496
  unreachable, !dbg !4496

lpad7:                                            ; preds = %if.then5
  %15 = landingpad { i8*, i32 }
          cleanup, !dbg !4497
  %16 = extractvalue { i8*, i32 } %15, 0, !dbg !4497
  store i8* %16, i8** %exn.slot, align 8, !dbg !4497
  %17 = extractvalue { i8*, i32 } %15, 1, !dbg !4497
  store i32 %17, i32* %ehselector.slot, align 4, !dbg !4497
  call void @__cxa_free_exception(i8* %exception6) #12, !dbg !4496
  br label %eh.resume, !dbg !4496

if.end9:                                          ; preds = %lor.lhs.false3
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4498, metadata !DIExpression()), !dbg !4500
  %18 = load i32, i32* %startIndex.addr, align 4, !dbg !4501
  store i32 %18, i32* %i, align 4, !dbg !4500
  br label %for.cond, !dbg !4502

for.cond:                                         ; preds = %for.inc, %if.end9
  %19 = load i32, i32* %i, align 4, !dbg !4503
  %20 = load i32, i32* %endIndex.addr, align 4, !dbg !4505
  %cmp10 = icmp slt i32 %19, %20, !dbg !4506
  br i1 %cmp10, label %for.body, label %for.end, !dbg !4507

for.body:                                         ; preds = %for.cond
  %21 = load i16*, i16** %srcStr.addr, align 8, !dbg !4508
  %22 = load i32, i32* %i, align 4, !dbg !4510
  %idxprom = sext i32 %22 to i64, !dbg !4508
  %arrayidx = getelementptr inbounds i16, i16* %21, i64 %idxprom, !dbg !4508
  %23 = load i16, i16* %arrayidx, align 2, !dbg !4508
  %24 = load i16*, i16** %targetStr.addr, align 8, !dbg !4511
  %25 = load i32, i32* %i, align 4, !dbg !4512
  %26 = load i32, i32* %startIndex.addr, align 4, !dbg !4513
  %sub11 = sub nsw i32 %25, %26, !dbg !4514
  %idxprom12 = sext i32 %sub11 to i64, !dbg !4511
  %arrayidx13 = getelementptr inbounds i16, i16* %24, i64 %idxprom12, !dbg !4511
  store i16 %23, i16* %arrayidx13, align 2, !dbg !4515
  br label %for.inc, !dbg !4516

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %i, align 4, !dbg !4517
  %inc = add nsw i32 %27, 1, !dbg !4517
  store i32 %inc, i32* %i, align 4, !dbg !4517
  br label %for.cond, !dbg !4518, !llvm.loop !4519

for.end:                                          ; preds = %for.cond
  %28 = load i16*, i16** %targetStr.addr, align 8, !dbg !4521
  %29 = load i32, i32* %copySize, align 4, !dbg !4522
  %idxprom14 = sext i32 %29 to i64, !dbg !4521
  %arrayidx15 = getelementptr inbounds i16, i16* %28, i64 %idxprom14, !dbg !4521
  store i16 0, i16* %arrayidx15, align 2, !dbg !4523
  ret void, !dbg !4524

eh.resume:                                        ; preds = %lpad7, %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !4477
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !4477
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !4477
  %lpad.val16 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !4477
  resume { i8*, i32 } %lpad.val16, !dbg !4477
}

; Function Attrs: noinline uwtable
define dso_local %"class.xercesc_2_7::BaseRefVectorOf"* @_ZN11xercesc_2_79XMLString14tokenizeStringEPKtPNS_13MemoryManagerE(i16* %tokenizeSrc, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !4525 {
entry:
  %tokenizeSrc.addr = alloca i16*, align 8
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %orgText = alloca i16*, align 8
  %janText = alloca %"class.xercesc_2_7::ArrayJanitor", align 8
  %tokenizeStr = alloca i16*, align 8
  %tokenStack = alloca %"class.xercesc_2_7::RefArrayVectorOf"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %len = alloca i32, align 4
  %skip = alloca i32, align 4
  %index = alloca i32, align 4
  %token = alloca i16*, align 8
  store i16* %tokenizeSrc, i16** %tokenizeSrc.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %tokenizeSrc.addr, metadata !4526, metadata !DIExpression()), !dbg !4527
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !4528, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.declare(metadata i16** %orgText, metadata !4530, metadata !DIExpression()), !dbg !4531
  %0 = load i16*, i16** %tokenizeSrc.addr, align 8, !dbg !4532
  %1 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4533
  %call = call i16* @_ZN11xercesc_2_79XMLString9replicateEPKtPNS_13MemoryManagerE(i16* %0, %"class.xercesc_2_7::MemoryManager"* %1), !dbg !4534
  store i16* %call, i16** %orgText, align 8, !dbg !4531
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::ArrayJanitor"* %janText, metadata !4535, metadata !DIExpression()), !dbg !4536
  %2 = load i16*, i16** %orgText, align 8, !dbg !4537
  %3 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4538
  call void @_ZN11xercesc_2_712ArrayJanitorItEC2EPtPNS_13MemoryManagerE(%"class.xercesc_2_7::ArrayJanitor"* %janText, i16* %2, %"class.xercesc_2_7::MemoryManager"* %3), !dbg !4536
  call void @llvm.dbg.declare(metadata i16** %tokenizeStr, metadata !4539, metadata !DIExpression()), !dbg !4540
  %4 = load i16*, i16** %orgText, align 8, !dbg !4541
  store i16* %4, i16** %tokenizeStr, align 8, !dbg !4540
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::RefArrayVectorOf"** %tokenStack, metadata !4542, metadata !DIExpression()), !dbg !4573
  %5 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4574
  %call1 = invoke i8* @_ZN11xercesc_2_77XMemorynwEmPNS_13MemoryManagerE(i64 40, %"class.xercesc_2_7::MemoryManager"* %5)
          to label %invoke.cont unwind label %lpad, !dbg !4575

invoke.cont:                                      ; preds = %entry
  %6 = bitcast i8* %call1 to %"class.xercesc_2_7::RefArrayVectorOf"*, !dbg !4575
  %7 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4576
  invoke void @_ZN11xercesc_2_716RefArrayVectorOfItEC2EjbPNS_13MemoryManagerE(%"class.xercesc_2_7::RefArrayVectorOf"* %6, i32 16, i1 zeroext true, %"class.xercesc_2_7::MemoryManager"* %7)
          to label %invoke.cont3 unwind label %lpad2, !dbg !4577

invoke.cont3:                                     ; preds = %invoke.cont
  store %"class.xercesc_2_7::RefArrayVectorOf"* %6, %"class.xercesc_2_7::RefArrayVectorOf"** %tokenStack, align 8, !dbg !4573
  call void @llvm.dbg.declare(metadata i32* %len, metadata !4578, metadata !DIExpression()), !dbg !4579
  %8 = load i16*, i16** %tokenizeStr, align 8, !dbg !4580
  %call5 = invoke i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %8)
          to label %invoke.cont4 unwind label %lpad, !dbg !4581

invoke.cont4:                                     ; preds = %invoke.cont3
  store i32 %call5, i32* %len, align 4, !dbg !4579
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !4582, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4584, metadata !DIExpression()), !dbg !4585
  store i32 0, i32* %index, align 4, !dbg !4585
  br label %while.cond, !dbg !4586

while.cond:                                       ; preds = %invoke.cont27, %invoke.cont4
  %9 = load i32, i32* %index, align 4, !dbg !4587
  %10 = load i32, i32* %len, align 4, !dbg !4588
  %cmp = icmp ne i32 %9, %10, !dbg !4589
  br i1 %cmp, label %while.body, label %while.end, !dbg !4586

while.body:                                       ; preds = %while.cond
  %11 = load i32, i32* %index, align 4, !dbg !4590
  store i32 %11, i32* %skip, align 4, !dbg !4593
  br label %for.cond, !dbg !4594

for.cond:                                         ; preds = %for.inc, %while.body
  %12 = load i32, i32* %skip, align 4, !dbg !4595
  %13 = load i32, i32* %len, align 4, !dbg !4597
  %cmp6 = icmp ult i32 %12, %13, !dbg !4598
  br i1 %cmp6, label %for.body, label %for.end, !dbg !4599

for.body:                                         ; preds = %for.cond
  %14 = load i16*, i16** %tokenizeStr, align 8, !dbg !4600
  %15 = load i32, i32* %skip, align 4, !dbg !4603
  %idxprom = zext i32 %15 to i64, !dbg !4600
  %arrayidx = getelementptr inbounds i16, i16* %14, i64 %idxprom, !dbg !4600
  %16 = load i16, i16* %arrayidx, align 2, !dbg !4600
  %call8 = invoke zeroext i1 @_ZN11xercesc_2_710XMLChar1_012isWhitespaceEt(i16 zeroext %16)
          to label %invoke.cont7 unwind label %lpad, !dbg !4604

invoke.cont7:                                     ; preds = %for.body
  br i1 %call8, label %if.end, label %if.then, !dbg !4605

if.then:                                          ; preds = %invoke.cont7
  br label %for.end, !dbg !4606

lpad:                                             ; preds = %invoke.cont26, %invoke.cont24, %if.end23, %for.body11, %for.body, %invoke.cont3, %entry
  %17 = landingpad { i8*, i32 }
          cleanup, !dbg !4607
  %18 = extractvalue { i8*, i32 } %17, 0, !dbg !4607
  store i8* %18, i8** %exn.slot, align 8, !dbg !4607
  %19 = extractvalue { i8*, i32 } %17, 1, !dbg !4607
  store i32 %19, i32* %ehselector.slot, align 4, !dbg !4607
  br label %ehcleanup, !dbg !4607

lpad2:                                            ; preds = %invoke.cont
  %20 = landingpad { i8*, i32 }
          cleanup, !dbg !4607
  %21 = extractvalue { i8*, i32 } %20, 0, !dbg !4607
  store i8* %21, i8** %exn.slot, align 8, !dbg !4607
  %22 = extractvalue { i8*, i32 } %20, 1, !dbg !4607
  store i32 %22, i32* %ehselector.slot, align 4, !dbg !4607
  call void @_ZN11xercesc_2_77XMemorydlEPvPNS_13MemoryManagerE(i8* %call1, %"class.xercesc_2_7::MemoryManager"* %5) #12, !dbg !4575
  br label %ehcleanup, !dbg !4575

if.end:                                           ; preds = %invoke.cont7
  br label %for.inc, !dbg !4608

for.inc:                                          ; preds = %if.end
  %23 = load i32, i32* %skip, align 4, !dbg !4609
  %inc = add i32 %23, 1, !dbg !4609
  store i32 %inc, i32* %skip, align 4, !dbg !4609
  br label %for.cond, !dbg !4610, !llvm.loop !4611

for.end:                                          ; preds = %if.then, %for.cond
  %24 = load i32, i32* %skip, align 4, !dbg !4613
  store i32 %24, i32* %index, align 4, !dbg !4614
  br label %for.cond9, !dbg !4615

for.cond9:                                        ; preds = %for.inc18, %for.end
  %25 = load i32, i32* %skip, align 4, !dbg !4616
  %26 = load i32, i32* %len, align 4, !dbg !4619
  %cmp10 = icmp ult i32 %25, %26, !dbg !4620
  br i1 %cmp10, label %for.body11, label %for.end20, !dbg !4621

for.body11:                                       ; preds = %for.cond9
  %27 = load i16*, i16** %tokenizeStr, align 8, !dbg !4622
  %28 = load i32, i32* %skip, align 4, !dbg !4625
  %idxprom12 = zext i32 %28 to i64, !dbg !4622
  %arrayidx13 = getelementptr inbounds i16, i16* %27, i64 %idxprom12, !dbg !4622
  %29 = load i16, i16* %arrayidx13, align 2, !dbg !4622
  %call15 = invoke zeroext i1 @_ZN11xercesc_2_710XMLChar1_012isWhitespaceEt(i16 zeroext %29)
          to label %invoke.cont14 unwind label %lpad, !dbg !4626

invoke.cont14:                                    ; preds = %for.body11
  br i1 %call15, label %if.then16, label %if.end17, !dbg !4627

if.then16:                                        ; preds = %invoke.cont14
  br label %for.end20, !dbg !4628

if.end17:                                         ; preds = %invoke.cont14
  br label %for.inc18, !dbg !4629

for.inc18:                                        ; preds = %if.end17
  %30 = load i32, i32* %skip, align 4, !dbg !4630
  %inc19 = add i32 %30, 1, !dbg !4630
  store i32 %inc19, i32* %skip, align 4, !dbg !4630
  br label %for.cond9, !dbg !4631, !llvm.loop !4632

for.end20:                                        ; preds = %if.then16, %for.cond9
  %31 = load i32, i32* %skip, align 4, !dbg !4634
  %32 = load i32, i32* %index, align 4, !dbg !4636
  %cmp21 = icmp eq i32 %31, %32, !dbg !4637
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !4638

if.then22:                                        ; preds = %for.end20
  br label %while.end, !dbg !4639

if.end23:                                         ; preds = %for.end20
  call void @llvm.dbg.declare(metadata i16** %token, metadata !4640, metadata !DIExpression()), !dbg !4641
  %33 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4642
  %34 = load i32, i32* %skip, align 4, !dbg !4643
  %add = add i32 %34, 1, !dbg !4644
  %35 = load i32, i32* %index, align 4, !dbg !4645
  %sub = sub i32 %add, %35, !dbg !4646
  %conv = zext i32 %sub to i64, !dbg !4647
  %mul = mul i64 %conv, 2, !dbg !4648
  %36 = bitcast %"class.xercesc_2_7::MemoryManager"* %33 to i8* (%"class.xercesc_2_7::MemoryManager"*, i64)***, !dbg !4649
  %vtable = load i8* (%"class.xercesc_2_7::MemoryManager"*, i64)**, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*** %36, align 8, !dbg !4649
  %vfn = getelementptr inbounds i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)** %vtable, i64 2, !dbg !4649
  %37 = load i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)** %vfn, align 8, !dbg !4649
  %call25 = invoke i8* %37(%"class.xercesc_2_7::MemoryManager"* %33, i64 %mul)
          to label %invoke.cont24 unwind label %lpad, !dbg !4649

invoke.cont24:                                    ; preds = %if.end23
  %38 = bitcast i8* %call25 to i16*, !dbg !4650
  store i16* %38, i16** %token, align 8, !dbg !4641
  %39 = load i16*, i16** %token, align 8, !dbg !4651
  %40 = load i16*, i16** %tokenizeStr, align 8, !dbg !4652
  %41 = load i32, i32* %index, align 4, !dbg !4653
  %42 = load i32, i32* %skip, align 4, !dbg !4654
  %43 = load i32, i32* %len, align 4, !dbg !4655
  %44 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4656
  invoke void @_ZN11xercesc_2_79XMLString9subStringEPtPKtiiiPNS_13MemoryManagerE(i16* %39, i16* %40, i32 %41, i32 %42, i32 %43, %"class.xercesc_2_7::MemoryManager"* %44)
          to label %invoke.cont26 unwind label %lpad, !dbg !4657

invoke.cont26:                                    ; preds = %invoke.cont24
  %45 = load %"class.xercesc_2_7::RefArrayVectorOf"*, %"class.xercesc_2_7::RefArrayVectorOf"** %tokenStack, align 8, !dbg !4658
  %46 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %45 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !4659
  %47 = load i16*, i16** %token, align 8, !dbg !4660
  invoke void @_ZN11xercesc_2_715BaseRefVectorOfItE10addElementEPt(%"class.xercesc_2_7::BaseRefVectorOf"* %46, i16* %47)
          to label %invoke.cont27 unwind label %lpad, !dbg !4659

invoke.cont27:                                    ; preds = %invoke.cont26
  %48 = load i32, i32* %skip, align 4, !dbg !4661
  store i32 %48, i32* %index, align 4, !dbg !4662
  br label %while.cond, !dbg !4586, !llvm.loop !4663

while.end:                                        ; preds = %if.then22, %while.cond
  %49 = load %"class.xercesc_2_7::RefArrayVectorOf"*, %"class.xercesc_2_7::RefArrayVectorOf"** %tokenStack, align 8, !dbg !4665
  %50 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %49 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !4665
  call void @_ZN11xercesc_2_712ArrayJanitorItED2Ev(%"class.xercesc_2_7::ArrayJanitor"* %janText) #12, !dbg !4607
  ret %"class.xercesc_2_7::BaseRefVectorOf"* %50, !dbg !4607

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZN11xercesc_2_712ArrayJanitorItED2Ev(%"class.xercesc_2_7::ArrayJanitor"* %janText) #12, !dbg !4607
  br label %eh.resume, !dbg !4607

eh.resume:                                        ; preds = %ehcleanup
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !4607
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !4607
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !4607
  %lpad.val28 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !4607
  resume { i8*, i32 } %lpad.val28, !dbg !4607
}

declare dso_local i8* @_ZN11xercesc_2_77XMemorynwEmPNS_13MemoryManagerE(i64, %"class.xercesc_2_7::MemoryManager"*) #5

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_716RefArrayVectorOfItEC2EjbPNS_13MemoryManagerE(%"class.xercesc_2_7::RefArrayVectorOf"* %this, i32 %maxElems, i1 zeroext %adoptElems, %"class.xercesc_2_7::MemoryManager"* %manager) unnamed_addr #3 comdat align 2 !dbg !4666 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::RefArrayVectorOf"*, align 8
  %maxElems.addr = alloca i32, align 4
  %adoptElems.addr = alloca i8, align 1
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  store %"class.xercesc_2_7::RefArrayVectorOf"* %this, %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, metadata !4668, metadata !DIExpression()), !dbg !4669
  store i32 %maxElems, i32* %maxElems.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxElems.addr, metadata !4670, metadata !DIExpression()), !dbg !4671
  %frombool = zext i1 %adoptElems to i8
  store i8 %frombool, i8* %adoptElems.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %adoptElems.addr, metadata !4672, metadata !DIExpression()), !dbg !4673
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !4674, metadata !DIExpression()), !dbg !4675
  %this1 = load %"class.xercesc_2_7::RefArrayVectorOf"*, %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !4676
  %1 = load i32, i32* %maxElems.addr, align 4, !dbg !4677
  %2 = load i8, i8* %adoptElems.addr, align 1, !dbg !4678
  %tobool = trunc i8 %2 to i1, !dbg !4678
  %3 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4679
  call void @_ZN11xercesc_2_715BaseRefVectorOfItEC2EjbPNS_13MemoryManagerE(%"class.xercesc_2_7::BaseRefVectorOf"* %0, i32 %1, i1 zeroext %tobool, %"class.xercesc_2_7::MemoryManager"* %3), !dbg !4680
  %4 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to i32 (...)***, !dbg !4676
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN11xercesc_2_716RefArrayVectorOfItEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8, !dbg !4676
  ret void, !dbg !4681
}

; Function Attrs: nounwind
declare dso_local void @_ZN11xercesc_2_77XMemorydlEPvPNS_13MemoryManagerE(i8*, %"class.xercesc_2_7::MemoryManager"*) #4

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_715BaseRefVectorOfItE10addElementEPt(%"class.xercesc_2_7::BaseRefVectorOf"* %this, i16* %toAdd) #3 comdat align 2 !dbg !4682 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::BaseRefVectorOf"*, align 8
  %toAdd.addr = alloca i16*, align 8
  store %"class.xercesc_2_7::BaseRefVectorOf"* %this, %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, metadata !4684, metadata !DIExpression()), !dbg !4685
  store i16* %toAdd, i16** %toAdd.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toAdd.addr, metadata !4686, metadata !DIExpression()), !dbg !4687
  %this1 = load %"class.xercesc_2_7::BaseRefVectorOf"*, %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, align 8
  call void @_ZN11xercesc_2_715BaseRefVectorOfItE19ensureExtraCapacityEj(%"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 1), !dbg !4688
  %0 = load i16*, i16** %toAdd.addr, align 8, !dbg !4689
  %fElemList = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 4, !dbg !4690
  %1 = load i16**, i16*** %fElemList, align 8, !dbg !4690
  %fCurCount = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 2, !dbg !4691
  %2 = load i32, i32* %fCurCount, align 4, !dbg !4691
  %idxprom = zext i32 %2 to i64, !dbg !4690
  %arrayidx = getelementptr inbounds i16*, i16** %1, i64 %idxprom, !dbg !4690
  store i16* %0, i16** %arrayidx, align 8, !dbg !4692
  %fCurCount2 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 2, !dbg !4693
  %3 = load i32, i32* %fCurCount2, align 4, !dbg !4694
  %inc = add i32 %3, 1, !dbg !4694
  store i32 %inc, i32* %fCurCount2, align 4, !dbg !4694
  ret void, !dbg !4695
}

; Function Attrs: noinline uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString8isInListEPKtS2_(i16* %toFind, i16* %enumList) #3 align 2 !dbg !4696 {
entry:
  %retval = alloca i1, align 1
  %toFind.addr = alloca i16*, align 8
  %enumList.addr = alloca i16*, align 8
  %listPtr = alloca i16*, align 8
  %findLen = alloca i32, align 4
  %testInd = alloca i32, align 4
  store i16* %toFind, i16** %toFind.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toFind.addr, metadata !4697, metadata !DIExpression()), !dbg !4698
  store i16* %enumList, i16** %enumList.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %enumList.addr, metadata !4699, metadata !DIExpression()), !dbg !4700
  call void @llvm.dbg.declare(metadata i16** %listPtr, metadata !4701, metadata !DIExpression()), !dbg !4702
  %0 = load i16*, i16** %enumList.addr, align 8, !dbg !4703
  store i16* %0, i16** %listPtr, align 8, !dbg !4702
  call void @llvm.dbg.declare(metadata i32* %findLen, metadata !4704, metadata !DIExpression()), !dbg !4705
  %1 = load i16*, i16** %toFind.addr, align 8, !dbg !4706
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %1), !dbg !4707
  store i32 %call, i32* %findLen, align 4, !dbg !4705
  br label %while.cond, !dbg !4708

while.cond:                                       ; preds = %if.end24, %entry
  %2 = load i16*, i16** %listPtr, align 8, !dbg !4709
  %3 = load i16, i16* %2, align 2, !dbg !4710
  %tobool = icmp ne i16 %3, 0, !dbg !4710
  br i1 %tobool, label %while.body, label %while.end26, !dbg !4708

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %testInd, metadata !4711, metadata !DIExpression()), !dbg !4713
  store i32 0, i32* %testInd, align 4, !dbg !4714
  br label %for.cond, !dbg !4716

for.cond:                                         ; preds = %for.inc, %while.body
  %4 = load i32, i32* %testInd, align 4, !dbg !4717
  %5 = load i32, i32* %findLen, align 4, !dbg !4719
  %cmp = icmp ult i32 %4, %5, !dbg !4720
  br i1 %cmp, label %for.body, label %for.end, !dbg !4721

for.body:                                         ; preds = %for.cond
  %6 = load i16*, i16** %listPtr, align 8, !dbg !4722
  %7 = load i32, i32* %testInd, align 4, !dbg !4725
  %idxprom = zext i32 %7 to i64, !dbg !4722
  %arrayidx = getelementptr inbounds i16, i16* %6, i64 %idxprom, !dbg !4722
  %8 = load i16, i16* %arrayidx, align 2, !dbg !4722
  %conv = zext i16 %8 to i32, !dbg !4722
  %9 = load i16*, i16** %toFind.addr, align 8, !dbg !4726
  %10 = load i32, i32* %testInd, align 4, !dbg !4727
  %idxprom1 = zext i32 %10 to i64, !dbg !4726
  %arrayidx2 = getelementptr inbounds i16, i16* %9, i64 %idxprom1, !dbg !4726
  %11 = load i16, i16* %arrayidx2, align 2, !dbg !4726
  %conv3 = zext i16 %11 to i32, !dbg !4726
  %cmp4 = icmp ne i32 %conv, %conv3, !dbg !4728
  br i1 %cmp4, label %if.then, label %if.end, !dbg !4729

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !4730

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4731

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %testInd, align 4, !dbg !4732
  %inc = add i32 %12, 1, !dbg !4732
  store i32 %inc, i32* %testInd, align 4, !dbg !4732
  br label %for.cond, !dbg !4733, !llvm.loop !4734

for.end:                                          ; preds = %if.then, %for.cond
  %13 = load i32, i32* %testInd, align 4, !dbg !4736
  %14 = load i32, i32* %findLen, align 4, !dbg !4738
  %cmp5 = icmp eq i32 %13, %14, !dbg !4739
  br i1 %cmp5, label %if.then6, label %if.end16, !dbg !4740

if.then6:                                         ; preds = %for.end
  %15 = load i16*, i16** %listPtr, align 8, !dbg !4741
  %16 = load i32, i32* %testInd, align 4, !dbg !4744
  %idxprom7 = zext i32 %16 to i64, !dbg !4741
  %arrayidx8 = getelementptr inbounds i16, i16* %15, i64 %idxprom7, !dbg !4741
  %17 = load i16, i16* %arrayidx8, align 2, !dbg !4741
  %conv9 = zext i16 %17 to i32, !dbg !4741
  %cmp10 = icmp eq i32 %conv9, 32, !dbg !4745
  br i1 %cmp10, label %if.then14, label %lor.lhs.false, !dbg !4746

lor.lhs.false:                                    ; preds = %if.then6
  %18 = load i16*, i16** %listPtr, align 8, !dbg !4747
  %19 = load i32, i32* %testInd, align 4, !dbg !4748
  %idxprom11 = zext i32 %19 to i64, !dbg !4747
  %arrayidx12 = getelementptr inbounds i16, i16* %18, i64 %idxprom11, !dbg !4747
  %20 = load i16, i16* %arrayidx12, align 2, !dbg !4747
  %tobool13 = icmp ne i16 %20, 0, !dbg !4747
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !4749

if.then14:                                        ; preds = %lor.lhs.false, %if.then6
  store i1 true, i1* %retval, align 1, !dbg !4750
  br label %return, !dbg !4750

if.end15:                                         ; preds = %lor.lhs.false
  br label %if.end16, !dbg !4751

if.end16:                                         ; preds = %if.end15, %for.end
  br label %while.cond17, !dbg !4752

while.cond17:                                     ; preds = %while.body21, %if.end16
  %21 = load i16*, i16** %listPtr, align 8, !dbg !4753
  %22 = load i16, i16* %21, align 2, !dbg !4754
  %conv18 = zext i16 %22 to i32, !dbg !4754
  %cmp19 = icmp ne i32 %conv18, 32, !dbg !4755
  br i1 %cmp19, label %land.rhs, label %land.end, !dbg !4756

land.rhs:                                         ; preds = %while.cond17
  %23 = load i16*, i16** %listPtr, align 8, !dbg !4757
  %24 = load i16, i16* %23, align 2, !dbg !4758
  %tobool20 = icmp ne i16 %24, 0, !dbg !4758
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond17
  %25 = phi i1 [ false, %while.cond17 ], [ %tobool20, %land.rhs ], !dbg !4759
  br i1 %25, label %while.body21, label %while.end, !dbg !4752

while.body21:                                     ; preds = %land.end
  %26 = load i16*, i16** %listPtr, align 8, !dbg !4760
  %incdec.ptr = getelementptr inbounds i16, i16* %26, i32 1, !dbg !4760
  store i16* %incdec.ptr, i16** %listPtr, align 8, !dbg !4760
  br label %while.cond17, !dbg !4752, !llvm.loop !4761

while.end:                                        ; preds = %land.end
  %27 = load i16*, i16** %listPtr, align 8, !dbg !4762
  %28 = load i16, i16* %27, align 2, !dbg !4764
  %tobool22 = icmp ne i16 %28, 0, !dbg !4764
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !4765

if.then23:                                        ; preds = %while.end
  store i1 false, i1* %retval, align 1, !dbg !4766
  br label %return, !dbg !4766

if.end24:                                         ; preds = %while.end
  %29 = load i16*, i16** %listPtr, align 8, !dbg !4767
  %incdec.ptr25 = getelementptr inbounds i16, i16* %29, i32 1, !dbg !4767
  store i16* %incdec.ptr25, i16** %listPtr, align 8, !dbg !4767
  br label %while.cond, !dbg !4708, !llvm.loop !4768

while.end26:                                      ; preds = %while.cond
  store i1 false, i1* %retval, align 1, !dbg !4770
  br label %return, !dbg !4770

return:                                           ; preds = %while.end26, %if.then23, %if.then14
  %30 = load i1, i1* %retval, align 1, !dbg !4771
  ret i1 %30, !dbg !4771
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString12isWSReplacedEPKt(i16* %toCheck) #1 align 2 !dbg !4772 {
entry:
  %retval = alloca i1, align 1
  %toCheck.addr = alloca i16*, align 8
  %startPtr = alloca i16*, align 8
  store i16* %toCheck, i16** %toCheck.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toCheck.addr, metadata !4773, metadata !DIExpression()), !dbg !4774
  %0 = load i16*, i16** %toCheck.addr, align 8, !dbg !4775
  %tobool = icmp ne i16* %0, null, !dbg !4775
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4777

lor.lhs.false:                                    ; preds = %entry
  %1 = load i16*, i16** %toCheck.addr, align 8, !dbg !4778
  %2 = load i16, i16* %1, align 2, !dbg !4779
  %tobool1 = icmp ne i16 %2, 0, !dbg !4779
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4780

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 true, i1* %retval, align 1, !dbg !4781
  br label %return, !dbg !4781

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i16** %startPtr, metadata !4782, metadata !DIExpression()), !dbg !4783
  %3 = load i16*, i16** %toCheck.addr, align 8, !dbg !4784
  store i16* %3, i16** %startPtr, align 8, !dbg !4783
  br label %while.cond, !dbg !4785

while.cond:                                       ; preds = %if.end10, %if.end
  %4 = load i16*, i16** %startPtr, align 8, !dbg !4786
  %5 = load i16, i16* %4, align 2, !dbg !4787
  %tobool2 = icmp ne i16 %5, 0, !dbg !4787
  br i1 %tobool2, label %while.body, label %while.end, !dbg !4785

while.body:                                       ; preds = %while.cond
  %6 = load i16*, i16** %startPtr, align 8, !dbg !4788
  %7 = load i16, i16* %6, align 2, !dbg !4791
  %conv = zext i16 %7 to i32, !dbg !4791
  %cmp = icmp eq i32 %conv, 13, !dbg !4792
  br i1 %cmp, label %if.then9, label %lor.lhs.false3, !dbg !4793

lor.lhs.false3:                                   ; preds = %while.body
  %8 = load i16*, i16** %startPtr, align 8, !dbg !4794
  %9 = load i16, i16* %8, align 2, !dbg !4795
  %conv4 = zext i16 %9 to i32, !dbg !4795
  %cmp5 = icmp eq i32 %conv4, 10, !dbg !4796
  br i1 %cmp5, label %if.then9, label %lor.lhs.false6, !dbg !4797

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %10 = load i16*, i16** %startPtr, align 8, !dbg !4798
  %11 = load i16, i16* %10, align 2, !dbg !4799
  %conv7 = zext i16 %11 to i32, !dbg !4799
  %cmp8 = icmp eq i32 %conv7, 9, !dbg !4800
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !4801

if.then9:                                         ; preds = %lor.lhs.false6, %lor.lhs.false3, %while.body
  store i1 false, i1* %retval, align 1, !dbg !4802
  br label %return, !dbg !4802

if.end10:                                         ; preds = %lor.lhs.false6
  %12 = load i16*, i16** %startPtr, align 8, !dbg !4803
  %incdec.ptr = getelementptr inbounds i16, i16* %12, i32 1, !dbg !4803
  store i16* %incdec.ptr, i16** %startPtr, align 8, !dbg !4803
  br label %while.cond, !dbg !4785, !llvm.loop !4804

while.end:                                        ; preds = %while.cond
  store i1 true, i1* %retval, align 1, !dbg !4806
  br label %return, !dbg !4806

return:                                           ; preds = %while.end, %if.then9, %if.then
  %13 = load i1, i1* %retval, align 1, !dbg !4807
  ret i1 %13, !dbg !4807
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN11xercesc_2_79XMLString9replaceWSEPtPNS_13MemoryManagerE(i16* %toConvert, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 !dbg !4808 {
entry:
  %toConvert.addr = alloca i16*, align 8
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %strLen = alloca i32, align 4
  %retBuf = alloca i16*, align 8
  %retPtr = alloca i16*, align 8
  %startPtr = alloca i16*, align 8
  store i16* %toConvert, i16** %toConvert.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toConvert.addr, metadata !4809, metadata !DIExpression()), !dbg !4810
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !4811, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.declare(metadata i32* %strLen, metadata !4813, metadata !DIExpression()), !dbg !4814
  %0 = load i16*, i16** %toConvert.addr, align 8, !dbg !4815
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %0), !dbg !4816
  store i32 %call, i32* %strLen, align 4, !dbg !4814
  %1 = load i32, i32* %strLen, align 4, !dbg !4817
  %cmp = icmp eq i32 %1, 0, !dbg !4819
  br i1 %cmp, label %if.then, label %if.end, !dbg !4820

if.then:                                          ; preds = %entry
  br label %return, !dbg !4821

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i16** %retBuf, metadata !4822, metadata !DIExpression()), !dbg !4823
  %2 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4824
  %3 = load i32, i32* %strLen, align 4, !dbg !4825
  %add = add nsw i32 %3, 1, !dbg !4826
  %conv = sext i32 %add to i64, !dbg !4827
  %mul = mul i64 %conv, 2, !dbg !4828
  %4 = bitcast %"class.xercesc_2_7::MemoryManager"* %2 to i8* (%"class.xercesc_2_7::MemoryManager"*, i64)***, !dbg !4829
  %vtable = load i8* (%"class.xercesc_2_7::MemoryManager"*, i64)**, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*** %4, align 8, !dbg !4829
  %vfn = getelementptr inbounds i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)** %vtable, i64 2, !dbg !4829
  %5 = load i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)** %vfn, align 8, !dbg !4829
  %call1 = call i8* %5(%"class.xercesc_2_7::MemoryManager"* %2, i64 %mul), !dbg !4829
  %6 = bitcast i8* %call1 to i16*, !dbg !4830
  store i16* %6, i16** %retBuf, align 8, !dbg !4823
  call void @llvm.dbg.declare(metadata i16** %retPtr, metadata !4831, metadata !DIExpression()), !dbg !4832
  %7 = load i16*, i16** %retBuf, align 8, !dbg !4833
  %arrayidx = getelementptr inbounds i16, i16* %7, i64 0, !dbg !4833
  store i16* %arrayidx, i16** %retPtr, align 8, !dbg !4832
  call void @llvm.dbg.declare(metadata i16** %startPtr, metadata !4834, metadata !DIExpression()), !dbg !4835
  %8 = load i16*, i16** %toConvert.addr, align 8, !dbg !4836
  store i16* %8, i16** %startPtr, align 8, !dbg !4835
  br label %while.cond, !dbg !4837

while.cond:                                       ; preds = %if.end10, %if.end
  %9 = load i16*, i16** %startPtr, align 8, !dbg !4838
  %10 = load i16, i16* %9, align 2, !dbg !4839
  %tobool = icmp ne i16 %10, 0, !dbg !4839
  br i1 %tobool, label %while.body, label %while.end, !dbg !4837

while.body:                                       ; preds = %while.cond
  %11 = load i16*, i16** %startPtr, align 8, !dbg !4840
  %12 = load i16, i16* %11, align 2, !dbg !4843
  %conv2 = zext i16 %12 to i32, !dbg !4843
  %cmp3 = icmp eq i32 %conv2, 13, !dbg !4844
  br i1 %cmp3, label %if.then9, label %lor.lhs.false, !dbg !4845

lor.lhs.false:                                    ; preds = %while.body
  %13 = load i16*, i16** %startPtr, align 8, !dbg !4846
  %14 = load i16, i16* %13, align 2, !dbg !4847
  %conv4 = zext i16 %14 to i32, !dbg !4847
  %cmp5 = icmp eq i32 %conv4, 10, !dbg !4848
  br i1 %cmp5, label %if.then9, label %lor.lhs.false6, !dbg !4849

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %15 = load i16*, i16** %startPtr, align 8, !dbg !4850
  %16 = load i16, i16* %15, align 2, !dbg !4851
  %conv7 = zext i16 %16 to i32, !dbg !4851
  %cmp8 = icmp eq i32 %conv7, 9, !dbg !4852
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !4853

if.then9:                                         ; preds = %lor.lhs.false6, %lor.lhs.false, %while.body
  %17 = load i16*, i16** %retPtr, align 8, !dbg !4854
  store i16 32, i16* %17, align 2, !dbg !4855
  br label %if.end10, !dbg !4856

if.else:                                          ; preds = %lor.lhs.false6
  %18 = load i16*, i16** %startPtr, align 8, !dbg !4857
  %19 = load i16, i16* %18, align 2, !dbg !4858
  %20 = load i16*, i16** %retPtr, align 8, !dbg !4859
  store i16 %19, i16* %20, align 2, !dbg !4860
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then9
  %21 = load i16*, i16** %retPtr, align 8, !dbg !4861
  %incdec.ptr = getelementptr inbounds i16, i16* %21, i32 1, !dbg !4861
  store i16* %incdec.ptr, i16** %retPtr, align 8, !dbg !4861
  %22 = load i16*, i16** %startPtr, align 8, !dbg !4862
  %incdec.ptr11 = getelementptr inbounds i16, i16* %22, i32 1, !dbg !4862
  store i16* %incdec.ptr11, i16** %startPtr, align 8, !dbg !4862
  br label %while.cond, !dbg !4837, !llvm.loop !4863

while.end:                                        ; preds = %while.cond
  %23 = load i16*, i16** %retBuf, align 8, !dbg !4865
  %24 = load i32, i32* %strLen, align 4, !dbg !4866
  %idxprom = sext i32 %24 to i64, !dbg !4865
  %arrayidx12 = getelementptr inbounds i16, i16* %23, i64 %idxprom, !dbg !4865
  store i16 0, i16* %arrayidx12, align 2, !dbg !4867
  %25 = load i16*, i16** %toConvert.addr, align 8, !dbg !4868
  %26 = load i16*, i16** %retBuf, align 8, !dbg !4869
  %27 = load i32, i32* %strLen, align 4, !dbg !4870
  call void @_ZN11xercesc_2_79XMLString9moveCharsEPtPKtj(i16* %25, i16* %26, i32 %27), !dbg !4871
  %28 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4872
  %29 = load i16*, i16** %retBuf, align 8, !dbg !4873
  %30 = bitcast i16* %29 to i8*, !dbg !4873
  %31 = bitcast %"class.xercesc_2_7::MemoryManager"* %28 to void (%"class.xercesc_2_7::MemoryManager"*, i8*)***, !dbg !4874
  %vtable13 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)**, void (%"class.xercesc_2_7::MemoryManager"*, i8*)*** %31, align 8, !dbg !4874
  %vfn14 = getelementptr inbounds void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vtable13, i64 3, !dbg !4874
  %32 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vfn14, align 8, !dbg !4874
  call void %32(%"class.xercesc_2_7::MemoryManager"* %28, i8* %30), !dbg !4874
  br label %return, !dbg !4875

return:                                           ; preds = %while.end, %if.then
  ret void, !dbg !4876
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_79XMLString9moveCharsEPtPKtj(i16* %targetStr, i16* %srcStr, i32 %count) #1 comdat align 2 !dbg !4877 {
entry:
  %targetStr.addr = alloca i16*, align 8
  %srcStr.addr = alloca i16*, align 8
  %count.addr = alloca i32, align 4
  store i16* %targetStr, i16** %targetStr.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %targetStr.addr, metadata !4878, metadata !DIExpression()), !dbg !4879
  store i16* %srcStr, i16** %srcStr.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %srcStr.addr, metadata !4880, metadata !DIExpression()), !dbg !4881
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !4882, metadata !DIExpression()), !dbg !4883
  %0 = load i16*, i16** %targetStr.addr, align 8, !dbg !4884
  %1 = bitcast i16* %0 to i8*, !dbg !4885
  %2 = load i16*, i16** %srcStr.addr, align 8, !dbg !4886
  %3 = bitcast i16* %2 to i8*, !dbg !4885
  %4 = load i32, i32* %count.addr, align 4, !dbg !4887
  %conv = zext i32 %4 to i64, !dbg !4887
  %mul = mul i64 %conv, 2, !dbg !4888
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1, i8* align 2 %3, i64 %mul, i1 false), !dbg !4885
  ret void, !dbg !4889
}

; Function Attrs: noinline uwtable
define dso_local zeroext i1 @_ZN11xercesc_2_79XMLString13isWSCollapsedEPKt(i16* %toCheck) #3 align 2 !dbg !4890 {
entry:
  %retval = alloca i1, align 1
  %toCheck.addr = alloca i16*, align 8
  %startPtr = alloca i16*, align 8
  %theChar = alloca i16, align 2
  %inSpace = alloca i8, align 1
  store i16* %toCheck, i16** %toCheck.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toCheck.addr, metadata !4891, metadata !DIExpression()), !dbg !4892
  %0 = load i16*, i16** %toCheck.addr, align 8, !dbg !4893
  %tobool = icmp ne i16* %0, null, !dbg !4893
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4895

lor.lhs.false:                                    ; preds = %entry
  %1 = load i16*, i16** %toCheck.addr, align 8, !dbg !4896
  %2 = load i16, i16* %1, align 2, !dbg !4897
  %tobool1 = icmp ne i16 %2, 0, !dbg !4897
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4898

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 true, i1* %retval, align 1, !dbg !4899
  br label %return, !dbg !4899

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i16*, i16** %toCheck.addr, align 8, !dbg !4900
  %call = call zeroext i1 @_ZN11xercesc_2_79XMLString12isWSReplacedEPKt(i16* %3), !dbg !4902
  br i1 %call, label %if.end3, label %if.then2, !dbg !4903

if.then2:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !4904
  br label %return, !dbg !4904

if.end3:                                          ; preds = %if.end
  %4 = load i16*, i16** %toCheck.addr, align 8, !dbg !4905
  %5 = load i16, i16* %4, align 2, !dbg !4907
  %conv = zext i16 %5 to i32, !dbg !4907
  %cmp = icmp eq i32 %conv, 32, !dbg !4908
  br i1 %cmp, label %if.then8, label %lor.lhs.false4, !dbg !4909

lor.lhs.false4:                                   ; preds = %if.end3
  %6 = load i16*, i16** %toCheck.addr, align 8, !dbg !4910
  %7 = load i16*, i16** %toCheck.addr, align 8, !dbg !4911
  %call5 = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %7), !dbg !4912
  %sub = sub i32 %call5, 1, !dbg !4913
  %idxprom = zext i32 %sub to i64, !dbg !4910
  %arrayidx = getelementptr inbounds i16, i16* %6, i64 %idxprom, !dbg !4910
  %8 = load i16, i16* %arrayidx, align 2, !dbg !4910
  %conv6 = zext i16 %8 to i32, !dbg !4910
  %cmp7 = icmp eq i32 %conv6, 32, !dbg !4914
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !4915

if.then8:                                         ; preds = %lor.lhs.false4, %if.end3
  store i1 false, i1* %retval, align 1, !dbg !4916
  br label %return, !dbg !4916

if.end9:                                          ; preds = %lor.lhs.false4
  call void @llvm.dbg.declare(metadata i16** %startPtr, metadata !4917, metadata !DIExpression()), !dbg !4918
  %9 = load i16*, i16** %toCheck.addr, align 8, !dbg !4919
  store i16* %9, i16** %startPtr, align 8, !dbg !4918
  call void @llvm.dbg.declare(metadata i16* %theChar, metadata !4920, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.declare(metadata i8* %inSpace, metadata !4922, metadata !DIExpression()), !dbg !4923
  store i8 0, i8* %inSpace, align 1, !dbg !4923
  br label %while.cond, !dbg !4924

while.cond:                                       ; preds = %if.end19, %if.end9
  %10 = load i16*, i16** %startPtr, align 8, !dbg !4925
  %11 = load i16, i16* %10, align 2, !dbg !4926
  store i16 %11, i16* %theChar, align 2, !dbg !4927
  %conv10 = zext i16 %11 to i32, !dbg !4928
  %cmp11 = icmp ne i32 %conv10, 0, !dbg !4929
  br i1 %cmp11, label %while.body, label %while.end, !dbg !4924

while.body:                                       ; preds = %while.cond
  %12 = load i16, i16* %theChar, align 2, !dbg !4930
  %conv12 = zext i16 %12 to i32, !dbg !4930
  %cmp13 = icmp eq i32 %conv12, 32, !dbg !4933
  br i1 %cmp13, label %if.then14, label %if.else18, !dbg !4934

if.then14:                                        ; preds = %while.body
  %13 = load i8, i8* %inSpace, align 1, !dbg !4935
  %tobool15 = trunc i8 %13 to i1, !dbg !4935
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !4938

if.then16:                                        ; preds = %if.then14
  store i1 false, i1* %retval, align 1, !dbg !4939
  br label %return, !dbg !4939

if.else:                                          ; preds = %if.then14
  store i8 1, i8* %inSpace, align 1, !dbg !4940
  br label %if.end17

if.end17:                                         ; preds = %if.else
  br label %if.end19, !dbg !4941

if.else18:                                        ; preds = %while.body
  store i8 0, i8* %inSpace, align 1, !dbg !4942
  br label %if.end19

if.end19:                                         ; preds = %if.else18, %if.end17
  %14 = load i16*, i16** %startPtr, align 8, !dbg !4943
  %incdec.ptr = getelementptr inbounds i16, i16* %14, i32 1, !dbg !4943
  store i16* %incdec.ptr, i16** %startPtr, align 8, !dbg !4943
  br label %while.cond, !dbg !4924, !llvm.loop !4944

while.end:                                        ; preds = %while.cond
  store i1 true, i1* %retval, align 1, !dbg !4946
  br label %return, !dbg !4946

return:                                           ; preds = %while.end, %if.then16, %if.then8, %if.then2, %if.then
  %15 = load i1, i1* %retval, align 1, !dbg !4947
  ret i1 %15, !dbg !4947
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN11xercesc_2_79XMLString10collapseWSEPtPNS_13MemoryManagerE(i16* %toConvert, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 !dbg !4948 {
entry:
  %toConvert.addr = alloca i16*, align 8
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %startPtr = alloca i16*, align 8
  %endPtr = alloca i16*, align 8
  %retBuf = alloca i16*, align 8
  %retPtr = alloca i16*, align 8
  %inSpace = alloca i8, align 1
  store i16* %toConvert, i16** %toConvert.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toConvert.addr, metadata !4949, metadata !DIExpression()), !dbg !4950
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !4951, metadata !DIExpression()), !dbg !4952
  %0 = load i16*, i16** %toConvert.addr, align 8, !dbg !4953
  %tobool = icmp ne i16* %0, null, !dbg !4953
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4955

lor.lhs.false:                                    ; preds = %entry
  %1 = load i16*, i16** %toConvert.addr, align 8, !dbg !4956
  %2 = load i16, i16* %1, align 2, !dbg !4957
  %tobool1 = icmp ne i16 %2, 0, !dbg !4957
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4958

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !4959

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i16*, i16** %toConvert.addr, align 8, !dbg !4960
  %4 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4961
  call void @_ZN11xercesc_2_79XMLString9replaceWSEPtPNS_13MemoryManagerE(i16* %3, %"class.xercesc_2_7::MemoryManager"* %4), !dbg !4962
  call void @llvm.dbg.declare(metadata i16** %startPtr, metadata !4963, metadata !DIExpression()), !dbg !4964
  %5 = load i16*, i16** %toConvert.addr, align 8, !dbg !4965
  store i16* %5, i16** %startPtr, align 8, !dbg !4964
  br label %while.cond, !dbg !4966

while.cond:                                       ; preds = %while.body, %if.end
  %6 = load i16*, i16** %startPtr, align 8, !dbg !4967
  %7 = load i16, i16* %6, align 2, !dbg !4968
  %conv = zext i16 %7 to i32, !dbg !4968
  %cmp = icmp eq i32 %conv, 32, !dbg !4969
  br i1 %cmp, label %while.body, label %while.end, !dbg !4966

while.body:                                       ; preds = %while.cond
  %8 = load i16*, i16** %startPtr, align 8, !dbg !4970
  %incdec.ptr = getelementptr inbounds i16, i16* %8, i32 1, !dbg !4970
  store i16* %incdec.ptr, i16** %startPtr, align 8, !dbg !4970
  br label %while.cond, !dbg !4966, !llvm.loop !4971

while.end:                                        ; preds = %while.cond
  %9 = load i16*, i16** %startPtr, align 8, !dbg !4972
  %10 = load i16, i16* %9, align 2, !dbg !4974
  %tobool2 = icmp ne i16 %10, 0, !dbg !4974
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !4975

if.then3:                                         ; preds = %while.end
  br label %return, !dbg !4976

if.end4:                                          ; preds = %while.end
  call void @llvm.dbg.declare(metadata i16** %endPtr, metadata !4977, metadata !DIExpression()), !dbg !4978
  %11 = load i16*, i16** %toConvert.addr, align 8, !dbg !4979
  %12 = load i16*, i16** %toConvert.addr, align 8, !dbg !4980
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %12), !dbg !4981
  %idx.ext = zext i32 %call to i64, !dbg !4982
  %add.ptr = getelementptr inbounds i16, i16* %11, i64 %idx.ext, !dbg !4982
  store i16* %add.ptr, i16** %endPtr, align 8, !dbg !4978
  br label %while.cond5, !dbg !4983

while.cond5:                                      ; preds = %while.body9, %if.end4
  %13 = load i16*, i16** %endPtr, align 8, !dbg !4984
  %add.ptr6 = getelementptr inbounds i16, i16* %13, i64 -1, !dbg !4985
  %14 = load i16, i16* %add.ptr6, align 2, !dbg !4986
  %conv7 = zext i16 %14 to i32, !dbg !4986
  %cmp8 = icmp eq i32 %conv7, 32, !dbg !4987
  br i1 %cmp8, label %while.body9, label %while.end11, !dbg !4983

while.body9:                                      ; preds = %while.cond5
  %15 = load i16*, i16** %endPtr, align 8, !dbg !4988
  %incdec.ptr10 = getelementptr inbounds i16, i16* %15, i32 -1, !dbg !4988
  store i16* %incdec.ptr10, i16** %endPtr, align 8, !dbg !4988
  br label %while.cond5, !dbg !4983, !llvm.loop !4989

while.end11:                                      ; preds = %while.cond5
  call void @llvm.dbg.declare(metadata i16** %retBuf, metadata !4990, metadata !DIExpression()), !dbg !4991
  %16 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !4992
  %17 = load i16*, i16** %endPtr, align 8, !dbg !4993
  %18 = load i16*, i16** %startPtr, align 8, !dbg !4994
  %sub.ptr.lhs.cast = ptrtoint i16* %17 to i64, !dbg !4995
  %sub.ptr.rhs.cast = ptrtoint i16* %18 to i64, !dbg !4995
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4995
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !4995
  %add = add nsw i64 %sub.ptr.div, 1, !dbg !4996
  %mul = mul i64 %add, 2, !dbg !4997
  %19 = bitcast %"class.xercesc_2_7::MemoryManager"* %16 to i8* (%"class.xercesc_2_7::MemoryManager"*, i64)***, !dbg !4998
  %vtable = load i8* (%"class.xercesc_2_7::MemoryManager"*, i64)**, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*** %19, align 8, !dbg !4998
  %vfn = getelementptr inbounds i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)** %vtable, i64 2, !dbg !4998
  %20 = load i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)** %vfn, align 8, !dbg !4998
  %call12 = call i8* %20(%"class.xercesc_2_7::MemoryManager"* %16, i64 %mul), !dbg !4998
  %21 = bitcast i8* %call12 to i16*, !dbg !4999
  store i16* %21, i16** %retBuf, align 8, !dbg !4991
  call void @llvm.dbg.declare(metadata i16** %retPtr, metadata !5000, metadata !DIExpression()), !dbg !5001
  %22 = load i16*, i16** %retBuf, align 8, !dbg !5002
  %arrayidx = getelementptr inbounds i16, i16* %22, i64 0, !dbg !5002
  store i16* %arrayidx, i16** %retPtr, align 8, !dbg !5001
  call void @llvm.dbg.declare(metadata i8* %inSpace, metadata !5003, metadata !DIExpression()), !dbg !5004
  store i8 0, i8* %inSpace, align 1, !dbg !5004
  br label %while.cond13, !dbg !5005

while.cond13:                                     ; preds = %if.end25, %while.end11
  %23 = load i16*, i16** %startPtr, align 8, !dbg !5006
  %24 = load i16*, i16** %endPtr, align 8, !dbg !5007
  %cmp14 = icmp ult i16* %23, %24, !dbg !5008
  br i1 %cmp14, label %while.body15, label %while.end27, !dbg !5005

while.body15:                                     ; preds = %while.cond13
  %25 = load i16*, i16** %startPtr, align 8, !dbg !5009
  %26 = load i16, i16* %25, align 2, !dbg !5012
  %conv16 = zext i16 %26 to i32, !dbg !5012
  %cmp17 = icmp eq i32 %conv16, 32, !dbg !5013
  br i1 %cmp17, label %if.then18, label %if.else23, !dbg !5014

if.then18:                                        ; preds = %while.body15
  %27 = load i8, i8* %inSpace, align 1, !dbg !5015
  %tobool19 = trunc i8 %27 to i1, !dbg !5015
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !5018

if.then20:                                        ; preds = %if.then18
  br label %if.end22, !dbg !5019

if.else:                                          ; preds = %if.then18
  store i8 1, i8* %inSpace, align 1, !dbg !5021
  %28 = load i16*, i16** %retPtr, align 8, !dbg !5023
  store i16 32, i16* %28, align 2, !dbg !5024
  %29 = load i16*, i16** %retPtr, align 8, !dbg !5025
  %incdec.ptr21 = getelementptr inbounds i16, i16* %29, i32 1, !dbg !5025
  store i16* %incdec.ptr21, i16** %retPtr, align 8, !dbg !5025
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then20
  br label %if.end25, !dbg !5026

if.else23:                                        ; preds = %while.body15
  store i8 0, i8* %inSpace, align 1, !dbg !5027
  %30 = load i16*, i16** %startPtr, align 8, !dbg !5029
  %31 = load i16, i16* %30, align 2, !dbg !5030
  %32 = load i16*, i16** %retPtr, align 8, !dbg !5031
  store i16 %31, i16* %32, align 2, !dbg !5032
  %33 = load i16*, i16** %retPtr, align 8, !dbg !5033
  %incdec.ptr24 = getelementptr inbounds i16, i16* %33, i32 1, !dbg !5033
  store i16* %incdec.ptr24, i16** %retPtr, align 8, !dbg !5033
  br label %if.end25

if.end25:                                         ; preds = %if.else23, %if.end22
  %34 = load i16*, i16** %startPtr, align 8, !dbg !5034
  %incdec.ptr26 = getelementptr inbounds i16, i16* %34, i32 1, !dbg !5034
  store i16* %incdec.ptr26, i16** %startPtr, align 8, !dbg !5034
  br label %while.cond13, !dbg !5005, !llvm.loop !5035

while.end27:                                      ; preds = %while.cond13
  %35 = load i16*, i16** %retPtr, align 8, !dbg !5037
  store i16 0, i16* %35, align 2, !dbg !5038
  %36 = load i16*, i16** %toConvert.addr, align 8, !dbg !5039
  %37 = load i16*, i16** %retBuf, align 8, !dbg !5040
  %38 = load i16*, i16** %retBuf, align 8, !dbg !5041
  %call28 = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %38), !dbg !5042
  %add29 = add i32 %call28, 1, !dbg !5043
  call void @_ZN11xercesc_2_79XMLString9moveCharsEPtPKtj(i16* %36, i16* %37, i32 %add29), !dbg !5044
  %39 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !5045
  %40 = load i16*, i16** %retBuf, align 8, !dbg !5046
  %41 = bitcast i16* %40 to i8*, !dbg !5046
  %42 = bitcast %"class.xercesc_2_7::MemoryManager"* %39 to void (%"class.xercesc_2_7::MemoryManager"*, i8*)***, !dbg !5047
  %vtable30 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)**, void (%"class.xercesc_2_7::MemoryManager"*, i8*)*** %42, align 8, !dbg !5047
  %vfn31 = getelementptr inbounds void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vtable30, i64 3, !dbg !5047
  %43 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vfn31, align 8, !dbg !5047
  call void %43(%"class.xercesc_2_7::MemoryManager"* %39, i8* %41), !dbg !5047
  br label %return, !dbg !5048

return:                                           ; preds = %while.end27, %if.then3, %if.then
  ret void, !dbg !5049
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN11xercesc_2_79XMLString8removeWSEPtPNS_13MemoryManagerE(i16* %toConvert, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 !dbg !5050 {
entry:
  %toConvert.addr = alloca i16*, align 8
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %retBuf = alloca i16*, align 8
  %retPtr = alloca i16*, align 8
  %startPtr = alloca i16*, align 8
  store i16* %toConvert, i16** %toConvert.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toConvert.addr, metadata !5051, metadata !DIExpression()), !dbg !5052
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !5053, metadata !DIExpression()), !dbg !5054
  %0 = load i16*, i16** %toConvert.addr, align 8, !dbg !5055
  %tobool = icmp ne i16* %0, null, !dbg !5055
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5057

lor.lhs.false:                                    ; preds = %entry
  %1 = load i16*, i16** %toConvert.addr, align 8, !dbg !5058
  %2 = load i16, i16* %1, align 2, !dbg !5059
  %tobool1 = icmp ne i16 %2, 0, !dbg !5059
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5060

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !5061

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i16** %retBuf, metadata !5062, metadata !DIExpression()), !dbg !5063
  %3 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !5064
  %4 = load i16*, i16** %toConvert.addr, align 8, !dbg !5065
  %call = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %4), !dbg !5066
  %add = add i32 %call, 1, !dbg !5067
  %conv = zext i32 %add to i64, !dbg !5068
  %mul = mul i64 %conv, 2, !dbg !5069
  %5 = bitcast %"class.xercesc_2_7::MemoryManager"* %3 to i8* (%"class.xercesc_2_7::MemoryManager"*, i64)***, !dbg !5070
  %vtable = load i8* (%"class.xercesc_2_7::MemoryManager"*, i64)**, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*** %5, align 8, !dbg !5070
  %vfn = getelementptr inbounds i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)** %vtable, i64 2, !dbg !5070
  %6 = load i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)** %vfn, align 8, !dbg !5070
  %call2 = call i8* %6(%"class.xercesc_2_7::MemoryManager"* %3, i64 %mul), !dbg !5070
  %7 = bitcast i8* %call2 to i16*, !dbg !5071
  store i16* %7, i16** %retBuf, align 8, !dbg !5063
  call void @llvm.dbg.declare(metadata i16** %retPtr, metadata !5072, metadata !DIExpression()), !dbg !5073
  %8 = load i16*, i16** %retBuf, align 8, !dbg !5074
  %arrayidx = getelementptr inbounds i16, i16* %8, i64 0, !dbg !5074
  store i16* %arrayidx, i16** %retPtr, align 8, !dbg !5073
  call void @llvm.dbg.declare(metadata i16** %startPtr, metadata !5075, metadata !DIExpression()), !dbg !5076
  %9 = load i16*, i16** %toConvert.addr, align 8, !dbg !5077
  store i16* %9, i16** %startPtr, align 8, !dbg !5076
  br label %while.cond, !dbg !5078

while.cond:                                       ; preds = %if.end14, %if.end
  %10 = load i16*, i16** %startPtr, align 8, !dbg !5079
  %11 = load i16, i16* %10, align 2, !dbg !5080
  %tobool3 = icmp ne i16 %11, 0, !dbg !5080
  br i1 %tobool3, label %while.body, label %while.end, !dbg !5078

while.body:                                       ; preds = %while.cond
  %12 = load i16*, i16** %startPtr, align 8, !dbg !5081
  %13 = load i16, i16* %12, align 2, !dbg !5084
  %conv4 = zext i16 %13 to i32, !dbg !5084
  %cmp = icmp ne i32 %conv4, 13, !dbg !5085
  br i1 %cmp, label %land.lhs.true, label %if.end14, !dbg !5086

land.lhs.true:                                    ; preds = %while.body
  %14 = load i16*, i16** %startPtr, align 8, !dbg !5087
  %15 = load i16, i16* %14, align 2, !dbg !5088
  %conv5 = zext i16 %15 to i32, !dbg !5088
  %cmp6 = icmp ne i32 %conv5, 10, !dbg !5089
  br i1 %cmp6, label %land.lhs.true7, label %if.end14, !dbg !5090

land.lhs.true7:                                   ; preds = %land.lhs.true
  %16 = load i16*, i16** %startPtr, align 8, !dbg !5091
  %17 = load i16, i16* %16, align 2, !dbg !5092
  %conv8 = zext i16 %17 to i32, !dbg !5092
  %cmp9 = icmp ne i32 %conv8, 9, !dbg !5093
  br i1 %cmp9, label %land.lhs.true10, label %if.end14, !dbg !5094

land.lhs.true10:                                  ; preds = %land.lhs.true7
  %18 = load i16*, i16** %startPtr, align 8, !dbg !5095
  %19 = load i16, i16* %18, align 2, !dbg !5096
  %conv11 = zext i16 %19 to i32, !dbg !5096
  %cmp12 = icmp ne i32 %conv11, 32, !dbg !5097
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !5098

if.then13:                                        ; preds = %land.lhs.true10
  %20 = load i16*, i16** %startPtr, align 8, !dbg !5099
  %21 = load i16, i16* %20, align 2, !dbg !5101
  %22 = load i16*, i16** %retPtr, align 8, !dbg !5102
  %incdec.ptr = getelementptr inbounds i16, i16* %22, i32 1, !dbg !5102
  store i16* %incdec.ptr, i16** %retPtr, align 8, !dbg !5102
  store i16 %21, i16* %22, align 2, !dbg !5103
  br label %if.end14, !dbg !5104

if.end14:                                         ; preds = %if.then13, %land.lhs.true10, %land.lhs.true7, %land.lhs.true, %while.body
  %23 = load i16*, i16** %startPtr, align 8, !dbg !5105
  %incdec.ptr15 = getelementptr inbounds i16, i16* %23, i32 1, !dbg !5105
  store i16* %incdec.ptr15, i16** %startPtr, align 8, !dbg !5105
  br label %while.cond, !dbg !5078, !llvm.loop !5106

while.end:                                        ; preds = %while.cond
  %24 = load i16*, i16** %retPtr, align 8, !dbg !5108
  store i16 0, i16* %24, align 2, !dbg !5109
  %25 = load i16*, i16** %toConvert.addr, align 8, !dbg !5110
  %26 = load i16*, i16** %retBuf, align 8, !dbg !5111
  %27 = load i16*, i16** %retBuf, align 8, !dbg !5112
  %call16 = call i32 @_ZN11xercesc_2_79XMLString9stringLenEPKt(i16* %27), !dbg !5113
  %add17 = add i32 %call16, 1, !dbg !5114
  call void @_ZN11xercesc_2_79XMLString9moveCharsEPtPKtj(i16* %25, i16* %26, i32 %add17), !dbg !5115
  %28 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !5116
  %29 = load i16*, i16** %retBuf, align 8, !dbg !5117
  %30 = bitcast i16* %29 to i8*, !dbg !5117
  %31 = bitcast %"class.xercesc_2_7::MemoryManager"* %28 to void (%"class.xercesc_2_7::MemoryManager"*, i8*)***, !dbg !5118
  %vtable18 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)**, void (%"class.xercesc_2_7::MemoryManager"*, i8*)*** %31, align 8, !dbg !5118
  %vfn19 = getelementptr inbounds void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vtable18, i64 3, !dbg !5118
  %32 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vfn19, align 8, !dbg !5118
  call void %32(%"class.xercesc_2_7::MemoryManager"* %28, i8* %30), !dbg !5118
  br label %return, !dbg !5119

return:                                           ; preds = %while.end, %if.then
  ret void, !dbg !5120
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN11xercesc_2_79XMLString10removeCharEPKtRS1_RNS_9XMLBufferE(i16* %srcString, i16* dereferenceable(2) %toRemove, %"class.xercesc_2_7::XMLBuffer"* dereferenceable(40) %dstBuffer) #3 align 2 !dbg !5121 {
entry:
  %srcString.addr = alloca i16*, align 8
  %toRemove.addr = alloca i16*, align 8
  %dstBuffer.addr = alloca %"class.xercesc_2_7::XMLBuffer"*, align 8
  %pszSrc = alloca i16*, align 8
  %c = alloca i16, align 2
  store i16* %srcString, i16** %srcString.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %srcString.addr, metadata !5122, metadata !DIExpression()), !dbg !5123
  store i16* %toRemove, i16** %toRemove.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toRemove.addr, metadata !5124, metadata !DIExpression()), !dbg !5125
  store %"class.xercesc_2_7::XMLBuffer"* %dstBuffer, %"class.xercesc_2_7::XMLBuffer"** %dstBuffer.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::XMLBuffer"** %dstBuffer.addr, metadata !5126, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.declare(metadata i16** %pszSrc, metadata !5128, metadata !DIExpression()), !dbg !5129
  %0 = load i16*, i16** %srcString.addr, align 8, !dbg !5130
  store i16* %0, i16** %pszSrc, align 8, !dbg !5129
  call void @llvm.dbg.declare(metadata i16* %c, metadata !5131, metadata !DIExpression()), !dbg !5132
  %1 = load %"class.xercesc_2_7::XMLBuffer"*, %"class.xercesc_2_7::XMLBuffer"** %dstBuffer.addr, align 8, !dbg !5133
  call void @_ZN11xercesc_2_79XMLBuffer5resetEv(%"class.xercesc_2_7::XMLBuffer"* %1), !dbg !5134
  br label %while.cond, !dbg !5135

while.cond:                                       ; preds = %if.end, %entry
  %2 = load i16*, i16** %pszSrc, align 8, !dbg !5136
  %incdec.ptr = getelementptr inbounds i16, i16* %2, i32 1, !dbg !5136
  store i16* %incdec.ptr, i16** %pszSrc, align 8, !dbg !5136
  %3 = load i16, i16* %2, align 2, !dbg !5137
  store i16 %3, i16* %c, align 2, !dbg !5138
  %conv = zext i16 %3 to i32, !dbg !5139
  %cmp = icmp ne i32 %conv, 0, !dbg !5140
  br i1 %cmp, label %while.body, label %while.end, !dbg !5135

while.body:                                       ; preds = %while.cond
  %4 = load i16, i16* %c, align 2, !dbg !5141
  %conv1 = zext i16 %4 to i32, !dbg !5141
  %5 = load i16*, i16** %toRemove.addr, align 8, !dbg !5144
  %6 = load i16, i16* %5, align 2, !dbg !5144
  %conv2 = zext i16 %6 to i32, !dbg !5144
  %cmp3 = icmp ne i32 %conv1, %conv2, !dbg !5145
  br i1 %cmp3, label %if.then, label %if.end, !dbg !5146

if.then:                                          ; preds = %while.body
  %7 = load %"class.xercesc_2_7::XMLBuffer"*, %"class.xercesc_2_7::XMLBuffer"** %dstBuffer.addr, align 8, !dbg !5147
  %8 = load i16, i16* %c, align 2, !dbg !5148
  call void @_ZN11xercesc_2_79XMLBuffer6appendEt(%"class.xercesc_2_7::XMLBuffer"* %7, i16 zeroext %8), !dbg !5149
  br label %if.end, !dbg !5147

if.end:                                           ; preds = %if.then, %while.body
  br label %while.cond, !dbg !5135, !llvm.loop !5150

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5152
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_79XMLBuffer5resetEv(%"class.xercesc_2_7::XMLBuffer"* %this) #1 comdat align 2 !dbg !5153 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::XMLBuffer"*, align 8
  store %"class.xercesc_2_7::XMLBuffer"* %this, %"class.xercesc_2_7::XMLBuffer"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::XMLBuffer"** %this.addr, metadata !5154, metadata !DIExpression()), !dbg !5156
  %this1 = load %"class.xercesc_2_7::XMLBuffer"*, %"class.xercesc_2_7::XMLBuffer"** %this.addr, align 8
  %fIndex = getelementptr inbounds %"class.xercesc_2_7::XMLBuffer", %"class.xercesc_2_7::XMLBuffer"* %this1, i32 0, i32 0, !dbg !5157
  store i32 0, i32* %fIndex, align 8, !dbg !5158
  %fBuffer = getelementptr inbounds %"class.xercesc_2_7::XMLBuffer", %"class.xercesc_2_7::XMLBuffer"* %this1, i32 0, i32 6, !dbg !5159
  %0 = load i16*, i16** %fBuffer, align 8, !dbg !5159
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 0, !dbg !5159
  store i16 0, i16* %arrayidx, align 2, !dbg !5160
  ret void, !dbg !5161
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_79XMLBuffer6appendEt(%"class.xercesc_2_7::XMLBuffer"* %this, i16 zeroext %toAppend) #3 comdat align 2 !dbg !5162 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::XMLBuffer"*, align 8
  %toAppend.addr = alloca i16, align 2
  store %"class.xercesc_2_7::XMLBuffer"* %this, %"class.xercesc_2_7::XMLBuffer"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::XMLBuffer"** %this.addr, metadata !5163, metadata !DIExpression()), !dbg !5164
  store i16 %toAppend, i16* %toAppend.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %toAppend.addr, metadata !5165, metadata !DIExpression()), !dbg !5166
  %this1 = load %"class.xercesc_2_7::XMLBuffer"*, %"class.xercesc_2_7::XMLBuffer"** %this.addr, align 8
  %fIndex = getelementptr inbounds %"class.xercesc_2_7::XMLBuffer", %"class.xercesc_2_7::XMLBuffer"* %this1, i32 0, i32 0, !dbg !5167
  %0 = load i32, i32* %fIndex, align 8, !dbg !5167
  %fCapacity = getelementptr inbounds %"class.xercesc_2_7::XMLBuffer", %"class.xercesc_2_7::XMLBuffer"* %this1, i32 0, i32 1, !dbg !5169
  %1 = load i32, i32* %fCapacity, align 4, !dbg !5169
  %cmp = icmp eq i32 %0, %1, !dbg !5170
  br i1 %cmp, label %if.then, label %if.end, !dbg !5171

if.then:                                          ; preds = %entry
  call void @_ZN11xercesc_2_79XMLBuffer14insureCapacityEj(%"class.xercesc_2_7::XMLBuffer"* %this1, i32 1), !dbg !5172
  br label %if.end, !dbg !5172

if.end:                                           ; preds = %if.then, %entry
  %2 = load i16, i16* %toAppend.addr, align 2, !dbg !5173
  %fBuffer = getelementptr inbounds %"class.xercesc_2_7::XMLBuffer", %"class.xercesc_2_7::XMLBuffer"* %this1, i32 0, i32 6, !dbg !5174
  %3 = load i16*, i16** %fBuffer, align 8, !dbg !5174
  %fIndex2 = getelementptr inbounds %"class.xercesc_2_7::XMLBuffer", %"class.xercesc_2_7::XMLBuffer"* %this1, i32 0, i32 0, !dbg !5175
  %4 = load i32, i32* %fIndex2, align 8, !dbg !5176
  %inc = add i32 %4, 1, !dbg !5176
  store i32 %inc, i32* %fIndex2, align 8, !dbg !5176
  %idxprom = zext i32 %4 to i64, !dbg !5174
  %arrayidx = getelementptr inbounds i16, i16* %3, i64 %idxprom, !dbg !5174
  store i16 %2, i16* %arrayidx, align 2, !dbg !5177
  ret void, !dbg !5178
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN11xercesc_2_79XMLString6fixURIEPKtPt(i16* %str, i16* %target) #1 align 2 !dbg !5179 {
entry:
  %str.addr = alloca i16*, align 8
  %target.addr = alloca i16*, align 8
  %colonIdx = alloca i32, align 4
  %index = alloca i32, align 4
  %inPtr = alloca i16*, align 8
  %index33 = alloca i32, align 4
  %inPtr58 = alloca i16*, align 8
  store i16* %str, i16** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %str.addr, metadata !5180, metadata !DIExpression()), !dbg !5181
  store i16* %target, i16** %target.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %target.addr, metadata !5182, metadata !DIExpression()), !dbg !5183
  %0 = load i16*, i16** %str.addr, align 8, !dbg !5184
  %tobool = icmp ne i16* %0, null, !dbg !5184
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5186

lor.lhs.false:                                    ; preds = %entry
  %1 = load i16*, i16** %str.addr, align 8, !dbg !5187
  %2 = load i16, i16* %1, align 2, !dbg !5188
  %tobool1 = icmp ne i16 %2, 0, !dbg !5188
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5189

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end84, !dbg !5190

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %colonIdx, metadata !5191, metadata !DIExpression()), !dbg !5192
  %3 = load i16*, i16** %str.addr, align 8, !dbg !5193
  %call = call i32 @_ZN11xercesc_2_79XMLString7indexOfEPKtt(i16* %3, i16 zeroext 58), !dbg !5194
  store i32 %call, i32* %colonIdx, align 4, !dbg !5192
  %4 = load i32, i32* %colonIdx, align 4, !dbg !5195
  %cmp = icmp eq i32 %4, -1, !dbg !5197
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5198

land.lhs.true:                                    ; preds = %if.end
  %5 = load i16*, i16** %str.addr, align 8, !dbg !5199
  %call2 = call i32 @_ZN11xercesc_2_79XMLString7indexOfEPKtt(i16* %5, i16 zeroext 47), !dbg !5200
  %cmp3 = icmp eq i32 %call2, 0, !dbg !5201
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !5202

if.then4:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5203, metadata !DIExpression()), !dbg !5205
  store i32 0, i32* %index, align 4, !dbg !5205
  %6 = load i16*, i16** %target.addr, align 8, !dbg !5206
  %7 = load i32, i32* %index, align 4, !dbg !5207
  %inc = add i32 %7, 1, !dbg !5207
  store i32 %inc, i32* %index, align 4, !dbg !5207
  %idxprom = zext i32 %7 to i64, !dbg !5206
  %arrayidx = getelementptr inbounds i16, i16* %6, i64 %idxprom, !dbg !5206
  store i16 102, i16* %arrayidx, align 2, !dbg !5208
  %8 = load i16*, i16** %target.addr, align 8, !dbg !5209
  %9 = load i32, i32* %index, align 4, !dbg !5210
  %inc5 = add i32 %9, 1, !dbg !5210
  store i32 %inc5, i32* %index, align 4, !dbg !5210
  %idxprom6 = zext i32 %9 to i64, !dbg !5209
  %arrayidx7 = getelementptr inbounds i16, i16* %8, i64 %idxprom6, !dbg !5209
  store i16 105, i16* %arrayidx7, align 2, !dbg !5211
  %10 = load i16*, i16** %target.addr, align 8, !dbg !5212
  %11 = load i32, i32* %index, align 4, !dbg !5213
  %inc8 = add i32 %11, 1, !dbg !5213
  store i32 %inc8, i32* %index, align 4, !dbg !5213
  %idxprom9 = zext i32 %11 to i64, !dbg !5212
  %arrayidx10 = getelementptr inbounds i16, i16* %10, i64 %idxprom9, !dbg !5212
  store i16 108, i16* %arrayidx10, align 2, !dbg !5214
  %12 = load i16*, i16** %target.addr, align 8, !dbg !5215
  %13 = load i32, i32* %index, align 4, !dbg !5216
  %inc11 = add i32 %13, 1, !dbg !5216
  store i32 %inc11, i32* %index, align 4, !dbg !5216
  %idxprom12 = zext i32 %13 to i64, !dbg !5215
  %arrayidx13 = getelementptr inbounds i16, i16* %12, i64 %idxprom12, !dbg !5215
  store i16 101, i16* %arrayidx13, align 2, !dbg !5217
  %14 = load i16*, i16** %target.addr, align 8, !dbg !5218
  %15 = load i32, i32* %index, align 4, !dbg !5219
  %inc14 = add i32 %15, 1, !dbg !5219
  store i32 %inc14, i32* %index, align 4, !dbg !5219
  %idxprom15 = zext i32 %15 to i64, !dbg !5218
  %arrayidx16 = getelementptr inbounds i16, i16* %14, i64 %idxprom15, !dbg !5218
  store i16 58, i16* %arrayidx16, align 2, !dbg !5220
  %16 = load i16*, i16** %target.addr, align 8, !dbg !5221
  %17 = load i32, i32* %index, align 4, !dbg !5222
  %inc17 = add i32 %17, 1, !dbg !5222
  store i32 %inc17, i32* %index, align 4, !dbg !5222
  %idxprom18 = zext i32 %17 to i64, !dbg !5221
  %arrayidx19 = getelementptr inbounds i16, i16* %16, i64 %idxprom18, !dbg !5221
  store i16 47, i16* %arrayidx19, align 2, !dbg !5223
  %18 = load i16*, i16** %target.addr, align 8, !dbg !5224
  %19 = load i32, i32* %index, align 4, !dbg !5225
  %inc20 = add i32 %19, 1, !dbg !5225
  store i32 %inc20, i32* %index, align 4, !dbg !5225
  %idxprom21 = zext i32 %19 to i64, !dbg !5224
  %arrayidx22 = getelementptr inbounds i16, i16* %18, i64 %idxprom21, !dbg !5224
  store i16 47, i16* %arrayidx22, align 2, !dbg !5226
  call void @llvm.dbg.declare(metadata i16** %inPtr, metadata !5227, metadata !DIExpression()), !dbg !5228
  %20 = load i16*, i16** %str.addr, align 8, !dbg !5229
  store i16* %20, i16** %inPtr, align 8, !dbg !5228
  br label %while.cond, !dbg !5230

while.cond:                                       ; preds = %while.body, %if.then4
  %21 = load i16*, i16** %inPtr, align 8, !dbg !5231
  %22 = load i16, i16* %21, align 2, !dbg !5232
  %tobool23 = icmp ne i16 %22, 0, !dbg !5232
  br i1 %tobool23, label %while.body, label %while.end, !dbg !5230

while.body:                                       ; preds = %while.cond
  %23 = load i16*, i16** %inPtr, align 8, !dbg !5233
  %incdec.ptr = getelementptr inbounds i16, i16* %23, i32 1, !dbg !5233
  store i16* %incdec.ptr, i16** %inPtr, align 8, !dbg !5233
  %24 = load i16, i16* %23, align 2, !dbg !5234
  %25 = load i16*, i16** %target.addr, align 8, !dbg !5235
  %26 = load i32, i32* %index, align 4, !dbg !5236
  %inc24 = add i32 %26, 1, !dbg !5236
  store i32 %inc24, i32* %index, align 4, !dbg !5236
  %idxprom25 = zext i32 %26 to i64, !dbg !5235
  %arrayidx26 = getelementptr inbounds i16, i16* %25, i64 %idxprom25, !dbg !5235
  store i16 %24, i16* %arrayidx26, align 2, !dbg !5237
  br label %while.cond, !dbg !5230, !llvm.loop !5238

while.end:                                        ; preds = %while.cond
  %27 = load i16*, i16** %target.addr, align 8, !dbg !5239
  %28 = load i32, i32* %index, align 4, !dbg !5240
  %idxprom27 = zext i32 %28 to i64, !dbg !5239
  %arrayidx28 = getelementptr inbounds i16, i16* %27, i64 %idxprom27, !dbg !5239
  store i16 0, i16* %arrayidx28, align 2, !dbg !5241
  br label %if.end84, !dbg !5242

if.else:                                          ; preds = %land.lhs.true, %if.end
  %29 = load i32, i32* %colonIdx, align 4, !dbg !5243
  %cmp29 = icmp eq i32 %29, 1, !dbg !5245
  br i1 %cmp29, label %land.lhs.true30, label %if.else82, !dbg !5246

land.lhs.true30:                                  ; preds = %if.else
  %30 = load i16*, i16** %str.addr, align 8, !dbg !5247
  %31 = load i16, i16* %30, align 2, !dbg !5248
  %call31 = call zeroext i1 @_ZN11xercesc_2_79XMLString7isAlphaEt(i16 zeroext %31), !dbg !5249
  br i1 %call31, label %if.then32, label %if.else82, !dbg !5250

if.then32:                                        ; preds = %land.lhs.true30
  call void @llvm.dbg.declare(metadata i32* %index33, metadata !5251, metadata !DIExpression()), !dbg !5253
  store i32 0, i32* %index33, align 4, !dbg !5253
  %32 = load i16*, i16** %target.addr, align 8, !dbg !5254
  %33 = load i32, i32* %index33, align 4, !dbg !5255
  %inc34 = add i32 %33, 1, !dbg !5255
  store i32 %inc34, i32* %index33, align 4, !dbg !5255
  %idxprom35 = zext i32 %33 to i64, !dbg !5254
  %arrayidx36 = getelementptr inbounds i16, i16* %32, i64 %idxprom35, !dbg !5254
  store i16 102, i16* %arrayidx36, align 2, !dbg !5256
  %34 = load i16*, i16** %target.addr, align 8, !dbg !5257
  %35 = load i32, i32* %index33, align 4, !dbg !5258
  %inc37 = add i32 %35, 1, !dbg !5258
  store i32 %inc37, i32* %index33, align 4, !dbg !5258
  %idxprom38 = zext i32 %35 to i64, !dbg !5257
  %arrayidx39 = getelementptr inbounds i16, i16* %34, i64 %idxprom38, !dbg !5257
  store i16 105, i16* %arrayidx39, align 2, !dbg !5259
  %36 = load i16*, i16** %target.addr, align 8, !dbg !5260
  %37 = load i32, i32* %index33, align 4, !dbg !5261
  %inc40 = add i32 %37, 1, !dbg !5261
  store i32 %inc40, i32* %index33, align 4, !dbg !5261
  %idxprom41 = zext i32 %37 to i64, !dbg !5260
  %arrayidx42 = getelementptr inbounds i16, i16* %36, i64 %idxprom41, !dbg !5260
  store i16 108, i16* %arrayidx42, align 2, !dbg !5262
  %38 = load i16*, i16** %target.addr, align 8, !dbg !5263
  %39 = load i32, i32* %index33, align 4, !dbg !5264
  %inc43 = add i32 %39, 1, !dbg !5264
  store i32 %inc43, i32* %index33, align 4, !dbg !5264
  %idxprom44 = zext i32 %39 to i64, !dbg !5263
  %arrayidx45 = getelementptr inbounds i16, i16* %38, i64 %idxprom44, !dbg !5263
  store i16 101, i16* %arrayidx45, align 2, !dbg !5265
  %40 = load i16*, i16** %target.addr, align 8, !dbg !5266
  %41 = load i32, i32* %index33, align 4, !dbg !5267
  %inc46 = add i32 %41, 1, !dbg !5267
  store i32 %inc46, i32* %index33, align 4, !dbg !5267
  %idxprom47 = zext i32 %41 to i64, !dbg !5266
  %arrayidx48 = getelementptr inbounds i16, i16* %40, i64 %idxprom47, !dbg !5266
  store i16 58, i16* %arrayidx48, align 2, !dbg !5268
  %42 = load i16*, i16** %target.addr, align 8, !dbg !5269
  %43 = load i32, i32* %index33, align 4, !dbg !5270
  %inc49 = add i32 %43, 1, !dbg !5270
  store i32 %inc49, i32* %index33, align 4, !dbg !5270
  %idxprom50 = zext i32 %43 to i64, !dbg !5269
  %arrayidx51 = getelementptr inbounds i16, i16* %42, i64 %idxprom50, !dbg !5269
  store i16 47, i16* %arrayidx51, align 2, !dbg !5271
  %44 = load i16*, i16** %target.addr, align 8, !dbg !5272
  %45 = load i32, i32* %index33, align 4, !dbg !5273
  %inc52 = add i32 %45, 1, !dbg !5273
  store i32 %inc52, i32* %index33, align 4, !dbg !5273
  %idxprom53 = zext i32 %45 to i64, !dbg !5272
  %arrayidx54 = getelementptr inbounds i16, i16* %44, i64 %idxprom53, !dbg !5272
  store i16 47, i16* %arrayidx54, align 2, !dbg !5274
  %46 = load i16*, i16** %target.addr, align 8, !dbg !5275
  %47 = load i32, i32* %index33, align 4, !dbg !5276
  %inc55 = add i32 %47, 1, !dbg !5276
  store i32 %inc55, i32* %index33, align 4, !dbg !5276
  %idxprom56 = zext i32 %47 to i64, !dbg !5275
  %arrayidx57 = getelementptr inbounds i16, i16* %46, i64 %idxprom56, !dbg !5275
  store i16 47, i16* %arrayidx57, align 2, !dbg !5277
  call void @llvm.dbg.declare(metadata i16** %inPtr58, metadata !5278, metadata !DIExpression()), !dbg !5279
  %48 = load i16*, i16** %str.addr, align 8, !dbg !5280
  store i16* %48, i16** %inPtr58, align 8, !dbg !5279
  br label %while.cond59, !dbg !5281

while.cond59:                                     ; preds = %if.end77, %if.then32
  %49 = load i16*, i16** %inPtr58, align 8, !dbg !5282
  %50 = load i16, i16* %49, align 2, !dbg !5283
  %tobool60 = icmp ne i16 %50, 0, !dbg !5283
  br i1 %tobool60, label %while.body61, label %while.end79, !dbg !5281

while.body61:                                     ; preds = %while.cond59
  %51 = load i16*, i16** %inPtr58, align 8, !dbg !5284
  %52 = load i16, i16* %51, align 2, !dbg !5287
  %conv = zext i16 %52 to i32, !dbg !5287
  %cmp62 = icmp eq i32 %conv, 165, !dbg !5288
  br i1 %cmp62, label %if.then69, label %lor.lhs.false63, !dbg !5289

lor.lhs.false63:                                  ; preds = %while.body61
  %53 = load i16*, i16** %inPtr58, align 8, !dbg !5290
  %54 = load i16, i16* %53, align 2, !dbg !5291
  %conv64 = zext i16 %54 to i32, !dbg !5291
  %cmp65 = icmp eq i32 %conv64, 8361, !dbg !5292
  br i1 %cmp65, label %if.then69, label %lor.lhs.false66, !dbg !5293

lor.lhs.false66:                                  ; preds = %lor.lhs.false63
  %55 = load i16*, i16** %inPtr58, align 8, !dbg !5294
  %56 = load i16, i16* %55, align 2, !dbg !5295
  %conv67 = zext i16 %56 to i32, !dbg !5295
  %cmp68 = icmp eq i32 %conv67, 92, !dbg !5296
  br i1 %cmp68, label %if.then69, label %if.else73, !dbg !5297

if.then69:                                        ; preds = %lor.lhs.false66, %lor.lhs.false63, %while.body61
  %57 = load i16*, i16** %target.addr, align 8, !dbg !5298
  %58 = load i32, i32* %index33, align 4, !dbg !5299
  %inc70 = add i32 %58, 1, !dbg !5299
  store i32 %inc70, i32* %index33, align 4, !dbg !5299
  %idxprom71 = zext i32 %58 to i64, !dbg !5298
  %arrayidx72 = getelementptr inbounds i16, i16* %57, i64 %idxprom71, !dbg !5298
  store i16 47, i16* %arrayidx72, align 2, !dbg !5300
  br label %if.end77, !dbg !5298

if.else73:                                        ; preds = %lor.lhs.false66
  %59 = load i16*, i16** %inPtr58, align 8, !dbg !5301
  %60 = load i16, i16* %59, align 2, !dbg !5302
  %61 = load i16*, i16** %target.addr, align 8, !dbg !5303
  %62 = load i32, i32* %index33, align 4, !dbg !5304
  %inc74 = add i32 %62, 1, !dbg !5304
  store i32 %inc74, i32* %index33, align 4, !dbg !5304
  %idxprom75 = zext i32 %62 to i64, !dbg !5303
  %arrayidx76 = getelementptr inbounds i16, i16* %61, i64 %idxprom75, !dbg !5303
  store i16 %60, i16* %arrayidx76, align 2, !dbg !5305
  br label %if.end77

if.end77:                                         ; preds = %if.else73, %if.then69
  %63 = load i16*, i16** %inPtr58, align 8, !dbg !5306
  %incdec.ptr78 = getelementptr inbounds i16, i16* %63, i32 1, !dbg !5306
  store i16* %incdec.ptr78, i16** %inPtr58, align 8, !dbg !5306
  br label %while.cond59, !dbg !5281, !llvm.loop !5307

while.end79:                                      ; preds = %while.cond59
  %64 = load i16*, i16** %target.addr, align 8, !dbg !5309
  %65 = load i32, i32* %index33, align 4, !dbg !5310
  %idxprom80 = zext i32 %65 to i64, !dbg !5309
  %arrayidx81 = getelementptr inbounds i16, i16* %64, i64 %idxprom80, !dbg !5309
  store i16 0, i16* %arrayidx81, align 2, !dbg !5311
  br label %if.end83, !dbg !5312

if.else82:                                        ; preds = %land.lhs.true30, %if.else
  %66 = load i16*, i16** %target.addr, align 8, !dbg !5313
  %67 = load i16*, i16** %str.addr, align 8, !dbg !5315
  call void @_ZN11xercesc_2_79XMLString10copyStringEPtPKt(i16* %66, i16* %67), !dbg !5316
  br label %if.end83

if.end83:                                         ; preds = %if.else82, %while.end79
  br label %if.end84

if.end84:                                         ; preds = %if.then, %if.end83, %while.end
  ret void, !dbg !5317
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN11xercesc_2_79XMLString7releaseEPPc(i8** %buf) #1 align 2 !dbg !5318 {
entry:
  %buf.addr = alloca i8**, align 8
  store i8** %buf, i8*** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buf.addr, metadata !5319, metadata !DIExpression()), !dbg !5320
  %0 = load i8**, i8*** %buf.addr, align 8, !dbg !5321
  %1 = load i8*, i8** %0, align 8, !dbg !5322
  %isnull = icmp eq i8* %1, null, !dbg !5323
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !5323

delete.notnull:                                   ; preds = %entry
  call void @_ZdaPv(i8* %1) #13, !dbg !5323
  br label %delete.end, !dbg !5323

delete.end:                                       ; preds = %delete.notnull, %entry
  %2 = load i8**, i8*** %buf.addr, align 8, !dbg !5324
  store i8* null, i8** %2, align 8, !dbg !5325
  ret void, !dbg !5326
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdaPv(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN11xercesc_2_79XMLString7releaseEPPt(i16** %buf) #1 align 2 !dbg !5327 {
entry:
  %buf.addr = alloca i16**, align 8
  store i16** %buf, i16*** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %buf.addr, metadata !5328, metadata !DIExpression()), !dbg !5329
  %0 = load i16**, i16*** %buf.addr, align 8, !dbg !5330
  %1 = load i16*, i16** %0, align 8, !dbg !5331
  %isnull = icmp eq i16* %1, null, !dbg !5332
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !5332

delete.notnull:                                   ; preds = %entry
  %2 = bitcast i16* %1 to i8*, !dbg !5332
  call void @_ZdaPv(i8* %2) #13, !dbg !5332
  br label %delete.end, !dbg !5332

delete.end:                                       ; preds = %delete.notnull, %entry
  %3 = load i16**, i16*** %buf.addr, align 8, !dbg !5333
  store i16* null, i16** %3, align 8, !dbg !5334
  ret void, !dbg !5335
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN11xercesc_2_79XMLString7releaseEPPh(i8** %buf) #1 align 2 !dbg !5336 {
entry:
  %buf.addr = alloca i8**, align 8
  store i8** %buf, i8*** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buf.addr, metadata !5337, metadata !DIExpression()), !dbg !5338
  %0 = load i8**, i8*** %buf.addr, align 8, !dbg !5339
  %1 = load i8*, i8** %0, align 8, !dbg !5340
  %isnull = icmp eq i8* %1, null, !dbg !5341
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !5341

delete.notnull:                                   ; preds = %entry
  call void @_ZdaPv(i8* %1) #13, !dbg !5341
  br label %delete.end, !dbg !5341

delete.end:                                       ; preds = %delete.notnull, %entry
  %2 = load i8**, i8*** %buf.addr, align 8, !dbg !5342
  store i8* null, i8** %2, align 8, !dbg !5343
  ret void, !dbg !5344
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN11xercesc_2_79XMLString7releaseEPPvPNS_13MemoryManagerE(i8** %buf, %"class.xercesc_2_7::MemoryManager"* %manager) #3 align 2 !dbg !5345 {
entry:
  %buf.addr = alloca i8**, align 8
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  store i8** %buf, i8*** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buf.addr, metadata !5346, metadata !DIExpression()), !dbg !5347
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !5348, metadata !DIExpression()), !dbg !5349
  %0 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !5350
  %1 = load i8**, i8*** %buf.addr, align 8, !dbg !5351
  %2 = load i8*, i8** %1, align 8, !dbg !5352
  %3 = bitcast %"class.xercesc_2_7::MemoryManager"* %0 to void (%"class.xercesc_2_7::MemoryManager"*, i8*)***, !dbg !5353
  %vtable = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)**, void (%"class.xercesc_2_7::MemoryManager"*, i8*)*** %3, align 8, !dbg !5353
  %vfn = getelementptr inbounds void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vtable, i64 3, !dbg !5353
  %4 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vfn, align 8, !dbg !5353
  call void %4(%"class.xercesc_2_7::MemoryManager"* %0, i8* %2), !dbg !5353
  %5 = load i8**, i8*** %buf.addr, align 8, !dbg !5354
  store i8* null, i8** %5, align 8, !dbg !5355
  ret void, !dbg !5356
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN11xercesc_2_79XMLString10initStringEPNS_16XMLLCPTranscoderEPNS_13MemoryManagerE(%"class.xercesc_2_7::XMLLCPTranscoder"* %defToUse, %"class.xercesc_2_7::MemoryManager"* %manager) #1 align 2 !dbg !5357 {
entry:
  %defToUse.addr = alloca %"class.xercesc_2_7::XMLLCPTranscoder"*, align 8
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  store %"class.xercesc_2_7::XMLLCPTranscoder"* %defToUse, %"class.xercesc_2_7::XMLLCPTranscoder"** %defToUse.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::XMLLCPTranscoder"** %defToUse.addr, metadata !5358, metadata !DIExpression()), !dbg !5359
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !5360, metadata !DIExpression()), !dbg !5361
  %0 = load %"class.xercesc_2_7::XMLLCPTranscoder"*, %"class.xercesc_2_7::XMLLCPTranscoder"** %defToUse.addr, align 8, !dbg !5362
  store %"class.xercesc_2_7::XMLLCPTranscoder"* %0, %"class.xercesc_2_7::XMLLCPTranscoder"** @_ZN11xercesc_2_7L11gTranscoderE, align 8, !dbg !5363
  %1 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !5364
  store %"class.xercesc_2_7::MemoryManager"* %1, %"class.xercesc_2_7::MemoryManager"** @_ZN11xercesc_2_79XMLString15fgMemoryManagerE, align 8, !dbg !5365
  ret void, !dbg !5366
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN11xercesc_2_79XMLString10termStringEv() #1 align 2 !dbg !5367 {
entry:
  %0 = load %"class.xercesc_2_7::XMLLCPTranscoder"*, %"class.xercesc_2_7::XMLLCPTranscoder"** @_ZN11xercesc_2_7L11gTranscoderE, align 8, !dbg !5368
  %isnull = icmp eq %"class.xercesc_2_7::XMLLCPTranscoder"* %0, null, !dbg !5369
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !5369

delete.notnull:                                   ; preds = %entry
  %1 = bitcast %"class.xercesc_2_7::XMLLCPTranscoder"* %0 to void (%"class.xercesc_2_7::XMLLCPTranscoder"*)***, !dbg !5369
  %vtable = load void (%"class.xercesc_2_7::XMLLCPTranscoder"*)**, void (%"class.xercesc_2_7::XMLLCPTranscoder"*)*** %1, align 8, !dbg !5369
  %vfn = getelementptr inbounds void (%"class.xercesc_2_7::XMLLCPTranscoder"*)*, void (%"class.xercesc_2_7::XMLLCPTranscoder"*)** %vtable, i64 1, !dbg !5369
  %2 = load void (%"class.xercesc_2_7::XMLLCPTranscoder"*)*, void (%"class.xercesc_2_7::XMLLCPTranscoder"*)** %vfn, align 8, !dbg !5369
  call void %2(%"class.xercesc_2_7::XMLLCPTranscoder"* %0) #12, !dbg !5369
  br label %delete.end, !dbg !5369

delete.end:                                       ; preds = %delete.notnull, %entry
  store %"class.xercesc_2_7::XMLLCPTranscoder"* null, %"class.xercesc_2_7::XMLLCPTranscoder"** @_ZN11xercesc_2_7L11gTranscoderE, align 8, !dbg !5370
  store %"class.xercesc_2_7::MemoryManager"* null, %"class.xercesc_2_7::MemoryManager"** @_ZN11xercesc_2_79XMLString15fgMemoryManagerE, align 8, !dbg !5371
  ret void, !dbg !5372
}

declare dso_local void @_ZN11xercesc_2_712XMLExceptionC2EPKcjPNS_13MemoryManagerE(%"class.xercesc_2_7::XMLException"*, i8*, i32, %"class.xercesc_2_7::MemoryManager"*) unnamed_addr #5

declare dso_local void @_ZN11xercesc_2_712XMLException14loadExceptTextENS_10XMLExcepts5CodesE(%"class.xercesc_2_7::XMLException"*, i32) #5

; Function Attrs: nounwind
declare dso_local void @_ZN11xercesc_2_712XMLExceptionD2Ev(%"class.xercesc_2_7::XMLException"*) unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_724IllegalArgumentExceptionD0Ev(%"class.xercesc_2_7::IllegalArgumentException"* %this) unnamed_addr #1 comdat align 2 !dbg !5373 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::IllegalArgumentException"*, align 8
  store %"class.xercesc_2_7::IllegalArgumentException"* %this, %"class.xercesc_2_7::IllegalArgumentException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::IllegalArgumentException"** %this.addr, metadata !5374, metadata !DIExpression()), !dbg !5375
  %this1 = load %"class.xercesc_2_7::IllegalArgumentException"*, %"class.xercesc_2_7::IllegalArgumentException"** %this.addr, align 8
  call void @_ZN11xercesc_2_724IllegalArgumentExceptionD2Ev(%"class.xercesc_2_7::IllegalArgumentException"* %this1) #12, !dbg !5376
  %0 = bitcast %"class.xercesc_2_7::IllegalArgumentException"* %this1 to i8*, !dbg !5376
  call void @_ZN11xercesc_2_77XMemorydlEPv(i8* %0) #12, !dbg !5376
  ret void, !dbg !5376
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i16* @_ZNK11xercesc_2_724IllegalArgumentException7getTypeEv(%"class.xercesc_2_7::IllegalArgumentException"* %this) unnamed_addr #1 comdat align 2 !dbg !5377 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::IllegalArgumentException"*, align 8
  store %"class.xercesc_2_7::IllegalArgumentException"* %this, %"class.xercesc_2_7::IllegalArgumentException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::IllegalArgumentException"** %this.addr, metadata !5378, metadata !DIExpression()), !dbg !5380
  %this1 = load %"class.xercesc_2_7::IllegalArgumentException"*, %"class.xercesc_2_7::IllegalArgumentException"** %this.addr, align 8
  ret i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN11xercesc_2_76XMLUni31fgIllegalArgumentException_NameE, i64 0, i64 0), !dbg !5381
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %"class.xercesc_2_7::XMLException"* @_ZNK11xercesc_2_724IllegalArgumentException9duplicateEv(%"class.xercesc_2_7::IllegalArgumentException"* %this) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !5382 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::IllegalArgumentException"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.xercesc_2_7::IllegalArgumentException"* %this, %"class.xercesc_2_7::IllegalArgumentException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::IllegalArgumentException"** %this.addr, metadata !5383, metadata !DIExpression()), !dbg !5384
  %this1 = load %"class.xercesc_2_7::IllegalArgumentException"*, %"class.xercesc_2_7::IllegalArgumentException"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::IllegalArgumentException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !5385
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_7::XMLException", %"class.xercesc_2_7::XMLException"* %0, i32 0, i32 5, !dbg !5385
  %1 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager, align 8, !dbg !5385
  %call = call i8* @_ZN11xercesc_2_77XMemorynwEmPNS_13MemoryManagerE(i64 48, %"class.xercesc_2_7::MemoryManager"* %1), !dbg !5385
  %2 = bitcast i8* %call to %"class.xercesc_2_7::IllegalArgumentException"*, !dbg !5385
  invoke void @_ZN11xercesc_2_724IllegalArgumentExceptionC2ERKS0_(%"class.xercesc_2_7::IllegalArgumentException"* %2, %"class.xercesc_2_7::IllegalArgumentException"* dereferenceable(48) %this1)
          to label %invoke.cont unwind label %lpad, !dbg !5385

invoke.cont:                                      ; preds = %entry
  %3 = bitcast %"class.xercesc_2_7::IllegalArgumentException"* %2 to %"class.xercesc_2_7::XMLException"*, !dbg !5385
  ret %"class.xercesc_2_7::XMLException"* %3, !dbg !5385

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup, !dbg !5385
  %5 = extractvalue { i8*, i32 } %4, 0, !dbg !5385
  store i8* %5, i8** %exn.slot, align 8, !dbg !5385
  %6 = extractvalue { i8*, i32 } %4, 1, !dbg !5385
  store i32 %6, i32* %ehselector.slot, align 4, !dbg !5385
  call void @_ZN11xercesc_2_77XMemorydlEPvPNS_13MemoryManagerE(i8* %call, %"class.xercesc_2_7::MemoryManager"* %1) #12, !dbg !5385
  br label %eh.resume, !dbg !5385

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !5385
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !5385
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !5385
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !5385
  resume { i8*, i32 } %lpad.val2, !dbg !5385
}

; Function Attrs: nounwind
declare dso_local void @_ZN11xercesc_2_77XMemorydlEPv(i8*) #4

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_724IllegalArgumentExceptionC2ERKS0_(%"class.xercesc_2_7::IllegalArgumentException"* %this, %"class.xercesc_2_7::IllegalArgumentException"* dereferenceable(48) %toCopy) unnamed_addr #3 comdat align 2 !dbg !5386 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::IllegalArgumentException"*, align 8
  %toCopy.addr = alloca %"class.xercesc_2_7::IllegalArgumentException"*, align 8
  store %"class.xercesc_2_7::IllegalArgumentException"* %this, %"class.xercesc_2_7::IllegalArgumentException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::IllegalArgumentException"** %this.addr, metadata !5387, metadata !DIExpression()), !dbg !5388
  store %"class.xercesc_2_7::IllegalArgumentException"* %toCopy, %"class.xercesc_2_7::IllegalArgumentException"** %toCopy.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::IllegalArgumentException"** %toCopy.addr, metadata !5389, metadata !DIExpression()), !dbg !5390
  %this1 = load %"class.xercesc_2_7::IllegalArgumentException"*, %"class.xercesc_2_7::IllegalArgumentException"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::IllegalArgumentException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !5390
  %1 = load %"class.xercesc_2_7::IllegalArgumentException"*, %"class.xercesc_2_7::IllegalArgumentException"** %toCopy.addr, align 8, !dbg !5390
  %2 = bitcast %"class.xercesc_2_7::IllegalArgumentException"* %1 to %"class.xercesc_2_7::XMLException"*, !dbg !5390
  call void @_ZN11xercesc_2_712XMLExceptionC2ERKS0_(%"class.xercesc_2_7::XMLException"* %0, %"class.xercesc_2_7::XMLException"* dereferenceable(48) %2), !dbg !5390
  %3 = bitcast %"class.xercesc_2_7::IllegalArgumentException"* %this1 to i32 (...)***, !dbg !5390
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11xercesc_2_724IllegalArgumentExceptionE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %3, align 8, !dbg !5390
  ret void, !dbg !5390
}

declare dso_local void @_ZN11xercesc_2_712XMLExceptionC2ERKS0_(%"class.xercesc_2_7::XMLException"*, %"class.xercesc_2_7::XMLException"* dereferenceable(48)) unnamed_addr #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_716RuntimeExceptionD0Ev(%"class.xercesc_2_7::RuntimeException"* %this) unnamed_addr #1 comdat align 2 !dbg !5391 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::RuntimeException"*, align 8
  store %"class.xercesc_2_7::RuntimeException"* %this, %"class.xercesc_2_7::RuntimeException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::RuntimeException"** %this.addr, metadata !5392, metadata !DIExpression()), !dbg !5393
  %this1 = load %"class.xercesc_2_7::RuntimeException"*, %"class.xercesc_2_7::RuntimeException"** %this.addr, align 8
  call void @_ZN11xercesc_2_716RuntimeExceptionD2Ev(%"class.xercesc_2_7::RuntimeException"* %this1) #12, !dbg !5394
  %0 = bitcast %"class.xercesc_2_7::RuntimeException"* %this1 to i8*, !dbg !5394
  call void @_ZN11xercesc_2_77XMemorydlEPv(i8* %0) #12, !dbg !5394
  ret void, !dbg !5394
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i16* @_ZNK11xercesc_2_716RuntimeException7getTypeEv(%"class.xercesc_2_7::RuntimeException"* %this) unnamed_addr #1 comdat align 2 !dbg !5395 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::RuntimeException"*, align 8
  store %"class.xercesc_2_7::RuntimeException"* %this, %"class.xercesc_2_7::RuntimeException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::RuntimeException"** %this.addr, metadata !5396, metadata !DIExpression()), !dbg !5398
  %this1 = load %"class.xercesc_2_7::RuntimeException"*, %"class.xercesc_2_7::RuntimeException"** %this.addr, align 8
  ret i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN11xercesc_2_76XMLUni23fgRuntimeException_NameE, i64 0, i64 0), !dbg !5399
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %"class.xercesc_2_7::XMLException"* @_ZNK11xercesc_2_716RuntimeException9duplicateEv(%"class.xercesc_2_7::RuntimeException"* %this) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !5400 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::RuntimeException"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.xercesc_2_7::RuntimeException"* %this, %"class.xercesc_2_7::RuntimeException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::RuntimeException"** %this.addr, metadata !5401, metadata !DIExpression()), !dbg !5402
  %this1 = load %"class.xercesc_2_7::RuntimeException"*, %"class.xercesc_2_7::RuntimeException"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::RuntimeException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !5403
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_7::XMLException", %"class.xercesc_2_7::XMLException"* %0, i32 0, i32 5, !dbg !5403
  %1 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager, align 8, !dbg !5403
  %call = call i8* @_ZN11xercesc_2_77XMemorynwEmPNS_13MemoryManagerE(i64 48, %"class.xercesc_2_7::MemoryManager"* %1), !dbg !5403
  %2 = bitcast i8* %call to %"class.xercesc_2_7::RuntimeException"*, !dbg !5403
  invoke void @_ZN11xercesc_2_716RuntimeExceptionC2ERKS0_(%"class.xercesc_2_7::RuntimeException"* %2, %"class.xercesc_2_7::RuntimeException"* dereferenceable(48) %this1)
          to label %invoke.cont unwind label %lpad, !dbg !5403

invoke.cont:                                      ; preds = %entry
  %3 = bitcast %"class.xercesc_2_7::RuntimeException"* %2 to %"class.xercesc_2_7::XMLException"*, !dbg !5403
  ret %"class.xercesc_2_7::XMLException"* %3, !dbg !5403

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup, !dbg !5403
  %5 = extractvalue { i8*, i32 } %4, 0, !dbg !5403
  store i8* %5, i8** %exn.slot, align 8, !dbg !5403
  %6 = extractvalue { i8*, i32 } %4, 1, !dbg !5403
  store i32 %6, i32* %ehselector.slot, align 4, !dbg !5403
  call void @_ZN11xercesc_2_77XMemorydlEPvPNS_13MemoryManagerE(i8* %call, %"class.xercesc_2_7::MemoryManager"* %1) #12, !dbg !5403
  br label %eh.resume, !dbg !5403

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !5403
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !5403
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !5403
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !5403
  resume { i8*, i32 } %lpad.val2, !dbg !5403
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_716RuntimeExceptionC2ERKS0_(%"class.xercesc_2_7::RuntimeException"* %this, %"class.xercesc_2_7::RuntimeException"* dereferenceable(48) %toCopy) unnamed_addr #3 comdat align 2 !dbg !5404 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::RuntimeException"*, align 8
  %toCopy.addr = alloca %"class.xercesc_2_7::RuntimeException"*, align 8
  store %"class.xercesc_2_7::RuntimeException"* %this, %"class.xercesc_2_7::RuntimeException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::RuntimeException"** %this.addr, metadata !5405, metadata !DIExpression()), !dbg !5406
  store %"class.xercesc_2_7::RuntimeException"* %toCopy, %"class.xercesc_2_7::RuntimeException"** %toCopy.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::RuntimeException"** %toCopy.addr, metadata !5407, metadata !DIExpression()), !dbg !5408
  %this1 = load %"class.xercesc_2_7::RuntimeException"*, %"class.xercesc_2_7::RuntimeException"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::RuntimeException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !5408
  %1 = load %"class.xercesc_2_7::RuntimeException"*, %"class.xercesc_2_7::RuntimeException"** %toCopy.addr, align 8, !dbg !5408
  %2 = bitcast %"class.xercesc_2_7::RuntimeException"* %1 to %"class.xercesc_2_7::XMLException"*, !dbg !5408
  call void @_ZN11xercesc_2_712XMLExceptionC2ERKS0_(%"class.xercesc_2_7::XMLException"* %0, %"class.xercesc_2_7::XMLException"* dereferenceable(48) %2), !dbg !5408
  %3 = bitcast %"class.xercesc_2_7::RuntimeException"* %this1 to i32 (...)***, !dbg !5408
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11xercesc_2_716RuntimeExceptionE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %3, align 8, !dbg !5408
  ret void, !dbg !5408
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionD0Ev(%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this) unnamed_addr #1 comdat align 2 !dbg !5409 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, align 8
  store %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this, %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %this.addr, metadata !5410, metadata !DIExpression()), !dbg !5411
  %this1 = load %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %this.addr, align 8
  call void @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionD2Ev(%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this1) #12, !dbg !5412
  %0 = bitcast %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this1 to i8*, !dbg !5412
  call void @_ZN11xercesc_2_77XMemorydlEPv(i8* %0) #12, !dbg !5412
  ret void, !dbg !5412
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i16* @_ZNK11xercesc_2_730ArrayIndexOutOfBoundsException7getTypeEv(%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this) unnamed_addr #1 comdat align 2 !dbg !5413 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, align 8
  store %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this, %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %this.addr, metadata !5414, metadata !DIExpression()), !dbg !5416
  %this1 = load %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %this.addr, align 8
  ret i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN11xercesc_2_76XMLUni37fgArrayIndexOutOfBoundsException_NameE, i64 0, i64 0), !dbg !5417
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %"class.xercesc_2_7::XMLException"* @_ZNK11xercesc_2_730ArrayIndexOutOfBoundsException9duplicateEv(%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !5418 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this, %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %this.addr, metadata !5419, metadata !DIExpression()), !dbg !5420
  %this1 = load %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !5421
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_7::XMLException", %"class.xercesc_2_7::XMLException"* %0, i32 0, i32 5, !dbg !5421
  %1 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager, align 8, !dbg !5421
  %call = call i8* @_ZN11xercesc_2_77XMemorynwEmPNS_13MemoryManagerE(i64 48, %"class.xercesc_2_7::MemoryManager"* %1), !dbg !5421
  %2 = bitcast i8* %call to %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, !dbg !5421
  invoke void @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionC2ERKS0_(%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %2, %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* dereferenceable(48) %this1)
          to label %invoke.cont unwind label %lpad, !dbg !5421

invoke.cont:                                      ; preds = %entry
  %3 = bitcast %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %2 to %"class.xercesc_2_7::XMLException"*, !dbg !5421
  ret %"class.xercesc_2_7::XMLException"* %3, !dbg !5421

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup, !dbg !5421
  %5 = extractvalue { i8*, i32 } %4, 0, !dbg !5421
  store i8* %5, i8** %exn.slot, align 8, !dbg !5421
  %6 = extractvalue { i8*, i32 } %4, 1, !dbg !5421
  store i32 %6, i32* %ehselector.slot, align 4, !dbg !5421
  call void @_ZN11xercesc_2_77XMemorydlEPvPNS_13MemoryManagerE(i8* %call, %"class.xercesc_2_7::MemoryManager"* %1) #12, !dbg !5421
  br label %eh.resume, !dbg !5421

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !5421
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !5421
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !5421
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !5421
  resume { i8*, i32 } %lpad.val2, !dbg !5421
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionC2ERKS0_(%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this, %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* dereferenceable(48) %toCopy) unnamed_addr #3 comdat align 2 !dbg !5422 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, align 8
  %toCopy.addr = alloca %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, align 8
  store %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this, %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %this.addr, metadata !5423, metadata !DIExpression()), !dbg !5424
  store %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %toCopy, %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %toCopy.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %toCopy.addr, metadata !5425, metadata !DIExpression()), !dbg !5426
  %this1 = load %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !5426
  %1 = load %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"** %toCopy.addr, align 8, !dbg !5426
  %2 = bitcast %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %1 to %"class.xercesc_2_7::XMLException"*, !dbg !5426
  call void @_ZN11xercesc_2_712XMLExceptionC2ERKS0_(%"class.xercesc_2_7::XMLException"* %0, %"class.xercesc_2_7::XMLException"* dereferenceable(48) %2), !dbg !5426
  %3 = bitcast %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %this1 to i32 (...)***, !dbg !5426
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %3, align 8, !dbg !5426
  ret void, !dbg !5426
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_721NumberFormatExceptionD0Ev(%"class.xercesc_2_7::NumberFormatException"* %this) unnamed_addr #1 comdat align 2 !dbg !5427 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::NumberFormatException"*, align 8
  store %"class.xercesc_2_7::NumberFormatException"* %this, %"class.xercesc_2_7::NumberFormatException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::NumberFormatException"** %this.addr, metadata !5428, metadata !DIExpression()), !dbg !5429
  %this1 = load %"class.xercesc_2_7::NumberFormatException"*, %"class.xercesc_2_7::NumberFormatException"** %this.addr, align 8
  call void @_ZN11xercesc_2_721NumberFormatExceptionD2Ev(%"class.xercesc_2_7::NumberFormatException"* %this1) #12, !dbg !5430
  %0 = bitcast %"class.xercesc_2_7::NumberFormatException"* %this1 to i8*, !dbg !5430
  call void @_ZN11xercesc_2_77XMemorydlEPv(i8* %0) #12, !dbg !5430
  ret void, !dbg !5430
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i16* @_ZNK11xercesc_2_721NumberFormatException7getTypeEv(%"class.xercesc_2_7::NumberFormatException"* %this) unnamed_addr #1 comdat align 2 !dbg !5431 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::NumberFormatException"*, align 8
  store %"class.xercesc_2_7::NumberFormatException"* %this, %"class.xercesc_2_7::NumberFormatException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::NumberFormatException"** %this.addr, metadata !5432, metadata !DIExpression()), !dbg !5434
  %this1 = load %"class.xercesc_2_7::NumberFormatException"*, %"class.xercesc_2_7::NumberFormatException"** %this.addr, align 8
  ret i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN11xercesc_2_76XMLUni28fgNumberFormatException_NameE, i64 0, i64 0), !dbg !5435
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %"class.xercesc_2_7::XMLException"* @_ZNK11xercesc_2_721NumberFormatException9duplicateEv(%"class.xercesc_2_7::NumberFormatException"* %this) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !5436 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::NumberFormatException"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.xercesc_2_7::NumberFormatException"* %this, %"class.xercesc_2_7::NumberFormatException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::NumberFormatException"** %this.addr, metadata !5437, metadata !DIExpression()), !dbg !5438
  %this1 = load %"class.xercesc_2_7::NumberFormatException"*, %"class.xercesc_2_7::NumberFormatException"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::NumberFormatException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !5439
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_7::XMLException", %"class.xercesc_2_7::XMLException"* %0, i32 0, i32 5, !dbg !5439
  %1 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager, align 8, !dbg !5439
  %call = call i8* @_ZN11xercesc_2_77XMemorynwEmPNS_13MemoryManagerE(i64 48, %"class.xercesc_2_7::MemoryManager"* %1), !dbg !5439
  %2 = bitcast i8* %call to %"class.xercesc_2_7::NumberFormatException"*, !dbg !5439
  invoke void @_ZN11xercesc_2_721NumberFormatExceptionC2ERKS0_(%"class.xercesc_2_7::NumberFormatException"* %2, %"class.xercesc_2_7::NumberFormatException"* dereferenceable(48) %this1)
          to label %invoke.cont unwind label %lpad, !dbg !5439

invoke.cont:                                      ; preds = %entry
  %3 = bitcast %"class.xercesc_2_7::NumberFormatException"* %2 to %"class.xercesc_2_7::XMLException"*, !dbg !5439
  ret %"class.xercesc_2_7::XMLException"* %3, !dbg !5439

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup, !dbg !5439
  %5 = extractvalue { i8*, i32 } %4, 0, !dbg !5439
  store i8* %5, i8** %exn.slot, align 8, !dbg !5439
  %6 = extractvalue { i8*, i32 } %4, 1, !dbg !5439
  store i32 %6, i32* %ehselector.slot, align 4, !dbg !5439
  call void @_ZN11xercesc_2_77XMemorydlEPvPNS_13MemoryManagerE(i8* %call, %"class.xercesc_2_7::MemoryManager"* %1) #12, !dbg !5439
  br label %eh.resume, !dbg !5439

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !5439
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !5439
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !5439
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !5439
  resume { i8*, i32 } %lpad.val2, !dbg !5439
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_721NumberFormatExceptionC2ERKS0_(%"class.xercesc_2_7::NumberFormatException"* %this, %"class.xercesc_2_7::NumberFormatException"* dereferenceable(48) %toCopy) unnamed_addr #3 comdat align 2 !dbg !5440 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::NumberFormatException"*, align 8
  %toCopy.addr = alloca %"class.xercesc_2_7::NumberFormatException"*, align 8
  store %"class.xercesc_2_7::NumberFormatException"* %this, %"class.xercesc_2_7::NumberFormatException"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::NumberFormatException"** %this.addr, metadata !5441, metadata !DIExpression()), !dbg !5442
  store %"class.xercesc_2_7::NumberFormatException"* %toCopy, %"class.xercesc_2_7::NumberFormatException"** %toCopy.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::NumberFormatException"** %toCopy.addr, metadata !5443, metadata !DIExpression()), !dbg !5444
  %this1 = load %"class.xercesc_2_7::NumberFormatException"*, %"class.xercesc_2_7::NumberFormatException"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::NumberFormatException"* %this1 to %"class.xercesc_2_7::XMLException"*, !dbg !5444
  %1 = load %"class.xercesc_2_7::NumberFormatException"*, %"class.xercesc_2_7::NumberFormatException"** %toCopy.addr, align 8, !dbg !5444
  %2 = bitcast %"class.xercesc_2_7::NumberFormatException"* %1 to %"class.xercesc_2_7::XMLException"*, !dbg !5444
  call void @_ZN11xercesc_2_712XMLExceptionC2ERKS0_(%"class.xercesc_2_7::XMLException"* %0, %"class.xercesc_2_7::XMLException"* dereferenceable(48) %2), !dbg !5444
  %3 = bitcast %"class.xercesc_2_7::NumberFormatException"* %this1 to i32 (...)***, !dbg !5444
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11xercesc_2_721NumberFormatExceptionE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %3, align 8, !dbg !5444
  ret void, !dbg !5444
}

declare dso_local void @_ZN11xercesc_2_79XMLBuffer14insureCapacityEj(%"class.xercesc_2_7::XMLBuffer"*, i32) #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_77XMemoryC2Ev(%"class.xercesc_2_7::XMemory"* %this) unnamed_addr #1 comdat align 2 !dbg !5445 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::XMemory"*, align 8
  store %"class.xercesc_2_7::XMemory"* %this, %"class.xercesc_2_7::XMemory"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::XMemory"** %this.addr, metadata !5446, metadata !DIExpression()), !dbg !5448
  %this1 = load %"class.xercesc_2_7::XMemory"*, %"class.xercesc_2_7::XMemory"** %this.addr, align 8
  ret void, !dbg !5449
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_712ArrayJanitorItE5resetEPt(%"class.xercesc_2_7::ArrayJanitor"* %this, i16* %p) #3 comdat align 2 !dbg !5450 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::ArrayJanitor"*, align 8
  %p.addr = alloca i16*, align 8
  store %"class.xercesc_2_7::ArrayJanitor"* %this, %"class.xercesc_2_7::ArrayJanitor"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::ArrayJanitor"** %this.addr, metadata !5451, metadata !DIExpression()), !dbg !5452
  store i16* %p, i16** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %p.addr, metadata !5453, metadata !DIExpression()), !dbg !5454
  %this1 = load %"class.xercesc_2_7::ArrayJanitor"*, %"class.xercesc_2_7::ArrayJanitor"** %this.addr, align 8
  %fData = getelementptr inbounds %"class.xercesc_2_7::ArrayJanitor", %"class.xercesc_2_7::ArrayJanitor"* %this1, i32 0, i32 0, !dbg !5455
  %0 = load i16*, i16** %fData, align 8, !dbg !5455
  %tobool = icmp ne i16* %0, null, !dbg !5455
  br i1 %tobool, label %if.then, label %if.end7, !dbg !5457

if.then:                                          ; preds = %entry
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_7::ArrayJanitor", %"class.xercesc_2_7::ArrayJanitor"* %this1, i32 0, i32 1, !dbg !5458
  %1 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager, align 8, !dbg !5458
  %tobool2 = icmp ne %"class.xercesc_2_7::MemoryManager"* %1, null, !dbg !5458
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !5461

if.then3:                                         ; preds = %if.then
  %fMemoryManager4 = getelementptr inbounds %"class.xercesc_2_7::ArrayJanitor", %"class.xercesc_2_7::ArrayJanitor"* %this1, i32 0, i32 1, !dbg !5462
  %2 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager4, align 8, !dbg !5462
  %fData5 = getelementptr inbounds %"class.xercesc_2_7::ArrayJanitor", %"class.xercesc_2_7::ArrayJanitor"* %this1, i32 0, i32 0, !dbg !5463
  %3 = load i16*, i16** %fData5, align 8, !dbg !5463
  %4 = bitcast i16* %3 to i8*, !dbg !5463
  %5 = bitcast %"class.xercesc_2_7::MemoryManager"* %2 to void (%"class.xercesc_2_7::MemoryManager"*, i8*)***, !dbg !5464
  %vtable = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)**, void (%"class.xercesc_2_7::MemoryManager"*, i8*)*** %5, align 8, !dbg !5464
  %vfn = getelementptr inbounds void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vtable, i64 3, !dbg !5464
  %6 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vfn, align 8, !dbg !5464
  call void %6(%"class.xercesc_2_7::MemoryManager"* %2, i8* %4), !dbg !5464
  br label %if.end, !dbg !5462

if.else:                                          ; preds = %if.then
  %fData6 = getelementptr inbounds %"class.xercesc_2_7::ArrayJanitor", %"class.xercesc_2_7::ArrayJanitor"* %this1, i32 0, i32 0, !dbg !5465
  %7 = load i16*, i16** %fData6, align 8, !dbg !5465
  %isnull = icmp eq i16* %7, null, !dbg !5466
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !5466

delete.notnull:                                   ; preds = %if.else
  %8 = bitcast i16* %7 to i8*, !dbg !5466
  call void @_ZdaPv(i8* %8) #13, !dbg !5466
  br label %delete.end, !dbg !5466

delete.end:                                       ; preds = %delete.notnull, %if.else
  br label %if.end

if.end:                                           ; preds = %delete.end, %if.then3
  br label %if.end7, !dbg !5467

if.end7:                                          ; preds = %if.end, %entry
  %9 = load i16*, i16** %p.addr, align 8, !dbg !5468
  %fData8 = getelementptr inbounds %"class.xercesc_2_7::ArrayJanitor", %"class.xercesc_2_7::ArrayJanitor"* %this1, i32 0, i32 0, !dbg !5469
  store i16* %9, i16** %fData8, align 8, !dbg !5470
  %fMemoryManager9 = getelementptr inbounds %"class.xercesc_2_7::ArrayJanitor", %"class.xercesc_2_7::ArrayJanitor"* %this1, i32 0, i32 1, !dbg !5471
  store %"class.xercesc_2_7::MemoryManager"* null, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager9, align 8, !dbg !5472
  ret void, !dbg !5473
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) #11 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #12
  call void @_ZSt9terminatev() #16
  unreachable
}

declare dso_local void @_ZSt9terminatev()

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_712ArrayJanitorIcE5resetEPc(%"class.xercesc_2_7::ArrayJanitor.0"* %this, i8* %p) #3 comdat align 2 !dbg !5474 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::ArrayJanitor.0"*, align 8
  %p.addr = alloca i8*, align 8
  store %"class.xercesc_2_7::ArrayJanitor.0"* %this, %"class.xercesc_2_7::ArrayJanitor.0"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::ArrayJanitor.0"** %this.addr, metadata !5475, metadata !DIExpression()), !dbg !5476
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5477, metadata !DIExpression()), !dbg !5478
  %this1 = load %"class.xercesc_2_7::ArrayJanitor.0"*, %"class.xercesc_2_7::ArrayJanitor.0"** %this.addr, align 8
  %fData = getelementptr inbounds %"class.xercesc_2_7::ArrayJanitor.0", %"class.xercesc_2_7::ArrayJanitor.0"* %this1, i32 0, i32 0, !dbg !5479
  %0 = load i8*, i8** %fData, align 8, !dbg !5479
  %tobool = icmp ne i8* %0, null, !dbg !5479
  br i1 %tobool, label %if.then, label %if.end7, !dbg !5481

if.then:                                          ; preds = %entry
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_7::ArrayJanitor.0", %"class.xercesc_2_7::ArrayJanitor.0"* %this1, i32 0, i32 1, !dbg !5482
  %1 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager, align 8, !dbg !5482
  %tobool2 = icmp ne %"class.xercesc_2_7::MemoryManager"* %1, null, !dbg !5482
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !5485

if.then3:                                         ; preds = %if.then
  %fMemoryManager4 = getelementptr inbounds %"class.xercesc_2_7::ArrayJanitor.0", %"class.xercesc_2_7::ArrayJanitor.0"* %this1, i32 0, i32 1, !dbg !5486
  %2 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager4, align 8, !dbg !5486
  %fData5 = getelementptr inbounds %"class.xercesc_2_7::ArrayJanitor.0", %"class.xercesc_2_7::ArrayJanitor.0"* %this1, i32 0, i32 0, !dbg !5487
  %3 = load i8*, i8** %fData5, align 8, !dbg !5487
  %4 = bitcast %"class.xercesc_2_7::MemoryManager"* %2 to void (%"class.xercesc_2_7::MemoryManager"*, i8*)***, !dbg !5488
  %vtable = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)**, void (%"class.xercesc_2_7::MemoryManager"*, i8*)*** %4, align 8, !dbg !5488
  %vfn = getelementptr inbounds void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vtable, i64 3, !dbg !5488
  %5 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vfn, align 8, !dbg !5488
  call void %5(%"class.xercesc_2_7::MemoryManager"* %2, i8* %3), !dbg !5488
  br label %if.end, !dbg !5486

if.else:                                          ; preds = %if.then
  %fData6 = getelementptr inbounds %"class.xercesc_2_7::ArrayJanitor.0", %"class.xercesc_2_7::ArrayJanitor.0"* %this1, i32 0, i32 0, !dbg !5489
  %6 = load i8*, i8** %fData6, align 8, !dbg !5489
  %isnull = icmp eq i8* %6, null, !dbg !5490
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !5490

delete.notnull:                                   ; preds = %if.else
  call void @_ZdaPv(i8* %6) #13, !dbg !5490
  br label %delete.end, !dbg !5490

delete.end:                                       ; preds = %delete.notnull, %if.else
  br label %if.end

if.end:                                           ; preds = %delete.end, %if.then3
  br label %if.end7, !dbg !5491

if.end7:                                          ; preds = %if.end, %entry
  %7 = load i8*, i8** %p.addr, align 8, !dbg !5492
  %fData8 = getelementptr inbounds %"class.xercesc_2_7::ArrayJanitor.0", %"class.xercesc_2_7::ArrayJanitor.0"* %this1, i32 0, i32 0, !dbg !5493
  store i8* %7, i8** %fData8, align 8, !dbg !5494
  %fMemoryManager9 = getelementptr inbounds %"class.xercesc_2_7::ArrayJanitor.0", %"class.xercesc_2_7::ArrayJanitor.0"* %this1, i32 0, i32 1, !dbg !5495
  store %"class.xercesc_2_7::MemoryManager"* null, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager9, align 8, !dbg !5496
  ret void, !dbg !5497
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_715BaseRefVectorOfItEC2EjbPNS_13MemoryManagerE(%"class.xercesc_2_7::BaseRefVectorOf"* %this, i32 %maxElems, i1 zeroext %adoptElems, %"class.xercesc_2_7::MemoryManager"* %manager) unnamed_addr #3 comdat align 2 !dbg !5498 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::BaseRefVectorOf"*, align 8
  %maxElems.addr = alloca i32, align 4
  %adoptElems.addr = alloca i8, align 1
  %manager.addr = alloca %"class.xercesc_2_7::MemoryManager"*, align 8
  %index = alloca i32, align 4
  store %"class.xercesc_2_7::BaseRefVectorOf"* %this, %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, metadata !5499, metadata !DIExpression()), !dbg !5500
  store i32 %maxElems, i32* %maxElems.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxElems.addr, metadata !5501, metadata !DIExpression()), !dbg !5502
  %frombool = zext i1 %adoptElems to i8
  store i8 %frombool, i8* %adoptElems.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %adoptElems.addr, metadata !5503, metadata !DIExpression()), !dbg !5504
  store %"class.xercesc_2_7::MemoryManager"* %manager, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::MemoryManager"** %manager.addr, metadata !5505, metadata !DIExpression()), !dbg !5506
  %this1 = load %"class.xercesc_2_7::BaseRefVectorOf"*, %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::BaseRefVectorOf"* %this1 to %"class.xercesc_2_7::XMemory"*, !dbg !5507
  call void @_ZN11xercesc_2_77XMemoryC2Ev(%"class.xercesc_2_7::XMemory"* %0), !dbg !5508
  %1 = bitcast %"class.xercesc_2_7::BaseRefVectorOf"* %this1 to i32 (...)***, !dbg !5507
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN11xercesc_2_715BaseRefVectorOfItEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8, !dbg !5507
  %fAdoptedElems = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 1, !dbg !5510
  %2 = load i8, i8* %adoptElems.addr, align 1, !dbg !5512
  %tobool = trunc i8 %2 to i1, !dbg !5512
  %frombool2 = zext i1 %tobool to i8, !dbg !5510
  store i8 %frombool2, i8* %fAdoptedElems, align 8, !dbg !5510
  %fCurCount = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 2, !dbg !5513
  store i32 0, i32* %fCurCount, align 4, !dbg !5513
  %fMaxCount = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 3, !dbg !5514
  %3 = load i32, i32* %maxElems.addr, align 4, !dbg !5515
  store i32 %3, i32* %fMaxCount, align 8, !dbg !5514
  %fElemList = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 4, !dbg !5516
  store i16** null, i16*** %fElemList, align 8, !dbg !5516
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 5, !dbg !5517
  %4 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %manager.addr, align 8, !dbg !5518
  store %"class.xercesc_2_7::MemoryManager"* %4, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager, align 8, !dbg !5517
  %fMemoryManager3 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 5, !dbg !5519
  %5 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager3, align 8, !dbg !5519
  %6 = load i32, i32* %maxElems.addr, align 4, !dbg !5521
  %conv = zext i32 %6 to i64, !dbg !5521
  %mul = mul i64 %conv, 8, !dbg !5522
  %7 = bitcast %"class.xercesc_2_7::MemoryManager"* %5 to i8* (%"class.xercesc_2_7::MemoryManager"*, i64)***, !dbg !5523
  %vtable = load i8* (%"class.xercesc_2_7::MemoryManager"*, i64)**, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*** %7, align 8, !dbg !5523
  %vfn = getelementptr inbounds i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)** %vtable, i64 2, !dbg !5523
  %8 = load i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)** %vfn, align 8, !dbg !5523
  %call = call i8* %8(%"class.xercesc_2_7::MemoryManager"* %5, i64 %mul), !dbg !5523
  %9 = bitcast i8* %call to i16**, !dbg !5524
  %fElemList4 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 4, !dbg !5525
  store i16** %9, i16*** %fElemList4, align 8, !dbg !5526
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5527, metadata !DIExpression()), !dbg !5529
  store i32 0, i32* %index, align 4, !dbg !5529
  br label %for.cond, !dbg !5530

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %index, align 4, !dbg !5531
  %11 = load i32, i32* %maxElems.addr, align 4, !dbg !5533
  %cmp = icmp ult i32 %10, %11, !dbg !5534
  br i1 %cmp, label %for.body, label %for.end, !dbg !5535

for.body:                                         ; preds = %for.cond
  %fElemList5 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 4, !dbg !5536
  %12 = load i16**, i16*** %fElemList5, align 8, !dbg !5536
  %13 = load i32, i32* %index, align 4, !dbg !5537
  %idxprom = zext i32 %13 to i64, !dbg !5536
  %arrayidx = getelementptr inbounds i16*, i16** %12, i64 %idxprom, !dbg !5536
  store i16* null, i16** %arrayidx, align 8, !dbg !5538
  br label %for.inc, !dbg !5536

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %index, align 4, !dbg !5539
  %inc = add i32 %14, 1, !dbg !5539
  store i32 %inc, i32* %index, align 4, !dbg !5539
  br label %for.cond, !dbg !5540, !llvm.loop !5541

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5543
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_716RefArrayVectorOfItED2Ev(%"class.xercesc_2_7::RefArrayVectorOf"* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !5544 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::RefArrayVectorOf"*, align 8
  %index = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.xercesc_2_7::RefArrayVectorOf"* %this, %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, metadata !5545, metadata !DIExpression()), !dbg !5546
  %this1 = load %"class.xercesc_2_7::RefArrayVectorOf"*, %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to i32 (...)***, !dbg !5547
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN11xercesc_2_716RefArrayVectorOfItEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8, !dbg !5547
  %1 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5548
  %fAdoptedElems = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %1, i32 0, i32 1, !dbg !5548
  %2 = load i8, i8* %fAdoptedElems, align 8, !dbg !5548
  %tobool = trunc i8 %2 to i1, !dbg !5548
  br i1 %tobool, label %if.then, label %if.end, !dbg !5551

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5552, metadata !DIExpression()), !dbg !5555
  store i32 0, i32* %index, align 4, !dbg !5555
  br label %for.cond, !dbg !5556

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, i32* %index, align 4, !dbg !5557
  %4 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5559
  %fCurCount = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %4, i32 0, i32 2, !dbg !5559
  %5 = load i32, i32* %fCurCount, align 4, !dbg !5559
  %cmp = icmp ult i32 %3, %5, !dbg !5560
  br i1 %cmp, label %for.body, label %for.end, !dbg !5561

for.body:                                         ; preds = %for.cond
  %6 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5562
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %6, i32 0, i32 5, !dbg !5562
  %7 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager, align 8, !dbg !5562
  %8 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5563
  %fElemList = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %8, i32 0, i32 4, !dbg !5563
  %9 = load i16**, i16*** %fElemList, align 8, !dbg !5563
  %10 = load i32, i32* %index, align 4, !dbg !5564
  %idxprom = zext i32 %10 to i64, !dbg !5565
  %arrayidx = getelementptr inbounds i16*, i16** %9, i64 %idxprom, !dbg !5565
  %11 = load i16*, i16** %arrayidx, align 8, !dbg !5565
  %12 = bitcast i16* %11 to i8*, !dbg !5565
  %13 = bitcast %"class.xercesc_2_7::MemoryManager"* %7 to void (%"class.xercesc_2_7::MemoryManager"*, i8*)***, !dbg !5566
  %vtable = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)**, void (%"class.xercesc_2_7::MemoryManager"*, i8*)*** %13, align 8, !dbg !5566
  %vfn = getelementptr inbounds void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vtable, i64 3, !dbg !5566
  %14 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vfn, align 8, !dbg !5566
  invoke void %14(%"class.xercesc_2_7::MemoryManager"* %7, i8* %12)
          to label %invoke.cont unwind label %lpad, !dbg !5566

invoke.cont:                                      ; preds = %for.body
  br label %for.inc, !dbg !5567

for.inc:                                          ; preds = %invoke.cont
  %15 = load i32, i32* %index, align 4, !dbg !5568
  %inc = add i32 %15, 1, !dbg !5568
  store i32 %inc, i32* %index, align 4, !dbg !5568
  br label %for.cond, !dbg !5569, !llvm.loop !5570

lpad:                                             ; preds = %if.end, %for.body
  %16 = landingpad { i8*, i32 }
          catch i8* null, !dbg !5572
  %17 = extractvalue { i8*, i32 } %16, 0, !dbg !5572
  store i8* %17, i8** %exn.slot, align 8, !dbg !5572
  %18 = extractvalue { i8*, i32 } %16, 1, !dbg !5572
  store i32 %18, i32* %ehselector.slot, align 4, !dbg !5572
  %19 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5573
  call void @_ZN11xercesc_2_715BaseRefVectorOfItED2Ev(%"class.xercesc_2_7::BaseRefVectorOf"* %19) #12, !dbg !5573
  br label %terminate.handler, !dbg !5573

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !5574

if.end:                                           ; preds = %for.end, %entry
  %20 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5575
  %fMemoryManager2 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %20, i32 0, i32 5, !dbg !5575
  %21 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager2, align 8, !dbg !5575
  %22 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5576
  %fElemList3 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %22, i32 0, i32 4, !dbg !5576
  %23 = load i16**, i16*** %fElemList3, align 8, !dbg !5576
  %24 = bitcast i16** %23 to i8*, !dbg !5577
  %25 = bitcast %"class.xercesc_2_7::MemoryManager"* %21 to void (%"class.xercesc_2_7::MemoryManager"*, i8*)***, !dbg !5578
  %vtable4 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)**, void (%"class.xercesc_2_7::MemoryManager"*, i8*)*** %25, align 8, !dbg !5578
  %vfn5 = getelementptr inbounds void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vtable4, i64 3, !dbg !5578
  %26 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vfn5, align 8, !dbg !5578
  invoke void %26(%"class.xercesc_2_7::MemoryManager"* %21, i8* %24)
          to label %invoke.cont6 unwind label %lpad, !dbg !5578

invoke.cont6:                                     ; preds = %if.end
  %27 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5573
  call void @_ZN11xercesc_2_715BaseRefVectorOfItED2Ev(%"class.xercesc_2_7::BaseRefVectorOf"* %27) #12, !dbg !5573
  ret void, !dbg !5579

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !5573
  call void @__clang_call_terminate(i8* %exn) #16, !dbg !5573
  unreachable, !dbg !5573
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_716RefArrayVectorOfItED0Ev(%"class.xercesc_2_7::RefArrayVectorOf"* %this) unnamed_addr #1 comdat align 2 !dbg !5580 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::RefArrayVectorOf"*, align 8
  store %"class.xercesc_2_7::RefArrayVectorOf"* %this, %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, metadata !5581, metadata !DIExpression()), !dbg !5582
  %this1 = load %"class.xercesc_2_7::RefArrayVectorOf"*, %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, align 8
  call void @_ZN11xercesc_2_716RefArrayVectorOfItED2Ev(%"class.xercesc_2_7::RefArrayVectorOf"* %this1) #12, !dbg !5583
  %0 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to i8*, !dbg !5583
  call void @_ZN11xercesc_2_77XMemorydlEPv(i8* %0) #12, !dbg !5583
  ret void, !dbg !5584
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_716RefArrayVectorOfItE12setElementAtEPtj(%"class.xercesc_2_7::RefArrayVectorOf"* %this, i16* %toSet, i32 %setAt) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !5585 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::RefArrayVectorOf"*, align 8
  %toSet.addr = alloca i16*, align 8
  %setAt.addr = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.xercesc_2_7::RefArrayVectorOf"* %this, %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, metadata !5586, metadata !DIExpression()), !dbg !5587
  store i16* %toSet, i16** %toSet.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toSet.addr, metadata !5588, metadata !DIExpression()), !dbg !5589
  store i32 %setAt, i32* %setAt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %setAt.addr, metadata !5590, metadata !DIExpression()), !dbg !5591
  %this1 = load %"class.xercesc_2_7::RefArrayVectorOf"*, %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, align 8
  %0 = load i32, i32* %setAt.addr, align 4, !dbg !5592
  %1 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5594
  %fCurCount = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %1, i32 0, i32 2, !dbg !5594
  %2 = load i32, i32* %fCurCount, align 4, !dbg !5594
  %cmp = icmp uge i32 %0, %2, !dbg !5595
  br i1 %cmp, label %if.then, label %if.end, !dbg !5596

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !5597
  %3 = bitcast i8* %exception to %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, !dbg !5597
  %4 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5597
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %4, i32 0, i32 5, !dbg !5597
  %5 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager, align 8, !dbg !5597
  invoke void @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i32 52, i32 116, %"class.xercesc_2_7::MemoryManager"* %5)
          to label %invoke.cont unwind label %lpad, !dbg !5597

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*)* @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionD2Ev to i8*)) #14, !dbg !5597
  unreachable, !dbg !5597

lpad:                                             ; preds = %if.then
  %6 = landingpad { i8*, i32 }
          cleanup, !dbg !5598
  %7 = extractvalue { i8*, i32 } %6, 0, !dbg !5598
  store i8* %7, i8** %exn.slot, align 8, !dbg !5598
  %8 = extractvalue { i8*, i32 } %6, 1, !dbg !5598
  store i32 %8, i32* %ehselector.slot, align 4, !dbg !5598
  call void @__cxa_free_exception(i8* %exception) #12, !dbg !5597
  br label %eh.resume, !dbg !5597

if.end:                                           ; preds = %entry
  %9 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5599
  %fAdoptedElems = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %9, i32 0, i32 1, !dbg !5599
  %10 = load i8, i8* %fAdoptedElems, align 8, !dbg !5599
  %tobool = trunc i8 %10 to i1, !dbg !5599
  br i1 %tobool, label %if.then2, label %if.end4, !dbg !5601

if.then2:                                         ; preds = %if.end
  %11 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5602
  %fMemoryManager3 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %11, i32 0, i32 5, !dbg !5602
  %12 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager3, align 8, !dbg !5602
  %13 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5603
  %fElemList = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %13, i32 0, i32 4, !dbg !5603
  %14 = load i16**, i16*** %fElemList, align 8, !dbg !5603
  %15 = load i32, i32* %setAt.addr, align 4, !dbg !5604
  %idxprom = zext i32 %15 to i64, !dbg !5605
  %arrayidx = getelementptr inbounds i16*, i16** %14, i64 %idxprom, !dbg !5605
  %16 = load i16*, i16** %arrayidx, align 8, !dbg !5605
  %17 = bitcast i16* %16 to i8*, !dbg !5605
  %18 = bitcast %"class.xercesc_2_7::MemoryManager"* %12 to void (%"class.xercesc_2_7::MemoryManager"*, i8*)***, !dbg !5606
  %vtable = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)**, void (%"class.xercesc_2_7::MemoryManager"*, i8*)*** %18, align 8, !dbg !5606
  %vfn = getelementptr inbounds void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vtable, i64 3, !dbg !5606
  %19 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vfn, align 8, !dbg !5606
  call void %19(%"class.xercesc_2_7::MemoryManager"* %12, i8* %17), !dbg !5606
  br label %if.end4, !dbg !5607

if.end4:                                          ; preds = %if.then2, %if.end
  %20 = load i16*, i16** %toSet.addr, align 8, !dbg !5608
  %21 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5609
  %fElemList5 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %21, i32 0, i32 4, !dbg !5609
  %22 = load i16**, i16*** %fElemList5, align 8, !dbg !5609
  %23 = load i32, i32* %setAt.addr, align 4, !dbg !5610
  %idxprom6 = zext i32 %23 to i64, !dbg !5611
  %arrayidx7 = getelementptr inbounds i16*, i16** %22, i64 %idxprom6, !dbg !5611
  store i16* %20, i16** %arrayidx7, align 8, !dbg !5612
  ret void, !dbg !5613

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !5597
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !5597
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !5597
  %lpad.val8 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !5597
  resume { i8*, i32 } %lpad.val8, !dbg !5597
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_716RefArrayVectorOfItE17removeAllElementsEv(%"class.xercesc_2_7::RefArrayVectorOf"* %this) unnamed_addr #3 comdat align 2 !dbg !5614 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::RefArrayVectorOf"*, align 8
  %index = alloca i32, align 4
  store %"class.xercesc_2_7::RefArrayVectorOf"* %this, %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, metadata !5615, metadata !DIExpression()), !dbg !5616
  %this1 = load %"class.xercesc_2_7::RefArrayVectorOf"*, %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5617, metadata !DIExpression()), !dbg !5619
  store i32 0, i32* %index, align 4, !dbg !5619
  br label %for.cond, !dbg !5620

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %index, align 4, !dbg !5621
  %1 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5623
  %fCurCount = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %1, i32 0, i32 2, !dbg !5623
  %2 = load i32, i32* %fCurCount, align 4, !dbg !5623
  %cmp = icmp ult i32 %0, %2, !dbg !5624
  br i1 %cmp, label %for.body, label %for.end, !dbg !5625

for.body:                                         ; preds = %for.cond
  %3 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5626
  %fAdoptedElems = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %3, i32 0, i32 1, !dbg !5626
  %4 = load i8, i8* %fAdoptedElems, align 8, !dbg !5626
  %tobool = trunc i8 %4 to i1, !dbg !5626
  br i1 %tobool, label %if.then, label %if.end, !dbg !5629

if.then:                                          ; preds = %for.body
  %5 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5630
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %5, i32 0, i32 5, !dbg !5630
  %6 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager, align 8, !dbg !5630
  %7 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5631
  %fElemList = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %7, i32 0, i32 4, !dbg !5631
  %8 = load i16**, i16*** %fElemList, align 8, !dbg !5631
  %9 = load i32, i32* %index, align 4, !dbg !5632
  %idxprom = zext i32 %9 to i64, !dbg !5633
  %arrayidx = getelementptr inbounds i16*, i16** %8, i64 %idxprom, !dbg !5633
  %10 = load i16*, i16** %arrayidx, align 8, !dbg !5633
  %11 = bitcast i16* %10 to i8*, !dbg !5633
  %12 = bitcast %"class.xercesc_2_7::MemoryManager"* %6 to void (%"class.xercesc_2_7::MemoryManager"*, i8*)***, !dbg !5634
  %vtable = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)**, void (%"class.xercesc_2_7::MemoryManager"*, i8*)*** %12, align 8, !dbg !5634
  %vfn = getelementptr inbounds void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vtable, i64 3, !dbg !5634
  %13 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vfn, align 8, !dbg !5634
  call void %13(%"class.xercesc_2_7::MemoryManager"* %6, i8* %11), !dbg !5634
  br label %if.end, !dbg !5635

if.end:                                           ; preds = %if.then, %for.body
  %14 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5636
  %fElemList2 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %14, i32 0, i32 4, !dbg !5636
  %15 = load i16**, i16*** %fElemList2, align 8, !dbg !5636
  %16 = load i32, i32* %index, align 4, !dbg !5637
  %idxprom3 = zext i32 %16 to i64, !dbg !5638
  %arrayidx4 = getelementptr inbounds i16*, i16** %15, i64 %idxprom3, !dbg !5638
  store i16* null, i16** %arrayidx4, align 8, !dbg !5639
  br label %for.inc, !dbg !5640

for.inc:                                          ; preds = %if.end
  %17 = load i32, i32* %index, align 4, !dbg !5641
  %inc = add i32 %17, 1, !dbg !5641
  store i32 %inc, i32* %index, align 4, !dbg !5641
  br label %for.cond, !dbg !5642, !llvm.loop !5643

for.end:                                          ; preds = %for.cond
  %18 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5645
  %fCurCount5 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %18, i32 0, i32 2, !dbg !5645
  store i32 0, i32* %fCurCount5, align 4, !dbg !5646
  ret void, !dbg !5647
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_716RefArrayVectorOfItE15removeElementAtEj(%"class.xercesc_2_7::RefArrayVectorOf"* %this, i32 %removeAt) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !5648 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::RefArrayVectorOf"*, align 8
  %removeAt.addr = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %index = alloca i32, align 4
  store %"class.xercesc_2_7::RefArrayVectorOf"* %this, %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, metadata !5649, metadata !DIExpression()), !dbg !5650
  store i32 %removeAt, i32* %removeAt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %removeAt.addr, metadata !5651, metadata !DIExpression()), !dbg !5652
  %this1 = load %"class.xercesc_2_7::RefArrayVectorOf"*, %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, align 8
  %0 = load i32, i32* %removeAt.addr, align 4, !dbg !5653
  %1 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5655
  %fCurCount = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %1, i32 0, i32 2, !dbg !5655
  %2 = load i32, i32* %fCurCount, align 4, !dbg !5655
  %cmp = icmp uge i32 %0, %2, !dbg !5656
  br i1 %cmp, label %if.then, label %if.end, !dbg !5657

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !5658
  %3 = bitcast i8* %exception to %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, !dbg !5658
  %4 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5658
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %4, i32 0, i32 5, !dbg !5658
  %5 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager, align 8, !dbg !5658
  invoke void @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i32 77, i32 116, %"class.xercesc_2_7::MemoryManager"* %5)
          to label %invoke.cont unwind label %lpad, !dbg !5658

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*)* @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionD2Ev to i8*)) #14, !dbg !5658
  unreachable, !dbg !5658

lpad:                                             ; preds = %if.then
  %6 = landingpad { i8*, i32 }
          cleanup, !dbg !5659
  %7 = extractvalue { i8*, i32 } %6, 0, !dbg !5659
  store i8* %7, i8** %exn.slot, align 8, !dbg !5659
  %8 = extractvalue { i8*, i32 } %6, 1, !dbg !5659
  store i32 %8, i32* %ehselector.slot, align 4, !dbg !5659
  call void @__cxa_free_exception(i8* %exception) #12, !dbg !5658
  br label %eh.resume, !dbg !5658

if.end:                                           ; preds = %entry
  %9 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5660
  %fAdoptedElems = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %9, i32 0, i32 1, !dbg !5660
  %10 = load i8, i8* %fAdoptedElems, align 8, !dbg !5660
  %tobool = trunc i8 %10 to i1, !dbg !5660
  br i1 %tobool, label %if.then2, label %if.end4, !dbg !5662

if.then2:                                         ; preds = %if.end
  %11 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5663
  %fMemoryManager3 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %11, i32 0, i32 5, !dbg !5663
  %12 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager3, align 8, !dbg !5663
  %13 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5664
  %fElemList = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %13, i32 0, i32 4, !dbg !5664
  %14 = load i16**, i16*** %fElemList, align 8, !dbg !5664
  %15 = load i32, i32* %removeAt.addr, align 4, !dbg !5665
  %idxprom = zext i32 %15 to i64, !dbg !5666
  %arrayidx = getelementptr inbounds i16*, i16** %14, i64 %idxprom, !dbg !5666
  %16 = load i16*, i16** %arrayidx, align 8, !dbg !5666
  %17 = bitcast i16* %16 to i8*, !dbg !5666
  %18 = bitcast %"class.xercesc_2_7::MemoryManager"* %12 to void (%"class.xercesc_2_7::MemoryManager"*, i8*)***, !dbg !5667
  %vtable = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)**, void (%"class.xercesc_2_7::MemoryManager"*, i8*)*** %18, align 8, !dbg !5667
  %vfn = getelementptr inbounds void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vtable, i64 3, !dbg !5667
  %19 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vfn, align 8, !dbg !5667
  call void %19(%"class.xercesc_2_7::MemoryManager"* %12, i8* %17), !dbg !5667
  br label %if.end4, !dbg !5668

if.end4:                                          ; preds = %if.then2, %if.end
  %20 = load i32, i32* %removeAt.addr, align 4, !dbg !5669
  %21 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5671
  %fCurCount5 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %21, i32 0, i32 2, !dbg !5671
  %22 = load i32, i32* %fCurCount5, align 4, !dbg !5671
  %sub = sub i32 %22, 1, !dbg !5672
  %cmp6 = icmp eq i32 %20, %sub, !dbg !5673
  br i1 %cmp6, label %if.then7, label %if.end12, !dbg !5674

if.then7:                                         ; preds = %if.end4
  %23 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5675
  %fElemList8 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %23, i32 0, i32 4, !dbg !5675
  %24 = load i16**, i16*** %fElemList8, align 8, !dbg !5675
  %25 = load i32, i32* %removeAt.addr, align 4, !dbg !5677
  %idxprom9 = zext i32 %25 to i64, !dbg !5678
  %arrayidx10 = getelementptr inbounds i16*, i16** %24, i64 %idxprom9, !dbg !5678
  store i16* null, i16** %arrayidx10, align 8, !dbg !5679
  %26 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5680
  %fCurCount11 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %26, i32 0, i32 2, !dbg !5680
  %27 = load i32, i32* %fCurCount11, align 4, !dbg !5681
  %dec = add i32 %27, -1, !dbg !5681
  store i32 %dec, i32* %fCurCount11, align 4, !dbg !5681
  br label %return, !dbg !5682

if.end12:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5683, metadata !DIExpression()), !dbg !5685
  %28 = load i32, i32* %removeAt.addr, align 4, !dbg !5686
  store i32 %28, i32* %index, align 4, !dbg !5685
  br label %for.cond, !dbg !5687

for.cond:                                         ; preds = %for.inc, %if.end12
  %29 = load i32, i32* %index, align 4, !dbg !5688
  %30 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5690
  %fCurCount13 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %30, i32 0, i32 2, !dbg !5690
  %31 = load i32, i32* %fCurCount13, align 4, !dbg !5690
  %sub14 = sub i32 %31, 1, !dbg !5691
  %cmp15 = icmp ult i32 %29, %sub14, !dbg !5692
  br i1 %cmp15, label %for.body, label %for.end, !dbg !5693

for.body:                                         ; preds = %for.cond
  %32 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5694
  %fElemList16 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %32, i32 0, i32 4, !dbg !5694
  %33 = load i16**, i16*** %fElemList16, align 8, !dbg !5694
  %34 = load i32, i32* %index, align 4, !dbg !5695
  %add = add i32 %34, 1, !dbg !5696
  %idxprom17 = zext i32 %add to i64, !dbg !5697
  %arrayidx18 = getelementptr inbounds i16*, i16** %33, i64 %idxprom17, !dbg !5697
  %35 = load i16*, i16** %arrayidx18, align 8, !dbg !5697
  %36 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5698
  %fElemList19 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %36, i32 0, i32 4, !dbg !5698
  %37 = load i16**, i16*** %fElemList19, align 8, !dbg !5698
  %38 = load i32, i32* %index, align 4, !dbg !5699
  %idxprom20 = zext i32 %38 to i64, !dbg !5700
  %arrayidx21 = getelementptr inbounds i16*, i16** %37, i64 %idxprom20, !dbg !5700
  store i16* %35, i16** %arrayidx21, align 8, !dbg !5701
  br label %for.inc, !dbg !5700

for.inc:                                          ; preds = %for.body
  %39 = load i32, i32* %index, align 4, !dbg !5702
  %inc = add i32 %39, 1, !dbg !5702
  store i32 %inc, i32* %index, align 4, !dbg !5702
  br label %for.cond, !dbg !5703, !llvm.loop !5704

for.end:                                          ; preds = %for.cond
  %40 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5706
  %fElemList22 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %40, i32 0, i32 4, !dbg !5706
  %41 = load i16**, i16*** %fElemList22, align 8, !dbg !5706
  %42 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5707
  %fCurCount23 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %42, i32 0, i32 2, !dbg !5707
  %43 = load i32, i32* %fCurCount23, align 4, !dbg !5707
  %sub24 = sub i32 %43, 1, !dbg !5708
  %idxprom25 = zext i32 %sub24 to i64, !dbg !5709
  %arrayidx26 = getelementptr inbounds i16*, i16** %41, i64 %idxprom25, !dbg !5709
  store i16* null, i16** %arrayidx26, align 8, !dbg !5710
  %44 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5711
  %fCurCount27 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %44, i32 0, i32 2, !dbg !5711
  %45 = load i32, i32* %fCurCount27, align 4, !dbg !5712
  %dec28 = add i32 %45, -1, !dbg !5712
  store i32 %dec28, i32* %fCurCount27, align 4, !dbg !5712
  br label %return, !dbg !5713

return:                                           ; preds = %for.end, %if.then7
  ret void, !dbg !5713

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !5658
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !5658
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !5658
  %lpad.val29 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !5658
  resume { i8*, i32 } %lpad.val29, !dbg !5658
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_716RefArrayVectorOfItE17removeLastElementEv(%"class.xercesc_2_7::RefArrayVectorOf"* %this) unnamed_addr #3 comdat align 2 !dbg !5714 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::RefArrayVectorOf"*, align 8
  store %"class.xercesc_2_7::RefArrayVectorOf"* %this, %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, metadata !5715, metadata !DIExpression()), !dbg !5716
  %this1 = load %"class.xercesc_2_7::RefArrayVectorOf"*, %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5717
  %fCurCount = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %0, i32 0, i32 2, !dbg !5717
  %1 = load i32, i32* %fCurCount, align 4, !dbg !5717
  %tobool = icmp ne i32 %1, 0, !dbg !5719
  br i1 %tobool, label %if.end, label %if.then, !dbg !5720

if.then:                                          ; preds = %entry
  br label %if.end6, !dbg !5721

if.end:                                           ; preds = %entry
  %2 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5722
  %fCurCount2 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %2, i32 0, i32 2, !dbg !5722
  %3 = load i32, i32* %fCurCount2, align 4, !dbg !5723
  %dec = add i32 %3, -1, !dbg !5723
  store i32 %dec, i32* %fCurCount2, align 4, !dbg !5723
  %4 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5724
  %fAdoptedElems = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %4, i32 0, i32 1, !dbg !5724
  %5 = load i8, i8* %fAdoptedElems, align 8, !dbg !5724
  %tobool3 = trunc i8 %5 to i1, !dbg !5724
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !5726

if.then4:                                         ; preds = %if.end
  %6 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5727
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %6, i32 0, i32 5, !dbg !5727
  %7 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager, align 8, !dbg !5727
  %8 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5728
  %fElemList = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %8, i32 0, i32 4, !dbg !5728
  %9 = load i16**, i16*** %fElemList, align 8, !dbg !5728
  %10 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5729
  %fCurCount5 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %10, i32 0, i32 2, !dbg !5729
  %11 = load i32, i32* %fCurCount5, align 4, !dbg !5729
  %idxprom = zext i32 %11 to i64, !dbg !5730
  %arrayidx = getelementptr inbounds i16*, i16** %9, i64 %idxprom, !dbg !5730
  %12 = load i16*, i16** %arrayidx, align 8, !dbg !5730
  %13 = bitcast i16* %12 to i8*, !dbg !5730
  %14 = bitcast %"class.xercesc_2_7::MemoryManager"* %7 to void (%"class.xercesc_2_7::MemoryManager"*, i8*)***, !dbg !5731
  %vtable = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)**, void (%"class.xercesc_2_7::MemoryManager"*, i8*)*** %14, align 8, !dbg !5731
  %vfn = getelementptr inbounds void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vtable, i64 3, !dbg !5731
  %15 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vfn, align 8, !dbg !5731
  call void %15(%"class.xercesc_2_7::MemoryManager"* %7, i8* %13), !dbg !5731
  br label %if.end6, !dbg !5732

if.end6:                                          ; preds = %if.then, %if.then4, %if.end
  ret void, !dbg !5733
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_716RefArrayVectorOfItE7cleanupEv(%"class.xercesc_2_7::RefArrayVectorOf"* %this) unnamed_addr #3 comdat align 2 !dbg !5734 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::RefArrayVectorOf"*, align 8
  %index = alloca i32, align 4
  store %"class.xercesc_2_7::RefArrayVectorOf"* %this, %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, metadata !5735, metadata !DIExpression()), !dbg !5736
  %this1 = load %"class.xercesc_2_7::RefArrayVectorOf"*, %"class.xercesc_2_7::RefArrayVectorOf"** %this.addr, align 8
  %0 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5737
  %fAdoptedElems = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %0, i32 0, i32 1, !dbg !5737
  %1 = load i8, i8* %fAdoptedElems, align 8, !dbg !5737
  %tobool = trunc i8 %1 to i1, !dbg !5737
  br i1 %tobool, label %if.then, label %if.end, !dbg !5739

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5740, metadata !DIExpression()), !dbg !5743
  store i32 0, i32* %index, align 4, !dbg !5743
  br label %for.cond, !dbg !5744

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i32, i32* %index, align 4, !dbg !5745
  %3 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5747
  %fCurCount = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %3, i32 0, i32 2, !dbg !5747
  %4 = load i32, i32* %fCurCount, align 4, !dbg !5747
  %cmp = icmp ult i32 %2, %4, !dbg !5748
  br i1 %cmp, label %for.body, label %for.end, !dbg !5749

for.body:                                         ; preds = %for.cond
  %5 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5750
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %5, i32 0, i32 5, !dbg !5750
  %6 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager, align 8, !dbg !5750
  %7 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5751
  %fElemList = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %7, i32 0, i32 4, !dbg !5751
  %8 = load i16**, i16*** %fElemList, align 8, !dbg !5751
  %9 = load i32, i32* %index, align 4, !dbg !5752
  %idxprom = zext i32 %9 to i64, !dbg !5753
  %arrayidx = getelementptr inbounds i16*, i16** %8, i64 %idxprom, !dbg !5753
  %10 = load i16*, i16** %arrayidx, align 8, !dbg !5753
  %11 = bitcast i16* %10 to i8*, !dbg !5753
  %12 = bitcast %"class.xercesc_2_7::MemoryManager"* %6 to void (%"class.xercesc_2_7::MemoryManager"*, i8*)***, !dbg !5754
  %vtable = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)**, void (%"class.xercesc_2_7::MemoryManager"*, i8*)*** %12, align 8, !dbg !5754
  %vfn = getelementptr inbounds void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vtable, i64 3, !dbg !5754
  %13 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vfn, align 8, !dbg !5754
  call void %13(%"class.xercesc_2_7::MemoryManager"* %6, i8* %11), !dbg !5754
  br label %for.inc, !dbg !5755

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %index, align 4, !dbg !5756
  %inc = add i32 %14, 1, !dbg !5756
  store i32 %inc, i32* %index, align 4, !dbg !5756
  br label %for.cond, !dbg !5757, !llvm.loop !5758

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !5760

if.end:                                           ; preds = %for.end, %entry
  %15 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5761
  %fMemoryManager2 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %15, i32 0, i32 5, !dbg !5761
  %16 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager2, align 8, !dbg !5761
  %17 = bitcast %"class.xercesc_2_7::RefArrayVectorOf"* %this1 to %"class.xercesc_2_7::BaseRefVectorOf"*, !dbg !5762
  %fElemList3 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %17, i32 0, i32 4, !dbg !5762
  %18 = load i16**, i16*** %fElemList3, align 8, !dbg !5762
  %19 = bitcast i16** %18 to i8*, !dbg !5763
  %20 = bitcast %"class.xercesc_2_7::MemoryManager"* %16 to void (%"class.xercesc_2_7::MemoryManager"*, i8*)***, !dbg !5764
  %vtable4 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)**, void (%"class.xercesc_2_7::MemoryManager"*, i8*)*** %20, align 8, !dbg !5764
  %vfn5 = getelementptr inbounds void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vtable4, i64 3, !dbg !5764
  %21 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vfn5, align 8, !dbg !5764
  call void %21(%"class.xercesc_2_7::MemoryManager"* %16, i8* %19), !dbg !5764
  ret void, !dbg !5765
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_715BaseRefVectorOfItED2Ev(%"class.xercesc_2_7::BaseRefVectorOf"* %this) unnamed_addr #1 comdat align 2 !dbg !5766 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::BaseRefVectorOf"*, align 8
  store %"class.xercesc_2_7::BaseRefVectorOf"* %this, %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, metadata !5767, metadata !DIExpression()), !dbg !5768
  %this1 = load %"class.xercesc_2_7::BaseRefVectorOf"*, %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, align 8
  ret void, !dbg !5769
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_715BaseRefVectorOfItED0Ev(%"class.xercesc_2_7::BaseRefVectorOf"* %this) unnamed_addr #1 comdat align 2 !dbg !5770 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::BaseRefVectorOf"*, align 8
  store %"class.xercesc_2_7::BaseRefVectorOf"* %this, %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, metadata !5771, metadata !DIExpression()), !dbg !5772
  %this1 = load %"class.xercesc_2_7::BaseRefVectorOf"*, %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, align 8
  call void @_ZN11xercesc_2_715BaseRefVectorOfItED2Ev(%"class.xercesc_2_7::BaseRefVectorOf"* %this1) #12, !dbg !5773
  %0 = bitcast %"class.xercesc_2_7::BaseRefVectorOf"* %this1 to i8*, !dbg !5773
  call void @_ZN11xercesc_2_77XMemorydlEPv(i8* %0) #12, !dbg !5773
  ret void, !dbg !5774
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_715BaseRefVectorOfItE12setElementAtEPtj(%"class.xercesc_2_7::BaseRefVectorOf"* %this, i16* %toSet, i32 %setAt) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !5775 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::BaseRefVectorOf"*, align 8
  %toSet.addr = alloca i16*, align 8
  %setAt.addr = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.xercesc_2_7::BaseRefVectorOf"* %this, %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, metadata !5776, metadata !DIExpression()), !dbg !5777
  store i16* %toSet, i16** %toSet.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toSet.addr, metadata !5778, metadata !DIExpression()), !dbg !5779
  store i32 %setAt, i32* %setAt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %setAt.addr, metadata !5780, metadata !DIExpression()), !dbg !5781
  %this1 = load %"class.xercesc_2_7::BaseRefVectorOf"*, %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, align 8
  %0 = load i32, i32* %setAt.addr, align 4, !dbg !5782
  %fCurCount = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 2, !dbg !5784
  %1 = load i32, i32* %fCurCount, align 4, !dbg !5784
  %cmp = icmp uge i32 %0, %1, !dbg !5785
  br i1 %cmp, label %if.then, label %if.end, !dbg !5786

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !5787
  %2 = bitcast i8* %exception to %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, !dbg !5787
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 5, !dbg !5787
  %3 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager, align 8, !dbg !5787
  invoke void @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i32 67, i32 116, %"class.xercesc_2_7::MemoryManager"* %3)
          to label %invoke.cont unwind label %lpad, !dbg !5787

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*)* @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionD2Ev to i8*)) #14, !dbg !5787
  unreachable, !dbg !5787

lpad:                                             ; preds = %if.then
  %4 = landingpad { i8*, i32 }
          cleanup, !dbg !5788
  %5 = extractvalue { i8*, i32 } %4, 0, !dbg !5788
  store i8* %5, i8** %exn.slot, align 8, !dbg !5788
  %6 = extractvalue { i8*, i32 } %4, 1, !dbg !5788
  store i32 %6, i32* %ehselector.slot, align 4, !dbg !5788
  call void @__cxa_free_exception(i8* %exception) #12, !dbg !5787
  br label %eh.resume, !dbg !5787

if.end:                                           ; preds = %entry
  %fAdoptedElems = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 1, !dbg !5789
  %7 = load i8, i8* %fAdoptedElems, align 8, !dbg !5789
  %tobool = trunc i8 %7 to i1, !dbg !5789
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !5791

if.then2:                                         ; preds = %if.end
  %fElemList = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 4, !dbg !5792
  %8 = load i16**, i16*** %fElemList, align 8, !dbg !5792
  %9 = load i32, i32* %setAt.addr, align 4, !dbg !5793
  %idxprom = zext i32 %9 to i64, !dbg !5792
  %arrayidx = getelementptr inbounds i16*, i16** %8, i64 %idxprom, !dbg !5792
  %10 = load i16*, i16** %arrayidx, align 8, !dbg !5792
  %isnull = icmp eq i16* %10, null, !dbg !5794
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !5794

delete.notnull:                                   ; preds = %if.then2
  %11 = bitcast i16* %10 to i8*, !dbg !5794
  call void @_ZdlPv(i8* %11) #13, !dbg !5794
  br label %delete.end, !dbg !5794

delete.end:                                       ; preds = %delete.notnull, %if.then2
  br label %if.end3, !dbg !5794

if.end3:                                          ; preds = %delete.end, %if.end
  %12 = load i16*, i16** %toSet.addr, align 8, !dbg !5795
  %fElemList4 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 4, !dbg !5796
  %13 = load i16**, i16*** %fElemList4, align 8, !dbg !5796
  %14 = load i32, i32* %setAt.addr, align 4, !dbg !5797
  %idxprom5 = zext i32 %14 to i64, !dbg !5796
  %arrayidx6 = getelementptr inbounds i16*, i16** %13, i64 %idxprom5, !dbg !5796
  store i16* %12, i16** %arrayidx6, align 8, !dbg !5798
  ret void, !dbg !5799

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !5787
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !5787
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !5787
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !5787
  resume { i8*, i32 } %lpad.val7, !dbg !5787
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_715BaseRefVectorOfItE17removeAllElementsEv(%"class.xercesc_2_7::BaseRefVectorOf"* %this) unnamed_addr #1 comdat align 2 !dbg !5800 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::BaseRefVectorOf"*, align 8
  %index = alloca i32, align 4
  store %"class.xercesc_2_7::BaseRefVectorOf"* %this, %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, metadata !5801, metadata !DIExpression()), !dbg !5802
  %this1 = load %"class.xercesc_2_7::BaseRefVectorOf"*, %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5803, metadata !DIExpression()), !dbg !5805
  store i32 0, i32* %index, align 4, !dbg !5805
  br label %for.cond, !dbg !5806

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %index, align 4, !dbg !5807
  %fCurCount = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 2, !dbg !5809
  %1 = load i32, i32* %fCurCount, align 4, !dbg !5809
  %cmp = icmp ult i32 %0, %1, !dbg !5810
  br i1 %cmp, label %for.body, label %for.end, !dbg !5811

for.body:                                         ; preds = %for.cond
  %fAdoptedElems = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 1, !dbg !5812
  %2 = load i8, i8* %fAdoptedElems, align 8, !dbg !5812
  %tobool = trunc i8 %2 to i1, !dbg !5812
  br i1 %tobool, label %if.then, label %if.end, !dbg !5815

if.then:                                          ; preds = %for.body
  %fElemList = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 4, !dbg !5816
  %3 = load i16**, i16*** %fElemList, align 8, !dbg !5816
  %4 = load i32, i32* %index, align 4, !dbg !5817
  %idxprom = zext i32 %4 to i64, !dbg !5816
  %arrayidx = getelementptr inbounds i16*, i16** %3, i64 %idxprom, !dbg !5816
  %5 = load i16*, i16** %arrayidx, align 8, !dbg !5816
  %isnull = icmp eq i16* %5, null, !dbg !5818
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !5818

delete.notnull:                                   ; preds = %if.then
  %6 = bitcast i16* %5 to i8*, !dbg !5818
  call void @_ZdlPv(i8* %6) #13, !dbg !5818
  br label %delete.end, !dbg !5818

delete.end:                                       ; preds = %delete.notnull, %if.then
  br label %if.end, !dbg !5818

if.end:                                           ; preds = %delete.end, %for.body
  %fElemList2 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 4, !dbg !5819
  %7 = load i16**, i16*** %fElemList2, align 8, !dbg !5819
  %8 = load i32, i32* %index, align 4, !dbg !5820
  %idxprom3 = zext i32 %8 to i64, !dbg !5819
  %arrayidx4 = getelementptr inbounds i16*, i16** %7, i64 %idxprom3, !dbg !5819
  store i16* null, i16** %arrayidx4, align 8, !dbg !5821
  br label %for.inc, !dbg !5822

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %index, align 4, !dbg !5823
  %inc = add i32 %9, 1, !dbg !5823
  store i32 %inc, i32* %index, align 4, !dbg !5823
  br label %for.cond, !dbg !5824, !llvm.loop !5825

for.end:                                          ; preds = %for.cond
  %fCurCount5 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 2, !dbg !5827
  store i32 0, i32* %fCurCount5, align 4, !dbg !5828
  ret void, !dbg !5829
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_715BaseRefVectorOfItE15removeElementAtEj(%"class.xercesc_2_7::BaseRefVectorOf"* %this, i32 %removeAt) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !5830 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::BaseRefVectorOf"*, align 8
  %removeAt.addr = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %index = alloca i32, align 4
  store %"class.xercesc_2_7::BaseRefVectorOf"* %this, %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, metadata !5831, metadata !DIExpression()), !dbg !5832
  store i32 %removeAt, i32* %removeAt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %removeAt.addr, metadata !5833, metadata !DIExpression()), !dbg !5834
  %this1 = load %"class.xercesc_2_7::BaseRefVectorOf"*, %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, align 8
  %0 = load i32, i32* %removeAt.addr, align 4, !dbg !5835
  %fCurCount = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 2, !dbg !5837
  %1 = load i32, i32* %fCurCount, align 4, !dbg !5837
  %cmp = icmp uge i32 %0, %1, !dbg !5838
  br i1 %cmp, label %if.then, label %if.end, !dbg !5839

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 48) #12, !dbg !5840
  %2 = bitcast i8* %exception to %"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*, !dbg !5840
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 5, !dbg !5840
  %3 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager, align 8, !dbg !5840
  invoke void @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"* %2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i32 144, i32 116, %"class.xercesc_2_7::MemoryManager"* %3)
          to label %invoke.cont unwind label %lpad, !dbg !5840

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_7::ArrayIndexOutOfBoundsException"*)* @_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionD2Ev to i8*)) #14, !dbg !5840
  unreachable, !dbg !5840

lpad:                                             ; preds = %if.then
  %4 = landingpad { i8*, i32 }
          cleanup, !dbg !5841
  %5 = extractvalue { i8*, i32 } %4, 0, !dbg !5841
  store i8* %5, i8** %exn.slot, align 8, !dbg !5841
  %6 = extractvalue { i8*, i32 } %4, 1, !dbg !5841
  store i32 %6, i32* %ehselector.slot, align 4, !dbg !5841
  call void @__cxa_free_exception(i8* %exception) #12, !dbg !5840
  br label %eh.resume, !dbg !5840

if.end:                                           ; preds = %entry
  %fAdoptedElems = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 1, !dbg !5842
  %7 = load i8, i8* %fAdoptedElems, align 8, !dbg !5842
  %tobool = trunc i8 %7 to i1, !dbg !5842
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !5844

if.then2:                                         ; preds = %if.end
  %fElemList = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 4, !dbg !5845
  %8 = load i16**, i16*** %fElemList, align 8, !dbg !5845
  %9 = load i32, i32* %removeAt.addr, align 4, !dbg !5846
  %idxprom = zext i32 %9 to i64, !dbg !5845
  %arrayidx = getelementptr inbounds i16*, i16** %8, i64 %idxprom, !dbg !5845
  %10 = load i16*, i16** %arrayidx, align 8, !dbg !5845
  %isnull = icmp eq i16* %10, null, !dbg !5847
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !5847

delete.notnull:                                   ; preds = %if.then2
  %11 = bitcast i16* %10 to i8*, !dbg !5847
  call void @_ZdlPv(i8* %11) #13, !dbg !5847
  br label %delete.end, !dbg !5847

delete.end:                                       ; preds = %delete.notnull, %if.then2
  br label %if.end3, !dbg !5847

if.end3:                                          ; preds = %delete.end, %if.end
  %12 = load i32, i32* %removeAt.addr, align 4, !dbg !5848
  %fCurCount4 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 2, !dbg !5850
  %13 = load i32, i32* %fCurCount4, align 4, !dbg !5850
  %sub = sub i32 %13, 1, !dbg !5851
  %cmp5 = icmp eq i32 %12, %sub, !dbg !5852
  br i1 %cmp5, label %if.then6, label %if.end11, !dbg !5853

if.then6:                                         ; preds = %if.end3
  %fElemList7 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 4, !dbg !5854
  %14 = load i16**, i16*** %fElemList7, align 8, !dbg !5854
  %15 = load i32, i32* %removeAt.addr, align 4, !dbg !5856
  %idxprom8 = zext i32 %15 to i64, !dbg !5854
  %arrayidx9 = getelementptr inbounds i16*, i16** %14, i64 %idxprom8, !dbg !5854
  store i16* null, i16** %arrayidx9, align 8, !dbg !5857
  %fCurCount10 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 2, !dbg !5858
  %16 = load i32, i32* %fCurCount10, align 4, !dbg !5859
  %dec = add i32 %16, -1, !dbg !5859
  store i32 %dec, i32* %fCurCount10, align 4, !dbg !5859
  br label %return, !dbg !5860

if.end11:                                         ; preds = %if.end3
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5861, metadata !DIExpression()), !dbg !5863
  %17 = load i32, i32* %removeAt.addr, align 4, !dbg !5864
  store i32 %17, i32* %index, align 4, !dbg !5863
  br label %for.cond, !dbg !5865

for.cond:                                         ; preds = %for.inc, %if.end11
  %18 = load i32, i32* %index, align 4, !dbg !5866
  %fCurCount12 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 2, !dbg !5868
  %19 = load i32, i32* %fCurCount12, align 4, !dbg !5868
  %sub13 = sub i32 %19, 1, !dbg !5869
  %cmp14 = icmp ult i32 %18, %sub13, !dbg !5870
  br i1 %cmp14, label %for.body, label %for.end, !dbg !5871

for.body:                                         ; preds = %for.cond
  %fElemList15 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 4, !dbg !5872
  %20 = load i16**, i16*** %fElemList15, align 8, !dbg !5872
  %21 = load i32, i32* %index, align 4, !dbg !5873
  %add = add i32 %21, 1, !dbg !5874
  %idxprom16 = zext i32 %add to i64, !dbg !5872
  %arrayidx17 = getelementptr inbounds i16*, i16** %20, i64 %idxprom16, !dbg !5872
  %22 = load i16*, i16** %arrayidx17, align 8, !dbg !5872
  %fElemList18 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 4, !dbg !5875
  %23 = load i16**, i16*** %fElemList18, align 8, !dbg !5875
  %24 = load i32, i32* %index, align 4, !dbg !5876
  %idxprom19 = zext i32 %24 to i64, !dbg !5875
  %arrayidx20 = getelementptr inbounds i16*, i16** %23, i64 %idxprom19, !dbg !5875
  store i16* %22, i16** %arrayidx20, align 8, !dbg !5877
  br label %for.inc, !dbg !5875

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %index, align 4, !dbg !5878
  %inc = add i32 %25, 1, !dbg !5878
  store i32 %inc, i32* %index, align 4, !dbg !5878
  br label %for.cond, !dbg !5879, !llvm.loop !5880

for.end:                                          ; preds = %for.cond
  %fElemList21 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 4, !dbg !5882
  %26 = load i16**, i16*** %fElemList21, align 8, !dbg !5882
  %fCurCount22 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 2, !dbg !5883
  %27 = load i32, i32* %fCurCount22, align 4, !dbg !5883
  %sub23 = sub i32 %27, 1, !dbg !5884
  %idxprom24 = zext i32 %sub23 to i64, !dbg !5882
  %arrayidx25 = getelementptr inbounds i16*, i16** %26, i64 %idxprom24, !dbg !5882
  store i16* null, i16** %arrayidx25, align 8, !dbg !5885
  %fCurCount26 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 2, !dbg !5886
  %28 = load i32, i32* %fCurCount26, align 4, !dbg !5887
  %dec27 = add i32 %28, -1, !dbg !5887
  store i32 %dec27, i32* %fCurCount26, align 4, !dbg !5887
  br label %return, !dbg !5888

return:                                           ; preds = %for.end, %if.then6
  ret void, !dbg !5888

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !5840
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !5840
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !5840
  %lpad.val28 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !5840
  resume { i8*, i32 } %lpad.val28, !dbg !5840
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_715BaseRefVectorOfItE17removeLastElementEv(%"class.xercesc_2_7::BaseRefVectorOf"* %this) unnamed_addr #1 comdat align 2 !dbg !5889 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::BaseRefVectorOf"*, align 8
  store %"class.xercesc_2_7::BaseRefVectorOf"* %this, %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, metadata !5890, metadata !DIExpression()), !dbg !5891
  %this1 = load %"class.xercesc_2_7::BaseRefVectorOf"*, %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, align 8
  %fCurCount = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 2, !dbg !5892
  %0 = load i32, i32* %fCurCount, align 4, !dbg !5892
  %tobool = icmp ne i32 %0, 0, !dbg !5892
  br i1 %tobool, label %if.end, label %if.then, !dbg !5894

if.then:                                          ; preds = %entry
  br label %if.end6, !dbg !5895

if.end:                                           ; preds = %entry
  %fCurCount2 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 2, !dbg !5896
  %1 = load i32, i32* %fCurCount2, align 4, !dbg !5897
  %dec = add i32 %1, -1, !dbg !5897
  store i32 %dec, i32* %fCurCount2, align 4, !dbg !5897
  %fAdoptedElems = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 1, !dbg !5898
  %2 = load i8, i8* %fAdoptedElems, align 8, !dbg !5898
  %tobool3 = trunc i8 %2 to i1, !dbg !5898
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !5900

if.then4:                                         ; preds = %if.end
  %fElemList = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 4, !dbg !5901
  %3 = load i16**, i16*** %fElemList, align 8, !dbg !5901
  %fCurCount5 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 2, !dbg !5902
  %4 = load i32, i32* %fCurCount5, align 4, !dbg !5902
  %idxprom = zext i32 %4 to i64, !dbg !5901
  %arrayidx = getelementptr inbounds i16*, i16** %3, i64 %idxprom, !dbg !5901
  %5 = load i16*, i16** %arrayidx, align 8, !dbg !5901
  %isnull = icmp eq i16* %5, null, !dbg !5903
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !5903

delete.notnull:                                   ; preds = %if.then4
  %6 = bitcast i16* %5 to i8*, !dbg !5903
  call void @_ZdlPv(i8* %6) #13, !dbg !5903
  br label %delete.end, !dbg !5903

delete.end:                                       ; preds = %delete.notnull, %if.then4
  br label %if.end6, !dbg !5903

if.end6:                                          ; preds = %if.then, %delete.end, %if.end
  ret void, !dbg !5904
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_715BaseRefVectorOfItE7cleanupEv(%"class.xercesc_2_7::BaseRefVectorOf"* %this) unnamed_addr #3 comdat align 2 !dbg !5905 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::BaseRefVectorOf"*, align 8
  %index = alloca i32, align 4
  store %"class.xercesc_2_7::BaseRefVectorOf"* %this, %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, metadata !5906, metadata !DIExpression()), !dbg !5907
  %this1 = load %"class.xercesc_2_7::BaseRefVectorOf"*, %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, align 8
  %fAdoptedElems = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 1, !dbg !5908
  %0 = load i8, i8* %fAdoptedElems, align 8, !dbg !5908
  %tobool = trunc i8 %0 to i1, !dbg !5908
  br i1 %tobool, label %if.then, label %if.end, !dbg !5910

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5911, metadata !DIExpression()), !dbg !5914
  store i32 0, i32* %index, align 4, !dbg !5914
  br label %for.cond, !dbg !5915

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32, i32* %index, align 4, !dbg !5916
  %fCurCount = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 2, !dbg !5918
  %2 = load i32, i32* %fCurCount, align 4, !dbg !5918
  %cmp = icmp ult i32 %1, %2, !dbg !5919
  br i1 %cmp, label %for.body, label %for.end, !dbg !5920

for.body:                                         ; preds = %for.cond
  %fElemList = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 4, !dbg !5921
  %3 = load i16**, i16*** %fElemList, align 8, !dbg !5921
  %4 = load i32, i32* %index, align 4, !dbg !5922
  %idxprom = zext i32 %4 to i64, !dbg !5921
  %arrayidx = getelementptr inbounds i16*, i16** %3, i64 %idxprom, !dbg !5921
  %5 = load i16*, i16** %arrayidx, align 8, !dbg !5921
  %isnull = icmp eq i16* %5, null, !dbg !5923
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !5923

delete.notnull:                                   ; preds = %for.body
  %6 = bitcast i16* %5 to i8*, !dbg !5923
  call void @_ZdlPv(i8* %6) #13, !dbg !5923
  br label %delete.end, !dbg !5923

delete.end:                                       ; preds = %delete.notnull, %for.body
  br label %for.inc, !dbg !5923

for.inc:                                          ; preds = %delete.end
  %7 = load i32, i32* %index, align 4, !dbg !5924
  %inc = add i32 %7, 1, !dbg !5924
  store i32 %inc, i32* %index, align 4, !dbg !5924
  br label %for.cond, !dbg !5925, !llvm.loop !5926

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !5928

if.end:                                           ; preds = %for.end, %entry
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 5, !dbg !5929
  %8 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager, align 8, !dbg !5929
  %fElemList2 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 4, !dbg !5930
  %9 = load i16**, i16*** %fElemList2, align 8, !dbg !5930
  %10 = bitcast i16** %9 to i8*, !dbg !5930
  %11 = bitcast %"class.xercesc_2_7::MemoryManager"* %8 to void (%"class.xercesc_2_7::MemoryManager"*, i8*)***, !dbg !5931
  %vtable = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)**, void (%"class.xercesc_2_7::MemoryManager"*, i8*)*** %11, align 8, !dbg !5931
  %vfn = getelementptr inbounds void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vtable, i64 3, !dbg !5931
  %12 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vfn, align 8, !dbg !5931
  call void %12(%"class.xercesc_2_7::MemoryManager"* %8, i8* %10), !dbg !5931
  ret void, !dbg !5932
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN11xercesc_2_715BaseRefVectorOfItE19ensureExtraCapacityEj(%"class.xercesc_2_7::BaseRefVectorOf"* %this, i32 %length) #3 comdat align 2 !dbg !5933 {
entry:
  %this.addr = alloca %"class.xercesc_2_7::BaseRefVectorOf"*, align 8
  %length.addr = alloca i32, align 4
  %newMax = alloca i32, align 4
  %newList = alloca i16**, align 8
  %index = alloca i32, align 4
  store %"class.xercesc_2_7::BaseRefVectorOf"* %this, %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, metadata !5934, metadata !DIExpression()), !dbg !5935
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !5936, metadata !DIExpression()), !dbg !5937
  %this1 = load %"class.xercesc_2_7::BaseRefVectorOf"*, %"class.xercesc_2_7::BaseRefVectorOf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i32* %newMax, metadata !5938, metadata !DIExpression()), !dbg !5939
  %fCurCount = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 2, !dbg !5940
  %0 = load i32, i32* %fCurCount, align 4, !dbg !5940
  %1 = load i32, i32* %length.addr, align 4, !dbg !5941
  %add = add i32 %0, %1, !dbg !5942
  store i32 %add, i32* %newMax, align 4, !dbg !5939
  %2 = load i32, i32* %newMax, align 4, !dbg !5943
  %fMaxCount = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 3, !dbg !5945
  %3 = load i32, i32* %fMaxCount, align 8, !dbg !5945
  %cmp = icmp ule i32 %2, %3, !dbg !5946
  br i1 %cmp, label %if.then, label %if.end, !dbg !5947

if.then:                                          ; preds = %entry
  br label %return, !dbg !5948

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %newMax, align 4, !dbg !5949
  %fMaxCount2 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 3, !dbg !5951
  %5 = load i32, i32* %fMaxCount2, align 8, !dbg !5951
  %fMaxCount3 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 3, !dbg !5952
  %6 = load i32, i32* %fMaxCount3, align 8, !dbg !5952
  %div = udiv i32 %6, 2, !dbg !5953
  %add4 = add i32 %5, %div, !dbg !5954
  %cmp5 = icmp ult i32 %4, %add4, !dbg !5955
  br i1 %cmp5, label %if.then6, label %if.end11, !dbg !5956

if.then6:                                         ; preds = %if.end
  %fMaxCount7 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 3, !dbg !5957
  %7 = load i32, i32* %fMaxCount7, align 8, !dbg !5957
  %fMaxCount8 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 3, !dbg !5958
  %8 = load i32, i32* %fMaxCount8, align 8, !dbg !5958
  %div9 = udiv i32 %8, 2, !dbg !5959
  %add10 = add i32 %7, %div9, !dbg !5960
  store i32 %add10, i32* %newMax, align 4, !dbg !5961
  br label %if.end11, !dbg !5962

if.end11:                                         ; preds = %if.then6, %if.end
  call void @llvm.dbg.declare(metadata i16*** %newList, metadata !5963, metadata !DIExpression()), !dbg !5964
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 5, !dbg !5965
  %9 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager, align 8, !dbg !5965
  %10 = load i32, i32* %newMax, align 4, !dbg !5966
  %conv = zext i32 %10 to i64, !dbg !5966
  %mul = mul i64 %conv, 8, !dbg !5967
  %11 = bitcast %"class.xercesc_2_7::MemoryManager"* %9 to i8* (%"class.xercesc_2_7::MemoryManager"*, i64)***, !dbg !5968
  %vtable = load i8* (%"class.xercesc_2_7::MemoryManager"*, i64)**, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*** %11, align 8, !dbg !5968
  %vfn = getelementptr inbounds i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)** %vtable, i64 2, !dbg !5968
  %12 = load i8* (%"class.xercesc_2_7::MemoryManager"*, i64)*, i8* (%"class.xercesc_2_7::MemoryManager"*, i64)** %vfn, align 8, !dbg !5968
  %call = call i8* %12(%"class.xercesc_2_7::MemoryManager"* %9, i64 %mul), !dbg !5968
  %13 = bitcast i8* %call to i16**, !dbg !5969
  store i16** %13, i16*** %newList, align 8, !dbg !5964
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5970, metadata !DIExpression()), !dbg !5971
  store i32 0, i32* %index, align 4, !dbg !5971
  br label %for.cond, !dbg !5972

for.cond:                                         ; preds = %for.inc, %if.end11
  %14 = load i32, i32* %index, align 4, !dbg !5973
  %fCurCount12 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 2, !dbg !5976
  %15 = load i32, i32* %fCurCount12, align 4, !dbg !5976
  %cmp13 = icmp ult i32 %14, %15, !dbg !5977
  br i1 %cmp13, label %for.body, label %for.end, !dbg !5978

for.body:                                         ; preds = %for.cond
  %fElemList = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 4, !dbg !5979
  %16 = load i16**, i16*** %fElemList, align 8, !dbg !5979
  %17 = load i32, i32* %index, align 4, !dbg !5980
  %idxprom = zext i32 %17 to i64, !dbg !5979
  %arrayidx = getelementptr inbounds i16*, i16** %16, i64 %idxprom, !dbg !5979
  %18 = load i16*, i16** %arrayidx, align 8, !dbg !5979
  %19 = load i16**, i16*** %newList, align 8, !dbg !5981
  %20 = load i32, i32* %index, align 4, !dbg !5982
  %idxprom14 = zext i32 %20 to i64, !dbg !5981
  %arrayidx15 = getelementptr inbounds i16*, i16** %19, i64 %idxprom14, !dbg !5981
  store i16* %18, i16** %arrayidx15, align 8, !dbg !5983
  br label %for.inc, !dbg !5981

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %index, align 4, !dbg !5984
  %inc = add i32 %21, 1, !dbg !5984
  store i32 %inc, i32* %index, align 4, !dbg !5984
  br label %for.cond, !dbg !5985, !llvm.loop !5986

for.end:                                          ; preds = %for.cond
  br label %for.cond16, !dbg !5988

for.cond16:                                       ; preds = %for.inc21, %for.end
  %22 = load i32, i32* %index, align 4, !dbg !5989
  %23 = load i32, i32* %newMax, align 4, !dbg !5992
  %cmp17 = icmp ult i32 %22, %23, !dbg !5993
  br i1 %cmp17, label %for.body18, label %for.end23, !dbg !5994

for.body18:                                       ; preds = %for.cond16
  %24 = load i16**, i16*** %newList, align 8, !dbg !5995
  %25 = load i32, i32* %index, align 4, !dbg !5996
  %idxprom19 = zext i32 %25 to i64, !dbg !5995
  %arrayidx20 = getelementptr inbounds i16*, i16** %24, i64 %idxprom19, !dbg !5995
  store i16* null, i16** %arrayidx20, align 8, !dbg !5997
  br label %for.inc21, !dbg !5995

for.inc21:                                        ; preds = %for.body18
  %26 = load i32, i32* %index, align 4, !dbg !5998
  %inc22 = add i32 %26, 1, !dbg !5998
  store i32 %inc22, i32* %index, align 4, !dbg !5998
  br label %for.cond16, !dbg !5999, !llvm.loop !6000

for.end23:                                        ; preds = %for.cond16
  %fMemoryManager24 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 5, !dbg !6002
  %27 = load %"class.xercesc_2_7::MemoryManager"*, %"class.xercesc_2_7::MemoryManager"** %fMemoryManager24, align 8, !dbg !6002
  %fElemList25 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 4, !dbg !6003
  %28 = load i16**, i16*** %fElemList25, align 8, !dbg !6003
  %29 = bitcast i16** %28 to i8*, !dbg !6003
  %30 = bitcast %"class.xercesc_2_7::MemoryManager"* %27 to void (%"class.xercesc_2_7::MemoryManager"*, i8*)***, !dbg !6004
  %vtable26 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)**, void (%"class.xercesc_2_7::MemoryManager"*, i8*)*** %30, align 8, !dbg !6004
  %vfn27 = getelementptr inbounds void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vtable26, i64 3, !dbg !6004
  %31 = load void (%"class.xercesc_2_7::MemoryManager"*, i8*)*, void (%"class.xercesc_2_7::MemoryManager"*, i8*)** %vfn27, align 8, !dbg !6004
  call void %31(%"class.xercesc_2_7::MemoryManager"* %27, i8* %29), !dbg !6004
  %32 = load i16**, i16*** %newList, align 8, !dbg !6005
  %fElemList28 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 4, !dbg !6006
  store i16** %32, i16*** %fElemList28, align 8, !dbg !6007
  %33 = load i32, i32* %newMax, align 4, !dbg !6008
  %fMaxCount29 = getelementptr inbounds %"class.xercesc_2_7::BaseRefVectorOf", %"class.xercesc_2_7::BaseRefVectorOf"* %this1, i32 0, i32 3, !dbg !6009
  store i32 %33, i32* %fMaxCount29, align 8, !dbg !6010
  br label %return, !dbg !6011

return:                                           ; preds = %for.end23, %if.then
  ret void, !dbg !6011
}

attributes #0 = { nounwind readnone speculatable willreturn }
attributes #1 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind willreturn }
attributes #9 = { nounwind readnone }
attributes #10 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline noreturn nounwind }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn }
attributes #15 = { nounwind readonly }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin }

!llvm.dbg.cu = !{!449}
!llvm.module.flags = !{!1341, !1342, !1343}
!llvm.ident = !{!1344}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "fgMemoryManager", linkageName: "_ZN11xercesc_2_79XMLString15fgMemoryManagerE", scope: !2, file: !3, line: 75, type: !4, isLocal: false, isDefinition: true, declaration: !7)
!2 = !DINamespace(name: "xercesc_2_7", scope: null)
!3 = !DIFile(filename: "XMLString.cpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!5 = !DICompositeType(tag: DW_TAG_class_type, name: "MemoryManager", scope: !2, file: !6, line: 38, flags: DIFlagFwdDecl, identifier: "_ZTSN11xercesc_2_713MemoryManagerE")
!6 = !DIFile(filename: "./xercesc/framework/MemoryManager.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIDerivedType(tag: DW_TAG_member, name: "fgMemoryManager", scope: !9, file: !8, line: 1670, baseType: !4, flags: DIFlagStaticMember)
!8 = !DIFile(filename: "./xercesc/util/XMLString.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!9 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "XMLString", scope: !2, file: !8, line: 276, size: 8, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !10, identifier: "_ZTSN11xercesc_2_79XMLStringE")
!10 = !{!7, !11, !20, !31, !35, !38, !39, !44, !47, !48, !49, !50, !51, !55, !58, !62, !63, !64, !65, !68, !72, !75, !78, !81, !84, !87, !90, !91, !92, !95, !96, !97, !100, !103, !106, !109, !112, !115, !118, !121, !122, !123, !124, !125, !126, !129, !132, !133, !136, !139, !142, !145, !146, !147, !148, !151, !152, !153, !154, !155, !156, !159, !162, !167, !170, !175, !178, !181, !184, !188, !191, !194, !197, !200, !203, !206, !209, !212, !215, !218, !322, !325, !328, !329, !330, !331, !332, !333, !334, !337, !338, !339, !407, !410, !414, !418, !426, !430, !434, !435, !442, !445}
!11 = !DISubprogram(name: "catString", linkageName: "_ZN11xercesc_2_79XMLString9catStringEPcPKc", scope: !9, file: !8, line: 298, type: !12, scopeLine: 298, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!12 = !DISubroutineType(types: !13)
!13 = !{null, !14, !17}
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15)
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!16 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!17 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18)
!18 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19, size: 64)
!19 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16)
!20 = !DISubprogram(name: "catString", linkageName: "_ZN11xercesc_2_79XMLString9catStringEPtPKt", scope: !9, file: !8, line: 316, type: !21, scopeLine: 316, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!21 = !DISubroutineType(types: !22)
!22 = !{null, !23, !28}
!23 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !24)
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64)
!25 = !DIDerivedType(tag: DW_TAG_typedef, name: "XMLCh", file: !26, line: 67, baseType: !27)
!26 = !DIFile(filename: "./xercesc/util/Compilers/GCCDefs.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!27 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!28 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !29)
!29 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64)
!30 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !25)
!31 = !DISubprogram(name: "compareIString", linkageName: "_ZN11xercesc_2_79XMLString14compareIStringEPKcS2_", scope: !9, file: !8, line: 336, type: !32, scopeLine: 336, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!32 = !DISubroutineType(types: !33)
!33 = !{!34, !17, !17}
!34 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!35 = !DISubprogram(name: "compareIString", linkageName: "_ZN11xercesc_2_79XMLString14compareIStringEPKtS2_", scope: !9, file: !8, line: 352, type: !36, scopeLine: 352, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!36 = !DISubroutineType(types: !37)
!37 = !{!34, !28, !28}
!38 = !DISubprogram(name: "compareIStringASCII", linkageName: "_ZN11xercesc_2_79XMLString19compareIStringASCIIEPKtS2_", scope: !9, file: !8, line: 369, type: !36, scopeLine: 369, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!39 = !DISubprogram(name: "compareNString", linkageName: "_ZN11xercesc_2_79XMLString14compareNStringEPKcS2_j", scope: !9, file: !8, line: 390, type: !40, scopeLine: 390, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!40 = !DISubroutineType(types: !41)
!41 = !{!34, !17, !17, !42}
!42 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !43)
!43 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!44 = !DISubprogram(name: "compareNString", linkageName: "_ZN11xercesc_2_79XMLString14compareNStringEPKtS2_j", scope: !9, file: !8, line: 410, type: !45, scopeLine: 410, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!45 = !DISubroutineType(types: !46)
!46 = !{!34, !28, !28, !42}
!47 = !DISubprogram(name: "compareNIString", linkageName: "_ZN11xercesc_2_79XMLString15compareNIStringEPKcS2_j", scope: !9, file: !8, line: 431, type: !40, scopeLine: 431, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!48 = !DISubprogram(name: "compareNIString", linkageName: "_ZN11xercesc_2_79XMLString15compareNIStringEPKtS2_j", scope: !9, file: !8, line: 452, type: !45, scopeLine: 452, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!49 = !DISubprogram(name: "compareString", linkageName: "_ZN11xercesc_2_79XMLString13compareStringEPKcS2_", scope: !9, file: !8, line: 471, type: !32, scopeLine: 471, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!50 = !DISubprogram(name: "compareString", linkageName: "_ZN11xercesc_2_79XMLString13compareStringEPKtS2_", scope: !9, file: !8, line: 488, type: !36, scopeLine: 488, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!51 = !DISubprogram(name: "equals", linkageName: "_ZN11xercesc_2_79XMLString6equalsEPKtS2_", scope: !9, file: !8, line: 502, type: !52, scopeLine: 502, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!52 = !DISubroutineType(types: !53)
!53 = !{!54, !28, !28}
!54 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!55 = !DISubprogram(name: "equals", linkageName: "_ZN11xercesc_2_79XMLString6equalsEPKcS2_", scope: !9, file: !8, line: 508, type: !56, scopeLine: 508, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!56 = !DISubroutineType(types: !57)
!57 = !{!54, !17, !17}
!58 = !DISubprogram(name: "regionMatches", linkageName: "_ZN11xercesc_2_79XMLString13regionMatchesEPKtiS2_ij", scope: !9, file: !8, line: 540, type: !59, scopeLine: 540, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!59 = !DISubroutineType(types: !60)
!60 = !{!54, !28, !61, !28, !61, !42}
!61 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!62 = !DISubprogram(name: "regionIMatches", linkageName: "_ZN11xercesc_2_79XMLString14regionIMatchesEPKtiS2_ij", scope: !9, file: !8, line: 576, type: !59, scopeLine: 576, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!63 = !DISubprogram(name: "copyString", linkageName: "_ZN11xercesc_2_79XMLString10copyStringEPcPKc", scope: !9, file: !8, line: 598, type: !12, scopeLine: 598, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!64 = !DISubprogram(name: "copyString", linkageName: "_ZN11xercesc_2_79XMLString10copyStringEPtPKt", scope: !9, file: !8, line: 614, type: !21, scopeLine: 614, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!65 = !DISubprogram(name: "copyNString", linkageName: "_ZN11xercesc_2_79XMLString11copyNStringEPtPKtj", scope: !9, file: !8, line: 632, type: !66, scopeLine: 632, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!66 = !DISubroutineType(types: !67)
!67 = !{!54, !23, !28, !42}
!68 = !DISubprogram(name: "hash", linkageName: "_ZN11xercesc_2_79XMLString4hashEPKcjPNS_13MemoryManagerE", scope: !9, file: !8, line: 649, type: !69, scopeLine: 649, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!69 = !DISubroutineType(types: !70)
!70 = !{!43, !17, !42, !71}
!71 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4)
!72 = !DISubprogram(name: "hash", linkageName: "_ZN11xercesc_2_79XMLString4hashEPKtjPNS_13MemoryManagerE", scope: !9, file: !8, line: 663, type: !73, scopeLine: 663, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!73 = !DISubroutineType(types: !74)
!74 = !{!43, !28, !42, !71}
!75 = !DISubprogram(name: "hashN", linkageName: "_ZN11xercesc_2_79XMLString5hashNEPKtjjPNS_13MemoryManagerE", scope: !9, file: !8, line: 679, type: !76, scopeLine: 679, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!76 = !DISubroutineType(types: !77)
!77 = !{!43, !28, !42, !42, !71}
!78 = !DISubprogram(name: "indexOf", linkageName: "_ZN11xercesc_2_79XMLString7indexOfEPKcc", scope: !9, file: !8, line: 699, type: !79, scopeLine: 699, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!79 = !DISubroutineType(types: !80)
!80 = !{!34, !17, !19}
!81 = !DISubprogram(name: "indexOf", linkageName: "_ZN11xercesc_2_79XMLString7indexOfEPKtt", scope: !9, file: !8, line: 709, type: !82, scopeLine: 709, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!82 = !DISubroutineType(types: !83)
!83 = !{!34, !28, !30}
!84 = !DISubprogram(name: "indexOf", linkageName: "_ZN11xercesc_2_79XMLString7indexOfEPKccjPNS_13MemoryManagerE", scope: !9, file: !8, line: 722, type: !85, scopeLine: 722, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!85 = !DISubroutineType(types: !86)
!86 = !{!34, !17, !19, !42, !71}
!87 = !DISubprogram(name: "indexOf", linkageName: "_ZN11xercesc_2_79XMLString7indexOfEPKttjPNS_13MemoryManagerE", scope: !9, file: !8, line: 741, type: !88, scopeLine: 741, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!88 = !DISubroutineType(types: !89)
!89 = !{!34, !28, !30, !42, !71}
!90 = !DISubprogram(name: "lastIndexOf", linkageName: "_ZN11xercesc_2_79XMLString11lastIndexOfEPKcc", scope: !9, file: !8, line: 757, type: !79, scopeLine: 757, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!91 = !DISubprogram(name: "lastIndexOf", linkageName: "_ZN11xercesc_2_79XMLString11lastIndexOfEPKtt", scope: !9, file: !8, line: 767, type: !82, scopeLine: 767, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!92 = !DISubprogram(name: "lastIndexOf", linkageName: "_ZN11xercesc_2_79XMLString11lastIndexOfEtPKtj", scope: !9, file: !8, line: 778, type: !93, scopeLine: 778, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!93 = !DISubroutineType(types: !94)
!94 = !{!34, !30, !28, !42}
!95 = !DISubprogram(name: "lastIndexOf", linkageName: "_ZN11xercesc_2_79XMLString11lastIndexOfEPKccjPNS_13MemoryManagerE", scope: !9, file: !8, line: 796, type: !85, scopeLine: 796, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!96 = !DISubprogram(name: "lastIndexOf", linkageName: "_ZN11xercesc_2_79XMLString11lastIndexOfEPKttjPNS_13MemoryManagerE", scope: !9, file: !8, line: 815, type: !88, scopeLine: 815, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!97 = !DISubprogram(name: "moveChars", linkageName: "_ZN11xercesc_2_79XMLString9moveCharsEPtPKtj", scope: !9, file: !8, line: 831, type: !98, scopeLine: 831, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!98 = !DISubroutineType(types: !99)
!99 = !{null, !23, !28, !42}
!100 = !DISubprogram(name: "subString", linkageName: "_ZN11xercesc_2_79XMLString9subStringEPcPKciiPNS_13MemoryManagerE", scope: !9, file: !8, line: 851, type: !101, scopeLine: 851, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!101 = !DISubroutineType(types: !102)
!102 = !{null, !14, !17, !61, !61, !71}
!103 = !DISubprogram(name: "subString", linkageName: "_ZN11xercesc_2_79XMLString9subStringEPtPKtiiPNS_13MemoryManagerE", scope: !9, file: !8, line: 869, type: !104, scopeLine: 869, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!104 = !DISubroutineType(types: !105)
!105 = !{null, !23, !28, !61, !61, !71}
!106 = !DISubprogram(name: "subString", linkageName: "_ZN11xercesc_2_79XMLString9subStringEPtPKtiiiPNS_13MemoryManagerE", scope: !9, file: !8, line: 888, type: !107, scopeLine: 888, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!107 = !DISubroutineType(types: !108)
!108 = !{null, !23, !28, !61, !61, !61, !71}
!109 = !DISubprogram(name: "replicate", linkageName: "_ZN11xercesc_2_79XMLString9replicateEPKc", scope: !9, file: !8, line: 911, type: !110, scopeLine: 911, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!110 = !DISubroutineType(types: !111)
!111 = !{!15, !17}
!112 = !DISubprogram(name: "replicate", linkageName: "_ZN11xercesc_2_79XMLString9replicateEPKcPNS_13MemoryManagerE", scope: !9, file: !8, line: 921, type: !113, scopeLine: 921, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!113 = !DISubroutineType(types: !114)
!114 = !{!15, !17, !71}
!115 = !DISubprogram(name: "replicate", linkageName: "_ZN11xercesc_2_79XMLString9replicateEPKt", scope: !9, file: !8, line: 933, type: !116, scopeLine: 933, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!116 = !DISubroutineType(types: !117)
!117 = !{!24, !28}
!118 = !DISubprogram(name: "replicate", linkageName: "_ZN11xercesc_2_79XMLString9replicateEPKtPNS_13MemoryManagerE", scope: !9, file: !8, line: 943, type: !119, scopeLine: 943, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!119 = !DISubroutineType(types: !120)
!120 = !{!24, !28, !71}
!121 = !DISubprogram(name: "startsWith", linkageName: "_ZN11xercesc_2_79XMLString10startsWithEPKcS2_", scope: !9, file: !8, line: 956, type: !56, scopeLine: 956, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!122 = !DISubprogram(name: "startsWith", linkageName: "_ZN11xercesc_2_79XMLString10startsWithEPKtS2_", scope: !9, file: !8, line: 968, type: !52, scopeLine: 968, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!123 = !DISubprogram(name: "startsWithI", linkageName: "_ZN11xercesc_2_79XMLString11startsWithIEPKcS2_", scope: !9, file: !8, line: 982, type: !56, scopeLine: 982, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!124 = !DISubprogram(name: "startsWithI", linkageName: "_ZN11xercesc_2_79XMLString11startsWithIEPKtS2_", scope: !9, file: !8, line: 997, type: !52, scopeLine: 997, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!125 = !DISubprogram(name: "endsWith", linkageName: "_ZN11xercesc_2_79XMLString8endsWithEPKtS2_", scope: !9, file: !8, line: 1009, type: !52, scopeLine: 1009, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!126 = !DISubprogram(name: "findAny", linkageName: "_ZN11xercesc_2_79XMLString7findAnyEPKtS2_", scope: !9, file: !8, line: 1024, type: !127, scopeLine: 1024, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!127 = !DISubroutineType(types: !128)
!128 = !{!29, !28, !28}
!129 = !DISubprogram(name: "findAny", linkageName: "_ZN11xercesc_2_79XMLString7findAnyEPtPKt", scope: !9, file: !8, line: 1038, type: !130, scopeLine: 1038, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!130 = !DISubroutineType(types: !131)
!131 = !{!24, !23, !28}
!132 = !DISubprogram(name: "patternMatch", linkageName: "_ZN11xercesc_2_79XMLString12patternMatchEPKtS2_", scope: !9, file: !8, line: 1050, type: !36, scopeLine: 1050, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!133 = !DISubprogram(name: "stringLen", linkageName: "_ZN11xercesc_2_79XMLString9stringLenEPKc", scope: !9, file: !8, line: 1060, type: !134, scopeLine: 1060, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!134 = !DISubroutineType(types: !135)
!135 = !{!43, !17}
!136 = !DISubprogram(name: "stringLen", linkageName: "_ZN11xercesc_2_79XMLString9stringLenEPKt", scope: !9, file: !8, line: 1066, type: !137, scopeLine: 1066, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!137 = !DISubroutineType(types: !138)
!138 = !{!43, !28}
!139 = !DISubprogram(name: "isValidNOTATION", linkageName: "_ZN11xercesc_2_79XMLString15isValidNOTATIONEPKtPNS_13MemoryManagerE", scope: !9, file: !8, line: 1075, type: !140, scopeLine: 1075, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!140 = !DISubroutineType(types: !141)
!141 = !{!54, !28, !71}
!142 = !DISubprogram(name: "isValidNCName", linkageName: "_ZN11xercesc_2_79XMLString13isValidNCNameEPKt", scope: !9, file: !8, line: 1085, type: !143, scopeLine: 1085, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!143 = !DISubroutineType(types: !144)
!144 = !{!54, !28}
!145 = !DISubprogram(name: "isValidName", linkageName: "_ZN11xercesc_2_79XMLString11isValidNameEPKt", scope: !9, file: !8, line: 1094, type: !143, scopeLine: 1094, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!146 = !DISubprogram(name: "isValidEncName", linkageName: "_ZN11xercesc_2_79XMLString14isValidEncNameEPKt", scope: !9, file: !8, line: 1101, type: !143, scopeLine: 1101, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!147 = !DISubprogram(name: "isValidQName", linkageName: "_ZN11xercesc_2_79XMLString12isValidQNameEPKt", scope: !9, file: !8, line: 1110, type: !143, scopeLine: 1110, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!148 = !DISubprogram(name: "isAlpha", linkageName: "_ZN11xercesc_2_79XMLString7isAlphaEt", scope: !9, file: !8, line: 1118, type: !149, scopeLine: 1118, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!149 = !DISubroutineType(types: !150)
!150 = !{!54, !30}
!151 = !DISubprogram(name: "isDigit", linkageName: "_ZN11xercesc_2_79XMLString7isDigitEt", scope: !9, file: !8, line: 1125, type: !149, scopeLine: 1125, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!152 = !DISubprogram(name: "isAlphaNum", linkageName: "_ZN11xercesc_2_79XMLString10isAlphaNumEt", scope: !9, file: !8, line: 1132, type: !149, scopeLine: 1132, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!153 = !DISubprogram(name: "isHex", linkageName: "_ZN11xercesc_2_79XMLString5isHexEt", scope: !9, file: !8, line: 1139, type: !149, scopeLine: 1139, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!154 = !DISubprogram(name: "isAllWhiteSpace", linkageName: "_ZN11xercesc_2_79XMLString15isAllWhiteSpaceEPKt", scope: !9, file: !8, line: 1148, type: !143, scopeLine: 1148, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!155 = !DISubprogram(name: "isInList", linkageName: "_ZN11xercesc_2_79XMLString8isInListEPKtS2_", scope: !9, file: !8, line: 1155, type: !52, scopeLine: 1155, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!156 = !DISubprogram(name: "binToText", linkageName: "_ZN11xercesc_2_79XMLString9binToTextEjPcjjPNS_13MemoryManagerE", scope: !9, file: !8, line: 1173, type: !157, scopeLine: 1173, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!157 = !DISubroutineType(types: !158)
!158 = !{null, !42, !14, !42, !42, !71}
!159 = !DISubprogram(name: "binToText", linkageName: "_ZN11xercesc_2_79XMLString9binToTextEjPtjjPNS_13MemoryManagerE", scope: !9, file: !8, line: 1193, type: !160, scopeLine: 1193, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!160 = !DISubroutineType(types: !161)
!161 = !{null, !42, !23, !42, !42, !71}
!162 = !DISubprogram(name: "binToText", linkageName: "_ZN11xercesc_2_79XMLString9binToTextEmPcjjPNS_13MemoryManagerE", scope: !9, file: !8, line: 1213, type: !163, scopeLine: 1213, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!163 = !DISubroutineType(types: !164)
!164 = !{null, !165, !14, !42, !42, !71}
!165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !166)
!166 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!167 = !DISubprogram(name: "binToText", linkageName: "_ZN11xercesc_2_79XMLString9binToTextEmPtjjPNS_13MemoryManagerE", scope: !9, file: !8, line: 1233, type: !168, scopeLine: 1233, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!168 = !DISubroutineType(types: !169)
!169 = !{null, !165, !23, !42, !42, !71}
!170 = !DISubprogram(name: "binToText", linkageName: "_ZN11xercesc_2_79XMLString9binToTextElPcjjPNS_13MemoryManagerE", scope: !9, file: !8, line: 1253, type: !171, scopeLine: 1253, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!171 = !DISubroutineType(types: !172)
!172 = !{null, !173, !14, !42, !42, !71}
!173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !174)
!174 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!175 = !DISubprogram(name: "binToText", linkageName: "_ZN11xercesc_2_79XMLString9binToTextElPtjjPNS_13MemoryManagerE", scope: !9, file: !8, line: 1273, type: !176, scopeLine: 1273, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!176 = !DISubroutineType(types: !177)
!177 = !{null, !173, !23, !42, !42, !71}
!178 = !DISubprogram(name: "binToText", linkageName: "_ZN11xercesc_2_79XMLString9binToTextEiPcjjPNS_13MemoryManagerE", scope: !9, file: !8, line: 1293, type: !179, scopeLine: 1293, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!179 = !DISubroutineType(types: !180)
!180 = !{null, !61, !14, !42, !42, !71}
!181 = !DISubprogram(name: "binToText", linkageName: "_ZN11xercesc_2_79XMLString9binToTextEiPtjjPNS_13MemoryManagerE", scope: !9, file: !8, line: 1313, type: !182, scopeLine: 1313, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!182 = !DISubroutineType(types: !183)
!183 = !{null, !61, !23, !42, !42, !71}
!184 = !DISubprogram(name: "textToBin", linkageName: "_ZN11xercesc_2_79XMLString9textToBinEPKtRjPNS_13MemoryManagerE", scope: !9, file: !8, line: 1333, type: !185, scopeLine: 1333, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!185 = !DISubroutineType(types: !186)
!186 = !{!54, !28, !187, !71}
!187 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !43, size: 64)
!188 = !DISubprogram(name: "parseInt", linkageName: "_ZN11xercesc_2_79XMLString8parseIntEPKtPNS_13MemoryManagerE", scope: !9, file: !8, line: 1353, type: !189, scopeLine: 1353, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!189 = !DISubroutineType(types: !190)
!190 = !{!34, !28, !71}
!191 = !DISubprogram(name: "cut", linkageName: "_ZN11xercesc_2_79XMLString3cutEPtj", scope: !9, file: !8, line: 1364, type: !192, scopeLine: 1364, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!192 = !DISubroutineType(types: !193)
!193 = !{null, !23, !42}
!194 = !DISubprogram(name: "transcode", linkageName: "_ZN11xercesc_2_79XMLString9transcodeEPKt", scope: !9, file: !8, line: 1380, type: !195, scopeLine: 1380, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!195 = !DISubroutineType(types: !196)
!196 = !{!15, !28}
!197 = !DISubprogram(name: "transcode", linkageName: "_ZN11xercesc_2_79XMLString9transcodeEPKtPNS_13MemoryManagerE", scope: !9, file: !8, line: 1384, type: !198, scopeLine: 1384, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!198 = !DISubroutineType(types: !199)
!199 = !{!15, !28, !71}
!200 = !DISubprogram(name: "transcode", linkageName: "_ZN11xercesc_2_79XMLString9transcodeEPKtPcjPNS_13MemoryManagerE", scope: !9, file: !8, line: 1405, type: !201, scopeLine: 1405, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!201 = !DISubroutineType(types: !202)
!202 = !{!54, !28, !14, !42, !71}
!203 = !DISubprogram(name: "transcode", linkageName: "_ZN11xercesc_2_79XMLString9transcodeEPKc", scope: !9, file: !8, line: 1423, type: !204, scopeLine: 1423, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!204 = !DISubroutineType(types: !205)
!205 = !{!24, !17}
!206 = !DISubprogram(name: "transcode", linkageName: "_ZN11xercesc_2_79XMLString9transcodeEPKcPNS_13MemoryManagerE", scope: !9, file: !8, line: 1427, type: !207, scopeLine: 1427, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!207 = !DISubroutineType(types: !208)
!208 = !{!24, !17, !71}
!209 = !DISubprogram(name: "transcode", linkageName: "_ZN11xercesc_2_79XMLString9transcodeEPKcPtjPNS_13MemoryManagerE", scope: !9, file: !8, line: 1443, type: !210, scopeLine: 1443, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!210 = !DISubroutineType(types: !211)
!211 = !{!54, !17, !23, !42, !71}
!212 = !DISubprogram(name: "trim", linkageName: "_ZN11xercesc_2_79XMLString4trimEPc", scope: !9, file: !8, line: 1456, type: !213, scopeLine: 1456, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!213 = !DISubroutineType(types: !214)
!214 = !{null, !14}
!215 = !DISubprogram(name: "trim", linkageName: "_ZN11xercesc_2_79XMLString4trimEPt", scope: !9, file: !8, line: 1463, type: !216, scopeLine: 1463, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!216 = !DISubroutineType(types: !217)
!217 = !{null, !23}
!218 = !DISubprogram(name: "tokenizeString", linkageName: "_ZN11xercesc_2_79XMLString14tokenizeStringEPKtPNS_13MemoryManagerE", scope: !9, file: !8, line: 1472, type: !219, scopeLine: 1472, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!219 = !DISubroutineType(types: !220)
!220 = !{!221, !28, !71}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!222 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "BaseRefVectorOf<unsigned short>", scope: !2, file: !223, line: 33, size: 320, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !224, vtableHolder: !222, templateParams: !320, identifier: "_ZTSN11xercesc_2_715BaseRefVectorOfItEE")
!223 = !DIFile(filename: "./xercesc/util/BaseRefVectorOf.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!224 = !{!225, !254, !259, !260, !261, !262, !265, !266, !271, !274, !278, !281, !282, !285, !286, !289, !290, !296, !297, !298, !303, !306, !307, !308, !311, !312, !316}
!225 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !222, baseType: !226, flags: DIFlagPublic, extraData: i32 0)
!226 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "XMemory", scope: !2, file: !227, line: 40, size: 8, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !228, identifier: "_ZTSN11xercesc_2_77XMemoryE")
!227 = !DIFile(filename: "./xercesc/util/XMemory.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!228 = !{!229, !235, !238, !241, !244, !247, !250}
!229 = !DISubprogram(name: "operator new", linkageName: "_ZN11xercesc_2_77XMemorynwEm", scope: !226, file: !227, line: 54, type: !230, scopeLine: 54, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!230 = !DISubroutineType(types: !231)
!231 = !{!232, !233}
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!233 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !234, line: 46, baseType: !166)
!234 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!235 = !DISubprogram(name: "operator new", linkageName: "_ZN11xercesc_2_77XMemorynwEmPNS_13MemoryManagerE", scope: !226, file: !227, line: 82, type: !236, scopeLine: 82, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!236 = !DISubroutineType(types: !237)
!237 = !{!232, !233, !4}
!238 = !DISubprogram(name: "operator new", linkageName: "_ZN11xercesc_2_77XMemorynwEmPv", scope: !226, file: !227, line: 90, type: !239, scopeLine: 90, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!239 = !DISubroutineType(types: !240)
!240 = !{!232, !233, !232}
!241 = !DISubprogram(name: "operator delete", linkageName: "_ZN11xercesc_2_77XMemorydlEPv", scope: !226, file: !227, line: 97, type: !242, scopeLine: 97, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!242 = !DISubroutineType(types: !243)
!243 = !{null, !232}
!244 = !DISubprogram(name: "operator delete", linkageName: "_ZN11xercesc_2_77XMemorydlEPvPNS_13MemoryManagerE", scope: !226, file: !227, line: 107, type: !245, scopeLine: 107, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!245 = !DISubroutineType(types: !246)
!246 = !{null, !232, !4}
!247 = !DISubprogram(name: "operator delete", linkageName: "_ZN11xercesc_2_77XMemorydlEPvS1_", scope: !226, file: !227, line: 115, type: !248, scopeLine: 115, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!248 = !DISubroutineType(types: !249)
!249 = !{null, !232, !232}
!250 = !DISubprogram(name: "XMemory", scope: !226, file: !227, line: 130, type: !251, scopeLine: 130, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!251 = !DISubroutineType(types: !252)
!252 = !{null, !253}
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$BaseRefVectorOf", scope: !223, file: !223, baseType: !255, size: 64, flags: DIFlagArtificial)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "__vtbl_ptr_type", baseType: !257, size: 64)
!257 = !DISubroutineType(types: !258)
!258 = !{!34}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "fAdoptedElems", scope: !222, file: !223, line: 89, baseType: !54, size: 8, offset: 64, flags: DIFlagProtected)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "fCurCount", scope: !222, file: !223, line: 90, baseType: !43, size: 32, offset: 96, flags: DIFlagProtected)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "fMaxCount", scope: !222, file: !223, line: 91, baseType: !43, size: 32, offset: 128, flags: DIFlagProtected)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "fElemList", scope: !222, file: !223, line: 92, baseType: !263, size: 64, offset: 192, flags: DIFlagProtected)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "fMemoryManager", scope: !222, file: !223, line: 93, baseType: !4, size: 64, offset: 256, flags: DIFlagProtected)
!266 = !DISubprogram(name: "BaseRefVectorOf", scope: !222, file: !223, line: 39, type: !267, scopeLine: 39, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!267 = !DISubroutineType(types: !268)
!268 = !{null, !269, !42, !270, !71}
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !54)
!271 = !DISubprogram(name: "~BaseRefVectorOf", scope: !222, file: !223, line: 45, type: !272, scopeLine: 45, containingType: !222, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!272 = !DISubroutineType(types: !273)
!273 = !{null, !269}
!274 = !DISubprogram(name: "addElement", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItE10addElementEPt", scope: !222, file: !223, line: 51, type: !275, scopeLine: 51, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!275 = !DISubroutineType(types: !276)
!276 = !{null, !269, !277}
!277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!278 = !DISubprogram(name: "setElementAt", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItE12setElementAtEPtj", scope: !222, file: !223, line: 52, type: !279, scopeLine: 52, containingType: !222, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!279 = !DISubroutineType(types: !280)
!280 = !{null, !269, !277, !42}
!281 = !DISubprogram(name: "insertElementAt", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItE15insertElementAtEPtj", scope: !222, file: !223, line: 53, type: !279, scopeLine: 53, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!282 = !DISubprogram(name: "orphanElementAt", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItE15orphanElementAtEj", scope: !222, file: !223, line: 54, type: !283, scopeLine: 54, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!283 = !DISubroutineType(types: !284)
!284 = !{!264, !269, !42}
!285 = !DISubprogram(name: "removeAllElements", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItE17removeAllElementsEv", scope: !222, file: !223, line: 55, type: !272, scopeLine: 55, containingType: !222, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!286 = !DISubprogram(name: "removeElementAt", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItE15removeElementAtEj", scope: !222, file: !223, line: 56, type: !287, scopeLine: 56, containingType: !222, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!287 = !DISubroutineType(types: !288)
!288 = !{null, !269, !42}
!289 = !DISubprogram(name: "removeLastElement", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItE17removeLastElementEv", scope: !222, file: !223, line: 57, type: !272, scopeLine: 57, containingType: !222, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!290 = !DISubprogram(name: "containsElement", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItE15containsElementEPKt", scope: !222, file: !223, line: 58, type: !291, scopeLine: 58, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!291 = !DISubroutineType(types: !292)
!292 = !{!54, !269, !293}
!293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !294)
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64)
!295 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !27)
!296 = !DISubprogram(name: "cleanup", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItE7cleanupEv", scope: !222, file: !223, line: 59, type: !272, scopeLine: 59, containingType: !222, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!297 = !DISubprogram(name: "reinitialize", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItE12reinitializeEv", scope: !222, file: !223, line: 60, type: !272, scopeLine: 60, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!298 = !DISubprogram(name: "curCapacity", linkageName: "_ZNK11xercesc_2_715BaseRefVectorOfItE11curCapacityEv", scope: !222, file: !223, line: 66, type: !299, scopeLine: 66, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!299 = !DISubroutineType(types: !300)
!300 = !{!43, !301}
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !222)
!303 = !DISubprogram(name: "elementAt", linkageName: "_ZNK11xercesc_2_715BaseRefVectorOfItE9elementAtEj", scope: !222, file: !223, line: 67, type: !304, scopeLine: 67, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!304 = !DISubroutineType(types: !305)
!305 = !{!294, !301, !42}
!306 = !DISubprogram(name: "elementAt", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItE9elementAtEj", scope: !222, file: !223, line: 68, type: !283, scopeLine: 68, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!307 = !DISubprogram(name: "size", linkageName: "_ZNK11xercesc_2_715BaseRefVectorOfItE4sizeEv", scope: !222, file: !223, line: 69, type: !299, scopeLine: 69, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!308 = !DISubprogram(name: "getMemoryManager", linkageName: "_ZNK11xercesc_2_715BaseRefVectorOfItE16getMemoryManagerEv", scope: !222, file: !223, line: 70, type: !309, scopeLine: 70, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!309 = !DISubroutineType(types: !310)
!310 = !{!4, !301}
!311 = !DISubprogram(name: "ensureExtraCapacity", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItE19ensureExtraCapacityEj", scope: !222, file: !223, line: 76, type: !287, scopeLine: 76, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!312 = !DISubprogram(name: "BaseRefVectorOf", scope: !222, file: !223, line: 82, type: !313, scopeLine: 82, flags: DIFlagPrototyped, spFlags: 0)
!313 = !DISubroutineType(types: !314)
!314 = !{null, !269, !315}
!315 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !302, size: 64)
!316 = !DISubprogram(name: "operator=", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItEaSERKS1_", scope: !222, file: !223, line: 83, type: !317, scopeLine: 83, flags: DIFlagPrototyped, spFlags: 0)
!317 = !DISubroutineType(types: !318)
!318 = !{!319, !269, !315}
!319 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !222, size: 64)
!320 = !{!321}
!321 = !DITemplateTypeParameter(name: "TElem", type: !27)
!322 = !DISubprogram(name: "makeUName", linkageName: "_ZN11xercesc_2_79XMLString9makeUNameEPKtS2_", scope: !9, file: !8, line: 1487, type: !323, scopeLine: 1487, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!323 = !DISubroutineType(types: !324)
!324 = !{!24, !28, !28}
!325 = !DISubprogram(name: "replaceTokens", linkageName: "_ZN11xercesc_2_79XMLString13replaceTokensEPtjPKtS3_S3_S3_PNS_13MemoryManagerE", scope: !9, file: !8, line: 1509, type: !326, scopeLine: 1509, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!326 = !DISubroutineType(types: !327)
!327 = !{!43, !23, !42, !28, !28, !28, !28, !71}
!328 = !DISubprogram(name: "upperCase", linkageName: "_ZN11xercesc_2_79XMLString9upperCaseEPt", scope: !9, file: !8, line: 1524, type: !216, scopeLine: 1524, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!329 = !DISubprogram(name: "upperCaseASCII", linkageName: "_ZN11xercesc_2_79XMLString14upperCaseASCIIEPt", scope: !9, file: !8, line: 1531, type: !216, scopeLine: 1531, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!330 = !DISubprogram(name: "lowerCase", linkageName: "_ZN11xercesc_2_79XMLString9lowerCaseEPt", scope: !9, file: !8, line: 1537, type: !216, scopeLine: 1537, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!331 = !DISubprogram(name: "lowerCaseASCII", linkageName: "_ZN11xercesc_2_79XMLString14lowerCaseASCIIEPt", scope: !9, file: !8, line: 1544, type: !216, scopeLine: 1544, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!332 = !DISubprogram(name: "isWSReplaced", linkageName: "_ZN11xercesc_2_79XMLString12isWSReplacedEPKt", scope: !9, file: !8, line: 1549, type: !143, scopeLine: 1549, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!333 = !DISubprogram(name: "isWSCollapsed", linkageName: "_ZN11xercesc_2_79XMLString13isWSCollapsedEPKt", scope: !9, file: !8, line: 1554, type: !143, scopeLine: 1554, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!334 = !DISubprogram(name: "replaceWS", linkageName: "_ZN11xercesc_2_79XMLString9replaceWSEPtPNS_13MemoryManagerE", scope: !9, file: !8, line: 1561, type: !335, scopeLine: 1561, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!335 = !DISubroutineType(types: !336)
!336 = !{null, !23, !71}
!337 = !DISubprogram(name: "collapseWS", linkageName: "_ZN11xercesc_2_79XMLString10collapseWSEPtPNS_13MemoryManagerE", scope: !9, file: !8, line: 1569, type: !335, scopeLine: 1569, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!338 = !DISubprogram(name: "removeWS", linkageName: "_ZN11xercesc_2_79XMLString8removeWSEPtPNS_13MemoryManagerE", scope: !9, file: !8, line: 1577, type: !335, scopeLine: 1577, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!339 = !DISubprogram(name: "removeChar", linkageName: "_ZN11xercesc_2_79XMLString10removeCharEPKtRS1_RNS_9XMLBufferE", scope: !9, file: !8, line: 1586, type: !340, scopeLine: 1586, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!340 = !DISubroutineType(types: !341)
!341 = !{null, !28, !342, !343}
!342 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !30, size: 64)
!343 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !344, size: 64)
!344 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "XMLBuffer", scope: !2, file: !345, line: 51, size: 320, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !346, identifier: "_ZTSN11xercesc_2_79XMLBufferE")
!345 = !DIFile(filename: "./xercesc/framework/XMLBuffer.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!346 = !{!347, !348, !349, !350, !351, !352, !353, !356, !357, !361, !364, !367, !370, !373, !376, !377, !378, !383, !386, !387, !390, !393, !394, !397, !401, !404}
!347 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !344, baseType: !226, flags: DIFlagPublic, extraData: i32 0)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "fIndex", scope: !344, file: !345, line: 254, baseType: !43, size: 32)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "fCapacity", scope: !344, file: !345, line: 255, baseType: !43, size: 32, offset: 32)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "fFullSize", scope: !344, file: !345, line: 256, baseType: !43, size: 32, offset: 64)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "fUsed", scope: !344, file: !345, line: 257, baseType: !54, size: 8, offset: 96)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "fMemoryManager", scope: !344, file: !345, line: 258, baseType: !71, size: 64, offset: 128)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "fFullHandler", scope: !344, file: !345, line: 259, baseType: !354, size: 64, offset: 192)
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!355 = !DICompositeType(tag: DW_TAG_class_type, name: "XMLBufferFullHandler", scope: !2, file: !345, line: 270, flags: DIFlagFwdDecl, identifier: "_ZTSN11xercesc_2_720XMLBufferFullHandlerE")
!356 = !DIDerivedType(tag: DW_TAG_member, name: "fBuffer", scope: !344, file: !345, line: 260, baseType: !24, size: 64, offset: 256)
!357 = !DISubprogram(name: "XMLBuffer", scope: !344, file: !345, line: 60, type: !358, scopeLine: 60, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!358 = !DISubroutineType(types: !359)
!359 = !{null, !360, !42, !71}
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!361 = !DISubprogram(name: "~XMLBuffer", scope: !344, file: !345, line: 81, type: !362, scopeLine: 81, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!362 = !DISubroutineType(types: !363)
!363 = !{null, !360}
!364 = !DISubprogram(name: "setFullHandler", linkageName: "_ZN11xercesc_2_79XMLBuffer14setFullHandlerEPNS_20XMLBufferFullHandlerEj", scope: !344, file: !345, line: 90, type: !365, scopeLine: 90, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!365 = !DISubroutineType(types: !366)
!366 = !{null, !360, !354, !42}
!367 = !DISubprogram(name: "append", linkageName: "_ZN11xercesc_2_79XMLBuffer6appendEt", scope: !344, file: !345, line: 119, type: !368, scopeLine: 119, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!368 = !DISubroutineType(types: !369)
!369 = !{null, !360, !30}
!370 = !DISubprogram(name: "append", linkageName: "_ZN11xercesc_2_79XMLBuffer6appendEPKtj", scope: !344, file: !345, line: 127, type: !371, scopeLine: 127, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!371 = !DISubroutineType(types: !372)
!372 = !{null, !360, !28, !42}
!373 = !DISubprogram(name: "append", linkageName: "_ZN11xercesc_2_79XMLBuffer6appendEPKt", scope: !344, file: !345, line: 141, type: !374, scopeLine: 141, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!374 = !DISubroutineType(types: !375)
!375 = !{null, !360, !28}
!376 = !DISubprogram(name: "set", linkageName: "_ZN11xercesc_2_79XMLBuffer3setEPKtj", scope: !344, file: !345, line: 156, type: !371, scopeLine: 156, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!377 = !DISubprogram(name: "set", linkageName: "_ZN11xercesc_2_79XMLBuffer3setEPKt", scope: !344, file: !345, line: 162, type: !374, scopeLine: 162, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!378 = !DISubprogram(name: "getRawBuffer", linkageName: "_ZNK11xercesc_2_79XMLBuffer12getRawBufferEv", scope: !344, file: !345, line: 168, type: !379, scopeLine: 168, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!379 = !DISubroutineType(types: !380)
!380 = !{!29, !381}
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !344)
!383 = !DISubprogram(name: "getRawBuffer", linkageName: "_ZN11xercesc_2_79XMLBuffer12getRawBufferEv", scope: !344, file: !345, line: 174, type: !384, scopeLine: 174, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!384 = !DISubroutineType(types: !385)
!385 = !{!24, !360}
!386 = !DISubprogram(name: "reset", linkageName: "_ZN11xercesc_2_79XMLBuffer5resetEv", scope: !344, file: !345, line: 180, type: !362, scopeLine: 180, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!387 = !DISubprogram(name: "getInUse", linkageName: "_ZNK11xercesc_2_79XMLBuffer8getInUseEv", scope: !344, file: !345, line: 189, type: !388, scopeLine: 189, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!388 = !DISubroutineType(types: !389)
!389 = !{!54, !381}
!390 = !DISubprogram(name: "getLen", linkageName: "_ZNK11xercesc_2_79XMLBuffer6getLenEv", scope: !344, file: !345, line: 194, type: !391, scopeLine: 194, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!391 = !DISubroutineType(types: !392)
!392 = !{!43, !381}
!393 = !DISubprogram(name: "isEmpty", linkageName: "_ZNK11xercesc_2_79XMLBuffer7isEmptyEv", scope: !344, file: !345, line: 199, type: !388, scopeLine: 199, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!394 = !DISubprogram(name: "setInUse", linkageName: "_ZN11xercesc_2_79XMLBuffer8setInUseEb", scope: !344, file: !345, line: 207, type: !395, scopeLine: 207, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!395 = !DISubroutineType(types: !396)
!396 = !{null, !360, !270}
!397 = !DISubprogram(name: "XMLBuffer", scope: !344, file: !345, line: 216, type: !398, scopeLine: 216, flags: DIFlagPrototyped, spFlags: 0)
!398 = !DISubroutineType(types: !399)
!399 = !{null, !360, !400}
!400 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !382, size: 64)
!401 = !DISubprogram(name: "operator=", linkageName: "_ZN11xercesc_2_79XMLBufferaSERKS0_", scope: !344, file: !345, line: 217, type: !402, scopeLine: 217, flags: DIFlagPrototyped, spFlags: 0)
!402 = !DISubroutineType(types: !403)
!403 = !{!343, !360, !400}
!404 = !DISubprogram(name: "insureCapacity", linkageName: "_ZN11xercesc_2_79XMLBuffer14insureCapacityEj", scope: !344, file: !345, line: 227, type: !405, scopeLine: 227, flags: DIFlagPrototyped, spFlags: 0)
!405 = !DISubroutineType(types: !406)
!406 = !{null, !360, !42}
!407 = !DISubprogram(name: "fixURI", linkageName: "_ZN11xercesc_2_79XMLString6fixURIEPKtPt", scope: !9, file: !8, line: 1597, type: !408, scopeLine: 1597, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!408 = !DISubroutineType(types: !409)
!409 = !{null, !28, !23}
!410 = !DISubprogram(name: "release", linkageName: "_ZN11xercesc_2_79XMLString7releaseEPPc", scope: !9, file: !8, line: 1608, type: !411, scopeLine: 1608, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!411 = !DISubroutineType(types: !412)
!412 = !{null, !413}
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!414 = !DISubprogram(name: "release", linkageName: "_ZN11xercesc_2_79XMLString7releaseEPPt", scope: !9, file: !8, line: 1616, type: !415, scopeLine: 1616, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!415 = !DISubroutineType(types: !416)
!416 = !{null, !417}
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!418 = !DISubprogram(name: "release", linkageName: "_ZN11xercesc_2_79XMLString7releaseEPPh", scope: !9, file: !8, line: 1624, type: !419, scopeLine: 1624, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!419 = !DISubroutineType(types: !420)
!420 = !{null, !421}
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_typedef, name: "XMLByte", file: !424, line: 384, baseType: !425)
!424 = !DIFile(filename: "./xercesc/util/XercesDefs.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!425 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!426 = !DISubprogram(name: "release", linkageName: "_ZN11xercesc_2_79XMLString7releaseEPPvPNS_13MemoryManagerE", scope: !9, file: !8, line: 1634, type: !427, scopeLine: 1634, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!427 = !DISubroutineType(types: !428)
!428 = !{null, !429, !71}
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!430 = !DISubprogram(name: "XMLString", scope: !9, file: !8, line: 1648, type: !431, scopeLine: 1648, flags: DIFlagPrototyped, spFlags: 0)
!431 = !DISubroutineType(types: !432)
!432 = !{null, !433}
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!434 = !DISubprogram(name: "~XMLString", scope: !9, file: !8, line: 1650, type: !431, scopeLine: 1650, flags: DIFlagPrototyped, spFlags: 0)
!435 = !DISubprogram(name: "initString", linkageName: "_ZN11xercesc_2_79XMLString10initStringEPNS_16XMLLCPTranscoderEPNS_13MemoryManagerE", scope: !9, file: !8, line: 1657, type: !436, scopeLine: 1657, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!436 = !DISubroutineType(types: !437)
!437 = !{null, !438, !71}
!438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !439)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!440 = !DICompositeType(tag: DW_TAG_class_type, name: "XMLLCPTranscoder", scope: !2, file: !441, line: 396, flags: DIFlagFwdDecl)
!441 = !DIFile(filename: "./xercesc/util/TransService.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!442 = !DISubprogram(name: "termString", linkageName: "_ZN11xercesc_2_79XMLString10termStringEv", scope: !9, file: !8, line: 1659, type: !443, scopeLine: 1659, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!443 = !DISubroutineType(types: !444)
!444 = !{null}
!445 = !DISubprogram(name: "validateRegion", linkageName: "_ZN11xercesc_2_79XMLString14validateRegionEPKtiS2_ij", scope: !9, file: !8, line: 1666, type: !59, scopeLine: 1666, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!446 = !DIGlobalVariableExpression(var: !447, expr: !DIExpression())
!447 = distinct !DIGlobalVariable(name: "digitList", scope: !448, file: !3, line: 87, type: !1340, isLocal: true, isDefinition: true)
!448 = distinct !DISubprogram(name: "binToText", linkageName: "_ZN11xercesc_2_79XMLString9binToTextEmPcjjPNS_13MemoryManagerE", scope: !9, file: !3, line: 81, type: !163, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !162, retainedNodes: !904)
!449 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !450, retainedTypes: !864, globals: !865, imports: !943, splitDebugInlining: false, nameTableKind: None)
!450 = !{!451}
!451 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Codes", scope: !453, file: !452, line: 14, baseType: !43, size: 32, elements: !459, identifier: "_ZTSN11xercesc_2_710XMLExcepts5CodesE")
!452 = !DIFile(filename: "./xercesc/util/XMLExceptMsgs.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!453 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "XMLExcepts", scope: !2, file: !452, line: 11, size: 8, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !454, identifier: "_ZTSN11xercesc_2_710XMLExceptsE")
!454 = !{!455}
!455 = !DISubprogram(name: "XMLExcepts", scope: !453, file: !452, line: 427, type: !456, scopeLine: 427, flags: DIFlagPrototyped, spFlags: 0)
!456 = !DISubroutineType(types: !457)
!457 = !{null, !458}
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!459 = !{!460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863}
!460 = !DIEnumerator(name: "NoError", value: 0, isUnsigned: true)
!461 = !DIEnumerator(name: "W_LowBounds", value: 1, isUnsigned: true)
!462 = !DIEnumerator(name: "Scan_CouldNotOpenSource_Warning", value: 2, isUnsigned: true)
!463 = !DIEnumerator(name: "GC_ExistingGrammar", value: 3, isUnsigned: true)
!464 = !DIEnumerator(name: "W_HighBounds", value: 4, isUnsigned: true)
!465 = !DIEnumerator(name: "F_LowBounds", value: 5, isUnsigned: true)
!466 = !DIEnumerator(name: "Array_BadIndex", value: 6, isUnsigned: true)
!467 = !DIEnumerator(name: "Array_BadNewSize", value: 7, isUnsigned: true)
!468 = !DIEnumerator(name: "AttrList_BadIndex", value: 8, isUnsigned: true)
!469 = !DIEnumerator(name: "AttDef_BadAttType", value: 9, isUnsigned: true)
!470 = !DIEnumerator(name: "AttDef_BadDefAttType", value: 10, isUnsigned: true)
!471 = !DIEnumerator(name: "Bitset_BadIndex", value: 11, isUnsigned: true)
!472 = !DIEnumerator(name: "Bitset_NotEqualSize", value: 12, isUnsigned: true)
!473 = !DIEnumerator(name: "BufMgr_NoMoreBuffers", value: 13, isUnsigned: true)
!474 = !DIEnumerator(name: "BufMgr_BufferNotInPool", value: 14, isUnsigned: true)
!475 = !DIEnumerator(name: "CPtr_PointerIsZero", value: 15, isUnsigned: true)
!476 = !DIEnumerator(name: "CM_BinOpHadUnaryType", value: 16, isUnsigned: true)
!477 = !DIEnumerator(name: "CM_MustBeMixedOrChildren", value: 17, isUnsigned: true)
!478 = !DIEnumerator(name: "CM_NoPCDATAHere", value: 18, isUnsigned: true)
!479 = !DIEnumerator(name: "CM_NotValidForSpecType", value: 19, isUnsigned: true)
!480 = !DIEnumerator(name: "CM_UnaryOpHadBinType", value: 20, isUnsigned: true)
!481 = !DIEnumerator(name: "CM_UnknownCMType", value: 21, isUnsigned: true)
!482 = !DIEnumerator(name: "CM_UnknownCMSpecType", value: 22, isUnsigned: true)
!483 = !DIEnumerator(name: "CM_NoParentCSN", value: 23, isUnsigned: true)
!484 = !DIEnumerator(name: "CM_NotValidSpecTypeForNode", value: 24, isUnsigned: true)
!485 = !DIEnumerator(name: "DTD_UnknownCreateReason", value: 25, isUnsigned: true)
!486 = !DIEnumerator(name: "ElemStack_EmptyStack", value: 26, isUnsigned: true)
!487 = !DIEnumerator(name: "ElemStack_BadIndex", value: 27, isUnsigned: true)
!488 = !DIEnumerator(name: "ElemStack_StackUnderflow", value: 28, isUnsigned: true)
!489 = !DIEnumerator(name: "ElemStack_NoParentPushed", value: 29, isUnsigned: true)
!490 = !DIEnumerator(name: "Enum_NoMoreElements", value: 30, isUnsigned: true)
!491 = !DIEnumerator(name: "File_CouldNotOpenFile", value: 31, isUnsigned: true)
!492 = !DIEnumerator(name: "File_CouldNotGetCurPos", value: 32, isUnsigned: true)
!493 = !DIEnumerator(name: "File_CouldNotCloseFile", value: 33, isUnsigned: true)
!494 = !DIEnumerator(name: "File_CouldNotSeekToEnd", value: 34, isUnsigned: true)
!495 = !DIEnumerator(name: "File_CouldNotSeekToPos", value: 35, isUnsigned: true)
!496 = !DIEnumerator(name: "File_CouldNotDupHandle", value: 36, isUnsigned: true)
!497 = !DIEnumerator(name: "File_CouldNotReadFromFile", value: 37, isUnsigned: true)
!498 = !DIEnumerator(name: "File_CouldNotWriteToFile", value: 38, isUnsigned: true)
!499 = !DIEnumerator(name: "File_CouldNotResetFile", value: 39, isUnsigned: true)
!500 = !DIEnumerator(name: "File_CouldNotGetSize", value: 40, isUnsigned: true)
!501 = !DIEnumerator(name: "File_CouldNotGetBasePathName", value: 41, isUnsigned: true)
!502 = !DIEnumerator(name: "File_BasePathUnderflow", value: 42, isUnsigned: true)
!503 = !DIEnumerator(name: "Gen_ParseInProgress", value: 43, isUnsigned: true)
!504 = !DIEnumerator(name: "Gen_NoDTDValidator", value: 44, isUnsigned: true)
!505 = !DIEnumerator(name: "Gen_CouldNotOpenDTD", value: 45, isUnsigned: true)
!506 = !DIEnumerator(name: "Gen_CouldNotOpenExtEntity", value: 46, isUnsigned: true)
!507 = !DIEnumerator(name: "Gen_UnexpectedEOF", value: 47, isUnsigned: true)
!508 = !DIEnumerator(name: "HshTbl_ZeroModulus", value: 48, isUnsigned: true)
!509 = !DIEnumerator(name: "HshTbl_BadHashFromKey", value: 49, isUnsigned: true)
!510 = !DIEnumerator(name: "HshTbl_NoSuchKeyExists", value: 50, isUnsigned: true)
!511 = !DIEnumerator(name: "Mutex_CouldNotCreate", value: 51, isUnsigned: true)
!512 = !DIEnumerator(name: "Mutex_CouldNotClose", value: 52, isUnsigned: true)
!513 = !DIEnumerator(name: "Mutex_CouldNotLock", value: 53, isUnsigned: true)
!514 = !DIEnumerator(name: "Mutex_CouldNotUnlock", value: 54, isUnsigned: true)
!515 = !DIEnumerator(name: "Mutex_CouldNotDestroy", value: 55, isUnsigned: true)
!516 = !DIEnumerator(name: "NetAcc_InternalError", value: 56, isUnsigned: true)
!517 = !DIEnumerator(name: "NetAcc_LengthError", value: 57, isUnsigned: true)
!518 = !DIEnumerator(name: "NetAcc_InitFailed", value: 58, isUnsigned: true)
!519 = !DIEnumerator(name: "NetAcc_TargetResolution", value: 59, isUnsigned: true)
!520 = !DIEnumerator(name: "NetAcc_CreateSocket", value: 60, isUnsigned: true)
!521 = !DIEnumerator(name: "NetAcc_ConnSocket", value: 61, isUnsigned: true)
!522 = !DIEnumerator(name: "NetAcc_WriteSocket", value: 62, isUnsigned: true)
!523 = !DIEnumerator(name: "NetAcc_ReadSocket", value: 63, isUnsigned: true)
!524 = !DIEnumerator(name: "NetAcc_UnsupportedMethod", value: 64, isUnsigned: true)
!525 = !DIEnumerator(name: "Pool_ElemAlreadyExists", value: 65, isUnsigned: true)
!526 = !DIEnumerator(name: "Pool_BadHashFromKey", value: 66, isUnsigned: true)
!527 = !DIEnumerator(name: "Pool_InvalidId", value: 67, isUnsigned: true)
!528 = !DIEnumerator(name: "Pool_ZeroModulus", value: 68, isUnsigned: true)
!529 = !DIEnumerator(name: "RdrMgr_ReaderIdNotFound", value: 69, isUnsigned: true)
!530 = !DIEnumerator(name: "Reader_BadAutoEncoding", value: 70, isUnsigned: true)
!531 = !DIEnumerator(name: "Reader_CouldNotDecodeFirstLine", value: 71, isUnsigned: true)
!532 = !DIEnumerator(name: "Reader_NelLsepinDecl", value: 72, isUnsigned: true)
!533 = !DIEnumerator(name: "Reader_EOIInMultiSeq", value: 73, isUnsigned: true)
!534 = !DIEnumerator(name: "Reader_SrcOfsNotSupported", value: 74, isUnsigned: true)
!535 = !DIEnumerator(name: "Reader_EncodingStrRequired", value: 75, isUnsigned: true)
!536 = !DIEnumerator(name: "Scan_CouldNotOpenSource", value: 76, isUnsigned: true)
!537 = !DIEnumerator(name: "Scan_UnbalancedStartEnd", value: 77, isUnsigned: true)
!538 = !DIEnumerator(name: "Scan_BadPScanToken", value: 78, isUnsigned: true)
!539 = !DIEnumerator(name: "Stack_BadIndex", value: 79, isUnsigned: true)
!540 = !DIEnumerator(name: "Stack_EmptyStack", value: 80, isUnsigned: true)
!541 = !DIEnumerator(name: "Str_ZeroSizedTargetBuf", value: 81, isUnsigned: true)
!542 = !DIEnumerator(name: "Str_UnknownRadix", value: 82, isUnsigned: true)
!543 = !DIEnumerator(name: "Str_TargetBufTooSmall", value: 83, isUnsigned: true)
!544 = !DIEnumerator(name: "Str_StartIndexPastEnd", value: 84, isUnsigned: true)
!545 = !DIEnumerator(name: "Str_ConvertOverflow", value: 85, isUnsigned: true)
!546 = !DIEnumerator(name: "Strm_StdErrWriteFailure", value: 86, isUnsigned: true)
!547 = !DIEnumerator(name: "Strm_StdOutWriteFailure", value: 87, isUnsigned: true)
!548 = !DIEnumerator(name: "Strm_ConWriteFailure", value: 88, isUnsigned: true)
!549 = !DIEnumerator(name: "StrPool_IllegalId", value: 89, isUnsigned: true)
!550 = !DIEnumerator(name: "Trans_CouldNotCreateDefCvtr", value: 90, isUnsigned: true)
!551 = !DIEnumerator(name: "Trans_InvalidSizeReq", value: 91, isUnsigned: true)
!552 = !DIEnumerator(name: "Trans_Unrepresentable", value: 92, isUnsigned: true)
!553 = !DIEnumerator(name: "Trans_NotValidForEncoding", value: 93, isUnsigned: true)
!554 = !DIEnumerator(name: "Trans_BadBlockSize", value: 94, isUnsigned: true)
!555 = !DIEnumerator(name: "Trans_BadSrcSeq", value: 95, isUnsigned: true)
!556 = !DIEnumerator(name: "Trans_BadSrcCP", value: 96, isUnsigned: true)
!557 = !DIEnumerator(name: "Trans_BadTrailingSurrogate", value: 97, isUnsigned: true)
!558 = !DIEnumerator(name: "Trans_CantCreateCvtrFor", value: 98, isUnsigned: true)
!559 = !DIEnumerator(name: "URL_MalformedURL", value: 99, isUnsigned: true)
!560 = !DIEnumerator(name: "URL_UnsupportedProto", value: 100, isUnsigned: true)
!561 = !DIEnumerator(name: "URL_UnsupportedProto1", value: 101, isUnsigned: true)
!562 = !DIEnumerator(name: "URL_OnlyLocalHost", value: 102, isUnsigned: true)
!563 = !DIEnumerator(name: "URL_NoProtocolPresent", value: 103, isUnsigned: true)
!564 = !DIEnumerator(name: "URL_ExpectingTwoSlashes", value: 104, isUnsigned: true)
!565 = !DIEnumerator(name: "URL_IncorrectEscapedCharRef", value: 105, isUnsigned: true)
!566 = !DIEnumerator(name: "URL_UnterminatedHostComponent", value: 106, isUnsigned: true)
!567 = !DIEnumerator(name: "URL_RelativeBaseURL", value: 107, isUnsigned: true)
!568 = !DIEnumerator(name: "URL_BaseUnderflow", value: 108, isUnsigned: true)
!569 = !DIEnumerator(name: "URL_BadPortField", value: 109, isUnsigned: true)
!570 = !DIEnumerator(name: "UTF8_FormatError", value: 110, isUnsigned: true)
!571 = !DIEnumerator(name: "UTF8_Invalid_2BytesSeq", value: 111, isUnsigned: true)
!572 = !DIEnumerator(name: "UTF8_Invalid_3BytesSeq", value: 112, isUnsigned: true)
!573 = !DIEnumerator(name: "UTF8_Irregular_3BytesSeq", value: 113, isUnsigned: true)
!574 = !DIEnumerator(name: "UTF8_Invalid_4BytesSeq", value: 114, isUnsigned: true)
!575 = !DIEnumerator(name: "UTF8_Exceede_BytesLimit", value: 115, isUnsigned: true)
!576 = !DIEnumerator(name: "Vector_BadIndex", value: 116, isUnsigned: true)
!577 = !DIEnumerator(name: "Val_InvalidElemId", value: 117, isUnsigned: true)
!578 = !DIEnumerator(name: "Val_CantHaveIntSS", value: 118, isUnsigned: true)
!579 = !DIEnumerator(name: "XMLRec_UnknownEncoding", value: 119, isUnsigned: true)
!580 = !DIEnumerator(name: "Parser_Parse1", value: 120, isUnsigned: true)
!581 = !DIEnumerator(name: "Parser_Parse2", value: 121, isUnsigned: true)
!582 = !DIEnumerator(name: "Parser_Next1", value: 122, isUnsigned: true)
!583 = !DIEnumerator(name: "Parser_Next2", value: 123, isUnsigned: true)
!584 = !DIEnumerator(name: "Parser_Next3", value: 124, isUnsigned: true)
!585 = !DIEnumerator(name: "Parser_Next4", value: 125, isUnsigned: true)
!586 = !DIEnumerator(name: "Parser_Factor1", value: 126, isUnsigned: true)
!587 = !DIEnumerator(name: "Parser_Factor2", value: 127, isUnsigned: true)
!588 = !DIEnumerator(name: "Parser_Factor3", value: 128, isUnsigned: true)
!589 = !DIEnumerator(name: "Parser_Factor4", value: 129, isUnsigned: true)
!590 = !DIEnumerator(name: "Parser_Factor5", value: 130, isUnsigned: true)
!591 = !DIEnumerator(name: "Parser_Factor6", value: 131, isUnsigned: true)
!592 = !DIEnumerator(name: "Parser_Atom1", value: 132, isUnsigned: true)
!593 = !DIEnumerator(name: "Parser_Atom2", value: 133, isUnsigned: true)
!594 = !DIEnumerator(name: "Parser_Atom3", value: 134, isUnsigned: true)
!595 = !DIEnumerator(name: "Parser_Atom4", value: 135, isUnsigned: true)
!596 = !DIEnumerator(name: "Parser_Atom5", value: 136, isUnsigned: true)
!597 = !DIEnumerator(name: "Parser_CC1", value: 137, isUnsigned: true)
!598 = !DIEnumerator(name: "Parser_CC2", value: 138, isUnsigned: true)
!599 = !DIEnumerator(name: "Parser_CC3", value: 139, isUnsigned: true)
!600 = !DIEnumerator(name: "Parser_CC4", value: 140, isUnsigned: true)
!601 = !DIEnumerator(name: "Parser_CC5", value: 141, isUnsigned: true)
!602 = !DIEnumerator(name: "Parser_CC6", value: 142, isUnsigned: true)
!603 = !DIEnumerator(name: "Parser_Ope1", value: 143, isUnsigned: true)
!604 = !DIEnumerator(name: "Parser_Ope2", value: 144, isUnsigned: true)
!605 = !DIEnumerator(name: "Parser_Ope3", value: 145, isUnsigned: true)
!606 = !DIEnumerator(name: "Parser_Descape1", value: 146, isUnsigned: true)
!607 = !DIEnumerator(name: "Parser_Descape2", value: 147, isUnsigned: true)
!608 = !DIEnumerator(name: "Parser_Descape3", value: 148, isUnsigned: true)
!609 = !DIEnumerator(name: "Parser_Descape4", value: 149, isUnsigned: true)
!610 = !DIEnumerator(name: "Parser_Descape5", value: 150, isUnsigned: true)
!611 = !DIEnumerator(name: "Parser_Process1", value: 151, isUnsigned: true)
!612 = !DIEnumerator(name: "Parser_Process2", value: 152, isUnsigned: true)
!613 = !DIEnumerator(name: "Parser_Quantifier1", value: 153, isUnsigned: true)
!614 = !DIEnumerator(name: "Parser_Quantifier2", value: 154, isUnsigned: true)
!615 = !DIEnumerator(name: "Parser_Quantifier3", value: 155, isUnsigned: true)
!616 = !DIEnumerator(name: "Parser_Quantifier4", value: 156, isUnsigned: true)
!617 = !DIEnumerator(name: "Parser_Quantifier5", value: 157, isUnsigned: true)
!618 = !DIEnumerator(name: "Gen_NoSchemaValidator", value: 158, isUnsigned: true)
!619 = !DIEnumerator(name: "XUTIL_UnCopyableNodeType", value: 159, isUnsigned: true)
!620 = !DIEnumerator(name: "SubGrpComparator_NGR", value: 160, isUnsigned: true)
!621 = !DIEnumerator(name: "FACET_Invalid_Len", value: 161, isUnsigned: true)
!622 = !DIEnumerator(name: "FACET_Invalid_maxLen", value: 162, isUnsigned: true)
!623 = !DIEnumerator(name: "FACET_Invalid_minLen", value: 163, isUnsigned: true)
!624 = !DIEnumerator(name: "FACET_NonNeg_Len", value: 164, isUnsigned: true)
!625 = !DIEnumerator(name: "FACET_NonNeg_maxLen", value: 165, isUnsigned: true)
!626 = !DIEnumerator(name: "FACET_NonNeg_minLen", value: 166, isUnsigned: true)
!627 = !DIEnumerator(name: "FACET_Len_maxLen", value: 167, isUnsigned: true)
!628 = !DIEnumerator(name: "FACET_Len_minLen", value: 168, isUnsigned: true)
!629 = !DIEnumerator(name: "FACET_maxLen_minLen", value: 169, isUnsigned: true)
!630 = !DIEnumerator(name: "FACET_bool_Pattern", value: 170, isUnsigned: true)
!631 = !DIEnumerator(name: "FACET_Invalid_Tag", value: 171, isUnsigned: true)
!632 = !DIEnumerator(name: "FACET_Len_baseLen", value: 172, isUnsigned: true)
!633 = !DIEnumerator(name: "FACET_minLen_baseminLen", value: 173, isUnsigned: true)
!634 = !DIEnumerator(name: "FACET_minLen_basemaxLen", value: 174, isUnsigned: true)
!635 = !DIEnumerator(name: "FACET_maxLen_basemaxLen", value: 175, isUnsigned: true)
!636 = !DIEnumerator(name: "FACET_maxLen_baseminLen", value: 176, isUnsigned: true)
!637 = !DIEnumerator(name: "FACET_Len_baseMinLen", value: 177, isUnsigned: true)
!638 = !DIEnumerator(name: "FACET_Len_baseMaxLen", value: 178, isUnsigned: true)
!639 = !DIEnumerator(name: "FACET_minLen_baseLen", value: 179, isUnsigned: true)
!640 = !DIEnumerator(name: "FACET_maxLen_baseLen", value: 180, isUnsigned: true)
!641 = !DIEnumerator(name: "FACET_enum_base", value: 181, isUnsigned: true)
!642 = !DIEnumerator(name: "FACET_Invalid_WS", value: 182, isUnsigned: true)
!643 = !DIEnumerator(name: "FACET_WS_collapse", value: 183, isUnsigned: true)
!644 = !DIEnumerator(name: "FACET_WS_replace", value: 184, isUnsigned: true)
!645 = !DIEnumerator(name: "FACET_Invalid_MaxIncl", value: 185, isUnsigned: true)
!646 = !DIEnumerator(name: "FACET_Invalid_MaxExcl", value: 186, isUnsigned: true)
!647 = !DIEnumerator(name: "FACET_Invalid_MinIncl", value: 187, isUnsigned: true)
!648 = !DIEnumerator(name: "FACET_Invalid_MinExcl", value: 188, isUnsigned: true)
!649 = !DIEnumerator(name: "FACET_Invalid_TotalDigit", value: 189, isUnsigned: true)
!650 = !DIEnumerator(name: "FACET_Invalid_FractDigit", value: 190, isUnsigned: true)
!651 = !DIEnumerator(name: "FACET_PosInt_TotalDigit", value: 191, isUnsigned: true)
!652 = !DIEnumerator(name: "FACET_NonNeg_FractDigit", value: 192, isUnsigned: true)
!653 = !DIEnumerator(name: "FACET_max_Incl_Excl", value: 193, isUnsigned: true)
!654 = !DIEnumerator(name: "FACET_min_Incl_Excl", value: 194, isUnsigned: true)
!655 = !DIEnumerator(name: "FACET_maxExcl_minExcl", value: 195, isUnsigned: true)
!656 = !DIEnumerator(name: "FACET_maxExcl_minIncl", value: 196, isUnsigned: true)
!657 = !DIEnumerator(name: "FACET_maxIncl_minExcl", value: 197, isUnsigned: true)
!658 = !DIEnumerator(name: "FACET_maxIncl_minIncl", value: 198, isUnsigned: true)
!659 = !DIEnumerator(name: "FACET_TotDigit_FractDigit", value: 199, isUnsigned: true)
!660 = !DIEnumerator(name: "FACET_maxIncl_base_maxExcl", value: 200, isUnsigned: true)
!661 = !DIEnumerator(name: "FACET_maxIncl_base_maxIncl", value: 201, isUnsigned: true)
!662 = !DIEnumerator(name: "FACET_maxIncl_base_minIncl", value: 202, isUnsigned: true)
!663 = !DIEnumerator(name: "FACET_maxIncl_base_minExcl", value: 203, isUnsigned: true)
!664 = !DIEnumerator(name: "FACET_maxExcl_base_maxExcl", value: 204, isUnsigned: true)
!665 = !DIEnumerator(name: "FACET_maxExcl_base_maxIncl", value: 205, isUnsigned: true)
!666 = !DIEnumerator(name: "FACET_maxExcl_base_minIncl", value: 206, isUnsigned: true)
!667 = !DIEnumerator(name: "FACET_maxExcl_base_minExcl", value: 207, isUnsigned: true)
!668 = !DIEnumerator(name: "FACET_minExcl_base_maxExcl", value: 208, isUnsigned: true)
!669 = !DIEnumerator(name: "FACET_minExcl_base_maxIncl", value: 209, isUnsigned: true)
!670 = !DIEnumerator(name: "FACET_minExcl_base_minIncl", value: 210, isUnsigned: true)
!671 = !DIEnumerator(name: "FACET_minExcl_base_minExcl", value: 211, isUnsigned: true)
!672 = !DIEnumerator(name: "FACET_minIncl_base_maxExcl", value: 212, isUnsigned: true)
!673 = !DIEnumerator(name: "FACET_minIncl_base_maxIncl", value: 213, isUnsigned: true)
!674 = !DIEnumerator(name: "FACET_minIncl_base_minIncl", value: 214, isUnsigned: true)
!675 = !DIEnumerator(name: "FACET_minIncl_base_minExcl", value: 215, isUnsigned: true)
!676 = !DIEnumerator(name: "FACET_maxIncl_notFromBase", value: 216, isUnsigned: true)
!677 = !DIEnumerator(name: "FACET_maxExcl_notFromBase", value: 217, isUnsigned: true)
!678 = !DIEnumerator(name: "FACET_minIncl_notFromBase", value: 218, isUnsigned: true)
!679 = !DIEnumerator(name: "FACET_minExcl_notFromBase", value: 219, isUnsigned: true)
!680 = !DIEnumerator(name: "FACET_totalDigit_base_totalDigit", value: 220, isUnsigned: true)
!681 = !DIEnumerator(name: "FACET_fractDigit_base_totalDigit", value: 221, isUnsigned: true)
!682 = !DIEnumerator(name: "FACET_fractDigit_base_fractDigit", value: 222, isUnsigned: true)
!683 = !DIEnumerator(name: "FACET_maxIncl_base_fixed", value: 223, isUnsigned: true)
!684 = !DIEnumerator(name: "FACET_maxExcl_base_fixed", value: 224, isUnsigned: true)
!685 = !DIEnumerator(name: "FACET_minIncl_base_fixed", value: 225, isUnsigned: true)
!686 = !DIEnumerator(name: "FACET_minExcl_base_fixed", value: 226, isUnsigned: true)
!687 = !DIEnumerator(name: "FACET_totalDigit_base_fixed", value: 227, isUnsigned: true)
!688 = !DIEnumerator(name: "FACET_fractDigit_base_fixed", value: 228, isUnsigned: true)
!689 = !DIEnumerator(name: "FACET_maxLen_base_fixed", value: 229, isUnsigned: true)
!690 = !DIEnumerator(name: "FACET_minLen_base_fixed", value: 230, isUnsigned: true)
!691 = !DIEnumerator(name: "FACET_len_base_fixed", value: 231, isUnsigned: true)
!692 = !DIEnumerator(name: "FACET_whitespace_base_fixed", value: 232, isUnsigned: true)
!693 = !DIEnumerator(name: "FACET_internalError_fixed", value: 233, isUnsigned: true)
!694 = !DIEnumerator(name: "FACET_List_Null_baseValidator", value: 234, isUnsigned: true)
!695 = !DIEnumerator(name: "FACET_Union_Null_memberTypeValidators", value: 235, isUnsigned: true)
!696 = !DIEnumerator(name: "FACET_Union_Null_baseValidator", value: 236, isUnsigned: true)
!697 = !DIEnumerator(name: "FACET_Union_invalid_baseValidatorType", value: 237, isUnsigned: true)
!698 = !DIEnumerator(name: "VALUE_NotMatch_Pattern", value: 238, isUnsigned: true)
!699 = !DIEnumerator(name: "VALUE_Not_Base64", value: 239, isUnsigned: true)
!700 = !DIEnumerator(name: "VALUE_Not_HexBin", value: 240, isUnsigned: true)
!701 = !DIEnumerator(name: "VALUE_GT_maxLen", value: 241, isUnsigned: true)
!702 = !DIEnumerator(name: "VALUE_LT_minLen", value: 242, isUnsigned: true)
!703 = !DIEnumerator(name: "VALUE_NE_Len", value: 243, isUnsigned: true)
!704 = !DIEnumerator(name: "VALUE_NotIn_Enumeration", value: 244, isUnsigned: true)
!705 = !DIEnumerator(name: "VALUE_exceed_totalDigit", value: 245, isUnsigned: true)
!706 = !DIEnumerator(name: "VALUE_exceed_fractDigit", value: 246, isUnsigned: true)
!707 = !DIEnumerator(name: "VALUE_exceed_maxIncl", value: 247, isUnsigned: true)
!708 = !DIEnumerator(name: "VALUE_exceed_maxExcl", value: 248, isUnsigned: true)
!709 = !DIEnumerator(name: "VALUE_exceed_minIncl", value: 249, isUnsigned: true)
!710 = !DIEnumerator(name: "VALUE_exceed_minExcl", value: 250, isUnsigned: true)
!711 = !DIEnumerator(name: "VALUE_WS_replaced", value: 251, isUnsigned: true)
!712 = !DIEnumerator(name: "VALUE_WS_collapsed", value: 252, isUnsigned: true)
!713 = !DIEnumerator(name: "VALUE_Invalid_NCName", value: 253, isUnsigned: true)
!714 = !DIEnumerator(name: "VALUE_Invalid_Name", value: 254, isUnsigned: true)
!715 = !DIEnumerator(name: "VALUE_ID_Not_Unique", value: 255, isUnsigned: true)
!716 = !DIEnumerator(name: "VALUE_ENTITY_Invalid", value: 256, isUnsigned: true)
!717 = !DIEnumerator(name: "VALUE_QName_Invalid", value: 257, isUnsigned: true)
!718 = !DIEnumerator(name: "VALUE_NOTATION_Invalid", value: 258, isUnsigned: true)
!719 = !DIEnumerator(name: "VALUE_no_match_memberType", value: 259, isUnsigned: true)
!720 = !DIEnumerator(name: "VALUE_URI_Malformed", value: 260, isUnsigned: true)
!721 = !DIEnumerator(name: "XMLNUM_emptyString", value: 261, isUnsigned: true)
!722 = !DIEnumerator(name: "XMLNUM_WSString", value: 262, isUnsigned: true)
!723 = !DIEnumerator(name: "XMLNUM_2ManyDecPoint", value: 263, isUnsigned: true)
!724 = !DIEnumerator(name: "XMLNUM_Inv_chars", value: 264, isUnsigned: true)
!725 = !DIEnumerator(name: "XMLNUM_null_ptr", value: 265, isUnsigned: true)
!726 = !DIEnumerator(name: "XMLNUM_URI_Component_Empty", value: 266, isUnsigned: true)
!727 = !DIEnumerator(name: "XMLNUM_URI_Component_for_GenURI_Only", value: 267, isUnsigned: true)
!728 = !DIEnumerator(name: "XMLNUM_URI_Component_Invalid_EscapeSequence", value: 268, isUnsigned: true)
!729 = !DIEnumerator(name: "XMLNUM_URI_Component_Invalid_Char", value: 269, isUnsigned: true)
!730 = !DIEnumerator(name: "XMLNUM_URI_Component_Set_Null", value: 270, isUnsigned: true)
!731 = !DIEnumerator(name: "XMLNUM_URI_Component_Not_Conformant", value: 271, isUnsigned: true)
!732 = !DIEnumerator(name: "XMLNUM_URI_No_Scheme", value: 272, isUnsigned: true)
!733 = !DIEnumerator(name: "XMLNUM_URI_NullHost", value: 273, isUnsigned: true)
!734 = !DIEnumerator(name: "XMLNUM_URI_NullPath", value: 274, isUnsigned: true)
!735 = !DIEnumerator(name: "XMLNUM_URI_Component_inPath", value: 275, isUnsigned: true)
!736 = !DIEnumerator(name: "XMLNUM_URI_PortNo_Invalid", value: 276, isUnsigned: true)
!737 = !DIEnumerator(name: "XMLNUM_DBL_FLT_maxNeg", value: 277, isUnsigned: true)
!738 = !DIEnumerator(name: "XMLNUM_DBL_FLT_maxPos", value: 278, isUnsigned: true)
!739 = !DIEnumerator(name: "XMLNUM_DBL_FLT_minNegPos", value: 279, isUnsigned: true)
!740 = !DIEnumerator(name: "XMLNUM_DBL_FLT_InvalidType", value: 280, isUnsigned: true)
!741 = !DIEnumerator(name: "XMLNUM_DBL_FLT_No_Exponent", value: 281, isUnsigned: true)
!742 = !DIEnumerator(name: "Regex_Result_Not_Set", value: 282, isUnsigned: true)
!743 = !DIEnumerator(name: "Regex_CompactRangesError", value: 283, isUnsigned: true)
!744 = !DIEnumerator(name: "Regex_MergeRangesTypeMismatch", value: 284, isUnsigned: true)
!745 = !DIEnumerator(name: "Regex_SubtractRangesError", value: 285, isUnsigned: true)
!746 = !DIEnumerator(name: "Regex_IntersectRangesError", value: 286, isUnsigned: true)
!747 = !DIEnumerator(name: "Regex_ComplementRangesInvalidArg", value: 287, isUnsigned: true)
!748 = !DIEnumerator(name: "Regex_InvalidCategoryName", value: 288, isUnsigned: true)
!749 = !DIEnumerator(name: "Regex_KeywordNotFound", value: 289, isUnsigned: true)
!750 = !DIEnumerator(name: "Regex_BadRefNo", value: 290, isUnsigned: true)
!751 = !DIEnumerator(name: "Regex_UnknownOption", value: 291, isUnsigned: true)
!752 = !DIEnumerator(name: "Regex_UnknownTokenType", value: 292, isUnsigned: true)
!753 = !DIEnumerator(name: "Regex_RangeTokenGetError", value: 293, isUnsigned: true)
!754 = !DIEnumerator(name: "Regex_NotSupported", value: 294, isUnsigned: true)
!755 = !DIEnumerator(name: "Regex_InvalidChildIndex", value: 295, isUnsigned: true)
!756 = !DIEnumerator(name: "Regex_RepPatMatchesZeroString", value: 296, isUnsigned: true)
!757 = !DIEnumerator(name: "Regex_InvalidRepPattern", value: 297, isUnsigned: true)
!758 = !DIEnumerator(name: "NEL_RepeatedCalls", value: 298, isUnsigned: true)
!759 = !DIEnumerator(name: "RethrowError", value: 299, isUnsigned: true)
!760 = !DIEnumerator(name: "Out_Of_Memory", value: 300, isUnsigned: true)
!761 = !DIEnumerator(name: "DV_InvalidOperation", value: 301, isUnsigned: true)
!762 = !DIEnumerator(name: "XPath_NoAttrSelector", value: 302, isUnsigned: true)
!763 = !DIEnumerator(name: "XPath_NoUnionAtStart", value: 303, isUnsigned: true)
!764 = !DIEnumerator(name: "XPath_NoMultipleUnion", value: 304, isUnsigned: true)
!765 = !DIEnumerator(name: "XPath_MissingAttr", value: 305, isUnsigned: true)
!766 = !DIEnumerator(name: "XPath_ExpectedToken1", value: 306, isUnsigned: true)
!767 = !DIEnumerator(name: "XPath_PrefixNoURI", value: 307, isUnsigned: true)
!768 = !DIEnumerator(name: "XPath_NoDoubleColon", value: 308, isUnsigned: true)
!769 = !DIEnumerator(name: "XPath_ExpectedStep1", value: 309, isUnsigned: true)
!770 = !DIEnumerator(name: "XPath_ExpectedStep2", value: 310, isUnsigned: true)
!771 = !DIEnumerator(name: "XPath_ExpectedStep3", value: 311, isUnsigned: true)
!772 = !DIEnumerator(name: "XPath_NoForwardSlash", value: 312, isUnsigned: true)
!773 = !DIEnumerator(name: "XPath_NoDoubleForwardSlash", value: 313, isUnsigned: true)
!774 = !DIEnumerator(name: "XPath_NoForwardSlashAtStart", value: 314, isUnsigned: true)
!775 = !DIEnumerator(name: "XPath_NoSelectionOfRoot", value: 315, isUnsigned: true)
!776 = !DIEnumerator(name: "XPath_EmptyExpr", value: 316, isUnsigned: true)
!777 = !DIEnumerator(name: "XPath_NoUnionAtEnd", value: 317, isUnsigned: true)
!778 = !DIEnumerator(name: "XPath_InvalidChar", value: 318, isUnsigned: true)
!779 = !DIEnumerator(name: "XPath_TokenNotSupported", value: 319, isUnsigned: true)
!780 = !DIEnumerator(name: "XPath_FindSolution", value: 320, isUnsigned: true)
!781 = !DIEnumerator(name: "DateTime_Assert_Buffer_Fail", value: 321, isUnsigned: true)
!782 = !DIEnumerator(name: "DateTime_dt_missingT", value: 322, isUnsigned: true)
!783 = !DIEnumerator(name: "DateTime_gDay_invalid", value: 323, isUnsigned: true)
!784 = !DIEnumerator(name: "DateTime_gMth_invalid", value: 324, isUnsigned: true)
!785 = !DIEnumerator(name: "DateTime_gMthDay_invalid", value: 325, isUnsigned: true)
!786 = !DIEnumerator(name: "DateTime_dur_Start_dashP", value: 326, isUnsigned: true)
!787 = !DIEnumerator(name: "DateTime_dur_noP", value: 327, isUnsigned: true)
!788 = !DIEnumerator(name: "DateTime_dur_DashNotFirst", value: 328, isUnsigned: true)
!789 = !DIEnumerator(name: "DateTime_dur_inv_b4T", value: 329, isUnsigned: true)
!790 = !DIEnumerator(name: "DateTime_dur_NoTimeAfterT", value: 330, isUnsigned: true)
!791 = !DIEnumerator(name: "DateTime_dur_NoElementAtAll", value: 331, isUnsigned: true)
!792 = !DIEnumerator(name: "DateTime_dur_inv_seconds", value: 332, isUnsigned: true)
!793 = !DIEnumerator(name: "DateTime_date_incomplete", value: 333, isUnsigned: true)
!794 = !DIEnumerator(name: "DateTime_date_invalid", value: 334, isUnsigned: true)
!795 = !DIEnumerator(name: "DateTime_time_incomplete", value: 335, isUnsigned: true)
!796 = !DIEnumerator(name: "DateTime_time_invalid", value: 336, isUnsigned: true)
!797 = !DIEnumerator(name: "DateTime_ms_noDigit", value: 337, isUnsigned: true)
!798 = !DIEnumerator(name: "DateTime_ym_incomplete", value: 338, isUnsigned: true)
!799 = !DIEnumerator(name: "DateTime_ym_invalid", value: 339, isUnsigned: true)
!800 = !DIEnumerator(name: "DateTime_year_tooShort", value: 340, isUnsigned: true)
!801 = !DIEnumerator(name: "DateTime_year_leadingZero", value: 341, isUnsigned: true)
!802 = !DIEnumerator(name: "DateTime_ym_noMonth", value: 342, isUnsigned: true)
!803 = !DIEnumerator(name: "DateTime_tz_noUTCsign", value: 343, isUnsigned: true)
!804 = !DIEnumerator(name: "DateTime_tz_stuffAfterZ", value: 344, isUnsigned: true)
!805 = !DIEnumerator(name: "DateTime_tz_invalid", value: 345, isUnsigned: true)
!806 = !DIEnumerator(name: "DateTime_year_zero", value: 346, isUnsigned: true)
!807 = !DIEnumerator(name: "DateTime_mth_invalid", value: 347, isUnsigned: true)
!808 = !DIEnumerator(name: "DateTime_day_invalid", value: 348, isUnsigned: true)
!809 = !DIEnumerator(name: "DateTime_hour_invalid", value: 349, isUnsigned: true)
!810 = !DIEnumerator(name: "DateTime_min_invalid", value: 350, isUnsigned: true)
!811 = !DIEnumerator(name: "DateTime_second_invalid", value: 351, isUnsigned: true)
!812 = !DIEnumerator(name: "DateTime_tz_hh_invalid", value: 352, isUnsigned: true)
!813 = !DIEnumerator(name: "PD_EmptyBase", value: 353, isUnsigned: true)
!814 = !DIEnumerator(name: "PD_NSCompat1", value: 354, isUnsigned: true)
!815 = !DIEnumerator(name: "PD_OccurRangeE", value: 355, isUnsigned: true)
!816 = !DIEnumerator(name: "PD_NameTypeOK1", value: 356, isUnsigned: true)
!817 = !DIEnumerator(name: "PD_NameTypeOK2", value: 357, isUnsigned: true)
!818 = !DIEnumerator(name: "PD_NameTypeOK3", value: 358, isUnsigned: true)
!819 = !DIEnumerator(name: "PD_NameTypeOK4", value: 359, isUnsigned: true)
!820 = !DIEnumerator(name: "PD_NameTypeOK5", value: 360, isUnsigned: true)
!821 = !DIEnumerator(name: "PD_NameTypeOK6", value: 361, isUnsigned: true)
!822 = !DIEnumerator(name: "PD_NameTypeOK7", value: 362, isUnsigned: true)
!823 = !DIEnumerator(name: "PD_RecurseAsIfGroup", value: 363, isUnsigned: true)
!824 = !DIEnumerator(name: "PD_Recurse1", value: 364, isUnsigned: true)
!825 = !DIEnumerator(name: "PD_Recurse2", value: 365, isUnsigned: true)
!826 = !DIEnumerator(name: "PD_ForbiddenRes1", value: 366, isUnsigned: true)
!827 = !DIEnumerator(name: "PD_ForbiddenRes2", value: 367, isUnsigned: true)
!828 = !DIEnumerator(name: "PD_ForbiddenRes3", value: 368, isUnsigned: true)
!829 = !DIEnumerator(name: "PD_ForbiddenRes4", value: 369, isUnsigned: true)
!830 = !DIEnumerator(name: "PD_NSSubset1", value: 370, isUnsigned: true)
!831 = !DIEnumerator(name: "PD_NSSubset2", value: 371, isUnsigned: true)
!832 = !DIEnumerator(name: "PD_NSRecurseCheckCardinality1", value: 372, isUnsigned: true)
!833 = !DIEnumerator(name: "PD_RecurseUnordered", value: 373, isUnsigned: true)
!834 = !DIEnumerator(name: "PD_MapAndSum", value: 374, isUnsigned: true)
!835 = !DIEnumerator(name: "PD_InvalidContentType", value: 375, isUnsigned: true)
!836 = !DIEnumerator(name: "NodeIDMap_GrowErr", value: 376, isUnsigned: true)
!837 = !DIEnumerator(name: "XSer_ProtoType_Null_ClassName", value: 377, isUnsigned: true)
!838 = !DIEnumerator(name: "XSer_ProtoType_NameLen_Dif", value: 378, isUnsigned: true)
!839 = !DIEnumerator(name: "XSer_ProtoType_Name_Dif", value: 379, isUnsigned: true)
!840 = !DIEnumerator(name: "XSer_InStream_Read_LT_Req", value: 380, isUnsigned: true)
!841 = !DIEnumerator(name: "XSer_InStream_Read_OverFlow", value: 381, isUnsigned: true)
!842 = !DIEnumerator(name: "XSer_Storing_Violation", value: 382, isUnsigned: true)
!843 = !DIEnumerator(name: "XSer_StoreBuffer_Violation", value: 383, isUnsigned: true)
!844 = !DIEnumerator(name: "XSer_LoadPool_UppBnd_Exceed", value: 384, isUnsigned: true)
!845 = !DIEnumerator(name: "XSer_LoadPool_NoTally_ObjCnt", value: 385, isUnsigned: true)
!846 = !DIEnumerator(name: "XSer_Loading_Violation", value: 386, isUnsigned: true)
!847 = !DIEnumerator(name: "XSer_LoadBuffer_Violation", value: 387, isUnsigned: true)
!848 = !DIEnumerator(name: "XSer_Inv_ClassIndex", value: 388, isUnsigned: true)
!849 = !DIEnumerator(name: "XSer_Inv_FillBuffer_Size", value: 389, isUnsigned: true)
!850 = !DIEnumerator(name: "XSer_Inv_checkFillBuffer_Size", value: 390, isUnsigned: true)
!851 = !DIEnumerator(name: "XSer_Inv_checkFlushBuffer_Size", value: 391, isUnsigned: true)
!852 = !DIEnumerator(name: "XSer_Inv_Null_Pointer", value: 392, isUnsigned: true)
!853 = !DIEnumerator(name: "XSer_Inv_Buffer_Len", value: 393, isUnsigned: true)
!854 = !DIEnumerator(name: "XSer_CreateObject_Fail", value: 394, isUnsigned: true)
!855 = !DIEnumerator(name: "XSer_ObjCount_UppBnd_Exceed", value: 395, isUnsigned: true)
!856 = !DIEnumerator(name: "XSer_GrammarPool_Locked", value: 396, isUnsigned: true)
!857 = !DIEnumerator(name: "XSer_GrammarPool_Empty", value: 397, isUnsigned: true)
!858 = !DIEnumerator(name: "XSer_GrammarPool_NotEmpty", value: 398, isUnsigned: true)
!859 = !DIEnumerator(name: "XSer_StringPool_NotEmpty", value: 399, isUnsigned: true)
!860 = !DIEnumerator(name: "XSer_Storer_NewerThan_Loader", value: 400, isUnsigned: true)
!861 = !DIEnumerator(name: "F_HighBounds", value: 401, isUnsigned: true)
!862 = !DIEnumerator(name: "E_LowBounds", value: 402, isUnsigned: true)
!863 = !DIEnumerator(name: "E_HighBounds", value: 403, isUnsigned: true)
!864 = !{!16, !166, !43, !34, !15, !24, !232, !263}
!865 = !{!0, !446, !866, !869, !871, !873, !875, !877, !879, !881, !883, !885, !887, !889, !891, !893, !895, !897, !899, !901, !908, !910, !912, !914, !916, !918, !920, !922, !924, !926, !928, !930, !932, !937, !939}
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression(DW_OP_constu, 123, DW_OP_stack_value))
!867 = distinct !DIGlobalVariable(name: "chOpenCurly", scope: !2, file: !868, line: 61, type: !30, isLocal: true, isDefinition: true)
!868 = !DIFile(filename: "./xercesc/util/XMLUniDefs.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!869 = !DIGlobalVariableExpression(var: !870, expr: !DIExpression(DW_OP_constu, 48, DW_OP_stack_value))
!870 = distinct !DIGlobalVariable(name: "chDigit_0", scope: !2, file: !868, line: 79, type: !30, isLocal: true, isDefinition: true)
!871 = !DIGlobalVariableExpression(var: !872, expr: !DIExpression(DW_OP_constu, 51, DW_OP_stack_value))
!872 = distinct !DIGlobalVariable(name: "chDigit_3", scope: !2, file: !868, line: 82, type: !30, isLocal: true, isDefinition: true)
!873 = !DIGlobalVariableExpression(var: !874, expr: !DIExpression(DW_OP_constu, 125, DW_OP_stack_value))
!874 = distinct !DIGlobalVariable(name: "chCloseCurly", scope: !2, file: !868, line: 48, type: !30, isLocal: true, isDefinition: true)
!875 = !DIGlobalVariableExpression(var: !876, expr: !DIExpression(DW_OP_constu, 49, DW_OP_stack_value))
!876 = distinct !DIGlobalVariable(name: "chDigit_1", scope: !2, file: !868, line: 80, type: !30, isLocal: true, isDefinition: true)
!877 = !DIGlobalVariableExpression(var: !878, expr: !DIExpression(DW_OP_constu, 50, DW_OP_stack_value))
!878 = distinct !DIGlobalVariable(name: "chDigit_2", scope: !2, file: !868, line: 81, type: !30, isLocal: true, isDefinition: true)
!879 = !DIGlobalVariableExpression(var: !880, expr: !DIExpression(DW_OP_constu, 58, DW_OP_stack_value))
!880 = distinct !DIGlobalVariable(name: "chColon", scope: !2, file: !868, line: 51, type: !30, isLocal: true, isDefinition: true)
!881 = !DIGlobalVariableExpression(var: !882, expr: !DIExpression(DW_OP_constu, 46, DW_OP_stack_value))
!882 = distinct !DIGlobalVariable(name: "chPeriod", scope: !2, file: !868, line: 65, type: !30, isLocal: true, isDefinition: true)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression(DW_OP_constu, 95, DW_OP_stack_value))
!884 = distinct !DIGlobalVariable(name: "chUnderscore", scope: !2, file: !868, line: 74, type: !30, isLocal: true, isDefinition: true)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression(DW_OP_constu, 45, DW_OP_stack_value))
!886 = distinct !DIGlobalVariable(name: "chDash", scope: !2, file: !868, line: 53, type: !30, isLocal: true, isDefinition: true)
!887 = !DIGlobalVariableExpression(var: !888, expr: !DIExpression(DW_OP_constu, 97, DW_OP_stack_value))
!888 = distinct !DIGlobalVariable(name: "chLatin_a", scope: !2, file: !868, line: 117, type: !30, isLocal: true, isDefinition: true)
!889 = !DIGlobalVariableExpression(var: !890, expr: !DIExpression(DW_OP_constu, 122, DW_OP_stack_value))
!890 = distinct !DIGlobalVariable(name: "chLatin_z", scope: !2, file: !868, line: 142, type: !30, isLocal: true, isDefinition: true)
!891 = !DIGlobalVariableExpression(var: !892, expr: !DIExpression(DW_OP_constu, 65, DW_OP_stack_value))
!892 = distinct !DIGlobalVariable(name: "chLatin_A", scope: !2, file: !868, line: 90, type: !30, isLocal: true, isDefinition: true)
!893 = !DIGlobalVariableExpression(var: !894, expr: !DIExpression(DW_OP_constu, 90, DW_OP_stack_value))
!894 = distinct !DIGlobalVariable(name: "chLatin_Z", scope: !2, file: !868, line: 115, type: !30, isLocal: true, isDefinition: true)
!895 = !DIGlobalVariableExpression(var: !896, expr: !DIExpression(DW_OP_constu, 57, DW_OP_stack_value))
!896 = distinct !DIGlobalVariable(name: "chDigit_9", scope: !2, file: !868, line: 88, type: !30, isLocal: true, isDefinition: true)
!897 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression(DW_OP_constu, 102, DW_OP_stack_value))
!898 = distinct !DIGlobalVariable(name: "chLatin_f", scope: !2, file: !868, line: 122, type: !30, isLocal: true, isDefinition: true)
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression(DW_OP_constu, 70, DW_OP_stack_value))
!900 = distinct !DIGlobalVariable(name: "chLatin_F", scope: !2, file: !868, line: 95, type: !30, isLocal: true, isDefinition: true)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "digitList", scope: !903, file: !3, line: 799, type: !905, isLocal: true, isDefinition: true)
!903 = distinct !DISubprogram(name: "binToText", linkageName: "_ZN11xercesc_2_79XMLString9binToTextEmPtjjPNS_13MemoryManagerE", scope: !9, file: !3, line: 793, type: !168, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !167, retainedNodes: !904)
!904 = !{}
!905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 256, elements: !906)
!906 = !{!907}
!907 = !DISubrange(count: 16)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression(DW_OP_constu, 0, DW_OP_stack_value))
!909 = distinct !DIGlobalVariable(name: "chNull", scope: !2, file: !868, line: 35, type: !30, isLocal: true, isDefinition: true)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression(DW_OP_constu, 32, DW_OP_stack_value))
!911 = distinct !DIGlobalVariable(name: "chSpace", scope: !2, file: !868, line: 71, type: !30, isLocal: true, isDefinition: true)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression(DW_OP_constu, 13, DW_OP_stack_value))
!913 = distinct !DIGlobalVariable(name: "chCR", scope: !2, file: !868, line: 40, type: !30, isLocal: true, isDefinition: true)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression(DW_OP_constu, 10, DW_OP_stack_value))
!915 = distinct !DIGlobalVariable(name: "chLF", scope: !2, file: !868, line: 37, type: !30, isLocal: true, isDefinition: true)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression(DW_OP_constu, 9, DW_OP_stack_value))
!917 = distinct !DIGlobalVariable(name: "chHTab", scope: !2, file: !868, line: 36, type: !30, isLocal: true, isDefinition: true)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression(DW_OP_constu, 47, DW_OP_stack_value))
!919 = distinct !DIGlobalVariable(name: "chForwardSlash", scope: !2, file: !868, line: 57, type: !30, isLocal: true, isDefinition: true)
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression(DW_OP_constu, 105, DW_OP_stack_value))
!921 = distinct !DIGlobalVariable(name: "chLatin_i", scope: !2, file: !868, line: 125, type: !30, isLocal: true, isDefinition: true)
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression(DW_OP_constu, 108, DW_OP_stack_value))
!923 = distinct !DIGlobalVariable(name: "chLatin_l", scope: !2, file: !868, line: 128, type: !30, isLocal: true, isDefinition: true)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression(DW_OP_constu, 101, DW_OP_stack_value))
!925 = distinct !DIGlobalVariable(name: "chLatin_e", scope: !2, file: !868, line: 121, type: !30, isLocal: true, isDefinition: true)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression(DW_OP_constu, 165, DW_OP_stack_value))
!927 = distinct !DIGlobalVariable(name: "chYenSign", scope: !2, file: !868, line: 144, type: !30, isLocal: true, isDefinition: true)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression(DW_OP_constu, 8361, DW_OP_stack_value))
!929 = distinct !DIGlobalVariable(name: "chWonSign", scope: !2, file: !868, line: 145, type: !30, isLocal: true, isDefinition: true)
!930 = !DIGlobalVariableExpression(var: !931, expr: !DIExpression(DW_OP_constu, 92, DW_OP_stack_value))
!931 = distinct !DIGlobalVariable(name: "chBackSlash", scope: !2, file: !868, line: 44, type: !30, isLocal: true, isDefinition: true)
!932 = !DIGlobalVariableExpression(var: !933, expr: !DIExpression())
!933 = distinct !DIGlobalVariable(name: "gNullStr", linkageName: "_ZN11xercesc_2_7L8gNullStrE", scope: !2, file: !3, line: 70, type: !934, isLocal: true, isDefinition: true)
!934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 112, elements: !935)
!935 = !{!936}
!936 = !DISubrange(count: 7)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "gTranscoder", linkageName: "_ZN11xercesc_2_7L11gTranscoderE", scope: !2, file: !3, line: 69, type: !439, isLocal: true, isDefinition: true)
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression(DW_OP_constu, 128, DW_OP_stack_value))
!940 = distinct !DIGlobalVariable(name: "gWhitespaceCharMask", scope: !2, file: !941, line: 39, type: !942, isLocal: true, isDefinition: true)
!941 = !DIFile(filename: "./xercesc/util/XMLChar.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !423)
!943 = !{!944, !953, !957, !963, !967, !971, !977, !981, !983, !985, !989, !993, !997, !1001, !1005, !1007, !1009, !1011, !1015, !1019, !1023, !1025, !1027, !1033, !1035, !1037, !1039, !1041, !1043, !1045, !1047, !1049, !1051, !1053, !1055, !1057, !1059, !1063, !1067, !1073, !1075, !1080, !1082, !1087, !1091, !1095, !1103, !1107, !1111, !1115, !1117, !1121, !1125, !1129, !1131, !1135, !1142, !1146, !1150, !1152, !1154, !1158, !1162, !1167, !1171, !1175, !1177, !1184, !1188, !1196, !1198, !1202, !1206, !1210, !1214, !1219, !1224, !1229, !1230, !1231, !1232, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1336}
!944 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !946, file: !952, line: 77)
!945 = !DINamespace(name: "std", scope: null)
!946 = !DISubprogram(name: "memchr", scope: !947, file: !947, line: 73, type: !948, flags: DIFlagPrototyped, spFlags: 0)
!947 = !DIFile(filename: "/usr/include/string.h", directory: "")
!948 = !DISubroutineType(types: !949)
!949 = !{!950, !950, !34, !233}
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!952 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/cstring", directory: "")
!953 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !954, file: !952, line: 78)
!954 = !DISubprogram(name: "memcmp", scope: !947, file: !947, line: 64, type: !955, flags: DIFlagPrototyped, spFlags: 0)
!955 = !DISubroutineType(types: !956)
!956 = !{!34, !950, !950, !233}
!957 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !958, file: !952, line: 79)
!958 = !DISubprogram(name: "memcpy", scope: !947, file: !947, line: 43, type: !959, flags: DIFlagPrototyped, spFlags: 0)
!959 = !DISubroutineType(types: !960)
!960 = !{!232, !961, !962, !233}
!961 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !232)
!962 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !950)
!963 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !964, file: !952, line: 80)
!964 = !DISubprogram(name: "memmove", scope: !947, file: !947, line: 47, type: !965, flags: DIFlagPrototyped, spFlags: 0)
!965 = !DISubroutineType(types: !966)
!966 = !{!232, !232, !950, !233}
!967 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !968, file: !952, line: 81)
!968 = !DISubprogram(name: "memset", scope: !947, file: !947, line: 61, type: !969, flags: DIFlagPrototyped, spFlags: 0)
!969 = !DISubroutineType(types: !970)
!970 = !{!232, !232, !34, !233}
!971 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !972, file: !952, line: 82)
!972 = !DISubprogram(name: "strcat", scope: !947, file: !947, line: 130, type: !973, flags: DIFlagPrototyped, spFlags: 0)
!973 = !DISubroutineType(types: !974)
!974 = !{!15, !975, !976}
!975 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !15)
!976 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !18)
!977 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !978, file: !952, line: 83)
!978 = !DISubprogram(name: "strcmp", scope: !947, file: !947, line: 137, type: !979, flags: DIFlagPrototyped, spFlags: 0)
!979 = !DISubroutineType(types: !980)
!980 = !{!34, !18, !18}
!981 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !982, file: !952, line: 84)
!982 = !DISubprogram(name: "strcoll", scope: !947, file: !947, line: 144, type: !979, flags: DIFlagPrototyped, spFlags: 0)
!983 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !984, file: !952, line: 85)
!984 = !DISubprogram(name: "strcpy", scope: !947, file: !947, line: 122, type: !973, flags: DIFlagPrototyped, spFlags: 0)
!985 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !986, file: !952, line: 86)
!986 = !DISubprogram(name: "strcspn", scope: !947, file: !947, line: 273, type: !987, flags: DIFlagPrototyped, spFlags: 0)
!987 = !DISubroutineType(types: !988)
!988 = !{!233, !18, !18}
!989 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !990, file: !952, line: 87)
!990 = !DISubprogram(name: "strerror", scope: !947, file: !947, line: 397, type: !991, flags: DIFlagPrototyped, spFlags: 0)
!991 = !DISubroutineType(types: !992)
!992 = !{!15, !34}
!993 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !994, file: !952, line: 88)
!994 = !DISubprogram(name: "strlen", scope: !947, file: !947, line: 385, type: !995, flags: DIFlagPrototyped, spFlags: 0)
!995 = !DISubroutineType(types: !996)
!996 = !{!233, !18}
!997 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !998, file: !952, line: 89)
!998 = !DISubprogram(name: "strncat", scope: !947, file: !947, line: 133, type: !999, flags: DIFlagPrototyped, spFlags: 0)
!999 = !DISubroutineType(types: !1000)
!1000 = !{!15, !975, !976, !233}
!1001 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1002, file: !952, line: 90)
!1002 = !DISubprogram(name: "strncmp", scope: !947, file: !947, line: 140, type: !1003, flags: DIFlagPrototyped, spFlags: 0)
!1003 = !DISubroutineType(types: !1004)
!1004 = !{!34, !18, !18, !233}
!1005 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1006, file: !952, line: 91)
!1006 = !DISubprogram(name: "strncpy", scope: !947, file: !947, line: 125, type: !999, flags: DIFlagPrototyped, spFlags: 0)
!1007 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1008, file: !952, line: 92)
!1008 = !DISubprogram(name: "strspn", scope: !947, file: !947, line: 277, type: !987, flags: DIFlagPrototyped, spFlags: 0)
!1009 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1010, file: !952, line: 93)
!1010 = !DISubprogram(name: "strtok", scope: !947, file: !947, line: 336, type: !973, flags: DIFlagPrototyped, spFlags: 0)
!1011 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1012, file: !952, line: 94)
!1012 = !DISubprogram(name: "strxfrm", scope: !947, file: !947, line: 147, type: !1013, flags: DIFlagPrototyped, spFlags: 0)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!233, !975, !976, !233}
!1015 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1016, file: !952, line: 95)
!1016 = !DISubprogram(name: "strchr", scope: !947, file: !947, line: 208, type: !1017, flags: DIFlagPrototyped, spFlags: 0)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!18, !18, !34}
!1019 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1020, file: !952, line: 96)
!1020 = !DISubprogram(name: "strpbrk", scope: !947, file: !947, line: 285, type: !1021, flags: DIFlagPrototyped, spFlags: 0)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!18, !18, !18}
!1023 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1024, file: !952, line: 97)
!1024 = !DISubprogram(name: "strrchr", scope: !947, file: !947, line: 235, type: !1017, flags: DIFlagPrototyped, spFlags: 0)
!1025 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1026, file: !952, line: 98)
!1026 = !DISubprogram(name: "strstr", scope: !947, file: !947, line: 312, type: !1021, flags: DIFlagPrototyped, spFlags: 0)
!1027 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1028, file: !1032, line: 64)
!1028 = !DISubprogram(name: "isalnum", scope: !1029, file: !1029, line: 108, type: !1030, flags: DIFlagPrototyped, spFlags: 0)
!1029 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!1030 = !DISubroutineType(types: !1031)
!1031 = !{!34, !34}
!1032 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/cctype", directory: "")
!1033 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1034, file: !1032, line: 65)
!1034 = !DISubprogram(name: "isalpha", scope: !1029, file: !1029, line: 109, type: !1030, flags: DIFlagPrototyped, spFlags: 0)
!1035 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1036, file: !1032, line: 66)
!1036 = !DISubprogram(name: "iscntrl", scope: !1029, file: !1029, line: 110, type: !1030, flags: DIFlagPrototyped, spFlags: 0)
!1037 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1038, file: !1032, line: 67)
!1038 = !DISubprogram(name: "isdigit", scope: !1029, file: !1029, line: 111, type: !1030, flags: DIFlagPrototyped, spFlags: 0)
!1039 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1040, file: !1032, line: 68)
!1040 = !DISubprogram(name: "isgraph", scope: !1029, file: !1029, line: 113, type: !1030, flags: DIFlagPrototyped, spFlags: 0)
!1041 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1042, file: !1032, line: 69)
!1042 = !DISubprogram(name: "islower", scope: !1029, file: !1029, line: 112, type: !1030, flags: DIFlagPrototyped, spFlags: 0)
!1043 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1044, file: !1032, line: 70)
!1044 = !DISubprogram(name: "isprint", scope: !1029, file: !1029, line: 114, type: !1030, flags: DIFlagPrototyped, spFlags: 0)
!1045 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1046, file: !1032, line: 71)
!1046 = !DISubprogram(name: "ispunct", scope: !1029, file: !1029, line: 115, type: !1030, flags: DIFlagPrototyped, spFlags: 0)
!1047 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1048, file: !1032, line: 72)
!1048 = !DISubprogram(name: "isspace", scope: !1029, file: !1029, line: 116, type: !1030, flags: DIFlagPrototyped, spFlags: 0)
!1049 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1050, file: !1032, line: 73)
!1050 = !DISubprogram(name: "isupper", scope: !1029, file: !1029, line: 117, type: !1030, flags: DIFlagPrototyped, spFlags: 0)
!1051 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1052, file: !1032, line: 74)
!1052 = !DISubprogram(name: "isxdigit", scope: !1029, file: !1029, line: 118, type: !1030, flags: DIFlagPrototyped, spFlags: 0)
!1053 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1054, file: !1032, line: 75)
!1054 = !DISubprogram(name: "tolower", scope: !1029, file: !1029, line: 122, type: !1030, flags: DIFlagPrototyped, spFlags: 0)
!1055 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1056, file: !1032, line: 76)
!1056 = !DISubprogram(name: "toupper", scope: !1029, file: !1029, line: 125, type: !1030, flags: DIFlagPrototyped, spFlags: 0)
!1057 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1058, file: !1032, line: 87)
!1058 = !DISubprogram(name: "isblank", scope: !1029, file: !1029, line: 130, type: !1030, flags: DIFlagPrototyped, spFlags: 0)
!1059 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1060, file: !1062, line: 52)
!1060 = !DISubprogram(name: "abs", scope: !1061, file: !1061, line: 840, type: !1030, flags: DIFlagPrototyped, spFlags: 0)
!1061 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!1062 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/std_abs.h", directory: "")
!1063 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1064, file: !1066, line: 127)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "div_t", file: !1061, line: 62, baseType: !1065)
!1065 = !DICompositeType(tag: DW_TAG_structure_type, file: !1061, line: 58, flags: DIFlagFwdDecl, identifier: "_ZTS5div_t")
!1066 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/cstdlib", directory: "")
!1067 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1068, file: !1066, line: 128)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "ldiv_t", file: !1061, line: 70, baseType: !1069)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1061, line: 66, size: 128, flags: DIFlagTypePassByValue, elements: !1070, identifier: "_ZTS6ldiv_t")
!1070 = !{!1071, !1072}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !1069, file: !1061, line: 68, baseType: !174, size: 64)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !1069, file: !1061, line: 69, baseType: !174, size: 64, offset: 64)
!1073 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1074, file: !1066, line: 130)
!1074 = !DISubprogram(name: "abort", scope: !1061, file: !1061, line: 591, type: !443, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: 0)
!1075 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1076, file: !1066, line: 134)
!1076 = !DISubprogram(name: "atexit", scope: !1061, file: !1061, line: 595, type: !1077, flags: DIFlagPrototyped, spFlags: 0)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!34, !1079}
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!1080 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1081, file: !1066, line: 137)
!1081 = !DISubprogram(name: "at_quick_exit", scope: !1061, file: !1061, line: 600, type: !1077, flags: DIFlagPrototyped, spFlags: 0)
!1082 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1083, file: !1066, line: 140)
!1083 = !DISubprogram(name: "atof", scope: !1061, file: !1061, line: 101, type: !1084, flags: DIFlagPrototyped, spFlags: 0)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!1086, !18}
!1086 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1087 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1088, file: !1066, line: 141)
!1088 = !DISubprogram(name: "atoi", scope: !1061, file: !1061, line: 104, type: !1089, flags: DIFlagPrototyped, spFlags: 0)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{!34, !18}
!1091 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1092, file: !1066, line: 142)
!1092 = !DISubprogram(name: "atol", scope: !1061, file: !1061, line: 107, type: !1093, flags: DIFlagPrototyped, spFlags: 0)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!174, !18}
!1095 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1096, file: !1066, line: 143)
!1096 = !DISubprogram(name: "bsearch", scope: !1061, file: !1061, line: 820, type: !1097, flags: DIFlagPrototyped, spFlags: 0)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!232, !950, !950, !233, !233, !1099}
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !1061, line: 808, baseType: !1100)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!34, !950, !950}
!1103 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1104, file: !1066, line: 144)
!1104 = !DISubprogram(name: "calloc", scope: !1061, file: !1061, line: 542, type: !1105, flags: DIFlagPrototyped, spFlags: 0)
!1105 = !DISubroutineType(types: !1106)
!1106 = !{!232, !233, !233}
!1107 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1108, file: !1066, line: 145)
!1108 = !DISubprogram(name: "div", scope: !1061, file: !1061, line: 852, type: !1109, flags: DIFlagPrototyped, spFlags: 0)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!1064, !34, !34}
!1111 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1112, file: !1066, line: 146)
!1112 = !DISubprogram(name: "exit", scope: !1061, file: !1061, line: 617, type: !1113, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: 0)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{null, !34}
!1115 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1116, file: !1066, line: 147)
!1116 = !DISubprogram(name: "free", scope: !1061, file: !1061, line: 565, type: !242, flags: DIFlagPrototyped, spFlags: 0)
!1117 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1118, file: !1066, line: 148)
!1118 = !DISubprogram(name: "getenv", scope: !1061, file: !1061, line: 634, type: !1119, flags: DIFlagPrototyped, spFlags: 0)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!15, !18}
!1121 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1122, file: !1066, line: 149)
!1122 = !DISubprogram(name: "labs", scope: !1061, file: !1061, line: 841, type: !1123, flags: DIFlagPrototyped, spFlags: 0)
!1123 = !DISubroutineType(types: !1124)
!1124 = !{!174, !174}
!1125 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1126, file: !1066, line: 150)
!1126 = !DISubprogram(name: "ldiv", scope: !1061, file: !1061, line: 854, type: !1127, flags: DIFlagPrototyped, spFlags: 0)
!1127 = !DISubroutineType(types: !1128)
!1128 = !{!1068, !174, !174}
!1129 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1130, file: !1066, line: 151)
!1130 = !DISubprogram(name: "malloc", scope: !1061, file: !1061, line: 539, type: !230, flags: DIFlagPrototyped, spFlags: 0)
!1131 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1132, file: !1066, line: 153)
!1132 = !DISubprogram(name: "mblen", scope: !1061, file: !1061, line: 922, type: !1133, flags: DIFlagPrototyped, spFlags: 0)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!34, !18, !233}
!1135 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1136, file: !1066, line: 154)
!1136 = !DISubprogram(name: "mbstowcs", scope: !1061, file: !1061, line: 933, type: !1137, flags: DIFlagPrototyped, spFlags: 0)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{!233, !1139, !976, !233}
!1139 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1140)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!1141 = !DIBasicType(name: "wchar_t", size: 32, encoding: DW_ATE_signed)
!1142 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1143, file: !1066, line: 155)
!1143 = !DISubprogram(name: "mbtowc", scope: !1061, file: !1061, line: 925, type: !1144, flags: DIFlagPrototyped, spFlags: 0)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{!34, !1139, !976, !233}
!1146 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1147, file: !1066, line: 157)
!1147 = !DISubprogram(name: "qsort", scope: !1061, file: !1061, line: 830, type: !1148, flags: DIFlagPrototyped, spFlags: 0)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{null, !232, !233, !233, !1099}
!1150 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1151, file: !1066, line: 160)
!1151 = !DISubprogram(name: "quick_exit", scope: !1061, file: !1061, line: 623, type: !1113, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: 0)
!1152 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1153, file: !1066, line: 163)
!1153 = !DISubprogram(name: "rand", scope: !1061, file: !1061, line: 453, type: !257, flags: DIFlagPrototyped, spFlags: 0)
!1154 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1155, file: !1066, line: 164)
!1155 = !DISubprogram(name: "realloc", scope: !1061, file: !1061, line: 550, type: !1156, flags: DIFlagPrototyped, spFlags: 0)
!1156 = !DISubroutineType(types: !1157)
!1157 = !{!232, !232, !233}
!1158 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1159, file: !1066, line: 165)
!1159 = !DISubprogram(name: "srand", scope: !1061, file: !1061, line: 455, type: !1160, flags: DIFlagPrototyped, spFlags: 0)
!1160 = !DISubroutineType(types: !1161)
!1161 = !{null, !43}
!1162 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1163, file: !1066, line: 166)
!1163 = !DISubprogram(name: "strtod", scope: !1061, file: !1061, line: 117, type: !1164, flags: DIFlagPrototyped, spFlags: 0)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{!1086, !976, !1166}
!1166 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !413)
!1167 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1168, file: !1066, line: 167)
!1168 = !DISubprogram(name: "strtol", scope: !1061, file: !1061, line: 176, type: !1169, flags: DIFlagPrototyped, spFlags: 0)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!174, !976, !1166, !34}
!1171 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1172, file: !1066, line: 168)
!1172 = !DISubprogram(name: "strtoul", scope: !1061, file: !1061, line: 180, type: !1173, flags: DIFlagPrototyped, spFlags: 0)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{!166, !976, !1166, !34}
!1175 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1176, file: !1066, line: 169)
!1176 = !DISubprogram(name: "system", scope: !1061, file: !1061, line: 784, type: !1089, flags: DIFlagPrototyped, spFlags: 0)
!1177 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1178, file: !1066, line: 171)
!1178 = !DISubprogram(name: "wcstombs", scope: !1061, file: !1061, line: 936, type: !1179, flags: DIFlagPrototyped, spFlags: 0)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!233, !975, !1181, !233}
!1181 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1182)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64)
!1183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1141)
!1184 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1185, file: !1066, line: 172)
!1185 = !DISubprogram(name: "wctomb", scope: !1061, file: !1061, line: 929, type: !1186, flags: DIFlagPrototyped, spFlags: 0)
!1186 = !DISubroutineType(types: !1187)
!1187 = !{!34, !15, !1141}
!1188 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1189, entity: !1190, file: !1066, line: 200)
!1189 = !DINamespace(name: "__gnu_cxx", scope: null)
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "lldiv_t", file: !1061, line: 80, baseType: !1191)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1061, line: 76, size: 128, flags: DIFlagTypePassByValue, elements: !1192, identifier: "_ZTS7lldiv_t")
!1192 = !{!1193, !1195}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !1191, file: !1061, line: 78, baseType: !1194, size: 64)
!1194 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !1191, file: !1061, line: 79, baseType: !1194, size: 64, offset: 64)
!1196 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1189, entity: !1197, file: !1066, line: 206)
!1197 = !DISubprogram(name: "_Exit", scope: !1061, file: !1061, line: 629, type: !1113, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: 0)
!1198 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1189, entity: !1199, file: !1066, line: 210)
!1199 = !DISubprogram(name: "llabs", scope: !1061, file: !1061, line: 844, type: !1200, flags: DIFlagPrototyped, spFlags: 0)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!1194, !1194}
!1202 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1189, entity: !1203, file: !1066, line: 216)
!1203 = !DISubprogram(name: "lldiv", scope: !1061, file: !1061, line: 858, type: !1204, flags: DIFlagPrototyped, spFlags: 0)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{!1190, !1194, !1194}
!1206 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1189, entity: !1207, file: !1066, line: 227)
!1207 = !DISubprogram(name: "atoll", scope: !1061, file: !1061, line: 112, type: !1208, flags: DIFlagPrototyped, spFlags: 0)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{!1194, !18}
!1210 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1189, entity: !1211, file: !1066, line: 228)
!1211 = !DISubprogram(name: "strtoll", scope: !1061, file: !1061, line: 200, type: !1212, flags: DIFlagPrototyped, spFlags: 0)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{!1194, !976, !1166, !34}
!1214 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1189, entity: !1215, file: !1066, line: 229)
!1215 = !DISubprogram(name: "strtoull", scope: !1061, file: !1061, line: 205, type: !1216, flags: DIFlagPrototyped, spFlags: 0)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{!1218, !976, !1166, !34}
!1218 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1219 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1189, entity: !1220, file: !1066, line: 231)
!1220 = !DISubprogram(name: "strtof", scope: !1061, file: !1061, line: 123, type: !1221, flags: DIFlagPrototyped, spFlags: 0)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!1223, !976, !1166}
!1223 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1224 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1189, entity: !1225, file: !1066, line: 232)
!1225 = !DISubprogram(name: "strtold", scope: !1061, file: !1061, line: 126, type: !1226, flags: DIFlagPrototyped, spFlags: 0)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{!1228, !976, !1166}
!1228 = !DIBasicType(name: "long double", size: 128, encoding: DW_ATE_float)
!1229 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1190, file: !1066, line: 240)
!1230 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1197, file: !1066, line: 242)
!1231 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1199, file: !1066, line: 244)
!1232 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1233, file: !1066, line: 245)
!1233 = !DISubprogram(name: "div", linkageName: "_ZN9__gnu_cxx3divExx", scope: !1189, file: !1066, line: 213, type: !1204, flags: DIFlagPrototyped, spFlags: 0)
!1234 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1203, file: !1066, line: 246)
!1235 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1207, file: !1066, line: 248)
!1236 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1220, file: !1066, line: 249)
!1237 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1211, file: !1066, line: 250)
!1238 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1215, file: !1066, line: 251)
!1239 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1225, file: !1066, line: 252)
!1240 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1048, file: !3, line: 31)
!1241 = !DIImportedEntity(tag: DW_TAG_imported_declaration, name: "xercesc", scope: !449, entity: !2, file: !424, line: 433)
!1242 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1074, file: !1243, line: 38)
!1243 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/stdlib.h", directory: "")
!1244 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1076, file: !1243, line: 39)
!1245 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1112, file: !1243, line: 40)
!1246 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1081, file: !1243, line: 43)
!1247 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1151, file: !1243, line: 46)
!1248 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1064, file: !1243, line: 51)
!1249 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1068, file: !1243, line: 52)
!1250 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1251, file: !1243, line: 54)
!1251 = !DISubprogram(name: "abs", linkageName: "_ZSt3absg", scope: !945, file: !1062, line: 103, type: !1252, flags: DIFlagPrototyped, spFlags: 0)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{!1254, !1254}
!1254 = !DIBasicType(name: "__float128", size: 128, encoding: DW_ATE_float)
!1255 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1083, file: !1243, line: 55)
!1256 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1088, file: !1243, line: 56)
!1257 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1092, file: !1243, line: 57)
!1258 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1096, file: !1243, line: 58)
!1259 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1104, file: !1243, line: 59)
!1260 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1233, file: !1243, line: 60)
!1261 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1116, file: !1243, line: 61)
!1262 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1118, file: !1243, line: 62)
!1263 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1122, file: !1243, line: 63)
!1264 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1126, file: !1243, line: 64)
!1265 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1130, file: !1243, line: 65)
!1266 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1132, file: !1243, line: 67)
!1267 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1136, file: !1243, line: 68)
!1268 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1143, file: !1243, line: 69)
!1269 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1147, file: !1243, line: 71)
!1270 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1153, file: !1243, line: 72)
!1271 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1155, file: !1243, line: 73)
!1272 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1159, file: !1243, line: 74)
!1273 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1163, file: !1243, line: 75)
!1274 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1168, file: !1243, line: 76)
!1275 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1172, file: !1243, line: 77)
!1276 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1176, file: !1243, line: 78)
!1277 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1178, file: !1243, line: 80)
!1278 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !1185, file: !1243, line: 81)
!1279 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !958, file: !345, line: 30)
!1280 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !449, entity: !958, file: !8, line: 254)
!1281 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !945, entity: !1282, file: !1283, line: 58)
!1282 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "exception_ptr", scope: !1284, file: !1283, line: 80, size: 64, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1285, identifier: "_ZTSNSt15__exception_ptr13exception_ptrE")
!1283 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/exception_ptr.h", directory: "")
!1284 = !DINamespace(name: "__exception_ptr", scope: !945)
!1285 = !{!1286, !1287, !1291, !1294, !1295, !1300, !1301, !1305, !1311, !1315, !1319, !1322, !1323, !1326, !1329}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "_M_exception_object", scope: !1282, file: !1283, line: 82, baseType: !232, size: 64)
!1287 = !DISubprogram(name: "exception_ptr", scope: !1282, file: !1283, line: 84, type: !1288, scopeLine: 84, flags: DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{null, !1290, !232}
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1291 = !DISubprogram(name: "_M_addref", linkageName: "_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv", scope: !1282, file: !1283, line: 86, type: !1292, scopeLine: 86, flags: DIFlagPrototyped, spFlags: 0)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{null, !1290}
!1294 = !DISubprogram(name: "_M_release", linkageName: "_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv", scope: !1282, file: !1283, line: 87, type: !1292, scopeLine: 87, flags: DIFlagPrototyped, spFlags: 0)
!1295 = !DISubprogram(name: "_M_get", linkageName: "_ZNKSt15__exception_ptr13exception_ptr6_M_getEv", scope: !1282, file: !1283, line: 89, type: !1296, scopeLine: 89, flags: DIFlagPrototyped, spFlags: 0)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{!232, !1298}
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1282)
!1300 = !DISubprogram(name: "exception_ptr", scope: !1282, file: !1283, line: 97, type: !1292, scopeLine: 97, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1301 = !DISubprogram(name: "exception_ptr", scope: !1282, file: !1283, line: 99, type: !1302, scopeLine: 99, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{null, !1290, !1304}
!1304 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1299, size: 64)
!1305 = !DISubprogram(name: "exception_ptr", scope: !1282, file: !1283, line: 102, type: !1306, scopeLine: 102, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{null, !1290, !1308}
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "nullptr_t", scope: !945, file: !1309, line: 264, baseType: !1310)
!1309 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/x86_64-linux-gnu/c++/10/bits/c++config.h", directory: "")
!1310 = !DIBasicType(tag: DW_TAG_unspecified_type, name: "decltype(nullptr)")
!1311 = !DISubprogram(name: "exception_ptr", scope: !1282, file: !1283, line: 106, type: !1312, scopeLine: 106, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{null, !1290, !1314}
!1314 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !1282, size: 64)
!1315 = !DISubprogram(name: "operator=", linkageName: "_ZNSt15__exception_ptr13exception_ptraSERKS0_", scope: !1282, file: !1283, line: 119, type: !1316, scopeLine: 119, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{!1318, !1290, !1304}
!1318 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1282, size: 64)
!1319 = !DISubprogram(name: "operator=", linkageName: "_ZNSt15__exception_ptr13exception_ptraSEOS0_", scope: !1282, file: !1283, line: 123, type: !1320, scopeLine: 123, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1320 = !DISubroutineType(types: !1321)
!1321 = !{!1318, !1290, !1314}
!1322 = !DISubprogram(name: "~exception_ptr", scope: !1282, file: !1283, line: 130, type: !1292, scopeLine: 130, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1323 = !DISubprogram(name: "swap", linkageName: "_ZNSt15__exception_ptr13exception_ptr4swapERS0_", scope: !1282, file: !1283, line: 133, type: !1324, scopeLine: 133, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{null, !1290, !1318}
!1326 = !DISubprogram(name: "operator bool", linkageName: "_ZNKSt15__exception_ptr13exception_ptrcvbEv", scope: !1282, file: !1283, line: 145, type: !1327, scopeLine: 145, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!54, !1298}
!1329 = !DISubprogram(name: "__cxa_exception_type", linkageName: "_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv", scope: !1282, file: !1283, line: 154, type: !1330, scopeLine: 154, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!1332, !1298}
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1333 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1334)
!1334 = !DICompositeType(tag: DW_TAG_class_type, name: "type_info", scope: !945, file: !1335, line: 88, flags: DIFlagFwdDecl)
!1335 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/typeinfo", directory: "")
!1336 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1284, entity: !1337, file: !1283, line: 74)
!1337 = !DISubprogram(name: "rethrow_exception", linkageName: "_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE", scope: !945, file: !1283, line: 70, type: !1338, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: 0)
!1338 = !DISubroutineType(types: !1339)
!1339 = !{null, !1282}
!1340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 128, elements: !906)
!1341 = !{i32 7, !"Dwarf Version", i32 4}
!1342 = !{i32 2, !"Debug Info Version", i32 3}
!1343 = !{i32 1, !"wchar_size", i32 4}
!1344 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1345 = distinct !DISubprogram(name: "~XMLDeleter", linkageName: "_ZN11xercesc_2_710XMLDeleterD0Ev", scope: !1347, file: !1346, line: 845, type: !1351, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !1350, retainedNodes: !904)
!1346 = !DIFile(filename: "./xercesc/util/PlatformUtils.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!1347 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "XMLDeleter", scope: !2, file: !1346, line: 42, size: 64, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1348, vtableHolder: !1347, identifier: "_ZTSN11xercesc_2_710XMLDeleterE")
!1348 = !{!1349, !1350, !1354, !1355, !1360}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$XMLDeleter", scope: !1346, file: !1346, baseType: !255, size: 64, flags: DIFlagArtificial)
!1350 = !DISubprogram(name: "~XMLDeleter", scope: !1347, file: !1346, line: 45, type: !1351, scopeLine: 45, containingType: !1347, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1351 = !DISubroutineType(types: !1352)
!1352 = !{null, !1353}
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1354 = !DISubprogram(name: "XMLDeleter", scope: !1347, file: !1346, line: 48, type: !1351, scopeLine: 48, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1355 = !DISubprogram(name: "XMLDeleter", scope: !1347, file: !1346, line: 51, type: !1356, scopeLine: 51, flags: DIFlagPrototyped, spFlags: 0)
!1356 = !DISubroutineType(types: !1357)
!1357 = !{null, !1353, !1358}
!1358 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1359, size: 64)
!1359 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1347)
!1360 = !DISubprogram(name: "operator=", linkageName: "_ZN11xercesc_2_710XMLDeleteraSERKS0_", scope: !1347, file: !1346, line: 52, type: !1361, scopeLine: 52, flags: DIFlagPrototyped, spFlags: 0)
!1361 = !DISubroutineType(types: !1362)
!1362 = !{!1363, !1353, !1358}
!1363 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1347, size: 64)
!1364 = !DILocalVariable(name: "this", arg: 1, scope: !1345, type: !1365, flags: DIFlagArtificial | DIFlagObjectPointer)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1366 = !DILocation(line: 0, scope: !1345)
!1367 = !DILocation(line: 846, column: 1, scope: !1345)
!1368 = !DILocation(line: 847, column: 1, scope: !1345)
!1369 = distinct !DISubprogram(name: "~XMLDeleter", linkageName: "_ZN11xercesc_2_710XMLDeleterD2Ev", scope: !1347, file: !1346, line: 845, type: !1351, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !1350, retainedNodes: !904)
!1370 = !DILocalVariable(name: "this", arg: 1, scope: !1369, type: !1365, flags: DIFlagArtificial | DIFlagObjectPointer)
!1371 = !DILocation(line: 0, scope: !1369)
!1372 = !DILocation(line: 847, column: 1, scope: !1369)
!1373 = !DILocalVariable(name: "toFormat", arg: 1, scope: !448, file: !3, line: 81, type: !165)
!1374 = !DILocation(line: 81, column: 53, scope: !448)
!1375 = !DILocalVariable(name: "toFill", arg: 2, scope: !448, file: !3, line: 82, type: !14)
!1376 = !DILocation(line: 82, column: 53, scope: !448)
!1377 = !DILocalVariable(name: "maxChars", arg: 3, scope: !448, file: !3, line: 83, type: !42)
!1378 = !DILocation(line: 83, column: 53, scope: !448)
!1379 = !DILocalVariable(name: "radix", arg: 4, scope: !448, file: !3, line: 84, type: !42)
!1380 = !DILocation(line: 84, column: 53, scope: !448)
!1381 = !DILocalVariable(name: "manager", arg: 5, scope: !448, file: !3, line: 85, type: !71)
!1382 = !DILocation(line: 85, column: 53, scope: !448)
!1383 = !DILocation(line: 93, column: 10, scope: !1384)
!1384 = distinct !DILexicalBlock(scope: !448, file: !3, line: 93, column: 9)
!1385 = !DILocation(line: 93, column: 9, scope: !448)
!1386 = !DILocation(line: 94, column: 9, scope: !1384)
!1387 = !DILocation(line: 169, column: 1, scope: !1384)
!1388 = !DILocation(line: 97, column: 10, scope: !1389)
!1389 = distinct !DILexicalBlock(scope: !448, file: !3, line: 97, column: 9)
!1390 = !DILocation(line: 97, column: 9, scope: !448)
!1391 = !DILocation(line: 99, column: 9, scope: !1392)
!1392 = distinct !DILexicalBlock(scope: !1389, file: !3, line: 98, column: 5)
!1393 = !DILocation(line: 99, column: 19, scope: !1392)
!1394 = !DILocation(line: 100, column: 9, scope: !1392)
!1395 = !DILocation(line: 100, column: 19, scope: !1392)
!1396 = !DILocation(line: 101, column: 9, scope: !1392)
!1397 = !DILocalVariable(name: "tmpIndex", scope: !448, file: !3, line: 105, type: !43)
!1398 = !DILocation(line: 105, column: 18, scope: !448)
!1399 = !DILocalVariable(name: "tmpVal", scope: !448, file: !3, line: 108, type: !43)
!1400 = !DILocation(line: 108, column: 18, scope: !448)
!1401 = !DILocation(line: 108, column: 27, scope: !448)
!1402 = !DILocalVariable(name: "tmpBuf", scope: !448, file: !3, line: 115, type: !1403)
!1403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 1024, elements: !1404)
!1404 = !{!1405}
!1405 = !DISubrange(count: 128)
!1406 = !DILocation(line: 115, column: 12, scope: !448)
!1407 = !DILocation(line: 122, column: 9, scope: !1408)
!1408 = distinct !DILexicalBlock(scope: !448, file: !3, line: 122, column: 9)
!1409 = !DILocation(line: 122, column: 15, scope: !1408)
!1410 = !DILocation(line: 122, column: 9, scope: !448)
!1411 = !DILocation(line: 124, column: 9, scope: !1412)
!1412 = distinct !DILexicalBlock(scope: !1408, file: !3, line: 123, column: 5)
!1413 = !DILocation(line: 124, column: 16, scope: !1412)
!1414 = !DILocation(line: 126, column: 17, scope: !1415)
!1415 = distinct !DILexicalBlock(scope: !1416, file: !3, line: 126, column: 17)
!1416 = distinct !DILexicalBlock(scope: !1412, file: !3, line: 125, column: 9)
!1417 = !DILocation(line: 126, column: 24, scope: !1415)
!1418 = !DILocation(line: 126, column: 17, scope: !1416)
!1419 = !DILocation(line: 127, column: 32, scope: !1415)
!1420 = !DILocation(line: 127, column: 17, scope: !1415)
!1421 = !DILocation(line: 127, column: 36, scope: !1415)
!1422 = !DILocation(line: 129, column: 32, scope: !1415)
!1423 = !DILocation(line: 129, column: 17, scope: !1415)
!1424 = !DILocation(line: 129, column: 36, scope: !1415)
!1425 = !DILocation(line: 130, column: 20, scope: !1416)
!1426 = distinct !{!1426, !1411, !1427}
!1427 = !DILocation(line: 131, column: 9, scope: !1412)
!1428 = !DILocation(line: 132, column: 5, scope: !1412)
!1429 = !DILocation(line: 133, column: 15, scope: !1430)
!1430 = distinct !DILexicalBlock(scope: !1408, file: !3, line: 133, column: 15)
!1431 = !DILocation(line: 133, column: 21, scope: !1430)
!1432 = !DILocation(line: 133, column: 15, scope: !1408)
!1433 = !DILocation(line: 135, column: 9, scope: !1434)
!1434 = distinct !DILexicalBlock(scope: !1430, file: !3, line: 134, column: 5)
!1435 = !DILocation(line: 135, column: 16, scope: !1434)
!1436 = !DILocalVariable(name: "charInd", scope: !1437, file: !3, line: 137, type: !42)
!1437 = distinct !DILexicalBlock(scope: !1434, file: !3, line: 136, column: 9)
!1438 = !DILocation(line: 137, column: 32, scope: !1437)
!1439 = !DILocation(line: 137, column: 43, scope: !1437)
!1440 = !DILocation(line: 137, column: 50, scope: !1437)
!1441 = !DILocation(line: 137, column: 42, scope: !1437)
!1442 = !DILocation(line: 138, column: 44, scope: !1437)
!1443 = !DILocation(line: 138, column: 34, scope: !1437)
!1444 = !DILocation(line: 138, column: 28, scope: !1437)
!1445 = !DILocation(line: 138, column: 13, scope: !1437)
!1446 = !DILocation(line: 138, column: 32, scope: !1437)
!1447 = !DILocation(line: 139, column: 20, scope: !1437)
!1448 = distinct !{!1448, !1433, !1449}
!1449 = !DILocation(line: 140, column: 9, scope: !1434)
!1450 = !DILocation(line: 141, column: 5, scope: !1434)
!1451 = !DILocation(line: 142, column: 16, scope: !1452)
!1452 = distinct !DILexicalBlock(scope: !1430, file: !3, line: 142, column: 15)
!1453 = !DILocation(line: 142, column: 22, scope: !1452)
!1454 = !DILocation(line: 142, column: 28, scope: !1452)
!1455 = !DILocation(line: 142, column: 32, scope: !1452)
!1456 = !DILocation(line: 142, column: 38, scope: !1452)
!1457 = !DILocation(line: 142, column: 15, scope: !1430)
!1458 = !DILocation(line: 144, column: 9, scope: !1459)
!1459 = distinct !DILexicalBlock(scope: !1452, file: !3, line: 143, column: 5)
!1460 = !DILocation(line: 144, column: 16, scope: !1459)
!1461 = !DILocalVariable(name: "charInd", scope: !1462, file: !3, line: 146, type: !42)
!1462 = distinct !DILexicalBlock(scope: !1459, file: !3, line: 145, column: 9)
!1463 = !DILocation(line: 146, column: 32, scope: !1462)
!1464 = !DILocation(line: 146, column: 43, scope: !1462)
!1465 = !DILocation(line: 146, column: 52, scope: !1462)
!1466 = !DILocation(line: 146, column: 50, scope: !1462)
!1467 = !DILocation(line: 147, column: 44, scope: !1462)
!1468 = !DILocation(line: 147, column: 34, scope: !1462)
!1469 = !DILocation(line: 147, column: 28, scope: !1462)
!1470 = !DILocation(line: 147, column: 13, scope: !1462)
!1471 = !DILocation(line: 147, column: 32, scope: !1462)
!1472 = !DILocation(line: 148, column: 23, scope: !1462)
!1473 = !DILocation(line: 148, column: 20, scope: !1462)
!1474 = distinct !{!1474, !1458, !1475}
!1475 = !DILocation(line: 149, column: 9, scope: !1459)
!1476 = !DILocation(line: 150, column: 5, scope: !1459)
!1477 = !DILocation(line: 153, column: 9, scope: !1478)
!1478 = distinct !DILexicalBlock(scope: !1452, file: !3, line: 152, column: 5)
!1479 = !DILocation(line: 169, column: 1, scope: !1478)
!1480 = !DILocation(line: 157, column: 9, scope: !1481)
!1481 = distinct !DILexicalBlock(scope: !448, file: !3, line: 157, column: 9)
!1482 = !DILocation(line: 157, column: 20, scope: !1481)
!1483 = !DILocation(line: 157, column: 18, scope: !1481)
!1484 = !DILocation(line: 157, column: 9, scope: !448)
!1485 = !DILocation(line: 159, column: 9, scope: !1486)
!1486 = distinct !DILexicalBlock(scope: !1481, file: !3, line: 158, column: 5)
!1487 = !DILocation(line: 169, column: 1, scope: !1486)
!1488 = !DILocalVariable(name: "outIndex", scope: !448, file: !3, line: 163, type: !43)
!1489 = !DILocation(line: 163, column: 18, scope: !448)
!1490 = !DILocation(line: 164, column: 5, scope: !448)
!1491 = !DILocation(line: 164, column: 12, scope: !1492)
!1492 = distinct !DILexicalBlock(scope: !1493, file: !3, line: 164, column: 5)
!1493 = distinct !DILexicalBlock(scope: !448, file: !3, line: 164, column: 5)
!1494 = !DILocation(line: 164, column: 21, scope: !1492)
!1495 = !DILocation(line: 164, column: 5, scope: !1493)
!1496 = !DILocation(line: 165, column: 37, scope: !1492)
!1497 = !DILocation(line: 165, column: 45, scope: !1492)
!1498 = !DILocation(line: 165, column: 30, scope: !1492)
!1499 = !DILocation(line: 165, column: 9, scope: !1492)
!1500 = !DILocation(line: 165, column: 24, scope: !1492)
!1501 = !DILocation(line: 165, column: 28, scope: !1492)
!1502 = !DILocation(line: 164, column: 34, scope: !1492)
!1503 = !DILocation(line: 164, column: 5, scope: !1492)
!1504 = distinct !{!1504, !1495, !1505}
!1505 = !DILocation(line: 165, column: 47, scope: !1493)
!1506 = !DILocation(line: 168, column: 5, scope: !448)
!1507 = !DILocation(line: 168, column: 12, scope: !448)
!1508 = !DILocation(line: 168, column: 22, scope: !448)
!1509 = !DILocation(line: 169, column: 1, scope: !448)
!1510 = distinct !DISubprogram(name: "IllegalArgumentException", linkageName: "_ZN11xercesc_2_724IllegalArgumentExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE", scope: !1512, file: !1511, line: 30, type: !1518, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !1517, retainedNodes: !904)
!1511 = !DIFile(filename: "./xercesc/util/IllegalArgumentException.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!1512 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "IllegalArgumentException", scope: !2, file: !1511, line: 30, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1513, vtableHolder: !1515, identifier: "_ZTSN11xercesc_2_724IllegalArgumentExceptionE")
!1513 = !{!1514, !1517, !1522, !1527, !1530, !1533, !1536, !1540, !1545, !1548}
!1514 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1512, baseType: !1515, flags: DIFlagPublic, extraData: i32 0)
!1515 = !DICompositeType(tag: DW_TAG_class_type, name: "XMLException", scope: !2, file: !1516, line: 40, flags: DIFlagFwdDecl)
!1516 = !DIFile(filename: "./xercesc/util/XMLException.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!1517 = !DISubprogram(name: "IllegalArgumentException", scope: !1512, file: !1511, line: 30, type: !1518, scopeLine: 30, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1518 = !DISubroutineType(types: !1519)
!1519 = !{null, !1520, !17, !42, !1521, !4}
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !451)
!1522 = !DISubprogram(name: "IllegalArgumentException", scope: !1512, file: !1511, line: 30, type: !1523, scopeLine: 30, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{null, !1520, !1525}
!1525 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1526, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1512)
!1527 = !DISubprogram(name: "IllegalArgumentException", scope: !1512, file: !1511, line: 30, type: !1528, scopeLine: 30, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{null, !1520, !17, !42, !1521, !28, !28, !28, !28, !4}
!1530 = !DISubprogram(name: "IllegalArgumentException", scope: !1512, file: !1511, line: 30, type: !1531, scopeLine: 30, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{null, !1520, !17, !42, !1521, !17, !17, !17, !17, !4}
!1533 = !DISubprogram(name: "~IllegalArgumentException", scope: !1512, file: !1511, line: 30, type: !1534, scopeLine: 30, containingType: !1512, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{null, !1520}
!1536 = !DISubprogram(name: "operator=", linkageName: "_ZN11xercesc_2_724IllegalArgumentExceptionaSERKS0_", scope: !1512, file: !1511, line: 30, type: !1537, scopeLine: 30, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!1539, !1520, !1525}
!1539 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1512, size: 64)
!1540 = !DISubprogram(name: "duplicate", linkageName: "_ZNK11xercesc_2_724IllegalArgumentException9duplicateEv", scope: !1512, file: !1511, line: 30, type: !1541, scopeLine: 30, containingType: !1512, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1541 = !DISubroutineType(types: !1542)
!1542 = !{!1543, !1544}
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1545 = !DISubprogram(name: "getType", linkageName: "_ZNK11xercesc_2_724IllegalArgumentException7getTypeEv", scope: !1512, file: !1511, line: 30, type: !1546, scopeLine: 30, containingType: !1512, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{!29, !1544}
!1548 = !DISubprogram(name: "IllegalArgumentException", scope: !1512, file: !1511, line: 30, type: !1534, scopeLine: 30, flags: DIFlagPrototyped, spFlags: 0)
!1549 = !DILocalVariable(name: "this", arg: 1, scope: !1510, type: !1550, flags: DIFlagArtificial | DIFlagObjectPointer)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64)
!1551 = !DILocation(line: 0, scope: !1510)
!1552 = !DILocalVariable(name: "srcFile", arg: 2, scope: !1510, file: !1511, line: 30, type: !17)
!1553 = !DILocation(line: 30, column: 1, scope: !1510)
!1554 = !DILocalVariable(name: "srcLine", arg: 3, scope: !1510, file: !1511, line: 30, type: !42)
!1555 = !DILocalVariable(name: "toThrow", arg: 4, scope: !1510, file: !1511, line: 30, type: !1521)
!1556 = !DILocalVariable(name: "memoryManager", arg: 5, scope: !1510, file: !1511, line: 30, type: !4)
!1557 = !DILocation(line: 30, column: 1, scope: !1558)
!1558 = distinct !DILexicalBlock(scope: !1510, file: !1511, line: 30, column: 1)
!1559 = distinct !DISubprogram(name: "~IllegalArgumentException", linkageName: "_ZN11xercesc_2_724IllegalArgumentExceptionD2Ev", scope: !1512, file: !1511, line: 30, type: !1534, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !1533, retainedNodes: !904)
!1560 = !DILocalVariable(name: "this", arg: 1, scope: !1559, type: !1550, flags: DIFlagArtificial | DIFlagObjectPointer)
!1561 = !DILocation(line: 0, scope: !1559)
!1562 = !DILocation(line: 30, column: 1, scope: !1563)
!1563 = distinct !DILexicalBlock(scope: !1559, file: !1511, line: 30, column: 1)
!1564 = !DILocation(line: 30, column: 1, scope: !1559)
!1565 = distinct !DISubprogram(name: "RuntimeException", linkageName: "_ZN11xercesc_2_716RuntimeExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE", scope: !1567, file: !1566, line: 30, type: !1571, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !1570, retainedNodes: !904)
!1566 = !DIFile(filename: "./xercesc/util/RuntimeException.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!1567 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "RuntimeException", scope: !2, file: !1566, line: 30, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1568, vtableHolder: !1515, identifier: "_ZTSN11xercesc_2_716RuntimeExceptionE")
!1568 = !{!1569, !1570, !1574, !1579, !1582, !1585, !1588, !1592, !1596, !1599}
!1569 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1567, baseType: !1515, flags: DIFlagPublic, extraData: i32 0)
!1570 = !DISubprogram(name: "RuntimeException", scope: !1567, file: !1566, line: 30, type: !1571, scopeLine: 30, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1571 = !DISubroutineType(types: !1572)
!1572 = !{null, !1573, !17, !42, !1521, !4}
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1574 = !DISubprogram(name: "RuntimeException", scope: !1567, file: !1566, line: 30, type: !1575, scopeLine: 30, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1575 = !DISubroutineType(types: !1576)
!1576 = !{null, !1573, !1577}
!1577 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1578, size: 64)
!1578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1567)
!1579 = !DISubprogram(name: "RuntimeException", scope: !1567, file: !1566, line: 30, type: !1580, scopeLine: 30, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1580 = !DISubroutineType(types: !1581)
!1581 = !{null, !1573, !17, !42, !1521, !28, !28, !28, !28, !4}
!1582 = !DISubprogram(name: "RuntimeException", scope: !1567, file: !1566, line: 30, type: !1583, scopeLine: 30, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1583 = !DISubroutineType(types: !1584)
!1584 = !{null, !1573, !17, !42, !1521, !17, !17, !17, !17, !4}
!1585 = !DISubprogram(name: "~RuntimeException", scope: !1567, file: !1566, line: 30, type: !1586, scopeLine: 30, containingType: !1567, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1586 = !DISubroutineType(types: !1587)
!1587 = !{null, !1573}
!1588 = !DISubprogram(name: "operator=", linkageName: "_ZN11xercesc_2_716RuntimeExceptionaSERKS0_", scope: !1567, file: !1566, line: 30, type: !1589, scopeLine: 30, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!1591, !1573, !1577}
!1591 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1567, size: 64)
!1592 = !DISubprogram(name: "duplicate", linkageName: "_ZNK11xercesc_2_716RuntimeException9duplicateEv", scope: !1567, file: !1566, line: 30, type: !1593, scopeLine: 30, containingType: !1567, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{!1543, !1595}
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1596 = !DISubprogram(name: "getType", linkageName: "_ZNK11xercesc_2_716RuntimeException7getTypeEv", scope: !1567, file: !1566, line: 30, type: !1597, scopeLine: 30, containingType: !1567, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1597 = !DISubroutineType(types: !1598)
!1598 = !{!29, !1595}
!1599 = !DISubprogram(name: "RuntimeException", scope: !1567, file: !1566, line: 30, type: !1586, scopeLine: 30, flags: DIFlagPrototyped, spFlags: 0)
!1600 = !DILocalVariable(name: "this", arg: 1, scope: !1565, type: !1601, flags: DIFlagArtificial | DIFlagObjectPointer)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64)
!1602 = !DILocation(line: 0, scope: !1565)
!1603 = !DILocalVariable(name: "srcFile", arg: 2, scope: !1565, file: !1566, line: 30, type: !17)
!1604 = !DILocation(line: 30, column: 1, scope: !1565)
!1605 = !DILocalVariable(name: "srcLine", arg: 3, scope: !1565, file: !1566, line: 30, type: !42)
!1606 = !DILocalVariable(name: "toThrow", arg: 4, scope: !1565, file: !1566, line: 30, type: !1521)
!1607 = !DILocalVariable(name: "memoryManager", arg: 5, scope: !1565, file: !1566, line: 30, type: !4)
!1608 = !DILocation(line: 30, column: 1, scope: !1609)
!1609 = distinct !DILexicalBlock(scope: !1565, file: !1566, line: 30, column: 1)
!1610 = distinct !DISubprogram(name: "~RuntimeException", linkageName: "_ZN11xercesc_2_716RuntimeExceptionD2Ev", scope: !1567, file: !1566, line: 30, type: !1586, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !1585, retainedNodes: !904)
!1611 = !DILocalVariable(name: "this", arg: 1, scope: !1610, type: !1601, flags: DIFlagArtificial | DIFlagObjectPointer)
!1612 = !DILocation(line: 0, scope: !1610)
!1613 = !DILocation(line: 30, column: 1, scope: !1614)
!1614 = distinct !DILexicalBlock(scope: !1610, file: !1566, line: 30, column: 1)
!1615 = !DILocation(line: 30, column: 1, scope: !1610)
!1616 = distinct !DISubprogram(name: "binToText", linkageName: "_ZN11xercesc_2_79XMLString9binToTextEjPcjjPNS_13MemoryManagerE", scope: !9, file: !3, line: 171, type: !157, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !156, retainedNodes: !904)
!1617 = !DILocalVariable(name: "toFormat", arg: 1, scope: !1616, file: !3, line: 171, type: !42)
!1618 = !DILocation(line: 171, column: 53, scope: !1616)
!1619 = !DILocalVariable(name: "toFill", arg: 2, scope: !1616, file: !3, line: 172, type: !14)
!1620 = !DILocation(line: 172, column: 53, scope: !1616)
!1621 = !DILocalVariable(name: "maxChars", arg: 3, scope: !1616, file: !3, line: 173, type: !42)
!1622 = !DILocation(line: 173, column: 53, scope: !1616)
!1623 = !DILocalVariable(name: "radix", arg: 4, scope: !1616, file: !3, line: 174, type: !42)
!1624 = !DILocation(line: 174, column: 53, scope: !1616)
!1625 = !DILocalVariable(name: "manager", arg: 5, scope: !1616, file: !3, line: 175, type: !71)
!1626 = !DILocation(line: 175, column: 53, scope: !1616)
!1627 = !DILocation(line: 178, column: 30, scope: !1616)
!1628 = !DILocation(line: 178, column: 40, scope: !1616)
!1629 = !DILocation(line: 178, column: 48, scope: !1616)
!1630 = !DILocation(line: 178, column: 58, scope: !1616)
!1631 = !DILocation(line: 178, column: 65, scope: !1616)
!1632 = !DILocation(line: 178, column: 5, scope: !1616)
!1633 = !DILocation(line: 179, column: 1, scope: !1616)
!1634 = distinct !DISubprogram(name: "binToText", linkageName: "_ZN11xercesc_2_79XMLString9binToTextElPcjjPNS_13MemoryManagerE", scope: !9, file: !3, line: 181, type: !171, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !170, retainedNodes: !904)
!1635 = !DILocalVariable(name: "toFormat", arg: 1, scope: !1634, file: !3, line: 181, type: !173)
!1636 = !DILocation(line: 181, column: 53, scope: !1634)
!1637 = !DILocalVariable(name: "toFill", arg: 2, scope: !1634, file: !3, line: 182, type: !14)
!1638 = !DILocation(line: 182, column: 53, scope: !1634)
!1639 = !DILocalVariable(name: "maxChars", arg: 3, scope: !1634, file: !3, line: 183, type: !42)
!1640 = !DILocation(line: 183, column: 53, scope: !1634)
!1641 = !DILocalVariable(name: "radix", arg: 4, scope: !1634, file: !3, line: 184, type: !42)
!1642 = !DILocation(line: 184, column: 53, scope: !1634)
!1643 = !DILocalVariable(name: "manager", arg: 5, scope: !1634, file: !3, line: 185, type: !71)
!1644 = !DILocation(line: 185, column: 53, scope: !1634)
!1645 = !DILocalVariable(name: "startInd", scope: !1634, file: !3, line: 191, type: !43)
!1646 = !DILocation(line: 191, column: 18, scope: !1634)
!1647 = !DILocalVariable(name: "actualVal", scope: !1634, file: !3, line: 192, type: !166)
!1648 = !DILocation(line: 192, column: 19, scope: !1634)
!1649 = !DILocation(line: 193, column: 9, scope: !1650)
!1650 = distinct !DILexicalBlock(scope: !1634, file: !3, line: 193, column: 9)
!1651 = !DILocation(line: 193, column: 18, scope: !1650)
!1652 = !DILocation(line: 193, column: 9, scope: !1634)
!1653 = !DILocation(line: 195, column: 9, scope: !1654)
!1654 = distinct !DILexicalBlock(scope: !1650, file: !3, line: 194, column: 5)
!1655 = !DILocation(line: 195, column: 19, scope: !1654)
!1656 = !DILocation(line: 196, column: 17, scope: !1654)
!1657 = !DILocation(line: 197, column: 37, scope: !1654)
!1658 = !DILocation(line: 197, column: 46, scope: !1654)
!1659 = !DILocation(line: 197, column: 19, scope: !1654)
!1660 = !DILocation(line: 198, column: 5, scope: !1654)
!1661 = !DILocation(line: 201, column: 37, scope: !1662)
!1662 = distinct !DILexicalBlock(scope: !1650, file: !3, line: 200, column: 5)
!1663 = !DILocation(line: 201, column: 19, scope: !1662)
!1664 = !DILocation(line: 205, column: 15, scope: !1634)
!1665 = !DILocation(line: 205, column: 27, scope: !1634)
!1666 = !DILocation(line: 205, column: 34, scope: !1634)
!1667 = !DILocation(line: 205, column: 45, scope: !1634)
!1668 = !DILocation(line: 205, column: 55, scope: !1634)
!1669 = !DILocation(line: 205, column: 62, scope: !1634)
!1670 = !DILocation(line: 205, column: 5, scope: !1634)
!1671 = !DILocation(line: 206, column: 1, scope: !1634)
!1672 = distinct !DISubprogram(name: "binToText", linkageName: "_ZN11xercesc_2_79XMLString9binToTextEiPcjjPNS_13MemoryManagerE", scope: !9, file: !3, line: 208, type: !179, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !178, retainedNodes: !904)
!1673 = !DILocalVariable(name: "toFormat", arg: 1, scope: !1672, file: !3, line: 208, type: !61)
!1674 = !DILocation(line: 208, column: 53, scope: !1672)
!1675 = !DILocalVariable(name: "toFill", arg: 2, scope: !1672, file: !3, line: 209, type: !14)
!1676 = !DILocation(line: 209, column: 53, scope: !1672)
!1677 = !DILocalVariable(name: "maxChars", arg: 3, scope: !1672, file: !3, line: 210, type: !42)
!1678 = !DILocation(line: 210, column: 53, scope: !1672)
!1679 = !DILocalVariable(name: "radix", arg: 4, scope: !1672, file: !3, line: 211, type: !42)
!1680 = !DILocation(line: 211, column: 53, scope: !1672)
!1681 = !DILocalVariable(name: "manager", arg: 5, scope: !1672, file: !3, line: 212, type: !71)
!1682 = !DILocation(line: 212, column: 53, scope: !1672)
!1683 = !DILocalVariable(name: "startInd", scope: !1672, file: !3, line: 218, type: !43)
!1684 = !DILocation(line: 218, column: 18, scope: !1672)
!1685 = !DILocalVariable(name: "actualVal", scope: !1672, file: !3, line: 219, type: !166)
!1686 = !DILocation(line: 219, column: 19, scope: !1672)
!1687 = !DILocation(line: 220, column: 9, scope: !1688)
!1688 = distinct !DILexicalBlock(scope: !1672, file: !3, line: 220, column: 9)
!1689 = !DILocation(line: 220, column: 18, scope: !1688)
!1690 = !DILocation(line: 220, column: 9, scope: !1672)
!1691 = !DILocation(line: 222, column: 9, scope: !1692)
!1692 = distinct !DILexicalBlock(scope: !1688, file: !3, line: 221, column: 5)
!1693 = !DILocation(line: 222, column: 19, scope: !1692)
!1694 = !DILocation(line: 223, column: 17, scope: !1692)
!1695 = !DILocation(line: 224, column: 37, scope: !1692)
!1696 = !DILocation(line: 224, column: 46, scope: !1692)
!1697 = !DILocation(line: 224, column: 36, scope: !1692)
!1698 = !DILocation(line: 224, column: 19, scope: !1692)
!1699 = !DILocation(line: 225, column: 5, scope: !1692)
!1700 = !DILocation(line: 228, column: 37, scope: !1701)
!1701 = distinct !DILexicalBlock(scope: !1688, file: !3, line: 227, column: 5)
!1702 = !DILocation(line: 228, column: 36, scope: !1701)
!1703 = !DILocation(line: 228, column: 19, scope: !1701)
!1704 = !DILocation(line: 232, column: 15, scope: !1672)
!1705 = !DILocation(line: 232, column: 27, scope: !1672)
!1706 = !DILocation(line: 232, column: 34, scope: !1672)
!1707 = !DILocation(line: 232, column: 45, scope: !1672)
!1708 = !DILocation(line: 232, column: 55, scope: !1672)
!1709 = !DILocation(line: 232, column: 62, scope: !1672)
!1710 = !DILocation(line: 232, column: 5, scope: !1672)
!1711 = !DILocation(line: 233, column: 1, scope: !1672)
!1712 = distinct !DISubprogram(name: "catString", linkageName: "_ZN11xercesc_2_79XMLString9catStringEPcPKc", scope: !9, file: !3, line: 236, type: !12, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !11, retainedNodes: !904)
!1713 = !DILocalVariable(name: "target", arg: 1, scope: !1712, file: !3, line: 236, type: !14)
!1714 = !DILocation(line: 236, column: 39, scope: !1712)
!1715 = !DILocalVariable(name: "src", arg: 2, scope: !1712, file: !3, line: 236, type: !17)
!1716 = !DILocation(line: 236, column: 65, scope: !1712)
!1717 = !DILocation(line: 238, column: 12, scope: !1712)
!1718 = !DILocation(line: 238, column: 20, scope: !1712)
!1719 = !DILocation(line: 238, column: 5, scope: !1712)
!1720 = !DILocation(line: 239, column: 1, scope: !1712)
!1721 = distinct !DISubprogram(name: "compareIString", linkageName: "_ZN11xercesc_2_79XMLString14compareIStringEPKcS2_", scope: !9, file: !3, line: 242, type: !32, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !31, retainedNodes: !904)
!1722 = !DILocalVariable(name: "str1", arg: 1, scope: !1721, file: !3, line: 242, type: !17)
!1723 = !DILocation(line: 242, column: 49, scope: !1721)
!1724 = !DILocalVariable(name: "str2", arg: 2, scope: !1721, file: !3, line: 242, type: !17)
!1725 = !DILocation(line: 242, column: 73, scope: !1721)
!1726 = !DILocation(line: 244, column: 20, scope: !1721)
!1727 = !DILocation(line: 244, column: 26, scope: !1721)
!1728 = !DILocation(line: 244, column: 12, scope: !1721)
!1729 = !DILocation(line: 244, column: 5, scope: !1721)
!1730 = distinct !DISubprogram(name: "compareNString", linkageName: "_ZN11xercesc_2_79XMLString14compareNStringEPKcS2_j", scope: !9, file: !3, line: 248, type: !40, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !39, retainedNodes: !904)
!1731 = !DILocalVariable(name: "str1", arg: 1, scope: !1730, file: !3, line: 248, type: !17)
!1732 = !DILocation(line: 248, column: 57, scope: !1730)
!1733 = !DILocalVariable(name: "str2", arg: 2, scope: !1730, file: !3, line: 249, type: !17)
!1734 = !DILocation(line: 249, column: 57, scope: !1730)
!1735 = !DILocalVariable(name: "count", arg: 3, scope: !1730, file: !3, line: 250, type: !42)
!1736 = !DILocation(line: 250, column: 57, scope: !1730)
!1737 = !DILocation(line: 253, column: 10, scope: !1738)
!1738 = distinct !DILexicalBlock(scope: !1730, file: !3, line: 253, column: 9)
!1739 = !DILocation(line: 253, column: 9, scope: !1730)
!1740 = !DILocation(line: 254, column: 9, scope: !1738)
!1741 = !DILocation(line: 256, column: 20, scope: !1730)
!1742 = !DILocation(line: 256, column: 26, scope: !1730)
!1743 = !DILocation(line: 256, column: 32, scope: !1730)
!1744 = !DILocation(line: 256, column: 12, scope: !1730)
!1745 = !DILocation(line: 256, column: 5, scope: !1730)
!1746 = !DILocation(line: 257, column: 1, scope: !1730)
!1747 = distinct !DISubprogram(name: "compareNIString", linkageName: "_ZN11xercesc_2_79XMLString15compareNIStringEPKcS2_j", scope: !9, file: !3, line: 260, type: !40, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !47, retainedNodes: !904)
!1748 = !DILocalVariable(name: "str1", arg: 1, scope: !1747, file: !3, line: 260, type: !17)
!1749 = !DILocation(line: 260, column: 57, scope: !1747)
!1750 = !DILocalVariable(name: "str2", arg: 2, scope: !1747, file: !3, line: 261, type: !17)
!1751 = !DILocation(line: 261, column: 57, scope: !1747)
!1752 = !DILocalVariable(name: "count", arg: 3, scope: !1747, file: !3, line: 262, type: !42)
!1753 = !DILocation(line: 262, column: 57, scope: !1747)
!1754 = !DILocation(line: 264, column: 10, scope: !1755)
!1755 = distinct !DILexicalBlock(scope: !1747, file: !3, line: 264, column: 9)
!1756 = !DILocation(line: 264, column: 9, scope: !1747)
!1757 = !DILocation(line: 265, column: 9, scope: !1755)
!1758 = !DILocation(line: 267, column: 21, scope: !1747)
!1759 = !DILocation(line: 267, column: 27, scope: !1747)
!1760 = !DILocation(line: 267, column: 33, scope: !1747)
!1761 = !DILocation(line: 267, column: 12, scope: !1747)
!1762 = !DILocation(line: 267, column: 5, scope: !1747)
!1763 = !DILocation(line: 268, column: 1, scope: !1747)
!1764 = distinct !DISubprogram(name: "compareString", linkageName: "_ZN11xercesc_2_79XMLString13compareStringEPKcS2_", scope: !9, file: !3, line: 271, type: !32, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !49, retainedNodes: !904)
!1765 = !DILocalVariable(name: "str1", arg: 1, scope: !1764, file: !3, line: 271, type: !17)
!1766 = !DILocation(line: 271, column: 56, scope: !1764)
!1767 = !DILocalVariable(name: "str2", arg: 2, scope: !1764, file: !3, line: 272, type: !17)
!1768 = !DILocation(line: 272, column: 56, scope: !1764)
!1769 = !DILocation(line: 274, column: 19, scope: !1764)
!1770 = !DILocation(line: 274, column: 25, scope: !1764)
!1771 = !DILocation(line: 274, column: 12, scope: !1764)
!1772 = !DILocation(line: 274, column: 5, scope: !1764)
!1773 = distinct !DISubprogram(name: "copyString", linkageName: "_ZN11xercesc_2_79XMLString10copyStringEPcPKc", scope: !9, file: !3, line: 278, type: !12, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !63, retainedNodes: !904)
!1774 = !DILocalVariable(name: "target", arg: 1, scope: !1773, file: !3, line: 278, type: !14)
!1775 = !DILocation(line: 278, column: 52, scope: !1773)
!1776 = !DILocalVariable(name: "src", arg: 2, scope: !1773, file: !3, line: 279, type: !17)
!1777 = !DILocation(line: 279, column: 52, scope: !1773)
!1778 = !DILocation(line: 281, column: 12, scope: !1773)
!1779 = !DILocation(line: 281, column: 20, scope: !1773)
!1780 = !DILocation(line: 281, column: 5, scope: !1773)
!1781 = !DILocation(line: 282, column: 1, scope: !1773)
!1782 = distinct !DISubprogram(name: "cut", linkageName: "_ZN11xercesc_2_79XMLString3cutEPtj", scope: !9, file: !3, line: 285, type: !192, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !191, retainedNodes: !904)
!1783 = !DILocalVariable(name: "toCutFrom", arg: 1, scope: !1782, file: !3, line: 285, type: !23)
!1784 = !DILocation(line: 285, column: 45, scope: !1782)
!1785 = !DILocalVariable(name: "count", arg: 2, scope: !1782, file: !3, line: 286, type: !42)
!1786 = !DILocation(line: 286, column: 45, scope: !1782)
!1787 = !DILocation(line: 296, column: 10, scope: !1788)
!1788 = distinct !DILexicalBlock(scope: !1782, file: !3, line: 296, column: 9)
!1789 = !DILocation(line: 296, column: 9, scope: !1782)
!1790 = !DILocation(line: 297, column: 9, scope: !1788)
!1791 = !DILocalVariable(name: "targetPtr", scope: !1782, file: !3, line: 299, type: !24)
!1792 = !DILocation(line: 299, column: 12, scope: !1782)
!1793 = !DILocation(line: 299, column: 24, scope: !1782)
!1794 = !DILocalVariable(name: "srcPtr", scope: !1782, file: !3, line: 300, type: !24)
!1795 = !DILocation(line: 300, column: 12, scope: !1782)
!1796 = !DILocation(line: 300, column: 21, scope: !1782)
!1797 = !DILocation(line: 300, column: 33, scope: !1782)
!1798 = !DILocation(line: 300, column: 31, scope: !1782)
!1799 = !DILocation(line: 301, column: 5, scope: !1782)
!1800 = !DILocation(line: 301, column: 13, scope: !1782)
!1801 = !DILocation(line: 301, column: 12, scope: !1782)
!1802 = !DILocation(line: 302, column: 31, scope: !1782)
!1803 = !DILocation(line: 302, column: 24, scope: !1782)
!1804 = !DILocation(line: 302, column: 19, scope: !1782)
!1805 = !DILocation(line: 302, column: 22, scope: !1782)
!1806 = distinct !{!1806, !1799, !1802}
!1807 = !DILocation(line: 305, column: 6, scope: !1782)
!1808 = !DILocation(line: 305, column: 16, scope: !1782)
!1809 = !DILocation(line: 306, column: 1, scope: !1782)
!1810 = distinct !DISubprogram(name: "hash", linkageName: "_ZN11xercesc_2_79XMLString4hashEPKcjPNS_13MemoryManagerE", scope: !9, file: !3, line: 309, type: !69, scopeLine: 312, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !68, retainedNodes: !904)
!1811 = !DILocalVariable(name: "tohash", arg: 1, scope: !1810, file: !3, line: 309, type: !17)
!1812 = !DILocation(line: 309, column: 57, scope: !1810)
!1813 = !DILocalVariable(name: "hashModulus", arg: 2, scope: !1810, file: !3, line: 310, type: !42)
!1814 = !DILocation(line: 310, column: 57, scope: !1810)
!1815 = !DILocalVariable(arg: 3, scope: !1810, file: !3, line: 311, type: !71)
!1816 = !DILocation(line: 311, column: 55, scope: !1810)
!1817 = !DILocalVariable(name: "hashVal", scope: !1810, file: !3, line: 315, type: !43)
!1818 = !DILocation(line: 315, column: 18, scope: !1810)
!1819 = !DILocation(line: 316, column: 9, scope: !1820)
!1820 = distinct !DILexicalBlock(scope: !1810, file: !3, line: 316, column: 9)
!1821 = !DILocation(line: 316, column: 9, scope: !1810)
!1822 = !DILocalVariable(name: "curCh", scope: !1823, file: !3, line: 317, type: !18)
!1823 = distinct !DILexicalBlock(scope: !1820, file: !3, line: 316, column: 17)
!1824 = !DILocation(line: 317, column: 21, scope: !1823)
!1825 = !DILocation(line: 317, column: 29, scope: !1823)
!1826 = !DILocation(line: 318, column: 9, scope: !1823)
!1827 = !DILocation(line: 318, column: 17, scope: !1823)
!1828 = !DILocation(line: 318, column: 16, scope: !1823)
!1829 = !DILocalVariable(name: "top", scope: !1830, file: !3, line: 320, type: !43)
!1830 = distinct !DILexicalBlock(scope: !1823, file: !3, line: 319, column: 9)
!1831 = !DILocation(line: 320, column: 26, scope: !1830)
!1832 = !DILocation(line: 320, column: 32, scope: !1830)
!1833 = !DILocation(line: 320, column: 40, scope: !1830)
!1834 = !DILocation(line: 321, column: 25, scope: !1830)
!1835 = !DILocation(line: 321, column: 33, scope: !1830)
!1836 = !DILocation(line: 321, column: 41, scope: !1830)
!1837 = !DILocation(line: 321, column: 39, scope: !1830)
!1838 = !DILocation(line: 321, column: 63, scope: !1830)
!1839 = !DILocation(line: 321, column: 62, scope: !1830)
!1840 = !DILocation(line: 321, column: 61, scope: !1830)
!1841 = !DILocation(line: 321, column: 45, scope: !1830)
!1842 = !DILocation(line: 321, column: 21, scope: !1830)
!1843 = !DILocation(line: 322, column: 18, scope: !1830)
!1844 = distinct !{!1844, !1826, !1845}
!1845 = !DILocation(line: 323, column: 9, scope: !1823)
!1846 = !DILocation(line: 324, column: 5, scope: !1823)
!1847 = !DILocation(line: 327, column: 12, scope: !1810)
!1848 = !DILocation(line: 327, column: 22, scope: !1810)
!1849 = !DILocation(line: 327, column: 20, scope: !1810)
!1850 = !DILocation(line: 327, column: 5, scope: !1810)
!1851 = distinct !DISubprogram(name: "indexOf", linkageName: "_ZN11xercesc_2_79XMLString7indexOfEPKcc", scope: !9, file: !3, line: 331, type: !79, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !78, retainedNodes: !904)
!1852 = !DILocalVariable(name: "toSearch", arg: 1, scope: !1851, file: !3, line: 331, type: !17)
!1853 = !DILocation(line: 331, column: 42, scope: !1851)
!1854 = !DILocalVariable(name: "ch", arg: 2, scope: !1851, file: !3, line: 331, type: !19)
!1855 = !DILocation(line: 331, column: 63, scope: !1851)
!1856 = !DILocalVariable(name: "len", scope: !1851, file: !3, line: 333, type: !42)
!1857 = !DILocation(line: 333, column: 24, scope: !1851)
!1858 = !DILocation(line: 333, column: 37, scope: !1851)
!1859 = !DILocation(line: 333, column: 30, scope: !1851)
!1860 = !DILocalVariable(name: "i", scope: !1861, file: !3, line: 334, type: !43)
!1861 = distinct !DILexicalBlock(scope: !1851, file: !3, line: 334, column: 5)
!1862 = !DILocation(line: 334, column: 23, scope: !1861)
!1863 = !DILocation(line: 334, column: 10, scope: !1861)
!1864 = !DILocation(line: 334, column: 30, scope: !1865)
!1865 = distinct !DILexicalBlock(scope: !1861, file: !3, line: 334, column: 5)
!1866 = !DILocation(line: 334, column: 34, scope: !1865)
!1867 = !DILocation(line: 334, column: 32, scope: !1865)
!1868 = !DILocation(line: 334, column: 5, scope: !1861)
!1869 = !DILocation(line: 336, column: 13, scope: !1870)
!1870 = distinct !DILexicalBlock(scope: !1871, file: !3, line: 336, column: 13)
!1871 = distinct !DILexicalBlock(scope: !1865, file: !3, line: 335, column: 5)
!1872 = !DILocation(line: 336, column: 22, scope: !1870)
!1873 = !DILocation(line: 336, column: 28, scope: !1870)
!1874 = !DILocation(line: 336, column: 25, scope: !1870)
!1875 = !DILocation(line: 336, column: 13, scope: !1871)
!1876 = !DILocation(line: 337, column: 20, scope: !1870)
!1877 = !DILocation(line: 337, column: 13, scope: !1870)
!1878 = !DILocation(line: 338, column: 5, scope: !1871)
!1879 = !DILocation(line: 334, column: 40, scope: !1865)
!1880 = !DILocation(line: 334, column: 5, scope: !1865)
!1881 = distinct !{!1881, !1868, !1882}
!1882 = !DILocation(line: 338, column: 5, scope: !1861)
!1883 = !DILocation(line: 339, column: 5, scope: !1851)
!1884 = !DILocation(line: 340, column: 1, scope: !1851)
!1885 = distinct !DISubprogram(name: "indexOf", linkageName: "_ZN11xercesc_2_79XMLString7indexOfEPKccjPNS_13MemoryManagerE", scope: !9, file: !3, line: 343, type: !85, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !84, retainedNodes: !904)
!1886 = !DILocalVariable(name: "toSearch", arg: 1, scope: !1885, file: !3, line: 343, type: !17)
!1887 = !DILocation(line: 343, column: 49, scope: !1885)
!1888 = !DILocalVariable(name: "ch", arg: 2, scope: !1885, file: !3, line: 344, type: !19)
!1889 = !DILocation(line: 344, column: 49, scope: !1885)
!1890 = !DILocalVariable(name: "fromIndex", arg: 3, scope: !1885, file: !3, line: 345, type: !42)
!1891 = !DILocation(line: 345, column: 49, scope: !1885)
!1892 = !DILocalVariable(name: "manager", arg: 4, scope: !1885, file: !3, line: 346, type: !71)
!1893 = !DILocation(line: 346, column: 49, scope: !1885)
!1894 = !DILocalVariable(name: "len", scope: !1885, file: !3, line: 348, type: !42)
!1895 = !DILocation(line: 348, column: 24, scope: !1885)
!1896 = !DILocation(line: 348, column: 37, scope: !1885)
!1897 = !DILocation(line: 348, column: 30, scope: !1885)
!1898 = !DILocation(line: 351, column: 11, scope: !1899)
!1899 = distinct !DILexicalBlock(scope: !1885, file: !3, line: 351, column: 6)
!1900 = !DILocation(line: 351, column: 29, scope: !1899)
!1901 = !DILocation(line: 351, column: 33, scope: !1899)
!1902 = !DILocation(line: 351, column: 21, scope: !1899)
!1903 = !DILocation(line: 351, column: 6, scope: !1885)
!1904 = !DILocation(line: 352, column: 9, scope: !1899)
!1905 = !DILocation(line: 360, column: 1, scope: !1899)
!1906 = !DILocalVariable(name: "i", scope: !1907, file: !3, line: 354, type: !43)
!1907 = distinct !DILexicalBlock(scope: !1885, file: !3, line: 354, column: 5)
!1908 = !DILocation(line: 354, column: 23, scope: !1907)
!1909 = !DILocation(line: 354, column: 27, scope: !1907)
!1910 = !DILocation(line: 354, column: 10, scope: !1907)
!1911 = !DILocation(line: 354, column: 38, scope: !1912)
!1912 = distinct !DILexicalBlock(scope: !1907, file: !3, line: 354, column: 5)
!1913 = !DILocation(line: 354, column: 42, scope: !1912)
!1914 = !DILocation(line: 354, column: 40, scope: !1912)
!1915 = !DILocation(line: 354, column: 5, scope: !1907)
!1916 = !DILocation(line: 356, column: 13, scope: !1917)
!1917 = distinct !DILexicalBlock(scope: !1918, file: !3, line: 356, column: 13)
!1918 = distinct !DILexicalBlock(scope: !1912, file: !3, line: 355, column: 5)
!1919 = !DILocation(line: 356, column: 22, scope: !1917)
!1920 = !DILocation(line: 356, column: 28, scope: !1917)
!1921 = !DILocation(line: 356, column: 25, scope: !1917)
!1922 = !DILocation(line: 356, column: 13, scope: !1918)
!1923 = !DILocation(line: 357, column: 20, scope: !1917)
!1924 = !DILocation(line: 357, column: 13, scope: !1917)
!1925 = !DILocation(line: 358, column: 5, scope: !1918)
!1926 = !DILocation(line: 354, column: 48, scope: !1912)
!1927 = !DILocation(line: 354, column: 5, scope: !1912)
!1928 = distinct !{!1928, !1915, !1929}
!1929 = !DILocation(line: 358, column: 5, scope: !1907)
!1930 = !DILocation(line: 359, column: 5, scope: !1885)
!1931 = !DILocation(line: 360, column: 1, scope: !1885)
!1932 = distinct !DISubprogram(name: "ArrayIndexOutOfBoundsException", linkageName: "_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE", scope: !1934, file: !1933, line: 28, type: !1938, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !1937, retainedNodes: !904)
!1933 = !DIFile(filename: "./xercesc/util/ArrayIndexOutOfBoundsException.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!1934 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ArrayIndexOutOfBoundsException", scope: !2, file: !1933, line: 28, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1935, vtableHolder: !1515, identifier: "_ZTSN11xercesc_2_730ArrayIndexOutOfBoundsExceptionE")
!1935 = !{!1936, !1937, !1941, !1946, !1949, !1952, !1955, !1959, !1963, !1966}
!1936 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1934, baseType: !1515, flags: DIFlagPublic, extraData: i32 0)
!1937 = !DISubprogram(name: "ArrayIndexOutOfBoundsException", scope: !1934, file: !1933, line: 28, type: !1938, scopeLine: 28, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1938 = !DISubroutineType(types: !1939)
!1939 = !{null, !1940, !17, !42, !1521, !4}
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1941 = !DISubprogram(name: "ArrayIndexOutOfBoundsException", scope: !1934, file: !1933, line: 28, type: !1942, scopeLine: 28, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1942 = !DISubroutineType(types: !1943)
!1943 = !{null, !1940, !1944}
!1944 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1945, size: 64)
!1945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1934)
!1946 = !DISubprogram(name: "ArrayIndexOutOfBoundsException", scope: !1934, file: !1933, line: 28, type: !1947, scopeLine: 28, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{null, !1940, !17, !42, !1521, !28, !28, !28, !28, !4}
!1949 = !DISubprogram(name: "ArrayIndexOutOfBoundsException", scope: !1934, file: !1933, line: 28, type: !1950, scopeLine: 28, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1950 = !DISubroutineType(types: !1951)
!1951 = !{null, !1940, !17, !42, !1521, !17, !17, !17, !17, !4}
!1952 = !DISubprogram(name: "~ArrayIndexOutOfBoundsException", scope: !1934, file: !1933, line: 28, type: !1953, scopeLine: 28, containingType: !1934, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1953 = !DISubroutineType(types: !1954)
!1954 = !{null, !1940}
!1955 = !DISubprogram(name: "operator=", linkageName: "_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionaSERKS0_", scope: !1934, file: !1933, line: 28, type: !1956, scopeLine: 28, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1956 = !DISubroutineType(types: !1957)
!1957 = !{!1958, !1940, !1944}
!1958 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1934, size: 64)
!1959 = !DISubprogram(name: "duplicate", linkageName: "_ZNK11xercesc_2_730ArrayIndexOutOfBoundsException9duplicateEv", scope: !1934, file: !1933, line: 28, type: !1960, scopeLine: 28, containingType: !1934, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1960 = !DISubroutineType(types: !1961)
!1961 = !{!1543, !1962}
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1963 = !DISubprogram(name: "getType", linkageName: "_ZNK11xercesc_2_730ArrayIndexOutOfBoundsException7getTypeEv", scope: !1934, file: !1933, line: 28, type: !1964, scopeLine: 28, containingType: !1934, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1964 = !DISubroutineType(types: !1965)
!1965 = !{!29, !1962}
!1966 = !DISubprogram(name: "ArrayIndexOutOfBoundsException", scope: !1934, file: !1933, line: 28, type: !1953, scopeLine: 28, flags: DIFlagPrototyped, spFlags: 0)
!1967 = !DILocalVariable(name: "this", arg: 1, scope: !1932, type: !1968, flags: DIFlagArtificial | DIFlagObjectPointer)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1969 = !DILocation(line: 0, scope: !1932)
!1970 = !DILocalVariable(name: "srcFile", arg: 2, scope: !1932, file: !1933, line: 28, type: !17)
!1971 = !DILocation(line: 28, column: 1, scope: !1932)
!1972 = !DILocalVariable(name: "srcLine", arg: 3, scope: !1932, file: !1933, line: 28, type: !42)
!1973 = !DILocalVariable(name: "toThrow", arg: 4, scope: !1932, file: !1933, line: 28, type: !1521)
!1974 = !DILocalVariable(name: "memoryManager", arg: 5, scope: !1932, file: !1933, line: 28, type: !4)
!1975 = !DILocation(line: 28, column: 1, scope: !1976)
!1976 = distinct !DILexicalBlock(scope: !1932, file: !1933, line: 28, column: 1)
!1977 = distinct !DISubprogram(name: "~ArrayIndexOutOfBoundsException", linkageName: "_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionD2Ev", scope: !1934, file: !1933, line: 28, type: !1953, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !1952, retainedNodes: !904)
!1978 = !DILocalVariable(name: "this", arg: 1, scope: !1977, type: !1968, flags: DIFlagArtificial | DIFlagObjectPointer)
!1979 = !DILocation(line: 0, scope: !1977)
!1980 = !DILocation(line: 28, column: 1, scope: !1981)
!1981 = distinct !DILexicalBlock(scope: !1977, file: !1933, line: 28, column: 1)
!1982 = !DILocation(line: 28, column: 1, scope: !1977)
!1983 = distinct !DISubprogram(name: "lastIndexOf", linkageName: "_ZN11xercesc_2_79XMLString11lastIndexOfEPKcc", scope: !9, file: !3, line: 362, type: !79, scopeLine: 363, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !90, retainedNodes: !904)
!1984 = !DILocalVariable(name: "toSearch", arg: 1, scope: !1983, file: !3, line: 362, type: !17)
!1985 = !DILocation(line: 362, column: 46, scope: !1983)
!1986 = !DILocalVariable(name: "ch", arg: 2, scope: !1983, file: !3, line: 362, type: !19)
!1987 = !DILocation(line: 362, column: 67, scope: !1983)
!1988 = !DILocalVariable(name: "len", scope: !1983, file: !3, line: 364, type: !61)
!1989 = !DILocation(line: 364, column: 15, scope: !1983)
!1990 = !DILocation(line: 364, column: 28, scope: !1983)
!1991 = !DILocation(line: 364, column: 21, scope: !1983)
!1992 = !DILocalVariable(name: "i", scope: !1993, file: !3, line: 365, type: !34)
!1993 = distinct !DILexicalBlock(scope: !1983, file: !3, line: 365, column: 5)
!1994 = !DILocation(line: 365, column: 14, scope: !1993)
!1995 = !DILocation(line: 365, column: 18, scope: !1993)
!1996 = !DILocation(line: 365, column: 21, scope: !1993)
!1997 = !DILocation(line: 365, column: 10, scope: !1993)
!1998 = !DILocation(line: 365, column: 25, scope: !1999)
!1999 = distinct !DILexicalBlock(scope: !1993, file: !3, line: 365, column: 5)
!2000 = !DILocation(line: 365, column: 27, scope: !1999)
!2001 = !DILocation(line: 365, column: 5, scope: !1993)
!2002 = !DILocation(line: 367, column: 13, scope: !2003)
!2003 = distinct !DILexicalBlock(scope: !2004, file: !3, line: 367, column: 13)
!2004 = distinct !DILexicalBlock(scope: !1999, file: !3, line: 366, column: 5)
!2005 = !DILocation(line: 367, column: 22, scope: !2003)
!2006 = !DILocation(line: 367, column: 28, scope: !2003)
!2007 = !DILocation(line: 367, column: 25, scope: !2003)
!2008 = !DILocation(line: 367, column: 13, scope: !2004)
!2009 = !DILocation(line: 368, column: 20, scope: !2003)
!2010 = !DILocation(line: 368, column: 13, scope: !2003)
!2011 = !DILocation(line: 369, column: 5, scope: !2004)
!2012 = !DILocation(line: 365, column: 34, scope: !1999)
!2013 = !DILocation(line: 365, column: 5, scope: !1999)
!2014 = distinct !{!2014, !2001, !2015}
!2015 = !DILocation(line: 369, column: 5, scope: !1993)
!2016 = !DILocation(line: 370, column: 5, scope: !1983)
!2017 = !DILocation(line: 371, column: 1, scope: !1983)
!2018 = distinct !DISubprogram(name: "lastIndexOf", linkageName: "_ZN11xercesc_2_79XMLString11lastIndexOfEPKccjPNS_13MemoryManagerE", scope: !9, file: !3, line: 373, type: !85, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !95, retainedNodes: !904)
!2019 = !DILocalVariable(name: "toSearch", arg: 1, scope: !2018, file: !3, line: 373, type: !17)
!2020 = !DILocation(line: 373, column: 53, scope: !2018)
!2021 = !DILocalVariable(name: "ch", arg: 2, scope: !2018, file: !3, line: 374, type: !19)
!2022 = !DILocation(line: 374, column: 53, scope: !2018)
!2023 = !DILocalVariable(name: "fromIndex", arg: 3, scope: !2018, file: !3, line: 375, type: !42)
!2024 = !DILocation(line: 375, column: 53, scope: !2018)
!2025 = !DILocalVariable(name: "manager", arg: 4, scope: !2018, file: !3, line: 376, type: !71)
!2026 = !DILocation(line: 376, column: 53, scope: !2018)
!2027 = !DILocalVariable(name: "len", scope: !2018, file: !3, line: 378, type: !61)
!2028 = !DILocation(line: 378, column: 15, scope: !2018)
!2029 = !DILocation(line: 378, column: 28, scope: !2018)
!2030 = !DILocation(line: 378, column: 21, scope: !2018)
!2031 = !DILocation(line: 381, column: 11, scope: !2032)
!2032 = distinct !DILexicalBlock(scope: !2018, file: !3, line: 381, column: 6)
!2033 = !DILocation(line: 381, column: 23, scope: !2032)
!2034 = !DILocation(line: 381, column: 26, scope: !2032)
!2035 = !DILocation(line: 381, column: 21, scope: !2032)
!2036 = !DILocation(line: 381, column: 6, scope: !2018)
!2037 = !DILocation(line: 382, column: 9, scope: !2032)
!2038 = !DILocation(line: 390, column: 1, scope: !2032)
!2039 = !DILocalVariable(name: "i", scope: !2040, file: !3, line: 384, type: !34)
!2040 = distinct !DILexicalBlock(scope: !2018, file: !3, line: 384, column: 5)
!2041 = !DILocation(line: 384, column: 14, scope: !2040)
!2042 = !DILocation(line: 384, column: 23, scope: !2040)
!2043 = !DILocation(line: 384, column: 10, scope: !2040)
!2044 = !DILocation(line: 384, column: 34, scope: !2045)
!2045 = distinct !DILexicalBlock(scope: !2040, file: !3, line: 384, column: 5)
!2046 = !DILocation(line: 384, column: 36, scope: !2045)
!2047 = !DILocation(line: 384, column: 5, scope: !2040)
!2048 = !DILocation(line: 386, column: 13, scope: !2049)
!2049 = distinct !DILexicalBlock(scope: !2050, file: !3, line: 386, column: 13)
!2050 = distinct !DILexicalBlock(scope: !2045, file: !3, line: 385, column: 5)
!2051 = !DILocation(line: 386, column: 22, scope: !2049)
!2052 = !DILocation(line: 386, column: 28, scope: !2049)
!2053 = !DILocation(line: 386, column: 25, scope: !2049)
!2054 = !DILocation(line: 386, column: 13, scope: !2050)
!2055 = !DILocation(line: 387, column: 20, scope: !2049)
!2056 = !DILocation(line: 387, column: 13, scope: !2049)
!2057 = !DILocation(line: 388, column: 5, scope: !2050)
!2058 = !DILocation(line: 384, column: 43, scope: !2045)
!2059 = !DILocation(line: 384, column: 5, scope: !2045)
!2060 = distinct !{!2060, !2047, !2061}
!2061 = !DILocation(line: 388, column: 5, scope: !2040)
!2062 = !DILocation(line: 389, column: 5, scope: !2018)
!2063 = !DILocation(line: 390, column: 1, scope: !2018)
!2064 = distinct !DISubprogram(name: "replaceTokens", linkageName: "_ZN11xercesc_2_79XMLString13replaceTokensEPtjPKtS3_S3_S3_PNS_13MemoryManagerE", scope: !9, file: !3, line: 393, type: !326, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !325, retainedNodes: !904)
!2065 = !DILocalVariable(name: "errText", arg: 1, scope: !2064, file: !3, line: 393, type: !23)
!2066 = !DILocation(line: 393, column: 65, scope: !2064)
!2067 = !DILocalVariable(name: "maxChars", arg: 2, scope: !2064, file: !3, line: 394, type: !42)
!2068 = !DILocation(line: 394, column: 65, scope: !2064)
!2069 = !DILocalVariable(name: "text1", arg: 3, scope: !2064, file: !3, line: 395, type: !28)
!2070 = !DILocation(line: 395, column: 65, scope: !2064)
!2071 = !DILocalVariable(name: "text2", arg: 4, scope: !2064, file: !3, line: 396, type: !28)
!2072 = !DILocation(line: 396, column: 65, scope: !2064)
!2073 = !DILocalVariable(name: "text3", arg: 5, scope: !2064, file: !3, line: 397, type: !28)
!2074 = !DILocation(line: 397, column: 65, scope: !2064)
!2075 = !DILocalVariable(name: "text4", arg: 6, scope: !2064, file: !3, line: 398, type: !28)
!2076 = !DILocation(line: 398, column: 65, scope: !2064)
!2077 = !DILocalVariable(name: "manager", arg: 7, scope: !2064, file: !3, line: 399, type: !71)
!2078 = !DILocation(line: 399, column: 65, scope: !2064)
!2079 = !DILocalVariable(name: "orgText", scope: !2064, file: !3, line: 407, type: !24)
!2080 = !DILocation(line: 407, column: 12, scope: !2064)
!2081 = !DILocation(line: 407, column: 32, scope: !2064)
!2082 = !DILocation(line: 407, column: 41, scope: !2064)
!2083 = !DILocation(line: 407, column: 22, scope: !2064)
!2084 = !DILocalVariable(name: "janText", scope: !2064, file: !3, line: 408, type: !2085)
!2085 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ArrayJanitor<unsigned short>", scope: !2, file: !2086, line: 72, size: 128, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !2087, templateParams: !2129, identifier: "_ZTSN11xercesc_2_712ArrayJanitorItEE")
!2086 = !DIFile(filename: "./xercesc/util/Janitor.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!2087 = !{!2088, !2089, !2090, !2091, !2095, !2098, !2101, !2102, !2108, !2111, !2114, !2117, !2120, !2121, !2125}
!2088 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !2085, baseType: !226, flags: DIFlagPublic, extraData: i32 0)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "fData", scope: !2085, file: !2086, line: 110, baseType: !264, size: 64)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "fMemoryManager", scope: !2085, file: !2086, line: 111, baseType: !4, size: 64, offset: 64)
!2091 = !DISubprogram(name: "ArrayJanitor", scope: !2085, file: !2086, line: 78, type: !2092, scopeLine: 78, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2092 = !DISubroutineType(types: !2093)
!2093 = !{null, !2094, !277}
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2095 = !DISubprogram(name: "ArrayJanitor", scope: !2085, file: !2086, line: 79, type: !2096, scopeLine: 79, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2096 = !DISubroutineType(types: !2097)
!2097 = !{null, !2094, !277, !71}
!2098 = !DISubprogram(name: "~ArrayJanitor", scope: !2085, file: !2086, line: 80, type: !2099, scopeLine: 80, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2099 = !DISubroutineType(types: !2100)
!2100 = !{null, !2094}
!2101 = !DISubprogram(name: "orphan", linkageName: "_ZN11xercesc_2_712ArrayJanitorItE6orphanEv", scope: !2085, file: !2086, line: 86, type: !2099, scopeLine: 86, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2102 = !DISubprogram(name: "operator[]", linkageName: "_ZNK11xercesc_2_712ArrayJanitorItEixEi", scope: !2085, file: !2086, line: 89, type: !2103, scopeLine: 89, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2103 = !DISubroutineType(types: !2104)
!2104 = !{!2105, !2106, !34}
!2105 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !27, size: 64)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2085)
!2108 = !DISubprogram(name: "get", linkageName: "_ZNK11xercesc_2_712ArrayJanitorItE3getEv", scope: !2085, file: !2086, line: 90, type: !2109, scopeLine: 90, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2109 = !DISubroutineType(types: !2110)
!2110 = !{!264, !2106}
!2111 = !DISubprogram(name: "release", linkageName: "_ZN11xercesc_2_712ArrayJanitorItE7releaseEv", scope: !2085, file: !2086, line: 91, type: !2112, scopeLine: 91, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2112 = !DISubroutineType(types: !2113)
!2113 = !{!264, !2094}
!2114 = !DISubprogram(name: "reset", linkageName: "_ZN11xercesc_2_712ArrayJanitorItE5resetEPt", scope: !2085, file: !2086, line: 92, type: !2115, scopeLine: 92, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2115 = !DISubroutineType(types: !2116)
!2116 = !{null, !2094, !264}
!2117 = !DISubprogram(name: "reset", linkageName: "_ZN11xercesc_2_712ArrayJanitorItE5resetEPtPNS_13MemoryManagerE", scope: !2085, file: !2086, line: 93, type: !2118, scopeLine: 93, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2118 = !DISubroutineType(types: !2119)
!2119 = !{null, !2094, !264, !71}
!2120 = !DISubprogram(name: "ArrayJanitor", scope: !2085, file: !2086, line: 99, type: !2099, scopeLine: 99, flags: DIFlagPrototyped, spFlags: 0)
!2121 = !DISubprogram(name: "ArrayJanitor", scope: !2085, file: !2086, line: 100, type: !2122, scopeLine: 100, flags: DIFlagPrototyped, spFlags: 0)
!2122 = !DISubroutineType(types: !2123)
!2123 = !{null, !2094, !2124}
!2124 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2107, size: 64)
!2125 = !DISubprogram(name: "operator=", linkageName: "_ZN11xercesc_2_712ArrayJanitorItEaSERKS1_", scope: !2085, file: !2086, line: 101, type: !2126, scopeLine: 101, flags: DIFlagPrototyped, spFlags: 0)
!2126 = !DISubroutineType(types: !2127)
!2127 = !{!2128, !2094, !2124}
!2128 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2085, size: 64)
!2129 = !{!2130}
!2130 = !DITemplateTypeParameter(name: "T", type: !27)
!2131 = !DILocation(line: 408, column: 25, scope: !2064)
!2132 = !DILocation(line: 408, column: 33, scope: !2064)
!2133 = !DILocation(line: 408, column: 42, scope: !2064)
!2134 = !DILocalVariable(name: "pszSrc", scope: !2064, file: !3, line: 410, type: !24)
!2135 = !DILocation(line: 410, column: 12, scope: !2064)
!2136 = !DILocation(line: 410, column: 21, scope: !2064)
!2137 = !DILocalVariable(name: "curOutInd", scope: !2064, file: !3, line: 411, type: !43)
!2138 = !DILocation(line: 411, column: 18, scope: !2064)
!2139 = !DILocation(line: 413, column: 5, scope: !2064)
!2140 = !DILocation(line: 413, column: 13, scope: !2064)
!2141 = !DILocation(line: 413, column: 12, scope: !2064)
!2142 = !DILocation(line: 413, column: 20, scope: !2064)
!2143 = !DILocation(line: 413, column: 24, scope: !2064)
!2144 = !DILocation(line: 413, column: 36, scope: !2064)
!2145 = !DILocation(line: 413, column: 34, scope: !2064)
!2146 = !DILocation(line: 0, scope: !2064)
!2147 = !DILocation(line: 419, column: 9, scope: !2148)
!2148 = distinct !DILexicalBlock(scope: !2064, file: !3, line: 414, column: 5)
!2149 = !DILocation(line: 419, column: 18, scope: !2148)
!2150 = !DILocation(line: 419, column: 17, scope: !2148)
!2151 = !DILocation(line: 419, column: 25, scope: !2148)
!2152 = !DILocation(line: 419, column: 41, scope: !2148)
!2153 = !DILocation(line: 419, column: 45, scope: !2148)
!2154 = !DILocation(line: 419, column: 57, scope: !2148)
!2155 = !DILocation(line: 419, column: 55, scope: !2148)
!2156 = !DILocation(line: 0, scope: !2148)
!2157 = !DILocation(line: 421, column: 19, scope: !2158)
!2158 = distinct !DILexicalBlock(scope: !2159, file: !3, line: 421, column: 17)
!2159 = distinct !DILexicalBlock(scope: !2148, file: !3, line: 420, column: 9)
!2160 = !DILocation(line: 421, column: 18, scope: !2158)
!2161 = !DILocation(line: 421, column: 17, scope: !2159)
!2162 = !DILocation(line: 422, column: 17, scope: !2158)
!2163 = !DILocation(line: 423, column: 43, scope: !2159)
!2164 = !DILocation(line: 423, column: 36, scope: !2159)
!2165 = !DILocation(line: 423, column: 13, scope: !2159)
!2166 = !DILocation(line: 423, column: 30, scope: !2159)
!2167 = !DILocation(line: 423, column: 34, scope: !2159)
!2168 = distinct !{!2168, !2147, !2169}
!2169 = !DILocation(line: 424, column: 9, scope: !2148)
!2170 = !DILocation(line: 427, column: 14, scope: !2171)
!2171 = distinct !DILexicalBlock(scope: !2148, file: !3, line: 427, column: 13)
!2172 = !DILocation(line: 427, column: 13, scope: !2171)
!2173 = !DILocation(line: 427, column: 21, scope: !2171)
!2174 = !DILocation(line: 427, column: 13, scope: !2148)
!2175 = !DILocation(line: 428, column: 13, scope: !2171)
!2176 = !DILocation(line: 434, column: 16, scope: !2177)
!2177 = distinct !DILexicalBlock(scope: !2148, file: !3, line: 434, column: 13)
!2178 = !DILocation(line: 434, column: 22, scope: !2177)
!2179 = !DILocation(line: 434, column: 14, scope: !2177)
!2180 = !DILocation(line: 434, column: 26, scope: !2177)
!2181 = !DILocation(line: 435, column: 9, scope: !2177)
!2182 = !DILocation(line: 435, column: 16, scope: !2177)
!2183 = !DILocation(line: 435, column: 22, scope: !2177)
!2184 = !DILocation(line: 435, column: 14, scope: !2177)
!2185 = !DILocation(line: 435, column: 26, scope: !2177)
!2186 = !DILocation(line: 436, column: 9, scope: !2177)
!2187 = !DILocation(line: 436, column: 16, scope: !2177)
!2188 = !DILocation(line: 436, column: 22, scope: !2177)
!2189 = !DILocation(line: 436, column: 14, scope: !2177)
!2190 = !DILocation(line: 436, column: 26, scope: !2177)
!2191 = !DILocation(line: 434, column: 13, scope: !2148)
!2192 = !DILocalVariable(name: "tokCh", scope: !2193, file: !3, line: 443, type: !25)
!2193 = distinct !DILexicalBlock(scope: !2177, file: !3, line: 437, column: 9)
!2194 = !DILocation(line: 443, column: 19, scope: !2193)
!2195 = !DILocation(line: 443, column: 29, scope: !2193)
!2196 = !DILocation(line: 443, column: 35, scope: !2193)
!2197 = !DILocation(line: 443, column: 27, scope: !2193)
!2198 = !DILocation(line: 444, column: 20, scope: !2193)
!2199 = !DILocalVariable(name: "repText", scope: !2193, file: !3, line: 447, type: !29)
!2200 = !DILocation(line: 447, column: 26, scope: !2193)
!2201 = !DILocation(line: 448, column: 17, scope: !2202)
!2202 = distinct !DILexicalBlock(scope: !2193, file: !3, line: 448, column: 17)
!2203 = !DILocation(line: 448, column: 23, scope: !2202)
!2204 = !DILocation(line: 448, column: 17, scope: !2193)
!2205 = !DILocation(line: 449, column: 27, scope: !2202)
!2206 = !DILocation(line: 449, column: 25, scope: !2202)
!2207 = !DILocation(line: 449, column: 17, scope: !2202)
!2208 = !DILocation(line: 450, column: 22, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !2202, file: !3, line: 450, column: 22)
!2210 = !DILocation(line: 450, column: 28, scope: !2209)
!2211 = !DILocation(line: 450, column: 22, scope: !2202)
!2212 = !DILocation(line: 451, column: 27, scope: !2209)
!2213 = !DILocation(line: 451, column: 25, scope: !2209)
!2214 = !DILocation(line: 451, column: 17, scope: !2209)
!2215 = !DILocation(line: 452, column: 22, scope: !2216)
!2216 = distinct !DILexicalBlock(scope: !2209, file: !3, line: 452, column: 22)
!2217 = !DILocation(line: 452, column: 28, scope: !2216)
!2218 = !DILocation(line: 452, column: 22, scope: !2209)
!2219 = !DILocation(line: 453, column: 27, scope: !2216)
!2220 = !DILocation(line: 453, column: 25, scope: !2216)
!2221 = !DILocation(line: 453, column: 17, scope: !2216)
!2222 = !DILocation(line: 454, column: 22, scope: !2223)
!2223 = distinct !DILexicalBlock(scope: !2216, file: !3, line: 454, column: 22)
!2224 = !DILocation(line: 454, column: 28, scope: !2223)
!2225 = !DILocation(line: 454, column: 22, scope: !2216)
!2226 = !DILocation(line: 455, column: 27, scope: !2223)
!2227 = !DILocation(line: 455, column: 25, scope: !2223)
!2228 = !DILocation(line: 455, column: 17, scope: !2223)
!2229 = !DILocation(line: 458, column: 18, scope: !2230)
!2230 = distinct !DILexicalBlock(scope: !2193, file: !3, line: 458, column: 17)
!2231 = !DILocation(line: 458, column: 17, scope: !2193)
!2232 = !DILocation(line: 459, column: 25, scope: !2230)
!2233 = !DILocation(line: 459, column: 17, scope: !2230)
!2234 = !DILocation(line: 461, column: 13, scope: !2193)
!2235 = !DILocation(line: 461, column: 21, scope: !2193)
!2236 = !DILocation(line: 461, column: 20, scope: !2193)
!2237 = !DILocation(line: 461, column: 29, scope: !2193)
!2238 = !DILocation(line: 461, column: 33, scope: !2193)
!2239 = !DILocation(line: 461, column: 45, scope: !2193)
!2240 = !DILocation(line: 461, column: 43, scope: !2193)
!2241 = !DILocation(line: 0, scope: !2193)
!2242 = !DILocation(line: 462, column: 48, scope: !2193)
!2243 = !DILocation(line: 462, column: 40, scope: !2193)
!2244 = !DILocation(line: 462, column: 17, scope: !2193)
!2245 = !DILocation(line: 462, column: 34, scope: !2193)
!2246 = !DILocation(line: 462, column: 38, scope: !2193)
!2247 = distinct !{!2247, !2234, !2242}
!2248 = !DILocation(line: 463, column: 9, scope: !2193)
!2249 = !DILocation(line: 467, column: 43, scope: !2250)
!2250 = distinct !DILexicalBlock(scope: !2177, file: !3, line: 465, column: 9)
!2251 = !DILocation(line: 467, column: 36, scope: !2250)
!2252 = !DILocation(line: 467, column: 13, scope: !2250)
!2253 = !DILocation(line: 467, column: 30, scope: !2250)
!2254 = !DILocation(line: 467, column: 34, scope: !2250)
!2255 = distinct !{!2255, !2139, !2256}
!2256 = !DILocation(line: 469, column: 5, scope: !2064)
!2257 = !DILocation(line: 472, column: 5, scope: !2064)
!2258 = !DILocation(line: 472, column: 13, scope: !2064)
!2259 = !DILocation(line: 472, column: 24, scope: !2064)
!2260 = !DILocation(line: 475, column: 12, scope: !2064)
!2261 = !DILocation(line: 476, column: 1, scope: !2064)
!2262 = distinct !DISubprogram(name: "replicate", linkageName: "_ZN11xercesc_2_79XMLString9replicateEPKtPNS_13MemoryManagerE", scope: !9, file: !8, line: 1704, type: !119, scopeLine: 1706, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !118, retainedNodes: !904)
!2263 = !DILocalVariable(name: "toRep", arg: 1, scope: !2262, file: !8, line: 1704, type: !28)
!2264 = !DILocation(line: 1704, column: 55, scope: !2262)
!2265 = !DILocalVariable(name: "manager", arg: 2, scope: !2262, file: !8, line: 1705, type: !71)
!2266 = !DILocation(line: 1705, column: 57, scope: !2262)
!2267 = !DILocalVariable(name: "ret", scope: !2262, file: !8, line: 1708, type: !24)
!2268 = !DILocation(line: 1708, column: 12, scope: !2262)
!2269 = !DILocation(line: 1709, column: 9, scope: !2270)
!2270 = distinct !DILexicalBlock(scope: !2262, file: !8, line: 1709, column: 9)
!2271 = !DILocation(line: 1709, column: 9, scope: !2262)
!2272 = !DILocalVariable(name: "len", scope: !2273, file: !8, line: 1711, type: !42)
!2273 = distinct !DILexicalBlock(scope: !2270, file: !8, line: 1710, column: 5)
!2274 = !DILocation(line: 1711, column: 28, scope: !2273)
!2275 = !DILocation(line: 1711, column: 44, scope: !2273)
!2276 = !DILocation(line: 1711, column: 34, scope: !2273)
!2277 = !DILocation(line: 1712, column: 24, scope: !2273)
!2278 = !DILocation(line: 1712, column: 43, scope: !2273)
!2279 = !DILocation(line: 1712, column: 46, scope: !2273)
!2280 = !DILocation(line: 1712, column: 42, scope: !2273)
!2281 = !DILocation(line: 1712, column: 50, scope: !2273)
!2282 = !DILocation(line: 1712, column: 33, scope: !2273)
!2283 = !DILocation(line: 1712, column: 15, scope: !2273)
!2284 = !DILocation(line: 1712, column: 13, scope: !2273)
!2285 = !DILocation(line: 1713, column: 16, scope: !2273)
!2286 = !DILocation(line: 1713, column: 9, scope: !2273)
!2287 = !DILocation(line: 1713, column: 21, scope: !2273)
!2288 = !DILocation(line: 1713, column: 29, scope: !2273)
!2289 = !DILocation(line: 1713, column: 33, scope: !2273)
!2290 = !DILocation(line: 1713, column: 28, scope: !2273)
!2291 = !DILocation(line: 1713, column: 38, scope: !2273)
!2292 = !DILocation(line: 1714, column: 5, scope: !2273)
!2293 = !DILocation(line: 1715, column: 12, scope: !2262)
!2294 = !DILocation(line: 1715, column: 5, scope: !2262)
!2295 = distinct !DISubprogram(name: "ArrayJanitor", linkageName: "_ZN11xercesc_2_712ArrayJanitorItEC2EPtPNS_13MemoryManagerE", scope: !2085, file: !2296, line: 110, type: !2096, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !2095, retainedNodes: !904)
!2296 = !DIFile(filename: "./xercesc/util/Janitor.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!2297 = !DILocalVariable(name: "this", arg: 1, scope: !2295, type: !2298, flags: DIFlagArtificial | DIFlagObjectPointer)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 64)
!2299 = !DILocation(line: 0, scope: !2295)
!2300 = !DILocalVariable(name: "toDelete", arg: 2, scope: !2295, file: !2086, line: 79, type: !277)
!2301 = !DILocation(line: 79, column: 27, scope: !2295)
!2302 = !DILocalVariable(name: "manager", arg: 3, scope: !2295, file: !2086, line: 79, type: !71)
!2303 = !DILocation(line: 79, column: 58, scope: !2295)
!2304 = !DILocation(line: 114, column: 1, scope: !2295)
!2305 = !DILocation(line: 79, column: 5, scope: !2306)
!2306 = !DILexicalBlockFile(scope: !2295, file: !2086, discriminator: 0)
!2307 = !DILocation(line: 112, column: 5, scope: !2308)
!2308 = !DILexicalBlockFile(scope: !2295, file: !2296, discriminator: 0)
!2309 = !DILocation(line: 112, column: 11, scope: !2308)
!2310 = !DILocation(line: 113, column: 7, scope: !2308)
!2311 = !DILocation(line: 113, column: 22, scope: !2308)
!2312 = !DILocation(line: 115, column: 1, scope: !2308)
!2313 = distinct !DISubprogram(name: "~ArrayJanitor", linkageName: "_ZN11xercesc_2_712ArrayJanitorItED2Ev", scope: !2085, file: !2296, line: 118, type: !2099, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !2098, retainedNodes: !904)
!2314 = !DILocalVariable(name: "this", arg: 1, scope: !2313, type: !2298, flags: DIFlagArtificial | DIFlagObjectPointer)
!2315 = !DILocation(line: 0, scope: !2313)
!2316 = !DILocation(line: 120, column: 2, scope: !2317)
!2317 = distinct !DILexicalBlock(scope: !2313, file: !2296, line: 119, column: 1)
!2318 = !DILocation(line: 121, column: 1, scope: !2313)
!2319 = distinct !DISubprogram(name: "replicate", linkageName: "_ZN11xercesc_2_79XMLString9replicateEPKt", scope: !9, file: !3, line: 479, type: !116, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !115, retainedNodes: !904)
!2320 = !DILocalVariable(name: "toRep", arg: 1, scope: !2319, file: !3, line: 479, type: !28)
!2321 = !DILocation(line: 479, column: 48, scope: !2319)
!2322 = !DILocalVariable(name: "ret", scope: !2319, file: !3, line: 482, type: !24)
!2323 = !DILocation(line: 482, column: 12, scope: !2319)
!2324 = !DILocation(line: 483, column: 9, scope: !2325)
!2325 = distinct !DILexicalBlock(scope: !2319, file: !3, line: 483, column: 9)
!2326 = !DILocation(line: 483, column: 9, scope: !2319)
!2327 = !DILocalVariable(name: "len", scope: !2328, file: !3, line: 485, type: !42)
!2328 = distinct !DILexicalBlock(scope: !2325, file: !3, line: 484, column: 5)
!2329 = !DILocation(line: 485, column: 28, scope: !2328)
!2330 = !DILocation(line: 485, column: 44, scope: !2328)
!2331 = !DILocation(line: 485, column: 34, scope: !2328)
!2332 = !DILocation(line: 486, column: 25, scope: !2328)
!2333 = !DILocation(line: 486, column: 29, scope: !2328)
!2334 = !DILocation(line: 486, column: 15, scope: !2328)
!2335 = !DILocation(line: 486, column: 13, scope: !2328)
!2336 = !DILocation(line: 487, column: 16, scope: !2328)
!2337 = !DILocation(line: 487, column: 9, scope: !2328)
!2338 = !DILocation(line: 487, column: 21, scope: !2328)
!2339 = !DILocation(line: 487, column: 29, scope: !2328)
!2340 = !DILocation(line: 487, column: 33, scope: !2328)
!2341 = !DILocation(line: 487, column: 28, scope: !2328)
!2342 = !DILocation(line: 487, column: 38, scope: !2328)
!2343 = !DILocation(line: 488, column: 5, scope: !2328)
!2344 = !DILocation(line: 489, column: 12, scope: !2319)
!2345 = !DILocation(line: 489, column: 5, scope: !2319)
!2346 = distinct !DISubprogram(name: "stringLen", linkageName: "_ZN11xercesc_2_79XMLString9stringLenEPKt", scope: !9, file: !8, line: 1687, type: !137, scopeLine: 1688, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !136, retainedNodes: !904)
!2347 = !DILocalVariable(name: "src", arg: 1, scope: !2346, file: !8, line: 1687, type: !28)
!2348 = !DILocation(line: 1687, column: 61, scope: !2346)
!2349 = !DILocation(line: 1689, column: 9, scope: !2350)
!2350 = distinct !DILexicalBlock(scope: !2346, file: !8, line: 1689, column: 9)
!2351 = !DILocation(line: 1689, column: 13, scope: !2350)
!2352 = !DILocation(line: 1689, column: 18, scope: !2350)
!2353 = !DILocation(line: 1689, column: 22, scope: !2350)
!2354 = !DILocation(line: 1689, column: 21, scope: !2350)
!2355 = !DILocation(line: 1689, column: 26, scope: !2350)
!2356 = !DILocation(line: 1689, column: 9, scope: !2346)
!2357 = !DILocation(line: 1691, column: 9, scope: !2358)
!2358 = distinct !DILexicalBlock(scope: !2350, file: !8, line: 1690, column: 5)
!2359 = !DILocalVariable(name: "pszTmp", scope: !2360, file: !8, line: 1695, type: !29)
!2360 = distinct !DILexicalBlock(scope: !2350, file: !8, line: 1694, column: 4)
!2361 = !DILocation(line: 1695, column: 22, scope: !2360)
!2362 = !DILocation(line: 1695, column: 31, scope: !2360)
!2363 = !DILocation(line: 1695, column: 35, scope: !2360)
!2364 = !DILocation(line: 1697, column: 9, scope: !2360)
!2365 = !DILocation(line: 1697, column: 17, scope: !2360)
!2366 = !DILocation(line: 1697, column: 16, scope: !2360)
!2367 = !DILocation(line: 1698, column: 13, scope: !2360)
!2368 = distinct !{!2368, !2364, !2369}
!2369 = !DILocation(line: 1698, column: 15, scope: !2360)
!2370 = !DILocation(line: 1700, column: 31, scope: !2360)
!2371 = !DILocation(line: 1700, column: 40, scope: !2360)
!2372 = !DILocation(line: 1700, column: 38, scope: !2360)
!2373 = !DILocation(line: 1700, column: 30, scope: !2360)
!2374 = !DILocation(line: 1700, column: 9, scope: !2360)
!2375 = !DILocation(line: 1702, column: 1, scope: !2346)
!2376 = distinct !DISubprogram(name: "replicate", linkageName: "_ZN11xercesc_2_79XMLString9replicateEPKc", scope: !9, file: !3, line: 492, type: !110, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !109, retainedNodes: !904)
!2377 = !DILocalVariable(name: "toRep", arg: 1, scope: !2376, file: !3, line: 492, type: !17)
!2378 = !DILocation(line: 492, column: 46, scope: !2376)
!2379 = !DILocation(line: 495, column: 10, scope: !2380)
!2380 = distinct !DILexicalBlock(scope: !2376, file: !3, line: 495, column: 9)
!2381 = !DILocation(line: 495, column: 9, scope: !2376)
!2382 = !DILocation(line: 496, column: 9, scope: !2380)
!2383 = !DILocalVariable(name: "srcLen", scope: !2376, file: !3, line: 502, type: !42)
!2384 = !DILocation(line: 502, column: 24, scope: !2376)
!2385 = !DILocation(line: 502, column: 40, scope: !2376)
!2386 = !DILocation(line: 502, column: 33, scope: !2376)
!2387 = !DILocalVariable(name: "ret", scope: !2376, file: !3, line: 503, type: !15)
!2388 = !DILocation(line: 503, column: 11, scope: !2376)
!2389 = !DILocation(line: 503, column: 26, scope: !2376)
!2390 = !DILocation(line: 503, column: 32, scope: !2376)
!2391 = !DILocation(line: 503, column: 17, scope: !2376)
!2392 = !DILocation(line: 506, column: 12, scope: !2376)
!2393 = !DILocation(line: 506, column: 17, scope: !2376)
!2394 = !DILocation(line: 506, column: 25, scope: !2376)
!2395 = !DILocation(line: 506, column: 31, scope: !2376)
!2396 = !DILocation(line: 506, column: 24, scope: !2376)
!2397 = !DILocation(line: 506, column: 35, scope: !2376)
!2398 = !DILocation(line: 506, column: 5, scope: !2376)
!2399 = !DILocation(line: 507, column: 12, scope: !2376)
!2400 = !DILocation(line: 507, column: 5, scope: !2376)
!2401 = !DILocation(line: 508, column: 1, scope: !2376)
!2402 = distinct !DISubprogram(name: "replicate", linkageName: "_ZN11xercesc_2_79XMLString9replicateEPKcPNS_13MemoryManagerE", scope: !9, file: !3, line: 510, type: !113, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !112, retainedNodes: !904)
!2403 = !DILocalVariable(name: "toRep", arg: 1, scope: !2402, file: !3, line: 510, type: !17)
!2404 = !DILocation(line: 510, column: 50, scope: !2402)
!2405 = !DILocalVariable(name: "manager", arg: 2, scope: !2402, file: !3, line: 511, type: !71)
!2406 = !DILocation(line: 511, column: 50, scope: !2402)
!2407 = !DILocation(line: 514, column: 10, scope: !2408)
!2408 = distinct !DILexicalBlock(scope: !2402, file: !3, line: 514, column: 9)
!2409 = !DILocation(line: 514, column: 9, scope: !2402)
!2410 = !DILocation(line: 515, column: 9, scope: !2408)
!2411 = !DILocalVariable(name: "srcLen", scope: !2402, file: !3, line: 521, type: !42)
!2412 = !DILocation(line: 521, column: 24, scope: !2402)
!2413 = !DILocation(line: 521, column: 40, scope: !2402)
!2414 = !DILocation(line: 521, column: 33, scope: !2402)
!2415 = !DILocalVariable(name: "ret", scope: !2402, file: !3, line: 522, type: !15)
!2416 = !DILocation(line: 522, column: 11, scope: !2402)
!2417 = !DILocation(line: 522, column: 25, scope: !2402)
!2418 = !DILocation(line: 522, column: 44, scope: !2402)
!2419 = !DILocation(line: 522, column: 50, scope: !2402)
!2420 = !DILocation(line: 522, column: 43, scope: !2402)
!2421 = !DILocation(line: 522, column: 54, scope: !2402)
!2422 = !DILocation(line: 522, column: 34, scope: !2402)
!2423 = !DILocation(line: 525, column: 12, scope: !2402)
!2424 = !DILocation(line: 525, column: 17, scope: !2402)
!2425 = !DILocation(line: 525, column: 25, scope: !2402)
!2426 = !DILocation(line: 525, column: 31, scope: !2402)
!2427 = !DILocation(line: 525, column: 24, scope: !2402)
!2428 = !DILocation(line: 525, column: 35, scope: !2402)
!2429 = !DILocation(line: 525, column: 5, scope: !2402)
!2430 = !DILocation(line: 526, column: 12, scope: !2402)
!2431 = !DILocation(line: 526, column: 5, scope: !2402)
!2432 = !DILocation(line: 527, column: 1, scope: !2402)
!2433 = distinct !DISubprogram(name: "startsWith", linkageName: "_ZN11xercesc_2_79XMLString10startsWithEPKcS2_", scope: !9, file: !3, line: 530, type: !56, scopeLine: 531, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !121, retainedNodes: !904)
!2434 = !DILocalVariable(name: "toTest", arg: 1, scope: !2433, file: !3, line: 530, type: !17)
!2435 = !DILocation(line: 530, column: 46, scope: !2433)
!2436 = !DILocalVariable(name: "prefix", arg: 2, scope: !2433, file: !3, line: 530, type: !17)
!2437 = !DILocation(line: 530, column: 72, scope: !2433)
!2438 = !DILocation(line: 532, column: 21, scope: !2433)
!2439 = !DILocation(line: 532, column: 29, scope: !2433)
!2440 = !DILocation(line: 532, column: 44, scope: !2433)
!2441 = !DILocation(line: 532, column: 37, scope: !2433)
!2442 = !DILocation(line: 532, column: 13, scope: !2433)
!2443 = !DILocation(line: 532, column: 53, scope: !2433)
!2444 = !DILocation(line: 532, column: 5, scope: !2433)
!2445 = distinct !DISubprogram(name: "startsWithI", linkageName: "_ZN11xercesc_2_79XMLString11startsWithIEPKcS2_", scope: !9, file: !3, line: 536, type: !56, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !123, retainedNodes: !904)
!2446 = !DILocalVariable(name: "toTest", arg: 1, scope: !2445, file: !3, line: 536, type: !17)
!2447 = !DILocation(line: 536, column: 49, scope: !2445)
!2448 = !DILocalVariable(name: "prefix", arg: 2, scope: !2445, file: !3, line: 537, type: !17)
!2449 = !DILocation(line: 537, column: 49, scope: !2445)
!2450 = !DILocation(line: 539, column: 22, scope: !2445)
!2451 = !DILocation(line: 539, column: 30, scope: !2445)
!2452 = !DILocation(line: 539, column: 45, scope: !2445)
!2453 = !DILocation(line: 539, column: 38, scope: !2445)
!2454 = !DILocation(line: 539, column: 13, scope: !2445)
!2455 = !DILocation(line: 539, column: 54, scope: !2445)
!2456 = !DILocation(line: 539, column: 5, scope: !2445)
!2457 = distinct !DISubprogram(name: "stringLen", linkageName: "_ZN11xercesc_2_79XMLString9stringLenEPKc", scope: !9, file: !3, line: 543, type: !134, scopeLine: 544, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !133, retainedNodes: !904)
!2458 = !DILocalVariable(name: "src", arg: 1, scope: !2457, file: !3, line: 543, type: !17)
!2459 = !DILocation(line: 543, column: 53, scope: !2457)
!2460 = !DILocation(line: 545, column: 19, scope: !2457)
!2461 = !DILocation(line: 545, column: 12, scope: !2457)
!2462 = !DILocation(line: 545, column: 5, scope: !2457)
!2463 = distinct !DISubprogram(name: "transcode", linkageName: "_ZN11xercesc_2_79XMLString9transcodeEPKt", scope: !9, file: !3, line: 549, type: !195, scopeLine: 550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !194, retainedNodes: !904)
!2464 = !DILocalVariable(name: "toTranscode", arg: 1, scope: !2463, file: !3, line: 549, type: !28)
!2465 = !DILocation(line: 549, column: 47, scope: !2463)
!2466 = !DILocation(line: 551, column: 12, scope: !2463)
!2467 = !DILocation(line: 551, column: 35, scope: !2463)
!2468 = !DILocation(line: 551, column: 25, scope: !2463)
!2469 = !DILocation(line: 551, column: 5, scope: !2463)
!2470 = distinct !DISubprogram(name: "transcode", linkageName: "_ZN11xercesc_2_79XMLString9transcodeEPKtPNS_13MemoryManagerE", scope: !9, file: !3, line: 554, type: !198, scopeLine: 556, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !197, retainedNodes: !904)
!2471 = !DILocalVariable(name: "toTranscode", arg: 1, scope: !2470, file: !3, line: 554, type: !28)
!2472 = !DILocation(line: 554, column: 47, scope: !2470)
!2473 = !DILocalVariable(name: "manager", arg: 2, scope: !2470, file: !3, line: 555, type: !71)
!2474 = !DILocation(line: 555, column: 49, scope: !2470)
!2475 = !DILocation(line: 557, column: 12, scope: !2470)
!2476 = !DILocation(line: 557, column: 35, scope: !2470)
!2477 = !DILocation(line: 557, column: 48, scope: !2470)
!2478 = !DILocation(line: 557, column: 25, scope: !2470)
!2479 = !DILocation(line: 557, column: 5, scope: !2470)
!2480 = distinct !DISubprogram(name: "transcode", linkageName: "_ZN11xercesc_2_79XMLString9transcodeEPKtPcjPNS_13MemoryManagerE", scope: !9, file: !3, line: 560, type: !201, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !200, retainedNodes: !904)
!2481 = !DILocalVariable(name: "toTranscode", arg: 1, scope: !2480, file: !3, line: 560, type: !28)
!2482 = !DILocation(line: 560, column: 53, scope: !2480)
!2483 = !DILocalVariable(name: "toFill", arg: 2, scope: !2480, file: !3, line: 561, type: !14)
!2484 = !DILocation(line: 561, column: 53, scope: !2480)
!2485 = !DILocalVariable(name: "maxChars", arg: 3, scope: !2480, file: !3, line: 562, type: !42)
!2486 = !DILocation(line: 562, column: 53, scope: !2480)
!2487 = !DILocalVariable(name: "manager", arg: 4, scope: !2480, file: !3, line: 563, type: !71)
!2488 = !DILocation(line: 563, column: 53, scope: !2480)
!2489 = !DILocation(line: 565, column: 10, scope: !2490)
!2490 = distinct !DILexicalBlock(scope: !2480, file: !3, line: 565, column: 9)
!2491 = !DILocation(line: 565, column: 33, scope: !2490)
!2492 = !DILocation(line: 565, column: 46, scope: !2490)
!2493 = !DILocation(line: 565, column: 54, scope: !2490)
!2494 = !DILocation(line: 565, column: 64, scope: !2490)
!2495 = !DILocation(line: 565, column: 23, scope: !2490)
!2496 = !DILocation(line: 565, column: 9, scope: !2480)
!2497 = !DILocation(line: 566, column: 9, scope: !2490)
!2498 = !DILocation(line: 567, column: 5, scope: !2480)
!2499 = !DILocation(line: 568, column: 1, scope: !2480)
!2500 = distinct !DISubprogram(name: "transcode", linkageName: "_ZN11xercesc_2_79XMLString9transcodeEPKc", scope: !9, file: !3, line: 570, type: !204, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !203, retainedNodes: !904)
!2501 = !DILocalVariable(name: "toTranscode", arg: 1, scope: !2500, file: !3, line: 570, type: !17)
!2502 = !DILocation(line: 570, column: 47, scope: !2500)
!2503 = !DILocation(line: 572, column: 12, scope: !2500)
!2504 = !DILocation(line: 572, column: 35, scope: !2500)
!2505 = !DILocation(line: 572, column: 25, scope: !2500)
!2506 = !DILocation(line: 572, column: 5, scope: !2500)
!2507 = distinct !DISubprogram(name: "transcode", linkageName: "_ZN11xercesc_2_79XMLString9transcodeEPKcPNS_13MemoryManagerE", scope: !9, file: !3, line: 575, type: !207, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !206, retainedNodes: !904)
!2508 = !DILocalVariable(name: "toTranscode", arg: 1, scope: !2507, file: !3, line: 575, type: !17)
!2509 = !DILocation(line: 575, column: 47, scope: !2507)
!2510 = !DILocalVariable(name: "manager", arg: 2, scope: !2507, file: !3, line: 576, type: !71)
!2511 = !DILocation(line: 576, column: 50, scope: !2507)
!2512 = !DILocation(line: 578, column: 12, scope: !2507)
!2513 = !DILocation(line: 578, column: 35, scope: !2507)
!2514 = !DILocation(line: 578, column: 48, scope: !2507)
!2515 = !DILocation(line: 578, column: 25, scope: !2507)
!2516 = !DILocation(line: 578, column: 5, scope: !2507)
!2517 = distinct !DISubprogram(name: "transcode", linkageName: "_ZN11xercesc_2_79XMLString9transcodeEPKcPtjPNS_13MemoryManagerE", scope: !9, file: !3, line: 581, type: !210, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !209, retainedNodes: !904)
!2518 = !DILocalVariable(name: "toTranscode", arg: 1, scope: !2517, file: !3, line: 581, type: !17)
!2519 = !DILocation(line: 581, column: 53, scope: !2517)
!2520 = !DILocalVariable(name: "toFill", arg: 2, scope: !2517, file: !3, line: 582, type: !23)
!2521 = !DILocation(line: 582, column: 53, scope: !2517)
!2522 = !DILocalVariable(name: "maxChars", arg: 3, scope: !2517, file: !3, line: 583, type: !42)
!2523 = !DILocation(line: 583, column: 53, scope: !2517)
!2524 = !DILocalVariable(name: "manager", arg: 4, scope: !2517, file: !3, line: 584, type: !71)
!2525 = !DILocation(line: 584, column: 53, scope: !2517)
!2526 = !DILocation(line: 586, column: 10, scope: !2527)
!2527 = distinct !DILexicalBlock(scope: !2517, file: !3, line: 586, column: 9)
!2528 = !DILocation(line: 586, column: 33, scope: !2527)
!2529 = !DILocation(line: 586, column: 46, scope: !2527)
!2530 = !DILocation(line: 586, column: 54, scope: !2527)
!2531 = !DILocation(line: 586, column: 64, scope: !2527)
!2532 = !DILocation(line: 586, column: 23, scope: !2527)
!2533 = !DILocation(line: 586, column: 9, scope: !2517)
!2534 = !DILocation(line: 587, column: 9, scope: !2527)
!2535 = !DILocation(line: 588, column: 5, scope: !2517)
!2536 = !DILocation(line: 589, column: 1, scope: !2517)
!2537 = distinct !DISubprogram(name: "trim", linkageName: "_ZN11xercesc_2_79XMLString4trimEPc", scope: !9, file: !3, line: 592, type: !213, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !212, retainedNodes: !904)
!2538 = !DILocalVariable(name: "toTrim", arg: 1, scope: !2537, file: !3, line: 592, type: !14)
!2539 = !DILocation(line: 592, column: 34, scope: !2537)
!2540 = !DILocalVariable(name: "len", scope: !2537, file: !3, line: 594, type: !42)
!2541 = !DILocation(line: 594, column: 24, scope: !2537)
!2542 = !DILocation(line: 594, column: 37, scope: !2537)
!2543 = !DILocation(line: 594, column: 30, scope: !2537)
!2544 = !DILocalVariable(name: "skip", scope: !2537, file: !3, line: 596, type: !43)
!2545 = !DILocation(line: 596, column: 18, scope: !2537)
!2546 = !DILocalVariable(name: "scrape", scope: !2537, file: !3, line: 596, type: !43)
!2547 = !DILocation(line: 596, column: 24, scope: !2537)
!2548 = !DILocation(line: 597, column: 15, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2537, file: !3, line: 597, column: 5)
!2550 = !DILocation(line: 597, column: 10, scope: !2549)
!2551 = !DILocation(line: 597, column: 20, scope: !2552)
!2552 = distinct !DILexicalBlock(scope: !2549, file: !3, line: 597, column: 5)
!2553 = !DILocation(line: 597, column: 27, scope: !2552)
!2554 = !DILocation(line: 597, column: 25, scope: !2552)
!2555 = !DILocation(line: 597, column: 5, scope: !2549)
!2556 = !DILocation(line: 599, column: 23, scope: !2557)
!2557 = distinct !DILexicalBlock(scope: !2558, file: !3, line: 599, column: 13)
!2558 = distinct !DILexicalBlock(scope: !2552, file: !3, line: 598, column: 5)
!2559 = !DILocation(line: 599, column: 30, scope: !2557)
!2560 = !DILocation(line: 599, column: 15, scope: !2557)
!2561 = !DILocation(line: 599, column: 13, scope: !2558)
!2562 = !DILocation(line: 600, column: 13, scope: !2557)
!2563 = !DILocation(line: 601, column: 5, scope: !2558)
!2564 = !DILocation(line: 597, column: 36, scope: !2552)
!2565 = !DILocation(line: 597, column: 5, scope: !2552)
!2566 = distinct !{!2566, !2555, !2567}
!2567 = !DILocation(line: 601, column: 5, scope: !2549)
!2568 = !DILocation(line: 603, column: 19, scope: !2569)
!2569 = distinct !DILexicalBlock(scope: !2537, file: !3, line: 603, column: 5)
!2570 = !DILocation(line: 603, column: 17, scope: !2569)
!2571 = !DILocation(line: 603, column: 10, scope: !2569)
!2572 = !DILocation(line: 603, column: 24, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2569, file: !3, line: 603, column: 5)
!2574 = !DILocation(line: 603, column: 33, scope: !2573)
!2575 = !DILocation(line: 603, column: 31, scope: !2573)
!2576 = !DILocation(line: 603, column: 5, scope: !2569)
!2577 = !DILocation(line: 605, column: 23, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2579, file: !3, line: 605, column: 13)
!2579 = distinct !DILexicalBlock(scope: !2573, file: !3, line: 604, column: 5)
!2580 = !DILocation(line: 605, column: 30, scope: !2578)
!2581 = !DILocation(line: 605, column: 37, scope: !2578)
!2582 = !DILocation(line: 605, column: 15, scope: !2578)
!2583 = !DILocation(line: 605, column: 13, scope: !2579)
!2584 = !DILocation(line: 606, column: 13, scope: !2578)
!2585 = !DILocation(line: 607, column: 5, scope: !2579)
!2586 = !DILocation(line: 603, column: 45, scope: !2573)
!2587 = !DILocation(line: 603, column: 5, scope: !2573)
!2588 = distinct !{!2588, !2576, !2589}
!2589 = !DILocation(line: 607, column: 5, scope: !2569)
!2590 = !DILocation(line: 610, column: 9, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2537, file: !3, line: 610, column: 9)
!2592 = !DILocation(line: 610, column: 19, scope: !2591)
!2593 = !DILocation(line: 610, column: 16, scope: !2591)
!2594 = !DILocation(line: 610, column: 9, scope: !2537)
!2595 = !DILocation(line: 611, column: 9, scope: !2591)
!2596 = !DILocation(line: 611, column: 16, scope: !2591)
!2597 = !DILocation(line: 611, column: 24, scope: !2591)
!2598 = !DILocation(line: 613, column: 9, scope: !2599)
!2599 = distinct !DILexicalBlock(scope: !2537, file: !3, line: 613, column: 9)
!2600 = !DILocation(line: 613, column: 9, scope: !2537)
!2601 = !DILocalVariable(name: "index", scope: !2602, file: !3, line: 616, type: !43)
!2602 = distinct !DILexicalBlock(scope: !2599, file: !3, line: 614, column: 5)
!2603 = !DILocation(line: 616, column: 22, scope: !2602)
!2604 = !DILocation(line: 617, column: 9, scope: !2602)
!2605 = !DILocation(line: 617, column: 16, scope: !2602)
!2606 = !DILocation(line: 617, column: 23, scope: !2602)
!2607 = !DILocation(line: 618, column: 31, scope: !2602)
!2608 = !DILocation(line: 618, column: 42, scope: !2602)
!2609 = !DILocation(line: 618, column: 13, scope: !2602)
!2610 = !DILocation(line: 618, column: 25, scope: !2602)
!2611 = !DILocation(line: 618, column: 29, scope: !2602)
!2612 = distinct !{!2612, !2604, !2613}
!2613 = !DILocation(line: 618, column: 44, scope: !2602)
!2614 = !DILocation(line: 620, column: 9, scope: !2602)
!2615 = !DILocation(line: 620, column: 16, scope: !2602)
!2616 = !DILocation(line: 620, column: 23, scope: !2602)
!2617 = !DILocation(line: 621, column: 5, scope: !2602)
!2618 = !DILocation(line: 622, column: 1, scope: !2537)
!2619 = distinct !DISubprogram(name: "subString", linkageName: "_ZN11xercesc_2_79XMLString9subStringEPcPKciiPNS_13MemoryManagerE", scope: !9, file: !3, line: 625, type: !101, scopeLine: 628, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !100, retainedNodes: !904)
!2620 = !DILocalVariable(name: "targetStr", arg: 1, scope: !2619, file: !3, line: 625, type: !14)
!2621 = !DILocation(line: 625, column: 39, scope: !2619)
!2622 = !DILocalVariable(name: "srcStr", arg: 2, scope: !2619, file: !3, line: 625, type: !17)
!2623 = !DILocation(line: 625, column: 68, scope: !2619)
!2624 = !DILocalVariable(name: "startIndex", arg: 3, scope: !2619, file: !3, line: 626, type: !61)
!2625 = !DILocation(line: 626, column: 39, scope: !2619)
!2626 = !DILocalVariable(name: "endIndex", arg: 4, scope: !2619, file: !3, line: 626, type: !61)
!2627 = !DILocation(line: 626, column: 61, scope: !2619)
!2628 = !DILocalVariable(name: "manager", arg: 5, scope: !2619, file: !3, line: 627, type: !71)
!2629 = !DILocation(line: 627, column: 50, scope: !2619)
!2630 = !DILocation(line: 629, column: 9, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2619, file: !3, line: 629, column: 9)
!2632 = !DILocation(line: 629, column: 19, scope: !2631)
!2633 = !DILocation(line: 629, column: 9, scope: !2619)
!2634 = !DILocation(line: 630, column: 9, scope: !2631)
!2635 = !DILocation(line: 644, column: 1, scope: !2631)
!2636 = !DILocalVariable(name: "srcLen", scope: !2619, file: !3, line: 632, type: !61)
!2637 = !DILocation(line: 632, column: 15, scope: !2619)
!2638 = !DILocation(line: 632, column: 31, scope: !2619)
!2639 = !DILocation(line: 632, column: 24, scope: !2619)
!2640 = !DILocalVariable(name: "copySize", scope: !2619, file: !3, line: 633, type: !61)
!2641 = !DILocation(line: 633, column: 15, scope: !2619)
!2642 = !DILocation(line: 633, column: 26, scope: !2619)
!2643 = !DILocation(line: 633, column: 37, scope: !2619)
!2644 = !DILocation(line: 633, column: 35, scope: !2619)
!2645 = !DILocation(line: 636, column: 10, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2619, file: !3, line: 636, column: 10)
!2647 = !DILocation(line: 636, column: 21, scope: !2646)
!2648 = !DILocation(line: 636, column: 25, scope: !2646)
!2649 = !DILocation(line: 636, column: 28, scope: !2646)
!2650 = !DILocation(line: 636, column: 41, scope: !2646)
!2651 = !DILocation(line: 636, column: 39, scope: !2646)
!2652 = !DILocation(line: 636, column: 50, scope: !2646)
!2653 = !DILocation(line: 636, column: 53, scope: !2646)
!2654 = !DILocation(line: 636, column: 64, scope: !2646)
!2655 = !DILocation(line: 636, column: 62, scope: !2646)
!2656 = !DILocation(line: 636, column: 10, scope: !2619)
!2657 = !DILocation(line: 637, column: 9, scope: !2646)
!2658 = !DILocation(line: 644, column: 1, scope: !2646)
!2659 = !DILocalVariable(name: "i", scope: !2660, file: !3, line: 639, type: !34)
!2660 = distinct !DILexicalBlock(scope: !2619, file: !3, line: 639, column: 5)
!2661 = !DILocation(line: 639, column: 14, scope: !2660)
!2662 = !DILocation(line: 639, column: 17, scope: !2660)
!2663 = !DILocation(line: 639, column: 10, scope: !2660)
!2664 = !DILocation(line: 639, column: 29, scope: !2665)
!2665 = distinct !DILexicalBlock(scope: !2660, file: !3, line: 639, column: 5)
!2666 = !DILocation(line: 639, column: 33, scope: !2665)
!2667 = !DILocation(line: 639, column: 31, scope: !2665)
!2668 = !DILocation(line: 639, column: 5, scope: !2660)
!2669 = !DILocation(line: 640, column: 35, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2665, file: !3, line: 639, column: 48)
!2671 = !DILocation(line: 640, column: 42, scope: !2670)
!2672 = !DILocation(line: 640, column: 9, scope: !2670)
!2673 = !DILocation(line: 640, column: 19, scope: !2670)
!2674 = !DILocation(line: 640, column: 21, scope: !2670)
!2675 = !DILocation(line: 640, column: 20, scope: !2670)
!2676 = !DILocation(line: 640, column: 33, scope: !2670)
!2677 = !DILocation(line: 641, column: 5, scope: !2670)
!2678 = !DILocation(line: 639, column: 44, scope: !2665)
!2679 = !DILocation(line: 639, column: 5, scope: !2665)
!2680 = distinct !{!2680, !2668, !2681}
!2681 = !DILocation(line: 641, column: 5, scope: !2660)
!2682 = !DILocation(line: 643, column: 5, scope: !2619)
!2683 = !DILocation(line: 643, column: 15, scope: !2619)
!2684 = !DILocation(line: 643, column: 25, scope: !2619)
!2685 = !DILocation(line: 644, column: 1, scope: !2619)
!2686 = distinct !DISubprogram(name: "isValidNOTATION", linkageName: "_ZN11xercesc_2_79XMLString15isValidNOTATIONEPKtPNS_13MemoryManagerE", scope: !9, file: !3, line: 646, type: !140, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !139, retainedNodes: !904)
!2687 = !DILocalVariable(name: "name", arg: 1, scope: !2686, file: !3, line: 646, type: !28)
!2688 = !DILocation(line: 646, column: 60, scope: !2686)
!2689 = !DILocalVariable(name: "manager", arg: 2, scope: !2686, file: !3, line: 647, type: !71)
!2690 = !DILocation(line: 647, column: 60, scope: !2686)
!2691 = !DILocalVariable(name: "nameLen", scope: !2686, file: !3, line: 654, type: !34)
!2692 = !DILocation(line: 654, column: 9, scope: !2686)
!2693 = !DILocation(line: 654, column: 40, scope: !2686)
!2694 = !DILocation(line: 654, column: 19, scope: !2686)
!2695 = !DILocalVariable(name: "colPos", scope: !2686, file: !3, line: 655, type: !34)
!2696 = !DILocation(line: 655, column: 9, scope: !2686)
!2697 = !DILocation(line: 655, column: 41, scope: !2686)
!2698 = !DILocation(line: 655, column: 18, scope: !2686)
!2699 = !DILocation(line: 657, column: 10, scope: !2700)
!2700 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 657, column: 9)
!2701 = !DILocation(line: 657, column: 17, scope: !2700)
!2702 = !DILocation(line: 657, column: 32, scope: !2700)
!2703 = !DILocation(line: 658, column: 10, scope: !2700)
!2704 = !DILocation(line: 658, column: 20, scope: !2700)
!2705 = !DILocation(line: 658, column: 28, scope: !2700)
!2706 = !DILocation(line: 658, column: 17, scope: !2700)
!2707 = !DILocation(line: 657, column: 9, scope: !2686)
!2708 = !DILocation(line: 659, column: 9, scope: !2700)
!2709 = !DILocation(line: 663, column: 36, scope: !2710)
!2710 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 663, column: 9)
!2711 = !DILocation(line: 663, column: 41, scope: !2710)
!2712 = !DILocation(line: 663, column: 47, scope: !2710)
!2713 = !DILocation(line: 663, column: 10, scope: !2710)
!2714 = !DILocation(line: 663, column: 9, scope: !2686)
!2715 = !DILocation(line: 665, column: 9, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2710, file: !3, line: 664, column: 5)
!2717 = !DILocation(line: 667, column: 14, scope: !2718)
!2718 = distinct !DILexicalBlock(scope: !2710, file: !3, line: 667, column: 14)
!2719 = !DILocation(line: 667, column: 21, scope: !2718)
!2720 = !DILocation(line: 667, column: 14, scope: !2710)
!2721 = !DILocation(line: 669, column: 9, scope: !2722)
!2722 = distinct !DILexicalBlock(scope: !2718, file: !3, line: 668, column: 5)
!2723 = !DILocalVariable(name: "temp", scope: !2724, file: !3, line: 674, type: !23)
!2724 = distinct !DILexicalBlock(scope: !2718, file: !3, line: 672, column: 5)
!2725 = !DILocation(line: 674, column: 22, scope: !2724)
!2726 = !DILocation(line: 675, column: 22, scope: !2724)
!2727 = !DILocation(line: 675, column: 41, scope: !2724)
!2728 = !DILocation(line: 675, column: 48, scope: !2724)
!2729 = !DILocation(line: 675, column: 40, scope: !2724)
!2730 = !DILocation(line: 675, column: 53, scope: !2724)
!2731 = !DILocation(line: 675, column: 31, scope: !2724)
!2732 = !DILocation(line: 675, column: 13, scope: !2724)
!2733 = !DILocalVariable(name: "jan", scope: !2724, file: !3, line: 676, type: !2107)
!2734 = !DILocation(line: 676, column: 35, scope: !2724)
!2735 = !DILocation(line: 676, column: 39, scope: !2724)
!2736 = !DILocation(line: 676, column: 45, scope: !2724)
!2737 = !DILocation(line: 678, column: 21, scope: !2724)
!2738 = !DILocation(line: 678, column: 27, scope: !2724)
!2739 = !DILocation(line: 678, column: 33, scope: !2724)
!2740 = !DILocation(line: 678, column: 9, scope: !2724)
!2741 = !DILocation(line: 679, column: 9, scope: !2724)
!2742 = !DILocation(line: 679, column: 14, scope: !2724)
!2743 = !DILocation(line: 679, column: 22, scope: !2724)
!2744 = !DILocalVariable(name: "newURI", scope: !2745, file: !3, line: 683, type: !2746)
!2745 = distinct !DILexicalBlock(scope: !2724, file: !3, line: 682, column: 9)
!2746 = !DICompositeType(tag: DW_TAG_class_type, name: "XMLUri", scope: !2, file: !2747, line: 41, flags: DIFlagFwdDecl)
!2747 = !DIFile(filename: "./xercesc/util/XMLUri.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!2748 = !DILocation(line: 683, column: 21, scope: !2745)
!2749 = !DILocation(line: 683, column: 28, scope: !2745)
!2750 = !DILocation(line: 683, column: 34, scope: !2745)
!2751 = !DILocation(line: 684, column: 9, scope: !2724)
!2752 = !DILocation(line: 684, column: 9, scope: !2745)
!2753 = !DILocation(line: 692, column: 1, scope: !2724)
!2754 = !DILocation(line: 692, column: 1, scope: !2745)
!2755 = !DILocalVariable(scope: !2724, file: !3, line: 685, type: !2756)
!2756 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2757, size: 64)
!2757 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2758)
!2758 = !DICompositeType(tag: DW_TAG_class_type, name: "MalformedURLException", scope: !2, file: !2759, line: 285, flags: DIFlagFwdDecl, identifier: "_ZTSN11xercesc_2_721MalformedURLExceptionE")
!2759 = !DIFile(filename: "./xercesc/util/XMLURL.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!2760 = !DILocation(line: 685, column: 44, scope: !2724)
!2761 = !DILocation(line: 687, column: 13, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2724, file: !3, line: 686, column: 9)
!2763 = !DILocation(line: 688, column: 9, scope: !2762)
!2764 = !DILocation(line: 690, column: 9, scope: !2724)
!2765 = !DILocation(line: 691, column: 5, scope: !2718)
!2766 = !DILocation(line: 692, column: 1, scope: !2686)
!2767 = distinct !DISubprogram(name: "lastIndexOf", linkageName: "_ZN11xercesc_2_79XMLString11lastIndexOfEPKtt", scope: !9, file: !8, line: 1807, type: !82, scopeLine: 1808, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !91, retainedNodes: !904)
!2768 = !DILocalVariable(name: "toSearch", arg: 1, scope: !2767, file: !8, line: 1807, type: !28)
!2769 = !DILocation(line: 1807, column: 54, scope: !2767)
!2770 = !DILocalVariable(name: "ch", arg: 2, scope: !2767, file: !8, line: 1807, type: !30)
!2771 = !DILocation(line: 1807, column: 76, scope: !2767)
!2772 = !DILocation(line: 1809, column: 35, scope: !2767)
!2773 = !DILocation(line: 1809, column: 39, scope: !2767)
!2774 = !DILocation(line: 1809, column: 59, scope: !2767)
!2775 = !DILocation(line: 1809, column: 49, scope: !2767)
!2776 = !DILocation(line: 1809, column: 12, scope: !2767)
!2777 = !DILocation(line: 1809, column: 5, scope: !2767)
!2778 = distinct !DISubprogram(name: "isValidNCName", linkageName: "_ZN11xercesc_2_79XMLString13isValidNCNameEPKt", scope: !9, file: !3, line: 700, type: !143, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !142, retainedNodes: !904)
!2779 = !DILocalVariable(name: "name", arg: 1, scope: !2778, file: !3, line: 700, type: !28)
!2780 = !DILocation(line: 700, column: 50, scope: !2778)
!2781 = !DILocation(line: 701, column: 38, scope: !2778)
!2782 = !DILocation(line: 701, column: 65, scope: !2778)
!2783 = !DILocation(line: 701, column: 44, scope: !2778)
!2784 = !DILocation(line: 701, column: 12, scope: !2778)
!2785 = !DILocation(line: 701, column: 5, scope: !2778)
!2786 = distinct !DISubprogram(name: "copyNString", linkageName: "_ZN11xercesc_2_79XMLString11copyNStringEPtPKtj", scope: !9, file: !3, line: 1138, type: !66, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !65, retainedNodes: !904)
!2787 = !DILocalVariable(name: "target", arg: 1, scope: !2786, file: !3, line: 1138, type: !23)
!2788 = !DILocation(line: 1138, column: 53, scope: !2786)
!2789 = !DILocalVariable(name: "src", arg: 2, scope: !2786, file: !3, line: 1139, type: !28)
!2790 = !DILocation(line: 1139, column: 53, scope: !2786)
!2791 = !DILocalVariable(name: "maxChars", arg: 3, scope: !2786, file: !3, line: 1140, type: !42)
!2792 = !DILocation(line: 1140, column: 53, scope: !2786)
!2793 = !DILocalVariable(name: "outPtr", scope: !2786, file: !3, line: 1142, type: !24)
!2794 = !DILocation(line: 1142, column: 12, scope: !2786)
!2795 = !DILocation(line: 1142, column: 21, scope: !2786)
!2796 = !DILocalVariable(name: "srcPtr", scope: !2786, file: !3, line: 1143, type: !29)
!2797 = !DILocation(line: 1143, column: 18, scope: !2786)
!2798 = !DILocation(line: 1143, column: 27, scope: !2786)
!2799 = !DILocalVariable(name: "endPtr", scope: !2786, file: !3, line: 1144, type: !29)
!2800 = !DILocation(line: 1144, column: 18, scope: !2786)
!2801 = !DILocation(line: 1144, column: 27, scope: !2786)
!2802 = !DILocation(line: 1144, column: 36, scope: !2786)
!2803 = !DILocation(line: 1144, column: 34, scope: !2786)
!2804 = !DILocation(line: 1144, column: 45, scope: !2786)
!2805 = !DILocation(line: 1146, column: 5, scope: !2786)
!2806 = !DILocation(line: 1146, column: 13, scope: !2786)
!2807 = !DILocation(line: 1146, column: 12, scope: !2786)
!2808 = !DILocation(line: 1146, column: 20, scope: !2786)
!2809 = !DILocation(line: 1146, column: 24, scope: !2786)
!2810 = !DILocation(line: 1146, column: 34, scope: !2786)
!2811 = !DILocation(line: 1146, column: 31, scope: !2786)
!2812 = !DILocation(line: 0, scope: !2786)
!2813 = !DILocation(line: 1147, column: 28, scope: !2786)
!2814 = !DILocation(line: 1147, column: 21, scope: !2786)
!2815 = !DILocation(line: 1147, column: 16, scope: !2786)
!2816 = !DILocation(line: 1147, column: 19, scope: !2786)
!2817 = distinct !{!2817, !2805, !2813}
!2818 = !DILocation(line: 1150, column: 6, scope: !2786)
!2819 = !DILocation(line: 1150, column: 13, scope: !2786)
!2820 = !DILocation(line: 1153, column: 14, scope: !2786)
!2821 = !DILocation(line: 1153, column: 13, scope: !2786)
!2822 = !DILocation(line: 1153, column: 21, scope: !2786)
!2823 = !DILocation(line: 1153, column: 5, scope: !2786)
!2824 = distinct !DISubprogram(name: "isValidName", linkageName: "_ZN11xercesc_2_79XMLString11isValidNameEPKt", scope: !9, file: !3, line: 709, type: !143, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !145, retainedNodes: !904)
!2825 = !DILocalVariable(name: "name", arg: 1, scope: !2824, file: !3, line: 709, type: !28)
!2826 = !DILocation(line: 709, column: 48, scope: !2824)
!2827 = !DILocation(line: 710, column: 36, scope: !2824)
!2828 = !DILocation(line: 710, column: 63, scope: !2824)
!2829 = !DILocation(line: 710, column: 42, scope: !2824)
!2830 = !DILocation(line: 710, column: 12, scope: !2824)
!2831 = !DILocation(line: 710, column: 5, scope: !2824)
!2832 = distinct !DISubprogram(name: "isValidEncName", linkageName: "_ZN11xercesc_2_79XMLString14isValidEncNameEPKt", scope: !9, file: !3, line: 719, type: !143, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !146, retainedNodes: !904)
!2833 = !DILocalVariable(name: "name", arg: 1, scope: !2832, file: !3, line: 719, type: !28)
!2834 = !DILocation(line: 719, column: 51, scope: !2832)
!2835 = !DILocation(line: 722, column: 31, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2832, file: !3, line: 722, column: 10)
!2837 = !DILocation(line: 722, column: 10, scope: !2836)
!2838 = !DILocation(line: 722, column: 37, scope: !2836)
!2839 = !DILocation(line: 722, column: 10, scope: !2832)
!2840 = !DILocation(line: 723, column: 9, scope: !2836)
!2841 = !DILocalVariable(name: "tempName", scope: !2832, file: !3, line: 725, type: !29)
!2842 = !DILocation(line: 725, column: 18, scope: !2832)
!2843 = !DILocation(line: 725, column: 29, scope: !2832)
!2844 = !DILocalVariable(name: "firstChar", scope: !2832, file: !3, line: 726, type: !25)
!2845 = !DILocation(line: 726, column: 11, scope: !2832)
!2846 = !DILocation(line: 726, column: 32, scope: !2832)
!2847 = !DILocation(line: 726, column: 23, scope: !2832)
!2848 = !DILocation(line: 728, column: 18, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !2832, file: !3, line: 728, column: 9)
!2850 = !DILocation(line: 728, column: 10, scope: !2849)
!2851 = !DILocation(line: 728, column: 9, scope: !2832)
!2852 = !DILocation(line: 729, column: 9, scope: !2849)
!2853 = !DILocation(line: 731, column: 5, scope: !2832)
!2854 = !DILocation(line: 731, column: 12, scope: !2832)
!2855 = !DILocation(line: 731, column: 11, scope: !2832)
!2856 = !DILocation(line: 733, column: 25, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2858, file: !3, line: 733, column: 13)
!2858 = distinct !DILexicalBlock(scope: !2832, file: !3, line: 732, column: 5)
!2859 = !DILocation(line: 733, column: 24, scope: !2857)
!2860 = !DILocation(line: 733, column: 16, scope: !2857)
!2861 = !DILocation(line: 733, column: 42, scope: !2857)
!2862 = !DILocation(line: 734, column: 25, scope: !2857)
!2863 = !DILocation(line: 734, column: 24, scope: !2857)
!2864 = !DILocation(line: 734, column: 16, scope: !2857)
!2865 = !DILocation(line: 734, column: 42, scope: !2857)
!2866 = !DILocation(line: 735, column: 16, scope: !2857)
!2867 = !DILocation(line: 735, column: 15, scope: !2857)
!2868 = !DILocation(line: 735, column: 25, scope: !2857)
!2869 = !DILocation(line: 735, column: 42, scope: !2857)
!2870 = !DILocation(line: 736, column: 16, scope: !2857)
!2871 = !DILocation(line: 736, column: 15, scope: !2857)
!2872 = !DILocation(line: 736, column: 25, scope: !2857)
!2873 = !DILocation(line: 736, column: 42, scope: !2857)
!2874 = !DILocation(line: 737, column: 16, scope: !2857)
!2875 = !DILocation(line: 737, column: 15, scope: !2857)
!2876 = !DILocation(line: 737, column: 25, scope: !2857)
!2877 = !DILocation(line: 733, column: 13, scope: !2858)
!2878 = !DILocation(line: 738, column: 13, scope: !2857)
!2879 = !DILocation(line: 740, column: 17, scope: !2858)
!2880 = distinct !{!2880, !2853, !2881}
!2881 = !DILocation(line: 741, column: 5, scope: !2832)
!2882 = !DILocation(line: 743, column: 5, scope: !2832)
!2883 = !DILocation(line: 744, column: 1, scope: !2832)
!2884 = distinct !DISubprogram(name: "isAlpha", linkageName: "_ZN11xercesc_2_79XMLString7isAlphaEt", scope: !9, file: !3, line: 755, type: !149, scopeLine: 756, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !148, retainedNodes: !904)
!2885 = !DILocalVariable(name: "theChar", arg: 1, scope: !2884, file: !3, line: 755, type: !30)
!2886 = !DILocation(line: 755, column: 37, scope: !2884)
!2887 = !DILocation(line: 757, column: 12, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2884, file: !3, line: 757, column: 9)
!2889 = !DILocation(line: 757, column: 20, scope: !2888)
!2890 = !DILocation(line: 757, column: 35, scope: !2888)
!2891 = !DILocation(line: 757, column: 40, scope: !2888)
!2892 = !DILocation(line: 757, column: 48, scope: !2888)
!2893 = !DILocation(line: 757, column: 64, scope: !2888)
!2894 = !DILocation(line: 758, column: 12, scope: !2888)
!2895 = !DILocation(line: 758, column: 20, scope: !2888)
!2896 = !DILocation(line: 758, column: 35, scope: !2888)
!2897 = !DILocation(line: 758, column: 40, scope: !2888)
!2898 = !DILocation(line: 758, column: 48, scope: !2888)
!2899 = !DILocation(line: 757, column: 9, scope: !2884)
!2900 = !DILocation(line: 759, column: 9, scope: !2888)
!2901 = !DILocation(line: 761, column: 5, scope: !2884)
!2902 = !DILocation(line: 762, column: 1, scope: !2884)
!2903 = distinct !DISubprogram(name: "isDigit", linkageName: "_ZN11xercesc_2_79XMLString7isDigitEt", scope: !9, file: !3, line: 764, type: !149, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !151, retainedNodes: !904)
!2904 = !DILocalVariable(name: "theChar", arg: 1, scope: !2903, file: !3, line: 764, type: !30)
!2905 = !DILocation(line: 764, column: 37, scope: !2903)
!2906 = !DILocation(line: 766, column: 11, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2903, file: !3, line: 766, column: 9)
!2908 = !DILocation(line: 766, column: 19, scope: !2907)
!2909 = !DILocation(line: 766, column: 34, scope: !2907)
!2910 = !DILocation(line: 766, column: 39, scope: !2907)
!2911 = !DILocation(line: 766, column: 47, scope: !2907)
!2912 = !DILocation(line: 766, column: 9, scope: !2903)
!2913 = !DILocation(line: 767, column: 9, scope: !2907)
!2914 = !DILocation(line: 769, column: 5, scope: !2903)
!2915 = !DILocation(line: 770, column: 1, scope: !2903)
!2916 = distinct !DISubprogram(name: "isValidQName", linkageName: "_ZN11xercesc_2_79XMLString12isValidQNameEPKt", scope: !9, file: !3, line: 750, type: !143, scopeLine: 751, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !147, retainedNodes: !904)
!2917 = !DILocalVariable(name: "name", arg: 1, scope: !2916, file: !3, line: 750, type: !28)
!2918 = !DILocation(line: 750, column: 49, scope: !2916)
!2919 = !DILocation(line: 752, column: 37, scope: !2916)
!2920 = !DILocation(line: 752, column: 64, scope: !2916)
!2921 = !DILocation(line: 752, column: 43, scope: !2916)
!2922 = !DILocation(line: 752, column: 12, scope: !2916)
!2923 = !DILocation(line: 752, column: 5, scope: !2916)
!2924 = distinct !DISubprogram(name: "isAlphaNum", linkageName: "_ZN11xercesc_2_79XMLString10isAlphaNumEt", scope: !9, file: !3, line: 772, type: !149, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !152, retainedNodes: !904)
!2925 = !DILocalVariable(name: "theChar", arg: 1, scope: !2924, file: !3, line: 772, type: !30)
!2926 = !DILocation(line: 772, column: 40, scope: !2924)
!2927 = !DILocation(line: 774, column: 21, scope: !2924)
!2928 = !DILocation(line: 774, column: 13, scope: !2924)
!2929 = !DILocation(line: 774, column: 30, scope: !2924)
!2930 = !DILocation(line: 774, column: 41, scope: !2924)
!2931 = !DILocation(line: 774, column: 33, scope: !2924)
!2932 = !DILocation(line: 774, column: 5, scope: !2924)
!2933 = distinct !DISubprogram(name: "isHex", linkageName: "_ZN11xercesc_2_79XMLString5isHexEt", scope: !9, file: !3, line: 777, type: !149, scopeLine: 778, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !153, retainedNodes: !904)
!2934 = !DILocalVariable(name: "theChar", arg: 1, scope: !2933, file: !3, line: 777, type: !30)
!2935 = !DILocation(line: 777, column: 35, scope: !2933)
!2936 = !DILocation(line: 779, column: 18, scope: !2933)
!2937 = !DILocation(line: 779, column: 10, scope: !2933)
!2938 = !DILocation(line: 779, column: 27, scope: !2933)
!2939 = !DILocation(line: 780, column: 5, scope: !2933)
!2940 = !DILocation(line: 780, column: 13, scope: !2933)
!2941 = !DILocation(line: 780, column: 26, scope: !2933)
!2942 = !DILocation(line: 780, column: 29, scope: !2933)
!2943 = !DILocation(line: 780, column: 37, scope: !2933)
!2944 = !DILocation(line: 780, column: 51, scope: !2933)
!2945 = !DILocation(line: 781, column: 5, scope: !2933)
!2946 = !DILocation(line: 781, column: 13, scope: !2933)
!2947 = !DILocation(line: 781, column: 26, scope: !2933)
!2948 = !DILocation(line: 781, column: 29, scope: !2933)
!2949 = !DILocation(line: 781, column: 37, scope: !2933)
!2950 = !DILocation(line: 0, scope: !2933)
!2951 = !DILocation(line: 779, column: 2, scope: !2933)
!2952 = distinct !DISubprogram(name: "isAllWhiteSpace", linkageName: "_ZN11xercesc_2_79XMLString15isAllWhiteSpaceEPKt", scope: !9, file: !3, line: 785, type: !143, scopeLine: 786, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !154, retainedNodes: !904)
!2953 = !DILocalVariable(name: "toCheck", arg: 1, scope: !2952, file: !3, line: 785, type: !28)
!2954 = !DILocation(line: 785, column: 52, scope: !2952)
!2955 = !DILocation(line: 787, column: 36, scope: !2952)
!2956 = !DILocation(line: 787, column: 66, scope: !2952)
!2957 = !DILocation(line: 787, column: 45, scope: !2952)
!2958 = !DILocation(line: 787, column: 12, scope: !2952)
!2959 = !DILocation(line: 787, column: 5, scope: !2952)
!2960 = !DILocalVariable(name: "toFormat", arg: 1, scope: !903, file: !3, line: 793, type: !165)
!2961 = !DILocation(line: 793, column: 53, scope: !903)
!2962 = !DILocalVariable(name: "toFill", arg: 2, scope: !903, file: !3, line: 794, type: !23)
!2963 = !DILocation(line: 794, column: 53, scope: !903)
!2964 = !DILocalVariable(name: "maxChars", arg: 3, scope: !903, file: !3, line: 795, type: !42)
!2965 = !DILocation(line: 795, column: 53, scope: !903)
!2966 = !DILocalVariable(name: "radix", arg: 4, scope: !903, file: !3, line: 796, type: !42)
!2967 = !DILocation(line: 796, column: 53, scope: !903)
!2968 = !DILocalVariable(name: "manager", arg: 5, scope: !903, file: !3, line: 797, type: !71)
!2969 = !DILocation(line: 797, column: 53, scope: !903)
!2970 = !DILocation(line: 806, column: 10, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !903, file: !3, line: 806, column: 9)
!2972 = !DILocation(line: 806, column: 9, scope: !903)
!2973 = !DILocation(line: 807, column: 9, scope: !2971)
!2974 = !DILocation(line: 882, column: 1, scope: !2971)
!2975 = !DILocation(line: 810, column: 10, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !903, file: !3, line: 810, column: 9)
!2977 = !DILocation(line: 810, column: 9, scope: !903)
!2978 = !DILocation(line: 812, column: 9, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 811, column: 5)
!2980 = !DILocation(line: 812, column: 19, scope: !2979)
!2981 = !DILocation(line: 813, column: 9, scope: !2979)
!2982 = !DILocation(line: 813, column: 19, scope: !2979)
!2983 = !DILocation(line: 814, column: 9, scope: !2979)
!2984 = !DILocalVariable(name: "tmpIndex", scope: !903, file: !3, line: 818, type: !43)
!2985 = !DILocation(line: 818, column: 18, scope: !903)
!2986 = !DILocalVariable(name: "tmpVal", scope: !903, file: !3, line: 821, type: !43)
!2987 = !DILocation(line: 821, column: 18, scope: !903)
!2988 = !DILocation(line: 821, column: 27, scope: !903)
!2989 = !DILocalVariable(name: "tmpBuf", scope: !903, file: !3, line: 828, type: !2990)
!2990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 2048, elements: !1404)
!2991 = !DILocation(line: 828, column: 13, scope: !903)
!2992 = !DILocation(line: 835, column: 9, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !903, file: !3, line: 835, column: 9)
!2994 = !DILocation(line: 835, column: 15, scope: !2993)
!2995 = !DILocation(line: 835, column: 9, scope: !903)
!2996 = !DILocation(line: 837, column: 9, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2993, file: !3, line: 836, column: 5)
!2998 = !DILocation(line: 837, column: 16, scope: !2997)
!2999 = !DILocation(line: 839, column: 17, scope: !3000)
!3000 = distinct !DILexicalBlock(scope: !3001, file: !3, line: 839, column: 17)
!3001 = distinct !DILexicalBlock(scope: !2997, file: !3, line: 838, column: 9)
!3002 = !DILocation(line: 839, column: 24, scope: !3000)
!3003 = !DILocation(line: 839, column: 17, scope: !3001)
!3004 = !DILocation(line: 840, column: 32, scope: !3000)
!3005 = !DILocation(line: 840, column: 17, scope: !3000)
!3006 = !DILocation(line: 840, column: 36, scope: !3000)
!3007 = !DILocation(line: 842, column: 32, scope: !3000)
!3008 = !DILocation(line: 842, column: 17, scope: !3000)
!3009 = !DILocation(line: 842, column: 36, scope: !3000)
!3010 = !DILocation(line: 843, column: 20, scope: !3001)
!3011 = distinct !{!3011, !2996, !3012}
!3012 = !DILocation(line: 844, column: 9, scope: !2997)
!3013 = !DILocation(line: 845, column: 5, scope: !2997)
!3014 = !DILocation(line: 846, column: 15, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !2993, file: !3, line: 846, column: 15)
!3016 = !DILocation(line: 846, column: 21, scope: !3015)
!3017 = !DILocation(line: 846, column: 15, scope: !2993)
!3018 = !DILocation(line: 848, column: 9, scope: !3019)
!3019 = distinct !DILexicalBlock(scope: !3015, file: !3, line: 847, column: 5)
!3020 = !DILocation(line: 848, column: 16, scope: !3019)
!3021 = !DILocalVariable(name: "charInd", scope: !3022, file: !3, line: 850, type: !42)
!3022 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 849, column: 9)
!3023 = !DILocation(line: 850, column: 32, scope: !3022)
!3024 = !DILocation(line: 850, column: 43, scope: !3022)
!3025 = !DILocation(line: 850, column: 50, scope: !3022)
!3026 = !DILocation(line: 850, column: 42, scope: !3022)
!3027 = !DILocation(line: 851, column: 44, scope: !3022)
!3028 = !DILocation(line: 851, column: 34, scope: !3022)
!3029 = !DILocation(line: 851, column: 28, scope: !3022)
!3030 = !DILocation(line: 851, column: 13, scope: !3022)
!3031 = !DILocation(line: 851, column: 32, scope: !3022)
!3032 = !DILocation(line: 852, column: 20, scope: !3022)
!3033 = distinct !{!3033, !3018, !3034}
!3034 = !DILocation(line: 853, column: 9, scope: !3019)
!3035 = !DILocation(line: 854, column: 5, scope: !3019)
!3036 = !DILocation(line: 855, column: 16, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !3015, file: !3, line: 855, column: 15)
!3038 = !DILocation(line: 855, column: 22, scope: !3037)
!3039 = !DILocation(line: 855, column: 28, scope: !3037)
!3040 = !DILocation(line: 855, column: 32, scope: !3037)
!3041 = !DILocation(line: 855, column: 38, scope: !3037)
!3042 = !DILocation(line: 855, column: 15, scope: !3015)
!3043 = !DILocation(line: 857, column: 9, scope: !3044)
!3044 = distinct !DILexicalBlock(scope: !3037, file: !3, line: 856, column: 5)
!3045 = !DILocation(line: 857, column: 16, scope: !3044)
!3046 = !DILocalVariable(name: "charInd", scope: !3047, file: !3, line: 859, type: !42)
!3047 = distinct !DILexicalBlock(scope: !3044, file: !3, line: 858, column: 9)
!3048 = !DILocation(line: 859, column: 32, scope: !3047)
!3049 = !DILocation(line: 859, column: 43, scope: !3047)
!3050 = !DILocation(line: 859, column: 52, scope: !3047)
!3051 = !DILocation(line: 859, column: 50, scope: !3047)
!3052 = !DILocation(line: 860, column: 44, scope: !3047)
!3053 = !DILocation(line: 860, column: 34, scope: !3047)
!3054 = !DILocation(line: 860, column: 28, scope: !3047)
!3055 = !DILocation(line: 860, column: 13, scope: !3047)
!3056 = !DILocation(line: 860, column: 32, scope: !3047)
!3057 = !DILocation(line: 861, column: 23, scope: !3047)
!3058 = !DILocation(line: 861, column: 20, scope: !3047)
!3059 = distinct !{!3059, !3043, !3060}
!3060 = !DILocation(line: 862, column: 9, scope: !3044)
!3061 = !DILocation(line: 863, column: 5, scope: !3044)
!3062 = !DILocation(line: 866, column: 9, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3037, file: !3, line: 865, column: 5)
!3064 = !DILocation(line: 882, column: 1, scope: !3063)
!3065 = !DILocation(line: 870, column: 9, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !903, file: !3, line: 870, column: 9)
!3067 = !DILocation(line: 870, column: 20, scope: !3066)
!3068 = !DILocation(line: 870, column: 18, scope: !3066)
!3069 = !DILocation(line: 870, column: 9, scope: !903)
!3070 = !DILocation(line: 872, column: 9, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 871, column: 5)
!3072 = !DILocation(line: 882, column: 1, scope: !3071)
!3073 = !DILocalVariable(name: "outIndex", scope: !903, file: !3, line: 876, type: !43)
!3074 = !DILocation(line: 876, column: 18, scope: !903)
!3075 = !DILocation(line: 877, column: 5, scope: !903)
!3076 = !DILocation(line: 877, column: 12, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !3078, file: !3, line: 877, column: 5)
!3078 = distinct !DILexicalBlock(scope: !903, file: !3, line: 877, column: 5)
!3079 = !DILocation(line: 877, column: 21, scope: !3077)
!3080 = !DILocation(line: 877, column: 5, scope: !3078)
!3081 = !DILocation(line: 878, column: 37, scope: !3077)
!3082 = !DILocation(line: 878, column: 45, scope: !3077)
!3083 = !DILocation(line: 878, column: 30, scope: !3077)
!3084 = !DILocation(line: 878, column: 9, scope: !3077)
!3085 = !DILocation(line: 878, column: 24, scope: !3077)
!3086 = !DILocation(line: 878, column: 28, scope: !3077)
!3087 = !DILocation(line: 877, column: 34, scope: !3077)
!3088 = !DILocation(line: 877, column: 5, scope: !3077)
!3089 = distinct !{!3089, !3080, !3090}
!3090 = !DILocation(line: 878, column: 47, scope: !3078)
!3091 = !DILocation(line: 881, column: 5, scope: !903)
!3092 = !DILocation(line: 881, column: 12, scope: !903)
!3093 = !DILocation(line: 881, column: 22, scope: !903)
!3094 = !DILocation(line: 882, column: 1, scope: !903)
!3095 = distinct !DISubprogram(name: "binToText", linkageName: "_ZN11xercesc_2_79XMLString9binToTextEjPtjjPNS_13MemoryManagerE", scope: !9, file: !3, line: 884, type: !160, scopeLine: 889, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !159, retainedNodes: !904)
!3096 = !DILocalVariable(name: "toFormat", arg: 1, scope: !3095, file: !3, line: 884, type: !42)
!3097 = !DILocation(line: 884, column: 53, scope: !3095)
!3098 = !DILocalVariable(name: "toFill", arg: 2, scope: !3095, file: !3, line: 885, type: !23)
!3099 = !DILocation(line: 885, column: 53, scope: !3095)
!3100 = !DILocalVariable(name: "maxChars", arg: 3, scope: !3095, file: !3, line: 886, type: !42)
!3101 = !DILocation(line: 886, column: 53, scope: !3095)
!3102 = !DILocalVariable(name: "radix", arg: 4, scope: !3095, file: !3, line: 887, type: !42)
!3103 = !DILocation(line: 887, column: 53, scope: !3095)
!3104 = !DILocalVariable(name: "manager", arg: 5, scope: !3095, file: !3, line: 888, type: !71)
!3105 = !DILocation(line: 888, column: 53, scope: !3095)
!3106 = !DILocation(line: 891, column: 30, scope: !3095)
!3107 = !DILocation(line: 891, column: 40, scope: !3095)
!3108 = !DILocation(line: 891, column: 48, scope: !3095)
!3109 = !DILocation(line: 891, column: 58, scope: !3095)
!3110 = !DILocation(line: 891, column: 65, scope: !3095)
!3111 = !DILocation(line: 891, column: 5, scope: !3095)
!3112 = !DILocation(line: 892, column: 1, scope: !3095)
!3113 = distinct !DISubprogram(name: "binToText", linkageName: "_ZN11xercesc_2_79XMLString9binToTextElPtjjPNS_13MemoryManagerE", scope: !9, file: !3, line: 894, type: !176, scopeLine: 899, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !175, retainedNodes: !904)
!3114 = !DILocalVariable(name: "toFormat", arg: 1, scope: !3113, file: !3, line: 894, type: !173)
!3115 = !DILocation(line: 894, column: 53, scope: !3113)
!3116 = !DILocalVariable(name: "toFill", arg: 2, scope: !3113, file: !3, line: 895, type: !23)
!3117 = !DILocation(line: 895, column: 53, scope: !3113)
!3118 = !DILocalVariable(name: "maxChars", arg: 3, scope: !3113, file: !3, line: 896, type: !42)
!3119 = !DILocation(line: 896, column: 53, scope: !3113)
!3120 = !DILocalVariable(name: "radix", arg: 4, scope: !3113, file: !3, line: 897, type: !42)
!3121 = !DILocation(line: 897, column: 53, scope: !3113)
!3122 = !DILocalVariable(name: "manager", arg: 5, scope: !3113, file: !3, line: 898, type: !71)
!3123 = !DILocation(line: 898, column: 53, scope: !3113)
!3124 = !DILocalVariable(name: "startInd", scope: !3113, file: !3, line: 904, type: !43)
!3125 = !DILocation(line: 904, column: 18, scope: !3113)
!3126 = !DILocalVariable(name: "actualVal", scope: !3113, file: !3, line: 905, type: !166)
!3127 = !DILocation(line: 905, column: 19, scope: !3113)
!3128 = !DILocation(line: 906, column: 9, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3113, file: !3, line: 906, column: 9)
!3130 = !DILocation(line: 906, column: 18, scope: !3129)
!3131 = !DILocation(line: 906, column: 9, scope: !3113)
!3132 = !DILocation(line: 908, column: 9, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 907, column: 5)
!3134 = !DILocation(line: 908, column: 19, scope: !3133)
!3135 = !DILocation(line: 909, column: 17, scope: !3133)
!3136 = !DILocation(line: 910, column: 37, scope: !3133)
!3137 = !DILocation(line: 910, column: 46, scope: !3133)
!3138 = !DILocation(line: 910, column: 19, scope: !3133)
!3139 = !DILocation(line: 911, column: 5, scope: !3133)
!3140 = !DILocation(line: 914, column: 37, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 913, column: 5)
!3142 = !DILocation(line: 914, column: 19, scope: !3141)
!3143 = !DILocation(line: 918, column: 15, scope: !3113)
!3144 = !DILocation(line: 918, column: 27, scope: !3113)
!3145 = !DILocation(line: 918, column: 34, scope: !3113)
!3146 = !DILocation(line: 918, column: 45, scope: !3113)
!3147 = !DILocation(line: 918, column: 55, scope: !3113)
!3148 = !DILocation(line: 918, column: 62, scope: !3113)
!3149 = !DILocation(line: 918, column: 5, scope: !3113)
!3150 = !DILocation(line: 919, column: 1, scope: !3113)
!3151 = distinct !DISubprogram(name: "binToText", linkageName: "_ZN11xercesc_2_79XMLString9binToTextEiPtjjPNS_13MemoryManagerE", scope: !9, file: !3, line: 921, type: !182, scopeLine: 926, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !181, retainedNodes: !904)
!3152 = !DILocalVariable(name: "toFormat", arg: 1, scope: !3151, file: !3, line: 921, type: !61)
!3153 = !DILocation(line: 921, column: 53, scope: !3151)
!3154 = !DILocalVariable(name: "toFill", arg: 2, scope: !3151, file: !3, line: 922, type: !23)
!3155 = !DILocation(line: 922, column: 53, scope: !3151)
!3156 = !DILocalVariable(name: "maxChars", arg: 3, scope: !3151, file: !3, line: 923, type: !42)
!3157 = !DILocation(line: 923, column: 53, scope: !3151)
!3158 = !DILocalVariable(name: "radix", arg: 4, scope: !3151, file: !3, line: 924, type: !42)
!3159 = !DILocation(line: 924, column: 53, scope: !3151)
!3160 = !DILocalVariable(name: "manager", arg: 5, scope: !3151, file: !3, line: 925, type: !71)
!3161 = !DILocation(line: 925, column: 53, scope: !3151)
!3162 = !DILocalVariable(name: "startInd", scope: !3151, file: !3, line: 931, type: !43)
!3163 = !DILocation(line: 931, column: 18, scope: !3151)
!3164 = !DILocalVariable(name: "actualVal", scope: !3151, file: !3, line: 932, type: !166)
!3165 = !DILocation(line: 932, column: 19, scope: !3151)
!3166 = !DILocation(line: 933, column: 9, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3151, file: !3, line: 933, column: 9)
!3168 = !DILocation(line: 933, column: 18, scope: !3167)
!3169 = !DILocation(line: 933, column: 9, scope: !3151)
!3170 = !DILocation(line: 935, column: 9, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3167, file: !3, line: 934, column: 5)
!3172 = !DILocation(line: 935, column: 19, scope: !3171)
!3173 = !DILocation(line: 936, column: 17, scope: !3171)
!3174 = !DILocation(line: 937, column: 37, scope: !3171)
!3175 = !DILocation(line: 937, column: 46, scope: !3171)
!3176 = !DILocation(line: 937, column: 36, scope: !3171)
!3177 = !DILocation(line: 937, column: 19, scope: !3171)
!3178 = !DILocation(line: 938, column: 5, scope: !3171)
!3179 = !DILocation(line: 941, column: 37, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3167, file: !3, line: 940, column: 5)
!3181 = !DILocation(line: 941, column: 36, scope: !3180)
!3182 = !DILocation(line: 941, column: 19, scope: !3180)
!3183 = !DILocation(line: 945, column: 15, scope: !3151)
!3184 = !DILocation(line: 945, column: 27, scope: !3151)
!3185 = !DILocation(line: 945, column: 34, scope: !3151)
!3186 = !DILocation(line: 945, column: 45, scope: !3151)
!3187 = !DILocation(line: 945, column: 55, scope: !3151)
!3188 = !DILocation(line: 945, column: 62, scope: !3151)
!3189 = !DILocation(line: 945, column: 5, scope: !3151)
!3190 = !DILocation(line: 946, column: 1, scope: !3151)
!3191 = distinct !DISubprogram(name: "catString", linkageName: "_ZN11xercesc_2_79XMLString9catStringEPtPKt", scope: !9, file: !3, line: 949, type: !21, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !20, retainedNodes: !904)
!3192 = !DILocalVariable(name: "target", arg: 1, scope: !3191, file: !3, line: 949, type: !23)
!3193 = !DILocation(line: 949, column: 40, scope: !3191)
!3194 = !DILocalVariable(name: "src", arg: 2, scope: !3191, file: !3, line: 949, type: !28)
!3195 = !DILocation(line: 949, column: 67, scope: !3191)
!3196 = !DILocalVariable(name: "index", scope: !3191, file: !3, line: 952, type: !43)
!3197 = !DILocation(line: 952, column: 18, scope: !3191)
!3198 = !DILocation(line: 952, column: 36, scope: !3191)
!3199 = !DILocation(line: 952, column: 26, scope: !3191)
!3200 = !DILocalVariable(name: "pszTmp", scope: !3191, file: !3, line: 955, type: !29)
!3201 = !DILocation(line: 955, column: 18, scope: !3191)
!3202 = !DILocation(line: 955, column: 27, scope: !3191)
!3203 = !DILocation(line: 956, column: 5, scope: !3191)
!3204 = !DILocation(line: 956, column: 13, scope: !3191)
!3205 = !DILocation(line: 956, column: 12, scope: !3191)
!3206 = !DILocation(line: 957, column: 34, scope: !3191)
!3207 = !DILocation(line: 957, column: 27, scope: !3191)
!3208 = !DILocation(line: 957, column: 9, scope: !3191)
!3209 = !DILocation(line: 957, column: 21, scope: !3191)
!3210 = !DILocation(line: 957, column: 25, scope: !3191)
!3211 = distinct !{!3211, !3203, !3206}
!3212 = !DILocation(line: 960, column: 5, scope: !3191)
!3213 = !DILocation(line: 960, column: 12, scope: !3191)
!3214 = !DILocation(line: 960, column: 19, scope: !3191)
!3215 = !DILocation(line: 961, column: 1, scope: !3191)
!3216 = distinct !DISubprogram(name: "compareIString", linkageName: "_ZN11xercesc_2_79XMLString14compareIStringEPKtS2_", scope: !9, file: !3, line: 964, type: !36, scopeLine: 966, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !35, retainedNodes: !904)
!3217 = !DILocalVariable(name: "str1", arg: 1, scope: !3216, file: !3, line: 964, type: !28)
!3218 = !DILocation(line: 964, column: 57, scope: !3216)
!3219 = !DILocalVariable(name: "str2", arg: 2, scope: !3216, file: !3, line: 965, type: !28)
!3220 = !DILocation(line: 965, column: 57, scope: !3216)
!3221 = !DILocation(line: 968, column: 12, scope: !3216)
!3222 = !DILocation(line: 968, column: 61, scope: !3216)
!3223 = !DILocation(line: 968, column: 67, scope: !3216)
!3224 = !DILocation(line: 968, column: 46, scope: !3216)
!3225 = !DILocation(line: 968, column: 5, scope: !3216)
!3226 = distinct !DISubprogram(name: "compareIStringASCII", linkageName: "_ZN11xercesc_2_79XMLString19compareIStringASCIIEPKtS2_", scope: !9, file: !3, line: 971, type: !36, scopeLine: 973, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !38, retainedNodes: !904)
!3227 = !DILocalVariable(name: "str1", arg: 1, scope: !3226, file: !3, line: 971, type: !28)
!3228 = !DILocation(line: 971, column: 62, scope: !3226)
!3229 = !DILocalVariable(name: "str2", arg: 2, scope: !3226, file: !3, line: 972, type: !28)
!3230 = !DILocation(line: 972, column: 62, scope: !3226)
!3231 = !DILocalVariable(name: "psz1", scope: !3226, file: !3, line: 974, type: !29)
!3232 = !DILocation(line: 974, column: 18, scope: !3226)
!3233 = !DILocation(line: 974, column: 25, scope: !3226)
!3234 = !DILocalVariable(name: "psz2", scope: !3226, file: !3, line: 975, type: !29)
!3235 = !DILocation(line: 975, column: 18, scope: !3226)
!3236 = !DILocation(line: 975, column: 25, scope: !3226)
!3237 = !DILocation(line: 977, column: 9, scope: !3238)
!3238 = distinct !DILexicalBlock(scope: !3226, file: !3, line: 977, column: 9)
!3239 = !DILocation(line: 977, column: 14, scope: !3238)
!3240 = !DILocation(line: 977, column: 19, scope: !3238)
!3241 = !DILocation(line: 977, column: 22, scope: !3238)
!3242 = !DILocation(line: 977, column: 27, scope: !3238)
!3243 = !DILocation(line: 977, column: 9, scope: !3226)
!3244 = !DILocation(line: 979, column: 13, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 979, column: 13)
!3246 = distinct !DILexicalBlock(scope: !3238, file: !3, line: 977, column: 33)
!3247 = !DILocation(line: 979, column: 18, scope: !3245)
!3248 = !DILocation(line: 979, column: 13, scope: !3246)
!3249 = !DILocation(line: 980, column: 45, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3245, file: !3, line: 979, column: 24)
!3251 = !DILocation(line: 980, column: 24, scope: !3250)
!3252 = !DILocation(line: 980, column: 22, scope: !3250)
!3253 = !DILocation(line: 980, column: 13, scope: !3250)
!3254 = !DILocation(line: 982, column: 12, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3245, file: !3, line: 982, column: 12)
!3256 = !DILocation(line: 982, column: 17, scope: !3255)
!3257 = !DILocation(line: 982, column: 12, scope: !3245)
!3258 = !DILocation(line: 983, column: 41, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3255, file: !3, line: 982, column: 23)
!3260 = !DILocation(line: 983, column: 20, scope: !3259)
!3261 = !DILocation(line: 983, column: 13, scope: !3259)
!3262 = !DILocation(line: 985, column: 5, scope: !3246)
!3263 = !DILocalVariable(name: "ch1", scope: !3226, file: !3, line: 987, type: !25)
!3264 = !DILocation(line: 987, column: 11, scope: !3226)
!3265 = !DILocalVariable(name: "ch2", scope: !3226, file: !3, line: 988, type: !25)
!3266 = !DILocation(line: 988, column: 11, scope: !3226)
!3267 = !DILocation(line: 990, column: 5, scope: !3226)
!3268 = !DILocation(line: 991, column: 14, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 991, column: 13)
!3270 = distinct !DILexicalBlock(scope: !3226, file: !3, line: 990, column: 18)
!3271 = !DILocation(line: 991, column: 13, scope: !3269)
!3272 = !DILocation(line: 991, column: 19, scope: !3269)
!3273 = !DILocation(line: 991, column: 32, scope: !3269)
!3274 = !DILocation(line: 991, column: 36, scope: !3269)
!3275 = !DILocation(line: 991, column: 35, scope: !3269)
!3276 = !DILocation(line: 991, column: 41, scope: !3269)
!3277 = !DILocation(line: 991, column: 13, scope: !3270)
!3278 = !DILocation(line: 992, column: 20, scope: !3269)
!3279 = !DILocation(line: 992, column: 19, scope: !3269)
!3280 = !DILocation(line: 992, column: 25, scope: !3269)
!3281 = !DILocation(line: 992, column: 37, scope: !3269)
!3282 = !DILocation(line: 992, column: 17, scope: !3269)
!3283 = !DILocation(line: 992, column: 13, scope: !3269)
!3284 = !DILocation(line: 994, column: 20, scope: !3269)
!3285 = !DILocation(line: 994, column: 19, scope: !3269)
!3286 = !DILocation(line: 994, column: 17, scope: !3269)
!3287 = !DILocation(line: 995, column: 14, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 995, column: 13)
!3289 = !DILocation(line: 995, column: 13, scope: !3288)
!3290 = !DILocation(line: 995, column: 19, scope: !3288)
!3291 = !DILocation(line: 995, column: 32, scope: !3288)
!3292 = !DILocation(line: 995, column: 36, scope: !3288)
!3293 = !DILocation(line: 995, column: 35, scope: !3288)
!3294 = !DILocation(line: 995, column: 41, scope: !3288)
!3295 = !DILocation(line: 995, column: 13, scope: !3270)
!3296 = !DILocation(line: 996, column: 20, scope: !3288)
!3297 = !DILocation(line: 996, column: 19, scope: !3288)
!3298 = !DILocation(line: 996, column: 25, scope: !3288)
!3299 = !DILocation(line: 996, column: 37, scope: !3288)
!3300 = !DILocation(line: 996, column: 17, scope: !3288)
!3301 = !DILocation(line: 996, column: 13, scope: !3288)
!3302 = !DILocation(line: 998, column: 20, scope: !3288)
!3303 = !DILocation(line: 998, column: 19, scope: !3288)
!3304 = !DILocation(line: 998, column: 17, scope: !3288)
!3305 = !DILocation(line: 1001, column: 13, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 1001, column: 13)
!3307 = !DILocation(line: 1001, column: 20, scope: !3306)
!3308 = !DILocation(line: 1001, column: 17, scope: !3306)
!3309 = !DILocation(line: 1001, column: 13, scope: !3270)
!3310 = !DILocation(line: 1002, column: 24, scope: !3306)
!3311 = !DILocation(line: 1002, column: 35, scope: !3306)
!3312 = !DILocation(line: 1002, column: 29, scope: !3306)
!3313 = !DILocation(line: 1002, column: 13, scope: !3306)
!3314 = !DILocation(line: 1005, column: 14, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 1005, column: 13)
!3316 = !DILocation(line: 1005, column: 13, scope: !3270)
!3317 = !DILocation(line: 1006, column: 13, scope: !3315)
!3318 = !DILocation(line: 1009, column: 13, scope: !3270)
!3319 = !DILocation(line: 1010, column: 13, scope: !3270)
!3320 = distinct !{!3320, !3267, !3321}
!3321 = !DILocation(line: 1011, column: 5, scope: !3226)
!3322 = !DILocation(line: 1012, column: 5, scope: !3226)
!3323 = !DILocation(line: 1013, column: 1, scope: !3226)
!3324 = distinct !DISubprogram(name: "compareNString", linkageName: "_ZN11xercesc_2_79XMLString14compareNStringEPKtS2_j", scope: !9, file: !3, line: 1015, type: !45, scopeLine: 1018, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !44, retainedNodes: !904)
!3325 = !DILocalVariable(name: "str1", arg: 1, scope: !3324, file: !3, line: 1015, type: !28)
!3326 = !DILocation(line: 1015, column: 57, scope: !3324)
!3327 = !DILocalVariable(name: "str2", arg: 2, scope: !3324, file: !3, line: 1016, type: !28)
!3328 = !DILocation(line: 1016, column: 57, scope: !3324)
!3329 = !DILocalVariable(name: "maxChars", arg: 3, scope: !3324, file: !3, line: 1017, type: !42)
!3330 = !DILocation(line: 1017, column: 57, scope: !3324)
!3331 = !DILocalVariable(name: "psz1", scope: !3324, file: !3, line: 1019, type: !29)
!3332 = !DILocation(line: 1019, column: 18, scope: !3324)
!3333 = !DILocation(line: 1019, column: 25, scope: !3324)
!3334 = !DILocalVariable(name: "psz2", scope: !3324, file: !3, line: 1020, type: !29)
!3335 = !DILocation(line: 1020, column: 18, scope: !3324)
!3336 = !DILocation(line: 1020, column: 25, scope: !3324)
!3337 = !DILocalVariable(name: "curCount", scope: !3324, file: !3, line: 1022, type: !43)
!3338 = !DILocation(line: 1022, column: 18, scope: !3324)
!3339 = !DILocation(line: 1023, column: 5, scope: !3324)
!3340 = !DILocation(line: 1023, column: 12, scope: !3324)
!3341 = !DILocation(line: 1023, column: 23, scope: !3324)
!3342 = !DILocation(line: 1023, column: 21, scope: !3324)
!3343 = !DILocation(line: 1026, column: 14, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 1026, column: 13)
!3345 = distinct !DILexicalBlock(scope: !3324, file: !3, line: 1024, column: 5)
!3346 = !DILocation(line: 1026, column: 13, scope: !3344)
!3347 = !DILocation(line: 1026, column: 23, scope: !3344)
!3348 = !DILocation(line: 1026, column: 22, scope: !3344)
!3349 = !DILocation(line: 1026, column: 19, scope: !3344)
!3350 = !DILocation(line: 1026, column: 13, scope: !3345)
!3351 = !DILocation(line: 1027, column: 25, scope: !3344)
!3352 = !DILocation(line: 1027, column: 24, scope: !3344)
!3353 = !DILocation(line: 1027, column: 38, scope: !3344)
!3354 = !DILocation(line: 1027, column: 37, scope: !3344)
!3355 = !DILocation(line: 1027, column: 31, scope: !3344)
!3356 = !DILocation(line: 1027, column: 13, scope: !3344)
!3357 = !DILocation(line: 1030, column: 15, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 1030, column: 13)
!3359 = !DILocation(line: 1030, column: 14, scope: !3358)
!3360 = !DILocation(line: 1030, column: 13, scope: !3345)
!3361 = !DILocation(line: 1031, column: 13, scope: !3358)
!3362 = !DILocation(line: 1034, column: 13, scope: !3345)
!3363 = !DILocation(line: 1035, column: 13, scope: !3345)
!3364 = !DILocation(line: 1040, column: 17, scope: !3345)
!3365 = distinct !{!3365, !3339, !3366}
!3366 = !DILocation(line: 1041, column: 5, scope: !3324)
!3367 = !DILocation(line: 1043, column: 5, scope: !3324)
!3368 = !DILocation(line: 1044, column: 1, scope: !3324)
!3369 = distinct !DISubprogram(name: "compareNIString", linkageName: "_ZN11xercesc_2_79XMLString15compareNIStringEPKtS2_j", scope: !9, file: !3, line: 1047, type: !45, scopeLine: 1050, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !48, retainedNodes: !904)
!3370 = !DILocalVariable(name: "str1", arg: 1, scope: !3369, file: !3, line: 1047, type: !28)
!3371 = !DILocation(line: 1047, column: 57, scope: !3369)
!3372 = !DILocalVariable(name: "str2", arg: 2, scope: !3369, file: !3, line: 1048, type: !28)
!3373 = !DILocation(line: 1048, column: 57, scope: !3369)
!3374 = !DILocalVariable(name: "maxChars", arg: 3, scope: !3369, file: !3, line: 1049, type: !42)
!3375 = !DILocation(line: 1049, column: 57, scope: !3369)
!3376 = !DILocation(line: 1052, column: 12, scope: !3369)
!3377 = !DILocation(line: 1052, column: 62, scope: !3369)
!3378 = !DILocation(line: 1052, column: 68, scope: !3369)
!3379 = !DILocation(line: 1052, column: 74, scope: !3369)
!3380 = !DILocation(line: 1052, column: 46, scope: !3369)
!3381 = !DILocation(line: 1052, column: 5, scope: !3369)
!3382 = distinct !DISubprogram(name: "compareString", linkageName: "_ZN11xercesc_2_79XMLString13compareStringEPKtS2_", scope: !9, file: !3, line: 1056, type: !36, scopeLine: 1058, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !50, retainedNodes: !904)
!3383 = !DILocalVariable(name: "str1", arg: 1, scope: !3382, file: !3, line: 1056, type: !28)
!3384 = !DILocation(line: 1056, column: 57, scope: !3382)
!3385 = !DILocalVariable(name: "str2", arg: 2, scope: !3382, file: !3, line: 1057, type: !28)
!3386 = !DILocation(line: 1057, column: 57, scope: !3382)
!3387 = !DILocalVariable(name: "psz1", scope: !3382, file: !3, line: 1059, type: !29)
!3388 = !DILocation(line: 1059, column: 18, scope: !3382)
!3389 = !DILocation(line: 1059, column: 25, scope: !3382)
!3390 = !DILocalVariable(name: "psz2", scope: !3382, file: !3, line: 1060, type: !29)
!3391 = !DILocation(line: 1060, column: 18, scope: !3382)
!3392 = !DILocation(line: 1060, column: 25, scope: !3382)
!3393 = !DILocation(line: 1062, column: 9, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3382, file: !3, line: 1062, column: 9)
!3395 = !DILocation(line: 1062, column: 14, scope: !3394)
!3396 = !DILocation(line: 1062, column: 19, scope: !3394)
!3397 = !DILocation(line: 1062, column: 22, scope: !3394)
!3398 = !DILocation(line: 1062, column: 27, scope: !3394)
!3399 = !DILocation(line: 1062, column: 9, scope: !3382)
!3400 = !DILocation(line: 1064, column: 13, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3402, file: !3, line: 1064, column: 13)
!3402 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 1062, column: 33)
!3403 = !DILocation(line: 1064, column: 18, scope: !3401)
!3404 = !DILocation(line: 1064, column: 13, scope: !3402)
!3405 = !DILocation(line: 1065, column: 45, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3401, file: !3, line: 1064, column: 24)
!3407 = !DILocation(line: 1065, column: 24, scope: !3406)
!3408 = !DILocation(line: 1065, column: 22, scope: !3406)
!3409 = !DILocation(line: 1065, column: 13, scope: !3406)
!3410 = !DILocation(line: 1067, column: 12, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3401, file: !3, line: 1067, column: 12)
!3412 = !DILocation(line: 1067, column: 17, scope: !3411)
!3413 = !DILocation(line: 1067, column: 12, scope: !3401)
!3414 = !DILocation(line: 1068, column: 41, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 1067, column: 23)
!3416 = !DILocation(line: 1068, column: 20, scope: !3415)
!3417 = !DILocation(line: 1068, column: 13, scope: !3415)
!3418 = !DILocation(line: 1070, column: 5, scope: !3402)
!3419 = !DILocation(line: 1072, column: 5, scope: !3382)
!3420 = !DILocation(line: 1075, column: 14, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3422, file: !3, line: 1075, column: 13)
!3422 = distinct !DILexicalBlock(scope: !3382, file: !3, line: 1073, column: 5)
!3423 = !DILocation(line: 1075, column: 13, scope: !3421)
!3424 = !DILocation(line: 1075, column: 23, scope: !3421)
!3425 = !DILocation(line: 1075, column: 22, scope: !3421)
!3426 = !DILocation(line: 1075, column: 19, scope: !3421)
!3427 = !DILocation(line: 1075, column: 13, scope: !3422)
!3428 = !DILocation(line: 1076, column: 25, scope: !3421)
!3429 = !DILocation(line: 1076, column: 24, scope: !3421)
!3430 = !DILocation(line: 1076, column: 38, scope: !3421)
!3431 = !DILocation(line: 1076, column: 37, scope: !3421)
!3432 = !DILocation(line: 1076, column: 31, scope: !3421)
!3433 = !DILocation(line: 1076, column: 13, scope: !3421)
!3434 = !DILocation(line: 1079, column: 15, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3422, file: !3, line: 1079, column: 13)
!3436 = !DILocation(line: 1079, column: 14, scope: !3435)
!3437 = !DILocation(line: 1079, column: 13, scope: !3422)
!3438 = !DILocation(line: 1080, column: 13, scope: !3435)
!3439 = !DILocation(line: 1083, column: 13, scope: !3422)
!3440 = !DILocation(line: 1084, column: 13, scope: !3422)
!3441 = distinct !{!3441, !3419, !3442}
!3442 = !DILocation(line: 1085, column: 5, scope: !3382)
!3443 = !DILocation(line: 1086, column: 5, scope: !3382)
!3444 = !DILocation(line: 1087, column: 1, scope: !3382)
!3445 = distinct !DISubprogram(name: "regionMatches", linkageName: "_ZN11xercesc_2_79XMLString13regionMatchesEPKtiS2_ij", scope: !9, file: !3, line: 1090, type: !59, scopeLine: 1095, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !58, retainedNodes: !904)
!3446 = !DILocalVariable(name: "str1", arg: 1, scope: !3445, file: !3, line: 1090, type: !28)
!3447 = !DILocation(line: 1090, column: 52, scope: !3445)
!3448 = !DILocalVariable(name: "offset1", arg: 2, scope: !3445, file: !3, line: 1091, type: !61)
!3449 = !DILocation(line: 1091, column: 24, scope: !3445)
!3450 = !DILocalVariable(name: "str2", arg: 3, scope: !3445, file: !3, line: 1092, type: !28)
!3451 = !DILocation(line: 1092, column: 31, scope: !3445)
!3452 = !DILocalVariable(name: "offset2", arg: 4, scope: !3445, file: !3, line: 1093, type: !61)
!3453 = !DILocation(line: 1093, column: 24, scope: !3445)
!3454 = !DILocalVariable(name: "charCount", arg: 5, scope: !3445, file: !3, line: 1094, type: !42)
!3455 = !DILocation(line: 1094, column: 31, scope: !3445)
!3456 = !DILocation(line: 1096, column: 22, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 1096, column: 6)
!3458 = !DILocation(line: 1096, column: 28, scope: !3457)
!3459 = !DILocation(line: 1096, column: 36, scope: !3457)
!3460 = !DILocation(line: 1096, column: 42, scope: !3457)
!3461 = !DILocation(line: 1096, column: 51, scope: !3457)
!3462 = !DILocation(line: 1096, column: 7, scope: !3457)
!3463 = !DILocation(line: 1096, column: 6, scope: !3445)
!3464 = !DILocation(line: 1097, column: 3, scope: !3457)
!3465 = !DILocation(line: 1099, column: 21, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 1099, column: 6)
!3467 = !DILocation(line: 1099, column: 26, scope: !3466)
!3468 = !DILocation(line: 1099, column: 25, scope: !3466)
!3469 = !DILocation(line: 1099, column: 35, scope: !3466)
!3470 = !DILocation(line: 1099, column: 40, scope: !3466)
!3471 = !DILocation(line: 1099, column: 39, scope: !3466)
!3472 = !DILocation(line: 1099, column: 49, scope: !3466)
!3473 = !DILocation(line: 1099, column: 6, scope: !3466)
!3474 = !DILocation(line: 1099, column: 60, scope: !3466)
!3475 = !DILocation(line: 1099, column: 6, scope: !3445)
!3476 = !DILocation(line: 1100, column: 3, scope: !3466)
!3477 = !DILocation(line: 1102, column: 2, scope: !3445)
!3478 = !DILocation(line: 1103, column: 1, scope: !3445)
!3479 = distinct !DISubprogram(name: "validateRegion", linkageName: "_ZN11xercesc_2_79XMLString14validateRegionEPKtiS2_ij", scope: !9, file: !8, line: 1740, type: !59, scopeLine: 1745, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !445, retainedNodes: !904)
!3480 = !DILocalVariable(name: "str1", arg: 1, scope: !3479, file: !8, line: 1740, type: !28)
!3481 = !DILocation(line: 1740, column: 58, scope: !3479)
!3482 = !DILocalVariable(name: "offset1", arg: 2, scope: !3479, file: !8, line: 1741, type: !61)
!3483 = !DILocation(line: 1741, column: 22, scope: !3479)
!3484 = !DILocalVariable(name: "str2", arg: 3, scope: !3479, file: !8, line: 1742, type: !28)
!3485 = !DILocation(line: 1742, column: 31, scope: !3479)
!3486 = !DILocalVariable(name: "offset2", arg: 4, scope: !3479, file: !8, line: 1743, type: !61)
!3487 = !DILocation(line: 1743, column: 22, scope: !3479)
!3488 = !DILocalVariable(name: "charCount", arg: 5, scope: !3479, file: !8, line: 1744, type: !42)
!3489 = !DILocation(line: 1744, column: 31, scope: !3479)
!3490 = !DILocation(line: 1747, column: 6, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3479, file: !8, line: 1747, column: 6)
!3492 = !DILocation(line: 1747, column: 14, scope: !3491)
!3493 = !DILocation(line: 1747, column: 18, scope: !3491)
!3494 = !DILocation(line: 1747, column: 21, scope: !3491)
!3495 = !DILocation(line: 1747, column: 29, scope: !3491)
!3496 = !DILocation(line: 1747, column: 33, scope: !3491)
!3497 = !DILocation(line: 1748, column: 4, scope: !3491)
!3498 = !DILocation(line: 1748, column: 14, scope: !3491)
!3499 = !DILocation(line: 1748, column: 12, scope: !3491)
!3500 = !DILocation(line: 1748, column: 48, scope: !3491)
!3501 = !DILocation(line: 1748, column: 27, scope: !3491)
!3502 = !DILocation(line: 1748, column: 25, scope: !3491)
!3503 = !DILocation(line: 1748, column: 54, scope: !3491)
!3504 = !DILocation(line: 1749, column: 4, scope: !3491)
!3505 = !DILocation(line: 1749, column: 14, scope: !3491)
!3506 = !DILocation(line: 1749, column: 12, scope: !3491)
!3507 = !DILocation(line: 1749, column: 48, scope: !3491)
!3508 = !DILocation(line: 1749, column: 27, scope: !3491)
!3509 = !DILocation(line: 1749, column: 25, scope: !3491)
!3510 = !DILocation(line: 1747, column: 6, scope: !3479)
!3511 = !DILocation(line: 1750, column: 3, scope: !3491)
!3512 = !DILocation(line: 1752, column: 2, scope: !3479)
!3513 = !DILocation(line: 1753, column: 1, scope: !3479)
!3514 = distinct !DISubprogram(name: "regionIMatches", linkageName: "_ZN11xercesc_2_79XMLString14regionIMatchesEPKtiS2_ij", scope: !9, file: !3, line: 1105, type: !59, scopeLine: 1110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !62, retainedNodes: !904)
!3515 = !DILocalVariable(name: "str1", arg: 1, scope: !3514, file: !3, line: 1105, type: !28)
!3516 = !DILocation(line: 1105, column: 53, scope: !3514)
!3517 = !DILocalVariable(name: "offset1", arg: 2, scope: !3514, file: !3, line: 1106, type: !61)
!3518 = !DILocation(line: 1106, column: 26, scope: !3514)
!3519 = !DILocalVariable(name: "str2", arg: 3, scope: !3514, file: !3, line: 1107, type: !28)
!3520 = !DILocation(line: 1107, column: 32, scope: !3514)
!3521 = !DILocalVariable(name: "offset2", arg: 4, scope: !3514, file: !3, line: 1108, type: !61)
!3522 = !DILocation(line: 1108, column: 25, scope: !3514)
!3523 = !DILocalVariable(name: "charCount", arg: 5, scope: !3514, file: !3, line: 1109, type: !42)
!3524 = !DILocation(line: 1109, column: 32, scope: !3514)
!3525 = !DILocation(line: 1111, column: 22, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3514, file: !3, line: 1111, column: 6)
!3527 = !DILocation(line: 1111, column: 28, scope: !3526)
!3528 = !DILocation(line: 1111, column: 36, scope: !3526)
!3529 = !DILocation(line: 1111, column: 42, scope: !3526)
!3530 = !DILocation(line: 1111, column: 51, scope: !3526)
!3531 = !DILocation(line: 1111, column: 7, scope: !3526)
!3532 = !DILocation(line: 1111, column: 6, scope: !3514)
!3533 = !DILocation(line: 1112, column: 3, scope: !3526)
!3534 = !DILocation(line: 1114, column: 22, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3514, file: !3, line: 1114, column: 6)
!3536 = !DILocation(line: 1114, column: 27, scope: !3535)
!3537 = !DILocation(line: 1114, column: 26, scope: !3535)
!3538 = !DILocation(line: 1114, column: 36, scope: !3535)
!3539 = !DILocation(line: 1114, column: 41, scope: !3535)
!3540 = !DILocation(line: 1114, column: 40, scope: !3535)
!3541 = !DILocation(line: 1114, column: 50, scope: !3535)
!3542 = !DILocation(line: 1114, column: 6, scope: !3535)
!3543 = !DILocation(line: 1114, column: 61, scope: !3535)
!3544 = !DILocation(line: 1114, column: 6, scope: !3514)
!3545 = !DILocation(line: 1115, column: 3, scope: !3535)
!3546 = !DILocation(line: 1117, column: 2, scope: !3514)
!3547 = !DILocation(line: 1118, column: 1, scope: !3514)
!3548 = distinct !DISubprogram(name: "copyString", linkageName: "_ZN11xercesc_2_79XMLString10copyStringEPtPKt", scope: !9, file: !3, line: 1120, type: !21, scopeLine: 1121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !64, retainedNodes: !904)
!3549 = !DILocalVariable(name: "target", arg: 1, scope: !3548, file: !3, line: 1120, type: !23)
!3550 = !DILocation(line: 1120, column: 41, scope: !3548)
!3551 = !DILocalVariable(name: "src", arg: 2, scope: !3548, file: !3, line: 1120, type: !28)
!3552 = !DILocation(line: 1120, column: 68, scope: !3548)
!3553 = !DILocation(line: 1122, column: 10, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3548, file: !3, line: 1122, column: 9)
!3555 = !DILocation(line: 1122, column: 9, scope: !3548)
!3556 = !DILocation(line: 1124, column: 10, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 1123, column: 5)
!3558 = !DILocation(line: 1124, column: 17, scope: !3557)
!3559 = !DILocation(line: 1125, column: 9, scope: !3557)
!3560 = !DILocalVariable(name: "pszOut", scope: !3548, file: !3, line: 1128, type: !24)
!3561 = !DILocation(line: 1128, column: 12, scope: !3548)
!3562 = !DILocation(line: 1128, column: 21, scope: !3548)
!3563 = !DILocalVariable(name: "pszIn", scope: !3548, file: !3, line: 1129, type: !29)
!3564 = !DILocation(line: 1129, column: 18, scope: !3548)
!3565 = !DILocation(line: 1129, column: 26, scope: !3548)
!3566 = !DILocation(line: 1130, column: 5, scope: !3548)
!3567 = !DILocation(line: 1130, column: 13, scope: !3548)
!3568 = !DILocation(line: 1130, column: 12, scope: !3548)
!3569 = !DILocation(line: 1131, column: 27, scope: !3548)
!3570 = !DILocation(line: 1131, column: 21, scope: !3548)
!3571 = !DILocation(line: 1131, column: 16, scope: !3548)
!3572 = !DILocation(line: 1131, column: 19, scope: !3548)
!3573 = distinct !{!3573, !3566, !3569}
!3574 = !DILocation(line: 1134, column: 6, scope: !3548)
!3575 = !DILocation(line: 1134, column: 13, scope: !3548)
!3576 = !DILocation(line: 1135, column: 1, scope: !3548)
!3577 = distinct !DISubprogram(name: "findAny", linkageName: "_ZN11xercesc_2_79XMLString7findAnyEPKtS2_", scope: !9, file: !3, line: 1156, type: !127, scopeLine: 1158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !126, retainedNodes: !904)
!3578 = !DILocalVariable(name: "toSearch", arg: 1, scope: !3577, file: !3, line: 1156, type: !28)
!3579 = !DILocation(line: 1156, column: 57, scope: !3577)
!3580 = !DILocalVariable(name: "searchList", arg: 2, scope: !3577, file: !3, line: 1157, type: !28)
!3581 = !DILocation(line: 1157, column: 57, scope: !3577)
!3582 = !DILocalVariable(name: "srcPtr", scope: !3577, file: !3, line: 1159, type: !29)
!3583 = !DILocation(line: 1159, column: 18, scope: !3577)
!3584 = !DILocation(line: 1159, column: 27, scope: !3577)
!3585 = !DILocation(line: 1160, column: 5, scope: !3577)
!3586 = !DILocation(line: 1160, column: 13, scope: !3577)
!3587 = !DILocation(line: 1160, column: 12, scope: !3577)
!3588 = !DILocalVariable(name: "listPtr", scope: !3589, file: !3, line: 1162, type: !29)
!3589 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 1161, column: 5)
!3590 = !DILocation(line: 1162, column: 22, scope: !3589)
!3591 = !DILocation(line: 1162, column: 32, scope: !3589)
!3592 = !DILocalVariable(name: "curCh", scope: !3589, file: !3, line: 1163, type: !30)
!3593 = !DILocation(line: 1163, column: 22, scope: !3589)
!3594 = !DILocation(line: 1163, column: 31, scope: !3589)
!3595 = !DILocation(line: 1163, column: 30, scope: !3589)
!3596 = !DILocation(line: 1165, column: 9, scope: !3589)
!3597 = !DILocation(line: 1165, column: 17, scope: !3589)
!3598 = !DILocation(line: 1165, column: 16, scope: !3589)
!3599 = !DILocation(line: 1167, column: 17, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3601, file: !3, line: 1167, column: 17)
!3601 = distinct !DILexicalBlock(scope: !3589, file: !3, line: 1166, column: 9)
!3602 = !DILocation(line: 1167, column: 34, scope: !3600)
!3603 = !DILocation(line: 1167, column: 26, scope: !3600)
!3604 = !DILocation(line: 1167, column: 23, scope: !3600)
!3605 = !DILocation(line: 1167, column: 17, scope: !3601)
!3606 = !DILocation(line: 1168, column: 24, scope: !3600)
!3607 = !DILocation(line: 1168, column: 17, scope: !3600)
!3608 = distinct !{!3608, !3596, !3609}
!3609 = !DILocation(line: 1169, column: 9, scope: !3589)
!3610 = !DILocation(line: 1170, column: 15, scope: !3589)
!3611 = distinct !{!3611, !3585, !3612}
!3612 = !DILocation(line: 1171, column: 5, scope: !3577)
!3613 = !DILocation(line: 1172, column: 5, scope: !3577)
!3614 = !DILocation(line: 1173, column: 1, scope: !3577)
!3615 = distinct !DISubprogram(name: "findAny", linkageName: "_ZN11xercesc_2_79XMLString7findAnyEPtPKt", scope: !9, file: !3, line: 1175, type: !130, scopeLine: 1177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !129, retainedNodes: !904)
!3616 = !DILocalVariable(name: "toSearch", arg: 1, scope: !3615, file: !3, line: 1175, type: !23)
!3617 = !DILocation(line: 1175, column: 53, scope: !3615)
!3618 = !DILocalVariable(name: "searchList", arg: 2, scope: !3615, file: !3, line: 1176, type: !28)
!3619 = !DILocation(line: 1176, column: 53, scope: !3615)
!3620 = !DILocalVariable(name: "srcPtr", scope: !3615, file: !3, line: 1178, type: !24)
!3621 = !DILocation(line: 1178, column: 12, scope: !3615)
!3622 = !DILocation(line: 1178, column: 21, scope: !3615)
!3623 = !DILocation(line: 1179, column: 5, scope: !3615)
!3624 = !DILocation(line: 1179, column: 13, scope: !3615)
!3625 = !DILocation(line: 1179, column: 12, scope: !3615)
!3626 = !DILocalVariable(name: "listPtr", scope: !3627, file: !3, line: 1181, type: !29)
!3627 = distinct !DILexicalBlock(scope: !3615, file: !3, line: 1180, column: 5)
!3628 = !DILocation(line: 1181, column: 22, scope: !3627)
!3629 = !DILocation(line: 1181, column: 32, scope: !3627)
!3630 = !DILocalVariable(name: "curCh", scope: !3627, file: !3, line: 1182, type: !30)
!3631 = !DILocation(line: 1182, column: 22, scope: !3627)
!3632 = !DILocation(line: 1182, column: 31, scope: !3627)
!3633 = !DILocation(line: 1182, column: 30, scope: !3627)
!3634 = !DILocation(line: 1184, column: 9, scope: !3627)
!3635 = !DILocation(line: 1184, column: 17, scope: !3627)
!3636 = !DILocation(line: 1184, column: 16, scope: !3627)
!3637 = !DILocation(line: 1186, column: 17, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3639, file: !3, line: 1186, column: 17)
!3639 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 1185, column: 9)
!3640 = !DILocation(line: 1186, column: 34, scope: !3638)
!3641 = !DILocation(line: 1186, column: 26, scope: !3638)
!3642 = !DILocation(line: 1186, column: 23, scope: !3638)
!3643 = !DILocation(line: 1186, column: 17, scope: !3639)
!3644 = !DILocation(line: 1187, column: 24, scope: !3638)
!3645 = !DILocation(line: 1187, column: 17, scope: !3638)
!3646 = distinct !{!3646, !3634, !3647}
!3647 = !DILocation(line: 1188, column: 9, scope: !3627)
!3648 = !DILocation(line: 1189, column: 15, scope: !3627)
!3649 = distinct !{!3649, !3623, !3650}
!3650 = !DILocation(line: 1190, column: 5, scope: !3615)
!3651 = !DILocation(line: 1191, column: 5, scope: !3615)
!3652 = !DILocation(line: 1192, column: 1, scope: !3615)
!3653 = distinct !DISubprogram(name: "patternMatch", linkageName: "_ZN11xercesc_2_79XMLString12patternMatchEPKtS2_", scope: !9, file: !3, line: 1194, type: !36, scopeLine: 1196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !132, retainedNodes: !904)
!3654 = !DILocalVariable(name: "toSearch", arg: 1, scope: !3653, file: !3, line: 1194, type: !28)
!3655 = !DILocation(line: 1194, column: 53, scope: !3653)
!3656 = !DILocalVariable(name: "pattern", arg: 2, scope: !3653, file: !3, line: 1195, type: !28)
!3657 = !DILocation(line: 1195, column: 53, scope: !3653)
!3658 = !DILocation(line: 1197, column: 10, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3653, file: !3, line: 1197, column: 9)
!3660 = !DILocation(line: 1197, column: 19, scope: !3659)
!3661 = !DILocation(line: 1197, column: 24, scope: !3659)
!3662 = !DILocation(line: 1197, column: 23, scope: !3659)
!3663 = !DILocation(line: 1197, column: 9, scope: !3653)
!3664 = !DILocation(line: 1198, column: 9, scope: !3659)
!3665 = !DILocalVariable(name: "patnLen", scope: !3653, file: !3, line: 1200, type: !61)
!3666 = !DILocation(line: 1200, column: 15, scope: !3653)
!3667 = !DILocation(line: 1200, column: 46, scope: !3653)
!3668 = !DILocation(line: 1200, column: 25, scope: !3653)
!3669 = !DILocation(line: 1201, column: 8, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3653, file: !3, line: 1201, column: 7)
!3671 = !DILocation(line: 1201, column: 7, scope: !3653)
!3672 = !DILocation(line: 1202, column: 3, scope: !3670)
!3673 = !DILocalVariable(name: "srcPtr", scope: !3653, file: !3, line: 1204, type: !29)
!3674 = !DILocation(line: 1204, column: 18, scope: !3653)
!3675 = !DILocation(line: 1204, column: 30, scope: !3653)
!3676 = !DILocalVariable(name: "patnStart", scope: !3653, file: !3, line: 1205, type: !29)
!3677 = !DILocation(line: 1205, column: 18, scope: !3653)
!3678 = !DILocation(line: 1205, column: 30, scope: !3653)
!3679 = !DILocalVariable(name: "patnIndex", scope: !3653, file: !3, line: 1206, type: !34)
!3680 = !DILocation(line: 1206, column: 10, scope: !3653)
!3681 = !DILocation(line: 1208, column: 5, scope: !3653)
!3682 = !DILocation(line: 1208, column: 13, scope: !3653)
!3683 = !DILocation(line: 1208, column: 12, scope: !3653)
!3684 = !DILocation(line: 1210, column: 23, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3686, file: !3, line: 1210, column: 14)
!3686 = distinct !DILexicalBlock(scope: !3653, file: !3, line: 1209, column: 5)
!3687 = !DILocation(line: 1210, column: 16, scope: !3685)
!3688 = !DILocation(line: 1210, column: 29, scope: !3685)
!3689 = !DILocation(line: 1210, column: 37, scope: !3685)
!3690 = !DILocation(line: 1210, column: 26, scope: !3685)
!3691 = !DILocation(line: 1210, column: 14, scope: !3686)
!3692 = !DILocation(line: 1212, column: 23, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3685, file: !3, line: 1211, column: 9)
!3694 = !DILocation(line: 1213, column: 22, scope: !3693)
!3695 = !DILocation(line: 1213, column: 20, scope: !3693)
!3696 = !DILocation(line: 1214, column: 9, scope: !3693)
!3697 = !DILocation(line: 1217, column: 17, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3699, file: !3, line: 1217, column: 17)
!3699 = distinct !DILexicalBlock(scope: !3685, file: !3, line: 1216, column: 9)
!3700 = !DILocation(line: 1217, column: 32, scope: !3698)
!3701 = !DILocation(line: 1217, column: 29, scope: !3698)
!3702 = !DILocation(line: 1217, column: 17, scope: !3699)
!3703 = !DILocation(line: 1219, column: 25, scope: !3698)
!3704 = !DILocation(line: 1219, column: 34, scope: !3698)
!3705 = !DILocation(line: 1219, column: 32, scope: !3698)
!3706 = !DILocation(line: 1219, column: 44, scope: !3698)
!3707 = !DILocation(line: 1219, column: 42, scope: !3698)
!3708 = !DILocation(line: 1219, column: 24, scope: !3698)
!3709 = !DILocation(line: 1219, column: 17, scope: !3698)
!3710 = distinct !{!3710, !3681, !3711}
!3711 = !DILocation(line: 1222, column: 5, scope: !3653)
!3712 = !DILocation(line: 1224, column: 5, scope: !3653)
!3713 = !DILocation(line: 1225, column: 1, scope: !3653)
!3714 = distinct !DISubprogram(name: "hashN", linkageName: "_ZN11xercesc_2_79XMLString5hashNEPKtjjPNS_13MemoryManagerE", scope: !9, file: !3, line: 1228, type: !76, scopeLine: 1232, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !75, retainedNodes: !904)
!3715 = !DILocalVariable(name: "tohash", arg: 1, scope: !3714, file: !3, line: 1228, type: !28)
!3716 = !DILocation(line: 1228, column: 57, scope: !3714)
!3717 = !DILocalVariable(name: "n", arg: 2, scope: !3714, file: !3, line: 1229, type: !42)
!3718 = !DILocation(line: 1229, column: 57, scope: !3714)
!3719 = !DILocalVariable(name: "hashModulus", arg: 3, scope: !3714, file: !3, line: 1230, type: !42)
!3720 = !DILocation(line: 1230, column: 57, scope: !3714)
!3721 = !DILocalVariable(arg: 4, scope: !3714, file: !3, line: 1231, type: !71)
!3722 = !DILocation(line: 1231, column: 55, scope: !3714)
!3723 = !DILocalVariable(name: "hashVal", scope: !3714, file: !3, line: 1235, type: !43)
!3724 = !DILocation(line: 1235, column: 18, scope: !3714)
!3725 = !DILocation(line: 1236, column: 9, scope: !3726)
!3726 = distinct !DILexicalBlock(scope: !3714, file: !3, line: 1236, column: 9)
!3727 = !DILocation(line: 1236, column: 9, scope: !3714)
!3728 = !DILocalVariable(name: "curCh", scope: !3729, file: !3, line: 1237, type: !29)
!3729 = distinct !DILexicalBlock(scope: !3726, file: !3, line: 1236, column: 17)
!3730 = !DILocation(line: 1237, column: 22, scope: !3729)
!3731 = !DILocation(line: 1237, column: 30, scope: !3729)
!3732 = !DILocalVariable(name: "i", scope: !3729, file: !3, line: 1238, type: !34)
!3733 = !DILocation(line: 1238, column: 13, scope: !3729)
!3734 = !DILocation(line: 1238, column: 17, scope: !3729)
!3735 = !DILocation(line: 1239, column: 9, scope: !3729)
!3736 = !DILocation(line: 1239, column: 17, scope: !3729)
!3737 = !DILocation(line: 1239, column: 16, scope: !3729)
!3738 = !DILocalVariable(name: "top", scope: !3739, file: !3, line: 1241, type: !43)
!3739 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 1240, column: 9)
!3740 = !DILocation(line: 1241, column: 26, scope: !3739)
!3741 = !DILocation(line: 1241, column: 32, scope: !3739)
!3742 = !DILocation(line: 1241, column: 40, scope: !3739)
!3743 = !DILocation(line: 1242, column: 25, scope: !3739)
!3744 = !DILocation(line: 1242, column: 33, scope: !3739)
!3745 = !DILocation(line: 1242, column: 41, scope: !3739)
!3746 = !DILocation(line: 1242, column: 39, scope: !3739)
!3747 = !DILocation(line: 1242, column: 63, scope: !3739)
!3748 = !DILocation(line: 1242, column: 62, scope: !3739)
!3749 = !DILocation(line: 1242, column: 61, scope: !3739)
!3750 = !DILocation(line: 1242, column: 45, scope: !3739)
!3751 = !DILocation(line: 1242, column: 21, scope: !3739)
!3752 = !DILocation(line: 1243, column: 18, scope: !3739)
!3753 = distinct !{!3753, !3735, !3754}
!3754 = !DILocation(line: 1244, column: 9, scope: !3729)
!3755 = !DILocation(line: 1245, column: 5, scope: !3729)
!3756 = !DILocation(line: 1248, column: 12, scope: !3714)
!3757 = !DILocation(line: 1248, column: 22, scope: !3714)
!3758 = !DILocation(line: 1248, column: 20, scope: !3714)
!3759 = !DILocation(line: 1248, column: 5, scope: !3714)
!3760 = distinct !DISubprogram(name: "indexOf", linkageName: "_ZN11xercesc_2_79XMLString7indexOfEPKtt", scope: !9, file: !3, line: 1252, type: !82, scopeLine: 1253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !81, retainedNodes: !904)
!3761 = !DILocalVariable(name: "toSearch", arg: 1, scope: !3760, file: !3, line: 1252, type: !28)
!3762 = !DILocation(line: 1252, column: 43, scope: !3760)
!3763 = !DILocalVariable(name: "ch", arg: 2, scope: !3760, file: !3, line: 1252, type: !30)
!3764 = !DILocation(line: 1252, column: 65, scope: !3760)
!3765 = !DILocation(line: 1254, column: 9, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3760, file: !3, line: 1254, column: 9)
!3767 = !DILocation(line: 1254, column: 9, scope: !3760)
!3768 = !DILocalVariable(name: "srcPtr", scope: !3769, file: !3, line: 1256, type: !29)
!3769 = distinct !DILexicalBlock(scope: !3766, file: !3, line: 1255, column: 5)
!3770 = !DILocation(line: 1256, column: 22, scope: !3769)
!3771 = !DILocation(line: 1256, column: 31, scope: !3769)
!3772 = !DILocation(line: 1257, column: 9, scope: !3769)
!3773 = !DILocation(line: 1257, column: 17, scope: !3769)
!3774 = !DILocation(line: 1257, column: 16, scope: !3769)
!3775 = !DILocation(line: 1259, column: 17, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 1259, column: 17)
!3777 = distinct !DILexicalBlock(scope: !3769, file: !3, line: 1258, column: 9)
!3778 = !DILocation(line: 1259, column: 24, scope: !3776)
!3779 = !DILocation(line: 1259, column: 23, scope: !3776)
!3780 = !DILocation(line: 1259, column: 20, scope: !3776)
!3781 = !DILocation(line: 1259, column: 17, scope: !3777)
!3782 = !DILocation(line: 1260, column: 30, scope: !3776)
!3783 = !DILocation(line: 1260, column: 39, scope: !3776)
!3784 = !DILocation(line: 1260, column: 37, scope: !3776)
!3785 = !DILocation(line: 1260, column: 29, scope: !3776)
!3786 = !DILocation(line: 1260, column: 17, scope: !3776)
!3787 = !DILocation(line: 1262, column: 19, scope: !3777)
!3788 = distinct !{!3788, !3772, !3789}
!3789 = !DILocation(line: 1263, column: 9, scope: !3769)
!3790 = !DILocation(line: 1264, column: 5, scope: !3769)
!3791 = !DILocation(line: 1265, column: 5, scope: !3760)
!3792 = !DILocation(line: 1266, column: 1, scope: !3760)
!3793 = distinct !DISubprogram(name: "indexOf", linkageName: "_ZN11xercesc_2_79XMLString7indexOfEPKttjPNS_13MemoryManagerE", scope: !9, file: !3, line: 1269, type: !88, scopeLine: 1273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !87, retainedNodes: !904)
!3794 = !DILocalVariable(name: "toSearch", arg: 1, scope: !3793, file: !3, line: 1269, type: !28)
!3795 = !DILocation(line: 1269, column: 49, scope: !3793)
!3796 = !DILocalVariable(name: "ch", arg: 2, scope: !3793, file: !3, line: 1270, type: !30)
!3797 = !DILocation(line: 1270, column: 49, scope: !3793)
!3798 = !DILocalVariable(name: "fromIndex", arg: 3, scope: !3793, file: !3, line: 1271, type: !42)
!3799 = !DILocation(line: 1271, column: 49, scope: !3793)
!3800 = !DILocalVariable(name: "manager", arg: 4, scope: !3793, file: !3, line: 1272, type: !71)
!3801 = !DILocation(line: 1272, column: 49, scope: !3793)
!3802 = !DILocalVariable(name: "len", scope: !3793, file: !3, line: 1274, type: !61)
!3803 = !DILocation(line: 1274, column: 15, scope: !3793)
!3804 = !DILocation(line: 1274, column: 31, scope: !3793)
!3805 = !DILocation(line: 1274, column: 21, scope: !3793)
!3806 = !DILocation(line: 1277, column: 11, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 1277, column: 6)
!3808 = !DILocation(line: 1277, column: 23, scope: !3807)
!3809 = !DILocation(line: 1277, column: 26, scope: !3807)
!3810 = !DILocation(line: 1277, column: 21, scope: !3807)
!3811 = !DILocation(line: 1277, column: 6, scope: !3793)
!3812 = !DILocation(line: 1278, column: 9, scope: !3807)
!3813 = !DILocation(line: 1286, column: 1, scope: !3807)
!3814 = !DILocalVariable(name: "i", scope: !3815, file: !3, line: 1280, type: !34)
!3815 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 1280, column: 5)
!3816 = !DILocation(line: 1280, column: 14, scope: !3815)
!3817 = !DILocation(line: 1280, column: 23, scope: !3815)
!3818 = !DILocation(line: 1280, column: 10, scope: !3815)
!3819 = !DILocation(line: 1280, column: 34, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3815, file: !3, line: 1280, column: 5)
!3821 = !DILocation(line: 1280, column: 38, scope: !3820)
!3822 = !DILocation(line: 1280, column: 36, scope: !3820)
!3823 = !DILocation(line: 1280, column: 5, scope: !3815)
!3824 = !DILocation(line: 1282, column: 13, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 1282, column: 13)
!3826 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 1281, column: 5)
!3827 = !DILocation(line: 1282, column: 22, scope: !3825)
!3828 = !DILocation(line: 1282, column: 28, scope: !3825)
!3829 = !DILocation(line: 1282, column: 25, scope: !3825)
!3830 = !DILocation(line: 1282, column: 13, scope: !3826)
!3831 = !DILocation(line: 1283, column: 20, scope: !3825)
!3832 = !DILocation(line: 1283, column: 13, scope: !3825)
!3833 = !DILocation(line: 1284, column: 5, scope: !3826)
!3834 = !DILocation(line: 1280, column: 44, scope: !3820)
!3835 = !DILocation(line: 1280, column: 5, scope: !3820)
!3836 = distinct !{!3836, !3823, !3837}
!3837 = !DILocation(line: 1284, column: 5, scope: !3815)
!3838 = !DILocation(line: 1285, column: 5, scope: !3793)
!3839 = !DILocation(line: 1286, column: 1, scope: !3793)
!3840 = distinct !DISubprogram(name: "lastIndexOf", linkageName: "_ZN11xercesc_2_79XMLString11lastIndexOfEtPKtj", scope: !9, file: !3, line: 1288, type: !93, scopeLine: 1291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !92, retainedNodes: !904)
!3841 = !DILocalVariable(name: "ch", arg: 1, scope: !3840, file: !3, line: 1288, type: !30)
!3842 = !DILocation(line: 1288, column: 40, scope: !3840)
!3843 = !DILocalVariable(name: "toSearch", arg: 2, scope: !3840, file: !3, line: 1289, type: !28)
!3844 = !DILocation(line: 1289, column: 47, scope: !3840)
!3845 = !DILocalVariable(name: "toSearchLen", arg: 3, scope: !3840, file: !3, line: 1290, type: !42)
!3846 = !DILocation(line: 1290, column: 47, scope: !3840)
!3847 = !DILocalVariable(name: "i", scope: !3848, file: !3, line: 1292, type: !34)
!3848 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 1292, column: 5)
!3849 = !DILocation(line: 1292, column: 14, scope: !3848)
!3850 = !DILocation(line: 1292, column: 23, scope: !3848)
!3851 = !DILocation(line: 1292, column: 34, scope: !3848)
!3852 = !DILocation(line: 1292, column: 10, scope: !3848)
!3853 = !DILocation(line: 1292, column: 38, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 1292, column: 5)
!3855 = !DILocation(line: 1292, column: 40, scope: !3854)
!3856 = !DILocation(line: 1292, column: 5, scope: !3848)
!3857 = !DILocation(line: 1294, column: 13, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 1294, column: 13)
!3859 = distinct !DILexicalBlock(scope: !3854, file: !3, line: 1293, column: 5)
!3860 = !DILocation(line: 1294, column: 22, scope: !3858)
!3861 = !DILocation(line: 1294, column: 28, scope: !3858)
!3862 = !DILocation(line: 1294, column: 25, scope: !3858)
!3863 = !DILocation(line: 1294, column: 13, scope: !3859)
!3864 = !DILocation(line: 1295, column: 20, scope: !3858)
!3865 = !DILocation(line: 1295, column: 13, scope: !3858)
!3866 = !DILocation(line: 1296, column: 5, scope: !3859)
!3867 = !DILocation(line: 1292, column: 47, scope: !3854)
!3868 = !DILocation(line: 1292, column: 5, scope: !3854)
!3869 = distinct !{!3869, !3856, !3870}
!3870 = !DILocation(line: 1296, column: 5, scope: !3848)
!3871 = !DILocation(line: 1297, column: 5, scope: !3840)
!3872 = !DILocation(line: 1298, column: 1, scope: !3840)
!3873 = distinct !DISubprogram(name: "lastIndexOf", linkageName: "_ZN11xercesc_2_79XMLString11lastIndexOfEPKttjPNS_13MemoryManagerE", scope: !9, file: !3, line: 1300, type: !88, scopeLine: 1304, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !96, retainedNodes: !904)
!3874 = !DILocalVariable(name: "toSearch", arg: 1, scope: !3873, file: !3, line: 1300, type: !28)
!3875 = !DILocation(line: 1300, column: 53, scope: !3873)
!3876 = !DILocalVariable(name: "ch", arg: 2, scope: !3873, file: !3, line: 1301, type: !30)
!3877 = !DILocation(line: 1301, column: 53, scope: !3873)
!3878 = !DILocalVariable(name: "fromIndex", arg: 3, scope: !3873, file: !3, line: 1302, type: !42)
!3879 = !DILocation(line: 1302, column: 53, scope: !3873)
!3880 = !DILocalVariable(name: "manager", arg: 4, scope: !3873, file: !3, line: 1303, type: !71)
!3881 = !DILocation(line: 1303, column: 53, scope: !3873)
!3882 = !DILocalVariable(name: "len", scope: !3873, file: !3, line: 1305, type: !61)
!3883 = !DILocation(line: 1305, column: 15, scope: !3873)
!3884 = !DILocation(line: 1305, column: 31, scope: !3873)
!3885 = !DILocation(line: 1305, column: 21, scope: !3873)
!3886 = !DILocation(line: 1306, column: 11, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 1306, column: 6)
!3888 = !DILocation(line: 1306, column: 23, scope: !3887)
!3889 = !DILocation(line: 1306, column: 26, scope: !3887)
!3890 = !DILocation(line: 1306, column: 21, scope: !3887)
!3891 = !DILocation(line: 1306, column: 6, scope: !3873)
!3892 = !DILocation(line: 1307, column: 9, scope: !3887)
!3893 = !DILocation(line: 1315, column: 1, scope: !3887)
!3894 = !DILocalVariable(name: "i", scope: !3895, file: !3, line: 1309, type: !34)
!3895 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 1309, column: 5)
!3896 = !DILocation(line: 1309, column: 14, scope: !3895)
!3897 = !DILocation(line: 1309, column: 23, scope: !3895)
!3898 = !DILocation(line: 1309, column: 10, scope: !3895)
!3899 = !DILocation(line: 1309, column: 34, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3895, file: !3, line: 1309, column: 5)
!3901 = !DILocation(line: 1309, column: 36, scope: !3900)
!3902 = !DILocation(line: 1309, column: 5, scope: !3895)
!3903 = !DILocation(line: 1311, column: 13, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3905, file: !3, line: 1311, column: 13)
!3905 = distinct !DILexicalBlock(scope: !3900, file: !3, line: 1310, column: 5)
!3906 = !DILocation(line: 1311, column: 22, scope: !3904)
!3907 = !DILocation(line: 1311, column: 28, scope: !3904)
!3908 = !DILocation(line: 1311, column: 25, scope: !3904)
!3909 = !DILocation(line: 1311, column: 13, scope: !3905)
!3910 = !DILocation(line: 1312, column: 20, scope: !3904)
!3911 = !DILocation(line: 1312, column: 13, scope: !3904)
!3912 = !DILocation(line: 1313, column: 5, scope: !3905)
!3913 = !DILocation(line: 1309, column: 43, scope: !3900)
!3914 = !DILocation(line: 1309, column: 5, scope: !3900)
!3915 = distinct !{!3915, !3902, !3916}
!3916 = !DILocation(line: 1313, column: 5, scope: !3895)
!3917 = !DILocation(line: 1314, column: 5, scope: !3873)
!3918 = !DILocation(line: 1315, column: 1, scope: !3873)
!3919 = distinct !DISubprogram(name: "makeUName", linkageName: "_ZN11xercesc_2_79XMLString9makeUNameEPKtS2_", scope: !9, file: !3, line: 1319, type: !323, scopeLine: 1320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !322, retainedNodes: !904)
!3920 = !DILocalVariable(name: "pszURI", arg: 1, scope: !3919, file: !3, line: 1319, type: !28)
!3921 = !DILocation(line: 1319, column: 41, scope: !3919)
!3922 = !DILocalVariable(name: "pszName", arg: 2, scope: !3919, file: !3, line: 1319, type: !28)
!3923 = !DILocation(line: 1319, column: 68, scope: !3919)
!3924 = !DILocalVariable(name: "pszRet", scope: !3919, file: !3, line: 1325, type: !24)
!3925 = !DILocation(line: 1325, column: 12, scope: !3919)
!3926 = !DILocalVariable(name: "uriLen", scope: !3919, file: !3, line: 1326, type: !42)
!3927 = !DILocation(line: 1326, column: 24, scope: !3919)
!3928 = !DILocation(line: 1326, column: 43, scope: !3919)
!3929 = !DILocation(line: 1326, column: 33, scope: !3919)
!3930 = !DILocation(line: 1327, column: 9, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 1327, column: 9)
!3932 = !DILocation(line: 1327, column: 9, scope: !3919)
!3933 = !DILocation(line: 1329, column: 28, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 1328, column: 5)
!3935 = !DILocation(line: 1329, column: 47, scope: !3934)
!3936 = !DILocation(line: 1329, column: 37, scope: !3934)
!3937 = !DILocation(line: 1329, column: 35, scope: !3934)
!3938 = !DILocation(line: 1329, column: 56, scope: !3934)
!3939 = !DILocation(line: 1329, column: 18, scope: !3934)
!3940 = !DILocation(line: 1329, column: 16, scope: !3934)
!3941 = !DILocalVariable(name: "szTmp", scope: !3934, file: !3, line: 1331, type: !3942)
!3942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 32, elements: !3943)
!3943 = !{!3944}
!3944 = !DISubrange(count: 2)
!3945 = !DILocation(line: 1331, column: 15, scope: !3934)
!3946 = !DILocation(line: 1332, column: 9, scope: !3934)
!3947 = !DILocation(line: 1332, column: 18, scope: !3934)
!3948 = !DILocation(line: 1334, column: 9, scope: !3934)
!3949 = !DILocation(line: 1334, column: 18, scope: !3934)
!3950 = !DILocation(line: 1335, column: 20, scope: !3934)
!3951 = !DILocation(line: 1335, column: 28, scope: !3934)
!3952 = !DILocation(line: 1335, column: 9, scope: !3934)
!3953 = !DILocation(line: 1336, column: 19, scope: !3934)
!3954 = !DILocation(line: 1336, column: 27, scope: !3934)
!3955 = !DILocation(line: 1336, column: 9, scope: !3934)
!3956 = !DILocation(line: 1337, column: 9, scope: !3934)
!3957 = !DILocation(line: 1337, column: 18, scope: !3934)
!3958 = !DILocation(line: 1338, column: 19, scope: !3934)
!3959 = !DILocation(line: 1338, column: 27, scope: !3934)
!3960 = !DILocation(line: 1338, column: 9, scope: !3934)
!3961 = !DILocation(line: 1339, column: 19, scope: !3934)
!3962 = !DILocation(line: 1339, column: 27, scope: !3934)
!3963 = !DILocation(line: 1339, column: 9, scope: !3934)
!3964 = !DILocation(line: 1340, column: 5, scope: !3934)
!3965 = !DILocation(line: 1343, column: 28, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 1342, column: 5)
!3967 = !DILocation(line: 1343, column: 18, scope: !3966)
!3968 = !DILocation(line: 1343, column: 16, scope: !3966)
!3969 = !DILocation(line: 1345, column: 12, scope: !3919)
!3970 = !DILocation(line: 1345, column: 5, scope: !3919)
!3971 = distinct !DISubprogram(name: "textToBin", linkageName: "_ZN11xercesc_2_79XMLString9textToBinEPKtRjPNS_13MemoryManagerE", scope: !9, file: !3, line: 1349, type: !185, scopeLine: 1351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !184, retainedNodes: !904)
!3972 = !DILocalVariable(name: "toConvert", arg: 1, scope: !3971, file: !3, line: 1349, type: !28)
!3973 = !DILocation(line: 1349, column: 46, scope: !3971)
!3974 = !DILocalVariable(name: "toFill", arg: 2, scope: !3971, file: !3, line: 1349, type: !187)
!3975 = !DILocation(line: 1349, column: 71, scope: !3971)
!3976 = !DILocalVariable(name: "manager", arg: 3, scope: !3971, file: !3, line: 1350, type: !71)
!3977 = !DILocation(line: 1350, column: 50, scope: !3971)
!3978 = !DILocation(line: 1352, column: 5, scope: !3971)
!3979 = !DILocation(line: 1352, column: 12, scope: !3971)
!3980 = !DILocation(line: 1355, column: 11, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 1355, column: 9)
!3982 = !DILocation(line: 1355, column: 22, scope: !3981)
!3983 = !DILocation(line: 1355, column: 28, scope: !3981)
!3984 = !DILocation(line: 1355, column: 27, scope: !3981)
!3985 = !DILocation(line: 1355, column: 9, scope: !3971)
!3986 = !DILocation(line: 1356, column: 9, scope: !3981)
!3987 = !DILocalVariable(name: "trimmedStr", scope: !3971, file: !3, line: 1358, type: !24)
!3988 = !DILocation(line: 1358, column: 9, scope: !3971)
!3989 = !DILocation(line: 1358, column: 43, scope: !3971)
!3990 = !DILocation(line: 1358, column: 54, scope: !3971)
!3991 = !DILocation(line: 1358, column: 22, scope: !3971)
!3992 = !DILocalVariable(name: "jan1", scope: !3971, file: !3, line: 1359, type: !2085)
!3993 = !DILocation(line: 1359, column: 22, scope: !3971)
!3994 = !DILocation(line: 1359, column: 27, scope: !3971)
!3995 = !DILocation(line: 1359, column: 39, scope: !3971)
!3996 = !DILocation(line: 1360, column: 18, scope: !3971)
!3997 = !DILocation(line: 1360, column: 2, scope: !3971)
!3998 = !DILocalVariable(name: "trimmedStrLen", scope: !3971, file: !3, line: 1361, type: !43)
!3999 = !DILocation(line: 1361, column: 18, scope: !3971)
!4000 = !DILocation(line: 1361, column: 55, scope: !3971)
!4001 = !DILocation(line: 1361, column: 34, scope: !3971)
!4002 = !DILocation(line: 1363, column: 8, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 1363, column: 7)
!4004 = !DILocation(line: 1363, column: 7, scope: !3971)
!4005 = !DILocation(line: 1364, column: 3, scope: !4003)
!4006 = !DILocation(line: 1389, column: 1, scope: !3971)
!4007 = !DILocation(line: 1367, column: 25, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 1367, column: 6)
!4009 = !DILocation(line: 1367, column: 48, scope: !4008)
!4010 = !DILocation(line: 1367, column: 6, scope: !4008)
!4011 = !DILocation(line: 1367, column: 57, scope: !4008)
!4012 = !DILocation(line: 1367, column: 6, scope: !3971)
!4013 = !DILocation(line: 1368, column: 3, scope: !4008)
!4014 = !DILocation(line: 1371, column: 2, scope: !3971)
!4015 = !DILocation(line: 1371, column: 8, scope: !3971)
!4016 = !DILocalVariable(name: "nptr", scope: !3971, file: !3, line: 1373, type: !15)
!4017 = !DILocation(line: 1373, column: 8, scope: !3971)
!4018 = !DILocation(line: 1373, column: 36, scope: !3971)
!4019 = !DILocation(line: 1373, column: 48, scope: !3971)
!4020 = !DILocation(line: 1373, column: 15, scope: !3971)
!4021 = !DILocalVariable(name: "jan2", scope: !3971, file: !3, line: 1374, type: !4022)
!4022 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ArrayJanitor<char>", scope: !2, file: !2086, line: 72, size: 128, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !4023, templateParams: !4065, identifier: "_ZTSN11xercesc_2_712ArrayJanitorIcEE")
!4023 = !{!4024, !4025, !4026, !4027, !4031, !4034, !4037, !4038, !4044, !4047, !4050, !4053, !4056, !4057, !4061}
!4024 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !4022, baseType: !226, flags: DIFlagPublic, extraData: i32 0)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "fData", scope: !4022, file: !2086, line: 110, baseType: !15, size: 64)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "fMemoryManager", scope: !4022, file: !2086, line: 111, baseType: !4, size: 64, offset: 64)
!4027 = !DISubprogram(name: "ArrayJanitor", scope: !4022, file: !2086, line: 78, type: !4028, scopeLine: 78, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!4028 = !DISubroutineType(types: !4029)
!4029 = !{null, !4030, !14}
!4030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4022, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!4031 = !DISubprogram(name: "ArrayJanitor", scope: !4022, file: !2086, line: 79, type: !4032, scopeLine: 79, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!4032 = !DISubroutineType(types: !4033)
!4033 = !{null, !4030, !14, !71}
!4034 = !DISubprogram(name: "~ArrayJanitor", scope: !4022, file: !2086, line: 80, type: !4035, scopeLine: 80, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!4035 = !DISubroutineType(types: !4036)
!4036 = !{null, !4030}
!4037 = !DISubprogram(name: "orphan", linkageName: "_ZN11xercesc_2_712ArrayJanitorIcE6orphanEv", scope: !4022, file: !2086, line: 86, type: !4035, scopeLine: 86, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!4038 = !DISubprogram(name: "operator[]", linkageName: "_ZNK11xercesc_2_712ArrayJanitorIcEixEi", scope: !4022, file: !2086, line: 89, type: !4039, scopeLine: 89, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!4039 = !DISubroutineType(types: !4040)
!4040 = !{!4041, !4042, !34}
!4041 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !16, size: 64)
!4042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4043, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!4043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4022)
!4044 = !DISubprogram(name: "get", linkageName: "_ZNK11xercesc_2_712ArrayJanitorIcE3getEv", scope: !4022, file: !2086, line: 90, type: !4045, scopeLine: 90, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!4045 = !DISubroutineType(types: !4046)
!4046 = !{!15, !4042}
!4047 = !DISubprogram(name: "release", linkageName: "_ZN11xercesc_2_712ArrayJanitorIcE7releaseEv", scope: !4022, file: !2086, line: 91, type: !4048, scopeLine: 91, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!4048 = !DISubroutineType(types: !4049)
!4049 = !{!15, !4030}
!4050 = !DISubprogram(name: "reset", linkageName: "_ZN11xercesc_2_712ArrayJanitorIcE5resetEPc", scope: !4022, file: !2086, line: 92, type: !4051, scopeLine: 92, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!4051 = !DISubroutineType(types: !4052)
!4052 = !{null, !4030, !15}
!4053 = !DISubprogram(name: "reset", linkageName: "_ZN11xercesc_2_712ArrayJanitorIcE5resetEPcPNS_13MemoryManagerE", scope: !4022, file: !2086, line: 93, type: !4054, scopeLine: 93, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!4054 = !DISubroutineType(types: !4055)
!4055 = !{null, !4030, !15, !71}
!4056 = !DISubprogram(name: "ArrayJanitor", scope: !4022, file: !2086, line: 99, type: !4035, scopeLine: 99, flags: DIFlagPrototyped, spFlags: 0)
!4057 = !DISubprogram(name: "ArrayJanitor", scope: !4022, file: !2086, line: 100, type: !4058, scopeLine: 100, flags: DIFlagPrototyped, spFlags: 0)
!4058 = !DISubroutineType(types: !4059)
!4059 = !{null, !4030, !4060}
!4060 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !4043, size: 64)
!4061 = !DISubprogram(name: "operator=", linkageName: "_ZN11xercesc_2_712ArrayJanitorIcEaSERKS1_", scope: !4022, file: !2086, line: 101, type: !4062, scopeLine: 101, flags: DIFlagPrototyped, spFlags: 0)
!4062 = !DISubroutineType(types: !4063)
!4063 = !{!4064, !4030, !4060}
!4064 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !4022, size: 64)
!4065 = !{!4066}
!4066 = !DITemplateTypeParameter(name: "T", type: !16)
!4067 = !DILocation(line: 1374, column: 24, scope: !3971)
!4068 = !DILocation(line: 1374, column: 29, scope: !3971)
!4069 = !DILocation(line: 1374, column: 35, scope: !3971)
!4070 = !DILocalVariable(name: "endptr", scope: !3971, file: !3, line: 1376, type: !15)
!4071 = !DILocation(line: 1376, column: 11, scope: !3971)
!4072 = !DILocation(line: 1380, column: 37, scope: !3971)
!4073 = !DILocation(line: 1380, column: 29, scope: !3971)
!4074 = !DILocation(line: 1380, column: 5, scope: !3971)
!4075 = !DILocation(line: 1380, column: 12, scope: !3971)
!4076 = !DILocation(line: 1384, column: 10, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 1384, column: 7)
!4078 = !DILocation(line: 1384, column: 19, scope: !4077)
!4079 = !DILocation(line: 1384, column: 17, scope: !4077)
!4080 = !DILocation(line: 1384, column: 34, scope: !4077)
!4081 = !DILocation(line: 1384, column: 28, scope: !4077)
!4082 = !DILocation(line: 1384, column: 25, scope: !4077)
!4083 = !DILocation(line: 1384, column: 49, scope: !4077)
!4084 = !DILocation(line: 1385, column: 11, scope: !4077)
!4085 = !DILocation(line: 1385, column: 17, scope: !4077)
!4086 = !DILocation(line: 1384, column: 7, scope: !3971)
!4087 = !DILocation(line: 1386, column: 3, scope: !4077)
!4088 = !DILocation(line: 1388, column: 5, scope: !3971)
!4089 = distinct !DISubprogram(name: "trim", linkageName: "_ZN11xercesc_2_79XMLString4trimEPt", scope: !9, file: !3, line: 1430, type: !216, scopeLine: 1431, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !215, retainedNodes: !904)
!4090 = !DILocalVariable(name: "toTrim", arg: 1, scope: !4089, file: !3, line: 1430, type: !23)
!4091 = !DILocation(line: 1430, column: 35, scope: !4089)
!4092 = !DILocalVariable(name: "len", scope: !4089, file: !3, line: 1432, type: !42)
!4093 = !DILocation(line: 1432, column: 24, scope: !4089)
!4094 = !DILocation(line: 1432, column: 40, scope: !4089)
!4095 = !DILocation(line: 1432, column: 30, scope: !4089)
!4096 = !DILocalVariable(name: "skip", scope: !4089, file: !3, line: 1434, type: !43)
!4097 = !DILocation(line: 1434, column: 18, scope: !4089)
!4098 = !DILocalVariable(name: "scrape", scope: !4089, file: !3, line: 1434, type: !43)
!4099 = !DILocation(line: 1434, column: 24, scope: !4089)
!4100 = !DILocation(line: 1435, column: 15, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4089, file: !3, line: 1435, column: 5)
!4102 = !DILocation(line: 1435, column: 10, scope: !4101)
!4103 = !DILocation(line: 1435, column: 20, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4101, file: !3, line: 1435, column: 5)
!4105 = !DILocation(line: 1435, column: 27, scope: !4104)
!4106 = !DILocation(line: 1435, column: 25, scope: !4104)
!4107 = !DILocation(line: 1435, column: 5, scope: !4101)
!4108 = !DILocation(line: 1437, column: 39, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4110, file: !3, line: 1437, column: 13)
!4110 = distinct !DILexicalBlock(scope: !4104, file: !3, line: 1436, column: 5)
!4111 = !DILocation(line: 1437, column: 46, scope: !4109)
!4112 = !DILocation(line: 1437, column: 14, scope: !4109)
!4113 = !DILocation(line: 1437, column: 13, scope: !4110)
!4114 = !DILocation(line: 1438, column: 13, scope: !4109)
!4115 = !DILocation(line: 1439, column: 5, scope: !4110)
!4116 = !DILocation(line: 1435, column: 36, scope: !4104)
!4117 = !DILocation(line: 1435, column: 5, scope: !4104)
!4118 = distinct !{!4118, !4107, !4119}
!4119 = !DILocation(line: 1439, column: 5, scope: !4101)
!4120 = !DILocation(line: 1441, column: 19, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4089, file: !3, line: 1441, column: 5)
!4122 = !DILocation(line: 1441, column: 17, scope: !4121)
!4123 = !DILocation(line: 1441, column: 10, scope: !4121)
!4124 = !DILocation(line: 1441, column: 24, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4121, file: !3, line: 1441, column: 5)
!4126 = !DILocation(line: 1441, column: 33, scope: !4125)
!4127 = !DILocation(line: 1441, column: 31, scope: !4125)
!4128 = !DILocation(line: 1441, column: 5, scope: !4121)
!4129 = !DILocation(line: 1443, column: 39, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4131, file: !3, line: 1443, column: 13)
!4131 = distinct !DILexicalBlock(scope: !4125, file: !3, line: 1442, column: 5)
!4132 = !DILocation(line: 1443, column: 46, scope: !4130)
!4133 = !DILocation(line: 1443, column: 53, scope: !4130)
!4134 = !DILocation(line: 1443, column: 14, scope: !4130)
!4135 = !DILocation(line: 1443, column: 13, scope: !4131)
!4136 = !DILocation(line: 1444, column: 13, scope: !4130)
!4137 = !DILocation(line: 1445, column: 5, scope: !4131)
!4138 = !DILocation(line: 1441, column: 45, scope: !4125)
!4139 = !DILocation(line: 1441, column: 5, scope: !4125)
!4140 = distinct !{!4140, !4128, !4141}
!4141 = !DILocation(line: 1445, column: 5, scope: !4121)
!4142 = !DILocation(line: 1448, column: 9, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4089, file: !3, line: 1448, column: 9)
!4144 = !DILocation(line: 1448, column: 19, scope: !4143)
!4145 = !DILocation(line: 1448, column: 16, scope: !4143)
!4146 = !DILocation(line: 1448, column: 9, scope: !4089)
!4147 = !DILocation(line: 1449, column: 9, scope: !4143)
!4148 = !DILocation(line: 1449, column: 16, scope: !4143)
!4149 = !DILocation(line: 1449, column: 24, scope: !4143)
!4150 = !DILocation(line: 1451, column: 9, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4089, file: !3, line: 1451, column: 9)
!4152 = !DILocation(line: 1451, column: 9, scope: !4089)
!4153 = !DILocalVariable(name: "index", scope: !4154, file: !3, line: 1454, type: !43)
!4154 = distinct !DILexicalBlock(scope: !4151, file: !3, line: 1452, column: 5)
!4155 = !DILocation(line: 1454, column: 22, scope: !4154)
!4156 = !DILocation(line: 1455, column: 9, scope: !4154)
!4157 = !DILocation(line: 1455, column: 16, scope: !4154)
!4158 = !DILocation(line: 1455, column: 23, scope: !4154)
!4159 = !DILocation(line: 1456, column: 31, scope: !4154)
!4160 = !DILocation(line: 1456, column: 42, scope: !4154)
!4161 = !DILocation(line: 1456, column: 13, scope: !4154)
!4162 = !DILocation(line: 1456, column: 25, scope: !4154)
!4163 = !DILocation(line: 1456, column: 29, scope: !4154)
!4164 = distinct !{!4164, !4156, !4165}
!4165 = !DILocation(line: 1456, column: 44, scope: !4154)
!4166 = !DILocation(line: 1458, column: 9, scope: !4154)
!4167 = !DILocation(line: 1458, column: 16, scope: !4154)
!4168 = !DILocation(line: 1458, column: 23, scope: !4154)
!4169 = !DILocation(line: 1459, column: 5, scope: !4154)
!4170 = !DILocation(line: 1460, column: 1, scope: !4089)
!4171 = distinct !DISubprogram(name: "ArrayJanitor", linkageName: "_ZN11xercesc_2_712ArrayJanitorIcEC2EPcPNS_13MemoryManagerE", scope: !4022, file: !2296, line: 110, type: !4032, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !4031, retainedNodes: !904)
!4172 = !DILocalVariable(name: "this", arg: 1, scope: !4171, type: !4173, flags: DIFlagArtificial | DIFlagObjectPointer)
!4173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4022, size: 64)
!4174 = !DILocation(line: 0, scope: !4171)
!4175 = !DILocalVariable(name: "toDelete", arg: 2, scope: !4171, file: !2086, line: 79, type: !14)
!4176 = !DILocation(line: 79, column: 27, scope: !4171)
!4177 = !DILocalVariable(name: "manager", arg: 3, scope: !4171, file: !2086, line: 79, type: !71)
!4178 = !DILocation(line: 79, column: 58, scope: !4171)
!4179 = !DILocation(line: 114, column: 1, scope: !4171)
!4180 = !DILocation(line: 79, column: 5, scope: !4181)
!4181 = !DILexicalBlockFile(scope: !4171, file: !2086, discriminator: 0)
!4182 = !DILocation(line: 112, column: 5, scope: !4183)
!4183 = !DILexicalBlockFile(scope: !4171, file: !2296, discriminator: 0)
!4184 = !DILocation(line: 112, column: 11, scope: !4183)
!4185 = !DILocation(line: 113, column: 7, scope: !4183)
!4186 = !DILocation(line: 113, column: 22, scope: !4183)
!4187 = !DILocation(line: 115, column: 1, scope: !4183)
!4188 = distinct !DISubprogram(name: "~ArrayJanitor", linkageName: "_ZN11xercesc_2_712ArrayJanitorIcED2Ev", scope: !4022, file: !2296, line: 118, type: !4035, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !4034, retainedNodes: !904)
!4189 = !DILocalVariable(name: "this", arg: 1, scope: !4188, type: !4173, flags: DIFlagArtificial | DIFlagObjectPointer)
!4190 = !DILocation(line: 0, scope: !4188)
!4191 = !DILocation(line: 120, column: 2, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4188, file: !2296, line: 119, column: 1)
!4193 = !DILocation(line: 121, column: 1, scope: !4188)
!4194 = distinct !DISubprogram(name: "parseInt", linkageName: "_ZN11xercesc_2_79XMLString8parseIntEPKtPNS_13MemoryManagerE", scope: !9, file: !3, line: 1391, type: !189, scopeLine: 1393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !188, retainedNodes: !904)
!4195 = !DILocalVariable(name: "toConvert", arg: 1, scope: !4194, file: !3, line: 1391, type: !28)
!4196 = !DILocation(line: 1391, column: 44, scope: !4194)
!4197 = !DILocalVariable(name: "manager", arg: 2, scope: !4194, file: !3, line: 1392, type: !71)
!4198 = !DILocation(line: 1392, column: 45, scope: !4194)
!4199 = !DILocation(line: 1395, column: 11, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4194, file: !3, line: 1395, column: 9)
!4201 = !DILocation(line: 1395, column: 22, scope: !4200)
!4202 = !DILocation(line: 1395, column: 28, scope: !4200)
!4203 = !DILocation(line: 1395, column: 27, scope: !4200)
!4204 = !DILocation(line: 1395, column: 9, scope: !4194)
!4205 = !DILocation(line: 1396, column: 9, scope: !4200)
!4206 = !DILocation(line: 1427, column: 1, scope: !4200)
!4207 = !DILocalVariable(name: "trimmedStr", scope: !4194, file: !3, line: 1398, type: !24)
!4208 = !DILocation(line: 1398, column: 9, scope: !4194)
!4209 = !DILocation(line: 1398, column: 43, scope: !4194)
!4210 = !DILocation(line: 1398, column: 54, scope: !4194)
!4211 = !DILocation(line: 1398, column: 22, scope: !4194)
!4212 = !DILocalVariable(name: "jan1", scope: !4194, file: !3, line: 1399, type: !2085)
!4213 = !DILocation(line: 1399, column: 22, scope: !4194)
!4214 = !DILocation(line: 1399, column: 27, scope: !4194)
!4215 = !DILocation(line: 1399, column: 39, scope: !4194)
!4216 = !DILocation(line: 1400, column: 18, scope: !4194)
!4217 = !DILocation(line: 1400, column: 2, scope: !4194)
!4218 = !DILocalVariable(name: "trimmedStrLen", scope: !4194, file: !3, line: 1401, type: !43)
!4219 = !DILocation(line: 1401, column: 18, scope: !4194)
!4220 = !DILocation(line: 1401, column: 55, scope: !4194)
!4221 = !DILocation(line: 1401, column: 34, scope: !4194)
!4222 = !DILocation(line: 1403, column: 8, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4194, file: !3, line: 1403, column: 7)
!4224 = !DILocation(line: 1403, column: 7, scope: !4194)
!4225 = !DILocation(line: 1404, column: 9, scope: !4223)
!4226 = !DILocation(line: 1427, column: 1, scope: !4194)
!4227 = !DILocation(line: 1427, column: 1, scope: !4223)
!4228 = !DILocation(line: 1407, column: 2, scope: !4194)
!4229 = !DILocation(line: 1407, column: 8, scope: !4194)
!4230 = !DILocalVariable(name: "nptr", scope: !4194, file: !3, line: 1409, type: !15)
!4231 = !DILocation(line: 1409, column: 8, scope: !4194)
!4232 = !DILocation(line: 1409, column: 36, scope: !4194)
!4233 = !DILocation(line: 1409, column: 48, scope: !4194)
!4234 = !DILocation(line: 1409, column: 15, scope: !4194)
!4235 = !DILocalVariable(name: "jan2", scope: !4194, file: !3, line: 1410, type: !4022)
!4236 = !DILocation(line: 1410, column: 24, scope: !4194)
!4237 = !DILocation(line: 1410, column: 29, scope: !4194)
!4238 = !DILocation(line: 1410, column: 35, scope: !4194)
!4239 = !DILocalVariable(name: "endptr", scope: !4194, file: !3, line: 1412, type: !15)
!4240 = !DILocation(line: 1412, column: 11, scope: !4194)
!4241 = !DILocalVariable(name: "retVal", scope: !4194, file: !3, line: 1413, type: !174)
!4242 = !DILocation(line: 1413, column: 10, scope: !4194)
!4243 = !DILocation(line: 1413, column: 26, scope: !4194)
!4244 = !DILocation(line: 1413, column: 19, scope: !4194)
!4245 = !DILocation(line: 1416, column: 8, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4194, file: !3, line: 1416, column: 7)
!4247 = !DILocation(line: 1416, column: 17, scope: !4246)
!4248 = !DILocation(line: 1416, column: 15, scope: !4246)
!4249 = !DILocation(line: 1416, column: 32, scope: !4246)
!4250 = !DILocation(line: 1416, column: 26, scope: !4246)
!4251 = !DILocation(line: 1416, column: 23, scope: !4246)
!4252 = !DILocation(line: 1416, column: 7, scope: !4194)
!4253 = !DILocation(line: 1417, column: 3, scope: !4246)
!4254 = !DILocation(line: 1427, column: 1, scope: !4246)
!4255 = !DILocation(line: 1420, column: 9, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4194, file: !3, line: 1420, column: 9)
!4257 = !DILocation(line: 1420, column: 15, scope: !4256)
!4258 = !DILocation(line: 1420, column: 9, scope: !4194)
!4259 = !DILocation(line: 1421, column: 9, scope: !4256)
!4260 = !DILocation(line: 1427, column: 1, scope: !4256)
!4261 = !DILocation(line: 1426, column: 15, scope: !4194)
!4262 = distinct !DISubprogram(name: "NumberFormatException", linkageName: "_ZN11xercesc_2_721NumberFormatExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE", scope: !4264, file: !4263, line: 30, type: !4268, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !4267, retainedNodes: !904)
!4263 = !DIFile(filename: "./xercesc/util/NumberFormatException.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!4264 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "NumberFormatException", scope: !2, file: !4263, line: 30, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !4265, vtableHolder: !1515, identifier: "_ZTSN11xercesc_2_721NumberFormatExceptionE")
!4265 = !{!4266, !4267, !4271, !4276, !4279, !4282, !4285, !4289, !4293, !4296}
!4266 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !4264, baseType: !1515, flags: DIFlagPublic, extraData: i32 0)
!4267 = !DISubprogram(name: "NumberFormatException", scope: !4264, file: !4263, line: 30, type: !4268, scopeLine: 30, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!4268 = !DISubroutineType(types: !4269)
!4269 = !{null, !4270, !17, !42, !1521, !4}
!4270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4264, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!4271 = !DISubprogram(name: "NumberFormatException", scope: !4264, file: !4263, line: 30, type: !4272, scopeLine: 30, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!4272 = !DISubroutineType(types: !4273)
!4273 = !{null, !4270, !4274}
!4274 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !4275, size: 64)
!4275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4264)
!4276 = !DISubprogram(name: "NumberFormatException", scope: !4264, file: !4263, line: 30, type: !4277, scopeLine: 30, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!4277 = !DISubroutineType(types: !4278)
!4278 = !{null, !4270, !17, !42, !1521, !28, !28, !28, !28, !4}
!4279 = !DISubprogram(name: "NumberFormatException", scope: !4264, file: !4263, line: 30, type: !4280, scopeLine: 30, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!4280 = !DISubroutineType(types: !4281)
!4281 = !{null, !4270, !17, !42, !1521, !17, !17, !17, !17, !4}
!4282 = !DISubprogram(name: "~NumberFormatException", scope: !4264, file: !4263, line: 30, type: !4283, scopeLine: 30, containingType: !4264, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!4283 = !DISubroutineType(types: !4284)
!4284 = !{null, !4270}
!4285 = !DISubprogram(name: "operator=", linkageName: "_ZN11xercesc_2_721NumberFormatExceptionaSERKS0_", scope: !4264, file: !4263, line: 30, type: !4286, scopeLine: 30, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!4286 = !DISubroutineType(types: !4287)
!4287 = !{!4288, !4270, !4274}
!4288 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !4264, size: 64)
!4289 = !DISubprogram(name: "duplicate", linkageName: "_ZNK11xercesc_2_721NumberFormatException9duplicateEv", scope: !4264, file: !4263, line: 30, type: !4290, scopeLine: 30, containingType: !4264, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!4290 = !DISubroutineType(types: !4291)
!4291 = !{!1543, !4292}
!4292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4275, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!4293 = !DISubprogram(name: "getType", linkageName: "_ZNK11xercesc_2_721NumberFormatException7getTypeEv", scope: !4264, file: !4263, line: 30, type: !4294, scopeLine: 30, containingType: !4264, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!4294 = !DISubroutineType(types: !4295)
!4295 = !{!29, !4292}
!4296 = !DISubprogram(name: "NumberFormatException", scope: !4264, file: !4263, line: 30, type: !4283, scopeLine: 30, flags: DIFlagPrototyped, spFlags: 0)
!4297 = !DILocalVariable(name: "this", arg: 1, scope: !4262, type: !4298, flags: DIFlagArtificial | DIFlagObjectPointer)
!4298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4264, size: 64)
!4299 = !DILocation(line: 0, scope: !4262)
!4300 = !DILocalVariable(name: "srcFile", arg: 2, scope: !4262, file: !4263, line: 30, type: !17)
!4301 = !DILocation(line: 30, column: 1, scope: !4262)
!4302 = !DILocalVariable(name: "srcLine", arg: 3, scope: !4262, file: !4263, line: 30, type: !42)
!4303 = !DILocalVariable(name: "toThrow", arg: 4, scope: !4262, file: !4263, line: 30, type: !1521)
!4304 = !DILocalVariable(name: "memoryManager", arg: 5, scope: !4262, file: !4263, line: 30, type: !4)
!4305 = !DILocation(line: 30, column: 1, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4262, file: !4263, line: 30, column: 1)
!4307 = distinct !DISubprogram(name: "~NumberFormatException", linkageName: "_ZN11xercesc_2_721NumberFormatExceptionD2Ev", scope: !4264, file: !4263, line: 30, type: !4283, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !4282, retainedNodes: !904)
!4308 = !DILocalVariable(name: "this", arg: 1, scope: !4307, type: !4298, flags: DIFlagArtificial | DIFlagObjectPointer)
!4309 = !DILocation(line: 0, scope: !4307)
!4310 = !DILocation(line: 30, column: 1, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4307, file: !4263, line: 30, column: 1)
!4312 = !DILocation(line: 30, column: 1, scope: !4307)
!4313 = distinct !DISubprogram(name: "isWhitespace", linkageName: "_ZN11xercesc_2_710XMLChar1_012isWhitespaceEt", scope: !4314, file: !941, line: 217, type: !149, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !4337, retainedNodes: !904)
!4314 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "XMLChar1_0", scope: !2, file: !941, line: 44, size: 8, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !4315, identifier: "_ZTSN11xercesc_2_710XMLChar1_0E")
!4315 = !{!4316, !4320, !4321, !4324, !4325, !4326, !4327, !4328, !4329, !4332, !4333, !4334, !4335, !4336, !4337, !4338, !4339, !4340, !4341, !4342, !4343, !4346, !4347}
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "fgCharCharsTable1_0", scope: !4314, file: !941, line: 135, baseType: !4317, flags: DIFlagStaticMember)
!4317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 524288, elements: !4318)
!4318 = !{!4319}
!4319 = !DISubrange(count: 65536)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "enableNEL", scope: !4314, file: !941, line: 136, baseType: !54, flags: DIFlagStaticMember)
!4321 = !DISubprogram(name: "isAllSpaces", linkageName: "_ZN11xercesc_2_710XMLChar1_011isAllSpacesEPKtj", scope: !4314, file: !941, line: 50, type: !4322, scopeLine: 50, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4322 = !DISubroutineType(types: !4323)
!4323 = !{!54, !28, !42}
!4324 = !DISubprogram(name: "containsWhiteSpace", linkageName: "_ZN11xercesc_2_710XMLChar1_018containsWhiteSpaceEPKtj", scope: !4314, file: !941, line: 56, type: !4322, scopeLine: 56, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4325 = !DISubprogram(name: "isValidNmtoken", linkageName: "_ZN11xercesc_2_710XMLChar1_014isValidNmtokenEPKtj", scope: !4314, file: !941, line: 62, type: !4322, scopeLine: 62, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4326 = !DISubprogram(name: "isValidName", linkageName: "_ZN11xercesc_2_710XMLChar1_011isValidNameEPKtj", scope: !4314, file: !941, line: 68, type: !4322, scopeLine: 68, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4327 = !DISubprogram(name: "isValidNCName", linkageName: "_ZN11xercesc_2_710XMLChar1_013isValidNCNameEPKtj", scope: !4314, file: !941, line: 74, type: !4322, scopeLine: 74, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4328 = !DISubprogram(name: "isValidQName", linkageName: "_ZN11xercesc_2_710XMLChar1_012isValidQNameEPKtj", scope: !4314, file: !941, line: 80, type: !4322, scopeLine: 80, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4329 = !DISubprogram(name: "isXMLLetter", linkageName: "_ZN11xercesc_2_710XMLChar1_011isXMLLetterEtt", scope: !4314, file: !941, line: 90, type: !4330, scopeLine: 90, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4330 = !DISubroutineType(types: !4331)
!4331 = !{!54, !30, !30}
!4332 = !DISubprogram(name: "isFirstNameChar", linkageName: "_ZN11xercesc_2_710XMLChar1_015isFirstNameCharEtt", scope: !4314, file: !941, line: 91, type: !4330, scopeLine: 91, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4333 = !DISubprogram(name: "isNameChar", linkageName: "_ZN11xercesc_2_710XMLChar1_010isNameCharEtt", scope: !4314, file: !941, line: 92, type: !4330, scopeLine: 92, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4334 = !DISubprogram(name: "isPlainContentChar", linkageName: "_ZN11xercesc_2_710XMLChar1_018isPlainContentCharEtt", scope: !4314, file: !941, line: 93, type: !4330, scopeLine: 93, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4335 = !DISubprogram(name: "isSpecialStartTagChar", linkageName: "_ZN11xercesc_2_710XMLChar1_021isSpecialStartTagCharEtt", scope: !4314, file: !941, line: 94, type: !4330, scopeLine: 94, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4336 = !DISubprogram(name: "isXMLChar", linkageName: "_ZN11xercesc_2_710XMLChar1_09isXMLCharEtt", scope: !4314, file: !941, line: 95, type: !4330, scopeLine: 95, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4337 = !DISubprogram(name: "isWhitespace", linkageName: "_ZN11xercesc_2_710XMLChar1_012isWhitespaceEt", scope: !4314, file: !941, line: 96, type: !149, scopeLine: 96, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4338 = !DISubprogram(name: "isWhitespace", linkageName: "_ZN11xercesc_2_710XMLChar1_012isWhitespaceEtt", scope: !4314, file: !941, line: 97, type: !4330, scopeLine: 97, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4339 = !DISubprogram(name: "isControlChar", linkageName: "_ZN11xercesc_2_710XMLChar1_013isControlCharEtt", scope: !4314, file: !941, line: 98, type: !4330, scopeLine: 98, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4340 = !DISubprogram(name: "isPublicIdChar", linkageName: "_ZN11xercesc_2_710XMLChar1_014isPublicIdCharEtt", scope: !4314, file: !941, line: 100, type: !4330, scopeLine: 100, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4341 = !DISubprogram(name: "isFirstNCNameChar", linkageName: "_ZN11xercesc_2_710XMLChar1_017isFirstNCNameCharEtt", scope: !4314, file: !941, line: 101, type: !4330, scopeLine: 101, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4342 = !DISubprogram(name: "isNCNameChar", linkageName: "_ZN11xercesc_2_710XMLChar1_012isNCNameCharEtt", scope: !4314, file: !941, line: 102, type: !4330, scopeLine: 102, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4343 = !DISubprogram(name: "isNELRecognized", linkageName: "_ZN11xercesc_2_710XMLChar1_015isNELRecognizedEv", scope: !4314, file: !941, line: 110, type: !4344, scopeLine: 110, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4344 = !DISubroutineType(types: !4345)
!4345 = !{!54}
!4346 = !DISubprogram(name: "enableNELWS", linkageName: "_ZN11xercesc_2_710XMLChar1_011enableNELWSEv", scope: !4314, file: !941, line: 115, type: !443, scopeLine: 115, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4347 = !DISubprogram(name: "XMLChar1_0", scope: !4314, file: !941, line: 121, type: !4348, scopeLine: 121, flags: DIFlagPrototyped, spFlags: 0)
!4348 = !DISubroutineType(types: !4349)
!4349 = !{null, !4350}
!4350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4314, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!4351 = !DILocalVariable(name: "toCheck", arg: 1, scope: !4313, file: !941, line: 217, type: !30)
!4352 = !DILocation(line: 217, column: 50, scope: !4313)
!4353 = !DILocation(line: 219, column: 34, scope: !4313)
!4354 = !DILocation(line: 219, column: 14, scope: !4313)
!4355 = !DILocation(line: 219, column: 43, scope: !4313)
!4356 = !DILocation(line: 219, column: 66, scope: !4313)
!4357 = !DILocation(line: 219, column: 5, scope: !4313)
!4358 = distinct !DISubprogram(name: "upperCase", linkageName: "_ZN11xercesc_2_79XMLString9upperCaseEPt", scope: !9, file: !3, line: 1463, type: !216, scopeLine: 1464, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !328, retainedNodes: !904)
!4359 = !DILocalVariable(name: "toUpperCase", arg: 1, scope: !4358, file: !3, line: 1463, type: !23)
!4360 = !DILocation(line: 1463, column: 40, scope: !4358)
!4361 = !DILocation(line: 1466, column: 5, scope: !4358)
!4362 = !DILocation(line: 1466, column: 49, scope: !4358)
!4363 = !DILocation(line: 1466, column: 39, scope: !4358)
!4364 = !DILocation(line: 1467, column: 1, scope: !4358)
!4365 = distinct !DISubprogram(name: "upperCaseASCII", linkageName: "_ZN11xercesc_2_79XMLString14upperCaseASCIIEPt", scope: !9, file: !3, line: 1469, type: !216, scopeLine: 1470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !329, retainedNodes: !904)
!4366 = !DILocalVariable(name: "toUpperCase", arg: 1, scope: !4365, file: !3, line: 1469, type: !23)
!4367 = !DILocation(line: 1469, column: 45, scope: !4365)
!4368 = !DILocalVariable(name: "psz1", scope: !4365, file: !3, line: 1471, type: !24)
!4369 = !DILocation(line: 1471, column: 12, scope: !4365)
!4370 = !DILocation(line: 1471, column: 19, scope: !4365)
!4371 = !DILocation(line: 1473, column: 10, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 1473, column: 9)
!4373 = !DILocation(line: 1473, column: 9, scope: !4365)
!4374 = !DILocation(line: 1474, column: 9, scope: !4372)
!4375 = !DILocation(line: 1476, column: 5, scope: !4365)
!4376 = !DILocation(line: 1476, column: 13, scope: !4365)
!4377 = !DILocation(line: 1476, column: 12, scope: !4365)
!4378 = !DILocation(line: 1477, column: 14, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4380, file: !3, line: 1477, column: 13)
!4380 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 1476, column: 19)
!4381 = !DILocation(line: 1477, column: 13, scope: !4379)
!4382 = !DILocation(line: 1477, column: 19, scope: !4379)
!4383 = !DILocation(line: 1477, column: 32, scope: !4379)
!4384 = !DILocation(line: 1477, column: 36, scope: !4379)
!4385 = !DILocation(line: 1477, column: 35, scope: !4379)
!4386 = !DILocation(line: 1477, column: 41, scope: !4379)
!4387 = !DILocation(line: 1477, column: 13, scope: !4380)
!4388 = !DILocation(line: 1478, column: 22, scope: !4379)
!4389 = !DILocation(line: 1478, column: 21, scope: !4379)
!4390 = !DILocation(line: 1478, column: 27, scope: !4379)
!4391 = !DILocation(line: 1478, column: 39, scope: !4379)
!4392 = !DILocation(line: 1478, column: 14, scope: !4379)
!4393 = !DILocation(line: 1478, column: 19, scope: !4379)
!4394 = !DILocation(line: 1478, column: 13, scope: !4379)
!4395 = !DILocation(line: 1480, column: 13, scope: !4380)
!4396 = distinct !{!4396, !4375, !4397}
!4397 = !DILocation(line: 1481, column: 5, scope: !4365)
!4398 = !DILocation(line: 1482, column: 1, scope: !4365)
!4399 = distinct !DISubprogram(name: "lowerCase", linkageName: "_ZN11xercesc_2_79XMLString9lowerCaseEPt", scope: !9, file: !3, line: 1485, type: !216, scopeLine: 1486, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !330, retainedNodes: !904)
!4400 = !DILocalVariable(name: "toLowerCase", arg: 1, scope: !4399, file: !3, line: 1485, type: !23)
!4401 = !DILocation(line: 1485, column: 40, scope: !4399)
!4402 = !DILocation(line: 1488, column: 5, scope: !4399)
!4403 = !DILocation(line: 1488, column: 49, scope: !4399)
!4404 = !DILocation(line: 1488, column: 39, scope: !4399)
!4405 = !DILocation(line: 1489, column: 1, scope: !4399)
!4406 = distinct !DISubprogram(name: "lowerCaseASCII", linkageName: "_ZN11xercesc_2_79XMLString14lowerCaseASCIIEPt", scope: !9, file: !3, line: 1491, type: !216, scopeLine: 1492, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !331, retainedNodes: !904)
!4407 = !DILocalVariable(name: "toLowerCase", arg: 1, scope: !4406, file: !3, line: 1491, type: !23)
!4408 = !DILocation(line: 1491, column: 45, scope: !4406)
!4409 = !DILocalVariable(name: "psz1", scope: !4406, file: !3, line: 1493, type: !24)
!4410 = !DILocation(line: 1493, column: 12, scope: !4406)
!4411 = !DILocation(line: 1493, column: 19, scope: !4406)
!4412 = !DILocation(line: 1495, column: 10, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4406, file: !3, line: 1495, column: 9)
!4414 = !DILocation(line: 1495, column: 9, scope: !4406)
!4415 = !DILocation(line: 1496, column: 9, scope: !4413)
!4416 = !DILocation(line: 1498, column: 5, scope: !4406)
!4417 = !DILocation(line: 1498, column: 13, scope: !4406)
!4418 = !DILocation(line: 1498, column: 12, scope: !4406)
!4419 = !DILocation(line: 1499, column: 14, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4421, file: !3, line: 1499, column: 13)
!4421 = distinct !DILexicalBlock(scope: !4406, file: !3, line: 1498, column: 19)
!4422 = !DILocation(line: 1499, column: 13, scope: !4420)
!4423 = !DILocation(line: 1499, column: 19, scope: !4420)
!4424 = !DILocation(line: 1499, column: 32, scope: !4420)
!4425 = !DILocation(line: 1499, column: 36, scope: !4420)
!4426 = !DILocation(line: 1499, column: 35, scope: !4420)
!4427 = !DILocation(line: 1499, column: 41, scope: !4420)
!4428 = !DILocation(line: 1499, column: 13, scope: !4421)
!4429 = !DILocation(line: 1500, column: 22, scope: !4420)
!4430 = !DILocation(line: 1500, column: 21, scope: !4420)
!4431 = !DILocation(line: 1500, column: 27, scope: !4420)
!4432 = !DILocation(line: 1500, column: 39, scope: !4420)
!4433 = !DILocation(line: 1500, column: 14, scope: !4420)
!4434 = !DILocation(line: 1500, column: 19, scope: !4420)
!4435 = !DILocation(line: 1500, column: 13, scope: !4420)
!4436 = !DILocation(line: 1502, column: 13, scope: !4421)
!4437 = distinct !{!4437, !4416, !4438}
!4438 = !DILocation(line: 1503, column: 5, scope: !4406)
!4439 = !DILocation(line: 1504, column: 1, scope: !4406)
!4440 = distinct !DISubprogram(name: "subString", linkageName: "_ZN11xercesc_2_79XMLString9subStringEPtPKtiiPNS_13MemoryManagerE", scope: !9, file: !3, line: 1506, type: !104, scopeLine: 1509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !103, retainedNodes: !904)
!4441 = !DILocalVariable(name: "targetStr", arg: 1, scope: !4440, file: !3, line: 1506, type: !23)
!4442 = !DILocation(line: 1506, column: 40, scope: !4440)
!4443 = !DILocalVariable(name: "srcStr", arg: 2, scope: !4440, file: !3, line: 1506, type: !28)
!4444 = !DILocation(line: 1506, column: 70, scope: !4440)
!4445 = !DILocalVariable(name: "startIndex", arg: 3, scope: !4440, file: !3, line: 1507, type: !61)
!4446 = !DILocation(line: 1507, column: 39, scope: !4440)
!4447 = !DILocalVariable(name: "endIndex", arg: 4, scope: !4440, file: !3, line: 1507, type: !61)
!4448 = !DILocation(line: 1507, column: 61, scope: !4440)
!4449 = !DILocalVariable(name: "manager", arg: 5, scope: !4440, file: !3, line: 1508, type: !71)
!4450 = !DILocation(line: 1508, column: 50, scope: !4440)
!4451 = !DILocation(line: 1510, column: 15, scope: !4440)
!4452 = !DILocation(line: 1510, column: 26, scope: !4440)
!4453 = !DILocation(line: 1510, column: 34, scope: !4440)
!4454 = !DILocation(line: 1510, column: 46, scope: !4440)
!4455 = !DILocation(line: 1510, column: 66, scope: !4440)
!4456 = !DILocation(line: 1510, column: 56, scope: !4440)
!4457 = !DILocation(line: 1510, column: 75, scope: !4440)
!4458 = !DILocation(line: 1510, column: 5, scope: !4440)
!4459 = !DILocation(line: 1511, column: 1, scope: !4440)
!4460 = distinct !DISubprogram(name: "subString", linkageName: "_ZN11xercesc_2_79XMLString9subStringEPtPKtiiiPNS_13MemoryManagerE", scope: !9, file: !3, line: 1513, type: !107, scopeLine: 1517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !106, retainedNodes: !904)
!4461 = !DILocalVariable(name: "targetStr", arg: 1, scope: !4460, file: !3, line: 1513, type: !23)
!4462 = !DILocation(line: 1513, column: 40, scope: !4460)
!4463 = !DILocalVariable(name: "srcStr", arg: 2, scope: !4460, file: !3, line: 1513, type: !28)
!4464 = !DILocation(line: 1513, column: 70, scope: !4460)
!4465 = !DILocalVariable(name: "startIndex", arg: 3, scope: !4460, file: !3, line: 1514, type: !61)
!4466 = !DILocation(line: 1514, column: 39, scope: !4460)
!4467 = !DILocalVariable(name: "endIndex", arg: 4, scope: !4460, file: !3, line: 1514, type: !61)
!4468 = !DILocation(line: 1514, column: 61, scope: !4460)
!4469 = !DILocalVariable(name: "srcStrLength", arg: 5, scope: !4460, file: !3, line: 1515, type: !61)
!4470 = !DILocation(line: 1515, column: 39, scope: !4460)
!4471 = !DILocalVariable(name: "manager", arg: 6, scope: !4460, file: !3, line: 1516, type: !71)
!4472 = !DILocation(line: 1516, column: 50, scope: !4460)
!4473 = !DILocation(line: 1521, column: 9, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4460, file: !3, line: 1521, column: 9)
!4475 = !DILocation(line: 1521, column: 19, scope: !4474)
!4476 = !DILocation(line: 1521, column: 9, scope: !4460)
!4477 = !DILocation(line: 1522, column: 9, scope: !4474)
!4478 = !DILocation(line: 1535, column: 1, scope: !4474)
!4479 = !DILocalVariable(name: "copySize", scope: !4460, file: !3, line: 1524, type: !61)
!4480 = !DILocation(line: 1524, column: 15, scope: !4460)
!4481 = !DILocation(line: 1524, column: 26, scope: !4460)
!4482 = !DILocation(line: 1524, column: 37, scope: !4460)
!4483 = !DILocation(line: 1524, column: 35, scope: !4460)
!4484 = !DILocation(line: 1527, column: 10, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4460, file: !3, line: 1527, column: 10)
!4486 = !DILocation(line: 1527, column: 21, scope: !4485)
!4487 = !DILocation(line: 1527, column: 25, scope: !4485)
!4488 = !DILocation(line: 1527, column: 28, scope: !4485)
!4489 = !DILocation(line: 1527, column: 41, scope: !4485)
!4490 = !DILocation(line: 1527, column: 39, scope: !4485)
!4491 = !DILocation(line: 1527, column: 50, scope: !4485)
!4492 = !DILocation(line: 1527, column: 53, scope: !4485)
!4493 = !DILocation(line: 1527, column: 64, scope: !4485)
!4494 = !DILocation(line: 1527, column: 62, scope: !4485)
!4495 = !DILocation(line: 1527, column: 10, scope: !4460)
!4496 = !DILocation(line: 1528, column: 9, scope: !4485)
!4497 = !DILocation(line: 1535, column: 1, scope: !4485)
!4498 = !DILocalVariable(name: "i", scope: !4499, file: !3, line: 1530, type: !34)
!4499 = distinct !DILexicalBlock(scope: !4460, file: !3, line: 1530, column: 5)
!4500 = !DILocation(line: 1530, column: 14, scope: !4499)
!4501 = !DILocation(line: 1530, column: 17, scope: !4499)
!4502 = !DILocation(line: 1530, column: 10, scope: !4499)
!4503 = !DILocation(line: 1530, column: 29, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4499, file: !3, line: 1530, column: 5)
!4505 = !DILocation(line: 1530, column: 33, scope: !4504)
!4506 = !DILocation(line: 1530, column: 31, scope: !4504)
!4507 = !DILocation(line: 1530, column: 5, scope: !4499)
!4508 = !DILocation(line: 1531, column: 35, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4504, file: !3, line: 1530, column: 48)
!4510 = !DILocation(line: 1531, column: 42, scope: !4509)
!4511 = !DILocation(line: 1531, column: 9, scope: !4509)
!4512 = !DILocation(line: 1531, column: 19, scope: !4509)
!4513 = !DILocation(line: 1531, column: 21, scope: !4509)
!4514 = !DILocation(line: 1531, column: 20, scope: !4509)
!4515 = !DILocation(line: 1531, column: 33, scope: !4509)
!4516 = !DILocation(line: 1532, column: 5, scope: !4509)
!4517 = !DILocation(line: 1530, column: 44, scope: !4504)
!4518 = !DILocation(line: 1530, column: 5, scope: !4504)
!4519 = distinct !{!4519, !4507, !4520}
!4520 = !DILocation(line: 1532, column: 5, scope: !4499)
!4521 = !DILocation(line: 1534, column: 5, scope: !4460)
!4522 = !DILocation(line: 1534, column: 15, scope: !4460)
!4523 = !DILocation(line: 1534, column: 25, scope: !4460)
!4524 = !DILocation(line: 1535, column: 1, scope: !4460)
!4525 = distinct !DISubprogram(name: "tokenizeString", linkageName: "_ZN11xercesc_2_79XMLString14tokenizeStringEPKtPNS_13MemoryManagerE", scope: !9, file: !3, line: 1537, type: !219, scopeLine: 1539, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !218, retainedNodes: !904)
!4526 = !DILocalVariable(name: "tokenizeSrc", arg: 1, scope: !4525, file: !3, line: 1537, type: !28)
!4527 = !DILocation(line: 1537, column: 77, scope: !4525)
!4528 = !DILocalVariable(name: "manager", arg: 2, scope: !4525, file: !3, line: 1538, type: !71)
!4529 = !DILocation(line: 1538, column: 77, scope: !4525)
!4530 = !DILocalVariable(name: "orgText", scope: !4525, file: !3, line: 1540, type: !24)
!4531 = !DILocation(line: 1540, column: 12, scope: !4525)
!4532 = !DILocation(line: 1540, column: 32, scope: !4525)
!4533 = !DILocation(line: 1540, column: 45, scope: !4525)
!4534 = !DILocation(line: 1540, column: 22, scope: !4525)
!4535 = !DILocalVariable(name: "janText", scope: !4525, file: !3, line: 1541, type: !2085)
!4536 = !DILocation(line: 1541, column: 25, scope: !4525)
!4537 = !DILocation(line: 1541, column: 33, scope: !4525)
!4538 = !DILocation(line: 1541, column: 42, scope: !4525)
!4539 = !DILocalVariable(name: "tokenizeStr", scope: !4525, file: !3, line: 1542, type: !24)
!4540 = !DILocation(line: 1542, column: 12, scope: !4525)
!4541 = !DILocation(line: 1542, column: 26, scope: !4525)
!4542 = !DILocalVariable(name: "tokenStack", scope: !4525, file: !3, line: 1544, type: !4543)
!4543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4544, size: 64)
!4544 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "RefArrayVectorOf<unsigned short>", scope: !2, file: !4545, line: 28, size: 320, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !4546, vtableHolder: !222, templateParams: !320, identifier: "_ZTSN11xercesc_2_716RefArrayVectorOfItEE")
!4545 = !DIFile(filename: "./xercesc/util/RefArrayVectorOf.hpp", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!4546 = !{!4547, !4548, !4552, !4555, !4558, !4559, !4562, !4563, !4564, !4569}
!4547 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !4544, baseType: !222, flags: DIFlagPublic, extraData: i32 0)
!4548 = !DISubprogram(name: "RefArrayVectorOf", scope: !4544, file: !4545, line: 34, type: !4549, scopeLine: 34, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!4549 = !DISubroutineType(types: !4550)
!4550 = !{null, !4551, !42, !270, !71}
!4551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4544, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!4552 = !DISubprogram(name: "~RefArrayVectorOf", scope: !4544, file: !4545, line: 41, type: !4553, scopeLine: 41, containingType: !4544, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!4553 = !DISubroutineType(types: !4554)
!4554 = !{null, !4551}
!4555 = !DISubprogram(name: "setElementAt", linkageName: "_ZN11xercesc_2_716RefArrayVectorOfItE12setElementAtEPtj", scope: !4544, file: !4545, line: 46, type: !4556, scopeLine: 46, containingType: !4544, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!4556 = !DISubroutineType(types: !4557)
!4557 = !{null, !4551, !277, !42}
!4558 = !DISubprogram(name: "removeAllElements", linkageName: "_ZN11xercesc_2_716RefArrayVectorOfItE17removeAllElementsEv", scope: !4544, file: !4545, line: 47, type: !4553, scopeLine: 47, containingType: !4544, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!4559 = !DISubprogram(name: "removeElementAt", linkageName: "_ZN11xercesc_2_716RefArrayVectorOfItE15removeElementAtEj", scope: !4544, file: !4545, line: 48, type: !4560, scopeLine: 48, containingType: !4544, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!4560 = !DISubroutineType(types: !4561)
!4561 = !{null, !4551, !42}
!4562 = !DISubprogram(name: "removeLastElement", linkageName: "_ZN11xercesc_2_716RefArrayVectorOfItE17removeLastElementEv", scope: !4544, file: !4545, line: 49, type: !4553, scopeLine: 49, containingType: !4544, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!4563 = !DISubprogram(name: "cleanup", linkageName: "_ZN11xercesc_2_716RefArrayVectorOfItE7cleanupEv", scope: !4544, file: !4545, line: 50, type: !4553, scopeLine: 50, containingType: !4544, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!4564 = !DISubprogram(name: "RefArrayVectorOf", scope: !4544, file: !4545, line: 55, type: !4565, scopeLine: 55, flags: DIFlagPrototyped, spFlags: 0)
!4565 = !DISubroutineType(types: !4566)
!4566 = !{null, !4551, !4567}
!4567 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !4568, size: 64)
!4568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4544)
!4569 = !DISubprogram(name: "operator=", linkageName: "_ZN11xercesc_2_716RefArrayVectorOfItEaSERKS1_", scope: !4544, file: !4545, line: 56, type: !4570, scopeLine: 56, flags: DIFlagPrototyped, spFlags: 0)
!4570 = !DISubroutineType(types: !4571)
!4571 = !{!4572, !4551, !4567}
!4572 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !4544, size: 64)
!4573 = !DILocation(line: 1544, column: 30, scope: !4525)
!4574 = !DILocation(line: 1544, column: 48, scope: !4525)
!4575 = !DILocation(line: 1544, column: 43, scope: !4525)
!4576 = !DILocation(line: 1544, column: 91, scope: !4525)
!4577 = !DILocation(line: 1544, column: 57, scope: !4525)
!4578 = !DILocalVariable(name: "len", scope: !4525, file: !3, line: 1546, type: !43)
!4579 = !DILocation(line: 1546, column: 18, scope: !4525)
!4580 = !DILocation(line: 1546, column: 34, scope: !4525)
!4581 = !DILocation(line: 1546, column: 24, scope: !4525)
!4582 = !DILocalVariable(name: "skip", scope: !4525, file: !3, line: 1547, type: !43)
!4583 = !DILocation(line: 1547, column: 18, scope: !4525)
!4584 = !DILocalVariable(name: "index", scope: !4525, file: !3, line: 1548, type: !43)
!4585 = !DILocation(line: 1548, column: 18, scope: !4525)
!4586 = !DILocation(line: 1550, column: 5, scope: !4525)
!4587 = !DILocation(line: 1550, column: 12, scope: !4525)
!4588 = !DILocation(line: 1550, column: 21, scope: !4525)
!4589 = !DILocation(line: 1550, column: 18, scope: !4525)
!4590 = !DILocation(line: 1552, column: 21, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 1552, column: 9)
!4592 = distinct !DILexicalBlock(scope: !4525, file: !3, line: 1550, column: 26)
!4593 = !DILocation(line: 1552, column: 19, scope: !4591)
!4594 = !DILocation(line: 1552, column: 14, scope: !4591)
!4595 = !DILocation(line: 1552, column: 28, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4591, file: !3, line: 1552, column: 9)
!4597 = !DILocation(line: 1552, column: 35, scope: !4596)
!4598 = !DILocation(line: 1552, column: 33, scope: !4596)
!4599 = !DILocation(line: 1552, column: 9, scope: !4591)
!4600 = !DILocation(line: 1554, column: 43, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 1554, column: 17)
!4602 = distinct !DILexicalBlock(scope: !4596, file: !3, line: 1553, column: 9)
!4603 = !DILocation(line: 1554, column: 55, scope: !4601)
!4604 = !DILocation(line: 1554, column: 18, scope: !4601)
!4605 = !DILocation(line: 1554, column: 17, scope: !4602)
!4606 = !DILocation(line: 1555, column: 17, scope: !4601)
!4607 = !DILocation(line: 1582, column: 1, scope: !4525)
!4608 = !DILocation(line: 1556, column: 9, scope: !4602)
!4609 = !DILocation(line: 1552, column: 44, scope: !4596)
!4610 = !DILocation(line: 1552, column: 9, scope: !4596)
!4611 = distinct !{!4611, !4599, !4612}
!4612 = !DILocation(line: 1556, column: 9, scope: !4591)
!4613 = !DILocation(line: 1557, column: 17, scope: !4592)
!4614 = !DILocation(line: 1557, column: 15, scope: !4592)
!4615 = !DILocation(line: 1560, column: 9, scope: !4592)
!4616 = !DILocation(line: 1560, column: 16, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4618, file: !3, line: 1560, column: 9)
!4618 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 1560, column: 9)
!4619 = !DILocation(line: 1560, column: 23, scope: !4617)
!4620 = !DILocation(line: 1560, column: 21, scope: !4617)
!4621 = !DILocation(line: 1560, column: 9, scope: !4618)
!4622 = !DILocation(line: 1562, column: 42, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4624, file: !3, line: 1562, column: 17)
!4624 = distinct !DILexicalBlock(scope: !4617, file: !3, line: 1561, column: 9)
!4625 = !DILocation(line: 1562, column: 54, scope: !4623)
!4626 = !DILocation(line: 1562, column: 17, scope: !4623)
!4627 = !DILocation(line: 1562, column: 17, scope: !4624)
!4628 = !DILocation(line: 1563, column: 17, scope: !4623)
!4629 = !DILocation(line: 1564, column: 9, scope: !4624)
!4630 = !DILocation(line: 1560, column: 32, scope: !4617)
!4631 = !DILocation(line: 1560, column: 9, scope: !4617)
!4632 = distinct !{!4632, !4621, !4633}
!4633 = !DILocation(line: 1564, column: 9, scope: !4618)
!4634 = !DILocation(line: 1567, column: 13, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 1567, column: 13)
!4636 = !DILocation(line: 1567, column: 21, scope: !4635)
!4637 = !DILocation(line: 1567, column: 18, scope: !4635)
!4638 = !DILocation(line: 1567, column: 13, scope: !4592)
!4639 = !DILocation(line: 1568, column: 13, scope: !4635)
!4640 = !DILocalVariable(name: "token", scope: !4592, file: !3, line: 1572, type: !24)
!4641 = !DILocation(line: 1572, column: 16, scope: !4592)
!4642 = !DILocation(line: 1572, column: 33, scope: !4592)
!4643 = !DILocation(line: 1574, column: 14, scope: !4592)
!4644 = !DILocation(line: 1574, column: 18, scope: !4592)
!4645 = !DILocation(line: 1574, column: 21, scope: !4592)
!4646 = !DILocation(line: 1574, column: 20, scope: !4592)
!4647 = !DILocation(line: 1574, column: 13, scope: !4592)
!4648 = !DILocation(line: 1574, column: 28, scope: !4592)
!4649 = !DILocation(line: 1572, column: 42, scope: !4592)
!4650 = !DILocation(line: 1572, column: 24, scope: !4592)
!4651 = !DILocation(line: 1577, column: 30, scope: !4592)
!4652 = !DILocation(line: 1577, column: 37, scope: !4592)
!4653 = !DILocation(line: 1577, column: 50, scope: !4592)
!4654 = !DILocation(line: 1577, column: 57, scope: !4592)
!4655 = !DILocation(line: 1577, column: 63, scope: !4592)
!4656 = !DILocation(line: 1577, column: 68, scope: !4592)
!4657 = !DILocation(line: 1577, column: 9, scope: !4592)
!4658 = !DILocation(line: 1578, column: 9, scope: !4592)
!4659 = !DILocation(line: 1578, column: 21, scope: !4592)
!4660 = !DILocation(line: 1578, column: 32, scope: !4592)
!4661 = !DILocation(line: 1579, column: 17, scope: !4592)
!4662 = !DILocation(line: 1579, column: 15, scope: !4592)
!4663 = distinct !{!4663, !4586, !4664}
!4664 = !DILocation(line: 1580, column: 5, scope: !4525)
!4665 = !DILocation(line: 1581, column: 12, scope: !4525)
!4666 = distinct !DISubprogram(name: "RefArrayVectorOf", linkageName: "_ZN11xercesc_2_716RefArrayVectorOfItEC2EjbPNS_13MemoryManagerE", scope: !4544, file: !4667, line: 30, type: !4549, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !4548, retainedNodes: !904)
!4667 = !DIFile(filename: "./xercesc/util/RefArrayVectorOf.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!4668 = !DILocalVariable(name: "this", arg: 1, scope: !4666, type: !4543, flags: DIFlagArtificial | DIFlagObjectPointer)
!4669 = !DILocation(line: 0, scope: !4666)
!4670 = !DILocalVariable(name: "maxElems", arg: 2, scope: !4666, file: !4545, line: 34, type: !42)
!4671 = !DILocation(line: 34, column: 44, scope: !4666)
!4672 = !DILocalVariable(name: "adoptElems", arg: 3, scope: !4666, file: !4545, line: 35, type: !270)
!4673 = !DILocation(line: 35, column: 44, scope: !4666)
!4674 = !DILocalVariable(name: "manager", arg: 4, scope: !4666, file: !4545, line: 36, type: !71)
!4675 = !DILocation(line: 36, column: 44, scope: !4666)
!4676 = !DILocation(line: 34, column: 1, scope: !4666)
!4677 = !DILocation(line: 33, column: 30, scope: !4666)
!4678 = !DILocation(line: 33, column: 40, scope: !4666)
!4679 = !DILocation(line: 33, column: 52, scope: !4666)
!4680 = !DILocation(line: 33, column: 7, scope: !4666)
!4681 = !DILocation(line: 35, column: 1, scope: !4666)
!4682 = distinct !DISubprogram(name: "addElement", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItE10addElementEPt", scope: !222, file: !4683, line: 55, type: !275, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !274, retainedNodes: !904)
!4683 = !DIFile(filename: "./xercesc/util/BaseRefVectorOf.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/523.xalancbmk_r/build/build_base_ld-loop-ext-m64.0000")
!4684 = !DILocalVariable(name: "this", arg: 1, scope: !4682, type: !221, flags: DIFlagArtificial | DIFlagObjectPointer)
!4685 = !DILocation(line: 0, scope: !4682)
!4686 = !DILocalVariable(name: "toAdd", arg: 2, scope: !4682, file: !223, line: 51, type: !277)
!4687 = !DILocation(line: 51, column: 34, scope: !4682)
!4688 = !DILocation(line: 57, column: 5, scope: !4682)
!4689 = !DILocation(line: 58, column: 28, scope: !4682)
!4690 = !DILocation(line: 58, column: 5, scope: !4682)
!4691 = !DILocation(line: 58, column: 15, scope: !4682)
!4692 = !DILocation(line: 58, column: 26, scope: !4682)
!4693 = !DILocation(line: 59, column: 5, scope: !4682)
!4694 = !DILocation(line: 59, column: 14, scope: !4682)
!4695 = !DILocation(line: 60, column: 1, scope: !4682)
!4696 = distinct !DISubprogram(name: "isInList", linkageName: "_ZN11xercesc_2_79XMLString8isInListEPKtS2_", scope: !9, file: !3, line: 1590, type: !52, scopeLine: 1591, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !155, retainedNodes: !904)
!4697 = !DILocalVariable(name: "toFind", arg: 1, scope: !4696, file: !3, line: 1590, type: !28)
!4698 = !DILocation(line: 1590, column: 45, scope: !4696)
!4699 = !DILocalVariable(name: "enumList", arg: 2, scope: !4696, file: !3, line: 1590, type: !28)
!4700 = !DILocation(line: 1590, column: 72, scope: !4696)
!4701 = !DILocalVariable(name: "listPtr", scope: !4696, file: !3, line: 1596, type: !29)
!4702 = !DILocation(line: 1596, column: 18, scope: !4696)
!4703 = !DILocation(line: 1596, column: 28, scope: !4696)
!4704 = !DILocalVariable(name: "findLen", scope: !4696, file: !3, line: 1597, type: !42)
!4705 = !DILocation(line: 1597, column: 24, scope: !4696)
!4706 = !DILocation(line: 1597, column: 55, scope: !4696)
!4707 = !DILocation(line: 1597, column: 34, scope: !4696)
!4708 = !DILocation(line: 1598, column: 5, scope: !4696)
!4709 = !DILocation(line: 1598, column: 13, scope: !4696)
!4710 = !DILocation(line: 1598, column: 12, scope: !4696)
!4711 = !DILocalVariable(name: "testInd", scope: !4712, file: !3, line: 1600, type: !43)
!4712 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 1599, column: 5)
!4713 = !DILocation(line: 1600, column: 22, scope: !4712)
!4714 = !DILocation(line: 1601, column: 22, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4712, file: !3, line: 1601, column: 9)
!4716 = !DILocation(line: 1601, column: 14, scope: !4715)
!4717 = !DILocation(line: 1601, column: 27, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4715, file: !3, line: 1601, column: 9)
!4719 = !DILocation(line: 1601, column: 37, scope: !4718)
!4720 = !DILocation(line: 1601, column: 35, scope: !4718)
!4721 = !DILocation(line: 1601, column: 9, scope: !4715)
!4722 = !DILocation(line: 1608, column: 17, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4724, file: !3, line: 1608, column: 17)
!4724 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 1602, column: 9)
!4725 = !DILocation(line: 1608, column: 25, scope: !4723)
!4726 = !DILocation(line: 1608, column: 37, scope: !4723)
!4727 = !DILocation(line: 1608, column: 44, scope: !4723)
!4728 = !DILocation(line: 1608, column: 34, scope: !4723)
!4729 = !DILocation(line: 1608, column: 17, scope: !4724)
!4730 = !DILocation(line: 1609, column: 17, scope: !4723)
!4731 = !DILocation(line: 1610, column: 9, scope: !4724)
!4732 = !DILocation(line: 1601, column: 53, scope: !4718)
!4733 = !DILocation(line: 1601, column: 9, scope: !4718)
!4734 = distinct !{!4734, !4721, !4735}
!4735 = !DILocation(line: 1610, column: 9, scope: !4715)
!4736 = !DILocation(line: 1616, column: 13, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4712, file: !3, line: 1616, column: 13)
!4738 = !DILocation(line: 1616, column: 24, scope: !4737)
!4739 = !DILocation(line: 1616, column: 21, scope: !4737)
!4740 = !DILocation(line: 1616, column: 13, scope: !4712)
!4741 = !DILocation(line: 1618, column: 18, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 1618, column: 17)
!4743 = distinct !DILexicalBlock(scope: !4737, file: !3, line: 1617, column: 9)
!4744 = !DILocation(line: 1618, column: 26, scope: !4742)
!4745 = !DILocation(line: 1618, column: 35, scope: !4742)
!4746 = !DILocation(line: 1618, column: 47, scope: !4742)
!4747 = !DILocation(line: 1618, column: 51, scope: !4742)
!4748 = !DILocation(line: 1618, column: 59, scope: !4742)
!4749 = !DILocation(line: 1618, column: 17, scope: !4743)
!4750 = !DILocation(line: 1619, column: 17, scope: !4742)
!4751 = !DILocation(line: 1620, column: 9, scope: !4743)
!4752 = !DILocation(line: 1623, column: 9, scope: !4712)
!4753 = !DILocation(line: 1623, column: 18, scope: !4712)
!4754 = !DILocation(line: 1623, column: 17, scope: !4712)
!4755 = !DILocation(line: 1623, column: 26, scope: !4712)
!4756 = !DILocation(line: 1623, column: 38, scope: !4712)
!4757 = !DILocation(line: 1623, column: 42, scope: !4712)
!4758 = !DILocation(line: 1623, column: 41, scope: !4712)
!4759 = !DILocation(line: 0, scope: !4712)
!4760 = !DILocation(line: 1624, column: 20, scope: !4712)
!4761 = distinct !{!4761, !4752, !4760}
!4762 = !DILocation(line: 1627, column: 15, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4712, file: !3, line: 1627, column: 13)
!4764 = !DILocation(line: 1627, column: 14, scope: !4763)
!4765 = !DILocation(line: 1627, column: 13, scope: !4712)
!4766 = !DILocation(line: 1628, column: 13, scope: !4763)
!4767 = !DILocation(line: 1631, column: 16, scope: !4712)
!4768 = distinct !{!4768, !4708, !4769}
!4769 = !DILocation(line: 1632, column: 5, scope: !4696)
!4770 = !DILocation(line: 1635, column: 5, scope: !4696)
!4771 = !DILocation(line: 1636, column: 1, scope: !4696)
!4772 = distinct !DISubprogram(name: "isWSReplaced", linkageName: "_ZN11xercesc_2_79XMLString12isWSReplacedEPKt", scope: !9, file: !3, line: 1644, type: !143, scopeLine: 1645, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !332, retainedNodes: !904)
!4773 = !DILocalVariable(name: "toCheck", arg: 1, scope: !4772, file: !3, line: 1644, type: !28)
!4774 = !DILocation(line: 1644, column: 49, scope: !4772)
!4775 = !DILocation(line: 1647, column: 12, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4772, file: !3, line: 1647, column: 9)
!4777 = !DILocation(line: 1647, column: 22, scope: !4776)
!4778 = !DILocation(line: 1647, column: 29, scope: !4776)
!4779 = !DILocation(line: 1647, column: 28, scope: !4776)
!4780 = !DILocation(line: 1647, column: 9, scope: !4772)
!4781 = !DILocation(line: 1648, column: 9, scope: !4776)
!4782 = !DILocalVariable(name: "startPtr", scope: !4772, file: !3, line: 1650, type: !29)
!4783 = !DILocation(line: 1650, column: 18, scope: !4772)
!4784 = !DILocation(line: 1650, column: 29, scope: !4772)
!4785 = !DILocation(line: 1651, column: 5, scope: !4772)
!4786 = !DILocation(line: 1651, column: 14, scope: !4772)
!4787 = !DILocation(line: 1651, column: 13, scope: !4772)
!4788 = !DILocation(line: 1653, column: 17, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4790, file: !3, line: 1653, column: 14)
!4790 = distinct !DILexicalBlock(scope: !4772, file: !3, line: 1652, column: 5)
!4791 = !DILocation(line: 1653, column: 16, scope: !4789)
!4792 = !DILocation(line: 1653, column: 26, scope: !4789)
!4793 = !DILocation(line: 1653, column: 35, scope: !4789)
!4794 = !DILocation(line: 1654, column: 17, scope: !4789)
!4795 = !DILocation(line: 1654, column: 16, scope: !4789)
!4796 = !DILocation(line: 1654, column: 26, scope: !4789)
!4797 = !DILocation(line: 1654, column: 35, scope: !4789)
!4798 = !DILocation(line: 1655, column: 17, scope: !4789)
!4799 = !DILocation(line: 1655, column: 16, scope: !4789)
!4800 = !DILocation(line: 1655, column: 26, scope: !4789)
!4801 = !DILocation(line: 1653, column: 14, scope: !4790)
!4802 = !DILocation(line: 1656, column: 9, scope: !4789)
!4803 = !DILocation(line: 1658, column: 17, scope: !4790)
!4804 = distinct !{!4804, !4785, !4805}
!4805 = !DILocation(line: 1659, column: 5, scope: !4772)
!4806 = !DILocation(line: 1661, column: 5, scope: !4772)
!4807 = !DILocation(line: 1662, column: 1, scope: !4772)
!4808 = distinct !DISubprogram(name: "replaceWS", linkageName: "_ZN11xercesc_2_79XMLString9replaceWSEPtPNS_13MemoryManagerE", scope: !9, file: !3, line: 1670, type: !335, scopeLine: 1672, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !334, retainedNodes: !904)
!4809 = !DILocalVariable(name: "toConvert", arg: 1, scope: !4808, file: !3, line: 1670, type: !23)
!4810 = !DILocation(line: 1670, column: 40, scope: !4808)
!4811 = !DILocalVariable(name: "manager", arg: 2, scope: !4808, file: !3, line: 1671, type: !71)
!4812 = !DILocation(line: 1671, column: 51, scope: !4808)
!4813 = !DILocalVariable(name: "strLen", scope: !4808, file: !3, line: 1673, type: !34)
!4814 = !DILocation(line: 1673, column: 9, scope: !4808)
!4815 = !DILocation(line: 1673, column: 39, scope: !4808)
!4816 = !DILocation(line: 1673, column: 18, scope: !4808)
!4817 = !DILocation(line: 1674, column: 9, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4808, file: !3, line: 1674, column: 9)
!4819 = !DILocation(line: 1674, column: 16, scope: !4818)
!4820 = !DILocation(line: 1674, column: 9, scope: !4808)
!4821 = !DILocation(line: 1675, column: 9, scope: !4818)
!4822 = !DILocalVariable(name: "retBuf", scope: !4808, file: !3, line: 1677, type: !24)
!4823 = !DILocation(line: 1677, column: 12, scope: !4808)
!4824 = !DILocation(line: 1677, column: 30, scope: !4808)
!4825 = !DILocation(line: 1679, column: 10, scope: !4808)
!4826 = !DILocation(line: 1679, column: 16, scope: !4808)
!4827 = !DILocation(line: 1679, column: 9, scope: !4808)
!4828 = !DILocation(line: 1679, column: 20, scope: !4808)
!4829 = !DILocation(line: 1677, column: 39, scope: !4808)
!4830 = !DILocation(line: 1677, column: 21, scope: !4808)
!4831 = !DILocalVariable(name: "retPtr", scope: !4808, file: !3, line: 1681, type: !24)
!4832 = !DILocation(line: 1681, column: 12, scope: !4808)
!4833 = !DILocation(line: 1681, column: 22, scope: !4808)
!4834 = !DILocalVariable(name: "startPtr", scope: !4808, file: !3, line: 1682, type: !24)
!4835 = !DILocation(line: 1682, column: 12, scope: !4808)
!4836 = !DILocation(line: 1682, column: 23, scope: !4808)
!4837 = !DILocation(line: 1684, column: 5, scope: !4808)
!4838 = !DILocation(line: 1684, column: 14, scope: !4808)
!4839 = !DILocation(line: 1684, column: 13, scope: !4808)
!4840 = !DILocation(line: 1686, column: 17, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 1686, column: 14)
!4842 = distinct !DILexicalBlock(scope: !4808, file: !3, line: 1685, column: 5)
!4843 = !DILocation(line: 1686, column: 16, scope: !4841)
!4844 = !DILocation(line: 1686, column: 26, scope: !4841)
!4845 = !DILocation(line: 1686, column: 35, scope: !4841)
!4846 = !DILocation(line: 1687, column: 17, scope: !4841)
!4847 = !DILocation(line: 1687, column: 16, scope: !4841)
!4848 = !DILocation(line: 1687, column: 26, scope: !4841)
!4849 = !DILocation(line: 1687, column: 35, scope: !4841)
!4850 = !DILocation(line: 1688, column: 17, scope: !4841)
!4851 = !DILocation(line: 1688, column: 16, scope: !4841)
!4852 = !DILocation(line: 1688, column: 26, scope: !4841)
!4853 = !DILocation(line: 1686, column: 14, scope: !4842)
!4854 = !DILocation(line: 1689, column: 14, scope: !4841)
!4855 = !DILocation(line: 1689, column: 21, scope: !4841)
!4856 = !DILocation(line: 1689, column: 13, scope: !4841)
!4857 = !DILocation(line: 1691, column: 24, scope: !4841)
!4858 = !DILocation(line: 1691, column: 23, scope: !4841)
!4859 = !DILocation(line: 1691, column: 14, scope: !4841)
!4860 = !DILocation(line: 1691, column: 21, scope: !4841)
!4861 = !DILocation(line: 1693, column: 15, scope: !4842)
!4862 = !DILocation(line: 1694, column: 17, scope: !4842)
!4863 = distinct !{!4863, !4837, !4864}
!4864 = !DILocation(line: 1695, column: 5, scope: !4808)
!4865 = !DILocation(line: 1697, column: 5, scope: !4808)
!4866 = !DILocation(line: 1697, column: 12, scope: !4808)
!4867 = !DILocation(line: 1697, column: 20, scope: !4808)
!4868 = !DILocation(line: 1699, column: 26, scope: !4808)
!4869 = !DILocation(line: 1699, column: 37, scope: !4808)
!4870 = !DILocation(line: 1699, column: 45, scope: !4808)
!4871 = !DILocation(line: 1699, column: 5, scope: !4808)
!4872 = !DILocation(line: 1700, column: 5, scope: !4808)
!4873 = !DILocation(line: 1700, column: 25, scope: !4808)
!4874 = !DILocation(line: 1700, column: 14, scope: !4808)
!4875 = !DILocation(line: 1701, column: 5, scope: !4808)
!4876 = !DILocation(line: 1702, column: 1, scope: !4808)
!4877 = distinct !DISubprogram(name: "moveChars", linkageName: "_ZN11xercesc_2_79XMLString9moveCharsEPtPKtj", scope: !9, file: !8, line: 1680, type: !98, scopeLine: 1683, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !97, retainedNodes: !904)
!4878 = !DILocalVariable(name: "targetStr", arg: 1, scope: !4877, file: !8, line: 1680, type: !23)
!4879 = !DILocation(line: 1680, column: 54, scope: !4877)
!4880 = !DILocalVariable(name: "srcStr", arg: 2, scope: !4877, file: !8, line: 1681, type: !28)
!4881 = !DILocation(line: 1681, column: 54, scope: !4877)
!4882 = !DILocalVariable(name: "count", arg: 3, scope: !4877, file: !8, line: 1682, type: !42)
!4883 = !DILocation(line: 1682, column: 54, scope: !4877)
!4884 = !DILocation(line: 1684, column: 12, scope: !4877)
!4885 = !DILocation(line: 1684, column: 5, scope: !4877)
!4886 = !DILocation(line: 1684, column: 23, scope: !4877)
!4887 = !DILocation(line: 1684, column: 31, scope: !4877)
!4888 = !DILocation(line: 1684, column: 37, scope: !4877)
!4889 = !DILocation(line: 1685, column: 1, scope: !4877)
!4890 = distinct !DISubprogram(name: "isWSCollapsed", linkageName: "_ZN11xercesc_2_79XMLString13isWSCollapsedEPKt", scope: !9, file: !3, line: 1711, type: !143, scopeLine: 1712, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !333, retainedNodes: !904)
!4891 = !DILocalVariable(name: "toCheck", arg: 1, scope: !4890, file: !3, line: 1711, type: !28)
!4892 = !DILocation(line: 1711, column: 50, scope: !4890)
!4893 = !DILocation(line: 1713, column: 12, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4890, file: !3, line: 1713, column: 9)
!4895 = !DILocation(line: 1713, column: 22, scope: !4894)
!4896 = !DILocation(line: 1713, column: 29, scope: !4894)
!4897 = !DILocation(line: 1713, column: 28, scope: !4894)
!4898 = !DILocation(line: 1713, column: 9, scope: !4890)
!4899 = !DILocation(line: 1714, column: 9, scope: !4894)
!4900 = !DILocation(line: 1717, column: 24, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4890, file: !3, line: 1717, column: 10)
!4902 = !DILocation(line: 1717, column: 11, scope: !4901)
!4903 = !DILocation(line: 1717, column: 10, scope: !4890)
!4904 = !DILocation(line: 1718, column: 9, scope: !4901)
!4905 = !DILocation(line: 1721, column: 11, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4890, file: !3, line: 1721, column: 9)
!4907 = !DILocation(line: 1721, column: 10, scope: !4906)
!4908 = !DILocation(line: 1721, column: 19, scope: !4906)
!4909 = !DILocation(line: 1721, column: 31, scope: !4906)
!4910 = !DILocation(line: 1722, column: 10, scope: !4906)
!4911 = !DILocation(line: 1722, column: 39, scope: !4906)
!4912 = !DILocation(line: 1722, column: 18, scope: !4906)
!4913 = !DILocation(line: 1722, column: 47, scope: !4906)
!4914 = !DILocation(line: 1722, column: 51, scope: !4906)
!4915 = !DILocation(line: 1721, column: 9, scope: !4890)
!4916 = !DILocation(line: 1723, column: 9, scope: !4906)
!4917 = !DILocalVariable(name: "startPtr", scope: !4890, file: !3, line: 1725, type: !29)
!4918 = !DILocation(line: 1725, column: 18, scope: !4890)
!4919 = !DILocation(line: 1725, column: 29, scope: !4890)
!4920 = !DILocalVariable(name: "theChar", scope: !4890, file: !3, line: 1726, type: !25)
!4921 = !DILocation(line: 1726, column: 11, scope: !4890)
!4922 = !DILocalVariable(name: "inSpace", scope: !4890, file: !3, line: 1727, type: !54)
!4923 = !DILocation(line: 1727, column: 11, scope: !4890)
!4924 = !DILocation(line: 1728, column: 5, scope: !4890)
!4925 = !DILocation(line: 1728, column: 25, scope: !4890)
!4926 = !DILocation(line: 1728, column: 24, scope: !4890)
!4927 = !DILocation(line: 1728, column: 22, scope: !4890)
!4928 = !DILocation(line: 1728, column: 13, scope: !4890)
!4929 = !DILocation(line: 1728, column: 35, scope: !4890)
!4930 = !DILocation(line: 1730, column: 14, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4932, file: !3, line: 1730, column: 14)
!4932 = distinct !DILexicalBlock(scope: !4890, file: !3, line: 1729, column: 5)
!4933 = !DILocation(line: 1730, column: 22, scope: !4931)
!4934 = !DILocation(line: 1730, column: 14, scope: !4932)
!4935 = !DILocation(line: 1732, column: 17, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4937, file: !3, line: 1732, column: 17)
!4937 = distinct !DILexicalBlock(scope: !4931, file: !3, line: 1731, column: 9)
!4938 = !DILocation(line: 1732, column: 17, scope: !4937)
!4939 = !DILocation(line: 1733, column: 17, scope: !4936)
!4940 = !DILocation(line: 1735, column: 25, scope: !4936)
!4941 = !DILocation(line: 1736, column: 9, scope: !4937)
!4942 = !DILocation(line: 1738, column: 21, scope: !4931)
!4943 = !DILocation(line: 1740, column: 17, scope: !4932)
!4944 = distinct !{!4944, !4924, !4945}
!4945 = !DILocation(line: 1742, column: 5, scope: !4890)
!4946 = !DILocation(line: 1744, column: 5, scope: !4890)
!4947 = !DILocation(line: 1745, column: 1, scope: !4890)
!4948 = distinct !DISubprogram(name: "collapseWS", linkageName: "_ZN11xercesc_2_79XMLString10collapseWSEPtPNS_13MemoryManagerE", scope: !9, file: !3, line: 1751, type: !335, scopeLine: 1753, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !337, retainedNodes: !904)
!4949 = !DILocalVariable(name: "toConvert", arg: 1, scope: !4948, file: !3, line: 1751, type: !23)
!4950 = !DILocation(line: 1751, column: 41, scope: !4948)
!4951 = !DILocalVariable(name: "manager", arg: 2, scope: !4948, file: !3, line: 1752, type: !71)
!4952 = !DILocation(line: 1752, column: 52, scope: !4948)
!4953 = !DILocation(line: 1755, column: 12, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 1755, column: 9)
!4955 = !DILocation(line: 1755, column: 24, scope: !4954)
!4956 = !DILocation(line: 1755, column: 31, scope: !4954)
!4957 = !DILocation(line: 1755, column: 30, scope: !4954)
!4958 = !DILocation(line: 1755, column: 9, scope: !4948)
!4959 = !DILocation(line: 1756, column: 9, scope: !4954)
!4960 = !DILocation(line: 1759, column: 15, scope: !4948)
!4961 = !DILocation(line: 1759, column: 26, scope: !4948)
!4962 = !DILocation(line: 1759, column: 5, scope: !4948)
!4963 = !DILocalVariable(name: "startPtr", scope: !4948, file: !3, line: 1762, type: !29)
!4964 = !DILocation(line: 1762, column: 18, scope: !4948)
!4965 = !DILocation(line: 1762, column: 29, scope: !4948)
!4966 = !DILocation(line: 1763, column: 5, scope: !4948)
!4967 = !DILocation(line: 1763, column: 14, scope: !4948)
!4968 = !DILocation(line: 1763, column: 13, scope: !4948)
!4969 = !DILocation(line: 1763, column: 23, scope: !4948)
!4970 = !DILocation(line: 1764, column: 17, scope: !4948)
!4971 = distinct !{!4971, !4966, !4970}
!4972 = !DILocation(line: 1766, column: 11, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 1766, column: 9)
!4974 = !DILocation(line: 1766, column: 10, scope: !4973)
!4975 = !DILocation(line: 1766, column: 9, scope: !4948)
!4976 = !DILocation(line: 1767, column: 9, scope: !4973)
!4977 = !DILocalVariable(name: "endPtr", scope: !4948, file: !3, line: 1770, type: !29)
!4978 = !DILocation(line: 1770, column: 18, scope: !4948)
!4979 = !DILocation(line: 1770, column: 27, scope: !4948)
!4980 = !DILocation(line: 1770, column: 49, scope: !4948)
!4981 = !DILocation(line: 1770, column: 39, scope: !4948)
!4982 = !DILocation(line: 1770, column: 37, scope: !4948)
!4983 = !DILocation(line: 1771, column: 5, scope: !4948)
!4984 = !DILocation(line: 1771, column: 14, scope: !4948)
!4985 = !DILocation(line: 1771, column: 21, scope: !4948)
!4986 = !DILocation(line: 1771, column: 12, scope: !4948)
!4987 = !DILocation(line: 1771, column: 26, scope: !4948)
!4988 = !DILocation(line: 1772, column: 15, scope: !4948)
!4989 = distinct !{!4989, !4983, !4988}
!4990 = !DILocalVariable(name: "retBuf", scope: !4948, file: !3, line: 1777, type: !24)
!4991 = !DILocation(line: 1777, column: 12, scope: !4948)
!4992 = !DILocation(line: 1777, column: 30, scope: !4948)
!4993 = !DILocation(line: 1779, column: 10, scope: !4948)
!4994 = !DILocation(line: 1779, column: 19, scope: !4948)
!4995 = !DILocation(line: 1779, column: 17, scope: !4948)
!4996 = !DILocation(line: 1779, column: 28, scope: !4948)
!4997 = !DILocation(line: 1779, column: 33, scope: !4948)
!4998 = !DILocation(line: 1777, column: 39, scope: !4948)
!4999 = !DILocation(line: 1777, column: 21, scope: !4948)
!5000 = !DILocalVariable(name: "retPtr", scope: !4948, file: !3, line: 1781, type: !24)
!5001 = !DILocation(line: 1781, column: 12, scope: !4948)
!5002 = !DILocation(line: 1781, column: 22, scope: !4948)
!5003 = !DILocalVariable(name: "inSpace", scope: !4948, file: !3, line: 1782, type: !54)
!5004 = !DILocation(line: 1782, column: 11, scope: !4948)
!5005 = !DILocation(line: 1783, column: 5, scope: !4948)
!5006 = !DILocation(line: 1783, column: 12, scope: !4948)
!5007 = !DILocation(line: 1783, column: 23, scope: !4948)
!5008 = !DILocation(line: 1783, column: 21, scope: !4948)
!5009 = !DILocation(line: 1785, column: 15, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 1785, column: 14)
!5011 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 1784, column: 5)
!5012 = !DILocation(line: 1785, column: 14, scope: !5010)
!5013 = !DILocation(line: 1785, column: 24, scope: !5010)
!5014 = !DILocation(line: 1785, column: 14, scope: !5011)
!5015 = !DILocation(line: 1787, column: 17, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 1787, column: 17)
!5017 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 1786, column: 9)
!5018 = !DILocation(line: 1787, column: 17, scope: !5017)
!5019 = !DILocation(line: 1790, column: 13, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5016, file: !3, line: 1788, column: 13)
!5021 = !DILocation(line: 1793, column: 25, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5016, file: !3, line: 1792, column: 13)
!5023 = !DILocation(line: 1794, column: 18, scope: !5022)
!5024 = !DILocation(line: 1794, column: 25, scope: !5022)
!5025 = !DILocation(line: 1795, column: 23, scope: !5022)
!5026 = !DILocation(line: 1797, column: 9, scope: !5017)
!5027 = !DILocation(line: 1800, column: 21, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 1799, column: 9)
!5029 = !DILocation(line: 1801, column: 24, scope: !5028)
!5030 = !DILocation(line: 1801, column: 23, scope: !5028)
!5031 = !DILocation(line: 1801, column: 14, scope: !5028)
!5032 = !DILocation(line: 1801, column: 21, scope: !5028)
!5033 = !DILocation(line: 1802, column: 19, scope: !5028)
!5034 = !DILocation(line: 1805, column: 17, scope: !5011)
!5035 = distinct !{!5035, !5005, !5036}
!5036 = !DILocation(line: 1806, column: 5, scope: !4948)
!5037 = !DILocation(line: 1808, column: 6, scope: !4948)
!5038 = !DILocation(line: 1808, column: 13, scope: !4948)
!5039 = !DILocation(line: 1809, column: 26, scope: !4948)
!5040 = !DILocation(line: 1809, column: 37, scope: !4948)
!5041 = !DILocation(line: 1809, column: 55, scope: !4948)
!5042 = !DILocation(line: 1809, column: 45, scope: !4948)
!5043 = !DILocation(line: 1809, column: 62, scope: !4948)
!5044 = !DILocation(line: 1809, column: 5, scope: !4948)
!5045 = !DILocation(line: 1810, column: 5, scope: !4948)
!5046 = !DILocation(line: 1810, column: 25, scope: !4948)
!5047 = !DILocation(line: 1810, column: 14, scope: !4948)
!5048 = !DILocation(line: 1811, column: 5, scope: !4948)
!5049 = !DILocation(line: 1812, column: 1, scope: !4948)
!5050 = distinct !DISubprogram(name: "removeWS", linkageName: "_ZN11xercesc_2_79XMLString8removeWSEPtPNS_13MemoryManagerE", scope: !9, file: !3, line: 1817, type: !335, scopeLine: 1819, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !338, retainedNodes: !904)
!5051 = !DILocalVariable(name: "toConvert", arg: 1, scope: !5050, file: !3, line: 1817, type: !23)
!5052 = !DILocation(line: 1817, column: 39, scope: !5050)
!5053 = !DILocalVariable(name: "manager", arg: 2, scope: !5050, file: !3, line: 1818, type: !71)
!5054 = !DILocation(line: 1818, column: 49, scope: !5050)
!5055 = !DILocation(line: 1821, column: 12, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5050, file: !3, line: 1821, column: 9)
!5057 = !DILocation(line: 1821, column: 24, scope: !5056)
!5058 = !DILocation(line: 1821, column: 31, scope: !5056)
!5059 = !DILocation(line: 1821, column: 30, scope: !5056)
!5060 = !DILocation(line: 1821, column: 9, scope: !5050)
!5061 = !DILocation(line: 1822, column: 9, scope: !5056)
!5062 = !DILocalVariable(name: "retBuf", scope: !5050, file: !3, line: 1824, type: !24)
!5063 = !DILocation(line: 1824, column: 12, scope: !5050)
!5064 = !DILocation(line: 1824, column: 30, scope: !5050)
!5065 = !DILocation(line: 1826, column: 31, scope: !5050)
!5066 = !DILocation(line: 1826, column: 10, scope: !5050)
!5067 = !DILocation(line: 1826, column: 42, scope: !5050)
!5068 = !DILocation(line: 1826, column: 9, scope: !5050)
!5069 = !DILocation(line: 1826, column: 47, scope: !5050)
!5070 = !DILocation(line: 1824, column: 39, scope: !5050)
!5071 = !DILocation(line: 1824, column: 21, scope: !5050)
!5072 = !DILocalVariable(name: "retPtr", scope: !5050, file: !3, line: 1828, type: !24)
!5073 = !DILocation(line: 1828, column: 12, scope: !5050)
!5074 = !DILocation(line: 1828, column: 22, scope: !5050)
!5075 = !DILocalVariable(name: "startPtr", scope: !5050, file: !3, line: 1829, type: !24)
!5076 = !DILocation(line: 1829, column: 12, scope: !5050)
!5077 = !DILocation(line: 1829, column: 23, scope: !5050)
!5078 = !DILocation(line: 1831, column: 5, scope: !5050)
!5079 = !DILocation(line: 1831, column: 13, scope: !5050)
!5080 = !DILocation(line: 1831, column: 12, scope: !5050)
!5081 = !DILocation(line: 1833, column: 17, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5083, file: !3, line: 1833, column: 14)
!5083 = distinct !DILexicalBlock(scope: !5050, file: !3, line: 1832, column: 5)
!5084 = !DILocation(line: 1833, column: 16, scope: !5082)
!5085 = !DILocation(line: 1833, column: 26, scope: !5082)
!5086 = !DILocation(line: 1833, column: 38, scope: !5082)
!5087 = !DILocation(line: 1834, column: 17, scope: !5082)
!5088 = !DILocation(line: 1834, column: 16, scope: !5082)
!5089 = !DILocation(line: 1834, column: 26, scope: !5082)
!5090 = !DILocation(line: 1834, column: 38, scope: !5082)
!5091 = !DILocation(line: 1835, column: 17, scope: !5082)
!5092 = !DILocation(line: 1835, column: 16, scope: !5082)
!5093 = !DILocation(line: 1835, column: 26, scope: !5082)
!5094 = !DILocation(line: 1835, column: 38, scope: !5082)
!5095 = !DILocation(line: 1836, column: 17, scope: !5082)
!5096 = !DILocation(line: 1836, column: 16, scope: !5082)
!5097 = !DILocation(line: 1836, column: 26, scope: !5082)
!5098 = !DILocation(line: 1833, column: 14, scope: !5083)
!5099 = !DILocation(line: 1838, column: 26, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5082, file: !3, line: 1837, column: 9)
!5101 = !DILocation(line: 1838, column: 25, scope: !5100)
!5102 = !DILocation(line: 1838, column: 20, scope: !5100)
!5103 = !DILocation(line: 1838, column: 23, scope: !5100)
!5104 = !DILocation(line: 1839, column: 9, scope: !5100)
!5105 = !DILocation(line: 1841, column: 17, scope: !5083)
!5106 = distinct !{!5106, !5078, !5107}
!5107 = !DILocation(line: 1843, column: 5, scope: !5050)
!5108 = !DILocation(line: 1845, column: 6, scope: !5050)
!5109 = !DILocation(line: 1845, column: 13, scope: !5050)
!5110 = !DILocation(line: 1846, column: 26, scope: !5050)
!5111 = !DILocation(line: 1846, column: 37, scope: !5050)
!5112 = !DILocation(line: 1846, column: 55, scope: !5050)
!5113 = !DILocation(line: 1846, column: 45, scope: !5050)
!5114 = !DILocation(line: 1846, column: 62, scope: !5050)
!5115 = !DILocation(line: 1846, column: 5, scope: !5050)
!5116 = !DILocation(line: 1847, column: 5, scope: !5050)
!5117 = !DILocation(line: 1847, column: 25, scope: !5050)
!5118 = !DILocation(line: 1847, column: 14, scope: !5050)
!5119 = !DILocation(line: 1848, column: 5, scope: !5050)
!5120 = !DILocation(line: 1849, column: 1, scope: !5050)
!5121 = distinct !DISubprogram(name: "removeChar", linkageName: "_ZN11xercesc_2_79XMLString10removeCharEPKtRS1_RNS_9XMLBufferE", scope: !9, file: !3, line: 1851, type: !340, scopeLine: 1854, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !339, retainedNodes: !904)
!5122 = !DILocalVariable(name: "srcString", arg: 1, scope: !5121, file: !3, line: 1851, type: !28)
!5123 = !DILocation(line: 1851, column: 51, scope: !5121)
!5124 = !DILocalVariable(name: "toRemove", arg: 2, scope: !5121, file: !3, line: 1852, type: !342)
!5125 = !DILocation(line: 1852, column: 51, scope: !5121)
!5126 = !DILocalVariable(name: "dstBuffer", arg: 3, scope: !5121, file: !3, line: 1853, type: !343)
!5127 = !DILocation(line: 1853, column: 51, scope: !5121)
!5128 = !DILocalVariable(name: "pszSrc", scope: !5121, file: !3, line: 1855, type: !29)
!5129 = !DILocation(line: 1855, column: 18, scope: !5121)
!5130 = !DILocation(line: 1855, column: 27, scope: !5121)
!5131 = !DILocalVariable(name: "c", scope: !5121, file: !3, line: 1856, type: !25)
!5132 = !DILocation(line: 1856, column: 11, scope: !5121)
!5133 = !DILocation(line: 1858, column: 5, scope: !5121)
!5134 = !DILocation(line: 1858, column: 15, scope: !5121)
!5135 = !DILocation(line: 1860, column: 5, scope: !5121)
!5136 = !DILocation(line: 1860, column: 22, scope: !5121)
!5137 = !DILocation(line: 1860, column: 15, scope: !5121)
!5138 = !DILocation(line: 1860, column: 14, scope: !5121)
!5139 = !DILocation(line: 1860, column: 12, scope: !5121)
!5140 = !DILocation(line: 1860, column: 25, scope: !5121)
!5141 = !DILocation(line: 1862, column: 13, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5143, file: !3, line: 1862, column: 13)
!5143 = distinct !DILexicalBlock(scope: !5121, file: !3, line: 1861, column: 5)
!5144 = !DILocation(line: 1862, column: 18, scope: !5142)
!5145 = !DILocation(line: 1862, column: 15, scope: !5142)
!5146 = !DILocation(line: 1862, column: 13, scope: !5143)
!5147 = !DILocation(line: 1863, column: 13, scope: !5142)
!5148 = !DILocation(line: 1863, column: 30, scope: !5142)
!5149 = !DILocation(line: 1863, column: 23, scope: !5142)
!5150 = distinct !{!5150, !5135, !5151}
!5151 = !DILocation(line: 1865, column: 5, scope: !5121)
!5152 = !DILocation(line: 1866, column: 1, scope: !5121)
!5153 = distinct !DISubprogram(name: "reset", linkageName: "_ZN11xercesc_2_79XMLBuffer5resetEv", scope: !344, file: !345, line: 180, type: !362, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !386, retainedNodes: !904)
!5154 = !DILocalVariable(name: "this", arg: 1, scope: !5153, type: !5155, flags: DIFlagArtificial | DIFlagObjectPointer)
!5155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!5156 = !DILocation(line: 0, scope: !5153)
!5157 = !DILocation(line: 182, column: 9, scope: !5153)
!5158 = !DILocation(line: 182, column: 16, scope: !5153)
!5159 = !DILocation(line: 183, column: 9, scope: !5153)
!5160 = !DILocation(line: 183, column: 20, scope: !5153)
!5161 = !DILocation(line: 184, column: 5, scope: !5153)
!5162 = distinct !DISubprogram(name: "append", linkageName: "_ZN11xercesc_2_79XMLBuffer6appendEt", scope: !344, file: !345, line: 119, type: !368, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !367, retainedNodes: !904)
!5163 = !DILocalVariable(name: "this", arg: 1, scope: !5162, type: !5155, flags: DIFlagArtificial | DIFlagObjectPointer)
!5164 = !DILocation(line: 0, scope: !5162)
!5165 = !DILocalVariable(name: "toAppend", arg: 2, scope: !5162, file: !345, line: 119, type: !30)
!5166 = !DILocation(line: 119, column: 29, scope: !5162)
!5167 = !DILocation(line: 122, column: 13, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5162, file: !345, line: 122, column: 13)
!5169 = !DILocation(line: 122, column: 23, scope: !5168)
!5170 = !DILocation(line: 122, column: 20, scope: !5168)
!5171 = !DILocation(line: 122, column: 13, scope: !5162)
!5172 = !DILocation(line: 123, column: 13, scope: !5168)
!5173 = !DILocation(line: 124, column: 29, scope: !5162)
!5174 = !DILocation(line: 124, column: 9, scope: !5162)
!5175 = !DILocation(line: 124, column: 17, scope: !5162)
!5176 = !DILocation(line: 124, column: 23, scope: !5162)
!5177 = !DILocation(line: 124, column: 27, scope: !5162)
!5178 = !DILocation(line: 125, column: 5, scope: !5162)
!5179 = distinct !DISubprogram(name: "fixURI", linkageName: "_ZN11xercesc_2_79XMLString6fixURIEPKtPt", scope: !9, file: !3, line: 1873, type: !408, scopeLine: 1874, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !407, retainedNodes: !904)
!5180 = !DILocalVariable(name: "str", arg: 1, scope: !5179, file: !3, line: 1873, type: !28)
!5181 = !DILocation(line: 1873, column: 43, scope: !5179)
!5182 = !DILocalVariable(name: "target", arg: 2, scope: !5179, file: !3, line: 1873, type: !23)
!5183 = !DILocation(line: 1873, column: 61, scope: !5179)
!5184 = !DILocation(line: 1875, column: 10, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5179, file: !3, line: 1875, column: 9)
!5186 = !DILocation(line: 1875, column: 14, scope: !5185)
!5187 = !DILocation(line: 1875, column: 19, scope: !5185)
!5188 = !DILocation(line: 1875, column: 18, scope: !5185)
!5189 = !DILocation(line: 1875, column: 9, scope: !5179)
!5190 = !DILocation(line: 1876, column: 9, scope: !5185)
!5191 = !DILocalVariable(name: "colonIdx", scope: !5179, file: !3, line: 1878, type: !34)
!5192 = !DILocation(line: 1878, column: 9, scope: !5179)
!5193 = !DILocation(line: 1878, column: 39, scope: !5179)
!5194 = !DILocation(line: 1878, column: 20, scope: !5179)
!5195 = !DILocation(line: 1882, column: 9, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5179, file: !3, line: 1882, column: 9)
!5197 = !DILocation(line: 1882, column: 18, scope: !5196)
!5198 = !DILocation(line: 1882, column: 24, scope: !5196)
!5199 = !DILocation(line: 1882, column: 46, scope: !5196)
!5200 = !DILocation(line: 1882, column: 27, scope: !5196)
!5201 = !DILocation(line: 1882, column: 67, scope: !5196)
!5202 = !DILocation(line: 1882, column: 9, scope: !5179)
!5203 = !DILocalVariable(name: "index", scope: !5204, file: !3, line: 1883, type: !43)
!5204 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 1882, column: 73)
!5205 = !DILocation(line: 1883, column: 18, scope: !5204)
!5206 = !DILocation(line: 1884, column: 9, scope: !5204)
!5207 = !DILocation(line: 1884, column: 21, scope: !5204)
!5208 = !DILocation(line: 1884, column: 25, scope: !5204)
!5209 = !DILocation(line: 1885, column: 9, scope: !5204)
!5210 = !DILocation(line: 1885, column: 21, scope: !5204)
!5211 = !DILocation(line: 1885, column: 25, scope: !5204)
!5212 = !DILocation(line: 1886, column: 9, scope: !5204)
!5213 = !DILocation(line: 1886, column: 21, scope: !5204)
!5214 = !DILocation(line: 1886, column: 25, scope: !5204)
!5215 = !DILocation(line: 1887, column: 9, scope: !5204)
!5216 = !DILocation(line: 1887, column: 21, scope: !5204)
!5217 = !DILocation(line: 1887, column: 25, scope: !5204)
!5218 = !DILocation(line: 1888, column: 9, scope: !5204)
!5219 = !DILocation(line: 1888, column: 21, scope: !5204)
!5220 = !DILocation(line: 1888, column: 25, scope: !5204)
!5221 = !DILocation(line: 1889, column: 9, scope: !5204)
!5222 = !DILocation(line: 1889, column: 21, scope: !5204)
!5223 = !DILocation(line: 1889, column: 25, scope: !5204)
!5224 = !DILocation(line: 1890, column: 9, scope: !5204)
!5225 = !DILocation(line: 1890, column: 21, scope: !5204)
!5226 = !DILocation(line: 1890, column: 25, scope: !5204)
!5227 = !DILocalVariable(name: "inPtr", scope: !5204, file: !3, line: 1893, type: !29)
!5228 = !DILocation(line: 1893, column: 22, scope: !5204)
!5229 = !DILocation(line: 1893, column: 30, scope: !5204)
!5230 = !DILocation(line: 1894, column: 9, scope: !5204)
!5231 = !DILocation(line: 1894, column: 17, scope: !5204)
!5232 = !DILocation(line: 1894, column: 16, scope: !5204)
!5233 = !DILocation(line: 1895, column: 37, scope: !5204)
!5234 = !DILocation(line: 1895, column: 31, scope: !5204)
!5235 = !DILocation(line: 1895, column: 13, scope: !5204)
!5236 = !DILocation(line: 1895, column: 25, scope: !5204)
!5237 = !DILocation(line: 1895, column: 29, scope: !5204)
!5238 = distinct !{!5238, !5230, !5233}
!5239 = !DILocation(line: 1897, column: 9, scope: !5204)
!5240 = !DILocation(line: 1897, column: 16, scope: !5204)
!5241 = !DILocation(line: 1897, column: 23, scope: !5204)
!5242 = !DILocation(line: 1898, column: 5, scope: !5204)
!5243 = !DILocation(line: 1899, column: 14, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 1899, column: 14)
!5245 = !DILocation(line: 1899, column: 23, scope: !5244)
!5246 = !DILocation(line: 1899, column: 28, scope: !5244)
!5247 = !DILocation(line: 1899, column: 51, scope: !5244)
!5248 = !DILocation(line: 1899, column: 50, scope: !5244)
!5249 = !DILocation(line: 1899, column: 31, scope: !5244)
!5250 = !DILocation(line: 1899, column: 14, scope: !5196)
!5251 = !DILocalVariable(name: "index", scope: !5252, file: !3, line: 1902, type: !43)
!5252 = distinct !DILexicalBlock(scope: !5244, file: !3, line: 1899, column: 57)
!5253 = !DILocation(line: 1902, column: 18, scope: !5252)
!5254 = !DILocation(line: 1903, column: 9, scope: !5252)
!5255 = !DILocation(line: 1903, column: 21, scope: !5252)
!5256 = !DILocation(line: 1903, column: 25, scope: !5252)
!5257 = !DILocation(line: 1904, column: 9, scope: !5252)
!5258 = !DILocation(line: 1904, column: 21, scope: !5252)
!5259 = !DILocation(line: 1904, column: 25, scope: !5252)
!5260 = !DILocation(line: 1905, column: 9, scope: !5252)
!5261 = !DILocation(line: 1905, column: 21, scope: !5252)
!5262 = !DILocation(line: 1905, column: 25, scope: !5252)
!5263 = !DILocation(line: 1906, column: 9, scope: !5252)
!5264 = !DILocation(line: 1906, column: 21, scope: !5252)
!5265 = !DILocation(line: 1906, column: 25, scope: !5252)
!5266 = !DILocation(line: 1907, column: 9, scope: !5252)
!5267 = !DILocation(line: 1907, column: 21, scope: !5252)
!5268 = !DILocation(line: 1907, column: 25, scope: !5252)
!5269 = !DILocation(line: 1908, column: 9, scope: !5252)
!5270 = !DILocation(line: 1908, column: 21, scope: !5252)
!5271 = !DILocation(line: 1908, column: 25, scope: !5252)
!5272 = !DILocation(line: 1909, column: 9, scope: !5252)
!5273 = !DILocation(line: 1909, column: 21, scope: !5252)
!5274 = !DILocation(line: 1909, column: 25, scope: !5252)
!5275 = !DILocation(line: 1910, column: 9, scope: !5252)
!5276 = !DILocation(line: 1910, column: 21, scope: !5252)
!5277 = !DILocation(line: 1910, column: 25, scope: !5252)
!5278 = !DILocalVariable(name: "inPtr", scope: !5252, file: !3, line: 1913, type: !29)
!5279 = !DILocation(line: 1913, column: 22, scope: !5252)
!5280 = !DILocation(line: 1913, column: 30, scope: !5252)
!5281 = !DILocation(line: 1914, column: 9, scope: !5252)
!5282 = !DILocation(line: 1914, column: 17, scope: !5252)
!5283 = !DILocation(line: 1914, column: 16, scope: !5252)
!5284 = !DILocation(line: 1915, column: 18, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5286, file: !3, line: 1915, column: 17)
!5286 = distinct !DILexicalBlock(scope: !5252, file: !3, line: 1914, column: 24)
!5287 = !DILocation(line: 1915, column: 17, scope: !5285)
!5288 = !DILocation(line: 1915, column: 24, scope: !5285)
!5289 = !DILocation(line: 1915, column: 37, scope: !5285)
!5290 = !DILocation(line: 1916, column: 18, scope: !5285)
!5291 = !DILocation(line: 1916, column: 17, scope: !5285)
!5292 = !DILocation(line: 1916, column: 24, scope: !5285)
!5293 = !DILocation(line: 1916, column: 37, scope: !5285)
!5294 = !DILocation(line: 1917, column: 18, scope: !5285)
!5295 = !DILocation(line: 1917, column: 17, scope: !5285)
!5296 = !DILocation(line: 1917, column: 24, scope: !5285)
!5297 = !DILocation(line: 1915, column: 17, scope: !5286)
!5298 = !DILocation(line: 1918, column: 17, scope: !5285)
!5299 = !DILocation(line: 1918, column: 29, scope: !5285)
!5300 = !DILocation(line: 1918, column: 33, scope: !5285)
!5301 = !DILocation(line: 1920, column: 36, scope: !5285)
!5302 = !DILocation(line: 1920, column: 35, scope: !5285)
!5303 = !DILocation(line: 1920, column: 17, scope: !5285)
!5304 = !DILocation(line: 1920, column: 29, scope: !5285)
!5305 = !DILocation(line: 1920, column: 33, scope: !5285)
!5306 = !DILocation(line: 1921, column: 18, scope: !5286)
!5307 = distinct !{!5307, !5281, !5308}
!5308 = !DILocation(line: 1922, column: 9, scope: !5252)
!5309 = !DILocation(line: 1925, column: 9, scope: !5252)
!5310 = !DILocation(line: 1925, column: 16, scope: !5252)
!5311 = !DILocation(line: 1925, column: 23, scope: !5252)
!5312 = !DILocation(line: 1926, column: 5, scope: !5252)
!5313 = !DILocation(line: 1929, column: 20, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5244, file: !3, line: 1927, column: 10)
!5315 = !DILocation(line: 1929, column: 28, scope: !5314)
!5316 = !DILocation(line: 1929, column: 9, scope: !5314)
!5317 = !DILocation(line: 1931, column: 1, scope: !5179)
!5318 = distinct !DISubprogram(name: "release", linkageName: "_ZN11xercesc_2_79XMLString7releaseEPPc", scope: !9, file: !3, line: 1933, type: !411, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !410, retainedNodes: !904)
!5319 = !DILocalVariable(name: "buf", arg: 1, scope: !5318, file: !3, line: 1933, type: !413)
!5320 = !DILocation(line: 1933, column: 32, scope: !5318)
!5321 = !DILocation(line: 1935, column: 16, scope: !5318)
!5322 = !DILocation(line: 1935, column: 15, scope: !5318)
!5323 = !DILocation(line: 1935, column: 5, scope: !5318)
!5324 = !DILocation(line: 1936, column: 6, scope: !5318)
!5325 = !DILocation(line: 1936, column: 10, scope: !5318)
!5326 = !DILocation(line: 1937, column: 1, scope: !5318)
!5327 = distinct !DISubprogram(name: "release", linkageName: "_ZN11xercesc_2_79XMLString7releaseEPPt", scope: !9, file: !3, line: 1939, type: !415, scopeLine: 1940, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !414, retainedNodes: !904)
!5328 = !DILocalVariable(name: "buf", arg: 1, scope: !5327, file: !3, line: 1939, type: !417)
!5329 = !DILocation(line: 1939, column: 33, scope: !5327)
!5330 = !DILocation(line: 1941, column: 16, scope: !5327)
!5331 = !DILocation(line: 1941, column: 15, scope: !5327)
!5332 = !DILocation(line: 1941, column: 5, scope: !5327)
!5333 = !DILocation(line: 1942, column: 6, scope: !5327)
!5334 = !DILocation(line: 1942, column: 10, scope: !5327)
!5335 = !DILocation(line: 1943, column: 1, scope: !5327)
!5336 = distinct !DISubprogram(name: "release", linkageName: "_ZN11xercesc_2_79XMLString7releaseEPPh", scope: !9, file: !3, line: 1945, type: !419, scopeLine: 1946, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !418, retainedNodes: !904)
!5337 = !DILocalVariable(name: "buf", arg: 1, scope: !5336, file: !3, line: 1945, type: !421)
!5338 = !DILocation(line: 1945, column: 35, scope: !5336)
!5339 = !DILocation(line: 1947, column: 16, scope: !5336)
!5340 = !DILocation(line: 1947, column: 15, scope: !5336)
!5341 = !DILocation(line: 1947, column: 5, scope: !5336)
!5342 = !DILocation(line: 1948, column: 6, scope: !5336)
!5343 = !DILocation(line: 1948, column: 10, scope: !5336)
!5344 = !DILocation(line: 1949, column: 1, scope: !5336)
!5345 = distinct !DISubprogram(name: "release", linkageName: "_ZN11xercesc_2_79XMLString7releaseEPPvPNS_13MemoryManagerE", scope: !9, file: !3, line: 1951, type: !427, scopeLine: 1952, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !426, retainedNodes: !904)
!5346 = !DILocalVariable(name: "buf", arg: 1, scope: !5345, file: !3, line: 1951, type: !429)
!5347 = !DILocation(line: 1951, column: 32, scope: !5345)
!5348 = !DILocalVariable(name: "manager", arg: 2, scope: !5345, file: !3, line: 1951, type: !71)
!5349 = !DILocation(line: 1951, column: 58, scope: !5345)
!5350 = !DILocation(line: 1953, column: 5, scope: !5345)
!5351 = !DILocation(line: 1953, column: 26, scope: !5345)
!5352 = !DILocation(line: 1953, column: 25, scope: !5345)
!5353 = !DILocation(line: 1953, column: 14, scope: !5345)
!5354 = !DILocation(line: 1954, column: 6, scope: !5345)
!5355 = !DILocation(line: 1954, column: 10, scope: !5345)
!5356 = !DILocation(line: 1955, column: 1, scope: !5345)
!5357 = distinct !DISubprogram(name: "initString", linkageName: "_ZN11xercesc_2_79XMLString10initStringEPNS_16XMLLCPTranscoderEPNS_13MemoryManagerE", scope: !9, file: !3, line: 1960, type: !436, scopeLine: 1962, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !435, retainedNodes: !904)
!5358 = !DILocalVariable(name: "defToUse", arg: 1, scope: !5357, file: !3, line: 1960, type: !438)
!5359 = !DILocation(line: 1960, column: 52, scope: !5357)
!5360 = !DILocalVariable(name: "manager", arg: 2, scope: !5357, file: !3, line: 1961, type: !71)
!5361 = !DILocation(line: 1961, column: 49, scope: !5357)
!5362 = !DILocation(line: 1964, column: 19, scope: !5357)
!5363 = !DILocation(line: 1964, column: 17, scope: !5357)
!5364 = !DILocation(line: 1967, column: 23, scope: !5357)
!5365 = !DILocation(line: 1967, column: 21, scope: !5357)
!5366 = !DILocation(line: 1968, column: 1, scope: !5357)
!5367 = distinct !DISubprogram(name: "termString", linkageName: "_ZN11xercesc_2_79XMLString10termStringEv", scope: !9, file: !3, line: 1970, type: !443, scopeLine: 1971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !442, retainedNodes: !904)
!5368 = !DILocation(line: 1973, column: 12, scope: !5367)
!5369 = !DILocation(line: 1973, column: 5, scope: !5367)
!5370 = !DILocation(line: 1974, column: 17, scope: !5367)
!5371 = !DILocation(line: 1977, column: 21, scope: !5367)
!5372 = !DILocation(line: 1978, column: 1, scope: !5367)
!5373 = distinct !DISubprogram(name: "~IllegalArgumentException", linkageName: "_ZN11xercesc_2_724IllegalArgumentExceptionD0Ev", scope: !1512, file: !1511, line: 30, type: !1534, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !1533, retainedNodes: !904)
!5374 = !DILocalVariable(name: "this", arg: 1, scope: !5373, type: !1550, flags: DIFlagArtificial | DIFlagObjectPointer)
!5375 = !DILocation(line: 0, scope: !5373)
!5376 = !DILocation(line: 30, column: 1, scope: !5373)
!5377 = distinct !DISubprogram(name: "getType", linkageName: "_ZNK11xercesc_2_724IllegalArgumentException7getTypeEv", scope: !1512, file: !1511, line: 30, type: !1546, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !1545, retainedNodes: !904)
!5378 = !DILocalVariable(name: "this", arg: 1, scope: !5377, type: !5379, flags: DIFlagArtificial | DIFlagObjectPointer)
!5379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!5380 = !DILocation(line: 0, scope: !5377)
!5381 = !DILocation(line: 30, column: 1, scope: !5377)
!5382 = distinct !DISubprogram(name: "duplicate", linkageName: "_ZNK11xercesc_2_724IllegalArgumentException9duplicateEv", scope: !1512, file: !1511, line: 30, type: !1541, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !1540, retainedNodes: !904)
!5383 = !DILocalVariable(name: "this", arg: 1, scope: !5382, type: !5379, flags: DIFlagArtificial | DIFlagObjectPointer)
!5384 = !DILocation(line: 0, scope: !5382)
!5385 = !DILocation(line: 30, column: 1, scope: !5382)
!5386 = distinct !DISubprogram(name: "IllegalArgumentException", linkageName: "_ZN11xercesc_2_724IllegalArgumentExceptionC2ERKS0_", scope: !1512, file: !1511, line: 30, type: !1523, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !1522, retainedNodes: !904)
!5387 = !DILocalVariable(name: "this", arg: 1, scope: !5386, type: !1550, flags: DIFlagArtificial | DIFlagObjectPointer)
!5388 = !DILocation(line: 0, scope: !5386)
!5389 = !DILocalVariable(name: "toCopy", arg: 2, scope: !5386, file: !1511, line: 30, type: !1525)
!5390 = !DILocation(line: 30, column: 1, scope: !5386)
!5391 = distinct !DISubprogram(name: "~RuntimeException", linkageName: "_ZN11xercesc_2_716RuntimeExceptionD0Ev", scope: !1567, file: !1566, line: 30, type: !1586, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !1585, retainedNodes: !904)
!5392 = !DILocalVariable(name: "this", arg: 1, scope: !5391, type: !1601, flags: DIFlagArtificial | DIFlagObjectPointer)
!5393 = !DILocation(line: 0, scope: !5391)
!5394 = !DILocation(line: 30, column: 1, scope: !5391)
!5395 = distinct !DISubprogram(name: "getType", linkageName: "_ZNK11xercesc_2_716RuntimeException7getTypeEv", scope: !1567, file: !1566, line: 30, type: !1597, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !1596, retainedNodes: !904)
!5396 = !DILocalVariable(name: "this", arg: 1, scope: !5395, type: !5397, flags: DIFlagArtificial | DIFlagObjectPointer)
!5397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64)
!5398 = !DILocation(line: 0, scope: !5395)
!5399 = !DILocation(line: 30, column: 1, scope: !5395)
!5400 = distinct !DISubprogram(name: "duplicate", linkageName: "_ZNK11xercesc_2_716RuntimeException9duplicateEv", scope: !1567, file: !1566, line: 30, type: !1593, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !1592, retainedNodes: !904)
!5401 = !DILocalVariable(name: "this", arg: 1, scope: !5400, type: !5397, flags: DIFlagArtificial | DIFlagObjectPointer)
!5402 = !DILocation(line: 0, scope: !5400)
!5403 = !DILocation(line: 30, column: 1, scope: !5400)
!5404 = distinct !DISubprogram(name: "RuntimeException", linkageName: "_ZN11xercesc_2_716RuntimeExceptionC2ERKS0_", scope: !1567, file: !1566, line: 30, type: !1575, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !1574, retainedNodes: !904)
!5405 = !DILocalVariable(name: "this", arg: 1, scope: !5404, type: !1601, flags: DIFlagArtificial | DIFlagObjectPointer)
!5406 = !DILocation(line: 0, scope: !5404)
!5407 = !DILocalVariable(name: "toCopy", arg: 2, scope: !5404, file: !1566, line: 30, type: !1577)
!5408 = !DILocation(line: 30, column: 1, scope: !5404)
!5409 = distinct !DISubprogram(name: "~ArrayIndexOutOfBoundsException", linkageName: "_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionD0Ev", scope: !1934, file: !1933, line: 28, type: !1953, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !1952, retainedNodes: !904)
!5410 = !DILocalVariable(name: "this", arg: 1, scope: !5409, type: !1968, flags: DIFlagArtificial | DIFlagObjectPointer)
!5411 = !DILocation(line: 0, scope: !5409)
!5412 = !DILocation(line: 28, column: 1, scope: !5409)
!5413 = distinct !DISubprogram(name: "getType", linkageName: "_ZNK11xercesc_2_730ArrayIndexOutOfBoundsException7getTypeEv", scope: !1934, file: !1933, line: 28, type: !1964, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !1963, retainedNodes: !904)
!5414 = !DILocalVariable(name: "this", arg: 1, scope: !5413, type: !5415, flags: DIFlagArtificial | DIFlagObjectPointer)
!5415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64)
!5416 = !DILocation(line: 0, scope: !5413)
!5417 = !DILocation(line: 28, column: 1, scope: !5413)
!5418 = distinct !DISubprogram(name: "duplicate", linkageName: "_ZNK11xercesc_2_730ArrayIndexOutOfBoundsException9duplicateEv", scope: !1934, file: !1933, line: 28, type: !1960, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !1959, retainedNodes: !904)
!5419 = !DILocalVariable(name: "this", arg: 1, scope: !5418, type: !5415, flags: DIFlagArtificial | DIFlagObjectPointer)
!5420 = !DILocation(line: 0, scope: !5418)
!5421 = !DILocation(line: 28, column: 1, scope: !5418)
!5422 = distinct !DISubprogram(name: "ArrayIndexOutOfBoundsException", linkageName: "_ZN11xercesc_2_730ArrayIndexOutOfBoundsExceptionC2ERKS0_", scope: !1934, file: !1933, line: 28, type: !1942, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !1941, retainedNodes: !904)
!5423 = !DILocalVariable(name: "this", arg: 1, scope: !5422, type: !1968, flags: DIFlagArtificial | DIFlagObjectPointer)
!5424 = !DILocation(line: 0, scope: !5422)
!5425 = !DILocalVariable(name: "toCopy", arg: 2, scope: !5422, file: !1933, line: 28, type: !1944)
!5426 = !DILocation(line: 28, column: 1, scope: !5422)
!5427 = distinct !DISubprogram(name: "~NumberFormatException", linkageName: "_ZN11xercesc_2_721NumberFormatExceptionD0Ev", scope: !4264, file: !4263, line: 30, type: !4283, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !4282, retainedNodes: !904)
!5428 = !DILocalVariable(name: "this", arg: 1, scope: !5427, type: !4298, flags: DIFlagArtificial | DIFlagObjectPointer)
!5429 = !DILocation(line: 0, scope: !5427)
!5430 = !DILocation(line: 30, column: 1, scope: !5427)
!5431 = distinct !DISubprogram(name: "getType", linkageName: "_ZNK11xercesc_2_721NumberFormatException7getTypeEv", scope: !4264, file: !4263, line: 30, type: !4294, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !4293, retainedNodes: !904)
!5432 = !DILocalVariable(name: "this", arg: 1, scope: !5431, type: !5433, flags: DIFlagArtificial | DIFlagObjectPointer)
!5433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4275, size: 64)
!5434 = !DILocation(line: 0, scope: !5431)
!5435 = !DILocation(line: 30, column: 1, scope: !5431)
!5436 = distinct !DISubprogram(name: "duplicate", linkageName: "_ZNK11xercesc_2_721NumberFormatException9duplicateEv", scope: !4264, file: !4263, line: 30, type: !4290, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !4289, retainedNodes: !904)
!5437 = !DILocalVariable(name: "this", arg: 1, scope: !5436, type: !5433, flags: DIFlagArtificial | DIFlagObjectPointer)
!5438 = !DILocation(line: 0, scope: !5436)
!5439 = !DILocation(line: 30, column: 1, scope: !5436)
!5440 = distinct !DISubprogram(name: "NumberFormatException", linkageName: "_ZN11xercesc_2_721NumberFormatExceptionC2ERKS0_", scope: !4264, file: !4263, line: 30, type: !4272, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !4271, retainedNodes: !904)
!5441 = !DILocalVariable(name: "this", arg: 1, scope: !5440, type: !4298, flags: DIFlagArtificial | DIFlagObjectPointer)
!5442 = !DILocation(line: 0, scope: !5440)
!5443 = !DILocalVariable(name: "toCopy", arg: 2, scope: !5440, file: !4263, line: 30, type: !4274)
!5444 = !DILocation(line: 30, column: 1, scope: !5440)
!5445 = distinct !DISubprogram(name: "XMemory", linkageName: "_ZN11xercesc_2_77XMemoryC2Ev", scope: !226, file: !227, line: 130, type: !251, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !250, retainedNodes: !904)
!5446 = !DILocalVariable(name: "this", arg: 1, scope: !5445, type: !5447, flags: DIFlagArtificial | DIFlagObjectPointer)
!5447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!5448 = !DILocation(line: 0, scope: !5445)
!5449 = !DILocation(line: 132, column: 5, scope: !5445)
!5450 = distinct !DISubprogram(name: "reset", linkageName: "_ZN11xercesc_2_712ArrayJanitorItE5resetEPt", scope: !2085, file: !2296, line: 160, type: !2115, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !2114, retainedNodes: !904)
!5451 = !DILocalVariable(name: "this", arg: 1, scope: !5450, type: !2298, flags: DIFlagArtificial | DIFlagObjectPointer)
!5452 = !DILocation(line: 0, scope: !5450)
!5453 = !DILocalVariable(name: "p", arg: 2, scope: !5450, file: !2086, line: 92, type: !264)
!5454 = !DILocation(line: 92, column: 16, scope: !5450)
!5455 = !DILocation(line: 162, column: 6, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5450, file: !2296, line: 162, column: 6)
!5457 = !DILocation(line: 162, column: 6, scope: !5450)
!5458 = !DILocation(line: 164, column: 7, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5460, file: !2296, line: 164, column: 7)
!5460 = distinct !DILexicalBlock(scope: !5456, file: !2296, line: 162, column: 13)
!5461 = !DILocation(line: 164, column: 7, scope: !5460)
!5462 = !DILocation(line: 165, column: 13, scope: !5459)
!5463 = !DILocation(line: 165, column: 47, scope: !5459)
!5464 = !DILocation(line: 165, column: 29, scope: !5459)
!5465 = !DILocation(line: 167, column: 23, scope: !5459)
!5466 = !DILocation(line: 167, column: 13, scope: !5459)
!5467 = !DILocation(line: 168, column: 5, scope: !5460)
!5468 = !DILocation(line: 170, column: 10, scope: !5450)
!5469 = !DILocation(line: 170, column: 2, scope: !5450)
!5470 = !DILocation(line: 170, column: 8, scope: !5450)
!5471 = !DILocation(line: 171, column: 5, scope: !5450)
!5472 = !DILocation(line: 171, column: 20, scope: !5450)
!5473 = !DILocation(line: 172, column: 1, scope: !5450)
!5474 = distinct !DISubprogram(name: "reset", linkageName: "_ZN11xercesc_2_712ArrayJanitorIcE5resetEPc", scope: !4022, file: !2296, line: 160, type: !4051, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !4050, retainedNodes: !904)
!5475 = !DILocalVariable(name: "this", arg: 1, scope: !5474, type: !4173, flags: DIFlagArtificial | DIFlagObjectPointer)
!5476 = !DILocation(line: 0, scope: !5474)
!5477 = !DILocalVariable(name: "p", arg: 2, scope: !5474, file: !2086, line: 92, type: !15)
!5478 = !DILocation(line: 92, column: 16, scope: !5474)
!5479 = !DILocation(line: 162, column: 6, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5474, file: !2296, line: 162, column: 6)
!5481 = !DILocation(line: 162, column: 6, scope: !5474)
!5482 = !DILocation(line: 164, column: 7, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5484, file: !2296, line: 164, column: 7)
!5484 = distinct !DILexicalBlock(scope: !5480, file: !2296, line: 162, column: 13)
!5485 = !DILocation(line: 164, column: 7, scope: !5484)
!5486 = !DILocation(line: 165, column: 13, scope: !5483)
!5487 = !DILocation(line: 165, column: 47, scope: !5483)
!5488 = !DILocation(line: 165, column: 29, scope: !5483)
!5489 = !DILocation(line: 167, column: 23, scope: !5483)
!5490 = !DILocation(line: 167, column: 13, scope: !5483)
!5491 = !DILocation(line: 168, column: 5, scope: !5484)
!5492 = !DILocation(line: 170, column: 10, scope: !5474)
!5493 = !DILocation(line: 170, column: 2, scope: !5474)
!5494 = !DILocation(line: 170, column: 8, scope: !5474)
!5495 = !DILocation(line: 171, column: 5, scope: !5474)
!5496 = !DILocation(line: 171, column: 20, scope: !5474)
!5497 = !DILocation(line: 172, column: 1, scope: !5474)
!5498 = distinct !DISubprogram(name: "BaseRefVectorOf", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItEC2EjbPNS_13MemoryManagerE", scope: !222, file: !4683, line: 29, type: !267, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !266, retainedNodes: !904)
!5499 = !DILocalVariable(name: "this", arg: 1, scope: !5498, type: !221, flags: DIFlagArtificial | DIFlagObjectPointer)
!5500 = !DILocation(line: 0, scope: !5498)
!5501 = !DILocalVariable(name: "maxElems", arg: 2, scope: !5498, file: !223, line: 41, type: !42)
!5502 = !DILocation(line: 41, column: 30, scope: !5498)
!5503 = !DILocalVariable(name: "adoptElems", arg: 3, scope: !5498, file: !223, line: 42, type: !270)
!5504 = !DILocation(line: 42, column: 22, scope: !5498)
!5505 = !DILocalVariable(name: "manager", arg: 4, scope: !5498, file: !223, line: 43, type: !71)
!5506 = !DILocation(line: 43, column: 32, scope: !5498)
!5507 = !DILocation(line: 38, column: 1, scope: !5498)
!5508 = !DILocation(line: 39, column: 5, scope: !5509)
!5509 = !DILexicalBlockFile(scope: !5498, file: !223, discriminator: 0)
!5510 = !DILocation(line: 33, column: 5, scope: !5511)
!5511 = !DILexicalBlockFile(scope: !5498, file: !4683, discriminator: 0)
!5512 = !DILocation(line: 33, column: 19, scope: !5511)
!5513 = !DILocation(line: 34, column: 7, scope: !5511)
!5514 = !DILocation(line: 35, column: 7, scope: !5511)
!5515 = !DILocation(line: 35, column: 17, scope: !5511)
!5516 = !DILocation(line: 36, column: 7, scope: !5511)
!5517 = !DILocation(line: 37, column: 7, scope: !5511)
!5518 = !DILocation(line: 37, column: 22, scope: !5511)
!5519 = !DILocation(line: 40, column: 27, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5511, file: !4683, line: 38, column: 1)
!5521 = !DILocation(line: 40, column: 52, scope: !5520)
!5522 = !DILocation(line: 40, column: 61, scope: !5520)
!5523 = !DILocation(line: 40, column: 43, scope: !5520)
!5524 = !DILocation(line: 40, column: 17, scope: !5520)
!5525 = !DILocation(line: 40, column: 5, scope: !5520)
!5526 = !DILocation(line: 40, column: 15, scope: !5520)
!5527 = !DILocalVariable(name: "index", scope: !5528, file: !4683, line: 41, type: !43)
!5528 = distinct !DILexicalBlock(scope: !5520, file: !4683, line: 41, column: 5)
!5529 = !DILocation(line: 41, column: 23, scope: !5528)
!5530 = !DILocation(line: 41, column: 10, scope: !5528)
!5531 = !DILocation(line: 41, column: 34, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5528, file: !4683, line: 41, column: 5)
!5533 = !DILocation(line: 41, column: 42, scope: !5532)
!5534 = !DILocation(line: 41, column: 40, scope: !5532)
!5535 = !DILocation(line: 41, column: 5, scope: !5528)
!5536 = !DILocation(line: 42, column: 9, scope: !5532)
!5537 = !DILocation(line: 42, column: 19, scope: !5532)
!5538 = !DILocation(line: 42, column: 26, scope: !5532)
!5539 = !DILocation(line: 41, column: 57, scope: !5532)
!5540 = !DILocation(line: 41, column: 5, scope: !5532)
!5541 = distinct !{!5541, !5535, !5542}
!5542 = !DILocation(line: 42, column: 28, scope: !5528)
!5543 = !DILocation(line: 43, column: 1, scope: !5511)
!5544 = distinct !DISubprogram(name: "~RefArrayVectorOf", linkageName: "_ZN11xercesc_2_716RefArrayVectorOfItED2Ev", scope: !4544, file: !4667, line: 38, type: !4553, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !4552, retainedNodes: !904)
!5545 = !DILocalVariable(name: "this", arg: 1, scope: !5544, type: !4543, flags: DIFlagArtificial | DIFlagObjectPointer)
!5546 = !DILocation(line: 0, scope: !5544)
!5547 = !DILocation(line: 39, column: 1, scope: !5544)
!5548 = !DILocation(line: 40, column: 15, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5550, file: !4667, line: 40, column: 9)
!5550 = distinct !DILexicalBlock(scope: !5544, file: !4667, line: 39, column: 1)
!5551 = !DILocation(line: 40, column: 9, scope: !5550)
!5552 = !DILocalVariable(name: "index", scope: !5553, file: !4667, line: 42, type: !43)
!5553 = distinct !DILexicalBlock(scope: !5554, file: !4667, line: 42, column: 7)
!5554 = distinct !DILexicalBlock(scope: !5549, file: !4667, line: 41, column: 5)
!5555 = !DILocation(line: 42, column: 25, scope: !5553)
!5556 = !DILocation(line: 42, column: 12, scope: !5553)
!5557 = !DILocation(line: 42, column: 36, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5553, file: !4667, line: 42, column: 7)
!5559 = !DILocation(line: 42, column: 50, scope: !5558)
!5560 = !DILocation(line: 42, column: 42, scope: !5558)
!5561 = !DILocation(line: 42, column: 7, scope: !5553)
!5562 = !DILocation(line: 43, column: 19, scope: !5558)
!5563 = !DILocation(line: 43, column: 52, scope: !5558)
!5564 = !DILocation(line: 43, column: 62, scope: !5558)
!5565 = !DILocation(line: 43, column: 46, scope: !5558)
!5566 = !DILocation(line: 43, column: 35, scope: !5558)
!5567 = !DILocation(line: 43, column: 13, scope: !5558)
!5568 = !DILocation(line: 42, column: 66, scope: !5558)
!5569 = !DILocation(line: 42, column: 7, scope: !5558)
!5570 = distinct !{!5570, !5561, !5571}
!5571 = !DILocation(line: 43, column: 68, scope: !5553)
!5572 = !DILocation(line: 46, column: 1, scope: !5558)
!5573 = !DILocation(line: 46, column: 1, scope: !5550)
!5574 = !DILocation(line: 44, column: 5, scope: !5554)
!5575 = !DILocation(line: 45, column: 11, scope: !5550)
!5576 = !DILocation(line: 45, column: 44, scope: !5550)
!5577 = !DILocation(line: 45, column: 38, scope: !5550)
!5578 = !DILocation(line: 45, column: 27, scope: !5550)
!5579 = !DILocation(line: 46, column: 1, scope: !5544)
!5580 = distinct !DISubprogram(name: "~RefArrayVectorOf", linkageName: "_ZN11xercesc_2_716RefArrayVectorOfItED0Ev", scope: !4544, file: !4667, line: 38, type: !4553, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !4552, retainedNodes: !904)
!5581 = !DILocalVariable(name: "this", arg: 1, scope: !5580, type: !4543, flags: DIFlagArtificial | DIFlagObjectPointer)
!5582 = !DILocation(line: 0, scope: !5580)
!5583 = !DILocation(line: 39, column: 1, scope: !5580)
!5584 = !DILocation(line: 46, column: 1, scope: !5580)
!5585 = distinct !DISubprogram(name: "setElementAt", linkageName: "_ZN11xercesc_2_716RefArrayVectorOfItE12setElementAtEPtj", scope: !4544, file: !4667, line: 49, type: !4556, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !4555, retainedNodes: !904)
!5586 = !DILocalVariable(name: "this", arg: 1, scope: !5585, type: !4543, flags: DIFlagArtificial | DIFlagObjectPointer)
!5587 = !DILocation(line: 0, scope: !5585)
!5588 = !DILocalVariable(name: "toSet", arg: 2, scope: !5585, file: !4545, line: 46, type: !277)
!5589 = !DILocation(line: 46, column: 36, scope: !5585)
!5590 = !DILocalVariable(name: "setAt", arg: 3, scope: !5585, file: !4545, line: 46, type: !42)
!5591 = !DILocation(line: 46, column: 62, scope: !5585)
!5592 = !DILocation(line: 51, column: 9, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5585, file: !4667, line: 51, column: 9)
!5594 = !DILocation(line: 51, column: 24, scope: !5593)
!5595 = !DILocation(line: 51, column: 15, scope: !5593)
!5596 = !DILocation(line: 51, column: 9, scope: !5585)
!5597 = !DILocation(line: 52, column: 9, scope: !5593)
!5598 = !DILocation(line: 58, column: 1, scope: !5593)
!5599 = !DILocation(line: 54, column: 15, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5585, file: !4667, line: 54, column: 9)
!5601 = !DILocation(line: 54, column: 9, scope: !5585)
!5602 = !DILocation(line: 55, column: 15, scope: !5600)
!5603 = !DILocation(line: 55, column: 48, scope: !5600)
!5604 = !DILocation(line: 55, column: 58, scope: !5600)
!5605 = !DILocation(line: 55, column: 42, scope: !5600)
!5606 = !DILocation(line: 55, column: 31, scope: !5600)
!5607 = !DILocation(line: 55, column: 9, scope: !5600)
!5608 = !DILocation(line: 57, column: 30, scope: !5585)
!5609 = !DILocation(line: 57, column: 11, scope: !5585)
!5610 = !DILocation(line: 57, column: 21, scope: !5585)
!5611 = !DILocation(line: 57, column: 5, scope: !5585)
!5612 = !DILocation(line: 57, column: 28, scope: !5585)
!5613 = !DILocation(line: 58, column: 1, scope: !5585)
!5614 = distinct !DISubprogram(name: "removeAllElements", linkageName: "_ZN11xercesc_2_716RefArrayVectorOfItE17removeAllElementsEv", scope: !4544, file: !4667, line: 60, type: !4553, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !4558, retainedNodes: !904)
!5615 = !DILocalVariable(name: "this", arg: 1, scope: !5614, type: !4543, flags: DIFlagArtificial | DIFlagObjectPointer)
!5616 = !DILocation(line: 0, scope: !5614)
!5617 = !DILocalVariable(name: "index", scope: !5618, file: !4667, line: 62, type: !43)
!5618 = distinct !DILexicalBlock(scope: !5614, file: !4667, line: 62, column: 5)
!5619 = !DILocation(line: 62, column: 23, scope: !5618)
!5620 = !DILocation(line: 62, column: 10, scope: !5618)
!5621 = !DILocation(line: 62, column: 34, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5618, file: !4667, line: 62, column: 5)
!5623 = !DILocation(line: 62, column: 48, scope: !5622)
!5624 = !DILocation(line: 62, column: 40, scope: !5622)
!5625 = !DILocation(line: 62, column: 5, scope: !5618)
!5626 = !DILocation(line: 64, column: 19, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5628, file: !4667, line: 64, column: 13)
!5628 = distinct !DILexicalBlock(scope: !5622, file: !4667, line: 63, column: 5)
!5629 = !DILocation(line: 64, column: 13, scope: !5628)
!5630 = !DILocation(line: 65, column: 17, scope: !5627)
!5631 = !DILocation(line: 65, column: 50, scope: !5627)
!5632 = !DILocation(line: 65, column: 60, scope: !5627)
!5633 = !DILocation(line: 65, column: 44, scope: !5627)
!5634 = !DILocation(line: 65, column: 33, scope: !5627)
!5635 = !DILocation(line: 65, column: 11, scope: !5627)
!5636 = !DILocation(line: 68, column: 15, scope: !5628)
!5637 = !DILocation(line: 68, column: 25, scope: !5628)
!5638 = !DILocation(line: 68, column: 9, scope: !5628)
!5639 = !DILocation(line: 68, column: 32, scope: !5628)
!5640 = !DILocation(line: 69, column: 5, scope: !5628)
!5641 = !DILocation(line: 62, column: 64, scope: !5622)
!5642 = !DILocation(line: 62, column: 5, scope: !5622)
!5643 = distinct !{!5643, !5625, !5644}
!5644 = !DILocation(line: 69, column: 5, scope: !5618)
!5645 = !DILocation(line: 70, column: 11, scope: !5614)
!5646 = !DILocation(line: 70, column: 21, scope: !5614)
!5647 = !DILocation(line: 71, column: 1, scope: !5614)
!5648 = distinct !DISubprogram(name: "removeElementAt", linkageName: "_ZN11xercesc_2_716RefArrayVectorOfItE15removeElementAtEj", scope: !4544, file: !4667, line: 74, type: !4560, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !4559, retainedNodes: !904)
!5649 = !DILocalVariable(name: "this", arg: 1, scope: !5648, type: !4543, flags: DIFlagArtificial | DIFlagObjectPointer)
!5650 = !DILocation(line: 0, scope: !5648)
!5651 = !DILocalVariable(name: "removeAt", arg: 2, scope: !5648, file: !4545, line: 48, type: !42)
!5652 = !DILocation(line: 48, column: 45, scope: !5648)
!5653 = !DILocation(line: 76, column: 9, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5648, file: !4667, line: 76, column: 9)
!5655 = !DILocation(line: 76, column: 27, scope: !5654)
!5656 = !DILocation(line: 76, column: 18, scope: !5654)
!5657 = !DILocation(line: 76, column: 9, scope: !5648)
!5658 = !DILocation(line: 77, column: 9, scope: !5654)
!5659 = !DILocation(line: 99, column: 1, scope: !5654)
!5660 = !DILocation(line: 79, column: 15, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5648, file: !4667, line: 79, column: 9)
!5662 = !DILocation(line: 79, column: 9, scope: !5648)
!5663 = !DILocation(line: 80, column: 15, scope: !5661)
!5664 = !DILocation(line: 80, column: 48, scope: !5661)
!5665 = !DILocation(line: 80, column: 58, scope: !5661)
!5666 = !DILocation(line: 80, column: 42, scope: !5661)
!5667 = !DILocation(line: 80, column: 31, scope: !5661)
!5668 = !DILocation(line: 80, column: 9, scope: !5661)
!5669 = !DILocation(line: 83, column: 9, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5648, file: !4667, line: 83, column: 9)
!5671 = !DILocation(line: 83, column: 27, scope: !5670)
!5672 = !DILocation(line: 83, column: 36, scope: !5670)
!5673 = !DILocation(line: 83, column: 18, scope: !5670)
!5674 = !DILocation(line: 83, column: 9, scope: !5648)
!5675 = !DILocation(line: 85, column: 15, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5670, file: !4667, line: 84, column: 5)
!5677 = !DILocation(line: 85, column: 25, scope: !5676)
!5678 = !DILocation(line: 85, column: 9, scope: !5676)
!5679 = !DILocation(line: 85, column: 35, scope: !5676)
!5680 = !DILocation(line: 86, column: 15, scope: !5676)
!5681 = !DILocation(line: 86, column: 24, scope: !5676)
!5682 = !DILocation(line: 87, column: 9, scope: !5676)
!5683 = !DILocalVariable(name: "index", scope: !5684, file: !4667, line: 91, type: !43)
!5684 = distinct !DILexicalBlock(scope: !5648, file: !4667, line: 91, column: 5)
!5685 = !DILocation(line: 91, column: 23, scope: !5684)
!5686 = !DILocation(line: 91, column: 31, scope: !5684)
!5687 = !DILocation(line: 91, column: 10, scope: !5684)
!5688 = !DILocation(line: 91, column: 41, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5684, file: !4667, line: 91, column: 5)
!5690 = !DILocation(line: 91, column: 55, scope: !5689)
!5691 = !DILocation(line: 91, column: 64, scope: !5689)
!5692 = !DILocation(line: 91, column: 47, scope: !5689)
!5693 = !DILocation(line: 91, column: 5, scope: !5684)
!5694 = !DILocation(line: 92, column: 40, scope: !5689)
!5695 = !DILocation(line: 92, column: 50, scope: !5689)
!5696 = !DILocation(line: 92, column: 55, scope: !5689)
!5697 = !DILocation(line: 92, column: 34, scope: !5689)
!5698 = !DILocation(line: 92, column: 15, scope: !5689)
!5699 = !DILocation(line: 92, column: 25, scope: !5689)
!5700 = !DILocation(line: 92, column: 9, scope: !5689)
!5701 = !DILocation(line: 92, column: 32, scope: !5689)
!5702 = !DILocation(line: 91, column: 73, scope: !5689)
!5703 = !DILocation(line: 91, column: 5, scope: !5689)
!5704 = distinct !{!5704, !5693, !5705}
!5705 = !DILocation(line: 92, column: 57, scope: !5684)
!5706 = !DILocation(line: 95, column: 11, scope: !5648)
!5707 = !DILocation(line: 95, column: 27, scope: !5648)
!5708 = !DILocation(line: 95, column: 36, scope: !5648)
!5709 = !DILocation(line: 95, column: 5, scope: !5648)
!5710 = !DILocation(line: 95, column: 40, scope: !5648)
!5711 = !DILocation(line: 98, column: 11, scope: !5648)
!5712 = !DILocation(line: 98, column: 20, scope: !5648)
!5713 = !DILocation(line: 99, column: 1, scope: !5648)
!5714 = distinct !DISubprogram(name: "removeLastElement", linkageName: "_ZN11xercesc_2_716RefArrayVectorOfItE17removeLastElementEv", scope: !4544, file: !4667, line: 101, type: !4553, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !4562, retainedNodes: !904)
!5715 = !DILocalVariable(name: "this", arg: 1, scope: !5714, type: !4543, flags: DIFlagArtificial | DIFlagObjectPointer)
!5716 = !DILocation(line: 0, scope: !5714)
!5717 = !DILocation(line: 103, column: 16, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5714, file: !4667, line: 103, column: 9)
!5719 = !DILocation(line: 103, column: 10, scope: !5718)
!5720 = !DILocation(line: 103, column: 9, scope: !5714)
!5721 = !DILocation(line: 104, column: 9, scope: !5718)
!5722 = !DILocation(line: 105, column: 11, scope: !5714)
!5723 = !DILocation(line: 105, column: 20, scope: !5714)
!5724 = !DILocation(line: 107, column: 15, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5714, file: !4667, line: 107, column: 9)
!5726 = !DILocation(line: 107, column: 9, scope: !5714)
!5727 = !DILocation(line: 108, column: 15, scope: !5725)
!5728 = !DILocation(line: 108, column: 48, scope: !5725)
!5729 = !DILocation(line: 108, column: 64, scope: !5725)
!5730 = !DILocation(line: 108, column: 42, scope: !5725)
!5731 = !DILocation(line: 108, column: 31, scope: !5725)
!5732 = !DILocation(line: 108, column: 9, scope: !5725)
!5733 = !DILocation(line: 109, column: 1, scope: !5714)
!5734 = distinct !DISubprogram(name: "cleanup", linkageName: "_ZN11xercesc_2_716RefArrayVectorOfItE7cleanupEv", scope: !4544, file: !4667, line: 111, type: !4553, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !4563, retainedNodes: !904)
!5735 = !DILocalVariable(name: "this", arg: 1, scope: !5734, type: !4543, flags: DIFlagArtificial | DIFlagObjectPointer)
!5736 = !DILocation(line: 0, scope: !5734)
!5737 = !DILocation(line: 113, column: 15, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5734, file: !4667, line: 113, column: 9)
!5739 = !DILocation(line: 113, column: 9, scope: !5734)
!5740 = !DILocalVariable(name: "index", scope: !5741, file: !4667, line: 115, type: !43)
!5741 = distinct !DILexicalBlock(scope: !5742, file: !4667, line: 115, column: 9)
!5742 = distinct !DILexicalBlock(scope: !5738, file: !4667, line: 114, column: 5)
!5743 = !DILocation(line: 115, column: 27, scope: !5741)
!5744 = !DILocation(line: 115, column: 14, scope: !5741)
!5745 = !DILocation(line: 115, column: 38, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5741, file: !4667, line: 115, column: 9)
!5747 = !DILocation(line: 115, column: 52, scope: !5746)
!5748 = !DILocation(line: 115, column: 44, scope: !5746)
!5749 = !DILocation(line: 115, column: 9, scope: !5741)
!5750 = !DILocation(line: 116, column: 19, scope: !5746)
!5751 = !DILocation(line: 116, column: 52, scope: !5746)
!5752 = !DILocation(line: 116, column: 62, scope: !5746)
!5753 = !DILocation(line: 116, column: 46, scope: !5746)
!5754 = !DILocation(line: 116, column: 35, scope: !5746)
!5755 = !DILocation(line: 116, column: 13, scope: !5746)
!5756 = !DILocation(line: 115, column: 68, scope: !5746)
!5757 = !DILocation(line: 115, column: 9, scope: !5746)
!5758 = distinct !{!5758, !5749, !5759}
!5759 = !DILocation(line: 116, column: 68, scope: !5741)
!5760 = !DILocation(line: 117, column: 5, scope: !5742)
!5761 = !DILocation(line: 118, column: 11, scope: !5734)
!5762 = !DILocation(line: 118, column: 44, scope: !5734)
!5763 = !DILocation(line: 118, column: 38, scope: !5734)
!5764 = !DILocation(line: 118, column: 27, scope: !5734)
!5765 = !DILocation(line: 119, column: 1, scope: !5734)
!5766 = distinct !DISubprogram(name: "~BaseRefVectorOf", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItED2Ev", scope: !222, file: !4683, line: 47, type: !272, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !271, retainedNodes: !904)
!5767 = !DILocalVariable(name: "this", arg: 1, scope: !5766, type: !221, flags: DIFlagArtificial | DIFlagObjectPointer)
!5768 = !DILocation(line: 0, scope: !5766)
!5769 = !DILocation(line: 49, column: 1, scope: !5766)
!5770 = distinct !DISubprogram(name: "~BaseRefVectorOf", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItED0Ev", scope: !222, file: !4683, line: 47, type: !272, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !271, retainedNodes: !904)
!5771 = !DILocalVariable(name: "this", arg: 1, scope: !5770, type: !221, flags: DIFlagArtificial | DIFlagObjectPointer)
!5772 = !DILocation(line: 0, scope: !5770)
!5773 = !DILocation(line: 48, column: 1, scope: !5770)
!5774 = !DILocation(line: 49, column: 1, scope: !5770)
!5775 = distinct !DISubprogram(name: "setElementAt", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItE12setElementAtEPtj", scope: !222, file: !4683, line: 64, type: !279, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !278, retainedNodes: !904)
!5776 = !DILocalVariable(name: "this", arg: 1, scope: !5775, type: !221, flags: DIFlagArtificial | DIFlagObjectPointer)
!5777 = !DILocation(line: 0, scope: !5775)
!5778 = !DILocalVariable(name: "toSet", arg: 2, scope: !5775, file: !223, line: 52, type: !277)
!5779 = !DILocation(line: 52, column: 44, scope: !5775)
!5780 = !DILocalVariable(name: "setAt", arg: 3, scope: !5775, file: !223, line: 52, type: !42)
!5781 = !DILocation(line: 52, column: 70, scope: !5775)
!5782 = !DILocation(line: 66, column: 9, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5775, file: !4683, line: 66, column: 9)
!5784 = !DILocation(line: 66, column: 18, scope: !5783)
!5785 = !DILocation(line: 66, column: 15, scope: !5783)
!5786 = !DILocation(line: 66, column: 9, scope: !5775)
!5787 = !DILocation(line: 67, column: 9, scope: !5783)
!5788 = !DILocation(line: 72, column: 1, scope: !5783)
!5789 = !DILocation(line: 69, column: 9, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5775, file: !4683, line: 69, column: 9)
!5791 = !DILocation(line: 69, column: 9, scope: !5775)
!5792 = !DILocation(line: 70, column: 16, scope: !5790)
!5793 = !DILocation(line: 70, column: 26, scope: !5790)
!5794 = !DILocation(line: 70, column: 9, scope: !5790)
!5795 = !DILocation(line: 71, column: 24, scope: !5775)
!5796 = !DILocation(line: 71, column: 5, scope: !5775)
!5797 = !DILocation(line: 71, column: 15, scope: !5775)
!5798 = !DILocation(line: 71, column: 22, scope: !5775)
!5799 = !DILocation(line: 72, column: 1, scope: !5775)
!5800 = distinct !DISubprogram(name: "removeAllElements", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItE17removeAllElementsEv", scope: !222, file: !4683, line: 127, type: !272, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !285, retainedNodes: !904)
!5801 = !DILocalVariable(name: "this", arg: 1, scope: !5800, type: !221, flags: DIFlagArtificial | DIFlagObjectPointer)
!5802 = !DILocation(line: 0, scope: !5800)
!5803 = !DILocalVariable(name: "index", scope: !5804, file: !4683, line: 129, type: !43)
!5804 = distinct !DILexicalBlock(scope: !5800, file: !4683, line: 129, column: 5)
!5805 = !DILocation(line: 129, column: 23, scope: !5804)
!5806 = !DILocation(line: 129, column: 10, scope: !5804)
!5807 = !DILocation(line: 129, column: 34, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5804, file: !4683, line: 129, column: 5)
!5809 = !DILocation(line: 129, column: 42, scope: !5808)
!5810 = !DILocation(line: 129, column: 40, scope: !5808)
!5811 = !DILocation(line: 129, column: 5, scope: !5804)
!5812 = !DILocation(line: 131, column: 13, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5814, file: !4683, line: 131, column: 13)
!5814 = distinct !DILexicalBlock(scope: !5808, file: !4683, line: 130, column: 5)
!5815 = !DILocation(line: 131, column: 13, scope: !5814)
!5816 = !DILocation(line: 132, column: 18, scope: !5813)
!5817 = !DILocation(line: 132, column: 28, scope: !5813)
!5818 = !DILocation(line: 132, column: 11, scope: !5813)
!5819 = !DILocation(line: 135, column: 9, scope: !5814)
!5820 = !DILocation(line: 135, column: 19, scope: !5814)
!5821 = !DILocation(line: 135, column: 26, scope: !5814)
!5822 = !DILocation(line: 136, column: 5, scope: !5814)
!5823 = !DILocation(line: 129, column: 58, scope: !5808)
!5824 = !DILocation(line: 129, column: 5, scope: !5808)
!5825 = distinct !{!5825, !5811, !5826}
!5826 = !DILocation(line: 136, column: 5, scope: !5804)
!5827 = !DILocation(line: 137, column: 5, scope: !5800)
!5828 = !DILocation(line: 137, column: 15, scope: !5800)
!5829 = !DILocation(line: 138, column: 1, scope: !5800)
!5830 = distinct !DISubprogram(name: "removeElementAt", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItE15removeElementAtEj", scope: !222, file: !4683, line: 141, type: !287, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !286, retainedNodes: !904)
!5831 = !DILocalVariable(name: "this", arg: 1, scope: !5830, type: !221, flags: DIFlagArtificial | DIFlagObjectPointer)
!5832 = !DILocation(line: 0, scope: !5830)
!5833 = !DILocalVariable(name: "removeAt", arg: 2, scope: !5830, file: !223, line: 56, type: !42)
!5834 = !DILocation(line: 56, column: 53, scope: !5830)
!5835 = !DILocation(line: 143, column: 9, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5830, file: !4683, line: 143, column: 9)
!5837 = !DILocation(line: 143, column: 21, scope: !5836)
!5838 = !DILocation(line: 143, column: 18, scope: !5836)
!5839 = !DILocation(line: 143, column: 9, scope: !5830)
!5840 = !DILocation(line: 144, column: 9, scope: !5836)
!5841 = !DILocation(line: 166, column: 1, scope: !5836)
!5842 = !DILocation(line: 146, column: 9, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5830, file: !4683, line: 146, column: 9)
!5844 = !DILocation(line: 146, column: 9, scope: !5830)
!5845 = !DILocation(line: 147, column: 16, scope: !5843)
!5846 = !DILocation(line: 147, column: 26, scope: !5843)
!5847 = !DILocation(line: 147, column: 9, scope: !5843)
!5848 = !DILocation(line: 150, column: 9, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5830, file: !4683, line: 150, column: 9)
!5850 = !DILocation(line: 150, column: 21, scope: !5849)
!5851 = !DILocation(line: 150, column: 30, scope: !5849)
!5852 = !DILocation(line: 150, column: 18, scope: !5849)
!5853 = !DILocation(line: 150, column: 9, scope: !5830)
!5854 = !DILocation(line: 152, column: 9, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5849, file: !4683, line: 151, column: 5)
!5856 = !DILocation(line: 152, column: 19, scope: !5855)
!5857 = !DILocation(line: 152, column: 29, scope: !5855)
!5858 = !DILocation(line: 153, column: 9, scope: !5855)
!5859 = !DILocation(line: 153, column: 18, scope: !5855)
!5860 = !DILocation(line: 154, column: 9, scope: !5855)
!5861 = !DILocalVariable(name: "index", scope: !5862, file: !4683, line: 158, type: !43)
!5862 = distinct !DILexicalBlock(scope: !5830, file: !4683, line: 158, column: 5)
!5863 = !DILocation(line: 158, column: 23, scope: !5862)
!5864 = !DILocation(line: 158, column: 31, scope: !5862)
!5865 = !DILocation(line: 158, column: 10, scope: !5862)
!5866 = !DILocation(line: 158, column: 41, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5862, file: !4683, line: 158, column: 5)
!5868 = !DILocation(line: 158, column: 49, scope: !5867)
!5869 = !DILocation(line: 158, column: 58, scope: !5867)
!5870 = !DILocation(line: 158, column: 47, scope: !5867)
!5871 = !DILocation(line: 158, column: 5, scope: !5862)
!5872 = !DILocation(line: 159, column: 28, scope: !5867)
!5873 = !DILocation(line: 159, column: 38, scope: !5867)
!5874 = !DILocation(line: 159, column: 43, scope: !5867)
!5875 = !DILocation(line: 159, column: 9, scope: !5867)
!5876 = !DILocation(line: 159, column: 19, scope: !5867)
!5877 = !DILocation(line: 159, column: 26, scope: !5867)
!5878 = !DILocation(line: 158, column: 67, scope: !5867)
!5879 = !DILocation(line: 158, column: 5, scope: !5867)
!5880 = distinct !{!5880, !5871, !5881}
!5881 = !DILocation(line: 159, column: 45, scope: !5862)
!5882 = !DILocation(line: 162, column: 5, scope: !5830)
!5883 = !DILocation(line: 162, column: 15, scope: !5830)
!5884 = !DILocation(line: 162, column: 24, scope: !5830)
!5885 = !DILocation(line: 162, column: 28, scope: !5830)
!5886 = !DILocation(line: 165, column: 5, scope: !5830)
!5887 = !DILocation(line: 165, column: 14, scope: !5830)
!5888 = !DILocation(line: 166, column: 1, scope: !5830)
!5889 = distinct !DISubprogram(name: "removeLastElement", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItE17removeLastElementEv", scope: !222, file: !4683, line: 168, type: !272, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !289, retainedNodes: !904)
!5890 = !DILocalVariable(name: "this", arg: 1, scope: !5889, type: !221, flags: DIFlagArtificial | DIFlagObjectPointer)
!5891 = !DILocation(line: 0, scope: !5889)
!5892 = !DILocation(line: 170, column: 10, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5889, file: !4683, line: 170, column: 9)
!5894 = !DILocation(line: 170, column: 9, scope: !5889)
!5895 = !DILocation(line: 171, column: 9, scope: !5893)
!5896 = !DILocation(line: 172, column: 5, scope: !5889)
!5897 = !DILocation(line: 172, column: 14, scope: !5889)
!5898 = !DILocation(line: 174, column: 9, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5889, file: !4683, line: 174, column: 9)
!5900 = !DILocation(line: 174, column: 9, scope: !5889)
!5901 = !DILocation(line: 175, column: 16, scope: !5899)
!5902 = !DILocation(line: 175, column: 26, scope: !5899)
!5903 = !DILocation(line: 175, column: 9, scope: !5899)
!5904 = !DILocation(line: 176, column: 1, scope: !5889)
!5905 = distinct !DISubprogram(name: "cleanup", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItE7cleanupEv", scope: !222, file: !4683, line: 195, type: !272, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !296, retainedNodes: !904)
!5906 = !DILocalVariable(name: "this", arg: 1, scope: !5905, type: !221, flags: DIFlagArtificial | DIFlagObjectPointer)
!5907 = !DILocation(line: 0, scope: !5905)
!5908 = !DILocation(line: 197, column: 9, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5905, file: !4683, line: 197, column: 9)
!5910 = !DILocation(line: 197, column: 9, scope: !5905)
!5911 = !DILocalVariable(name: "index", scope: !5912, file: !4683, line: 199, type: !43)
!5912 = distinct !DILexicalBlock(scope: !5913, file: !4683, line: 199, column: 9)
!5913 = distinct !DILexicalBlock(scope: !5909, file: !4683, line: 198, column: 5)
!5914 = !DILocation(line: 199, column: 27, scope: !5912)
!5915 = !DILocation(line: 199, column: 14, scope: !5912)
!5916 = !DILocation(line: 199, column: 38, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5912, file: !4683, line: 199, column: 9)
!5918 = !DILocation(line: 199, column: 46, scope: !5917)
!5919 = !DILocation(line: 199, column: 44, scope: !5917)
!5920 = !DILocation(line: 199, column: 9, scope: !5912)
!5921 = !DILocation(line: 200, column: 20, scope: !5917)
!5922 = !DILocation(line: 200, column: 30, scope: !5917)
!5923 = !DILocation(line: 200, column: 13, scope: !5917)
!5924 = !DILocation(line: 199, column: 62, scope: !5917)
!5925 = !DILocation(line: 199, column: 9, scope: !5917)
!5926 = distinct !{!5926, !5920, !5927}
!5927 = !DILocation(line: 200, column: 35, scope: !5912)
!5928 = !DILocation(line: 201, column: 5, scope: !5913)
!5929 = !DILocation(line: 202, column: 5, scope: !5905)
!5930 = !DILocation(line: 202, column: 32, scope: !5905)
!5931 = !DILocation(line: 202, column: 21, scope: !5905)
!5932 = !DILocation(line: 203, column: 1, scope: !5905)
!5933 = distinct !DISubprogram(name: "ensureExtraCapacity", linkageName: "_ZN11xercesc_2_715BaseRefVectorOfItE19ensureExtraCapacityEj", scope: !222, file: !4683, line: 263, type: !287, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !449, declaration: !311, retainedNodes: !904)
!5934 = !DILocalVariable(name: "this", arg: 1, scope: !5933, type: !221, flags: DIFlagArtificial | DIFlagObjectPointer)
!5935 = !DILocation(line: 0, scope: !5933)
!5936 = !DILocalVariable(name: "length", arg: 2, scope: !5933, file: !223, line: 76, type: !42)
!5937 = !DILocation(line: 76, column: 49, scope: !5933)
!5938 = !DILocalVariable(name: "newMax", scope: !5933, file: !4683, line: 265, type: !43)
!5939 = !DILocation(line: 265, column: 18, scope: !5933)
!5940 = !DILocation(line: 265, column: 27, scope: !5933)
!5941 = !DILocation(line: 265, column: 39, scope: !5933)
!5942 = !DILocation(line: 265, column: 37, scope: !5933)
!5943 = !DILocation(line: 267, column: 9, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5933, file: !4683, line: 267, column: 9)
!5945 = !DILocation(line: 267, column: 19, scope: !5944)
!5946 = !DILocation(line: 267, column: 16, scope: !5944)
!5947 = !DILocation(line: 267, column: 9, scope: !5933)
!5948 = !DILocation(line: 268, column: 9, scope: !5944)
!5949 = !DILocation(line: 272, column: 9, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5933, file: !4683, line: 272, column: 9)
!5951 = !DILocation(line: 272, column: 18, scope: !5950)
!5952 = !DILocation(line: 272, column: 30, scope: !5950)
!5953 = !DILocation(line: 272, column: 39, scope: !5950)
!5954 = !DILocation(line: 272, column: 28, scope: !5950)
!5955 = !DILocation(line: 272, column: 16, scope: !5950)
!5956 = !DILocation(line: 272, column: 9, scope: !5933)
!5957 = !DILocation(line: 273, column: 18, scope: !5950)
!5958 = !DILocation(line: 273, column: 30, scope: !5950)
!5959 = !DILocation(line: 273, column: 39, scope: !5950)
!5960 = !DILocation(line: 273, column: 28, scope: !5950)
!5961 = !DILocation(line: 273, column: 16, scope: !5950)
!5962 = !DILocation(line: 273, column: 9, scope: !5950)
!5963 = !DILocalVariable(name: "newList", scope: !5933, file: !4683, line: 276, type: !263)
!5964 = !DILocation(line: 276, column: 13, scope: !5933)
!5965 = !DILocation(line: 276, column: 33, scope: !5933)
!5966 = !DILocation(line: 278, column: 9, scope: !5933)
!5967 = !DILocation(line: 278, column: 16, scope: !5933)
!5968 = !DILocation(line: 276, column: 49, scope: !5933)
!5969 = !DILocation(line: 276, column: 23, scope: !5933)
!5970 = !DILocalVariable(name: "index", scope: !5933, file: !4683, line: 280, type: !43)
!5971 = !DILocation(line: 280, column: 18, scope: !5933)
!5972 = !DILocation(line: 281, column: 5, scope: !5933)
!5973 = !DILocation(line: 281, column: 12, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5975, file: !4683, line: 281, column: 5)
!5975 = distinct !DILexicalBlock(scope: !5933, file: !4683, line: 281, column: 5)
!5976 = !DILocation(line: 281, column: 20, scope: !5974)
!5977 = !DILocation(line: 281, column: 18, scope: !5974)
!5978 = !DILocation(line: 281, column: 5, scope: !5975)
!5979 = !DILocation(line: 282, column: 26, scope: !5974)
!5980 = !DILocation(line: 282, column: 36, scope: !5974)
!5981 = !DILocation(line: 282, column: 9, scope: !5974)
!5982 = !DILocation(line: 282, column: 17, scope: !5974)
!5983 = !DILocation(line: 282, column: 24, scope: !5974)
!5984 = !DILocation(line: 281, column: 36, scope: !5974)
!5985 = !DILocation(line: 281, column: 5, scope: !5974)
!5986 = distinct !{!5986, !5978, !5987}
!5987 = !DILocation(line: 282, column: 41, scope: !5975)
!5988 = !DILocation(line: 285, column: 5, scope: !5933)
!5989 = !DILocation(line: 285, column: 12, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5991, file: !4683, line: 285, column: 5)
!5991 = distinct !DILexicalBlock(scope: !5933, file: !4683, line: 285, column: 5)
!5992 = !DILocation(line: 285, column: 20, scope: !5990)
!5993 = !DILocation(line: 285, column: 18, scope: !5990)
!5994 = !DILocation(line: 285, column: 5, scope: !5991)
!5995 = !DILocation(line: 286, column: 9, scope: !5990)
!5996 = !DILocation(line: 286, column: 17, scope: !5990)
!5997 = !DILocation(line: 286, column: 24, scope: !5990)
!5998 = !DILocation(line: 285, column: 33, scope: !5990)
!5999 = !DILocation(line: 285, column: 5, scope: !5990)
!6000 = distinct !{!6000, !5994, !6001}
!6001 = !DILocation(line: 286, column: 26, scope: !5991)
!6002 = !DILocation(line: 289, column: 5, scope: !5933)
!6003 = !DILocation(line: 289, column: 32, scope: !5933)
!6004 = !DILocation(line: 289, column: 21, scope: !5933)
!6005 = !DILocation(line: 290, column: 17, scope: !5933)
!6006 = !DILocation(line: 290, column: 5, scope: !5933)
!6007 = !DILocation(line: 290, column: 15, scope: !5933)
!6008 = !DILocation(line: 291, column: 17, scope: !5933)
!6009 = !DILocation(line: 291, column: 5, scope: !5933)
!6010 = !DILocation(line: 291, column: 15, scope: !5933)
!6011 = !DILocation(line: 292, column: 1, scope: !5933)
