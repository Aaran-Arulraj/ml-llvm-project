; ModuleID = 'blender/source/blender/editors/object/object_constraint.c'
source_filename = "blender/source/blender/editors/object/object_constraint.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.StructRNA = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type { %struct.bAction*, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.NlaStrip*, %struct.ListBase, %struct.ListBase, i32, i32, i16, i16, float }
%struct.AnimMapper = type { %struct.AnimMapper*, %struct.AnimMapper*, %struct.bAction*, %struct.ListBase }
%struct.NlaStrip = type { %struct.NlaStrip*, %struct.NlaStrip*, %struct.ListBase, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.ListBase, [64 x i8], float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i8*, i32, i32 }
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.rctf = type { float, float, float, float }
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type opaque
%struct.anim = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type { %struct.ID, i8*, i32, i32, %struct.ListBase, %struct.TextLine*, %struct.TextLine*, i32, i32, i8*, i32, i32, i8*, double }
%struct.TextLine = type { %struct.TextLine*, %struct.TextLine*, i8*, i8*, i32, i32 }
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.bPoseChannel = type { %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.IDProperty*, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i8, i8, [6 x i8], %struct.Bone*, %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.ListBase, %struct.ListBase, %struct.bMotionPath*, %struct.Object*, %struct.bPoseChannel*, [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], float, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, float, i8* }
%struct.Bone = type opaque
%struct.bConstraint = type { %struct.bConstraint*, %struct.bConstraint*, i8*, i16, i16, i8, i8, [64 x i8], i16, float, float, %struct.Ipo*, float, float }
%struct.bConstraintTypeInfo = type { i16, i16, [32 x i8], [32 x i8], void (%struct.bConstraint*)*, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)*, void (%struct.bConstraint*, %struct.bConstraint*)*, void (i8*)*, i32 (%struct.bConstraint*, %struct.ListBase*)*, void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* }
%struct.bConstraintOb = type { %struct.Scene*, %struct.Object*, %struct.bPoseChannel*, [4 x [4 x float]], [4 x [4 x float]], i16, i16 }
%struct.bConstraintTarget = type { %struct.bConstraintTarget*, %struct.bConstraintTarget*, %struct.Object*, [64 x i8], [4 x [4 x float]], i16, i16, i16, i16 }
%struct.bKinematicConstraint = type { %struct.Object*, i16, i16, i16, i16, [64 x i8], %struct.Object*, [64 x i8], float, float, float, [3 x float], i16, i16, float }
%struct.bPivotConstraint = type { %struct.Object*, [64 x i8], [3 x float], i16, i16 }
%struct.bActionConstraint = type { %struct.Object*, i16, i16, i32, i32, float, float, i32, %struct.bAction*, [64 x i8] }
%struct.bFollowPathConstraint = type { %struct.Object*, float, float, i32, i16, i16 }
%struct.bTrackToConstraint = type { %struct.Object*, i32, i32, i32, i32, [64 x i8] }
%struct.bLockTrackConstraint = type { %struct.Object*, i32, i32, [64 x i8] }
%struct.bSplineIKConstraint = type { %struct.Object*, float*, i16, i16, i16, i16 }
%struct.bFollowTrackConstraint = type { %struct.MovieClip*, [64 x i8], i32, i32, [64 x i8], %struct.Object*, %struct.Object* }
%struct.MovieTrackingObject = type { %struct.MovieTrackingObject*, %struct.MovieTrackingObject*, [64 x i8], i32, float, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, i32, i32 }
%struct.bCameraSolverConstraint = type { %struct.MovieClip*, i32, i32 }
%struct.bObjectSolverConstraint = type { %struct.MovieClip*, i32, i32, [64 x i8], [4 x [4 x float]], %struct.Object* }
%struct.Curve = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.ListBase, %struct.EditNurb*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.Key*, %struct.Material**, [3 x float], [3 x float], [3 x float], i16, i16, i16, i16, float, float, i32, i16, i16, i32, float, float, float, i16, i16, i16, i16, i32, i32, [4 x i8], i16, i8, i8, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i8*, %struct.EditFont*, [64 x i8], %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.TextBox*, i32, i32, %struct.CharInfo*, %struct.CharInfo, float, float, float, i8, i8, [2 x i8] }
%struct.EditNurb = type { %struct.ListBase, %struct.GHash*, i32, [4 x i8] }
%struct.Key = type opaque
%struct.EditFont = type opaque
%struct.VFont = type opaque
%struct.TextBox = type { float, float, float, float }
%struct.CharInfo = type { i16, i16, i8, i8, i16 }
%struct.bArmature = type opaque
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.bContext = type opaque
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.uiLayout = type opaque
%struct.PropertyRNA = type opaque
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.bStretchToConstraint = type { %struct.Object*, i32, i32, i32, float, float, float, float, float, [64 x i8] }
%struct.bDistLimitConstraint = type { %struct.Object*, [64 x i8], float, float, i16, i16, i32 }
%struct.bChildOfConstraint = type { %struct.Object*, i32, i32, [4 x [4 x float]], [64 x i8] }
%struct.FCurve = type { %struct.FCurve*, %struct.FCurve*, %struct.bActionGroup*, %struct.ChannelDriver*, %struct.ListBase, %struct.BezTriple*, %struct.FPoint*, i32, float, i16, i16, i32, i8*, i32, [3 x float], float, float }
%struct.bActionGroup = type { %struct.bActionGroup*, %struct.bActionGroup*, %struct.ListBase, i32, i32, [64 x i8], %struct.ThemeWireColor }
%struct.ThemeWireColor = type { [4 x i8], [4 x i8], [4 x i8], i16, i16 }
%struct.ChannelDriver = type { %struct.ListBase, [256 x i8], i8*, float, float, i32, i32 }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.FPoint = type { [2 x float], i32, i32 }
%struct.FModifier = type { %struct.FModifier*, %struct.FModifier*, i8*, [64 x i8], i16, i16, float, float, float, float, float }
%struct.FMod_Generator = type { float*, i32, i32, i32, i32 }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.CollectionPointerLink = type { %struct.CollectionPointerLink*, %struct.CollectionPointerLink*, %struct.PointerRNA }
%struct.uiPopupMenu = type opaque

@.str = private unnamed_addr constant [22 x i8] c"Reset Original Length\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"CONSTRAINT_OT_stretchto_reset\00", align 1
@.str.2 = private unnamed_addr constant [56 x i8] c"Reset original length of bone for Stretch To Constraint\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"Reset Distance\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"CONSTRAINT_OT_limitdistance_reset\00", align 1
@.str.5 = private unnamed_addr constant [54 x i8] c"Reset limiting distance for Limit Distance Constraint\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"Set Inverse\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"CONSTRAINT_OT_childof_set_inverse\00", align 1
@.str.8 = private unnamed_addr constant [46 x i8] c"Set inverse correction for ChildOf constraint\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"Clear Inverse\00", align 1
@.str.10 = private unnamed_addr constant [36 x i8] c"CONSTRAINT_OT_childof_clear_inverse\00", align 1
@.str.11 = private unnamed_addr constant [48 x i8] c"Clear inverse correction for ChildOf constraint\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"Auto Animate Path\00", align 1
@.str.13 = private unnamed_addr constant [38 x i8] c"CONSTRAINT_OT_followpath_path_animate\00", align 1
@.str.14 = private unnamed_addr constant [79 x i8] c"Add default animation for path used by constraint if it isn't animated already\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"frame_start\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"Start Frame\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"First frame of path animation\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"Length\00", align 1
@.str.20 = private unnamed_addr constant [49 x i8] c"Number of frames that path animation should take\00", align 1
@.str.21 = private unnamed_addr constant [39 x i8] c"CONSTRAINT_OT_objectsolver_set_inverse\00", align 1
@.str.22 = private unnamed_addr constant [51 x i8] c"Set inverse correction for ObjectSolver constraint\00", align 1
@.str.23 = private unnamed_addr constant [41 x i8] c"CONSTRAINT_OT_objectsolver_clear_inverse\00", align 1
@.str.24 = private unnamed_addr constant [53 x i8] c"Clear inverse correction for ObjectSolver constraint\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"Delete Constraint\00", align 1
@.str.26 = private unnamed_addr constant [21 x i8] c"CONSTRAINT_OT_delete\00", align 1
@.str.27 = private unnamed_addr constant [40 x i8] c"Remove constraint from constraint stack\00", align 1
@.str.28 = private unnamed_addr constant [21 x i8] c"Move Constraint Down\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"CONSTRAINT_OT_move_down\00", align 1
@.str.30 = private unnamed_addr constant [41 x i8] c"Move constraint down in constraint stack\00", align 1
@.str.31 = private unnamed_addr constant [19 x i8] c"Move Constraint Up\00", align 1
@.str.32 = private unnamed_addr constant [22 x i8] c"CONSTRAINT_OT_move_up\00", align 1
@.str.33 = private unnamed_addr constant [39 x i8] c"Move constraint up in constraint stack\00", align 1
@.str.34 = private unnamed_addr constant [23 x i8] c"Clear Pose Constraints\00", align 1
@.str.35 = private unnamed_addr constant [26 x i8] c"POSE_OT_constraints_clear\00", align 1
@.str.36 = private unnamed_addr constant [49 x i8] c"Clear all the constraints for the selected bones\00", align 1
@.str.37 = private unnamed_addr constant [25 x i8] c"Clear Object Constraints\00", align 1
@.str.38 = private unnamed_addr constant [28 x i8] c"OBJECT_OT_constraints_clear\00", align 1
@.str.39 = private unnamed_addr constant [53 x i8] c"Clear all the constraints for the active Object only\00", align 1
@.str.40 = private unnamed_addr constant [35 x i8] c"Copy Constraints to Selected Bones\00", align 1
@.str.41 = private unnamed_addr constant [25 x i8] c"POSE_OT_constraints_copy\00", align 1
@.str.42 = private unnamed_addr constant [41 x i8] c"Copy constraints to other selected bones\00", align 1
@.str.43 = private unnamed_addr constant [37 x i8] c"Copy Constraints to Selected Objects\00", align 1
@.str.44 = private unnamed_addr constant [27 x i8] c"OBJECT_OT_constraints_copy\00", align 1
@.str.45 = private unnamed_addr constant [43 x i8] c"Copy constraints to other selected objects\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"Add Constraint\00", align 1
@.str.47 = private unnamed_addr constant [38 x i8] c"Add a constraint to the active object\00", align 1
@.str.48 = private unnamed_addr constant [25 x i8] c"OBJECT_OT_constraint_add\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@constraint_type_items = external dso_local global [0 x %struct.EnumPropertyItem], align 8
@.str.50 = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str.51 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.52 = private unnamed_addr constant [30 x i8] c"Add Constraint (with Targets)\00", align 1
@.str.53 = private unnamed_addr constant [104 x i8] c"Add a constraint to the active object, with target (where applicable) set to the selected Objects/Bones\00", align 1
@.str.54 = private unnamed_addr constant [38 x i8] c"OBJECT_OT_constraint_add_with_targets\00", align 1
@.str.55 = private unnamed_addr constant [36 x i8] c"Add a constraint to the active bone\00", align 1
@.str.56 = private unnamed_addr constant [23 x i8] c"POSE_OT_constraint_add\00", align 1
@.str.57 = private unnamed_addr constant [102 x i8] c"Add a constraint to the active bone, with target (where applicable) set to the selected Objects/Bones\00", align 1
@.str.58 = private unnamed_addr constant [36 x i8] c"POSE_OT_constraint_add_with_targets\00", align 1
@.str.59 = private unnamed_addr constant [15 x i8] c"Add IK to Bone\00", align 1
@.str.60 = private unnamed_addr constant [37 x i8] c"Add IK Constraint to the active Bone\00", align 1
@.str.61 = private unnamed_addr constant [15 x i8] c"POSE_OT_ik_add\00", align 1
@.str.62 = private unnamed_addr constant [13 x i8] c"with_targets\00", align 1
@.str.63 = private unnamed_addr constant [13 x i8] c"With Targets\00", align 1
@.str.64 = private unnamed_addr constant [72 x i8] c"Assign IK Constraint with targets derived from the select bones/objects\00", align 1
@.str.65 = private unnamed_addr constant [10 x i8] c"Remove IK\00", align 1
@.str.66 = private unnamed_addr constant [46 x i8] c"Remove all IK Constraints from selected bones\00", align 1
@.str.67 = private unnamed_addr constant [17 x i8] c"POSE_OT_ik_clear\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.68 = private unnamed_addr constant [11 x i8] c"constraint\00", align 1
@RNA_Constraint = external dso_local global %struct.StructRNA, align 1
@.str.69 = private unnamed_addr constant [6 x i8] c"owner\00", align 1
@.str.70 = private unnamed_addr constant [29 x i8] c"Context missing 'constraint'\00", align 1
@.str.71 = private unnamed_addr constant [30 x i8] c"Context missing active object\00", align 1
@.str.72 = private unnamed_addr constant [25 x i8] c"Cannot edit library data\00", align 1
@.str.73 = private unnamed_addr constant [11 x i8] c"Constraint\00", align 1
@.str.74 = private unnamed_addr constant [31 x i8] c"Name of the constraint to edit\00", align 1
@constraint_owner_items = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.77, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.79, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.82, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !0
@.str.75 = private unnamed_addr constant [6 x i8] c"Owner\00", align 1
@.str.76 = private unnamed_addr constant [29 x i8] c"The owner of this constraint\00", align 1
@.str.77 = private unnamed_addr constant [7 x i8] c"OBJECT\00", align 1
@.str.78 = private unnamed_addr constant [7 x i8] c"Object\00", align 1
@.str.79 = private unnamed_addr constant [39 x i8] c"Edit a constraint on the active object\00", align 1
@.str.80 = private unnamed_addr constant [5 x i8] c"BONE\00", align 1
@.str.81 = private unnamed_addr constant [5 x i8] c"Bone\00", align 1
@.str.82 = private unnamed_addr constant [37 x i8] c"Edit a constraint on the active bone\00", align 1
@.str.83 = private unnamed_addr constant [45 x i8] c"DEBUG: Child-Of Set Inverse - object = '%s'\0A\00", align 1
@.str.84 = private unnamed_addr constant [7 x i8] c"<None>\00", align 1
@.str.85 = private unnamed_addr constant [56 x i8] c"Could not find constraint data for Child-Of Set Inverse\00", align 1
@.str.86 = private unnamed_addr constant [30 x i8] c"Child Of constraint not found\00", align 1
@.str.87 = private unnamed_addr constant [33 x i8] c"Follow Path constraint not found\00", align 1
@.str.88 = private unnamed_addr constant [10 x i8] c"eval_time\00", align 1
@.str.89 = private unnamed_addr constant [25 x i8] c"Path is already animated\00", align 1
@RNA_FollowPathConstraint = external dso_local global %struct.StructRNA, align 1
@.str.90 = private unnamed_addr constant [14 x i8] c"offset_factor\00", align 1
@.str.91 = private unnamed_addr constant [44 x i8] c"No active bone with constraints for copying\00", align 1
@.str.92 = private unnamed_addr constant [38 x i8] c"No active object to add constraint to\00", align 1
@.str.93 = private unnamed_addr constant [43 x i8] c"No active pose bone to add a constraint to\00", align 1
@.str.94 = private unnamed_addr constant [57 x i8] c"Rigid Body Joint constraint can only be added to objects\00", align 1
@.str.95 = private unnamed_addr constant [41 x i8] c"IK constraint can only be added to bones\00", align 1
@.str.96 = private unnamed_addr constant [48 x i8] c"Spline IK constraint can only be added to bones\00", align 1
@.str.97 = private unnamed_addr constant [49 x i8] c"Must have an active bone to add IK constraint to\00", align 1
@.str.98 = private unnamed_addr constant [34 x i8] c"Bone already has an IK constraint\00", align 1
@.str.99 = private unnamed_addr constant [7 x i8] c"Add IK\00", align 1
@.str.100 = private unnamed_addr constant [15 x i8] c"To Active Bone\00", align 1
@.str.101 = private unnamed_addr constant [17 x i8] c"To Active Object\00", align 1
@.str.102 = private unnamed_addr constant [20 x i8] c"To New Empty Object\00", align 1
@.str.103 = private unnamed_addr constant [16 x i8] c"Without Targets\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ListBase* @get_active_constraints(%struct.Object* %ob) #0 !dbg !2794 {
entry:
  %retval = alloca %struct.ListBase*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2801, metadata !DIExpression()), !dbg !2802
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2803
  %cmp = icmp eq %struct.Object* %0, null, !dbg !2805
  br i1 %cmp, label %if.then, label %if.end, !dbg !2806

if.then:                                          ; preds = %entry
  store %struct.ListBase* null, %struct.ListBase** %retval, align 8, !dbg !2807
  br label %return, !dbg !2807

if.end:                                           ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2808
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 27, !dbg !2810
  %2 = load i32, i32* %mode, align 8, !dbg !2810
  %and = and i32 %2, 64, !dbg !2811
  %tobool = icmp ne i32 %and, 0, !dbg !2811
  br i1 %tobool, label %if.then1, label %if.else, !dbg !2812

if.then1:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !2813, metadata !DIExpression()), !dbg !2862
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2863
  %call = call %struct.bPoseChannel* @BKE_pose_channel_active(%struct.Object* %3), !dbg !2864
  store %struct.bPoseChannel* %call, %struct.bPoseChannel** %pchan, align 8, !dbg !2865
  %4 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !2866
  %tobool2 = icmp ne %struct.bPoseChannel* %4, null, !dbg !2866
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !2868

if.then3:                                         ; preds = %if.then1
  %5 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !2869
  %constraints = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %5, i32 0, i32 3, !dbg !2870
  store %struct.ListBase* %constraints, %struct.ListBase** %retval, align 8, !dbg !2871
  br label %return, !dbg !2871

if.end4:                                          ; preds = %if.then1
  br label %if.end6, !dbg !2872

if.else:                                          ; preds = %if.end
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2873
  %constraints5 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 106, !dbg !2874
  store %struct.ListBase* %constraints5, %struct.ListBase** %retval, align 8, !dbg !2875
  br label %return, !dbg !2875

if.end6:                                          ; preds = %if.end4
  store %struct.ListBase* null, %struct.ListBase** %retval, align 8, !dbg !2876
  br label %return, !dbg !2876

return:                                           ; preds = %if.end6, %if.else, %if.then3, %if.then
  %7 = load %struct.ListBase*, %struct.ListBase** %retval, align 8, !dbg !2877
  ret %struct.ListBase* %7, !dbg !2877
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local %struct.bPoseChannel* @BKE_pose_channel_active(%struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ListBase* @get_constraint_lb(%struct.Object* %ob, %struct.bConstraint* %con, %struct.bPoseChannel** %r_pchan) #0 !dbg !2878 {
entry:
  %retval = alloca %struct.ListBase*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %con.addr = alloca %struct.bConstraint*, align 8
  %r_pchan.addr = alloca %struct.bPoseChannel**, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2901, metadata !DIExpression()), !dbg !2902
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !2903, metadata !DIExpression()), !dbg !2904
  store %struct.bPoseChannel** %r_pchan, %struct.bPoseChannel*** %r_pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel*** %r_pchan.addr, metadata !2905, metadata !DIExpression()), !dbg !2906
  %0 = load %struct.bPoseChannel**, %struct.bPoseChannel*** %r_pchan.addr, align 8, !dbg !2907
  %tobool = icmp ne %struct.bPoseChannel** %0, null, !dbg !2907
  br i1 %tobool, label %if.then, label %if.end, !dbg !2909

if.then:                                          ; preds = %entry
  %1 = load %struct.bPoseChannel**, %struct.bPoseChannel*** %r_pchan.addr, align 8, !dbg !2910
  store %struct.bPoseChannel* null, %struct.bPoseChannel** %1, align 8, !dbg !2911
  br label %if.end, !dbg !2912

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2913
  %cmp = icmp eq %struct.Object* null, %2, !dbg !2913
  br i1 %cmp, label %if.then2, label %lor.lhs.false, !dbg !2913

lor.lhs.false:                                    ; preds = %if.end
  %3 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !2913
  %cmp1 = icmp eq %struct.bConstraint* null, %3, !dbg !2913
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2915

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  store %struct.ListBase* null, %struct.ListBase** %retval, align 8, !dbg !2916
  br label %return, !dbg !2916

if.end3:                                          ; preds = %lor.lhs.false
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2917
  %constraints = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 106, !dbg !2919
  %5 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !2920
  %6 = bitcast %struct.bConstraint* %5 to i8*, !dbg !2920
  %call = call i32 @BLI_findindex(%struct.ListBase* %constraints, i8* %6), !dbg !2921
  %cmp4 = icmp ne i32 %call, -1, !dbg !2922
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !2923

if.then5:                                         ; preds = %if.end3
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2924
  %constraints6 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 106, !dbg !2926
  store %struct.ListBase* %constraints6, %struct.ListBase** %retval, align 8, !dbg !2927
  br label %return, !dbg !2927

if.end7:                                          ; preds = %if.end3
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2928
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 18, !dbg !2930
  %9 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !2930
  %tobool8 = icmp ne %struct.bPose* %9, null, !dbg !2928
  br i1 %tobool8, label %if.then9, label %if.end21, !dbg !2931

if.then9:                                         ; preds = %if.end7
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !2932, metadata !DIExpression()), !dbg !2934
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2935
  %pose10 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 18, !dbg !2937
  %11 = load %struct.bPose*, %struct.bPose** %pose10, align 8, !dbg !2937
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %11, i32 0, i32 0, !dbg !2938
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !2939
  %12 = load i8*, i8** %first, align 8, !dbg !2939
  %13 = bitcast i8* %12 to %struct.bPoseChannel*, !dbg !2935
  store %struct.bPoseChannel* %13, %struct.bPoseChannel** %pchan, align 8, !dbg !2940
  br label %for.cond, !dbg !2941

for.cond:                                         ; preds = %for.inc, %if.then9
  %14 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !2942
  %tobool11 = icmp ne %struct.bPoseChannel* %14, null, !dbg !2944
  br i1 %tobool11, label %for.body, label %for.end, !dbg !2944

for.body:                                         ; preds = %for.cond
  %15 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !2945
  %constraints12 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %15, i32 0, i32 3, !dbg !2948
  %16 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !2949
  %17 = bitcast %struct.bConstraint* %16 to i8*, !dbg !2949
  %call13 = call i32 @BLI_findindex(%struct.ListBase* %constraints12, i8* %17), !dbg !2950
  %cmp14 = icmp ne i32 %call13, -1, !dbg !2951
  br i1 %cmp14, label %if.then15, label %if.end20, !dbg !2952

if.then15:                                        ; preds = %for.body
  %18 = load %struct.bPoseChannel**, %struct.bPoseChannel*** %r_pchan.addr, align 8, !dbg !2953
  %tobool16 = icmp ne %struct.bPoseChannel** %18, null, !dbg !2953
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !2956

if.then17:                                        ; preds = %if.then15
  %19 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !2957
  %20 = load %struct.bPoseChannel**, %struct.bPoseChannel*** %r_pchan.addr, align 8, !dbg !2958
  store %struct.bPoseChannel* %19, %struct.bPoseChannel** %20, align 8, !dbg !2959
  br label %if.end18, !dbg !2960

if.end18:                                         ; preds = %if.then17, %if.then15
  %21 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !2961
  %constraints19 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %21, i32 0, i32 3, !dbg !2962
  store %struct.ListBase* %constraints19, %struct.ListBase** %retval, align 8, !dbg !2963
  br label %return, !dbg !2963

if.end20:                                         ; preds = %for.body
  br label %for.inc, !dbg !2964

for.inc:                                          ; preds = %if.end20
  %22 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !2965
  %next = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %22, i32 0, i32 0, !dbg !2966
  %23 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !2966
  store %struct.bPoseChannel* %23, %struct.bPoseChannel** %pchan, align 8, !dbg !2967
  br label %for.cond, !dbg !2968, !llvm.loop !2969

for.end:                                          ; preds = %for.cond
  br label %if.end21, !dbg !2971

if.end21:                                         ; preds = %for.end, %if.end7
  store %struct.ListBase* null, %struct.ListBase** %retval, align 8, !dbg !2972
  br label %return, !dbg !2972

return:                                           ; preds = %if.end21, %if.end18, %if.then5, %if.then2
  %24 = load %struct.ListBase*, %struct.ListBase** %retval, align 8, !dbg !2973
  ret %struct.ListBase* %24, !dbg !2973
}

declare dso_local i32 @BLI_findindex(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bConstraint* @get_active_constraint(%struct.Object* %ob) #0 !dbg !2974 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2977, metadata !DIExpression()), !dbg !2978
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2979
  %call = call %struct.ListBase* @get_active_constraints(%struct.Object* %0), !dbg !2980
  %call1 = call %struct.bConstraint* @BKE_constraints_active_get(%struct.ListBase* %call), !dbg !2981
  ret %struct.bConstraint* %call1, !dbg !2982
}

declare dso_local %struct.bConstraint* @BKE_constraints_active_get(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @object_test_constraints(%struct.Object* %owner) #0 !dbg !2983 {
entry:
  %owner.addr = alloca %struct.Object*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.Object* %owner, %struct.Object** %owner.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %owner.addr, metadata !2986, metadata !DIExpression()), !dbg !2987
  %0 = load %struct.Object*, %struct.Object** %owner.addr, align 8, !dbg !2988
  %constraints = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 106, !dbg !2990
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints, i32 0, i32 0, !dbg !2991
  %1 = load i8*, i8** %first, align 8, !dbg !2991
  %tobool = icmp ne i8* %1, null, !dbg !2988
  br i1 %tobool, label %if.then, label %if.end, !dbg !2992

if.then:                                          ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %owner.addr, align 8, !dbg !2993
  call void @test_constraints(%struct.Object* %2, %struct.bPoseChannel* null), !dbg !2994
  br label %if.end, !dbg !2994

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.Object*, %struct.Object** %owner.addr, align 8, !dbg !2995
  %type = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 3, !dbg !2997
  %4 = load i16, i16* %type, align 8, !dbg !2997
  %conv = sext i16 %4 to i32, !dbg !2995
  %cmp = icmp eq i32 %conv, 25, !dbg !2998
  br i1 %cmp, label %land.lhs.true, label %if.end12, !dbg !2999

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct.Object*, %struct.Object** %owner.addr, align 8, !dbg !3000
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 18, !dbg !3001
  %6 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !3001
  %tobool2 = icmp ne %struct.bPose* %6, null, !dbg !3000
  br i1 %tobool2, label %if.then3, label %if.end12, !dbg !3002

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !3003, metadata !DIExpression()), !dbg !3005
  %7 = load %struct.Object*, %struct.Object** %owner.addr, align 8, !dbg !3006
  %pose4 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 18, !dbg !3008
  %8 = load %struct.bPose*, %struct.bPose** %pose4, align 8, !dbg !3008
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %8, i32 0, i32 0, !dbg !3009
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !3010
  %9 = load i8*, i8** %first5, align 8, !dbg !3010
  %10 = bitcast i8* %9 to %struct.bPoseChannel*, !dbg !3006
  store %struct.bPoseChannel* %10, %struct.bPoseChannel** %pchan, align 8, !dbg !3011
  br label %for.cond, !dbg !3012

for.cond:                                         ; preds = %for.inc, %if.then3
  %11 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3013
  %tobool6 = icmp ne %struct.bPoseChannel* %11, null, !dbg !3015
  br i1 %tobool6, label %for.body, label %for.end, !dbg !3015

for.body:                                         ; preds = %for.cond
  %12 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3016
  %constraints7 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %12, i32 0, i32 3, !dbg !3019
  %first8 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints7, i32 0, i32 0, !dbg !3020
  %13 = load i8*, i8** %first8, align 8, !dbg !3020
  %tobool9 = icmp ne i8* %13, null, !dbg !3016
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !3021

if.then10:                                        ; preds = %for.body
  %14 = load %struct.Object*, %struct.Object** %owner.addr, align 8, !dbg !3022
  %15 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3023
  call void @test_constraints(%struct.Object* %14, %struct.bPoseChannel* %15), !dbg !3024
  br label %if.end11, !dbg !3024

if.end11:                                         ; preds = %if.then10, %for.body
  br label %for.inc, !dbg !3025

for.inc:                                          ; preds = %if.end11
  %16 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3026
  %next = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %16, i32 0, i32 0, !dbg !3027
  %17 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !3027
  store %struct.bPoseChannel* %17, %struct.bPoseChannel** %pchan, align 8, !dbg !3028
  br label %for.cond, !dbg !3029, !llvm.loop !3030

for.end:                                          ; preds = %for.cond
  br label %if.end12, !dbg !3032

if.end12:                                         ; preds = %for.end, %land.lhs.true, %if.end
  ret void, !dbg !3033
}

; Function Attrs: noinline nounwind uwtable
define internal void @test_constraints(%struct.Object* %owner, %struct.bPoseChannel* %pchan) #0 !dbg !3034 {
entry:
  %owner.addr = alloca %struct.Object*, align 8
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %curcon = alloca %struct.bConstraint*, align 8
  %conlist = alloca %struct.ListBase*, align 8
  %type = alloca i32, align 4
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  %targets = alloca %struct.ListBase, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %data = alloca %struct.bKinematicConstraint*, align 8
  %data81 = alloca %struct.bPivotConstraint*, align 8
  %data120 = alloca %struct.bActionConstraint*, align 8
  %data147 = alloca %struct.bFollowPathConstraint*, align 8
  %data177 = alloca %struct.bTrackToConstraint*, align 8
  %data204 = alloca %struct.bLockTrackConstraint*, align 8
  %data232 = alloca %struct.bSplineIKConstraint*, align 8
  %data259 = alloca %struct.bFollowTrackConstraint*, align 8
  %tracking = alloca %struct.MovieTracking*, align 8
  %tracking_object = alloca %struct.MovieTrackingObject*, align 8
  %data314 = alloca %struct.bCameraSolverConstraint*, align 8
  %data336 = alloca %struct.bObjectSolverConstraint*, align 8
  %cu = alloca %struct.Curve*, align 8
  store %struct.Object* %owner, %struct.Object** %owner.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %owner.addr, metadata !3037, metadata !DIExpression()), !dbg !3038
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !3039, metadata !DIExpression()), !dbg !3040
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %curcon, metadata !3041, metadata !DIExpression()), !dbg !3042
  call void @llvm.dbg.declare(metadata %struct.ListBase** %conlist, metadata !3043, metadata !DIExpression()), !dbg !3044
  store %struct.ListBase* null, %struct.ListBase** %conlist, align 8, !dbg !3044
  call void @llvm.dbg.declare(metadata i32* %type, metadata !3045, metadata !DIExpression()), !dbg !3046
  %0 = load %struct.Object*, %struct.Object** %owner.addr, align 8, !dbg !3047
  %cmp = icmp eq %struct.Object* %0, null, !dbg !3049
  br i1 %cmp, label %if.then, label %if.end, !dbg !3050

if.then:                                          ; preds = %entry
  br label %if.end471, !dbg !3051

if.end:                                           ; preds = %entry
  %1 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !3052
  %tobool = icmp ne %struct.bPoseChannel* %1, null, !dbg !3052
  br i1 %tobool, label %if.then1, label %if.else, !dbg !3054

if.then1:                                         ; preds = %if.end
  %2 = load %struct.Object*, %struct.Object** %owner.addr, align 8, !dbg !3055
  %type2 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !3057
  %3 = load i16, i16* %type2, align 8, !dbg !3057
  %conv = sext i16 %3 to i32, !dbg !3055
  switch i32 %conv, label %sw.default [
    i32 25, label %sw.bb
  ], !dbg !3058

sw.bb:                                            ; preds = %if.then1
  store i32 2, i32* %type, align 4, !dbg !3059
  br label %sw.epilog, !dbg !3061

sw.default:                                       ; preds = %if.then1
  store i32 1, i32* %type, align 4, !dbg !3062
  br label %sw.epilog, !dbg !3063

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  br label %if.end3, !dbg !3064

if.else:                                          ; preds = %if.end
  store i32 1, i32* %type, align 4, !dbg !3065
  br label %if.end3

if.end3:                                          ; preds = %if.else, %sw.epilog
  %4 = load i32, i32* %type, align 4, !dbg !3066
  switch i32 %4, label %sw.epilog7 [
    i32 1, label %sw.bb4
    i32 2, label %sw.bb5
  ], !dbg !3067

sw.bb4:                                           ; preds = %if.end3
  %5 = load %struct.Object*, %struct.Object** %owner.addr, align 8, !dbg !3068
  %constraints = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 106, !dbg !3070
  store %struct.ListBase* %constraints, %struct.ListBase** %conlist, align 8, !dbg !3071
  br label %sw.epilog7, !dbg !3072

sw.bb5:                                           ; preds = %if.end3
  %6 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !3073
  %constraints6 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %6, i32 0, i32 3, !dbg !3074
  store %struct.ListBase* %constraints6, %struct.ListBase** %conlist, align 8, !dbg !3075
  br label %sw.epilog7, !dbg !3076

sw.epilog7:                                       ; preds = %if.end3, %sw.bb5, %sw.bb4
  %7 = load %struct.ListBase*, %struct.ListBase** %conlist, align 8, !dbg !3077
  %tobool8 = icmp ne %struct.ListBase* %7, null, !dbg !3077
  br i1 %tobool8, label %if.then9, label %if.end471, !dbg !3079

if.then9:                                         ; preds = %sw.epilog7
  %8 = load %struct.ListBase*, %struct.ListBase** %conlist, align 8, !dbg !3080
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %8, i32 0, i32 0, !dbg !3083
  %9 = load i8*, i8** %first, align 8, !dbg !3083
  %10 = bitcast i8* %9 to %struct.bConstraint*, !dbg !3080
  store %struct.bConstraint* %10, %struct.bConstraint** %curcon, align 8, !dbg !3084
  br label %for.cond, !dbg !3085

for.cond:                                         ; preds = %for.inc468, %if.then9
  %11 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3086
  %tobool10 = icmp ne %struct.bConstraint* %11, null, !dbg !3088
  br i1 %tobool10, label %for.body, label %for.end470, !dbg !3088

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !3089, metadata !DIExpression()), !dbg !3156
  %12 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3157
  %call = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %12), !dbg !3158
  store %struct.bConstraintTypeInfo* %call, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3156
  call void @llvm.dbg.declare(metadata %struct.ListBase* %targets, metadata !3159, metadata !DIExpression()), !dbg !3160
  %13 = bitcast %struct.ListBase* %targets to i8*, !dbg !3160
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false), !dbg !3160
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !3161, metadata !DIExpression()), !dbg !3164
  %14 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3165
  %flag = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %14, i32 0, i32 4, !dbg !3166
  %15 = load i16, i16* %flag, align 2, !dbg !3167
  %conv11 = sext i16 %15 to i32, !dbg !3167
  %and = and i32 %conv11, -5, !dbg !3167
  %conv12 = trunc i32 %and to i16, !dbg !3167
  store i16 %conv12, i16* %flag, align 2, !dbg !3167
  %16 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3168
  %type13 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %16, i32 0, i32 3, !dbg !3170
  %17 = load i16, i16* %type13, align 8, !dbg !3170
  %conv14 = sext i16 %17 to i32, !dbg !3168
  %cmp15 = icmp eq i32 %conv14, 3, !dbg !3171
  br i1 %cmp15, label %if.then17, label %if.else75, !dbg !3172

if.then17:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.bKinematicConstraint** %data, metadata !3173, metadata !DIExpression()), !dbg !3194
  %18 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3195
  %data18 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %18, i32 0, i32 2, !dbg !3196
  %19 = load i8*, i8** %data18, align 8, !dbg !3196
  %20 = bitcast i8* %19 to %struct.bKinematicConstraint*, !dbg !3195
  store %struct.bKinematicConstraint* %20, %struct.bKinematicConstraint** %data, align 8, !dbg !3194
  %21 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !3197
  %tar = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %21, i32 0, i32 0, !dbg !3199
  %22 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !3199
  %call19 = call zeroext i8 @BKE_object_exists_check(%struct.Object* %22), !dbg !3200
  %conv20 = zext i8 %call19 to i32, !dbg !3200
  %cmp21 = icmp eq i32 %conv20, 0, !dbg !3201
  br i1 %cmp21, label %if.then23, label %if.else28, !dbg !3202

if.then23:                                        ; preds = %if.then17
  %23 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !3203
  %tar24 = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %23, i32 0, i32 0, !dbg !3205
  store %struct.Object* null, %struct.Object** %tar24, align 8, !dbg !3206
  %24 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3207
  %flag25 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %24, i32 0, i32 4, !dbg !3208
  %25 = load i16, i16* %flag25, align 2, !dbg !3209
  %conv26 = sext i16 %25 to i32, !dbg !3209
  %or = or i32 %conv26, 4, !dbg !3209
  %conv27 = trunc i32 %or to i16, !dbg !3209
  store i16 %conv27, i16* %flag25, align 2, !dbg !3209
  br label %if.end43, !dbg !3210

if.else28:                                        ; preds = %if.then17
  %26 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !3211
  %tar29 = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %26, i32 0, i32 0, !dbg !3213
  %27 = load %struct.Object*, %struct.Object** %tar29, align 8, !dbg !3213
  %28 = load %struct.Object*, %struct.Object** %owner.addr, align 8, !dbg !3214
  %cmp30 = icmp eq %struct.Object* %27, %28, !dbg !3215
  br i1 %cmp30, label %if.then32, label %if.end42, !dbg !3216

if.then32:                                        ; preds = %if.else28
  %29 = load %struct.Object*, %struct.Object** %owner.addr, align 8, !dbg !3217
  %call33 = call %struct.bArmature* @BKE_armature_from_object(%struct.Object* %29), !dbg !3220
  %30 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !3221
  %subtarget = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %30, i32 0, i32 5, !dbg !3222
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !3221
  %call34 = call %struct.Bone* @BKE_armature_find_bone_name(%struct.bArmature* %call33, i8* %arraydecay), !dbg !3223
  %tobool35 = icmp ne %struct.Bone* %call34, null, !dbg !3223
  br i1 %tobool35, label %if.end41, label %if.then36, !dbg !3224

if.then36:                                        ; preds = %if.then32
  %31 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3225
  %flag37 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %31, i32 0, i32 4, !dbg !3227
  %32 = load i16, i16* %flag37, align 2, !dbg !3228
  %conv38 = sext i16 %32 to i32, !dbg !3228
  %or39 = or i32 %conv38, 4, !dbg !3228
  %conv40 = trunc i32 %or39 to i16, !dbg !3228
  store i16 %conv40, i16* %flag37, align 2, !dbg !3228
  br label %if.end41, !dbg !3229

if.end41:                                         ; preds = %if.then36, %if.then32
  br label %if.end42, !dbg !3230

if.end42:                                         ; preds = %if.end41, %if.else28
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then23
  %33 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !3231
  %poletar = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %33, i32 0, i32 6, !dbg !3233
  %34 = load %struct.Object*, %struct.Object** %poletar, align 8, !dbg !3233
  %tobool44 = icmp ne %struct.Object* %34, null, !dbg !3231
  br i1 %tobool44, label %if.then45, label %if.end74, !dbg !3234

if.then45:                                        ; preds = %if.end43
  %35 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !3235
  %poletar46 = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %35, i32 0, i32 6, !dbg !3238
  %36 = load %struct.Object*, %struct.Object** %poletar46, align 8, !dbg !3238
  %call47 = call zeroext i8 @BKE_object_exists_check(%struct.Object* %36), !dbg !3239
  %conv48 = zext i8 %call47 to i32, !dbg !3239
  %cmp49 = icmp eq i32 %conv48, 0, !dbg !3240
  br i1 %cmp49, label %if.then51, label %if.else57, !dbg !3241

if.then51:                                        ; preds = %if.then45
  %37 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !3242
  %poletar52 = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %37, i32 0, i32 6, !dbg !3244
  store %struct.Object* null, %struct.Object** %poletar52, align 8, !dbg !3245
  %38 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3246
  %flag53 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %38, i32 0, i32 4, !dbg !3247
  %39 = load i16, i16* %flag53, align 2, !dbg !3248
  %conv54 = sext i16 %39 to i32, !dbg !3248
  %or55 = or i32 %conv54, 4, !dbg !3248
  %conv56 = trunc i32 %or55 to i16, !dbg !3248
  store i16 %conv56, i16* %flag53, align 2, !dbg !3248
  br label %if.end73, !dbg !3249

if.else57:                                        ; preds = %if.then45
  %40 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !3250
  %poletar58 = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %40, i32 0, i32 6, !dbg !3252
  %41 = load %struct.Object*, %struct.Object** %poletar58, align 8, !dbg !3252
  %42 = load %struct.Object*, %struct.Object** %owner.addr, align 8, !dbg !3253
  %cmp59 = icmp eq %struct.Object* %41, %42, !dbg !3254
  br i1 %cmp59, label %if.then61, label %if.end72, !dbg !3255

if.then61:                                        ; preds = %if.else57
  %43 = load %struct.Object*, %struct.Object** %owner.addr, align 8, !dbg !3256
  %call62 = call %struct.bArmature* @BKE_armature_from_object(%struct.Object* %43), !dbg !3259
  %44 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !3260
  %polesubtarget = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %44, i32 0, i32 7, !dbg !3261
  %arraydecay63 = getelementptr inbounds [64 x i8], [64 x i8]* %polesubtarget, i64 0, i64 0, !dbg !3260
  %call64 = call %struct.Bone* @BKE_armature_find_bone_name(%struct.bArmature* %call62, i8* %arraydecay63), !dbg !3262
  %tobool65 = icmp ne %struct.Bone* %call64, null, !dbg !3262
  br i1 %tobool65, label %if.end71, label %if.then66, !dbg !3263

if.then66:                                        ; preds = %if.then61
  %45 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3264
  %flag67 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %45, i32 0, i32 4, !dbg !3266
  %46 = load i16, i16* %flag67, align 2, !dbg !3267
  %conv68 = sext i16 %46 to i32, !dbg !3267
  %or69 = or i32 %conv68, 4, !dbg !3267
  %conv70 = trunc i32 %or69 to i16, !dbg !3267
  store i16 %conv70, i16* %flag67, align 2, !dbg !3267
  br label %if.end71, !dbg !3268

if.end71:                                         ; preds = %if.then66, %if.then61
  br label %if.end72, !dbg !3269

if.end72:                                         ; preds = %if.end71, %if.else57
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then51
  br label %if.end74, !dbg !3270

if.end74:                                         ; preds = %if.end73, %if.end43
  %47 = load %struct.Object*, %struct.Object** %owner.addr, align 8, !dbg !3271
  %48 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3272
  call void @BIK_test_constraint(%struct.Object* %47, %struct.bConstraint* %48), !dbg !3273
  br label %for.inc468, !dbg !3274

if.else75:                                        ; preds = %for.body
  %49 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3275
  %type76 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %49, i32 0, i32 3, !dbg !3277
  %50 = load i16, i16* %type76, align 8, !dbg !3277
  %conv77 = sext i16 %50 to i32, !dbg !3275
  %cmp78 = icmp eq i32 %conv77, 25, !dbg !3278
  br i1 %cmp78, label %if.then80, label %if.else114, !dbg !3279

if.then80:                                        ; preds = %if.else75
  call void @llvm.dbg.declare(metadata %struct.bPivotConstraint** %data81, metadata !3280, metadata !DIExpression()), !dbg !3291
  %51 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3292
  %data82 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %51, i32 0, i32 2, !dbg !3293
  %52 = load i8*, i8** %data82, align 8, !dbg !3293
  %53 = bitcast i8* %52 to %struct.bPivotConstraint*, !dbg !3292
  store %struct.bPivotConstraint* %53, %struct.bPivotConstraint** %data81, align 8, !dbg !3291
  %54 = load %struct.bPivotConstraint*, %struct.bPivotConstraint** %data81, align 8, !dbg !3294
  %tar83 = getelementptr inbounds %struct.bPivotConstraint, %struct.bPivotConstraint* %54, i32 0, i32 0, !dbg !3296
  %55 = load %struct.Object*, %struct.Object** %tar83, align 8, !dbg !3296
  %tobool84 = icmp ne %struct.Object* %55, null, !dbg !3294
  br i1 %tobool84, label %land.lhs.true, label %if.else96, !dbg !3297

land.lhs.true:                                    ; preds = %if.then80
  %56 = load %struct.bPivotConstraint*, %struct.bPivotConstraint** %data81, align 8, !dbg !3298
  %tar85 = getelementptr inbounds %struct.bPivotConstraint, %struct.bPivotConstraint* %56, i32 0, i32 0, !dbg !3299
  %57 = load %struct.Object*, %struct.Object** %tar85, align 8, !dbg !3299
  %call86 = call zeroext i8 @BKE_object_exists_check(%struct.Object* %57), !dbg !3300
  %conv87 = zext i8 %call86 to i32, !dbg !3300
  %cmp88 = icmp eq i32 %conv87, 0, !dbg !3301
  br i1 %cmp88, label %if.then90, label %if.else96, !dbg !3302

if.then90:                                        ; preds = %land.lhs.true
  %58 = load %struct.bPivotConstraint*, %struct.bPivotConstraint** %data81, align 8, !dbg !3303
  %tar91 = getelementptr inbounds %struct.bPivotConstraint, %struct.bPivotConstraint* %58, i32 0, i32 0, !dbg !3305
  store %struct.Object* null, %struct.Object** %tar91, align 8, !dbg !3306
  %59 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3307
  %flag92 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %59, i32 0, i32 4, !dbg !3308
  %60 = load i16, i16* %flag92, align 2, !dbg !3309
  %conv93 = sext i16 %60 to i32, !dbg !3309
  %or94 = or i32 %conv93, 4, !dbg !3309
  %conv95 = trunc i32 %or94 to i16, !dbg !3309
  store i16 %conv95, i16* %flag92, align 2, !dbg !3309
  br label %if.end113, !dbg !3310

if.else96:                                        ; preds = %land.lhs.true, %if.then80
  %61 = load %struct.bPivotConstraint*, %struct.bPivotConstraint** %data81, align 8, !dbg !3311
  %tar97 = getelementptr inbounds %struct.bPivotConstraint, %struct.bPivotConstraint* %61, i32 0, i32 0, !dbg !3313
  %62 = load %struct.Object*, %struct.Object** %tar97, align 8, !dbg !3313
  %63 = load %struct.Object*, %struct.Object** %owner.addr, align 8, !dbg !3314
  %cmp98 = icmp eq %struct.Object* %62, %63, !dbg !3315
  br i1 %cmp98, label %if.then100, label %if.end112, !dbg !3316

if.then100:                                       ; preds = %if.else96
  %64 = load %struct.Object*, %struct.Object** %owner.addr, align 8, !dbg !3317
  %call101 = call %struct.bArmature* @BKE_armature_from_object(%struct.Object* %64), !dbg !3320
  %65 = load %struct.bPivotConstraint*, %struct.bPivotConstraint** %data81, align 8, !dbg !3321
  %subtarget102 = getelementptr inbounds %struct.bPivotConstraint, %struct.bPivotConstraint* %65, i32 0, i32 1, !dbg !3322
  %arraydecay103 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget102, i64 0, i64 0, !dbg !3321
  %call104 = call %struct.Bone* @BKE_armature_find_bone_name(%struct.bArmature* %call101, i8* %arraydecay103), !dbg !3323
  %tobool105 = icmp ne %struct.Bone* %call104, null, !dbg !3323
  br i1 %tobool105, label %if.end111, label %if.then106, !dbg !3324

if.then106:                                       ; preds = %if.then100
  %66 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3325
  %flag107 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %66, i32 0, i32 4, !dbg !3327
  %67 = load i16, i16* %flag107, align 2, !dbg !3328
  %conv108 = sext i16 %67 to i32, !dbg !3328
  %or109 = or i32 %conv108, 4, !dbg !3328
  %conv110 = trunc i32 %or109 to i16, !dbg !3328
  store i16 %conv110, i16* %flag107, align 2, !dbg !3328
  br label %if.end111, !dbg !3329

if.end111:                                        ; preds = %if.then106, %if.then100
  br label %if.end112, !dbg !3330

if.end112:                                        ; preds = %if.end111, %if.else96
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %if.then90
  br label %for.inc468, !dbg !3331

if.else114:                                       ; preds = %if.else75
  %68 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3332
  %type115 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %68, i32 0, i32 3, !dbg !3334
  %69 = load i16, i16* %type115, align 8, !dbg !3334
  %conv116 = sext i16 %69 to i32, !dbg !3332
  %cmp117 = icmp eq i32 %conv116, 12, !dbg !3335
  br i1 %cmp117, label %if.then119, label %if.else141, !dbg !3336

if.then119:                                       ; preds = %if.else114
  call void @llvm.dbg.declare(metadata %struct.bActionConstraint** %data120, metadata !3337, metadata !DIExpression()), !dbg !3353
  %70 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3354
  %data121 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %70, i32 0, i32 2, !dbg !3355
  %71 = load i8*, i8** %data121, align 8, !dbg !3355
  %72 = bitcast i8* %71 to %struct.bActionConstraint*, !dbg !3354
  store %struct.bActionConstraint* %72, %struct.bActionConstraint** %data120, align 8, !dbg !3353
  %73 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data120, align 8, !dbg !3356
  %act = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %73, i32 0, i32 8, !dbg !3358
  %74 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !3358
  %cmp122 = icmp eq %struct.bAction* %74, null, !dbg !3359
  br i1 %cmp122, label %if.then124, label %if.else129, !dbg !3360

if.then124:                                       ; preds = %if.then119
  %75 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3361
  %flag125 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %75, i32 0, i32 4, !dbg !3363
  %76 = load i16, i16* %flag125, align 2, !dbg !3364
  %conv126 = sext i16 %76 to i32, !dbg !3364
  %or127 = or i32 %conv126, 4, !dbg !3364
  %conv128 = trunc i32 %or127 to i16, !dbg !3364
  store i16 %conv128, i16* %flag125, align 2, !dbg !3364
  br label %if.end140, !dbg !3365

if.else129:                                       ; preds = %if.then119
  %77 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data120, align 8, !dbg !3366
  %act130 = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %77, i32 0, i32 8, !dbg !3368
  %78 = load %struct.bAction*, %struct.bAction** %act130, align 8, !dbg !3368
  %idroot = getelementptr inbounds %struct.bAction, %struct.bAction* %78, i32 0, i32 7, !dbg !3369
  %79 = load i32, i32* %idroot, align 8, !dbg !3369
  %cmp131 = icmp ne i32 %79, 16975, !dbg !3370
  br i1 %cmp131, label %if.then133, label %if.end139, !dbg !3371

if.then133:                                       ; preds = %if.else129
  %80 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data120, align 8, !dbg !3372
  %act134 = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %80, i32 0, i32 8, !dbg !3374
  store %struct.bAction* null, %struct.bAction** %act134, align 8, !dbg !3375
  %81 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3376
  %flag135 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %81, i32 0, i32 4, !dbg !3377
  %82 = load i16, i16* %flag135, align 2, !dbg !3378
  %conv136 = sext i16 %82 to i32, !dbg !3378
  %or137 = or i32 %conv136, 4, !dbg !3378
  %conv138 = trunc i32 %or137 to i16, !dbg !3378
  store i16 %conv138, i16* %flag135, align 2, !dbg !3378
  br label %if.end139, !dbg !3379

if.end139:                                        ; preds = %if.then133, %if.else129
  br label %if.end140

if.end140:                                        ; preds = %if.end139, %if.then124
  br label %if.end359, !dbg !3380

if.else141:                                       ; preds = %if.else114
  %83 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3381
  %type142 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %83, i32 0, i32 3, !dbg !3383
  %84 = load i16, i16* %type142, align 8, !dbg !3383
  %conv143 = sext i16 %84 to i32, !dbg !3381
  %cmp144 = icmp eq i32 %conv143, 4, !dbg !3384
  br i1 %cmp144, label %if.then146, label %if.else171, !dbg !3385

if.then146:                                       ; preds = %if.else141
  call void @llvm.dbg.declare(metadata %struct.bFollowPathConstraint** %data147, metadata !3386, metadata !DIExpression()), !dbg !3388
  %85 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3389
  %data148 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %85, i32 0, i32 2, !dbg !3390
  %86 = load i8*, i8** %data148, align 8, !dbg !3390
  %87 = bitcast i8* %86 to %struct.bFollowPathConstraint*, !dbg !3389
  store %struct.bFollowPathConstraint* %87, %struct.bFollowPathConstraint** %data147, align 8, !dbg !3388
  %88 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data147, align 8, !dbg !3391
  %upflag = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %88, i32 0, i32 5, !dbg !3393
  %89 = load i16, i16* %upflag, align 2, !dbg !3393
  %conv149 = sext i16 %89 to i32, !dbg !3391
  %90 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data147, align 8, !dbg !3394
  %trackflag = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %90, i32 0, i32 4, !dbg !3395
  %91 = load i16, i16* %trackflag, align 4, !dbg !3395
  %conv150 = sext i16 %91 to i32, !dbg !3394
  %cmp151 = icmp eq i32 %conv149, %conv150, !dbg !3396
  br i1 %cmp151, label %if.then153, label %if.end158, !dbg !3397

if.then153:                                       ; preds = %if.then146
  %92 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3398
  %flag154 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %92, i32 0, i32 4, !dbg !3399
  %93 = load i16, i16* %flag154, align 2, !dbg !3400
  %conv155 = sext i16 %93 to i32, !dbg !3400
  %or156 = or i32 %conv155, 4, !dbg !3400
  %conv157 = trunc i32 %or156 to i16, !dbg !3400
  store i16 %conv157, i16* %flag154, align 2, !dbg !3400
  br label %if.end158, !dbg !3398

if.end158:                                        ; preds = %if.then153, %if.then146
  %94 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data147, align 8, !dbg !3401
  %upflag159 = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %94, i32 0, i32 5, !dbg !3403
  %95 = load i16, i16* %upflag159, align 2, !dbg !3403
  %conv160 = sext i16 %95 to i32, !dbg !3401
  %add = add nsw i32 %conv160, 3, !dbg !3404
  %96 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data147, align 8, !dbg !3405
  %trackflag161 = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %96, i32 0, i32 4, !dbg !3406
  %97 = load i16, i16* %trackflag161, align 4, !dbg !3406
  %conv162 = sext i16 %97 to i32, !dbg !3405
  %cmp163 = icmp eq i32 %add, %conv162, !dbg !3407
  br i1 %cmp163, label %if.then165, label %if.end170, !dbg !3408

if.then165:                                       ; preds = %if.end158
  %98 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3409
  %flag166 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %98, i32 0, i32 4, !dbg !3410
  %99 = load i16, i16* %flag166, align 2, !dbg !3411
  %conv167 = sext i16 %99 to i32, !dbg !3411
  %or168 = or i32 %conv167, 4, !dbg !3411
  %conv169 = trunc i32 %or168 to i16, !dbg !3411
  store i16 %conv169, i16* %flag166, align 2, !dbg !3411
  br label %if.end170, !dbg !3409

if.end170:                                        ; preds = %if.then165, %if.end158
  br label %if.end358, !dbg !3412

if.else171:                                       ; preds = %if.else141
  %100 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3413
  %type172 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %100, i32 0, i32 3, !dbg !3415
  %101 = load i16, i16* %type172, align 8, !dbg !3415
  %conv173 = sext i16 %101 to i32, !dbg !3413
  %cmp174 = icmp eq i32 %conv173, 2, !dbg !3416
  br i1 %cmp174, label %if.then176, label %if.else198, !dbg !3417

if.then176:                                       ; preds = %if.else171
  call void @llvm.dbg.declare(metadata %struct.bTrackToConstraint** %data177, metadata !3418, metadata !DIExpression()), !dbg !3430
  %102 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3431
  %data178 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %102, i32 0, i32 2, !dbg !3432
  %103 = load i8*, i8** %data178, align 8, !dbg !3432
  %104 = bitcast i8* %103 to %struct.bTrackToConstraint*, !dbg !3431
  store %struct.bTrackToConstraint* %104, %struct.bTrackToConstraint** %data177, align 8, !dbg !3430
  %105 = load %struct.bTrackToConstraint*, %struct.bTrackToConstraint** %data177, align 8, !dbg !3433
  %reserved2 = getelementptr inbounds %struct.bTrackToConstraint, %struct.bTrackToConstraint* %105, i32 0, i32 2, !dbg !3435
  %106 = load i32, i32* %reserved2, align 4, !dbg !3435
  %107 = load %struct.bTrackToConstraint*, %struct.bTrackToConstraint** %data177, align 8, !dbg !3436
  %reserved1 = getelementptr inbounds %struct.bTrackToConstraint, %struct.bTrackToConstraint* %107, i32 0, i32 1, !dbg !3437
  %108 = load i32, i32* %reserved1, align 8, !dbg !3437
  %cmp179 = icmp eq i32 %106, %108, !dbg !3438
  br i1 %cmp179, label %if.then181, label %if.end186, !dbg !3439

if.then181:                                       ; preds = %if.then176
  %109 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3440
  %flag182 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %109, i32 0, i32 4, !dbg !3441
  %110 = load i16, i16* %flag182, align 2, !dbg !3442
  %conv183 = sext i16 %110 to i32, !dbg !3442
  %or184 = or i32 %conv183, 4, !dbg !3442
  %conv185 = trunc i32 %or184 to i16, !dbg !3442
  store i16 %conv185, i16* %flag182, align 2, !dbg !3442
  br label %if.end186, !dbg !3440

if.end186:                                        ; preds = %if.then181, %if.then176
  %111 = load %struct.bTrackToConstraint*, %struct.bTrackToConstraint** %data177, align 8, !dbg !3443
  %reserved2187 = getelementptr inbounds %struct.bTrackToConstraint, %struct.bTrackToConstraint* %111, i32 0, i32 2, !dbg !3445
  %112 = load i32, i32* %reserved2187, align 4, !dbg !3445
  %add188 = add nsw i32 %112, 3, !dbg !3446
  %113 = load %struct.bTrackToConstraint*, %struct.bTrackToConstraint** %data177, align 8, !dbg !3447
  %reserved1189 = getelementptr inbounds %struct.bTrackToConstraint, %struct.bTrackToConstraint* %113, i32 0, i32 1, !dbg !3448
  %114 = load i32, i32* %reserved1189, align 8, !dbg !3448
  %cmp190 = icmp eq i32 %add188, %114, !dbg !3449
  br i1 %cmp190, label %if.then192, label %if.end197, !dbg !3450

if.then192:                                       ; preds = %if.end186
  %115 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3451
  %flag193 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %115, i32 0, i32 4, !dbg !3452
  %116 = load i16, i16* %flag193, align 2, !dbg !3453
  %conv194 = sext i16 %116 to i32, !dbg !3453
  %or195 = or i32 %conv194, 4, !dbg !3453
  %conv196 = trunc i32 %or195 to i16, !dbg !3453
  store i16 %conv196, i16* %flag193, align 2, !dbg !3453
  br label %if.end197, !dbg !3451

if.end197:                                        ; preds = %if.then192, %if.end186
  br label %if.end357, !dbg !3454

if.else198:                                       ; preds = %if.else171
  %117 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3455
  %type199 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %117, i32 0, i32 3, !dbg !3457
  %118 = load i16, i16* %type199, align 8, !dbg !3457
  %conv200 = sext i16 %118 to i32, !dbg !3455
  %cmp201 = icmp eq i32 %conv200, 13, !dbg !3458
  br i1 %cmp201, label %if.then203, label %if.else226, !dbg !3459

if.then203:                                       ; preds = %if.else198
  call void @llvm.dbg.declare(metadata %struct.bLockTrackConstraint** %data204, metadata !3460, metadata !DIExpression()), !dbg !3470
  %119 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3471
  %data205 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %119, i32 0, i32 2, !dbg !3472
  %120 = load i8*, i8** %data205, align 8, !dbg !3472
  %121 = bitcast i8* %120 to %struct.bLockTrackConstraint*, !dbg !3471
  store %struct.bLockTrackConstraint* %121, %struct.bLockTrackConstraint** %data204, align 8, !dbg !3470
  %122 = load %struct.bLockTrackConstraint*, %struct.bLockTrackConstraint** %data204, align 8, !dbg !3473
  %lockflag = getelementptr inbounds %struct.bLockTrackConstraint, %struct.bLockTrackConstraint* %122, i32 0, i32 2, !dbg !3475
  %123 = load i32, i32* %lockflag, align 4, !dbg !3475
  %124 = load %struct.bLockTrackConstraint*, %struct.bLockTrackConstraint** %data204, align 8, !dbg !3476
  %trackflag206 = getelementptr inbounds %struct.bLockTrackConstraint, %struct.bLockTrackConstraint* %124, i32 0, i32 1, !dbg !3477
  %125 = load i32, i32* %trackflag206, align 8, !dbg !3477
  %cmp207 = icmp eq i32 %123, %125, !dbg !3478
  br i1 %cmp207, label %if.then209, label %if.end214, !dbg !3479

if.then209:                                       ; preds = %if.then203
  %126 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3480
  %flag210 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %126, i32 0, i32 4, !dbg !3481
  %127 = load i16, i16* %flag210, align 2, !dbg !3482
  %conv211 = sext i16 %127 to i32, !dbg !3482
  %or212 = or i32 %conv211, 4, !dbg !3482
  %conv213 = trunc i32 %or212 to i16, !dbg !3482
  store i16 %conv213, i16* %flag210, align 2, !dbg !3482
  br label %if.end214, !dbg !3480

if.end214:                                        ; preds = %if.then209, %if.then203
  %128 = load %struct.bLockTrackConstraint*, %struct.bLockTrackConstraint** %data204, align 8, !dbg !3483
  %lockflag215 = getelementptr inbounds %struct.bLockTrackConstraint, %struct.bLockTrackConstraint* %128, i32 0, i32 2, !dbg !3485
  %129 = load i32, i32* %lockflag215, align 4, !dbg !3485
  %add216 = add nsw i32 %129, 3, !dbg !3486
  %130 = load %struct.bLockTrackConstraint*, %struct.bLockTrackConstraint** %data204, align 8, !dbg !3487
  %trackflag217 = getelementptr inbounds %struct.bLockTrackConstraint, %struct.bLockTrackConstraint* %130, i32 0, i32 1, !dbg !3488
  %131 = load i32, i32* %trackflag217, align 8, !dbg !3488
  %cmp218 = icmp eq i32 %add216, %131, !dbg !3489
  br i1 %cmp218, label %if.then220, label %if.end225, !dbg !3490

if.then220:                                       ; preds = %if.end214
  %132 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3491
  %flag221 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %132, i32 0, i32 4, !dbg !3492
  %133 = load i16, i16* %flag221, align 2, !dbg !3493
  %conv222 = sext i16 %133 to i32, !dbg !3493
  %or223 = or i32 %conv222, 4, !dbg !3493
  %conv224 = trunc i32 %or223 to i16, !dbg !3493
  store i16 %conv224, i16* %flag221, align 2, !dbg !3493
  br label %if.end225, !dbg !3491

if.end225:                                        ; preds = %if.then220, %if.end214
  br label %if.end356, !dbg !3494

if.else226:                                       ; preds = %if.else198
  %134 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3495
  %type227 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %134, i32 0, i32 3, !dbg !3497
  %135 = load i16, i16* %type227, align 8, !dbg !3497
  %conv228 = sext i16 %135 to i32, !dbg !3495
  %cmp229 = icmp eq i32 %conv228, 22, !dbg !3498
  br i1 %cmp229, label %if.then231, label %if.else253, !dbg !3499

if.then231:                                       ; preds = %if.else226
  call void @llvm.dbg.declare(metadata %struct.bSplineIKConstraint** %data232, metadata !3500, metadata !DIExpression()), !dbg !3513
  %136 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3514
  %data233 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %136, i32 0, i32 2, !dbg !3515
  %137 = load i8*, i8** %data233, align 8, !dbg !3515
  %138 = bitcast i8* %137 to %struct.bSplineIKConstraint*, !dbg !3514
  store %struct.bSplineIKConstraint* %138, %struct.bSplineIKConstraint** %data232, align 8, !dbg !3513
  %139 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %data232, align 8, !dbg !3516
  %points = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %139, i32 0, i32 1, !dbg !3518
  %140 = load float*, float** %points, align 8, !dbg !3518
  %cmp234 = icmp eq float* %140, null, !dbg !3519
  br i1 %cmp234, label %if.then241, label %lor.lhs.false, !dbg !3520

lor.lhs.false:                                    ; preds = %if.then231
  %141 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %data232, align 8, !dbg !3521
  %numpoints = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %141, i32 0, i32 2, !dbg !3522
  %142 = load i16, i16* %numpoints, align 8, !dbg !3522
  %conv236 = sext i16 %142 to i32, !dbg !3521
  %143 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %data232, align 8, !dbg !3523
  %chainlen = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %143, i32 0, i32 3, !dbg !3524
  %144 = load i16, i16* %chainlen, align 2, !dbg !3524
  %conv237 = sext i16 %144 to i32, !dbg !3523
  %add238 = add nsw i32 %conv237, 1, !dbg !3525
  %cmp239 = icmp ne i32 %conv236, %add238, !dbg !3526
  br i1 %cmp239, label %if.then241, label %if.end252, !dbg !3527

if.then241:                                       ; preds = %lor.lhs.false, %if.then231
  %145 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %data232, align 8, !dbg !3528
  %points242 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %145, i32 0, i32 1, !dbg !3531
  %146 = load float*, float** %points242, align 8, !dbg !3531
  %tobool243 = icmp ne float* %146, null, !dbg !3528
  br i1 %tobool243, label %if.then244, label %if.end247, !dbg !3532

if.then244:                                       ; preds = %if.then241
  %147 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3533
  %148 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %data232, align 8, !dbg !3535
  %points245 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %148, i32 0, i32 1, !dbg !3536
  %149 = load float*, float** %points245, align 8, !dbg !3536
  %150 = bitcast float* %149 to i8*, !dbg !3535
  call void %147(i8* %150), !dbg !3533
  %151 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %data232, align 8, !dbg !3537
  %points246 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %151, i32 0, i32 1, !dbg !3538
  store float* null, float** %points246, align 8, !dbg !3539
  br label %if.end247, !dbg !3540

if.end247:                                        ; preds = %if.then244, %if.then241
  %152 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %data232, align 8, !dbg !3541
  %flag248 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %152, i32 0, i32 4, !dbg !3542
  %153 = load i16, i16* %flag248, align 4, !dbg !3543
  %conv249 = sext i16 %153 to i32, !dbg !3543
  %and250 = and i32 %conv249, -2, !dbg !3543
  %conv251 = trunc i32 %and250 to i16, !dbg !3543
  store i16 %conv251, i16* %flag248, align 4, !dbg !3543
  br label %if.end252, !dbg !3544

if.end252:                                        ; preds = %if.end247, %lor.lhs.false
  br label %if.end355, !dbg !3545

if.else253:                                       ; preds = %if.else226
  %154 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3546
  %type254 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %154, i32 0, i32 3, !dbg !3548
  %155 = load i16, i16* %type254, align 8, !dbg !3548
  %conv255 = sext i16 %155 to i32, !dbg !3546
  %cmp256 = icmp eq i32 %conv255, 26, !dbg !3549
  br i1 %cmp256, label %if.then258, label %if.else308, !dbg !3550

if.then258:                                       ; preds = %if.else253
  call void @llvm.dbg.declare(metadata %struct.bFollowTrackConstraint** %data259, metadata !3551, metadata !DIExpression()), !dbg !3564
  %156 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3565
  %data260 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %156, i32 0, i32 2, !dbg !3566
  %157 = load i8*, i8** %data260, align 8, !dbg !3566
  %158 = bitcast i8* %157 to %struct.bFollowTrackConstraint*, !dbg !3565
  store %struct.bFollowTrackConstraint* %158, %struct.bFollowTrackConstraint** %data259, align 8, !dbg !3564
  %159 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data259, align 8, !dbg !3567
  %flag261 = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %159, i32 0, i32 2, !dbg !3569
  %160 = load i32, i32* %flag261, align 8, !dbg !3569
  %and262 = and i32 %160, 1, !dbg !3570
  %cmp263 = icmp eq i32 %and262, 0, !dbg !3571
  br i1 %cmp263, label %if.then265, label %if.end307, !dbg !3572

if.then265:                                       ; preds = %if.then258
  %161 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data259, align 8, !dbg !3573
  %clip = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %161, i32 0, i32 0, !dbg !3576
  %162 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !3576
  %cmp266 = icmp ne %struct.MovieClip* %162, null, !dbg !3577
  br i1 %cmp266, label %land.lhs.true268, label %if.else301, !dbg !3578

land.lhs.true268:                                 ; preds = %if.then265
  %163 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data259, align 8, !dbg !3579
  %track = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %163, i32 0, i32 1, !dbg !3580
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %track, i64 0, i64 0, !dbg !3579
  %164 = load i8, i8* %arrayidx, align 8, !dbg !3579
  %conv269 = zext i8 %164 to i32, !dbg !3579
  %tobool270 = icmp ne i32 %conv269, 0, !dbg !3579
  br i1 %tobool270, label %if.then271, label %if.else301, !dbg !3581

if.then271:                                       ; preds = %land.lhs.true268
  call void @llvm.dbg.declare(metadata %struct.MovieTracking** %tracking, metadata !3582, metadata !DIExpression()), !dbg !3586
  %165 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data259, align 8, !dbg !3587
  %clip272 = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %165, i32 0, i32 0, !dbg !3588
  %166 = load %struct.MovieClip*, %struct.MovieClip** %clip272, align 8, !dbg !3588
  %tracking273 = getelementptr inbounds %struct.MovieClip, %struct.MovieClip* %166, i32 0, i32 11, !dbg !3589
  store %struct.MovieTracking* %tracking273, %struct.MovieTracking** %tracking, align 8, !dbg !3586
  call void @llvm.dbg.declare(metadata %struct.MovieTrackingObject** %tracking_object, metadata !3590, metadata !DIExpression()), !dbg !3606
  %167 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data259, align 8, !dbg !3607
  %object = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %167, i32 0, i32 4, !dbg !3609
  %arrayidx274 = getelementptr inbounds [64 x i8], [64 x i8]* %object, i64 0, i64 0, !dbg !3607
  %168 = load i8, i8* %arrayidx274, align 8, !dbg !3607
  %tobool275 = icmp ne i8 %168, 0, !dbg !3607
  br i1 %tobool275, label %if.then276, label %if.else280, !dbg !3610

if.then276:                                       ; preds = %if.then271
  %169 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !3611
  %170 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data259, align 8, !dbg !3612
  %object277 = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %170, i32 0, i32 4, !dbg !3613
  %arraydecay278 = getelementptr inbounds [64 x i8], [64 x i8]* %object277, i64 0, i64 0, !dbg !3612
  %call279 = call %struct.MovieTrackingObject* @BKE_tracking_object_get_named(%struct.MovieTracking* %169, i8* %arraydecay278), !dbg !3614
  store %struct.MovieTrackingObject* %call279, %struct.MovieTrackingObject** %tracking_object, align 8, !dbg !3615
  br label %if.end282, !dbg !3616

if.else280:                                       ; preds = %if.then271
  %171 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !3617
  %call281 = call %struct.MovieTrackingObject* @BKE_tracking_object_get_camera(%struct.MovieTracking* %171), !dbg !3618
  store %struct.MovieTrackingObject* %call281, %struct.MovieTrackingObject** %tracking_object, align 8, !dbg !3619
  br label %if.end282

if.end282:                                        ; preds = %if.else280, %if.then276
  %172 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %tracking_object, align 8, !dbg !3620
  %tobool283 = icmp ne %struct.MovieTrackingObject* %172, null, !dbg !3620
  br i1 %tobool283, label %if.else289, label %if.then284, !dbg !3622

if.then284:                                       ; preds = %if.end282
  %173 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3623
  %flag285 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %173, i32 0, i32 4, !dbg !3625
  %174 = load i16, i16* %flag285, align 2, !dbg !3626
  %conv286 = sext i16 %174 to i32, !dbg !3626
  %or287 = or i32 %conv286, 4, !dbg !3626
  %conv288 = trunc i32 %or287 to i16, !dbg !3626
  store i16 %conv288, i16* %flag285, align 2, !dbg !3626
  br label %if.end300, !dbg !3627

if.else289:                                       ; preds = %if.end282
  %175 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !3628
  %176 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %tracking_object, align 8, !dbg !3631
  %177 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data259, align 8, !dbg !3632
  %track290 = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %177, i32 0, i32 1, !dbg !3633
  %arraydecay291 = getelementptr inbounds [64 x i8], [64 x i8]* %track290, i64 0, i64 0, !dbg !3632
  %call292 = call %struct.MovieTrackingTrack* @BKE_tracking_track_get_named(%struct.MovieTracking* %175, %struct.MovieTrackingObject* %176, i8* %arraydecay291), !dbg !3634
  %tobool293 = icmp ne %struct.MovieTrackingTrack* %call292, null, !dbg !3634
  br i1 %tobool293, label %if.end299, label %if.then294, !dbg !3635

if.then294:                                       ; preds = %if.else289
  %178 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3636
  %flag295 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %178, i32 0, i32 4, !dbg !3637
  %179 = load i16, i16* %flag295, align 2, !dbg !3638
  %conv296 = sext i16 %179 to i32, !dbg !3638
  %or297 = or i32 %conv296, 4, !dbg !3638
  %conv298 = trunc i32 %or297 to i16, !dbg !3638
  store i16 %conv298, i16* %flag295, align 2, !dbg !3638
  br label %if.end299, !dbg !3636

if.end299:                                        ; preds = %if.then294, %if.else289
  br label %if.end300

if.end300:                                        ; preds = %if.end299, %if.then284
  br label %if.end306, !dbg !3639

if.else301:                                       ; preds = %land.lhs.true268, %if.then265
  %180 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3640
  %flag302 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %180, i32 0, i32 4, !dbg !3642
  %181 = load i16, i16* %flag302, align 2, !dbg !3643
  %conv303 = sext i16 %181 to i32, !dbg !3643
  %or304 = or i32 %conv303, 4, !dbg !3643
  %conv305 = trunc i32 %or304 to i16, !dbg !3643
  store i16 %conv305, i16* %flag302, align 2, !dbg !3643
  br label %if.end306

if.end306:                                        ; preds = %if.else301, %if.end300
  br label %if.end307, !dbg !3644

if.end307:                                        ; preds = %if.end306, %if.then258
  br label %if.end354, !dbg !3645

if.else308:                                       ; preds = %if.else253
  %182 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3646
  %type309 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %182, i32 0, i32 3, !dbg !3648
  %183 = load i16, i16* %type309, align 8, !dbg !3648
  %conv310 = sext i16 %183 to i32, !dbg !3646
  %cmp311 = icmp eq i32 %conv310, 27, !dbg !3649
  br i1 %cmp311, label %if.then313, label %if.else330, !dbg !3650

if.then313:                                       ; preds = %if.else308
  call void @llvm.dbg.declare(metadata %struct.bCameraSolverConstraint** %data314, metadata !3651, metadata !DIExpression()), !dbg !3660
  %184 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3661
  %data315 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %184, i32 0, i32 2, !dbg !3662
  %185 = load i8*, i8** %data315, align 8, !dbg !3662
  %186 = bitcast i8* %185 to %struct.bCameraSolverConstraint*, !dbg !3661
  store %struct.bCameraSolverConstraint* %186, %struct.bCameraSolverConstraint** %data314, align 8, !dbg !3660
  %187 = load %struct.bCameraSolverConstraint*, %struct.bCameraSolverConstraint** %data314, align 8, !dbg !3663
  %flag316 = getelementptr inbounds %struct.bCameraSolverConstraint, %struct.bCameraSolverConstraint* %187, i32 0, i32 1, !dbg !3665
  %188 = load i32, i32* %flag316, align 8, !dbg !3665
  %and317 = and i32 %188, 1, !dbg !3666
  %cmp318 = icmp eq i32 %and317, 0, !dbg !3667
  br i1 %cmp318, label %land.lhs.true320, label %if.end329, !dbg !3668

land.lhs.true320:                                 ; preds = %if.then313
  %189 = load %struct.bCameraSolverConstraint*, %struct.bCameraSolverConstraint** %data314, align 8, !dbg !3669
  %clip321 = getelementptr inbounds %struct.bCameraSolverConstraint, %struct.bCameraSolverConstraint* %189, i32 0, i32 0, !dbg !3670
  %190 = load %struct.MovieClip*, %struct.MovieClip** %clip321, align 8, !dbg !3670
  %cmp322 = icmp eq %struct.MovieClip* %190, null, !dbg !3671
  br i1 %cmp322, label %if.then324, label %if.end329, !dbg !3672

if.then324:                                       ; preds = %land.lhs.true320
  %191 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3673
  %flag325 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %191, i32 0, i32 4, !dbg !3674
  %192 = load i16, i16* %flag325, align 2, !dbg !3675
  %conv326 = sext i16 %192 to i32, !dbg !3675
  %or327 = or i32 %conv326, 4, !dbg !3675
  %conv328 = trunc i32 %or327 to i16, !dbg !3675
  store i16 %conv328, i16* %flag325, align 2, !dbg !3675
  br label %if.end329, !dbg !3673

if.end329:                                        ; preds = %if.then324, %land.lhs.true320, %if.then313
  br label %if.end353, !dbg !3676

if.else330:                                       ; preds = %if.else308
  %193 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3677
  %type331 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %193, i32 0, i32 3, !dbg !3679
  %194 = load i16, i16* %type331, align 8, !dbg !3679
  %conv332 = sext i16 %194 to i32, !dbg !3677
  %cmp333 = icmp eq i32 %conv332, 28, !dbg !3680
  br i1 %cmp333, label %if.then335, label %if.end352, !dbg !3681

if.then335:                                       ; preds = %if.else330
  call void @llvm.dbg.declare(metadata %struct.bObjectSolverConstraint** %data336, metadata !3682, metadata !DIExpression()), !dbg !3684
  %195 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3685
  %data337 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %195, i32 0, i32 2, !dbg !3686
  %196 = load i8*, i8** %data337, align 8, !dbg !3686
  %197 = bitcast i8* %196 to %struct.bObjectSolverConstraint*, !dbg !3685
  store %struct.bObjectSolverConstraint* %197, %struct.bObjectSolverConstraint** %data336, align 8, !dbg !3684
  %198 = load %struct.bObjectSolverConstraint*, %struct.bObjectSolverConstraint** %data336, align 8, !dbg !3687
  %flag338 = getelementptr inbounds %struct.bObjectSolverConstraint, %struct.bObjectSolverConstraint* %198, i32 0, i32 1, !dbg !3689
  %199 = load i32, i32* %flag338, align 8, !dbg !3689
  %and339 = and i32 %199, 1, !dbg !3690
  %cmp340 = icmp eq i32 %and339, 0, !dbg !3691
  br i1 %cmp340, label %land.lhs.true342, label %if.end351, !dbg !3692

land.lhs.true342:                                 ; preds = %if.then335
  %200 = load %struct.bObjectSolverConstraint*, %struct.bObjectSolverConstraint** %data336, align 8, !dbg !3693
  %clip343 = getelementptr inbounds %struct.bObjectSolverConstraint, %struct.bObjectSolverConstraint* %200, i32 0, i32 0, !dbg !3694
  %201 = load %struct.MovieClip*, %struct.MovieClip** %clip343, align 8, !dbg !3694
  %cmp344 = icmp eq %struct.MovieClip* %201, null, !dbg !3695
  br i1 %cmp344, label %if.then346, label %if.end351, !dbg !3696

if.then346:                                       ; preds = %land.lhs.true342
  %202 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3697
  %flag347 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %202, i32 0, i32 4, !dbg !3698
  %203 = load i16, i16* %flag347, align 2, !dbg !3699
  %conv348 = sext i16 %203 to i32, !dbg !3699
  %or349 = or i32 %conv348, 4, !dbg !3699
  %conv350 = trunc i32 %or349 to i16, !dbg !3699
  store i16 %conv350, i16* %flag347, align 2, !dbg !3699
  br label %if.end351, !dbg !3697

if.end351:                                        ; preds = %if.then346, %land.lhs.true342, %if.then335
  br label %if.end352, !dbg !3700

if.end352:                                        ; preds = %if.end351, %if.else330
  br label %if.end353

if.end353:                                        ; preds = %if.end352, %if.end329
  br label %if.end354

if.end354:                                        ; preds = %if.end353, %if.end307
  br label %if.end355

if.end355:                                        ; preds = %if.end354, %if.end252
  br label %if.end356

if.end356:                                        ; preds = %if.end355, %if.end225
  br label %if.end357

if.end357:                                        ; preds = %if.end356, %if.end197
  br label %if.end358

if.end358:                                        ; preds = %if.end357, %if.end170
  br label %if.end359

if.end359:                                        ; preds = %if.end358, %if.end140
  br label %if.end360

if.end360:                                        ; preds = %if.end359
  br label %if.end361

if.end361:                                        ; preds = %if.end360
  %204 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3701
  %tobool362 = icmp ne %struct.bConstraintTypeInfo* %204, null, !dbg !3701
  br i1 %tobool362, label %land.lhs.true363, label %if.end467, !dbg !3703

land.lhs.true363:                                 ; preds = %if.end361
  %205 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3704
  %get_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %205, i32 0, i32 8, !dbg !3705
  %206 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets, align 8, !dbg !3705
  %tobool364 = icmp ne i32 (%struct.bConstraint*, %struct.ListBase*)* %206, null, !dbg !3704
  br i1 %tobool364, label %if.then365, label %if.end467, !dbg !3706

if.then365:                                       ; preds = %land.lhs.true363
  %207 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3707
  %get_constraint_targets366 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %207, i32 0, i32 8, !dbg !3709
  %208 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets366, align 8, !dbg !3709
  %209 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3710
  %call367 = call i32 %208(%struct.bConstraint* %209, %struct.ListBase* %targets), !dbg !3707
  %first368 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets, i32 0, i32 0, !dbg !3711
  %210 = load i8*, i8** %first368, align 8, !dbg !3711
  %211 = bitcast i8* %210 to %struct.bConstraintTarget*, !dbg !3713
  store %struct.bConstraintTarget* %211, %struct.bConstraintTarget** %ct, align 8, !dbg !3714
  br label %for.cond369, !dbg !3715

for.cond369:                                      ; preds = %for.inc, %if.then365
  %212 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !3716
  %tobool370 = icmp ne %struct.bConstraintTarget* %212, null, !dbg !3718
  br i1 %tobool370, label %for.body371, label %for.end, !dbg !3718

for.body371:                                      ; preds = %for.cond369
  %213 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !3719
  %tar372 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %213, i32 0, i32 2, !dbg !3722
  %214 = load %struct.Object*, %struct.Object** %tar372, align 8, !dbg !3722
  %call373 = call zeroext i8 @BKE_object_exists_check(%struct.Object* %214), !dbg !3723
  %conv374 = zext i8 %call373 to i32, !dbg !3723
  %cmp375 = icmp eq i32 %conv374, 0, !dbg !3724
  br i1 %cmp375, label %if.then377, label %if.else383, !dbg !3725

if.then377:                                       ; preds = %for.body371
  %215 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !3726
  %tar378 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %215, i32 0, i32 2, !dbg !3728
  store %struct.Object* null, %struct.Object** %tar378, align 8, !dbg !3729
  %216 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3730
  %flag379 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %216, i32 0, i32 4, !dbg !3731
  %217 = load i16, i16* %flag379, align 2, !dbg !3732
  %conv380 = sext i16 %217 to i32, !dbg !3732
  %or381 = or i32 %conv380, 4, !dbg !3732
  %conv382 = trunc i32 %or381 to i16, !dbg !3732
  store i16 %conv382, i16* %flag379, align 2, !dbg !3732
  br label %if.end425, !dbg !3733

if.else383:                                       ; preds = %for.body371
  %218 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !3734
  %tar384 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %218, i32 0, i32 2, !dbg !3736
  %219 = load %struct.Object*, %struct.Object** %tar384, align 8, !dbg !3736
  %220 = load %struct.Object*, %struct.Object** %owner.addr, align 8, !dbg !3737
  %cmp385 = icmp eq %struct.Object* %219, %220, !dbg !3738
  br i1 %cmp385, label %if.then387, label %if.end424, !dbg !3739

if.then387:                                       ; preds = %if.else383
  %221 = load i32, i32* %type, align 4, !dbg !3740
  %cmp388 = icmp eq i32 %221, 2, !dbg !3743
  br i1 %cmp388, label %if.then390, label %if.else417, !dbg !3744

if.then390:                                       ; preds = %if.then387
  %222 = load %struct.Object*, %struct.Object** %owner.addr, align 8, !dbg !3745
  %call391 = call %struct.bArmature* @BKE_armature_from_object(%struct.Object* %222), !dbg !3748
  %223 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !3749
  %subtarget392 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %223, i32 0, i32 3, !dbg !3750
  %arraydecay393 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget392, i64 0, i64 0, !dbg !3749
  %call394 = call %struct.Bone* @BKE_armature_find_bone_name(%struct.bArmature* %call391, i8* %arraydecay393), !dbg !3751
  %tobool395 = icmp ne %struct.Bone* %call394, null, !dbg !3751
  br i1 %tobool395, label %if.else401, label %if.then396, !dbg !3752

if.then396:                                       ; preds = %if.then390
  %224 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3753
  %flag397 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %224, i32 0, i32 4, !dbg !3755
  %225 = load i16, i16* %flag397, align 2, !dbg !3756
  %conv398 = sext i16 %225 to i32, !dbg !3756
  %or399 = or i32 %conv398, 4, !dbg !3756
  %conv400 = trunc i32 %or399 to i16, !dbg !3756
  store i16 %conv400, i16* %flag397, align 2, !dbg !3756
  br label %if.end416, !dbg !3757

if.else401:                                       ; preds = %if.then390
  %226 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !3758
  %name = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %226, i32 0, i32 4, !dbg !3760
  %arraydecay402 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !3758
  %227 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !3761
  %subtarget403 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %227, i32 0, i32 3, !dbg !3762
  %arraydecay404 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget403, i64 0, i64 0, !dbg !3761
  %call405 = call i32 @strcmp(i8* %arraydecay402, i8* %arraydecay404) #6, !dbg !3763
  %cmp406 = icmp eq i32 %call405, 0, !dbg !3764
  br i1 %cmp406, label %if.then408, label %if.end415, !dbg !3765

if.then408:                                       ; preds = %if.else401
  %228 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !3766
  %subtarget409 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %228, i32 0, i32 3, !dbg !3768
  %arrayidx410 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget409, i64 0, i64 0, !dbg !3766
  store i8 0, i8* %arrayidx410, align 8, !dbg !3769
  %229 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3770
  %flag411 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %229, i32 0, i32 4, !dbg !3771
  %230 = load i16, i16* %flag411, align 2, !dbg !3772
  %conv412 = sext i16 %230 to i32, !dbg !3772
  %or413 = or i32 %conv412, 4, !dbg !3772
  %conv414 = trunc i32 %or413 to i16, !dbg !3772
  store i16 %conv414, i16* %flag411, align 2, !dbg !3772
  br label %if.end415, !dbg !3773

if.end415:                                        ; preds = %if.then408, %if.else401
  br label %if.end416

if.end416:                                        ; preds = %if.end415, %if.then396
  br label %if.end423, !dbg !3774

if.else417:                                       ; preds = %if.then387
  %231 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !3775
  %tar418 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %231, i32 0, i32 2, !dbg !3777
  store %struct.Object* null, %struct.Object** %tar418, align 8, !dbg !3778
  %232 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3779
  %flag419 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %232, i32 0, i32 4, !dbg !3780
  %233 = load i16, i16* %flag419, align 2, !dbg !3781
  %conv420 = sext i16 %233 to i32, !dbg !3781
  %or421 = or i32 %conv420, 4, !dbg !3781
  %conv422 = trunc i32 %or421 to i16, !dbg !3781
  store i16 %conv422, i16* %flag419, align 2, !dbg !3781
  br label %if.end423

if.end423:                                        ; preds = %if.else417, %if.end416
  br label %if.end424, !dbg !3782

if.end424:                                        ; preds = %if.end423, %if.else383
  br label %if.end425

if.end425:                                        ; preds = %if.end424, %if.then377
  %234 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3783
  %type426 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %234, i32 0, i32 3, !dbg !3783
  %235 = load i16, i16* %type426, align 8, !dbg !3783
  %conv427 = sext i16 %235 to i32, !dbg !3783
  %cmp428 = icmp eq i32 %conv427, 4, !dbg !3783
  br i1 %cmp428, label %if.then440, label %lor.lhs.false430, !dbg !3783

lor.lhs.false430:                                 ; preds = %if.end425
  %236 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3783
  %type431 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %236, i32 0, i32 3, !dbg !3783
  %237 = load i16, i16* %type431, align 8, !dbg !3783
  %conv432 = sext i16 %237 to i32, !dbg !3783
  %cmp433 = icmp eq i32 %conv432, 18, !dbg !3783
  br i1 %cmp433, label %if.then440, label %lor.lhs.false435, !dbg !3783

lor.lhs.false435:                                 ; preds = %lor.lhs.false430
  %238 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3783
  %type436 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %238, i32 0, i32 3, !dbg !3783
  %239 = load i16, i16* %type436, align 8, !dbg !3783
  %conv437 = sext i16 %239 to i32, !dbg !3783
  %cmp438 = icmp eq i32 %conv437, 22, !dbg !3783
  br i1 %cmp438, label %if.then440, label %if.end462, !dbg !3785

if.then440:                                       ; preds = %lor.lhs.false435, %lor.lhs.false430, %if.end425
  %240 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !3786
  %tar441 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %240, i32 0, i32 2, !dbg !3789
  %241 = load %struct.Object*, %struct.Object** %tar441, align 8, !dbg !3789
  %tobool442 = icmp ne %struct.Object* %241, null, !dbg !3786
  br i1 %tobool442, label %if.then443, label %if.end461, !dbg !3790

if.then443:                                       ; preds = %if.then440
  %242 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !3791
  %tar444 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %242, i32 0, i32 2, !dbg !3794
  %243 = load %struct.Object*, %struct.Object** %tar444, align 8, !dbg !3794
  %type445 = getelementptr inbounds %struct.Object, %struct.Object* %243, i32 0, i32 3, !dbg !3795
  %244 = load i16, i16* %type445, align 8, !dbg !3795
  %conv446 = sext i16 %244 to i32, !dbg !3791
  %cmp447 = icmp ne i32 %conv446, 2, !dbg !3796
  br i1 %cmp447, label %if.then449, label %if.else455, !dbg !3797

if.then449:                                       ; preds = %if.then443
  %245 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !3798
  %tar450 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %245, i32 0, i32 2, !dbg !3800
  store %struct.Object* null, %struct.Object** %tar450, align 8, !dbg !3801
  %246 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3802
  %flag451 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %246, i32 0, i32 4, !dbg !3803
  %247 = load i16, i16* %flag451, align 2, !dbg !3804
  %conv452 = sext i16 %247 to i32, !dbg !3804
  %or453 = or i32 %conv452, 4, !dbg !3804
  %conv454 = trunc i32 %or453 to i16, !dbg !3804
  store i16 %conv454, i16* %flag451, align 2, !dbg !3804
  br label %if.end460, !dbg !3805

if.else455:                                       ; preds = %if.then443
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !3806, metadata !DIExpression()), !dbg !3808
  %248 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !3809
  %tar456 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %248, i32 0, i32 2, !dbg !3810
  %249 = load %struct.Object*, %struct.Object** %tar456, align 8, !dbg !3810
  %data457 = getelementptr inbounds %struct.Object, %struct.Object* %249, i32 0, i32 19, !dbg !3811
  %250 = load i8*, i8** %data457, align 8, !dbg !3811
  %251 = bitcast i8* %250 to %struct.Curve*, !dbg !3809
  store %struct.Curve* %251, %struct.Curve** %cu, align 8, !dbg !3808
  %252 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3812
  %flag458 = getelementptr inbounds %struct.Curve, %struct.Curve* %252, i32 0, i32 23, !dbg !3813
  %253 = load i32, i32* %flag458, align 4, !dbg !3814
  %or459 = or i32 %253, 8, !dbg !3814
  store i32 %or459, i32* %flag458, align 4, !dbg !3814
  br label %if.end460

if.end460:                                        ; preds = %if.else455, %if.then449
  br label %if.end461, !dbg !3815

if.end461:                                        ; preds = %if.end460, %if.then440
  br label %if.end462, !dbg !3816

if.end462:                                        ; preds = %if.end461, %lor.lhs.false435
  br label %for.inc, !dbg !3817

for.inc:                                          ; preds = %if.end462
  %254 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !3818
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %254, i32 0, i32 0, !dbg !3819
  %255 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !3819
  store %struct.bConstraintTarget* %255, %struct.bConstraintTarget** %ct, align 8, !dbg !3820
  br label %for.cond369, !dbg !3821, !llvm.loop !3822

for.end:                                          ; preds = %for.cond369
  %256 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3824
  %flush_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %256, i32 0, i32 9, !dbg !3826
  %257 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets, align 8, !dbg !3826
  %tobool463 = icmp ne void (%struct.bConstraint*, %struct.ListBase*, i8)* %257, null, !dbg !3824
  br i1 %tobool463, label %if.then464, label %if.end466, !dbg !3827

if.then464:                                       ; preds = %for.end
  %258 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3828
  %flush_constraint_targets465 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %258, i32 0, i32 9, !dbg !3829
  %259 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets465, align 8, !dbg !3829
  %260 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3830
  call void %259(%struct.bConstraint* %260, %struct.ListBase* %targets, i8 zeroext 0), !dbg !3828
  br label %if.end466, !dbg !3828

if.end466:                                        ; preds = %if.then464, %for.end
  br label %if.end467, !dbg !3831

if.end467:                                        ; preds = %if.end466, %land.lhs.true363, %if.end361
  br label %for.inc468, !dbg !3832

for.inc468:                                       ; preds = %if.end467, %if.end113, %if.end74
  %261 = load %struct.bConstraint*, %struct.bConstraint** %curcon, align 8, !dbg !3833
  %next469 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %261, i32 0, i32 0, !dbg !3834
  %262 = load %struct.bConstraint*, %struct.bConstraint** %next469, align 8, !dbg !3834
  store %struct.bConstraint* %262, %struct.bConstraint** %curcon, align 8, !dbg !3835
  br label %for.cond, !dbg !3836, !llvm.loop !3837

for.end470:                                       ; preds = %for.cond
  br label %if.end471, !dbg !3839

if.end471:                                        ; preds = %if.then, %for.end470, %sw.epilog7
  ret void, !dbg !3840
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CONSTRAINT_OT_stretchto_reset(%struct.wmOperatorType* %ot) #0 !dbg !3841 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4102, metadata !DIExpression()), !dbg !4103
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4104
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4105
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8** %name, align 8, !dbg !4106
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4107
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4108
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8** %idname, align 8, !dbg !4109
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4110
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4111
  store i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.2, i64 0, i64 0), i8** %description, align 8, !dbg !4112
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4113
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !4114
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @stretchto_reset_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4115
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4116
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !4117
  store i32 (%struct.bContext*, %struct.wmOperator*)* @stretchto_reset_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4118
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4119
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !4120
  store i32 (%struct.bContext*)* @edit_constraint_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4121
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4122
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !4123
  store i16 3, i16* %flag, align 8, !dbg !4124
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4125
  call void @edit_constraint_properties(%struct.wmOperatorType* %7), !dbg !4126
  ret void, !dbg !4127
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @stretchto_reset_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !4128 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4138, metadata !DIExpression()), !dbg !4139
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4140, metadata !DIExpression()), !dbg !4141
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !4142, metadata !DIExpression()), !dbg !4143
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4144
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4146
  %call = call i32 @edit_constraint_invoke_properties(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !4147
  %tobool = icmp ne i32 %call, 0, !dbg !4147
  br i1 %tobool, label %if.then, label %if.else, !dbg !4148

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4149
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4150
  %call1 = call i32 @stretchto_reset_exec(%struct.bContext* %2, %struct.wmOperator* %3), !dbg !4151
  store i32 %call1, i32* %retval, align 4, !dbg !4152
  br label %return, !dbg !4152

if.else:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !4153
  br label %return, !dbg !4153

return:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !4154
  ret i32 %4, !dbg !4154
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @stretchto_reset_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4155 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %data = alloca %struct.bStretchToConstraint*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4158, metadata !DIExpression()), !dbg !4159
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4160, metadata !DIExpression()), !dbg !4161
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !4162, metadata !DIExpression()), !dbg !4163
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4164
  %call = call %struct.Object* @ED_object_active_context(%struct.bContext* %0), !dbg !4165
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !4163
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !4166, metadata !DIExpression()), !dbg !4167
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4168
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4169
  %call1 = call %struct.bConstraint* @edit_constraint_property_get(%struct.wmOperator* %1, %struct.Object* %2, i32 15), !dbg !4170
  store %struct.bConstraint* %call1, %struct.bConstraint** %con, align 8, !dbg !4167
  call void @llvm.dbg.declare(metadata %struct.bStretchToConstraint** %data, metadata !4171, metadata !DIExpression()), !dbg !4172
  %3 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4173
  %tobool = icmp ne %struct.bConstraint* %3, null, !dbg !4174
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4174

cond.true:                                        ; preds = %entry
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4175
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %4, i32 0, i32 2, !dbg !4176
  %5 = load i8*, i8** %data2, align 8, !dbg !4176
  %6 = bitcast i8* %5 to %struct.bStretchToConstraint*, !dbg !4177
  br label %cond.end, !dbg !4174

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4174

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bStretchToConstraint* [ %6, %cond.true ], [ null, %cond.false ], !dbg !4174
  store %struct.bStretchToConstraint* %cond, %struct.bStretchToConstraint** %data, align 8, !dbg !4172
  %7 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !4178
  %cmp = icmp eq %struct.bStretchToConstraint* %7, null, !dbg !4180
  br i1 %cmp, label %if.then, label %if.end, !dbg !4181

if.then:                                          ; preds = %cond.end
  store i32 2, i32* %retval, align 4, !dbg !4182
  br label %return, !dbg !4182

if.end:                                           ; preds = %cond.end
  %8 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !4183
  %orglength = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %8, i32 0, i32 4, !dbg !4184
  store float 0.000000e+00, float* %orglength, align 4, !dbg !4185
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4186
  call void @ED_object_constraint_update(%struct.Object* %9), !dbg !4187
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4188
  call void @WM_event_add_notifier(%struct.bContext* %10, i32 85590016, i8* null), !dbg !4189
  store i32 4, i32* %retval, align 4, !dbg !4190
  br label %return, !dbg !4190

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !4191
  ret i32 %11, !dbg !4191
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edit_constraint_poll(%struct.bContext* %C) #0 !dbg !4192 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4195, metadata !DIExpression()), !dbg !4196
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4197
  %call = call i32 @edit_constraint_poll_generic(%struct.bContext* %0, %struct.StructRNA* @RNA_Constraint), !dbg !4198
  ret i32 %call, !dbg !4199
}

; Function Attrs: noinline nounwind uwtable
define internal void @edit_constraint_properties(%struct.wmOperatorType* %ot) #0 !dbg !4200 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4201, metadata !DIExpression()), !dbg !4202
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4203
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 11, !dbg !4204
  %1 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4204
  %2 = bitcast %struct.StructRNA* %1 to i8*, !dbg !4203
  %call = call %struct.PropertyRNA* @RNA_def_string(i8* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.68, i64 0, i64 0), i8* null, i32 64, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.74, i64 0, i64 0)), !dbg !4205
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4206
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 11, !dbg !4207
  %4 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !4207
  %5 = bitcast %struct.StructRNA* %4 to i8*, !dbg !4206
  %call2 = call %struct.PropertyRNA* @RNA_def_enum(i8* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @constraint_owner_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.76, i64 0, i64 0)), !dbg !4208
  ret void, !dbg !4209
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CONSTRAINT_OT_limitdistance_reset(%struct.wmOperatorType* %ot) #0 !dbg !4210 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4211, metadata !DIExpression()), !dbg !4212
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4213
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4214
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i8** %name, align 8, !dbg !4215
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4216
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4217
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i8** %idname, align 8, !dbg !4218
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4219
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4220
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.5, i64 0, i64 0), i8** %description, align 8, !dbg !4221
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4222
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !4223
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @limitdistance_reset_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4224
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4225
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !4226
  store i32 (%struct.bContext*, %struct.wmOperator*)* @limitdistance_reset_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4227
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4228
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !4229
  store i32 (%struct.bContext*)* @edit_constraint_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4230
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4231
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !4232
  store i16 3, i16* %flag, align 8, !dbg !4233
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4234
  call void @edit_constraint_properties(%struct.wmOperatorType* %7), !dbg !4235
  ret void, !dbg !4236
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @limitdistance_reset_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !4237 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4238, metadata !DIExpression()), !dbg !4239
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4240, metadata !DIExpression()), !dbg !4241
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !4242, metadata !DIExpression()), !dbg !4243
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4244
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4246
  %call = call i32 @edit_constraint_invoke_properties(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !4247
  %tobool = icmp ne i32 %call, 0, !dbg !4247
  br i1 %tobool, label %if.then, label %if.else, !dbg !4248

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4249
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4250
  %call1 = call i32 @limitdistance_reset_exec(%struct.bContext* %2, %struct.wmOperator* %3), !dbg !4251
  store i32 %call1, i32* %retval, align 4, !dbg !4252
  br label %return, !dbg !4252

if.else:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !4253
  br label %return, !dbg !4253

return:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !4254
  ret i32 %4, !dbg !4254
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @limitdistance_reset_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4255 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %data = alloca %struct.bDistLimitConstraint*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4256, metadata !DIExpression()), !dbg !4257
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4258, metadata !DIExpression()), !dbg !4259
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !4260, metadata !DIExpression()), !dbg !4261
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4262
  %call = call %struct.Object* @ED_object_active_context(%struct.bContext* %0), !dbg !4263
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !4261
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !4264, metadata !DIExpression()), !dbg !4265
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4266
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4267
  %call1 = call %struct.bConstraint* @edit_constraint_property_get(%struct.wmOperator* %1, %struct.Object* %2, i32 14), !dbg !4268
  store %struct.bConstraint* %call1, %struct.bConstraint** %con, align 8, !dbg !4265
  call void @llvm.dbg.declare(metadata %struct.bDistLimitConstraint** %data, metadata !4269, metadata !DIExpression()), !dbg !4270
  %3 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4271
  %tobool = icmp ne %struct.bConstraint* %3, null, !dbg !4272
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4272

cond.true:                                        ; preds = %entry
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4273
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %4, i32 0, i32 2, !dbg !4274
  %5 = load i8*, i8** %data2, align 8, !dbg !4274
  %6 = bitcast i8* %5 to %struct.bDistLimitConstraint*, !dbg !4275
  br label %cond.end, !dbg !4272

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4272

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bDistLimitConstraint* [ %6, %cond.true ], [ null, %cond.false ], !dbg !4272
  store %struct.bDistLimitConstraint* %cond, %struct.bDistLimitConstraint** %data, align 8, !dbg !4270
  %7 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !4276
  %cmp = icmp eq %struct.bDistLimitConstraint* %7, null, !dbg !4278
  br i1 %cmp, label %if.then, label %if.end, !dbg !4279

if.then:                                          ; preds = %cond.end
  store i32 2, i32* %retval, align 4, !dbg !4280
  br label %return, !dbg !4280

if.end:                                           ; preds = %cond.end
  %8 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !4281
  %dist = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %8, i32 0, i32 2, !dbg !4282
  store float 0.000000e+00, float* %dist, align 8, !dbg !4283
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4284
  call void @ED_object_constraint_update(%struct.Object* %9), !dbg !4285
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4286
  call void @WM_event_add_notifier(%struct.bContext* %10, i32 85590016, i8* null), !dbg !4287
  store i32 4, i32* %retval, align 4, !dbg !4288
  br label %return, !dbg !4288

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !4289
  ret i32 %11, !dbg !4289
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CONSTRAINT_OT_childof_set_inverse(%struct.wmOperatorType* %ot) #0 !dbg !4290 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4291, metadata !DIExpression()), !dbg !4292
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4293
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4294
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i8** %name, align 8, !dbg !4295
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4296
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4297
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0), i8** %idname, align 8, !dbg !4298
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4299
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4300
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.8, i64 0, i64 0), i8** %description, align 8, !dbg !4301
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4302
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !4303
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @childof_set_inverse_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4304
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4305
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !4306
  store i32 (%struct.bContext*, %struct.wmOperator*)* @childof_set_inverse_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4307
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4308
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !4309
  store i32 (%struct.bContext*)* @edit_constraint_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4310
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4311
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !4312
  store i16 3, i16* %flag, align 8, !dbg !4313
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4314
  call void @edit_constraint_properties(%struct.wmOperatorType* %7), !dbg !4315
  ret void, !dbg !4316
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @childof_set_inverse_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !4317 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4318, metadata !DIExpression()), !dbg !4319
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4320, metadata !DIExpression()), !dbg !4321
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !4322, metadata !DIExpression()), !dbg !4323
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4324
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4326
  %call = call i32 @edit_constraint_invoke_properties(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !4327
  %tobool = icmp ne i32 %call, 0, !dbg !4327
  br i1 %tobool, label %if.then, label %if.else, !dbg !4328

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4329
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4330
  %call1 = call i32 @childof_set_inverse_exec(%struct.bContext* %2, %struct.wmOperator* %3), !dbg !4331
  store i32 %call1, i32* %retval, align 4, !dbg !4332
  br label %return, !dbg !4332

if.else:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !4333
  br label %return, !dbg !4333

return:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !4334
  ret i32 %4, !dbg !4334
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @childof_set_inverse_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4335 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ob = alloca %struct.Object*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %data = alloca %struct.bChildOfConstraint*, align 8
  %owner = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4336, metadata !DIExpression()), !dbg !4337
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4338, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !4340, metadata !DIExpression()), !dbg !4343
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4344
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !4345
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !4343
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !4346, metadata !DIExpression()), !dbg !4347
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4348
  %call1 = call %struct.Object* @ED_object_active_context(%struct.bContext* %1), !dbg !4349
  store %struct.Object* %call1, %struct.Object** %ob, align 8, !dbg !4347
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !4350, metadata !DIExpression()), !dbg !4351
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4352
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4353
  %call2 = call %struct.bConstraint* @edit_constraint_property_get(%struct.wmOperator* %2, %struct.Object* %3, i32 1), !dbg !4354
  store %struct.bConstraint* %call2, %struct.bConstraint** %con, align 8, !dbg !4351
  call void @llvm.dbg.declare(metadata %struct.bChildOfConstraint** %data, metadata !4355, metadata !DIExpression()), !dbg !4356
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4357
  %tobool = icmp ne %struct.bConstraint* %4, null, !dbg !4358
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4358

cond.true:                                        ; preds = %entry
  %5 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4359
  %data3 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %5, i32 0, i32 2, !dbg !4360
  %6 = load i8*, i8** %data3, align 8, !dbg !4360
  %7 = bitcast i8* %6 to %struct.bChildOfConstraint*, !dbg !4361
  br label %cond.end, !dbg !4358

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4358

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bChildOfConstraint* [ %7, %cond.true ], [ null, %cond.false ], !dbg !4358
  store %struct.bChildOfConstraint* %cond, %struct.bChildOfConstraint** %data, align 8, !dbg !4356
  call void @llvm.dbg.declare(metadata i32* %owner, metadata !4362, metadata !DIExpression()), !dbg !4364
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4365
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !4366
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4366
  %call4 = call i32 @RNA_enum_get(%struct.PointerRNA* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0)), !dbg !4367
  store i32 %call4, i32* %owner, align 4, !dbg !4364
  %10 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4368
  %cmp = icmp eq %struct.bChildOfConstraint* %10, null, !dbg !4370
  br i1 %cmp, label %if.then, label %if.end, !dbg !4371

if.then:                                          ; preds = %cond.end
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4372
  %tobool5 = icmp ne %struct.Object* %11, null, !dbg !4374
  br i1 %tobool5, label %cond.true6, label %cond.false7, !dbg !4374

cond.true6:                                       ; preds = %if.then
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4375
  %id = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 0, !dbg !4376
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !4377
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !4375
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !4378
  br label %cond.end8, !dbg !4374

cond.false7:                                      ; preds = %if.then
  br label %cond.end8, !dbg !4374

cond.end8:                                        ; preds = %cond.false7, %cond.true6
  %cond9 = phi i8* [ %add.ptr, %cond.true6 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.84, i64 0, i64 0), %cond.false7 ], !dbg !4374
  %call10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.83, i64 0, i64 0), i8* %cond9), !dbg !4379
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4380
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 8, !dbg !4381
  %14 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !4381
  call void @BKE_report(%struct.ReportList* %14, i32 32, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.85, i64 0, i64 0)), !dbg !4382
  store i32 2, i32* %retval, align 4, !dbg !4383
  br label %return, !dbg !4383

if.end:                                           ; preds = %cond.end
  %15 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4384
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4385
  %17 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4386
  %18 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4387
  %invmat = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %18, i32 0, i32 3, !dbg !4388
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat, i64 0, i64 0, !dbg !4387
  %19 = load i32, i32* %owner, align 4, !dbg !4389
  call void @child_get_inverse_matrix(%struct.Scene* %15, %struct.Object* %16, %struct.bConstraint* %17, [4 x float]* %arraydecay11, i32 %19), !dbg !4390
  %20 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4391
  %21 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4392
  %22 = bitcast %struct.Object* %21 to i8*, !dbg !4392
  call void @WM_event_add_notifier(%struct.bContext* %20, i32 85590016, i8* %22), !dbg !4393
  store i32 4, i32* %retval, align 4, !dbg !4394
  br label %return, !dbg !4394

return:                                           ; preds = %if.end, %cond.end8
  %23 = load i32, i32* %retval, align 4, !dbg !4395
  ret i32 %23, !dbg !4395
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CONSTRAINT_OT_childof_clear_inverse(%struct.wmOperatorType* %ot) #0 !dbg !4396 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4397, metadata !DIExpression()), !dbg !4398
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4399
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4400
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i8** %name, align 8, !dbg !4401
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4402
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4403
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i64 0, i64 0), i8** %idname, align 8, !dbg !4404
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4405
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4406
  store i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11, i64 0, i64 0), i8** %description, align 8, !dbg !4407
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4408
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !4409
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @childof_clear_inverse_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4410
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4411
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !4412
  store i32 (%struct.bContext*, %struct.wmOperator*)* @childof_clear_inverse_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4413
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4414
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !4415
  store i32 (%struct.bContext*)* @edit_constraint_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4416
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4417
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !4418
  store i16 3, i16* %flag, align 8, !dbg !4419
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4420
  call void @edit_constraint_properties(%struct.wmOperatorType* %7), !dbg !4421
  ret void, !dbg !4422
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @childof_clear_inverse_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !4423 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4424, metadata !DIExpression()), !dbg !4425
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4426, metadata !DIExpression()), !dbg !4427
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !4428, metadata !DIExpression()), !dbg !4429
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4430
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4432
  %call = call i32 @edit_constraint_invoke_properties(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !4433
  %tobool = icmp ne i32 %call, 0, !dbg !4433
  br i1 %tobool, label %if.then, label %if.else, !dbg !4434

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4435
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4436
  %call1 = call i32 @childof_clear_inverse_exec(%struct.bContext* %2, %struct.wmOperator* %3), !dbg !4437
  store i32 %call1, i32* %retval, align 4, !dbg !4438
  br label %return, !dbg !4438

if.else:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !4439
  br label %return, !dbg !4439

return:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !4440
  ret i32 %4, !dbg !4440
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @childof_clear_inverse_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4441 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %data = alloca %struct.bChildOfConstraint*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4442, metadata !DIExpression()), !dbg !4443
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4444, metadata !DIExpression()), !dbg !4445
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !4446, metadata !DIExpression()), !dbg !4447
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4448
  %call = call %struct.Object* @ED_object_active_context(%struct.bContext* %0), !dbg !4449
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !4447
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !4450, metadata !DIExpression()), !dbg !4451
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4452
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4453
  %call1 = call %struct.bConstraint* @edit_constraint_property_get(%struct.wmOperator* %1, %struct.Object* %2, i32 1), !dbg !4454
  store %struct.bConstraint* %call1, %struct.bConstraint** %con, align 8, !dbg !4451
  call void @llvm.dbg.declare(metadata %struct.bChildOfConstraint** %data, metadata !4455, metadata !DIExpression()), !dbg !4456
  %3 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4457
  %tobool = icmp ne %struct.bConstraint* %3, null, !dbg !4458
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4458

cond.true:                                        ; preds = %entry
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4459
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %4, i32 0, i32 2, !dbg !4460
  %5 = load i8*, i8** %data2, align 8, !dbg !4460
  %6 = bitcast i8* %5 to %struct.bChildOfConstraint*, !dbg !4461
  br label %cond.end, !dbg !4458

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4458

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bChildOfConstraint* [ %6, %cond.true ], [ null, %cond.false ], !dbg !4458
  store %struct.bChildOfConstraint* %cond, %struct.bChildOfConstraint** %data, align 8, !dbg !4456
  %7 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4462
  %cmp = icmp eq %struct.bChildOfConstraint* %7, null, !dbg !4464
  br i1 %cmp, label %if.then, label %if.end, !dbg !4465

if.then:                                          ; preds = %cond.end
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4466
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 8, !dbg !4468
  %9 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !4468
  call void @BKE_report(%struct.ReportList* %9, i32 32, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.86, i64 0, i64 0)), !dbg !4469
  store i32 2, i32* %retval, align 4, !dbg !4470
  br label %return, !dbg !4470

if.end:                                           ; preds = %cond.end
  %10 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4471
  %invmat = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %10, i32 0, i32 3, !dbg !4472
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat, i64 0, i64 0, !dbg !4471
  call void @unit_m4([4 x float]* %arraydecay), !dbg !4473
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4474
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4475
  %13 = bitcast %struct.Object* %12 to i8*, !dbg !4475
  call void @WM_event_add_notifier(%struct.bContext* %11, i32 85590016, i8* %13), !dbg !4476
  store i32 4, i32* %retval, align 4, !dbg !4477
  br label %return, !dbg !4477

return:                                           ; preds = %if.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !4478
  ret i32 %14, !dbg !4478
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CONSTRAINT_OT_followpath_path_animate(%struct.wmOperatorType* %ot) #0 !dbg !4479 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4480, metadata !DIExpression()), !dbg !4481
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4482
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4483
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8** %name, align 8, !dbg !4484
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4485
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4486
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i64 0, i64 0), i8** %idname, align 8, !dbg !4487
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4488
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4489
  store i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.14, i64 0, i64 0), i8** %description, align 8, !dbg !4490
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4491
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !4492
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @followpath_path_animate_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4493
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4494
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !4495
  store i32 (%struct.bContext*, %struct.wmOperator*)* @followpath_path_animate_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4496
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4497
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !4498
  store i32 (%struct.bContext*)* @edit_constraint_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4499
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4500
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !4501
  store i16 3, i16* %flag, align 8, !dbg !4502
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4503
  call void @edit_constraint_properties(%struct.wmOperatorType* %7), !dbg !4504
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4505
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 11, !dbg !4506
  %9 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4506
  %10 = bitcast %struct.StructRNA* %9 to i8*, !dbg !4505
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i32 1, i32 -300000, i32 300000, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i64 0, i64 0), i32 -300000, i32 300000), !dbg !4507
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4508
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %11, i32 0, i32 11, !dbg !4509
  %12 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !4509
  %13 = bitcast %struct.StructRNA* %12 to i8*, !dbg !4508
  %call2 = call %struct.PropertyRNA* @RNA_def_int(i8* %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0), i32 100, i32 0, i32 300000, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.20, i64 0, i64 0), i32 0, i32 300000), !dbg !4510
  ret void, !dbg !4511
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @followpath_path_animate_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !4512 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4513, metadata !DIExpression()), !dbg !4514
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4515, metadata !DIExpression()), !dbg !4516
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !4517, metadata !DIExpression()), !dbg !4518
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4519
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4521
  %call = call i32 @edit_constraint_invoke_properties(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !4522
  %tobool = icmp ne i32 %call, 0, !dbg !4522
  br i1 %tobool, label %if.then, label %if.else, !dbg !4523

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4524
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4526
  %call1 = call i32 @followpath_path_animate_exec(%struct.bContext* %2, %struct.wmOperator* %3), !dbg !4527
  store i32 %call1, i32* %retval, align 4, !dbg !4528
  br label %return, !dbg !4528

if.else:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !4529
  br label %return, !dbg !4529

return:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !4531
  ret i32 %4, !dbg !4531
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @followpath_path_animate_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4532 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %data = alloca %struct.bFollowPathConstraint*, align 8
  %act = alloca %struct.bAction*, align 8
  %fcu = alloca %struct.FCurve*, align 8
  %sfra = alloca i32, align 4
  %len = alloca i32, align 4
  %standardRange = alloca float, align 4
  %cu = alloca %struct.Curve*, align 8
  %ptr24 = alloca %struct.PointerRNA, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %path = alloca i8*, align 8
  %fcm = alloca %struct.FModifier*, align 8
  %gen = alloca %struct.FMod_Generator*, align 8
  %A = alloca float, align 4
  %B = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4533, metadata !DIExpression()), !dbg !4534
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4535, metadata !DIExpression()), !dbg !4536
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !4537, metadata !DIExpression()), !dbg !4538
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4539
  %call = call %struct.Object* @ED_object_active_context(%struct.bContext* %0), !dbg !4540
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !4538
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !4541, metadata !DIExpression()), !dbg !4542
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4543
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4544
  %call1 = call %struct.bConstraint* @edit_constraint_property_get(%struct.wmOperator* %1, %struct.Object* %2, i32 4), !dbg !4545
  store %struct.bConstraint* %call1, %struct.bConstraint** %con, align 8, !dbg !4542
  call void @llvm.dbg.declare(metadata %struct.bFollowPathConstraint** %data, metadata !4546, metadata !DIExpression()), !dbg !4547
  %3 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4548
  %tobool = icmp ne %struct.bConstraint* %3, null, !dbg !4549
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4549

cond.true:                                        ; preds = %entry
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4550
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %4, i32 0, i32 2, !dbg !4551
  %5 = load i8*, i8** %data2, align 8, !dbg !4551
  %6 = bitcast i8* %5 to %struct.bFollowPathConstraint*, !dbg !4552
  br label %cond.end, !dbg !4549

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4549

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bFollowPathConstraint* [ %6, %cond.true ], [ null, %cond.false ], !dbg !4549
  store %struct.bFollowPathConstraint* %cond, %struct.bFollowPathConstraint** %data, align 8, !dbg !4547
  call void @llvm.dbg.declare(metadata %struct.bAction** %act, metadata !4553, metadata !DIExpression()), !dbg !4554
  store %struct.bAction* null, %struct.bAction** %act, align 8, !dbg !4554
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !4555, metadata !DIExpression()), !dbg !4639
  store %struct.FCurve* null, %struct.FCurve** %fcu, align 8, !dbg !4639
  call void @llvm.dbg.declare(metadata i32* %sfra, metadata !4640, metadata !DIExpression()), !dbg !4641
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4642
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 7, !dbg !4643
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4643
  %call3 = call i32 @RNA_int_get(%struct.PointerRNA* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0)), !dbg !4644
  store i32 %call3, i32* %sfra, align 4, !dbg !4641
  call void @llvm.dbg.declare(metadata i32* %len, metadata !4645, metadata !DIExpression()), !dbg !4646
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4647
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 7, !dbg !4648
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !4648
  %call5 = call i32 @RNA_int_get(%struct.PointerRNA* %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0)), !dbg !4649
  store i32 %call5, i32* %len, align 4, !dbg !4646
  call void @llvm.dbg.declare(metadata float* %standardRange, metadata !4650, metadata !DIExpression()), !dbg !4651
  store float 1.000000e+00, float* %standardRange, align 4, !dbg !4651
  %11 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data, align 8, !dbg !4652
  %cmp = icmp eq %struct.bFollowPathConstraint* %11, null, !dbg !4654
  br i1 %cmp, label %if.then, label %if.end, !dbg !4655

if.then:                                          ; preds = %cond.end
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4656
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %12, i32 0, i32 8, !dbg !4658
  %13 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !4658
  call void @BKE_report(%struct.ReportList* %13, i32 32, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.87, i64 0, i64 0)), !dbg !4659
  store i32 2, i32* %retval, align 4, !dbg !4660
  br label %return, !dbg !4660

if.end:                                           ; preds = %cond.end
  %14 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data, align 8, !dbg !4661
  %tar = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %14, i32 0, i32 0, !dbg !4663
  %15 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !4663
  %tobool6 = icmp ne %struct.Object* %15, null, !dbg !4661
  br i1 %tobool6, label %if.then7, label %if.else23, !dbg !4664

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !4665, metadata !DIExpression()), !dbg !4667
  %16 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data, align 8, !dbg !4668
  %tar8 = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %16, i32 0, i32 0, !dbg !4669
  %17 = load %struct.Object*, %struct.Object** %tar8, align 8, !dbg !4669
  %data9 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 19, !dbg !4670
  %18 = load i8*, i8** %data9, align 8, !dbg !4670
  %19 = bitcast i8* %18 to %struct.Curve*, !dbg !4671
  store %struct.Curve* %19, %struct.Curve** %cu, align 8, !dbg !4667
  %20 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4672
  %adt = getelementptr inbounds %struct.Curve, %struct.Curve* %20, i32 0, i32 1, !dbg !4672
  %21 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !4672
  %cmp10 = icmp eq %struct.AnimData* null, %21, !dbg !4672
  br i1 %cmp10, label %if.then18, label %lor.lhs.false, !dbg !4672

lor.lhs.false:                                    ; preds = %if.then7
  %22 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4672
  %adt11 = getelementptr inbounds %struct.Curve, %struct.Curve* %22, i32 0, i32 1, !dbg !4672
  %23 = load %struct.AnimData*, %struct.AnimData** %adt11, align 8, !dbg !4672
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %23, i32 0, i32 0, !dbg !4672
  %24 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !4672
  %cmp12 = icmp eq %struct.bAction* null, %24, !dbg !4672
  br i1 %cmp12, label %if.then18, label %lor.lhs.false13, !dbg !4674

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %25 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4675
  %adt14 = getelementptr inbounds %struct.Curve, %struct.Curve* %25, i32 0, i32 1, !dbg !4676
  %26 = load %struct.AnimData*, %struct.AnimData** %adt14, align 8, !dbg !4676
  %action15 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %26, i32 0, i32 0, !dbg !4677
  %27 = load %struct.bAction*, %struct.bAction** %action15, align 8, !dbg !4677
  %curves = getelementptr inbounds %struct.bAction, %struct.bAction* %27, i32 0, i32 1, !dbg !4678
  %call16 = call %struct.FCurve* @list_find_fcurve(%struct.ListBase* %curves, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.88, i64 0, i64 0), i32 0), !dbg !4679
  %cmp17 = icmp eq %struct.FCurve* %call16, null, !dbg !4680
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !4681

if.then18:                                        ; preds = %lor.lhs.false13, %lor.lhs.false, %if.then7
  %28 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4682
  %id = getelementptr inbounds %struct.Curve, %struct.Curve* %28, i32 0, i32 0, !dbg !4684
  %call19 = call %struct.bAction* @verify_adt_action(%struct.ID* %id, i16 signext 1), !dbg !4685
  store %struct.bAction* %call19, %struct.bAction** %act, align 8, !dbg !4686
  %29 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !4687
  %call20 = call %struct.FCurve* @verify_fcurve(%struct.bAction* %29, i8* null, %struct.PointerRNA* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.88, i64 0, i64 0), i32 0, i16 signext 1), !dbg !4688
  store %struct.FCurve* %call20, %struct.FCurve** %fcu, align 8, !dbg !4689
  store float 1.000000e+02, float* %standardRange, align 4, !dbg !4690
  br label %if.end22, !dbg !4691

if.else:                                          ; preds = %lor.lhs.false13
  %30 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4692
  %reports21 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %30, i32 0, i32 8, !dbg !4694
  %31 = load %struct.ReportList*, %struct.ReportList** %reports21, align 8, !dbg !4694
  call void @BKE_report(%struct.ReportList* %31, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.89, i64 0, i64 0)), !dbg !4695
  store i32 2, i32* %retval, align 4, !dbg !4696
  br label %return, !dbg !4696

if.end22:                                         ; preds = %if.then18
  br label %if.end34, !dbg !4697

if.else23:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr24, metadata !4698, metadata !DIExpression()), !dbg !4701
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !4702, metadata !DIExpression()), !dbg !4703
  call void @llvm.dbg.declare(metadata i8** %path, metadata !4704, metadata !DIExpression()), !dbg !4705
  %32 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4706
  %id25 = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 0, !dbg !4707
  %33 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4708
  %34 = bitcast %struct.bConstraint* %33 to i8*, !dbg !4708
  call void @RNA_pointer_create(%struct.ID* %id25, %struct.StructRNA* @RNA_FollowPathConstraint, i8* %34, %struct.PointerRNA* %ptr24), !dbg !4709
  %call26 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %ptr24, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.90, i64 0, i64 0)), !dbg !4710
  store %struct.PropertyRNA* %call26, %struct.PropertyRNA** %prop, align 8, !dbg !4711
  %35 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !4712
  %call27 = call i8* @RNA_path_from_ID_to_property(%struct.PointerRNA* %ptr24, %struct.PropertyRNA* %35), !dbg !4713
  store i8* %call27, i8** %path, align 8, !dbg !4714
  %36 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4715
  %id28 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 0, !dbg !4716
  %call29 = call %struct.bAction* @verify_adt_action(%struct.ID* %id28, i16 signext 1), !dbg !4717
  store %struct.bAction* %call29, %struct.bAction** %act, align 8, !dbg !4718
  %37 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !4719
  %38 = load i8*, i8** %path, align 8, !dbg !4720
  %call30 = call %struct.FCurve* @verify_fcurve(%struct.bAction* %37, i8* null, %struct.PointerRNA* null, i8* %38, i32 0, i16 signext 1), !dbg !4721
  store %struct.FCurve* %call30, %struct.FCurve** %fcu, align 8, !dbg !4722
  store float 1.000000e+00, float* %standardRange, align 4, !dbg !4723
  %39 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data, align 8, !dbg !4724
  %followflag = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %39, i32 0, i32 3, !dbg !4725
  %40 = load i32, i32* %followflag, align 8, !dbg !4726
  %or = or i32 %40, 2, !dbg !4726
  store i32 %or, i32* %followflag, align 8, !dbg !4726
  %41 = load i8*, i8** %path, align 8, !dbg !4727
  %tobool31 = icmp ne i8* %41, null, !dbg !4727
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !4729

if.then32:                                        ; preds = %if.else23
  %42 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4730
  %43 = load i8*, i8** %path, align 8, !dbg !4731
  call void %42(i8* %43), !dbg !4730
  br label %if.end33, !dbg !4730

if.end33:                                         ; preds = %if.then32, %if.else23
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end22
  %44 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !4732
  %bezt = getelementptr inbounds %struct.FCurve, %struct.FCurve* %44, i32 0, i32 5, !dbg !4734
  %45 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4734
  %tobool35 = icmp ne %struct.BezTriple* %45, null, !dbg !4732
  br i1 %tobool35, label %if.end46, label %land.lhs.true, !dbg !4735

land.lhs.true:                                    ; preds = %if.end34
  %46 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !4736
  %fpt = getelementptr inbounds %struct.FCurve, %struct.FCurve* %46, i32 0, i32 6, !dbg !4737
  %47 = load %struct.FPoint*, %struct.FPoint** %fpt, align 8, !dbg !4737
  %tobool36 = icmp ne %struct.FPoint* %47, null, !dbg !4736
  br i1 %tobool36, label %if.end46, label %land.lhs.true37, !dbg !4738

land.lhs.true37:                                  ; preds = %land.lhs.true
  %48 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !4739
  %modifiers = getelementptr inbounds %struct.FCurve, %struct.FCurve* %48, i32 0, i32 4, !dbg !4740
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modifiers, i32 0, i32 0, !dbg !4741
  %49 = load i8*, i8** %first, align 8, !dbg !4741
  %tobool38 = icmp ne i8* %49, null, !dbg !4739
  br i1 %tobool38, label %if.end46, label %if.then39, !dbg !4742

if.then39:                                        ; preds = %land.lhs.true37
  call void @llvm.dbg.declare(metadata %struct.FModifier** %fcm, metadata !4743, metadata !DIExpression()), !dbg !4761
  %50 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !4762
  %modifiers40 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %50, i32 0, i32 4, !dbg !4763
  %call41 = call %struct.FModifier* @add_fmodifier(%struct.ListBase* %modifiers40, i32 1), !dbg !4764
  store %struct.FModifier* %call41, %struct.FModifier** %fcm, align 8, !dbg !4761
  call void @llvm.dbg.declare(metadata %struct.FMod_Generator** %gen, metadata !4765, metadata !DIExpression()), !dbg !4775
  %51 = load %struct.FModifier*, %struct.FModifier** %fcm, align 8, !dbg !4776
  %data42 = getelementptr inbounds %struct.FModifier, %struct.FModifier* %51, i32 0, i32 2, !dbg !4777
  %52 = load i8*, i8** %data42, align 8, !dbg !4777
  %53 = bitcast i8* %52 to %struct.FMod_Generator*, !dbg !4776
  store %struct.FMod_Generator* %53, %struct.FMod_Generator** %gen, align 8, !dbg !4775
  call void @llvm.dbg.declare(metadata float* %A, metadata !4778, metadata !DIExpression()), !dbg !4779
  %54 = load float, float* %standardRange, align 4, !dbg !4780
  %55 = load i32, i32* %len, align 4, !dbg !4781
  %conv = sitofp i32 %55 to float, !dbg !4782
  %div = fdiv float %54, %conv, !dbg !4783
  store float %div, float* %A, align 4, !dbg !4779
  call void @llvm.dbg.declare(metadata float* %B, metadata !4784, metadata !DIExpression()), !dbg !4785
  %56 = load i32, i32* %sfra, align 4, !dbg !4786
  %sub = sub nsw i32 0, %56, !dbg !4787
  %conv43 = sitofp i32 %sub to float, !dbg !4788
  %57 = load float, float* %A, align 4, !dbg !4789
  %mul = fmul float %conv43, %57, !dbg !4790
  store float %mul, float* %B, align 4, !dbg !4785
  %58 = load float, float* %A, align 4, !dbg !4791
  %59 = load %struct.FMod_Generator*, %struct.FMod_Generator** %gen, align 8, !dbg !4792
  %coefficients = getelementptr inbounds %struct.FMod_Generator, %struct.FMod_Generator* %59, i32 0, i32 0, !dbg !4793
  %60 = load float*, float** %coefficients, align 8, !dbg !4793
  %arrayidx = getelementptr inbounds float, float* %60, i64 1, !dbg !4792
  store float %58, float* %arrayidx, align 4, !dbg !4794
  %61 = load float, float* %B, align 4, !dbg !4795
  %62 = load %struct.FMod_Generator*, %struct.FMod_Generator** %gen, align 8, !dbg !4796
  %coefficients44 = getelementptr inbounds %struct.FMod_Generator, %struct.FMod_Generator* %62, i32 0, i32 0, !dbg !4797
  %63 = load float*, float** %coefficients44, align 8, !dbg !4797
  %arrayidx45 = getelementptr inbounds float, float* %63, i64 0, !dbg !4796
  store float %61, float* %arrayidx45, align 4, !dbg !4798
  br label %if.end46, !dbg !4799

if.end46:                                         ; preds = %if.then39, %land.lhs.true37, %land.lhs.true, %if.end34
  %64 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4800
  %65 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4801
  %66 = bitcast %struct.Object* %65 to i8*, !dbg !4801
  call void @WM_event_add_notifier(%struct.bContext* %64, i32 85590016, i8* %66), !dbg !4802
  store i32 4, i32* %retval, align 4, !dbg !4803
  br label %return, !dbg !4803

return:                                           ; preds = %if.end46, %if.else, %if.then
  %67 = load i32, i32* %retval, align 4, !dbg !4804
  ret i32 %67, !dbg !4804
}

declare dso_local %struct.PropertyRNA* @RNA_def_int(i8*, i8*, i32, i32, i32, i8*, i8*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CONSTRAINT_OT_objectsolver_set_inverse(%struct.wmOperatorType* %ot) #0 !dbg !4805 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4806, metadata !DIExpression()), !dbg !4807
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4808
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4809
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i8** %name, align 8, !dbg !4810
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4811
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4812
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21, i64 0, i64 0), i8** %idname, align 8, !dbg !4813
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4814
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4815
  store i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22, i64 0, i64 0), i8** %description, align 8, !dbg !4816
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4817
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !4818
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @objectsolver_set_inverse_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4819
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4820
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !4821
  store i32 (%struct.bContext*, %struct.wmOperator*)* @objectsolver_set_inverse_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4822
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4823
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !4824
  store i32 (%struct.bContext*)* @edit_constraint_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4825
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4826
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !4827
  store i16 3, i16* %flag, align 8, !dbg !4828
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4829
  call void @edit_constraint_properties(%struct.wmOperatorType* %7), !dbg !4830
  ret void, !dbg !4831
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @objectsolver_set_inverse_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !4832 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4833, metadata !DIExpression()), !dbg !4834
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4835, metadata !DIExpression()), !dbg !4836
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !4837, metadata !DIExpression()), !dbg !4838
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4839
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4841
  %call = call i32 @edit_constraint_invoke_properties(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !4842
  %tobool = icmp ne i32 %call, 0, !dbg !4842
  br i1 %tobool, label %if.then, label %if.else, !dbg !4843

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4844
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4845
  %call1 = call i32 @objectsolver_set_inverse_exec(%struct.bContext* %2, %struct.wmOperator* %3), !dbg !4846
  store i32 %call1, i32* %retval, align 4, !dbg !4847
  br label %return, !dbg !4847

if.else:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !4848
  br label %return, !dbg !4848

return:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !4849
  ret i32 %4, !dbg !4849
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @objectsolver_set_inverse_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4850 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ob = alloca %struct.Object*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %data = alloca %struct.bObjectSolverConstraint*, align 8
  %owner = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4851, metadata !DIExpression()), !dbg !4852
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4853, metadata !DIExpression()), !dbg !4854
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !4855, metadata !DIExpression()), !dbg !4856
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4857
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !4858
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !4856
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !4859, metadata !DIExpression()), !dbg !4860
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4861
  %call1 = call %struct.Object* @ED_object_active_context(%struct.bContext* %1), !dbg !4862
  store %struct.Object* %call1, %struct.Object** %ob, align 8, !dbg !4860
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !4863, metadata !DIExpression()), !dbg !4864
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4865
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4866
  %call2 = call %struct.bConstraint* @edit_constraint_property_get(%struct.wmOperator* %2, %struct.Object* %3, i32 28), !dbg !4867
  store %struct.bConstraint* %call2, %struct.bConstraint** %con, align 8, !dbg !4864
  call void @llvm.dbg.declare(metadata %struct.bObjectSolverConstraint** %data, metadata !4868, metadata !DIExpression()), !dbg !4869
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4870
  %tobool = icmp ne %struct.bConstraint* %4, null, !dbg !4871
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4871

cond.true:                                        ; preds = %entry
  %5 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4872
  %data3 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %5, i32 0, i32 2, !dbg !4873
  %6 = load i8*, i8** %data3, align 8, !dbg !4873
  %7 = bitcast i8* %6 to %struct.bObjectSolverConstraint*, !dbg !4874
  br label %cond.end, !dbg !4871

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4871

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bObjectSolverConstraint* [ %7, %cond.true ], [ null, %cond.false ], !dbg !4871
  store %struct.bObjectSolverConstraint* %cond, %struct.bObjectSolverConstraint** %data, align 8, !dbg !4869
  call void @llvm.dbg.declare(metadata i32* %owner, metadata !4875, metadata !DIExpression()), !dbg !4876
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4877
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !4878
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4878
  %call4 = call i32 @RNA_enum_get(%struct.PointerRNA* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0)), !dbg !4879
  store i32 %call4, i32* %owner, align 4, !dbg !4876
  %10 = load %struct.bObjectSolverConstraint*, %struct.bObjectSolverConstraint** %data, align 8, !dbg !4880
  %cmp = icmp eq %struct.bObjectSolverConstraint* %10, null, !dbg !4882
  br i1 %cmp, label %if.then, label %if.end, !dbg !4883

if.then:                                          ; preds = %cond.end
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4884
  %tobool5 = icmp ne %struct.Object* %11, null, !dbg !4886
  br i1 %tobool5, label %cond.true6, label %cond.false7, !dbg !4886

cond.true6:                                       ; preds = %if.then
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4887
  %id = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 0, !dbg !4888
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !4889
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !4887
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !4890
  br label %cond.end8, !dbg !4886

cond.false7:                                      ; preds = %if.then
  br label %cond.end8, !dbg !4886

cond.end8:                                        ; preds = %cond.false7, %cond.true6
  %cond9 = phi i8* [ %add.ptr, %cond.true6 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.84, i64 0, i64 0), %cond.false7 ], !dbg !4886
  %call10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.83, i64 0, i64 0), i8* %cond9), !dbg !4891
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4892
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 8, !dbg !4893
  %14 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !4893
  call void @BKE_report(%struct.ReportList* %14, i32 32, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.85, i64 0, i64 0)), !dbg !4894
  store i32 2, i32* %retval, align 4, !dbg !4895
  br label %return, !dbg !4895

if.end:                                           ; preds = %cond.end
  %15 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4896
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4897
  %17 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4898
  %18 = load %struct.bObjectSolverConstraint*, %struct.bObjectSolverConstraint** %data, align 8, !dbg !4899
  %invmat = getelementptr inbounds %struct.bObjectSolverConstraint, %struct.bObjectSolverConstraint* %18, i32 0, i32 4, !dbg !4900
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat, i64 0, i64 0, !dbg !4899
  %19 = load i32, i32* %owner, align 4, !dbg !4901
  call void @child_get_inverse_matrix(%struct.Scene* %15, %struct.Object* %16, %struct.bConstraint* %17, [4 x float]* %arraydecay11, i32 %19), !dbg !4902
  %20 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4903
  %21 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4904
  %22 = bitcast %struct.Object* %21 to i8*, !dbg !4904
  call void @WM_event_add_notifier(%struct.bContext* %20, i32 85590016, i8* %22), !dbg !4905
  store i32 4, i32* %retval, align 4, !dbg !4906
  br label %return, !dbg !4906

return:                                           ; preds = %if.end, %cond.end8
  %23 = load i32, i32* %retval, align 4, !dbg !4907
  ret i32 %23, !dbg !4907
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CONSTRAINT_OT_objectsolver_clear_inverse(%struct.wmOperatorType* %ot) #0 !dbg !4908 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4909, metadata !DIExpression()), !dbg !4910
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4911
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4912
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i8** %name, align 8, !dbg !4913
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4914
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4915
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.23, i64 0, i64 0), i8** %idname, align 8, !dbg !4916
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4917
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4918
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.24, i64 0, i64 0), i8** %description, align 8, !dbg !4919
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4920
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !4921
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @objectsolver_clear_inverse_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4922
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4923
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !4924
  store i32 (%struct.bContext*, %struct.wmOperator*)* @objectsolver_clear_inverse_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4925
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4926
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !4927
  store i32 (%struct.bContext*)* @edit_constraint_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4928
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4929
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !4930
  store i16 3, i16* %flag, align 8, !dbg !4931
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4932
  call void @edit_constraint_properties(%struct.wmOperatorType* %7), !dbg !4933
  ret void, !dbg !4934
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @objectsolver_clear_inverse_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !4935 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4936, metadata !DIExpression()), !dbg !4937
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4938, metadata !DIExpression()), !dbg !4939
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !4940, metadata !DIExpression()), !dbg !4941
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4942
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4944
  %call = call i32 @edit_constraint_invoke_properties(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !4945
  %tobool = icmp ne i32 %call, 0, !dbg !4945
  br i1 %tobool, label %if.then, label %if.else, !dbg !4946

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4947
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4948
  %call1 = call i32 @objectsolver_clear_inverse_exec(%struct.bContext* %2, %struct.wmOperator* %3), !dbg !4949
  store i32 %call1, i32* %retval, align 4, !dbg !4950
  br label %return, !dbg !4950

if.else:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !4951
  br label %return, !dbg !4951

return:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !4952
  ret i32 %4, !dbg !4952
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @objectsolver_clear_inverse_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4953 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %data = alloca %struct.bObjectSolverConstraint*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4954, metadata !DIExpression()), !dbg !4955
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4956, metadata !DIExpression()), !dbg !4957
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !4958, metadata !DIExpression()), !dbg !4959
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4960
  %call = call %struct.Object* @ED_object_active_context(%struct.bContext* %0), !dbg !4961
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !4959
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !4962, metadata !DIExpression()), !dbg !4963
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4964
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4965
  %call1 = call %struct.bConstraint* @edit_constraint_property_get(%struct.wmOperator* %1, %struct.Object* %2, i32 28), !dbg !4966
  store %struct.bConstraint* %call1, %struct.bConstraint** %con, align 8, !dbg !4963
  call void @llvm.dbg.declare(metadata %struct.bObjectSolverConstraint** %data, metadata !4967, metadata !DIExpression()), !dbg !4968
  %3 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4969
  %tobool = icmp ne %struct.bConstraint* %3, null, !dbg !4970
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4970

cond.true:                                        ; preds = %entry
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4971
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %4, i32 0, i32 2, !dbg !4972
  %5 = load i8*, i8** %data2, align 8, !dbg !4972
  %6 = bitcast i8* %5 to %struct.bObjectSolverConstraint*, !dbg !4973
  br label %cond.end, !dbg !4970

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4970

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bObjectSolverConstraint* [ %6, %cond.true ], [ null, %cond.false ], !dbg !4970
  store %struct.bObjectSolverConstraint* %cond, %struct.bObjectSolverConstraint** %data, align 8, !dbg !4968
  %7 = load %struct.bObjectSolverConstraint*, %struct.bObjectSolverConstraint** %data, align 8, !dbg !4974
  %cmp = icmp eq %struct.bObjectSolverConstraint* %7, null, !dbg !4976
  br i1 %cmp, label %if.then, label %if.end, !dbg !4977

if.then:                                          ; preds = %cond.end
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4978
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 8, !dbg !4980
  %9 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !4980
  call void @BKE_report(%struct.ReportList* %9, i32 32, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.86, i64 0, i64 0)), !dbg !4981
  store i32 2, i32* %retval, align 4, !dbg !4982
  br label %return, !dbg !4982

if.end:                                           ; preds = %cond.end
  %10 = load %struct.bObjectSolverConstraint*, %struct.bObjectSolverConstraint** %data, align 8, !dbg !4983
  %invmat = getelementptr inbounds %struct.bObjectSolverConstraint, %struct.bObjectSolverConstraint* %10, i32 0, i32 4, !dbg !4984
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat, i64 0, i64 0, !dbg !4983
  call void @unit_m4([4 x float]* %arraydecay), !dbg !4985
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4986
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4987
  %13 = bitcast %struct.Object* %12 to i8*, !dbg !4987
  call void @WM_event_add_notifier(%struct.bContext* %11, i32 85590016, i8* %13), !dbg !4988
  store i32 4, i32* %retval, align 4, !dbg !4989
  br label %return, !dbg !4989

return:                                           ; preds = %if.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !4990
  ret i32 %14, !dbg !4990
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_object_constraint_set_active(%struct.Object* %ob, %struct.bConstraint* %con) #0 !dbg !4991 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %con.addr = alloca %struct.bConstraint*, align 8
  %lb = alloca %struct.ListBase*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4994, metadata !DIExpression()), !dbg !4995
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !4996, metadata !DIExpression()), !dbg !4997
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !4998, metadata !DIExpression()), !dbg !4999
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5000
  %1 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !5001
  %call = call %struct.ListBase* @get_constraint_lb(%struct.Object* %0, %struct.bConstraint* %1, %struct.bPoseChannel** null), !dbg !5002
  store %struct.ListBase* %call, %struct.ListBase** %lb, align 8, !dbg !4999
  %2 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !5003
  %tobool = icmp ne %struct.ListBase* %2, null, !dbg !5003
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5005

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !5006
  %tobool1 = icmp ne %struct.bConstraint* %3, null, !dbg !5006
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !5007

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !5008
  %flag = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %4, i32 0, i32 4, !dbg !5009
  %5 = load i16, i16* %flag, align 2, !dbg !5009
  %conv = sext i16 %5 to i32, !dbg !5008
  %and = and i32 %conv, 16, !dbg !5010
  %tobool3 = icmp ne i32 %and, 0, !dbg !5010
  br i1 %tobool3, label %if.then, label %if.end, !dbg !5011

if.then:                                          ; preds = %land.lhs.true2
  br label %return, !dbg !5012

if.end:                                           ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %6 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !5013
  %7 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !5014
  call void @BKE_constraints_active_set(%struct.ListBase* %6, %struct.bConstraint* %7), !dbg !5015
  br label %return, !dbg !5016

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5016
}

declare dso_local void @BKE_constraints_active_set(%struct.ListBase*, %struct.bConstraint*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_object_constraint_update(%struct.Object* %ob) #0 !dbg !5017 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5018, metadata !DIExpression()), !dbg !5019
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5020
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 18, !dbg !5022
  %1 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !5022
  %tobool = icmp ne %struct.bPose* %1, null, !dbg !5020
  br i1 %tobool, label %if.then, label %if.end, !dbg !5023

if.then:                                          ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5024
  %pose1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 18, !dbg !5025
  %3 = load %struct.bPose*, %struct.bPose** %pose1, align 8, !dbg !5025
  call void @BKE_pose_update_constraint_flags(%struct.bPose* %3), !dbg !5026
  br label %if.end, !dbg !5026

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5027
  call void @object_test_constraints(%struct.Object* %4), !dbg !5028
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5029
  %type = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 3, !dbg !5031
  %6 = load i16, i16* %type, align 8, !dbg !5031
  %conv = sext i16 %6 to i32, !dbg !5029
  %cmp = icmp eq i32 %conv, 25, !dbg !5032
  br i1 %cmp, label %if.then3, label %if.else, !dbg !5033

if.then3:                                         ; preds = %if.end
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5034
  %id = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 0, !dbg !5035
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 3), !dbg !5036
  br label %if.end5, !dbg !5036

if.else:                                          ; preds = %if.end
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5037
  %id4 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 0, !dbg !5038
  call void @DAG_id_tag_update(%struct.ID* %id4, i16 signext 1), !dbg !5039
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then3
  ret void, !dbg !5040
}

declare dso_local void @BKE_pose_update_constraint_flags(%struct.bPose*) #2

declare dso_local void @DAG_id_tag_update(%struct.ID*, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_object_constraint_dependency_update(%struct.Main* %bmain, %struct.Object* %ob) #0 !dbg !5041 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !5108, metadata !DIExpression()), !dbg !5109
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5110, metadata !DIExpression()), !dbg !5111
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5112
  call void @ED_object_constraint_update(%struct.Object* %0), !dbg !5113
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5114
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 18, !dbg !5116
  %2 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !5116
  %tobool = icmp ne %struct.bPose* %2, null, !dbg !5114
  br i1 %tobool, label %if.then, label %if.end, !dbg !5117

if.then:                                          ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5118
  %pose1 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 18, !dbg !5119
  %4 = load %struct.bPose*, %struct.bPose** %pose1, align 8, !dbg !5119
  %flag = getelementptr inbounds %struct.bPose, %struct.bPose* %4, i32 0, i32 2, !dbg !5120
  %5 = load i16, i16* %flag, align 8, !dbg !5121
  %conv = sext i16 %5 to i32, !dbg !5121
  %or = or i32 %conv, 1, !dbg !5121
  %conv2 = trunc i32 %or to i16, !dbg !5121
  store i16 %conv2, i16* %flag, align 8, !dbg !5121
  br label %if.end, !dbg !5118

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !5122
  call void @DAG_relations_tag_update(%struct.Main* %6), !dbg !5123
  ret void, !dbg !5124
}

declare dso_local void @DAG_relations_tag_update(%struct.Main*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CONSTRAINT_OT_delete(%struct.wmOperatorType* %ot) #0 !dbg !5125 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5126, metadata !DIExpression()), !dbg !5127
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5128
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5129
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8** %name, align 8, !dbg !5130
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5131
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5132
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i64 0, i64 0), i8** %idname, align 8, !dbg !5133
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5134
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5135
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i64 0, i64 0), i8** %description, align 8, !dbg !5136
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5137
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5138
  store i32 (%struct.bContext*, %struct.wmOperator*)* @constraint_delete_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5139
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5140
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5141
  store i32 (%struct.bContext*)* @constraint_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5142
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5143
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5144
  store i16 3, i16* %flag, align 8, !dbg !5145
  ret void, !dbg !5146
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @constraint_delete_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !5147 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  %ob = alloca %struct.Object*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %lb = alloca %struct.ListBase*, align 8
  %is_ik = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5148, metadata !DIExpression()), !dbg !5149
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !5150, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !5152, metadata !DIExpression()), !dbg !5153
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5154
  call void @CTX_data_pointer_get_type(%struct.PointerRNA* sret %ptr, %struct.bContext* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.68, i64 0, i64 0), %struct.StructRNA* @RNA_Constraint), !dbg !5155
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5156, metadata !DIExpression()), !dbg !5157
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 0, !dbg !5158
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !5159
  %1 = load i8*, i8** %data, align 8, !dbg !5159
  %2 = bitcast i8* %1 to %struct.Object*, !dbg !5160
  store %struct.Object* %2, %struct.Object** %ob, align 8, !dbg !5157
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !5161, metadata !DIExpression()), !dbg !5162
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !5163
  %3 = load i8*, i8** %data1, align 8, !dbg !5163
  %4 = bitcast i8* %3 to %struct.bConstraint*, !dbg !5164
  store %struct.bConstraint* %4, %struct.bConstraint** %con, align 8, !dbg !5162
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !5165, metadata !DIExpression()), !dbg !5166
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5167
  %6 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5168
  %call = call %struct.ListBase* @get_constraint_lb(%struct.Object* %5, %struct.bConstraint* %6, %struct.bPoseChannel** null), !dbg !5169
  store %struct.ListBase* %call, %struct.ListBase** %lb, align 8, !dbg !5166
  call void @llvm.dbg.declare(metadata i8* %is_ik, metadata !5170, metadata !DIExpression()), !dbg !5172
  %7 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5173
  %type = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %7, i32 0, i32 3, !dbg !5173
  %8 = load i16, i16* %type, align 8, !dbg !5173
  %conv = sext i16 %8 to i32, !dbg !5173
  %cmp = icmp eq i32 %conv, 3, !dbg !5173
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !5173

lor.rhs:                                          ; preds = %entry
  %9 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5173
  %type3 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %9, i32 0, i32 3, !dbg !5173
  %10 = load i16, i16* %type3, align 8, !dbg !5173
  %conv4 = sext i16 %10 to i32, !dbg !5173
  %cmp5 = icmp eq i32 %conv4, 22, !dbg !5173
  br label %lor.end, !dbg !5173

lor.end:                                          ; preds = %lor.rhs, %entry
  %11 = phi i1 [ true, %entry ], [ %cmp5, %lor.rhs ]
  %lor.ext = zext i1 %11 to i32, !dbg !5173
  %conv7 = trunc i32 %lor.ext to i8, !dbg !5173
  store i8 %conv7, i8* %is_ik, align 1, !dbg !5172
  %12 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !5174
  %13 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5176
  %call8 = call zeroext i8 @BKE_constraint_remove(%struct.ListBase* %12, %struct.bConstraint* %13), !dbg !5177
  %tobool = icmp ne i8 %call8, 0, !dbg !5177
  br i1 %tobool, label %if.then, label %if.else, !dbg !5178

if.then:                                          ; preds = %lor.end
  %14 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !5179
  call void @BKE_constraints_active_set(%struct.ListBase* %14, %struct.bConstraint* null), !dbg !5181
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5182
  call void @ED_object_constraint_update(%struct.Object* %15), !dbg !5183
  %16 = load i8, i8* %is_ik, align 1, !dbg !5184
  %tobool9 = icmp ne i8 %16, 0, !dbg !5184
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !5186

if.then10:                                        ; preds = %if.then
  %17 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5187
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 18, !dbg !5189
  %18 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !5189
  call void @BIK_clear_data(%struct.bPose* %18), !dbg !5190
  br label %if.end, !dbg !5191

if.end:                                           ; preds = %if.then10, %if.then
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5192
  %20 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5193
  %21 = bitcast %struct.Object* %20 to i8*, !dbg !5193
  call void @WM_event_add_notifier(%struct.bContext* %19, i32 85590020, i8* %21), !dbg !5194
  store i32 4, i32* %retval, align 4, !dbg !5195
  br label %return, !dbg !5195

if.else:                                          ; preds = %lor.end
  store i32 2, i32* %retval, align 4, !dbg !5196
  br label %return, !dbg !5196

return:                                           ; preds = %if.else, %if.end
  %22 = load i32, i32* %retval, align 4, !dbg !5198
  ret i32 %22, !dbg !5198
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @constraint_poll(%struct.bContext* %C) #0 !dbg !5199 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5200, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !5202, metadata !DIExpression()), !dbg !5203
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5204
  call void @CTX_data_pointer_get_type(%struct.PointerRNA* sret %ptr, %struct.bContext* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.68, i64 0, i64 0), %struct.StructRNA* @RNA_Constraint), !dbg !5205
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 0, !dbg !5206
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !5207
  %1 = load i8*, i8** %data, align 8, !dbg !5207
  %tobool = icmp ne i8* %1, null, !dbg !5208
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5209

land.rhs:                                         ; preds = %entry
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !5210
  %2 = load i8*, i8** %data1, align 8, !dbg !5210
  %tobool2 = icmp ne i8* %2, null, !dbg !5209
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !5211
  %land.ext = zext i1 %3 to i32, !dbg !5209
  ret i32 %land.ext, !dbg !5212
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CONSTRAINT_OT_move_down(%struct.wmOperatorType* %ot) #0 !dbg !5213 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5214, metadata !DIExpression()), !dbg !5215
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5216
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5217
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28, i64 0, i64 0), i8** %name, align 8, !dbg !5218
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5219
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5220
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i64 0, i64 0), i8** %idname, align 8, !dbg !5221
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5222
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5223
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.30, i64 0, i64 0), i8** %description, align 8, !dbg !5224
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5225
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5226
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @constraint_move_down_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5227
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5228
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5229
  store i32 (%struct.bContext*, %struct.wmOperator*)* @constraint_move_down_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5230
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5231
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !5232
  store i32 (%struct.bContext*)* @edit_constraint_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5233
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5234
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !5235
  store i16 3, i16* %flag, align 8, !dbg !5236
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5237
  call void @edit_constraint_properties(%struct.wmOperatorType* %7), !dbg !5238
  ret void, !dbg !5239
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @constraint_move_down_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !5240 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5241, metadata !DIExpression()), !dbg !5242
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5243, metadata !DIExpression()), !dbg !5244
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !5245, metadata !DIExpression()), !dbg !5246
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5247
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5249
  %call = call i32 @edit_constraint_invoke_properties(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !5250
  %tobool = icmp ne i32 %call, 0, !dbg !5250
  br i1 %tobool, label %if.then, label %if.else, !dbg !5251

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5252
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5253
  %call1 = call i32 @constraint_move_down_exec(%struct.bContext* %2, %struct.wmOperator* %3), !dbg !5254
  store i32 %call1, i32* %retval, align 4, !dbg !5255
  br label %return, !dbg !5255

if.else:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5256
  br label %return, !dbg !5256

return:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !5257
  ret i32 %4, !dbg !5257
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @constraint_move_down_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5258 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %conlist = alloca %struct.ListBase*, align 8
  %nextCon = alloca %struct.bConstraint*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5259, metadata !DIExpression()), !dbg !5260
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5261, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5263, metadata !DIExpression()), !dbg !5264
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5265
  %call = call %struct.Object* @ED_object_active_context(%struct.bContext* %0), !dbg !5266
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !5264
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !5267, metadata !DIExpression()), !dbg !5268
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5269
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5270
  %call1 = call %struct.bConstraint* @edit_constraint_property_get(%struct.wmOperator* %1, %struct.Object* %2, i32 0), !dbg !5271
  store %struct.bConstraint* %call1, %struct.bConstraint** %con, align 8, !dbg !5268
  %3 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5272
  %tobool = icmp ne %struct.bConstraint* %3, null, !dbg !5272
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5274

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5275
  %next = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %4, i32 0, i32 0, !dbg !5276
  %5 = load %struct.bConstraint*, %struct.bConstraint** %next, align 8, !dbg !5276
  %tobool2 = icmp ne %struct.bConstraint* %5, null, !dbg !5275
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5277

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.ListBase** %conlist, metadata !5278, metadata !DIExpression()), !dbg !5280
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5281
  %7 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5282
  %call3 = call %struct.ListBase* @get_constraint_lb(%struct.Object* %6, %struct.bConstraint* %7, %struct.bPoseChannel** null), !dbg !5283
  store %struct.ListBase* %call3, %struct.ListBase** %conlist, align 8, !dbg !5280
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %nextCon, metadata !5284, metadata !DIExpression()), !dbg !5285
  %8 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5286
  %next4 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %8, i32 0, i32 0, !dbg !5287
  %9 = load %struct.bConstraint*, %struct.bConstraint** %next4, align 8, !dbg !5287
  store %struct.bConstraint* %9, %struct.bConstraint** %nextCon, align 8, !dbg !5285
  %10 = load %struct.ListBase*, %struct.ListBase** %conlist, align 8, !dbg !5288
  %11 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5289
  %12 = bitcast %struct.bConstraint* %11 to i8*, !dbg !5289
  call void @BLI_remlink(%struct.ListBase* %10, i8* %12), !dbg !5290
  %13 = load %struct.ListBase*, %struct.ListBase** %conlist, align 8, !dbg !5291
  %14 = load %struct.bConstraint*, %struct.bConstraint** %nextCon, align 8, !dbg !5292
  %15 = bitcast %struct.bConstraint* %14 to i8*, !dbg !5292
  %16 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5293
  %17 = bitcast %struct.bConstraint* %16 to i8*, !dbg !5293
  call void @BLI_insertlinkafter(%struct.ListBase* %13, i8* %15, i8* %17), !dbg !5294
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5295
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5296
  %20 = bitcast %struct.Object* %19 to i8*, !dbg !5296
  call void @WM_event_add_notifier(%struct.bContext* %18, i32 85590016, i8* %20), !dbg !5297
  store i32 4, i32* %retval, align 4, !dbg !5298
  br label %return, !dbg !5298

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 2, i32* %retval, align 4, !dbg !5299
  br label %return, !dbg !5299

return:                                           ; preds = %if.end, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !5300
  ret i32 %21, !dbg !5300
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CONSTRAINT_OT_move_up(%struct.wmOperatorType* %ot) #0 !dbg !5301 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5302, metadata !DIExpression()), !dbg !5303
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5304
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5305
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.31, i64 0, i64 0), i8** %name, align 8, !dbg !5306
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5307
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5308
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32, i64 0, i64 0), i8** %idname, align 8, !dbg !5309
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5310
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5311
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.33, i64 0, i64 0), i8** %description, align 8, !dbg !5312
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5313
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5314
  store i32 (%struct.bContext*, %struct.wmOperator*)* @constraint_move_up_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5315
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5316
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !5317
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @constraint_move_up_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5318
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5319
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !5320
  store i32 (%struct.bContext*)* @edit_constraint_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5321
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5322
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !5323
  store i16 3, i16* %flag, align 8, !dbg !5324
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5325
  call void @edit_constraint_properties(%struct.wmOperatorType* %7), !dbg !5326
  ret void, !dbg !5327
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @constraint_move_up_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5328 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %conlist = alloca %struct.ListBase*, align 8
  %prevCon = alloca %struct.bConstraint*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5329, metadata !DIExpression()), !dbg !5330
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5331, metadata !DIExpression()), !dbg !5332
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5333, metadata !DIExpression()), !dbg !5334
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5335
  %call = call %struct.Object* @ED_object_active_context(%struct.bContext* %0), !dbg !5336
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !5334
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !5337, metadata !DIExpression()), !dbg !5338
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5339
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5340
  %call1 = call %struct.bConstraint* @edit_constraint_property_get(%struct.wmOperator* %1, %struct.Object* %2, i32 0), !dbg !5341
  store %struct.bConstraint* %call1, %struct.bConstraint** %con, align 8, !dbg !5338
  %3 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5342
  %tobool = icmp ne %struct.bConstraint* %3, null, !dbg !5342
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5344

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5345
  %prev = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %4, i32 0, i32 1, !dbg !5346
  %5 = load %struct.bConstraint*, %struct.bConstraint** %prev, align 8, !dbg !5346
  %tobool2 = icmp ne %struct.bConstraint* %5, null, !dbg !5345
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5347

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.ListBase** %conlist, metadata !5348, metadata !DIExpression()), !dbg !5350
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5351
  %7 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5352
  %call3 = call %struct.ListBase* @get_constraint_lb(%struct.Object* %6, %struct.bConstraint* %7, %struct.bPoseChannel** null), !dbg !5353
  store %struct.ListBase* %call3, %struct.ListBase** %conlist, align 8, !dbg !5350
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %prevCon, metadata !5354, metadata !DIExpression()), !dbg !5355
  %8 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5356
  %prev4 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %8, i32 0, i32 1, !dbg !5357
  %9 = load %struct.bConstraint*, %struct.bConstraint** %prev4, align 8, !dbg !5357
  store %struct.bConstraint* %9, %struct.bConstraint** %prevCon, align 8, !dbg !5355
  %10 = load %struct.ListBase*, %struct.ListBase** %conlist, align 8, !dbg !5358
  %11 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5359
  %12 = bitcast %struct.bConstraint* %11 to i8*, !dbg !5359
  call void @BLI_remlink(%struct.ListBase* %10, i8* %12), !dbg !5360
  %13 = load %struct.ListBase*, %struct.ListBase** %conlist, align 8, !dbg !5361
  %14 = load %struct.bConstraint*, %struct.bConstraint** %prevCon, align 8, !dbg !5362
  %15 = bitcast %struct.bConstraint* %14 to i8*, !dbg !5362
  %16 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5363
  %17 = bitcast %struct.bConstraint* %16 to i8*, !dbg !5363
  call void @BLI_insertlinkbefore(%struct.ListBase* %13, i8* %15, i8* %17), !dbg !5364
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5365
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5366
  %20 = bitcast %struct.Object* %19 to i8*, !dbg !5366
  call void @WM_event_add_notifier(%struct.bContext* %18, i32 85590016, i8* %20), !dbg !5367
  store i32 4, i32* %retval, align 4, !dbg !5368
  br label %return, !dbg !5368

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 2, i32* %retval, align 4, !dbg !5369
  br label %return, !dbg !5369

return:                                           ; preds = %if.end, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !5370
  ret i32 %21, !dbg !5370
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @constraint_move_up_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !5371 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5372, metadata !DIExpression()), !dbg !5373
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5374, metadata !DIExpression()), !dbg !5375
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !5376, metadata !DIExpression()), !dbg !5377
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5378
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5380
  %call = call i32 @edit_constraint_invoke_properties(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !5381
  %tobool = icmp ne i32 %call, 0, !dbg !5381
  br i1 %tobool, label %if.then, label %if.else, !dbg !5382

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5383
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5384
  %call1 = call i32 @constraint_move_up_exec(%struct.bContext* %2, %struct.wmOperator* %3), !dbg !5385
  store i32 %call1, i32* %retval, align 4, !dbg !5386
  br label %return, !dbg !5386

if.else:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5387
  br label %return, !dbg !5387

return:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !5388
  ret i32 %4, !dbg !5388
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @POSE_OT_constraints_clear(%struct.wmOperatorType* %ot) #0 !dbg !5389 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5390, metadata !DIExpression()), !dbg !5391
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5392
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5393
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0), i8** %name, align 8, !dbg !5394
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5395
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5396
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.35, i64 0, i64 0), i8** %idname, align 8, !dbg !5397
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5398
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5399
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.36, i64 0, i64 0), i8** %description, align 8, !dbg !5400
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5401
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5402
  store i32 (%struct.bContext*, %struct.wmOperator*)* @pose_constraints_clear_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5403
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5404
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5405
  store i32 (%struct.bContext*)* @ED_operator_posemode_exclusive, i32 (%struct.bContext*)** %poll, align 8, !dbg !5406
  ret void, !dbg !5407
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @pose_constraints_clear_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !5408 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %bmain = alloca %struct.Main*, align 8
  %ob = alloca %struct.Object*, align 8
  %ctx_data_list = alloca %struct.ListBase, align 8
  %ctx_link = alloca %struct.CollectionPointerLink*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5409, metadata !DIExpression()), !dbg !5410
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !5411, metadata !DIExpression()), !dbg !5412
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !5413, metadata !DIExpression()), !dbg !5414
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5415
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !5416
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !5414
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5417, metadata !DIExpression()), !dbg !5418
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5419
  %call1 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %1), !dbg !5420
  %call2 = call %struct.Object* @BKE_object_pose_armature_get(%struct.Object* %call1), !dbg !5421
  store %struct.Object* %call2, %struct.Object** %ob, align 8, !dbg !5418
  call void @llvm.dbg.declare(metadata %struct.ListBase* %ctx_data_list, metadata !5422, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.declare(metadata %struct.CollectionPointerLink** %ctx_link, metadata !5425, metadata !DIExpression()), !dbg !5424
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5424
  %call3 = call i32 @CTX_data_selected_pose_bones(%struct.bContext* %2, %struct.ListBase* %ctx_data_list), !dbg !5424
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %ctx_data_list, i32 0, i32 0, !dbg !5434
  %3 = load i8*, i8** %first, align 8, !dbg !5434
  %4 = bitcast i8* %3 to %struct.CollectionPointerLink*, !dbg !5434
  store %struct.CollectionPointerLink* %4, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !5434
  br label %for.cond, !dbg !5434

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !5436
  %tobool = icmp ne %struct.CollectionPointerLink* %5, null, !dbg !5434
  br i1 %tobool, label %for.body, label %for.end, !dbg !5434

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !5438, metadata !DIExpression()), !dbg !5440
  %6 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !5440
  %ptr = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %6, i32 0, i32 2, !dbg !5440
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !5440
  %7 = load i8*, i8** %data, align 8, !dbg !5440
  %8 = bitcast i8* %7 to %struct.bPoseChannel*, !dbg !5440
  store %struct.bPoseChannel* %8, %struct.bPoseChannel** %pchan, align 8, !dbg !5440
  %9 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5441
  %constraints = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %9, i32 0, i32 3, !dbg !5443
  call void @BKE_constraints_free(%struct.ListBase* %constraints), !dbg !5444
  %10 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5445
  %constflag = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %10, i32 0, i32 9, !dbg !5446
  %11 = load i8, i8* %constflag, align 8, !dbg !5447
  %conv = zext i8 %11 to i32, !dbg !5447
  %and = and i32 %conv, -36, !dbg !5447
  %conv4 = trunc i32 %and to i8, !dbg !5447
  store i8 %conv4, i8* %constflag, align 8, !dbg !5447
  br label %for.inc, !dbg !5448

for.inc:                                          ; preds = %for.body
  %12 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !5436
  %next = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %12, i32 0, i32 0, !dbg !5436
  %13 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %next, align 8, !dbg !5436
  store %struct.CollectionPointerLink* %13, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !5436
  br label %for.cond, !dbg !5436, !llvm.loop !5449

for.end:                                          ; preds = %for.cond
  call void @BLI_freelistN(%struct.ListBase* %ctx_data_list), !dbg !5451
  %14 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !5452
  call void @DAG_relations_tag_update(%struct.Main* %14), !dbg !5453
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5454
  %id = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 0, !dbg !5455
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !5456
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5457
  %17 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5458
  %18 = bitcast %struct.Object* %17 to i8*, !dbg !5458
  call void @WM_event_add_notifier(%struct.bContext* %16, i32 85590020, i8* %18), !dbg !5459
  ret i32 4, !dbg !5460
}

declare dso_local i32 @ED_operator_posemode_exclusive(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_constraints_clear(%struct.wmOperatorType* %ot) #0 !dbg !5461 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5462, metadata !DIExpression()), !dbg !5463
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5464
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5465
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.37, i64 0, i64 0), i8** %name, align 8, !dbg !5466
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5467
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5468
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.38, i64 0, i64 0), i8** %idname, align 8, !dbg !5469
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5470
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5471
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.39, i64 0, i64 0), i8** %description, align 8, !dbg !5472
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5473
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5474
  store i32 (%struct.bContext*, %struct.wmOperator*)* @object_constraints_clear_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5475
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5476
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5477
  store i32 (%struct.bContext*)* @ED_operator_object_active_editable, i32 (%struct.bContext*)** %poll, align 8, !dbg !5478
  ret void, !dbg !5479
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @object_constraints_clear_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !5480 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %bmain = alloca %struct.Main*, align 8
  %ctx_data_list = alloca %struct.ListBase, align 8
  %ctx_link = alloca %struct.CollectionPointerLink*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5481, metadata !DIExpression()), !dbg !5482
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !5483, metadata !DIExpression()), !dbg !5484
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !5485, metadata !DIExpression()), !dbg !5486
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5487
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !5488
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !5486
  call void @llvm.dbg.declare(metadata %struct.ListBase* %ctx_data_list, metadata !5489, metadata !DIExpression()), !dbg !5491
  call void @llvm.dbg.declare(metadata %struct.CollectionPointerLink** %ctx_link, metadata !5492, metadata !DIExpression()), !dbg !5491
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5491
  %call1 = call i32 @CTX_data_selected_editable_objects(%struct.bContext* %1, %struct.ListBase* %ctx_data_list), !dbg !5491
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %ctx_data_list, i32 0, i32 0, !dbg !5493
  %2 = load i8*, i8** %first, align 8, !dbg !5493
  %3 = bitcast i8* %2 to %struct.CollectionPointerLink*, !dbg !5493
  store %struct.CollectionPointerLink* %3, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !5493
  br label %for.cond, !dbg !5493

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !5495
  %tobool = icmp ne %struct.CollectionPointerLink* %4, null, !dbg !5493
  br i1 %tobool, label %for.body, label %for.end, !dbg !5493

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5497, metadata !DIExpression()), !dbg !5499
  %5 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !5499
  %ptr = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %5, i32 0, i32 2, !dbg !5499
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !5499
  %6 = load i8*, i8** %data, align 8, !dbg !5499
  %7 = bitcast i8* %6 to %struct.Object*, !dbg !5499
  store %struct.Object* %7, %struct.Object** %ob, align 8, !dbg !5499
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5500
  %constraints = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 106, !dbg !5502
  call void @BKE_constraints_free(%struct.ListBase* %constraints), !dbg !5503
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5504
  %id = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 0, !dbg !5505
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 1), !dbg !5506
  br label %for.inc, !dbg !5507

for.inc:                                          ; preds = %for.body
  %10 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !5495
  %next = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %10, i32 0, i32 0, !dbg !5495
  %11 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %next, align 8, !dbg !5495
  store %struct.CollectionPointerLink* %11, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !5495
  br label %for.cond, !dbg !5495, !llvm.loop !5508

for.end:                                          ; preds = %for.cond
  call void @BLI_freelistN(%struct.ListBase* %ctx_data_list), !dbg !5510
  %12 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !5511
  call void @DAG_relations_tag_update(%struct.Main* %12), !dbg !5512
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5513
  call void @WM_event_add_notifier(%struct.bContext* %13, i32 85590020, i8* null), !dbg !5514
  ret i32 4, !dbg !5515
}

declare dso_local i32 @ED_operator_object_active_editable(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @POSE_OT_constraints_copy(%struct.wmOperatorType* %ot) #0 !dbg !5516 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5517, metadata !DIExpression()), !dbg !5518
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5519
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5520
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.40, i64 0, i64 0), i8** %name, align 8, !dbg !5521
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5522
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5523
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.41, i64 0, i64 0), i8** %idname, align 8, !dbg !5524
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5525
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5526
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.42, i64 0, i64 0), i8** %description, align 8, !dbg !5527
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5528
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5529
  store i32 (%struct.bContext*, %struct.wmOperator*)* @pose_constraint_copy_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5530
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5531
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5532
  store i32 (%struct.bContext*)* @ED_operator_posemode_exclusive, i32 (%struct.bContext*)** %poll, align 8, !dbg !5533
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5534
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5535
  store i16 3, i16* %flag, align 8, !dbg !5536
  ret void, !dbg !5537
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @pose_constraint_copy_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5538 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %bmain = alloca %struct.Main*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %ctx_data_list = alloca %struct.ListBase, align 8
  %ctx_link = alloca %struct.CollectionPointerLink*, align 8
  %chan = alloca %struct.bPoseChannel*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5539, metadata !DIExpression()), !dbg !5540
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5541, metadata !DIExpression()), !dbg !5542
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !5543, metadata !DIExpression()), !dbg !5544
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5545
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !5546
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !5544
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !5547, metadata !DIExpression()), !dbg !5548
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5549
  %call1 = call %struct.bPoseChannel* @CTX_data_active_pose_bone(%struct.bContext* %1), !dbg !5550
  store %struct.bPoseChannel* %call1, %struct.bPoseChannel** %pchan, align 8, !dbg !5548
  %2 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5551
  %cmp = icmp eq %struct.bPoseChannel* null, %2, !dbg !5551
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5551

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5551
  %constraints = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %3, i32 0, i32 3, !dbg !5551
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints, i32 0, i32 0, !dbg !5551
  %4 = load i8*, i8** %first, align 8, !dbg !5551
  %cmp2 = icmp eq i8* null, %4, !dbg !5551
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5553

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5554
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 8, !dbg !5556
  %6 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !5556
  call void @BKE_report(%struct.ReportList* %6, i32 32, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.91, i64 0, i64 0)), !dbg !5557
  store i32 2, i32* %retval, align 4, !dbg !5558
  br label %return, !dbg !5558

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata %struct.ListBase* %ctx_data_list, metadata !5559, metadata !DIExpression()), !dbg !5561
  call void @llvm.dbg.declare(metadata %struct.CollectionPointerLink** %ctx_link, metadata !5562, metadata !DIExpression()), !dbg !5561
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5561
  %call3 = call i32 @CTX_data_selected_pose_bones(%struct.bContext* %7, %struct.ListBase* %ctx_data_list), !dbg !5561
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %ctx_data_list, i32 0, i32 0, !dbg !5563
  %8 = load i8*, i8** %first4, align 8, !dbg !5563
  %9 = bitcast i8* %8 to %struct.CollectionPointerLink*, !dbg !5563
  store %struct.CollectionPointerLink* %9, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !5563
  br label %for.cond, !dbg !5563

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !5565
  %tobool = icmp ne %struct.CollectionPointerLink* %10, null, !dbg !5563
  br i1 %tobool, label %for.body, label %for.end, !dbg !5563

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %chan, metadata !5567, metadata !DIExpression()), !dbg !5569
  %11 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !5569
  %ptr = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %11, i32 0, i32 2, !dbg !5569
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !5569
  %12 = load i8*, i8** %data, align 8, !dbg !5569
  %13 = bitcast i8* %12 to %struct.bPoseChannel*, !dbg !5569
  store %struct.bPoseChannel* %13, %struct.bPoseChannel** %chan, align 8, !dbg !5569
  %14 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5570
  %15 = load %struct.bPoseChannel*, %struct.bPoseChannel** %chan, align 8, !dbg !5573
  %cmp5 = icmp ne %struct.bPoseChannel* %14, %15, !dbg !5574
  br i1 %cmp5, label %if.then6, label %if.end12, !dbg !5575

if.then6:                                         ; preds = %for.body
  %16 = load %struct.bPoseChannel*, %struct.bPoseChannel** %chan, align 8, !dbg !5576
  %constraints7 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %16, i32 0, i32 3, !dbg !5578
  %17 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5579
  %constraints8 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %17, i32 0, i32 3, !dbg !5580
  call void @BKE_constraints_copy(%struct.ListBase* %constraints7, %struct.ListBase* %constraints8, i8 zeroext 1), !dbg !5581
  %18 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5582
  %constflag = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %18, i32 0, i32 9, !dbg !5583
  %19 = load i8, i8* %constflag, align 8, !dbg !5583
  %conv = zext i8 %19 to i32, !dbg !5582
  %20 = load %struct.bPoseChannel*, %struct.bPoseChannel** %chan, align 8, !dbg !5584
  %constflag9 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %20, i32 0, i32 9, !dbg !5585
  %21 = load i8, i8* %constflag9, align 8, !dbg !5586
  %conv10 = zext i8 %21 to i32, !dbg !5586
  %or = or i32 %conv10, %conv, !dbg !5586
  %conv11 = trunc i32 %or to i8, !dbg !5586
  store i8 %conv11, i8* %constflag9, align 8, !dbg !5586
  br label %if.end12, !dbg !5587

if.end12:                                         ; preds = %if.then6, %for.body
  br label %for.inc, !dbg !5588

for.inc:                                          ; preds = %if.end12
  %22 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !5565
  %next = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %22, i32 0, i32 0, !dbg !5565
  %23 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %next, align 8, !dbg !5565
  store %struct.CollectionPointerLink* %23, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !5565
  br label %for.cond, !dbg !5565, !llvm.loop !5589

for.end:                                          ; preds = %for.cond
  call void @BLI_freelistN(%struct.ListBase* %ctx_data_list), !dbg !5591
  %24 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !5592
  call void @DAG_relations_tag_update(%struct.Main* %24), !dbg !5593
  %25 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5594
  call void @WM_event_add_notifier(%struct.bContext* %25, i32 85590016, i8* null), !dbg !5595
  store i32 4, i32* %retval, align 4, !dbg !5596
  br label %return, !dbg !5596

return:                                           ; preds = %for.end, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !5597
  ret i32 %26, !dbg !5597
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_constraints_copy(%struct.wmOperatorType* %ot) #0 !dbg !5598 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5599, metadata !DIExpression()), !dbg !5600
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5601
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5602
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.43, i64 0, i64 0), i8** %name, align 8, !dbg !5603
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5604
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5605
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.44, i64 0, i64 0), i8** %idname, align 8, !dbg !5606
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5607
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5608
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.45, i64 0, i64 0), i8** %description, align 8, !dbg !5609
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5610
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5611
  store i32 (%struct.bContext*, %struct.wmOperator*)* @object_constraint_copy_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5612
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5613
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5614
  store i32 (%struct.bContext*)* @ED_operator_object_active_editable, i32 (%struct.bContext*)** %poll, align 8, !dbg !5615
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5616
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5617
  store i16 3, i16* %flag, align 8, !dbg !5618
  ret void, !dbg !5619
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @object_constraint_copy_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !5620 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %bmain = alloca %struct.Main*, align 8
  %obact = alloca %struct.Object*, align 8
  %ctx_data_list = alloca %struct.ListBase, align 8
  %ctx_link = alloca %struct.CollectionPointerLink*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5621, metadata !DIExpression()), !dbg !5622
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !5623, metadata !DIExpression()), !dbg !5624
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !5625, metadata !DIExpression()), !dbg !5626
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5627
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !5628
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !5626
  call void @llvm.dbg.declare(metadata %struct.Object** %obact, metadata !5629, metadata !DIExpression()), !dbg !5630
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5631
  %call1 = call %struct.Object* @ED_object_active_context(%struct.bContext* %1), !dbg !5632
  store %struct.Object* %call1, %struct.Object** %obact, align 8, !dbg !5630
  call void @llvm.dbg.declare(metadata %struct.ListBase* %ctx_data_list, metadata !5633, metadata !DIExpression()), !dbg !5635
  call void @llvm.dbg.declare(metadata %struct.CollectionPointerLink** %ctx_link, metadata !5636, metadata !DIExpression()), !dbg !5635
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5635
  %call2 = call i32 @CTX_data_selected_editable_objects(%struct.bContext* %2, %struct.ListBase* %ctx_data_list), !dbg !5635
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %ctx_data_list, i32 0, i32 0, !dbg !5637
  %3 = load i8*, i8** %first, align 8, !dbg !5637
  %4 = bitcast i8* %3 to %struct.CollectionPointerLink*, !dbg !5637
  store %struct.CollectionPointerLink* %4, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !5637
  br label %for.cond, !dbg !5637

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !5639
  %tobool = icmp ne %struct.CollectionPointerLink* %5, null, !dbg !5637
  br i1 %tobool, label %for.body, label %for.end, !dbg !5637

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5641, metadata !DIExpression()), !dbg !5643
  %6 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !5643
  %ptr = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %6, i32 0, i32 2, !dbg !5643
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !5643
  %7 = load i8*, i8** %data, align 8, !dbg !5643
  %8 = bitcast i8* %7 to %struct.Object*, !dbg !5643
  store %struct.Object* %8, %struct.Object** %ob, align 8, !dbg !5643
  %9 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !5644
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5647
  %cmp = icmp ne %struct.Object* %9, %10, !dbg !5648
  br i1 %cmp, label %if.then, label %if.end, !dbg !5649

if.then:                                          ; preds = %for.body
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5650
  %constraints = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 106, !dbg !5652
  %12 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !5653
  %constraints3 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 106, !dbg !5654
  call void @BKE_constraints_copy(%struct.ListBase* %constraints, %struct.ListBase* %constraints3, i8 zeroext 1), !dbg !5655
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5656
  %id = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 0, !dbg !5657
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !5658
  br label %if.end, !dbg !5659

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5660

for.inc:                                          ; preds = %if.end
  %14 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !5639
  %next = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %14, i32 0, i32 0, !dbg !5639
  %15 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %next, align 8, !dbg !5639
  store %struct.CollectionPointerLink* %15, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !5639
  br label %for.cond, !dbg !5639, !llvm.loop !5661

for.end:                                          ; preds = %for.cond
  call void @BLI_freelistN(%struct.ListBase* %ctx_data_list), !dbg !5663
  %16 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !5664
  call void @DAG_relations_tag_update(%struct.Main* %16), !dbg !5665
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5666
  call void @WM_event_add_notifier(%struct.bContext* %17, i32 85590019, i8* null), !dbg !5667
  ret i32 4, !dbg !5668
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_constraint_add(%struct.wmOperatorType* %ot) #0 !dbg !5669 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5670, metadata !DIExpression()), !dbg !5671
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5672
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5673
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i64 0, i64 0), i8** %name, align 8, !dbg !5674
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5675
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5676
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.47, i64 0, i64 0), i8** %description, align 8, !dbg !5677
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5678
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5679
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.48, i64 0, i64 0), i8** %idname, align 8, !dbg !5680
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5681
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5682
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5683
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5684
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5685
  store i32 (%struct.bContext*, %struct.wmOperator*)* @object_constraint_add_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5686
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5687
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !5688
  store i32 (%struct.bContext*)* @ED_operator_object_active_editable, i32 (%struct.bContext*)** %poll, align 8, !dbg !5689
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5690
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !5691
  store i16 3, i16* %flag, align 8, !dbg !5692
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5693
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !5694
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5694
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !5693
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @constraint_type_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.51, i64 0, i64 0)), !dbg !5695
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5696
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 13, !dbg !5697
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !5698
  ret void, !dbg !5699
}

declare dso_local i32 @WM_menu_invoke(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @object_constraint_add_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5700 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %type = alloca i32, align 4
  %with_targets = alloca i16, align 2
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5701, metadata !DIExpression()), !dbg !5702
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5703, metadata !DIExpression()), !dbg !5704
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5705, metadata !DIExpression()), !dbg !5706
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5707
  %call = call %struct.Object* @ED_object_active_context(%struct.bContext* %0), !dbg !5708
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !5706
  call void @llvm.dbg.declare(metadata i32* %type, metadata !5709, metadata !DIExpression()), !dbg !5710
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5711
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !5712
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5712
  %call1 = call i32 @RNA_enum_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0)), !dbg !5713
  store i32 %call1, i32* %type, align 4, !dbg !5710
  call void @llvm.dbg.declare(metadata i16* %with_targets, metadata !5714, metadata !DIExpression()), !dbg !5715
  store i16 0, i16* %with_targets, align 2, !dbg !5715
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5716
  %tobool = icmp ne %struct.Object* %3, null, !dbg !5716
  br i1 %tobool, label %if.end, label %if.then, !dbg !5718

if.then:                                          ; preds = %entry
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5719
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 8, !dbg !5721
  %5 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !5721
  call void @BKE_report(%struct.ReportList* %5, i32 32, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.92, i64 0, i64 0)), !dbg !5722
  store i32 2, i32* %retval, align 4, !dbg !5723
  br label %return, !dbg !5723

if.end:                                           ; preds = %entry
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5724
  %idname = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 2, !dbg !5726
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !5724
  %call2 = call i8* @strstr(i8* %arraydecay, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i64 0, i64 0)) #6, !dbg !5727
  %tobool3 = icmp ne i8* %call2, null, !dbg !5727
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !5728

if.then4:                                         ; preds = %if.end
  store i16 1, i16* %with_targets, align 2, !dbg !5729
  br label %if.end5, !dbg !5730

if.end5:                                          ; preds = %if.then4, %if.end
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5731
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5732
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5733
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5734
  %constraints = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 106, !dbg !5735
  %11 = load i32, i32* %type, align 4, !dbg !5736
  %12 = load i16, i16* %with_targets, align 2, !dbg !5737
  %conv = trunc i16 %12 to i8, !dbg !5737
  %call6 = call i32 @constraint_add_exec(%struct.bContext* %7, %struct.wmOperator* %8, %struct.Object* %9, %struct.ListBase* %constraints, i32 %11, i8 zeroext %conv), !dbg !5738
  store i32 %call6, i32* %retval, align 4, !dbg !5739
  br label %return, !dbg !5739

return:                                           ; preds = %if.end5, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !5740
  ret i32 %13, !dbg !5740
}

declare dso_local %struct.PropertyRNA* @RNA_def_enum(i8*, i8*, %struct.EnumPropertyItem*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_constraint_add_with_targets(%struct.wmOperatorType* %ot) #0 !dbg !5741 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5742, metadata !DIExpression()), !dbg !5743
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5744
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5745
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.52, i64 0, i64 0), i8** %name, align 8, !dbg !5746
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5747
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5748
  store i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.53, i64 0, i64 0), i8** %description, align 8, !dbg !5749
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5750
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5751
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.54, i64 0, i64 0), i8** %idname, align 8, !dbg !5752
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5753
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5754
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5755
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5756
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5757
  store i32 (%struct.bContext*, %struct.wmOperator*)* @object_constraint_add_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5758
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5759
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !5760
  store i32 (%struct.bContext*)* @ED_operator_object_active_editable, i32 (%struct.bContext*)** %poll, align 8, !dbg !5761
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5762
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !5763
  store i16 3, i16* %flag, align 8, !dbg !5764
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5765
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !5766
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5766
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !5765
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @constraint_type_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.51, i64 0, i64 0)), !dbg !5767
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5768
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 13, !dbg !5769
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !5770
  ret void, !dbg !5771
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @POSE_OT_constraint_add(%struct.wmOperatorType* %ot) #0 !dbg !5772 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5773, metadata !DIExpression()), !dbg !5774
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5775
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5776
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i64 0, i64 0), i8** %name, align 8, !dbg !5777
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5778
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5779
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.55, i64 0, i64 0), i8** %description, align 8, !dbg !5780
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5781
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5782
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.56, i64 0, i64 0), i8** %idname, align 8, !dbg !5783
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5784
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5785
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5786
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5787
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5788
  store i32 (%struct.bContext*, %struct.wmOperator*)* @pose_constraint_add_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5789
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5790
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !5791
  store i32 (%struct.bContext*)* @ED_operator_posemode_exclusive, i32 (%struct.bContext*)** %poll, align 8, !dbg !5792
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5793
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !5794
  store i16 3, i16* %flag, align 8, !dbg !5795
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5796
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !5797
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5797
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !5796
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @constraint_type_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.51, i64 0, i64 0)), !dbg !5798
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5799
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 13, !dbg !5800
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !5801
  ret void, !dbg !5802
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @pose_constraint_add_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5803 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %type = alloca i32, align 4
  %with_targets = alloca i16, align 2
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5804, metadata !DIExpression()), !dbg !5805
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5806, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5808, metadata !DIExpression()), !dbg !5809
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5810
  %call = call %struct.Object* @ED_object_active_context(%struct.bContext* %0), !dbg !5811
  %call1 = call %struct.Object* @BKE_object_pose_armature_get(%struct.Object* %call), !dbg !5812
  store %struct.Object* %call1, %struct.Object** %ob, align 8, !dbg !5809
  call void @llvm.dbg.declare(metadata i32* %type, metadata !5813, metadata !DIExpression()), !dbg !5814
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5815
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !5816
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5816
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0)), !dbg !5817
  store i32 %call2, i32* %type, align 4, !dbg !5814
  call void @llvm.dbg.declare(metadata i16* %with_targets, metadata !5818, metadata !DIExpression()), !dbg !5819
  store i16 0, i16* %with_targets, align 2, !dbg !5819
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5820
  %tobool = icmp ne %struct.Object* %3, null, !dbg !5820
  br i1 %tobool, label %if.end, label %if.then, !dbg !5822

if.then:                                          ; preds = %entry
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5823
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 8, !dbg !5825
  %5 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !5825
  call void @BKE_report(%struct.ReportList* %5, i32 32, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.92, i64 0, i64 0)), !dbg !5826
  store i32 2, i32* %retval, align 4, !dbg !5827
  br label %return, !dbg !5827

if.end:                                           ; preds = %entry
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5828
  %idname = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 2, !dbg !5830
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !5828
  %call3 = call i8* @strstr(i8* %arraydecay, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i64 0, i64 0)) #6, !dbg !5831
  %tobool4 = icmp ne i8* %call3, null, !dbg !5831
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !5832

if.then5:                                         ; preds = %if.end
  store i16 1, i16* %with_targets, align 2, !dbg !5833
  br label %if.end6, !dbg !5834

if.end6:                                          ; preds = %if.then5, %if.end
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5835
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5836
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5837
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5838
  %call7 = call %struct.ListBase* @get_active_constraints(%struct.Object* %10), !dbg !5839
  %11 = load i32, i32* %type, align 4, !dbg !5840
  %12 = load i16, i16* %with_targets, align 2, !dbg !5841
  %conv = trunc i16 %12 to i8, !dbg !5841
  %call8 = call i32 @constraint_add_exec(%struct.bContext* %7, %struct.wmOperator* %8, %struct.Object* %9, %struct.ListBase* %call7, i32 %11, i8 zeroext %conv), !dbg !5842
  store i32 %call8, i32* %retval, align 4, !dbg !5843
  br label %return, !dbg !5843

return:                                           ; preds = %if.end6, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !5844
  ret i32 %13, !dbg !5844
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @POSE_OT_constraint_add_with_targets(%struct.wmOperatorType* %ot) #0 !dbg !5845 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5846, metadata !DIExpression()), !dbg !5847
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5848
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5849
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.52, i64 0, i64 0), i8** %name, align 8, !dbg !5850
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5851
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5852
  store i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.57, i64 0, i64 0), i8** %description, align 8, !dbg !5853
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5854
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5855
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.58, i64 0, i64 0), i8** %idname, align 8, !dbg !5856
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5857
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5858
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5859
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5860
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5861
  store i32 (%struct.bContext*, %struct.wmOperator*)* @pose_constraint_add_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5862
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5863
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !5864
  store i32 (%struct.bContext*)* @ED_operator_posemode_exclusive, i32 (%struct.bContext*)** %poll, align 8, !dbg !5865
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5866
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !5867
  store i16 3, i16* %flag, align 8, !dbg !5868
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5869
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !5870
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5870
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !5869
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @constraint_type_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.51, i64 0, i64 0)), !dbg !5871
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5872
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 13, !dbg !5873
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !5874
  ret void, !dbg !5875
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @POSE_OT_ik_add(%struct.wmOperatorType* %ot) #0 !dbg !5876 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5877, metadata !DIExpression()), !dbg !5878
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5879
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5880
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.59, i64 0, i64 0), i8** %name, align 8, !dbg !5881
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5882
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5883
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.60, i64 0, i64 0), i8** %description, align 8, !dbg !5884
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5885
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5886
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0), i8** %idname, align 8, !dbg !5887
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5888
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5889
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @pose_ik_add_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5890
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5891
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5892
  store i32 (%struct.bContext*, %struct.wmOperator*)* @pose_ik_add_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5893
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5894
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !5895
  store i32 (%struct.bContext*)* @ED_operator_posemode_exclusive, i32 (%struct.bContext*)** %poll, align 8, !dbg !5896
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5897
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !5898
  store i16 3, i16* %flag, align 8, !dbg !5899
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5900
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !5901
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5901
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !5900
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.64, i64 0, i64 0)), !dbg !5902
  ret void, !dbg !5903
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @pose_ik_add_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !5904 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %ob = alloca %struct.Object*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %pup = alloca %struct.uiPopupMenu*, align 8
  %layout = alloca %struct.uiLayout*, align 8
  %tar_ob = alloca %struct.Object*, align 8
  %tar_pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5905, metadata !DIExpression()), !dbg !5906
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5907, metadata !DIExpression()), !dbg !5908
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !5909, metadata !DIExpression()), !dbg !5910
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5911, metadata !DIExpression()), !dbg !5912
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5913
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !5914
  %call1 = call %struct.Object* @BKE_object_pose_armature_get(%struct.Object* %call), !dbg !5915
  store %struct.Object* %call1, %struct.Object** %ob, align 8, !dbg !5912
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !5916, metadata !DIExpression()), !dbg !5917
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5918
  %call2 = call %struct.bPoseChannel* @BKE_pose_channel_active(%struct.Object* %1), !dbg !5919
  store %struct.bPoseChannel* %call2, %struct.bPoseChannel** %pchan, align 8, !dbg !5917
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !5920, metadata !DIExpression()), !dbg !5921
  store %struct.bConstraint* null, %struct.bConstraint** %con, align 8, !dbg !5921
  call void @llvm.dbg.declare(metadata %struct.uiPopupMenu** %pup, metadata !5922, metadata !DIExpression()), !dbg !5927
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout, metadata !5928, metadata !DIExpression()), !dbg !5931
  call void @llvm.dbg.declare(metadata %struct.Object** %tar_ob, metadata !5932, metadata !DIExpression()), !dbg !5933
  store %struct.Object* null, %struct.Object** %tar_ob, align 8, !dbg !5933
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %tar_pchan, metadata !5934, metadata !DIExpression()), !dbg !5935
  store %struct.bPoseChannel* null, %struct.bPoseChannel** %tar_pchan, align 8, !dbg !5935
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5936
  %cmp = icmp eq %struct.Object* null, %2, !dbg !5936
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5936

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5936
  %cmp3 = icmp eq %struct.bPoseChannel* null, %3, !dbg !5936
  br i1 %cmp3, label %if.then, label %if.end, !dbg !5938

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5939
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 8, !dbg !5941
  %5 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !5941
  call void @BKE_report(%struct.ReportList* %5, i32 32, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.97, i64 0, i64 0)), !dbg !5942
  store i32 2, i32* %retval, align 4, !dbg !5943
  br label %return, !dbg !5943

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5944
  %constraints = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %6, i32 0, i32 3, !dbg !5946
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints, i32 0, i32 0, !dbg !5947
  %7 = load i8*, i8** %first, align 8, !dbg !5947
  %8 = bitcast i8* %7 to %struct.bConstraint*, !dbg !5944
  store %struct.bConstraint* %8, %struct.bConstraint** %con, align 8, !dbg !5948
  br label %for.cond, !dbg !5949

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5950
  %tobool = icmp ne %struct.bConstraint* %9, null, !dbg !5952
  br i1 %tobool, label %for.body, label %for.end, !dbg !5952

for.body:                                         ; preds = %for.cond
  %10 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5953
  %type = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %10, i32 0, i32 3, !dbg !5956
  %11 = load i16, i16* %type, align 8, !dbg !5956
  %conv = sext i16 %11 to i32, !dbg !5953
  %cmp4 = icmp eq i32 %conv, 3, !dbg !5957
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !5958

if.then6:                                         ; preds = %for.body
  br label %for.end, !dbg !5959

if.end7:                                          ; preds = %for.body
  br label %for.inc, !dbg !5960

for.inc:                                          ; preds = %if.end7
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5961
  %next = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 0, !dbg !5962
  %13 = load %struct.bConstraint*, %struct.bConstraint** %next, align 8, !dbg !5962
  store %struct.bConstraint* %13, %struct.bConstraint** %con, align 8, !dbg !5963
  br label %for.cond, !dbg !5964, !llvm.loop !5965

for.end:                                          ; preds = %if.then6, %for.cond
  %14 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5967
  %tobool8 = icmp ne %struct.bConstraint* %14, null, !dbg !5967
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !5969

if.then9:                                         ; preds = %for.end
  %15 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5970
  %reports10 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %15, i32 0, i32 8, !dbg !5972
  %16 = load %struct.ReportList*, %struct.ReportList** %reports10, align 8, !dbg !5972
  call void @BKE_report(%struct.ReportList* %16, i32 32, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.98, i64 0, i64 0)), !dbg !5973
  store i32 2, i32* %retval, align 4, !dbg !5974
  br label %return, !dbg !5974

if.end11:                                         ; preds = %for.end
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5975
  %call12 = call %struct.uiPopupMenu* @uiPupMenuBegin(%struct.bContext* %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.99, i64 0, i64 0), i32 0), !dbg !5976
  store %struct.uiPopupMenu* %call12, %struct.uiPopupMenu** %pup, align 8, !dbg !5977
  %18 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !5978
  %call13 = call %struct.uiLayout* @uiPupMenuLayout(%struct.uiPopupMenu* %18), !dbg !5979
  store %struct.uiLayout* %call13, %struct.uiLayout** %layout, align 8, !dbg !5980
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5981
  %call14 = call signext i16 @get_new_constraint_target(%struct.bContext* %19, i32 3, %struct.Object** %tar_ob, %struct.bPoseChannel** %tar_pchan, i16 signext 0), !dbg !5983
  %tobool15 = icmp ne i16 %call14, 0, !dbg !5983
  br i1 %tobool15, label %if.then16, label %if.else20, !dbg !5984

if.then16:                                        ; preds = %if.end11
  %20 = load %struct.bPoseChannel*, %struct.bPoseChannel** %tar_pchan, align 8, !dbg !5985
  %tobool17 = icmp ne %struct.bPoseChannel* %20, null, !dbg !5985
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !5988

if.then18:                                        ; preds = %if.then16
  %21 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !5989
  call void @uiItemBooleanO(%struct.uiLayout* %21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.100, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i64 0, i64 0), i32 1), !dbg !5990
  br label %if.end19, !dbg !5990

if.else:                                          ; preds = %if.then16
  %22 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !5991
  call void @uiItemBooleanO(%struct.uiLayout* %22, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.101, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i64 0, i64 0), i32 1), !dbg !5992
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then18
  br label %if.end21, !dbg !5993

if.else20:                                        ; preds = %if.end11
  %23 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !5994
  call void @uiItemBooleanO(%struct.uiLayout* %23, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.102, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i64 0, i64 0), i32 1), !dbg !5996
  %24 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !5997
  call void @uiItemBooleanO(%struct.uiLayout* %24, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.103, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i64 0, i64 0), i32 0), !dbg !5998
  br label %if.end21

if.end21:                                         ; preds = %if.else20, %if.end19
  %25 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5999
  %26 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !6000
  call void @uiPupMenuEnd(%struct.bContext* %25, %struct.uiPopupMenu* %26), !dbg !6001
  store i32 32, i32* %retval, align 4, !dbg !6002
  br label %return, !dbg !6002

return:                                           ; preds = %if.end21, %if.then9, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !6003
  ret i32 %27, !dbg !6003
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @pose_ik_add_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6004 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %with_targets = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6005, metadata !DIExpression()), !dbg !6006
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6007, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6009, metadata !DIExpression()), !dbg !6010
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6011
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !6012
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !6010
  call void @llvm.dbg.declare(metadata i8* %with_targets, metadata !6013, metadata !DIExpression()), !dbg !6014
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6015
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !6016
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6016
  %call1 = call i32 @RNA_boolean_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i64 0, i64 0)), !dbg !6017
  %conv = trunc i32 %call1 to i8, !dbg !6017
  store i8 %conv, i8* %with_targets, align 1, !dbg !6014
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6018
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6019
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6020
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6021
  %call2 = call %struct.ListBase* @get_active_constraints(%struct.Object* %6), !dbg !6022
  %7 = load i8, i8* %with_targets, align 1, !dbg !6023
  %call3 = call i32 @constraint_add_exec(%struct.bContext* %3, %struct.wmOperator* %4, %struct.Object* %5, %struct.ListBase* %call2, i32 3, i8 zeroext %7), !dbg !6024
  ret i32 %call3, !dbg !6025
}

declare dso_local %struct.PropertyRNA* @RNA_def_boolean(i8*, i8*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @POSE_OT_ik_clear(%struct.wmOperatorType* %ot) #0 !dbg !6026 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6027, metadata !DIExpression()), !dbg !6028
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6029
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6030
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.65, i64 0, i64 0), i8** %name, align 8, !dbg !6031
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6032
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6033
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.66, i64 0, i64 0), i8** %description, align 8, !dbg !6034
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6035
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6036
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.67, i64 0, i64 0), i8** %idname, align 8, !dbg !6037
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6038
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6039
  store i32 (%struct.bContext*, %struct.wmOperator*)* @pose_ik_clear_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6040
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6041
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6042
  store i32 (%struct.bContext*)* @ED_operator_posemode_exclusive, i32 (%struct.bContext*)** %poll, align 8, !dbg !6043
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6044
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6045
  store i16 3, i16* %flag, align 8, !dbg !6046
  ret void, !dbg !6047
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @pose_ik_clear_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !6048 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %ctx_data_list = alloca %struct.ListBase, align 8
  %ctx_link = alloca %struct.CollectionPointerLink*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %next = alloca %struct.bConstraint*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6049, metadata !DIExpression()), !dbg !6050
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !6051, metadata !DIExpression()), !dbg !6052
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6053, metadata !DIExpression()), !dbg !6054
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6055
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !6056
  %call1 = call %struct.Object* @BKE_object_pose_armature_get(%struct.Object* %call), !dbg !6057
  store %struct.Object* %call1, %struct.Object** %ob, align 8, !dbg !6054
  call void @llvm.dbg.declare(metadata %struct.ListBase* %ctx_data_list, metadata !6058, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.declare(metadata %struct.CollectionPointerLink** %ctx_link, metadata !6061, metadata !DIExpression()), !dbg !6060
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6060
  %call2 = call i32 @CTX_data_selected_pose_bones(%struct.bContext* %1, %struct.ListBase* %ctx_data_list), !dbg !6060
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %ctx_data_list, i32 0, i32 0, !dbg !6062
  %2 = load i8*, i8** %first, align 8, !dbg !6062
  %3 = bitcast i8* %2 to %struct.CollectionPointerLink*, !dbg !6062
  store %struct.CollectionPointerLink* %3, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !6062
  br label %for.cond, !dbg !6062

for.cond:                                         ; preds = %for.inc13, %entry
  %4 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !6064
  %tobool = icmp ne %struct.CollectionPointerLink* %4, null, !dbg !6062
  br i1 %tobool, label %for.body, label %for.end15, !dbg !6062

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !6066, metadata !DIExpression()), !dbg !6068
  %5 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !6068
  %ptr = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %5, i32 0, i32 2, !dbg !6068
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !6068
  %6 = load i8*, i8** %data, align 8, !dbg !6068
  %7 = bitcast i8* %6 to %struct.bPoseChannel*, !dbg !6068
  store %struct.bPoseChannel* %7, %struct.bPoseChannel** %pchan, align 8, !dbg !6068
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !6069, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %next, metadata !6072, metadata !DIExpression()), !dbg !6073
  %8 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6074
  %constraints = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %8, i32 0, i32 3, !dbg !6076
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints, i32 0, i32 0, !dbg !6077
  %9 = load i8*, i8** %first3, align 8, !dbg !6077
  %10 = bitcast i8* %9 to %struct.bConstraint*, !dbg !6074
  store %struct.bConstraint* %10, %struct.bConstraint** %con, align 8, !dbg !6078
  br label %for.cond4, !dbg !6079

for.cond4:                                        ; preds = %for.inc, %for.body
  %11 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6080
  %tobool5 = icmp ne %struct.bConstraint* %11, null, !dbg !6082
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !6082

for.body6:                                        ; preds = %for.cond4
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6083
  %next7 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 0, !dbg !6085
  %13 = load %struct.bConstraint*, %struct.bConstraint** %next7, align 8, !dbg !6085
  store %struct.bConstraint* %13, %struct.bConstraint** %next, align 8, !dbg !6086
  %14 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6087
  %type = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %14, i32 0, i32 3, !dbg !6089
  %15 = load i16, i16* %type, align 8, !dbg !6089
  %conv = sext i16 %15 to i32, !dbg !6087
  %cmp = icmp eq i32 %conv, 3, !dbg !6090
  br i1 %cmp, label %if.then, label %if.end, !dbg !6091

if.then:                                          ; preds = %for.body6
  %16 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6092
  %constraints9 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %16, i32 0, i32 3, !dbg !6094
  %17 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6095
  %call10 = call zeroext i8 @BKE_constraint_remove(%struct.ListBase* %constraints9, %struct.bConstraint* %17), !dbg !6096
  br label %if.end, !dbg !6097

if.end:                                           ; preds = %if.then, %for.body6
  br label %for.inc, !dbg !6098

for.inc:                                          ; preds = %if.end
  %18 = load %struct.bConstraint*, %struct.bConstraint** %next, align 8, !dbg !6099
  store %struct.bConstraint* %18, %struct.bConstraint** %con, align 8, !dbg !6100
  br label %for.cond4, !dbg !6101, !llvm.loop !6102

for.end:                                          ; preds = %for.cond4
  %19 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6104
  %constflag = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %19, i32 0, i32 9, !dbg !6105
  %20 = load i8, i8* %constflag, align 8, !dbg !6106
  %conv11 = zext i8 %20 to i32, !dbg !6106
  %and = and i32 %conv11, -10, !dbg !6106
  %conv12 = trunc i32 %and to i8, !dbg !6106
  store i8 %conv12, i8* %constflag, align 8, !dbg !6106
  br label %for.inc13, !dbg !6107

for.inc13:                                        ; preds = %for.end
  %21 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !6064
  %next14 = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %21, i32 0, i32 0, !dbg !6064
  %22 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %next14, align 8, !dbg !6064
  store %struct.CollectionPointerLink* %22, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !6064
  br label %for.cond, !dbg !6064, !llvm.loop !6108

for.end15:                                        ; preds = %for.cond
  call void @BLI_freelistN(%struct.ListBase* %ctx_data_list), !dbg !6110
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6111
  %id = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 0, !dbg !6112
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !6113
  %24 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6114
  %25 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6115
  %26 = bitcast %struct.Object* %25 to i8*, !dbg !6115
  call void @WM_event_add_notifier(%struct.bContext* %24, i32 85590020, i8* %26), !dbg !6116
  ret i32 4, !dbg !6117
}

declare dso_local %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local zeroext i8 @BKE_object_exists_check(%struct.Object*) #2

declare dso_local %struct.Bone* @BKE_armature_find_bone_name(%struct.bArmature*, i8*) #2

declare dso_local %struct.bArmature* @BKE_armature_from_object(%struct.Object*) #2

declare dso_local void @BIK_test_constraint(%struct.Object*, %struct.bConstraint*) #2

declare dso_local %struct.MovieTrackingObject* @BKE_tracking_object_get_named(%struct.MovieTracking*, i8*) #2

declare dso_local %struct.MovieTrackingObject* @BKE_tracking_object_get_camera(%struct.MovieTracking*) #2

declare dso_local %struct.MovieTrackingTrack* @BKE_tracking_track_get_named(%struct.MovieTracking*, %struct.MovieTrackingObject*, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @edit_constraint_invoke_properties(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6118 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  %ob = alloca %struct.Object*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %list = alloca %struct.ListBase*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6119, metadata !DIExpression()), !dbg !6120
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6121, metadata !DIExpression()), !dbg !6122
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !6123, metadata !DIExpression()), !dbg !6124
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6125
  call void @CTX_data_pointer_get_type(%struct.PointerRNA* sret %ptr, %struct.bContext* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.68, i64 0, i64 0), %struct.StructRNA* @RNA_Constraint), !dbg !6126
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6127, metadata !DIExpression()), !dbg !6128
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 0, !dbg !6129
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !6130
  %1 = load i8*, i8** %data, align 8, !dbg !6130
  %tobool = icmp ne i8* %1, null, !dbg !6131
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6131

cond.true:                                        ; preds = %entry
  %id1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 0, !dbg !6132
  %data2 = getelementptr inbounds %struct.anon, %struct.anon* %id1, i32 0, i32 0, !dbg !6133
  %2 = load i8*, i8** %data2, align 8, !dbg !6133
  br label %cond.end, !dbg !6131

cond.false:                                       ; preds = %entry
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6134
  %call = call %struct.Object* @ED_object_active_context(%struct.bContext* %3), !dbg !6135
  %4 = bitcast %struct.Object* %call to i8*, !dbg !6135
  br label %cond.end, !dbg !6131

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %2, %cond.true ], [ %4, %cond.false ], !dbg !6131
  %5 = bitcast i8* %cond to %struct.Object*, !dbg !6131
  store %struct.Object* %5, %struct.Object** %ob, align 8, !dbg !6128
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !6136, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list, metadata !6138, metadata !DIExpression()), !dbg !6139
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6140
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !6142
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !6142
  %call4 = call zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.68, i64 0, i64 0)), !dbg !6143
  %conv = zext i8 %call4 to i32, !dbg !6143
  %tobool5 = icmp ne i32 %conv, 0, !dbg !6143
  br i1 %tobool5, label %land.lhs.true, label %if.end, !dbg !6144

land.lhs.true:                                    ; preds = %cond.end
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6145
  %ptr6 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !6146
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr6, align 8, !dbg !6146
  %call7 = call zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0)), !dbg !6147
  %conv8 = zext i8 %call7 to i32, !dbg !6147
  %tobool9 = icmp ne i32 %conv8, 0, !dbg !6147
  br i1 %tobool9, label %if.then, label %if.end, !dbg !6148

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !6149
  br label %return, !dbg !6149

if.end:                                           ; preds = %land.lhs.true, %cond.end
  %data10 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !6150
  %10 = load i8*, i8** %data10, align 8, !dbg !6150
  %tobool11 = icmp ne i8* %10, null, !dbg !6152
  br i1 %tobool11, label %if.then12, label %if.end21, !dbg !6153

if.then12:                                        ; preds = %if.end
  %data13 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !6154
  %11 = load i8*, i8** %data13, align 8, !dbg !6154
  %12 = bitcast i8* %11 to %struct.bConstraint*, !dbg !6156
  store %struct.bConstraint* %12, %struct.bConstraint** %con, align 8, !dbg !6157
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6158
  %ptr14 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 7, !dbg !6159
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr14, align 8, !dbg !6159
  %15 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6160
  %name = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %15, i32 0, i32 7, !dbg !6161
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !6160
  call void @RNA_string_set(%struct.PointerRNA* %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.68, i64 0, i64 0), i8* %arraydecay), !dbg !6162
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6163
  %17 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6164
  %call15 = call %struct.ListBase* @get_constraint_lb(%struct.Object* %16, %struct.bConstraint* %17, %struct.bPoseChannel** null), !dbg !6165
  store %struct.ListBase* %call15, %struct.ListBase** %list, align 8, !dbg !6166
  %18 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6167
  %constraints = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 106, !dbg !6169
  %19 = load %struct.ListBase*, %struct.ListBase** %list, align 8, !dbg !6170
  %cmp = icmp eq %struct.ListBase* %constraints, %19, !dbg !6171
  br i1 %cmp, label %if.then17, label %if.else, !dbg !6172

if.then17:                                        ; preds = %if.then12
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6173
  %ptr18 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %20, i32 0, i32 7, !dbg !6174
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr18, align 8, !dbg !6174
  call void @RNA_enum_set(%struct.PointerRNA* %21, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0), i32 0), !dbg !6175
  br label %if.end20, !dbg !6175

if.else:                                          ; preds = %if.then12
  %22 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6176
  %ptr19 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %22, i32 0, i32 7, !dbg !6177
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr19, align 8, !dbg !6177
  call void @RNA_enum_set(%struct.PointerRNA* %23, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0), i32 1), !dbg !6178
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then17
  store i32 1, i32* %retval, align 4, !dbg !6179
  br label %return, !dbg !6179

if.end21:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6180
  br label %return, !dbg !6180

return:                                           ; preds = %if.end21, %if.end20, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !6181
  ret i32 %24, !dbg !6181
}

declare dso_local void @CTX_data_pointer_get_type(%struct.PointerRNA* sret, %struct.bContext*, i8*, %struct.StructRNA*) #2

declare dso_local %struct.Object* @ED_object_active_context(%struct.bContext*) #2

declare dso_local zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA*, i8*) #2

declare dso_local void @RNA_string_set(%struct.PointerRNA*, i8*, i8*) #2

declare dso_local void @RNA_enum_set(%struct.PointerRNA*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.bConstraint* @edit_constraint_property_get(%struct.wmOperator* %op, %struct.Object* %ob, i32 %type) #0 !dbg !6182 {
entry:
  %retval = alloca %struct.bConstraint*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %type.addr = alloca i32, align 4
  %constraint_name = alloca [64 x i8], align 16
  %owner = alloca i32, align 4
  %con = alloca %struct.bConstraint*, align 8
  %list = alloca %struct.ListBase*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6185, metadata !DIExpression()), !dbg !6186
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6187, metadata !DIExpression()), !dbg !6188
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6189, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.declare(metadata [64 x i8]* %constraint_name, metadata !6191, metadata !DIExpression()), !dbg !6192
  call void @llvm.dbg.declare(metadata i32* %owner, metadata !6193, metadata !DIExpression()), !dbg !6194
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6195
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !6196
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6196
  %call = call i32 @RNA_enum_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0)), !dbg !6197
  store i32 %call, i32* %owner, align 4, !dbg !6194
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !6198, metadata !DIExpression()), !dbg !6199
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list, metadata !6200, metadata !DIExpression()), !dbg !6201
  store %struct.ListBase* null, %struct.ListBase** %list, align 8, !dbg !6201
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6202
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !6203
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !6203
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %constraint_name, i64 0, i64 0, !dbg !6204
  call void @RNA_string_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.68, i64 0, i64 0), i8* %arraydecay), !dbg !6205
  %4 = load i32, i32* %owner, align 4, !dbg !6206
  %cmp = icmp eq i32 %4, 0, !dbg !6208
  br i1 %cmp, label %if.then, label %if.else, !dbg !6209

if.then:                                          ; preds = %entry
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6210
  %constraints = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 106, !dbg !6212
  store %struct.ListBase* %constraints, %struct.ListBase** %list, align 8, !dbg !6213
  br label %if.end11, !dbg !6214

if.else:                                          ; preds = %entry
  %6 = load i32, i32* %owner, align 4, !dbg !6215
  %cmp2 = icmp eq i32 %6, 1, !dbg !6217
  br i1 %cmp2, label %if.then3, label %if.else8, !dbg !6218

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !6219, metadata !DIExpression()), !dbg !6221
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6222
  %call4 = call %struct.bPoseChannel* @BKE_pose_channel_active(%struct.Object* %7), !dbg !6223
  store %struct.bPoseChannel* %call4, %struct.bPoseChannel** %pchan, align 8, !dbg !6221
  %8 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6224
  %tobool = icmp ne %struct.bPoseChannel* %8, null, !dbg !6224
  br i1 %tobool, label %if.then5, label %if.else7, !dbg !6226

if.then5:                                         ; preds = %if.then3
  %9 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6227
  %constraints6 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %9, i32 0, i32 3, !dbg !6228
  store %struct.ListBase* %constraints6, %struct.ListBase** %list, align 8, !dbg !6229
  br label %if.end, !dbg !6230

if.else7:                                         ; preds = %if.then3
  store %struct.bConstraint* null, %struct.bConstraint** %retval, align 8, !dbg !6231
  br label %return, !dbg !6231

if.end:                                           ; preds = %if.then5
  br label %if.end10, !dbg !6233

if.else8:                                         ; preds = %if.else
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6234
  %call9 = call %struct.ListBase* @get_active_constraints(%struct.Object* %10), !dbg !6236
  store %struct.ListBase* %call9, %struct.ListBase** %list, align 8, !dbg !6237
  br label %if.end10

if.end10:                                         ; preds = %if.else8, %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.then
  %11 = load %struct.ListBase*, %struct.ListBase** %list, align 8, !dbg !6238
  %arraydecay12 = getelementptr inbounds [64 x i8], [64 x i8]* %constraint_name, i64 0, i64 0, !dbg !6239
  %call13 = call %struct.bConstraint* @BKE_constraints_find_name(%struct.ListBase* %11, i8* %arraydecay12), !dbg !6240
  store %struct.bConstraint* %call13, %struct.bConstraint** %con, align 8, !dbg !6241
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6242
  %tobool14 = icmp ne %struct.bConstraint* %12, null, !dbg !6242
  br i1 %tobool14, label %land.lhs.true, label %if.end21, !dbg !6244

land.lhs.true:                                    ; preds = %if.end11
  %13 = load i32, i32* %type.addr, align 4, !dbg !6245
  %cmp15 = icmp ne i32 %13, 0, !dbg !6246
  br i1 %cmp15, label %land.lhs.true16, label %if.end21, !dbg !6247

land.lhs.true16:                                  ; preds = %land.lhs.true
  %14 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6248
  %type17 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %14, i32 0, i32 3, !dbg !6249
  %15 = load i16, i16* %type17, align 8, !dbg !6249
  %conv = sext i16 %15 to i32, !dbg !6248
  %16 = load i32, i32* %type.addr, align 4, !dbg !6250
  %cmp18 = icmp ne i32 %conv, %16, !dbg !6251
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !6252

if.then20:                                        ; preds = %land.lhs.true16
  store %struct.bConstraint* null, %struct.bConstraint** %con, align 8, !dbg !6253
  br label %if.end21, !dbg !6254

if.end21:                                         ; preds = %if.then20, %land.lhs.true16, %land.lhs.true, %if.end11
  %17 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6255
  store %struct.bConstraint* %17, %struct.bConstraint** %retval, align 8, !dbg !6256
  br label %return, !dbg !6256

return:                                           ; preds = %if.end21, %if.else7
  %18 = load %struct.bConstraint*, %struct.bConstraint** %retval, align 8, !dbg !6257
  ret %struct.bConstraint* %18, !dbg !6257
}

declare dso_local void @WM_event_add_notifier(%struct.bContext*, i32, i8*) #2

declare dso_local i32 @RNA_enum_get(%struct.PointerRNA*, i8*) #2

declare dso_local void @RNA_string_get(%struct.PointerRNA*, i8*, i8*) #2

declare dso_local %struct.bConstraint* @BKE_constraints_find_name(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @edit_constraint_poll_generic(%struct.bContext* %C, %struct.StructRNA* %rna_type) #0 !dbg !6258 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %rna_type.addr = alloca %struct.StructRNA*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6261, metadata !DIExpression()), !dbg !6262
  store %struct.StructRNA* %rna_type, %struct.StructRNA** %rna_type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %rna_type.addr, metadata !6263, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !6265, metadata !DIExpression()), !dbg !6266
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6267
  %1 = load %struct.StructRNA*, %struct.StructRNA** %rna_type.addr, align 8, !dbg !6268
  call void @CTX_data_pointer_get_type(%struct.PointerRNA* sret %ptr, %struct.bContext* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.68, i64 0, i64 0), %struct.StructRNA* %1), !dbg !6269
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6270, metadata !DIExpression()), !dbg !6271
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 0, !dbg !6272
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !6273
  %2 = load i8*, i8** %data, align 8, !dbg !6273
  %tobool = icmp ne i8* %2, null, !dbg !6274
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6274

cond.true:                                        ; preds = %entry
  %id1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 0, !dbg !6275
  %data2 = getelementptr inbounds %struct.anon, %struct.anon* %id1, i32 0, i32 0, !dbg !6276
  %3 = load i8*, i8** %data2, align 8, !dbg !6276
  br label %cond.end, !dbg !6274

cond.false:                                       ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6277
  %call = call %struct.Object* @ED_object_active_context(%struct.bContext* %4), !dbg !6278
  %5 = bitcast %struct.Object* %call to i8*, !dbg !6278
  br label %cond.end, !dbg !6274

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %3, %cond.true ], [ %5, %cond.false ], !dbg !6274
  %6 = bitcast i8* %cond to %struct.Object*, !dbg !6274
  store %struct.Object* %6, %struct.Object** %ob, align 8, !dbg !6271
  %data3 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !6279
  %7 = load i8*, i8** %data3, align 8, !dbg !6279
  %tobool4 = icmp ne i8* %7, null, !dbg !6281
  br i1 %tobool4, label %if.end, label %if.then, !dbg !6282

if.then:                                          ; preds = %cond.end
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6283
  call void @CTX_wm_operator_poll_msg_set(%struct.bContext* %8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i64 0, i64 0)), !dbg !6285
  store i32 0, i32* %retval, align 4, !dbg !6286
  br label %return, !dbg !6286

if.end:                                           ; preds = %cond.end
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6287
  %tobool5 = icmp ne %struct.Object* %9, null, !dbg !6287
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !6289

if.then6:                                         ; preds = %if.end
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6290
  call void @CTX_wm_operator_poll_msg_set(%struct.bContext* %10, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.71, i64 0, i64 0)), !dbg !6292
  store i32 0, i32* %retval, align 4, !dbg !6293
  br label %return, !dbg !6293

if.end7:                                          ; preds = %if.end
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6294
  %id8 = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 0, !dbg !6296
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id8, i32 0, i32 3, !dbg !6297
  %12 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !6297
  %tobool9 = icmp ne %struct.Library* %12, null, !dbg !6294
  br i1 %tobool9, label %if.then17, label %lor.lhs.false, !dbg !6298

lor.lhs.false:                                    ; preds = %if.end7
  %id10 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 0, !dbg !6299
  %data11 = getelementptr inbounds %struct.anon, %struct.anon* %id10, i32 0, i32 0, !dbg !6300
  %13 = load i8*, i8** %data11, align 8, !dbg !6300
  %tobool12 = icmp ne i8* %13, null, !dbg !6301
  br i1 %tobool12, label %land.lhs.true, label %if.end18, !dbg !6302

land.lhs.true:                                    ; preds = %lor.lhs.false
  %id13 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 0, !dbg !6303
  %data14 = getelementptr inbounds %struct.anon, %struct.anon* %id13, i32 0, i32 0, !dbg !6304
  %14 = load i8*, i8** %data14, align 8, !dbg !6304
  %15 = bitcast i8* %14 to %struct.ID*, !dbg !6305
  %lib15 = getelementptr inbounds %struct.ID, %struct.ID* %15, i32 0, i32 3, !dbg !6306
  %16 = load %struct.Library*, %struct.Library** %lib15, align 8, !dbg !6306
  %tobool16 = icmp ne %struct.Library* %16, null, !dbg !6307
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !6308

if.then17:                                        ; preds = %land.lhs.true, %if.end7
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6309
  call void @CTX_wm_operator_poll_msg_set(%struct.bContext* %17, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.72, i64 0, i64 0)), !dbg !6311
  store i32 0, i32* %retval, align 4, !dbg !6312
  br label %return, !dbg !6312

if.end18:                                         ; preds = %land.lhs.true, %lor.lhs.false
  store i32 1, i32* %retval, align 4, !dbg !6313
  br label %return, !dbg !6313

return:                                           ; preds = %if.end18, %if.then17, %if.then6, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !6314
  ret i32 %18, !dbg !6314
}

declare dso_local void @CTX_wm_operator_poll_msg_set(%struct.bContext*, i8*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_string(i8*, i8*, i8*, i32, i8*, i8*) #2

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @child_get_inverse_matrix(%struct.Scene* %scene, %struct.Object* %ob, %struct.bConstraint* %con, [4 x float]* %invmat, i32 %owner) #0 !dbg !6315 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %con.addr = alloca %struct.bConstraint*, align 8
  %invmat.addr = alloca [4 x float]*, align 8
  %owner.addr = alloca i32, align 4
  %pchan = alloca %struct.bPoseChannel*, align 8
  %con_last = alloca %struct.bConstraint*, align 8
  %imat = alloca [4 x [4 x float]], align 16
  %tmat = alloca [4 x [4 x float]], align 16
  %pmat = alloca [4 x [4 x float]], align 16
  %workob = alloca %struct.Object, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6319, metadata !DIExpression()), !dbg !6320
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6321, metadata !DIExpression()), !dbg !6322
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !6323, metadata !DIExpression()), !dbg !6324
  store [4 x float]* %invmat, [4 x float]** %invmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %invmat.addr, metadata !6325, metadata !DIExpression()), !dbg !6326
  store i32 %owner, i32* %owner.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %owner.addr, metadata !6327, metadata !DIExpression()), !dbg !6328
  %0 = load [4 x float]*, [4 x float]** %invmat.addr, align 8, !dbg !6329
  call void @unit_m4([4 x float]* %0), !dbg !6330
  %1 = load i32, i32* %owner.addr, align 4, !dbg !6331
  %cmp = icmp eq i32 %1, 1, !dbg !6333
  br i1 %cmp, label %if.then, label %if.end34, !dbg !6334

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !6335, metadata !DIExpression()), !dbg !6337
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6338
  %tobool = icmp ne %struct.Object* %2, null, !dbg !6338
  br i1 %tobool, label %land.lhs.true, label %if.end33, !dbg !6340

land.lhs.true:                                    ; preds = %if.then
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6341
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 18, !dbg !6342
  %4 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !6342
  %tobool1 = icmp ne %struct.bPose* %4, null, !dbg !6341
  br i1 %tobool1, label %land.lhs.true2, label %if.end33, !dbg !6343

land.lhs.true2:                                   ; preds = %land.lhs.true
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6344
  %call = call %struct.bPoseChannel* @BKE_pose_channel_active(%struct.Object* %5), !dbg !6345
  store %struct.bPoseChannel* %call, %struct.bPoseChannel** %pchan, align 8, !dbg !6346
  %tobool3 = icmp ne %struct.bPoseChannel* %call, null, !dbg !6346
  br i1 %tobool3, label %if.then4, label %if.end33, !dbg !6347

if.then4:                                         ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con_last, metadata !6348, metadata !DIExpression()), !dbg !6350
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !6351, metadata !DIExpression()), !dbg !6352
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %tmat, metadata !6353, metadata !DIExpression()), !dbg !6354
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %pmat, metadata !6355, metadata !DIExpression()), !dbg !6356
  %6 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6357
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6358
  call void @BKE_pose_where_is(%struct.Scene* %6, %struct.Object* %7), !dbg !6359
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pmat, i64 0, i64 0, !dbg !6360
  %8 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6361
  %pose_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %8, i32 0, i32 29, !dbg !6362
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat, i64 0, i64 0, !dbg !6361
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay5), !dbg !6363
  %9 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6364
  %constraints = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %9, i32 0, i32 3, !dbg !6365
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints, i32 0, i32 1, !dbg !6366
  %10 = load i8*, i8** %last, align 8, !dbg !6366
  %11 = bitcast i8* %10 to %struct.bConstraint*, !dbg !6364
  store %struct.bConstraint* %11, %struct.bConstraint** %con_last, align 8, !dbg !6367
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6368
  %prev = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 1, !dbg !6369
  %13 = load %struct.bConstraint*, %struct.bConstraint** %prev, align 8, !dbg !6369
  %14 = bitcast %struct.bConstraint* %13 to i8*, !dbg !6368
  %15 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6370
  %constraints6 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %15, i32 0, i32 3, !dbg !6371
  %last7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints6, i32 0, i32 1, !dbg !6372
  store i8* %14, i8** %last7, align 8, !dbg !6373
  %16 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6374
  %prev8 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %16, i32 0, i32 1, !dbg !6376
  %17 = load %struct.bConstraint*, %struct.bConstraint** %prev8, align 8, !dbg !6376
  %tobool9 = icmp ne %struct.bConstraint* %17, null, !dbg !6374
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !6377

if.then10:                                        ; preds = %if.then4
  %18 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6378
  %prev11 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %18, i32 0, i32 1, !dbg !6380
  %19 = load %struct.bConstraint*, %struct.bConstraint** %prev11, align 8, !dbg !6380
  %next = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %19, i32 0, i32 0, !dbg !6381
  store %struct.bConstraint* null, %struct.bConstraint** %next, align 8, !dbg !6382
  br label %if.end, !dbg !6383

if.else:                                          ; preds = %if.then4
  %20 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6384
  %constraints12 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %20, i32 0, i32 3, !dbg !6386
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints12, i32 0, i32 0, !dbg !6387
  store i8* null, i8** %first, align 8, !dbg !6388
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then10
  %21 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6389
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6390
  call void @BKE_pose_where_is(%struct.Scene* %21, %struct.Object* %22), !dbg !6391
  %arraydecay13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !6392
  %23 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6393
  %pose_mat14 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %23, i32 0, i32 29, !dbg !6394
  %arraydecay15 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat14, i64 0, i64 0, !dbg !6393
  %call16 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay13, [4 x float]* %arraydecay15), !dbg !6395
  %arraydecay17 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !6396
  %arraydecay18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pmat, i64 0, i64 0, !dbg !6397
  %arraydecay19 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !6398
  call void @mul_m4_m4m4([4 x float]* %arraydecay17, [4 x float]* %arraydecay18, [4 x float]* %arraydecay19), !dbg !6399
  %24 = load [4 x float]*, [4 x float]** %invmat.addr, align 8, !dbg !6400
  %arraydecay20 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !6401
  %call21 = call zeroext i8 @invert_m4_m4([4 x float]* %24, [4 x float]* %arraydecay20), !dbg !6402
  %25 = load %struct.bConstraint*, %struct.bConstraint** %con_last, align 8, !dbg !6403
  %26 = bitcast %struct.bConstraint* %25 to i8*, !dbg !6403
  %27 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6404
  %constraints22 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %27, i32 0, i32 3, !dbg !6405
  %last23 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints22, i32 0, i32 1, !dbg !6406
  store i8* %26, i8** %last23, align 8, !dbg !6407
  %28 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6408
  %prev24 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %28, i32 0, i32 1, !dbg !6410
  %29 = load %struct.bConstraint*, %struct.bConstraint** %prev24, align 8, !dbg !6410
  %tobool25 = icmp ne %struct.bConstraint* %29, null, !dbg !6408
  br i1 %tobool25, label %if.then26, label %if.else29, !dbg !6411

if.then26:                                        ; preds = %if.end
  %30 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6412
  %31 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6414
  %prev27 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %31, i32 0, i32 1, !dbg !6415
  %32 = load %struct.bConstraint*, %struct.bConstraint** %prev27, align 8, !dbg !6415
  %next28 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %32, i32 0, i32 0, !dbg !6416
  store %struct.bConstraint* %30, %struct.bConstraint** %next28, align 8, !dbg !6417
  br label %if.end32, !dbg !6418

if.else29:                                        ; preds = %if.end
  %33 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6419
  %34 = bitcast %struct.bConstraint* %33 to i8*, !dbg !6419
  %35 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6421
  %constraints30 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %35, i32 0, i32 3, !dbg !6422
  %first31 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints30, i32 0, i32 0, !dbg !6423
  store i8* %34, i8** %first31, align 8, !dbg !6424
  br label %if.end32

if.end32:                                         ; preds = %if.else29, %if.then26
  %36 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6425
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6426
  call void @BKE_pose_where_is(%struct.Scene* %36, %struct.Object* %37), !dbg !6427
  br label %if.end33, !dbg !6428

if.end33:                                         ; preds = %if.end32, %land.lhs.true2, %land.lhs.true, %if.then
  br label %if.end34, !dbg !6429

if.end34:                                         ; preds = %if.end33, %entry
  %38 = load i32, i32* %owner.addr, align 4, !dbg !6430
  %cmp35 = icmp eq i32 %38, 0, !dbg !6432
  br i1 %cmp35, label %if.then36, label %if.end42, !dbg !6433

if.then36:                                        ; preds = %if.end34
  %39 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6434
  %tobool37 = icmp ne %struct.Object* %39, null, !dbg !6434
  br i1 %tobool37, label %if.then38, label %if.end41, !dbg !6437

if.then38:                                        ; preds = %if.then36
  call void @llvm.dbg.declare(metadata %struct.Object* %workob, metadata !6438, metadata !DIExpression()), !dbg !6440
  %40 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6441
  %41 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6442
  call void @BKE_object_workob_calc_parent(%struct.Scene* %40, %struct.Object* %41, %struct.Object* %workob), !dbg !6443
  %42 = load [4 x float]*, [4 x float]** %invmat.addr, align 8, !dbg !6444
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %workob, i32 0, i32 47, !dbg !6445
  %arraydecay39 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !6446
  %call40 = call zeroext i8 @invert_m4_m4([4 x float]* %42, [4 x float]* %arraydecay39), !dbg !6447
  br label %if.end41, !dbg !6448

if.end41:                                         ; preds = %if.then38, %if.then36
  br label %if.end42, !dbg !6449

if.end42:                                         ; preds = %if.end41, %if.end34
  ret void, !dbg !6450
}

declare dso_local void @unit_m4([4 x float]*) #2

declare dso_local void @BKE_pose_where_is(%struct.Scene*, %struct.Object*) #2

declare dso_local void @copy_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local zeroext i8 @invert_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local void @mul_m4_m4m4([4 x float]*, [4 x float]*, [4 x float]*) #2

declare dso_local void @BKE_object_workob_calc_parent(%struct.Scene*, %struct.Object*, %struct.Object*) #2

declare dso_local i32 @RNA_int_get(%struct.PointerRNA*, i8*) #2

declare dso_local %struct.FCurve* @list_find_fcurve(%struct.ListBase*, i8*, i32) #2

declare dso_local %struct.bAction* @verify_adt_action(%struct.ID*, i16 signext) #2

declare dso_local %struct.FCurve* @verify_fcurve(%struct.bAction*, i8*, %struct.PointerRNA*, i8*, i32, i16 signext) #2

declare dso_local void @RNA_pointer_create(%struct.ID*, %struct.StructRNA*, i8*, %struct.PointerRNA*) #2

declare dso_local %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA*, i8*) #2

declare dso_local i8* @RNA_path_from_ID_to_property(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local %struct.FModifier* @add_fmodifier(%struct.ListBase*, i32) #2

declare dso_local zeroext i8 @BKE_constraint_remove(%struct.ListBase*, %struct.bConstraint*) #2

declare dso_local void @BIK_clear_data(%struct.bPose*) #2

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

declare dso_local void @BLI_insertlinkafter(%struct.ListBase*, i8*, i8*) #2

declare dso_local void @BLI_insertlinkbefore(%struct.ListBase*, i8*, i8*) #2

declare dso_local %struct.Main* @CTX_data_main(%struct.bContext*) #2

declare dso_local %struct.Object* @BKE_object_pose_armature_get(%struct.Object*) #2

declare dso_local %struct.Object* @CTX_data_active_object(%struct.bContext*) #2

declare dso_local i32 @CTX_data_selected_pose_bones(%struct.bContext*, %struct.ListBase*) #2

declare dso_local void @BKE_constraints_free(%struct.ListBase*) #2

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

declare dso_local i32 @CTX_data_selected_editable_objects(%struct.bContext*, %struct.ListBase*) #2

declare dso_local %struct.bPoseChannel* @CTX_data_active_pose_bone(%struct.bContext*) #2

declare dso_local void @BKE_constraints_copy(%struct.ListBase*, %struct.ListBase*, i8 zeroext) #2

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8*) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @constraint_add_exec(%struct.bContext* %C, %struct.wmOperator* %op, %struct.Object* %ob, %struct.ListBase* %list, i32 %type, i8 zeroext %setTarget) #0 !dbg !6451 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %type.addr = alloca i32, align 4
  %setTarget.addr = alloca i8, align 1
  %bmain = alloca %struct.Main*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %tar_ob = alloca %struct.Object*, align 8
  %tar_pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6454, metadata !DIExpression()), !dbg !6455
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6456, metadata !DIExpression()), !dbg !6457
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6458, metadata !DIExpression()), !dbg !6459
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !6460, metadata !DIExpression()), !dbg !6461
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6462, metadata !DIExpression()), !dbg !6463
  store i8 %setTarget, i8* %setTarget.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %setTarget.addr, metadata !6464, metadata !DIExpression()), !dbg !6465
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !6466, metadata !DIExpression()), !dbg !6467
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6468
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !6469
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !6467
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !6470, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !6472, metadata !DIExpression()), !dbg !6473
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6474
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6476
  %constraints = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 106, !dbg !6477
  %cmp = icmp eq %struct.ListBase* %1, %constraints, !dbg !6478
  br i1 %cmp, label %if.then, label %if.else, !dbg !6479

if.then:                                          ; preds = %entry
  store %struct.bPoseChannel* null, %struct.bPoseChannel** %pchan, align 8, !dbg !6480
  br label %if.end4, !dbg !6482

if.else:                                          ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6483
  %call1 = call %struct.bPoseChannel* @BKE_pose_channel_active(%struct.Object* %3), !dbg !6485
  store %struct.bPoseChannel* %call1, %struct.bPoseChannel** %pchan, align 8, !dbg !6486
  %4 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6487
  %cmp2 = icmp eq %struct.bPoseChannel* %4, null, !dbg !6489
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !6490

if.then3:                                         ; preds = %if.else
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6491
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 8, !dbg !6493
  %6 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !6493
  call void @BKE_report(%struct.ReportList* %6, i32 32, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.93, i64 0, i64 0)), !dbg !6494
  store i32 2, i32* %retval, align 4, !dbg !6495
  br label %return, !dbg !6495

if.end:                                           ; preds = %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  %7 = load i32, i32* %type.addr, align 4, !dbg !6496
  %cmp5 = icmp eq i32 %7, 0, !dbg !6498
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !6499

if.then6:                                         ; preds = %if.end4
  store i32 2, i32* %retval, align 4, !dbg !6500
  br label %return, !dbg !6500

if.end7:                                          ; preds = %if.end4
  %8 = load i32, i32* %type.addr, align 4, !dbg !6502
  %cmp8 = icmp eq i32 %8, 17, !dbg !6504
  br i1 %cmp8, label %land.lhs.true, label %if.end13, !dbg !6505

land.lhs.true:                                    ; preds = %if.end7
  %9 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6506
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6507
  %constraints9 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 106, !dbg !6508
  %cmp10 = icmp ne %struct.ListBase* %9, %constraints9, !dbg !6509
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !6510

if.then11:                                        ; preds = %land.lhs.true
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6511
  %reports12 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %11, i32 0, i32 8, !dbg !6513
  %12 = load %struct.ReportList*, %struct.ReportList** %reports12, align 8, !dbg !6513
  call void @BKE_report(%struct.ReportList* %12, i32 32, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.94, i64 0, i64 0)), !dbg !6514
  store i32 2, i32* %retval, align 4, !dbg !6515
  br label %return, !dbg !6515

if.end13:                                         ; preds = %land.lhs.true, %if.end7
  %13 = load i32, i32* %type.addr, align 4, !dbg !6516
  %cmp14 = icmp eq i32 %13, 3, !dbg !6518
  br i1 %cmp14, label %land.lhs.true15, label %if.end20, !dbg !6519

land.lhs.true15:                                  ; preds = %if.end13
  %14 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6520
  %tobool = icmp ne %struct.bPoseChannel* %14, null, !dbg !6520
  br i1 %tobool, label %lor.lhs.false, label %if.then18, !dbg !6521

lor.lhs.false:                                    ; preds = %land.lhs.true15
  %15 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6522
  %16 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6523
  %constraints16 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %16, i32 0, i32 3, !dbg !6524
  %cmp17 = icmp ne %struct.ListBase* %15, %constraints16, !dbg !6525
  br i1 %cmp17, label %if.then18, label %if.end20, !dbg !6526

if.then18:                                        ; preds = %lor.lhs.false, %land.lhs.true15
  %17 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6527
  %reports19 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %17, i32 0, i32 8, !dbg !6529
  %18 = load %struct.ReportList*, %struct.ReportList** %reports19, align 8, !dbg !6529
  call void @BKE_report(%struct.ReportList* %18, i32 32, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0)), !dbg !6530
  store i32 2, i32* %retval, align 4, !dbg !6531
  br label %return, !dbg !6531

if.end20:                                         ; preds = %lor.lhs.false, %if.end13
  %19 = load i32, i32* %type.addr, align 4, !dbg !6532
  %cmp21 = icmp eq i32 %19, 22, !dbg !6534
  br i1 %cmp21, label %land.lhs.true22, label %if.end29, !dbg !6535

land.lhs.true22:                                  ; preds = %if.end20
  %20 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6536
  %tobool23 = icmp ne %struct.bPoseChannel* %20, null, !dbg !6536
  br i1 %tobool23, label %lor.lhs.false24, label %if.then27, !dbg !6537

lor.lhs.false24:                                  ; preds = %land.lhs.true22
  %21 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6538
  %22 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6539
  %constraints25 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %22, i32 0, i32 3, !dbg !6540
  %cmp26 = icmp ne %struct.ListBase* %21, %constraints25, !dbg !6541
  br i1 %cmp26, label %if.then27, label %if.end29, !dbg !6542

if.then27:                                        ; preds = %lor.lhs.false24, %land.lhs.true22
  %23 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6543
  %reports28 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %23, i32 0, i32 8, !dbg !6545
  %24 = load %struct.ReportList*, %struct.ReportList** %reports28, align 8, !dbg !6545
  call void @BKE_report(%struct.ReportList* %24, i32 32, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.96, i64 0, i64 0)), !dbg !6546
  store i32 2, i32* %retval, align 4, !dbg !6547
  br label %return, !dbg !6547

if.end29:                                         ; preds = %lor.lhs.false24, %if.end20
  %25 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6548
  %tobool30 = icmp ne %struct.bPoseChannel* %25, null, !dbg !6548
  br i1 %tobool30, label %if.then31, label %if.else33, !dbg !6550

if.then31:                                        ; preds = %if.end29
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6551
  %27 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6552
  %28 = load i32, i32* %type.addr, align 4, !dbg !6553
  %conv = trunc i32 %28 to i16, !dbg !6553
  %call32 = call %struct.bConstraint* @BKE_constraint_add_for_pose(%struct.Object* %26, %struct.bPoseChannel* %27, i8* null, i16 signext %conv), !dbg !6554
  store %struct.bConstraint* %call32, %struct.bConstraint** %con, align 8, !dbg !6555
  br label %if.end36, !dbg !6556

if.else33:                                        ; preds = %if.end29
  %29 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6557
  %30 = load i32, i32* %type.addr, align 4, !dbg !6558
  %conv34 = trunc i32 %30 to i16, !dbg !6558
  %call35 = call %struct.bConstraint* @BKE_constraint_add_for_object(%struct.Object* %29, i8* null, i16 signext %conv34), !dbg !6559
  store %struct.bConstraint* %call35, %struct.bConstraint** %con, align 8, !dbg !6560
  br label %if.end36

if.end36:                                         ; preds = %if.else33, %if.then31
  %31 = load i8, i8* %setTarget.addr, align 1, !dbg !6561
  %tobool37 = icmp ne i8 %31, 0, !dbg !6561
  br i1 %tobool37, label %if.then38, label %if.end47, !dbg !6563

if.then38:                                        ; preds = %if.end36
  call void @llvm.dbg.declare(metadata %struct.Object** %tar_ob, metadata !6564, metadata !DIExpression()), !dbg !6566
  store %struct.Object* null, %struct.Object** %tar_ob, align 8, !dbg !6566
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %tar_pchan, metadata !6567, metadata !DIExpression()), !dbg !6568
  store %struct.bPoseChannel* null, %struct.bPoseChannel** %tar_pchan, align 8, !dbg !6568
  %32 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6569
  %33 = load i32, i32* %type.addr, align 4, !dbg !6571
  %call39 = call signext i16 @get_new_constraint_target(%struct.bContext* %32, i32 %33, %struct.Object** %tar_ob, %struct.bPoseChannel** %tar_pchan, i16 signext 1), !dbg !6572
  %tobool40 = icmp ne i16 %call39, 0, !dbg !6572
  br i1 %tobool40, label %if.then41, label %if.end46, !dbg !6573

if.then41:                                        ; preds = %if.then38
  %34 = load %struct.bPoseChannel*, %struct.bPoseChannel** %tar_pchan, align 8, !dbg !6574
  %tobool42 = icmp ne %struct.bPoseChannel* %34, null, !dbg !6574
  br i1 %tobool42, label %if.then43, label %if.else44, !dbg !6577

if.then43:                                        ; preds = %if.then41
  %35 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6578
  %36 = load %struct.Object*, %struct.Object** %tar_ob, align 8, !dbg !6579
  %37 = load %struct.bPoseChannel*, %struct.bPoseChannel** %tar_pchan, align 8, !dbg !6580
  %name = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %37, i32 0, i32 4, !dbg !6581
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !6580
  call void @set_constraint_nth_target(%struct.bConstraint* %35, %struct.Object* %36, i8* %arraydecay, i32 0), !dbg !6582
  br label %if.end45, !dbg !6582

if.else44:                                        ; preds = %if.then41
  %38 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6583
  %39 = load %struct.Object*, %struct.Object** %tar_ob, align 8, !dbg !6584
  call void @set_constraint_nth_target(%struct.bConstraint* %38, %struct.Object* %39, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.51, i64 0, i64 0), i32 0), !dbg !6585
  br label %if.end45

if.end45:                                         ; preds = %if.else44, %if.then43
  br label %if.end46, !dbg !6586

if.end46:                                         ; preds = %if.end45, %if.then38
  br label %if.end47, !dbg !6587

if.end47:                                         ; preds = %if.end46, %if.end36
  %40 = load i32, i32* %type.addr, align 4, !dbg !6588
  switch i32 %40, label %sw.default [
    i32 11, label %sw.bb
  ], !dbg !6589

sw.bb:                                            ; preds = %if.end47
  br label %sw.epilog, !dbg !6590

sw.default:                                       ; preds = %if.end47
  br label %sw.epilog, !dbg !6593

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %41 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6594
  call void @object_test_constraints(%struct.Object* %41), !dbg !6595
  %42 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6596
  %tobool48 = icmp ne %struct.bPoseChannel* %42, null, !dbg !6596
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !6598

if.then49:                                        ; preds = %sw.epilog
  %43 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6599
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %43, i32 0, i32 18, !dbg !6600
  %44 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !6600
  call void @BKE_pose_update_constraint_flags(%struct.bPose* %44), !dbg !6601
  br label %if.end50, !dbg !6601

if.end50:                                         ; preds = %if.then49, %sw.epilog
  %45 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !6602
  call void @DAG_relations_tag_update(%struct.Main* %45), !dbg !6603
  %46 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6604
  %type51 = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 3, !dbg !6606
  %47 = load i16, i16* %type51, align 8, !dbg !6606
  %conv52 = sext i16 %47 to i32, !dbg !6604
  %cmp53 = icmp eq i32 %conv52, 25, !dbg !6607
  br i1 %cmp53, label %land.lhs.true55, label %if.else61, !dbg !6608

land.lhs.true55:                                  ; preds = %if.end50
  %48 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6609
  %tobool56 = icmp ne %struct.bPoseChannel* %48, null, !dbg !6610
  br i1 %tobool56, label %if.then57, label %if.else61, !dbg !6611

if.then57:                                        ; preds = %land.lhs.true55
  %49 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6612
  %pose58 = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 18, !dbg !6614
  %50 = load %struct.bPose*, %struct.bPose** %pose58, align 8, !dbg !6614
  %flag = getelementptr inbounds %struct.bPose, %struct.bPose* %50, i32 0, i32 2, !dbg !6615
  %51 = load i16, i16* %flag, align 8, !dbg !6616
  %conv59 = sext i16 %51 to i32, !dbg !6616
  %or = or i32 %conv59, 1, !dbg !6616
  %conv60 = trunc i32 %or to i16, !dbg !6616
  store i16 %conv60, i16* %flag, align 8, !dbg !6616
  %52 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6617
  %id = getelementptr inbounds %struct.Object, %struct.Object* %52, i32 0, i32 0, !dbg !6618
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 3), !dbg !6619
  br label %if.end63, !dbg !6620

if.else61:                                        ; preds = %land.lhs.true55, %if.end50
  %53 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6621
  %id62 = getelementptr inbounds %struct.Object, %struct.Object* %53, i32 0, i32 0, !dbg !6622
  call void @DAG_id_tag_update(%struct.ID* %id62, i16 signext 1), !dbg !6623
  br label %if.end63

if.end63:                                         ; preds = %if.else61, %if.then57
  %54 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6624
  %55 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6625
  %56 = bitcast %struct.Object* %55 to i8*, !dbg !6625
  call void @WM_event_add_notifier(%struct.bContext* %54, i32 85590019, i8* %56), !dbg !6626
  store i32 4, i32* %retval, align 4, !dbg !6627
  br label %return, !dbg !6627

return:                                           ; preds = %if.end63, %if.then27, %if.then18, %if.then11, %if.then6, %if.then3
  %57 = load i32, i32* %retval, align 4, !dbg !6628
  ret i32 %57, !dbg !6628
}

declare dso_local %struct.bConstraint* @BKE_constraint_add_for_pose(%struct.Object*, %struct.bPoseChannel*, i8*, i16 signext) #2

declare dso_local %struct.bConstraint* @BKE_constraint_add_for_object(%struct.Object*, i8*, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define internal signext i16 @get_new_constraint_target(%struct.bContext* %C, i32 %con_type, %struct.Object** %tar_ob, %struct.bPoseChannel** %tar_pchan, i16 signext %add) #0 !dbg !6629 {
entry:
  %retval = alloca i16, align 2
  %C.addr = alloca %struct.bContext*, align 8
  %con_type.addr = alloca i32, align 4
  %tar_ob.addr = alloca %struct.Object**, align 8
  %tar_pchan.addr = alloca %struct.bPoseChannel**, align 8
  %add.addr = alloca i16, align 2
  %obact = alloca %struct.Object*, align 8
  %pchanact = alloca %struct.bPoseChannel*, align 8
  %only_curve = alloca i16, align 2
  %only_mesh = alloca i16, align 2
  %only_ob = alloca i16, align 2
  %found = alloca i16, align 2
  %ctx_data_list = alloca %struct.ListBase, align 8
  %ctx_link = alloca %struct.CollectionPointerLink*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %ctx_data_list18 = alloca %struct.ListBase, align 8
  %ctx_link19 = alloca %struct.CollectionPointerLink*, align 8
  %ob = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %bmain = alloca %struct.Main*, align 8
  %scene = alloca %struct.Scene*, align 8
  %base = alloca %struct.Base*, align 8
  %newbase = alloca %struct.Base*, align 8
  %obt = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6633, metadata !DIExpression()), !dbg !6634
  store i32 %con_type, i32* %con_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %con_type.addr, metadata !6635, metadata !DIExpression()), !dbg !6636
  store %struct.Object** %tar_ob, %struct.Object*** %tar_ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object*** %tar_ob.addr, metadata !6637, metadata !DIExpression()), !dbg !6638
  store %struct.bPoseChannel** %tar_pchan, %struct.bPoseChannel*** %tar_pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel*** %tar_pchan.addr, metadata !6639, metadata !DIExpression()), !dbg !6640
  store i16 %add, i16* %add.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %add.addr, metadata !6641, metadata !DIExpression()), !dbg !6642
  call void @llvm.dbg.declare(metadata %struct.Object** %obact, metadata !6643, metadata !DIExpression()), !dbg !6644
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6645
  %call = call %struct.Object* @ED_object_active_context(%struct.bContext* %0), !dbg !6646
  store %struct.Object* %call, %struct.Object** %obact, align 8, !dbg !6644
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchanact, metadata !6647, metadata !DIExpression()), !dbg !6648
  %1 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !6649
  %call1 = call %struct.bPoseChannel* @BKE_pose_channel_active(%struct.Object* %1), !dbg !6650
  store %struct.bPoseChannel* %call1, %struct.bPoseChannel** %pchanact, align 8, !dbg !6648
  call void @llvm.dbg.declare(metadata i16* %only_curve, metadata !6651, metadata !DIExpression()), !dbg !6652
  store i16 0, i16* %only_curve, align 2, !dbg !6652
  call void @llvm.dbg.declare(metadata i16* %only_mesh, metadata !6653, metadata !DIExpression()), !dbg !6654
  store i16 0, i16* %only_mesh, align 2, !dbg !6654
  call void @llvm.dbg.declare(metadata i16* %only_ob, metadata !6655, metadata !DIExpression()), !dbg !6656
  store i16 0, i16* %only_ob, align 2, !dbg !6656
  call void @llvm.dbg.declare(metadata i16* %found, metadata !6657, metadata !DIExpression()), !dbg !6658
  store i16 0, i16* %found, align 2, !dbg !6658
  %2 = load %struct.Object**, %struct.Object*** %tar_ob.addr, align 8, !dbg !6659
  store %struct.Object* null, %struct.Object** %2, align 8, !dbg !6660
  %3 = load %struct.bPoseChannel**, %struct.bPoseChannel*** %tar_pchan.addr, align 8, !dbg !6661
  store %struct.bPoseChannel* null, %struct.bPoseChannel** %3, align 8, !dbg !6662
  %4 = load i32, i32* %con_type.addr, align 4, !dbg !6663
  switch i32 %4, label %sw.epilog [
    i32 0, label %sw.bb
    i32 6, label %sw.bb
    i32 5, label %sw.bb
    i32 7, label %sw.bb
    i32 24, label %sw.bb
    i32 18, label %sw.bb2
    i32 4, label %sw.bb2
    i32 22, label %sw.bb2
    i32 20, label %sw.bb3
    i32 17, label %sw.bb4
  ], !dbg !6664

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i16 0, i16* %retval, align 2, !dbg !6665
  br label %return, !dbg !6665

sw.bb2:                                           ; preds = %entry, %entry, %entry
  store i16 1, i16* %only_curve, align 2, !dbg !6667
  store i16 1, i16* %only_ob, align 2, !dbg !6668
  store i16 0, i16* %add.addr, align 2, !dbg !6669
  br label %sw.epilog, !dbg !6670

sw.bb3:                                           ; preds = %entry
  store i16 1, i16* %only_mesh, align 2, !dbg !6671
  store i16 1, i16* %only_ob, align 2, !dbg !6672
  store i16 0, i16* %add.addr, align 2, !dbg !6673
  br label %sw.epilog, !dbg !6674

sw.bb4:                                           ; preds = %entry
  store i16 1, i16* %only_ob, align 2, !dbg !6675
  br label %sw.epilog, !dbg !6676

sw.epilog:                                        ; preds = %entry, %sw.bb4, %sw.bb3, %sw.bb2
  %5 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !6677
  %type = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 3, !dbg !6679
  %6 = load i16, i16* %type, align 8, !dbg !6679
  %conv = sext i16 %6 to i32, !dbg !6677
  %cmp = icmp eq i32 %conv, 25, !dbg !6680
  br i1 %cmp, label %land.lhs.true, label %if.end13, !dbg !6681

land.lhs.true:                                    ; preds = %sw.epilog
  %7 = load i16, i16* %only_ob, align 2, !dbg !6682
  %conv6 = sext i16 %7 to i32, !dbg !6682
  %cmp7 = icmp eq i32 %conv6, 0, !dbg !6683
  br i1 %cmp7, label %if.then, label %if.end13, !dbg !6684

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.ListBase* %ctx_data_list, metadata !6685, metadata !DIExpression()), !dbg !6688
  call void @llvm.dbg.declare(metadata %struct.CollectionPointerLink** %ctx_link, metadata !6689, metadata !DIExpression()), !dbg !6688
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6688
  %call9 = call i32 @CTX_data_selected_pose_bones(%struct.bContext* %8, %struct.ListBase* %ctx_data_list), !dbg !6688
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %ctx_data_list, i32 0, i32 0, !dbg !6690
  %9 = load i8*, i8** %first, align 8, !dbg !6690
  %10 = bitcast i8* %9 to %struct.CollectionPointerLink*, !dbg !6690
  store %struct.CollectionPointerLink* %10, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !6690
  br label %for.cond, !dbg !6690

for.cond:                                         ; preds = %for.inc, %if.then
  %11 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !6692
  %tobool = icmp ne %struct.CollectionPointerLink* %11, null, !dbg !6690
  br i1 %tobool, label %for.body, label %for.end, !dbg !6690

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !6694, metadata !DIExpression()), !dbg !6696
  %12 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !6696
  %ptr = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %12, i32 0, i32 2, !dbg !6696
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !6696
  %13 = load i8*, i8** %data, align 8, !dbg !6696
  %14 = bitcast i8* %13 to %struct.bPoseChannel*, !dbg !6696
  store %struct.bPoseChannel* %14, %struct.bPoseChannel** %pchan, align 8, !dbg !6696
  %15 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6697
  %16 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchanact, align 8, !dbg !6700
  %cmp10 = icmp ne %struct.bPoseChannel* %15, %16, !dbg !6701
  br i1 %cmp10, label %if.then12, label %if.end, !dbg !6702

if.then12:                                        ; preds = %for.body
  %17 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !6703
  %18 = load %struct.Object**, %struct.Object*** %tar_ob.addr, align 8, !dbg !6705
  store %struct.Object* %17, %struct.Object** %18, align 8, !dbg !6706
  %19 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6707
  %20 = load %struct.bPoseChannel**, %struct.bPoseChannel*** %tar_pchan.addr, align 8, !dbg !6708
  store %struct.bPoseChannel* %19, %struct.bPoseChannel** %20, align 8, !dbg !6709
  store i16 1, i16* %found, align 2, !dbg !6710
  br label %for.end, !dbg !6711

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6712

for.inc:                                          ; preds = %if.end
  %21 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !6692
  %next = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %21, i32 0, i32 0, !dbg !6692
  %22 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %next, align 8, !dbg !6692
  store %struct.CollectionPointerLink* %22, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !6692
  br label %for.cond, !dbg !6692, !llvm.loop !6713

for.end:                                          ; preds = %if.then12, %for.cond
  call void @BLI_freelistN(%struct.ListBase* %ctx_data_list), !dbg !6715
  br label %if.end13, !dbg !6716

if.end13:                                         ; preds = %for.end, %land.lhs.true, %sw.epilog
  %23 = load i16, i16* %found, align 2, !dbg !6717
  %conv14 = sext i16 %23 to i32, !dbg !6717
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !6719
  br i1 %cmp15, label %if.then17, label %if.end51, !dbg !6720

if.then17:                                        ; preds = %if.end13
  call void @llvm.dbg.declare(metadata %struct.ListBase* %ctx_data_list18, metadata !6721, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.declare(metadata %struct.CollectionPointerLink** %ctx_link19, metadata !6725, metadata !DIExpression()), !dbg !6724
  %24 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6724
  %call20 = call i32 @CTX_data_selected_objects(%struct.bContext* %24, %struct.ListBase* %ctx_data_list18), !dbg !6724
  %first21 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %ctx_data_list18, i32 0, i32 0, !dbg !6726
  %25 = load i8*, i8** %first21, align 8, !dbg !6726
  %26 = bitcast i8* %25 to %struct.CollectionPointerLink*, !dbg !6726
  store %struct.CollectionPointerLink* %26, %struct.CollectionPointerLink** %ctx_link19, align 8, !dbg !6726
  br label %for.cond22, !dbg !6726

for.cond22:                                       ; preds = %for.inc48, %if.then17
  %27 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link19, align 8, !dbg !6728
  %tobool23 = icmp ne %struct.CollectionPointerLink* %27, null, !dbg !6726
  br i1 %tobool23, label %for.body24, label %for.end50, !dbg !6726

for.body24:                                       ; preds = %for.cond22
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6730, metadata !DIExpression()), !dbg !6732
  %28 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link19, align 8, !dbg !6732
  %ptr25 = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %28, i32 0, i32 2, !dbg !6732
  %data26 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr25, i32 0, i32 2, !dbg !6732
  %29 = load i8*, i8** %data26, align 8, !dbg !6732
  %30 = bitcast i8* %29 to %struct.Object*, !dbg !6732
  store %struct.Object* %30, %struct.Object** %ob, align 8, !dbg !6732
  %31 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6733
  %32 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !6736
  %cmp27 = icmp ne %struct.Object* %31, %32, !dbg !6737
  br i1 %cmp27, label %land.lhs.true29, label %if.end47, !dbg !6738

land.lhs.true29:                                  ; preds = %for.body24
  %33 = load i16, i16* %only_curve, align 2, !dbg !6739
  %tobool30 = icmp ne i16 %33, 0, !dbg !6739
  br i1 %tobool30, label %lor.lhs.false, label %land.lhs.true35, !dbg !6740

lor.lhs.false:                                    ; preds = %land.lhs.true29
  %34 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6741
  %type31 = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 3, !dbg !6742
  %35 = load i16, i16* %type31, align 8, !dbg !6742
  %conv32 = sext i16 %35 to i32, !dbg !6741
  %cmp33 = icmp eq i32 %conv32, 2, !dbg !6743
  br i1 %cmp33, label %land.lhs.true35, label %if.end47, !dbg !6744

land.lhs.true35:                                  ; preds = %lor.lhs.false, %land.lhs.true29
  %36 = load i16, i16* %only_mesh, align 2, !dbg !6745
  %tobool36 = icmp ne i16 %36, 0, !dbg !6745
  br i1 %tobool36, label %lor.lhs.false37, label %if.then42, !dbg !6746

lor.lhs.false37:                                  ; preds = %land.lhs.true35
  %37 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6747
  %type38 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 3, !dbg !6748
  %38 = load i16, i16* %type38, align 8, !dbg !6748
  %conv39 = sext i16 %38 to i32, !dbg !6747
  %cmp40 = icmp eq i32 %conv39, 1, !dbg !6749
  br i1 %cmp40, label %if.then42, label %if.end47, !dbg !6750

if.then42:                                        ; preds = %lor.lhs.false37, %land.lhs.true35
  %39 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6751
  %40 = load %struct.Object**, %struct.Object*** %tar_ob.addr, align 8, !dbg !6753
  store %struct.Object* %39, %struct.Object** %40, align 8, !dbg !6754
  store i16 1, i16* %found, align 2, !dbg !6755
  %41 = load i16, i16* %only_curve, align 2, !dbg !6756
  %tobool43 = icmp ne i16 %41, 0, !dbg !6756
  br i1 %tobool43, label %if.then44, label %if.end46, !dbg !6758

if.then44:                                        ; preds = %if.then42
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !6759, metadata !DIExpression()), !dbg !6761
  %42 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6762
  %data45 = getelementptr inbounds %struct.Object, %struct.Object* %42, i32 0, i32 19, !dbg !6763
  %43 = load i8*, i8** %data45, align 8, !dbg !6763
  %44 = bitcast i8* %43 to %struct.Curve*, !dbg !6764
  store %struct.Curve* %44, %struct.Curve** %cu, align 8, !dbg !6761
  %45 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6765
  %flag = getelementptr inbounds %struct.Curve, %struct.Curve* %45, i32 0, i32 23, !dbg !6766
  %46 = load i32, i32* %flag, align 4, !dbg !6767
  %or = or i32 %46, 8, !dbg !6767
  store i32 %or, i32* %flag, align 4, !dbg !6767
  br label %if.end46, !dbg !6768

if.end46:                                         ; preds = %if.then44, %if.then42
  br label %for.end50, !dbg !6769

if.end47:                                         ; preds = %lor.lhs.false37, %lor.lhs.false, %for.body24
  br label %for.inc48, !dbg !6770

for.inc48:                                        ; preds = %if.end47
  %47 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link19, align 8, !dbg !6728
  %next49 = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %47, i32 0, i32 0, !dbg !6728
  %48 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %next49, align 8, !dbg !6728
  store %struct.CollectionPointerLink* %48, %struct.CollectionPointerLink** %ctx_link19, align 8, !dbg !6728
  br label %for.cond22, !dbg !6728, !llvm.loop !6771

for.end50:                                        ; preds = %if.end46, %for.cond22
  call void @BLI_freelistN(%struct.ListBase* %ctx_data_list18), !dbg !6773
  br label %if.end51, !dbg !6774

if.end51:                                         ; preds = %for.end50, %if.end13
  %49 = load i16, i16* %found, align 2, !dbg !6775
  %conv52 = sext i16 %49 to i32, !dbg !6775
  %cmp53 = icmp eq i32 %conv52, 0, !dbg !6777
  br i1 %cmp53, label %land.lhs.true55, label %if.end88, !dbg !6778

land.lhs.true55:                                  ; preds = %if.end51
  %50 = load i16, i16* %add.addr, align 2, !dbg !6779
  %conv56 = sext i16 %50 to i32, !dbg !6780
  %tobool57 = icmp ne i32 %conv56, 0, !dbg !6780
  br i1 %tobool57, label %if.then58, label %if.end88, !dbg !6781

if.then58:                                        ; preds = %land.lhs.true55
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !6782, metadata !DIExpression()), !dbg !6784
  %51 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6785
  %call59 = call %struct.Main* @CTX_data_main(%struct.bContext* %51), !dbg !6786
  store %struct.Main* %call59, %struct.Main** %bmain, align 8, !dbg !6784
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !6787, metadata !DIExpression()), !dbg !6788
  %52 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6789
  %call60 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %52), !dbg !6790
  store %struct.Scene* %call60, %struct.Scene** %scene, align 8, !dbg !6788
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !6791, metadata !DIExpression()), !dbg !6794
  %53 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6795
  %basact = getelementptr inbounds %struct.Scene, %struct.Scene* %53, i32 0, i32 6, !dbg !6795
  %54 = load %struct.Base*, %struct.Base** %basact, align 8, !dbg !6795
  store %struct.Base* %54, %struct.Base** %base, align 8, !dbg !6794
  call void @llvm.dbg.declare(metadata %struct.Base** %newbase, metadata !6796, metadata !DIExpression()), !dbg !6797
  store %struct.Base* null, %struct.Base** %newbase, align 8, !dbg !6797
  call void @llvm.dbg.declare(metadata %struct.Object** %obt, metadata !6798, metadata !DIExpression()), !dbg !6799
  %55 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !6800
  %56 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6801
  %call61 = call %struct.Object* @BKE_object_add(%struct.Main* %55, %struct.Scene* %56, i32 0), !dbg !6802
  store %struct.Object* %call61, %struct.Object** %obt, align 8, !dbg !6803
  %57 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6804
  %basact62 = getelementptr inbounds %struct.Scene, %struct.Scene* %57, i32 0, i32 6, !dbg !6804
  %58 = load %struct.Base*, %struct.Base** %basact62, align 8, !dbg !6804
  store %struct.Base* %58, %struct.Base** %newbase, align 8, !dbg !6805
  %59 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !6806
  %lay = getelementptr inbounds %struct.Base, %struct.Base* %59, i32 0, i32 2, !dbg !6807
  %60 = load i32, i32* %lay, align 8, !dbg !6807
  %61 = load %struct.Base*, %struct.Base** %newbase, align 8, !dbg !6808
  %lay63 = getelementptr inbounds %struct.Base, %struct.Base* %61, i32 0, i32 2, !dbg !6809
  store i32 %60, i32* %lay63, align 8, !dbg !6810
  %62 = load %struct.Base*, %struct.Base** %newbase, align 8, !dbg !6811
  %lay64 = getelementptr inbounds %struct.Base, %struct.Base* %62, i32 0, i32 2, !dbg !6812
  %63 = load i32, i32* %lay64, align 8, !dbg !6812
  %64 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6813
  %lay65 = getelementptr inbounds %struct.Object, %struct.Object* %64, i32 0, i32 52, !dbg !6814
  store i32 %63, i32* %lay65, align 8, !dbg !6815
  %65 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchanact, align 8, !dbg !6816
  %tobool66 = icmp ne %struct.bPoseChannel* %65, null, !dbg !6816
  br i1 %tobool66, label %if.then67, label %if.else79, !dbg !6818

if.then67:                                        ; preds = %if.then58
  %66 = load i32, i32* %con_type.addr, align 4, !dbg !6819
  %cmp68 = icmp eq i32 %66, 3, !dbg !6822
  br i1 %cmp68, label %if.then70, label %if.else, !dbg !6823

if.then70:                                        ; preds = %if.then67
  %67 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6824
  %loc = getelementptr inbounds %struct.Object, %struct.Object* %67, i32 0, i32 33, !dbg !6825
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !6824
  %68 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !6826
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %68, i32 0, i32 47, !dbg !6827
  %arraydecay71 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !6826
  %69 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchanact, align 8, !dbg !6828
  %pose_tail = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %69, i32 0, i32 32, !dbg !6829
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %pose_tail, i64 0, i64 0, !dbg !6828
  call void @mul_v3_m4v3(float* %arraydecay, [4 x float]* %arraydecay71, float* %arraydecay72), !dbg !6830
  br label %if.end78, !dbg !6830

if.else:                                          ; preds = %if.then67
  %70 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6831
  %loc73 = getelementptr inbounds %struct.Object, %struct.Object* %70, i32 0, i32 33, !dbg !6832
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %loc73, i64 0, i64 0, !dbg !6831
  %71 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !6833
  %obmat75 = getelementptr inbounds %struct.Object, %struct.Object* %71, i32 0, i32 47, !dbg !6834
  %arraydecay76 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat75, i64 0, i64 0, !dbg !6833
  %72 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchanact, align 8, !dbg !6835
  %pose_head = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %72, i32 0, i32 31, !dbg !6836
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %pose_head, i64 0, i64 0, !dbg !6835
  call void @mul_v3_m4v3(float* %arraydecay74, [4 x float]* %arraydecay76, float* %arraydecay77), !dbg !6837
  br label %if.end78

if.end78:                                         ; preds = %if.else, %if.then70
  br label %if.end84, !dbg !6838

if.else79:                                        ; preds = %if.then58
  %73 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6839
  %loc80 = getelementptr inbounds %struct.Object, %struct.Object* %73, i32 0, i32 33, !dbg !6841
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %loc80, i64 0, i64 0, !dbg !6839
  %74 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !6842
  %obmat82 = getelementptr inbounds %struct.Object, %struct.Object* %74, i32 0, i32 47, !dbg !6843
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat82, i64 0, i64 3, !dbg !6842
  %arraydecay83 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !6842
  call void @copy_v3_v3(float* %arraydecay81, float* %arraydecay83), !dbg !6844
  br label %if.end84

if.end84:                                         ; preds = %if.else79, %if.end78
  %75 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !6845
  %76 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6846
  %basact85 = getelementptr inbounds %struct.Scene, %struct.Scene* %76, i32 0, i32 6, !dbg !6846
  store %struct.Base* %75, %struct.Base** %basact85, align 8, !dbg !6847
  %77 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !6848
  %flag86 = getelementptr inbounds %struct.Base, %struct.Base* %77, i32 0, i32 4, !dbg !6849
  %78 = load i32, i32* %flag86, align 8, !dbg !6850
  %or87 = or i32 %78, 1, !dbg !6850
  store i32 %or87, i32* %flag86, align 8, !dbg !6850
  %79 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6851
  %80 = load %struct.Object**, %struct.Object*** %tar_ob.addr, align 8, !dbg !6852
  store %struct.Object* %79, %struct.Object** %80, align 8, !dbg !6853
  store i16 1, i16* %found, align 2, !dbg !6854
  br label %if.end88, !dbg !6855

if.end88:                                         ; preds = %if.end84, %land.lhs.true55, %if.end51
  %81 = load i16, i16* %found, align 2, !dbg !6856
  store i16 %81, i16* %retval, align 2, !dbg !6857
  br label %return, !dbg !6857

return:                                           ; preds = %if.end88, %sw.bb
  %82 = load i16, i16* %retval, align 2, !dbg !6858
  ret i16 %82, !dbg !6858
}

; Function Attrs: noinline nounwind uwtable
define internal void @set_constraint_nth_target(%struct.bConstraint* %con, %struct.Object* %target, i8* %subtarget, i32 %index) #0 !dbg !6859 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %target.addr = alloca %struct.Object*, align 8
  %subtarget.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  %targets = alloca %struct.ListBase, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %num_targets = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !6862, metadata !DIExpression()), !dbg !6863
  store %struct.Object* %target, %struct.Object** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %target.addr, metadata !6864, metadata !DIExpression()), !dbg !6865
  store i8* %subtarget, i8** %subtarget.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %subtarget.addr, metadata !6866, metadata !DIExpression()), !dbg !6867
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6868, metadata !DIExpression()), !dbg !6869
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !6870, metadata !DIExpression()), !dbg !6871
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6872
  %call = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %0), !dbg !6873
  store %struct.bConstraintTypeInfo* %call, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !6871
  call void @llvm.dbg.declare(metadata %struct.ListBase* %targets, metadata !6874, metadata !DIExpression()), !dbg !6875
  %1 = bitcast %struct.ListBase* %targets to i8*, !dbg !6875
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 16, i1 false), !dbg !6875
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !6876, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.declare(metadata i32* %num_targets, metadata !6878, metadata !DIExpression()), !dbg !6879
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6880, metadata !DIExpression()), !dbg !6881
  %2 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !6882
  %tobool = icmp ne %struct.bConstraintTypeInfo* %2, null, !dbg !6882
  br i1 %tobool, label %land.lhs.true, label %if.end27, !dbg !6884

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !6885
  %get_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %3, i32 0, i32 8, !dbg !6886
  %4 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets, align 8, !dbg !6886
  %tobool1 = icmp ne i32 (%struct.bConstraint*, %struct.ListBase*)* %4, null, !dbg !6885
  br i1 %tobool1, label %if.then, label %if.end27, !dbg !6887

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !6888
  %get_constraint_targets2 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %5, i32 0, i32 8, !dbg !6890
  %6 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets2, align 8, !dbg !6890
  %7 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6891
  %call3 = call i32 %6(%struct.bConstraint* %7, %struct.ListBase* %targets), !dbg !6888
  %call4 = call i32 @BLI_countlist(%struct.ListBase* %targets), !dbg !6892
  store i32 %call4, i32* %num_targets, align 4, !dbg !6893
  %8 = load i32, i32* %index.addr, align 4, !dbg !6894
  %cmp = icmp slt i32 %8, 0, !dbg !6896
  br i1 %cmp, label %if.then5, label %if.else11, !dbg !6897

if.then5:                                         ; preds = %if.then
  %9 = load i32, i32* %index.addr, align 4, !dbg !6898
  %call6 = call i32 @abs(i32 %9) #7, !dbg !6901
  %10 = load i32, i32* %num_targets, align 4, !dbg !6902
  %cmp7 = icmp slt i32 %call6, %10, !dbg !6903
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !6904

if.then8:                                         ; preds = %if.then5
  %11 = load i32, i32* %num_targets, align 4, !dbg !6905
  %12 = load i32, i32* %index.addr, align 4, !dbg !6906
  %call9 = call i32 @abs(i32 %12) #7, !dbg !6907
  %sub = sub nsw i32 %11, %call9, !dbg !6908
  store i32 %sub, i32* %index.addr, align 4, !dbg !6909
  br label %if.end, !dbg !6910

if.else:                                          ; preds = %if.then5
  %13 = load i32, i32* %num_targets, align 4, !dbg !6911
  %sub10 = sub nsw i32 %13, 1, !dbg !6912
  store i32 %sub10, i32* %index.addr, align 4, !dbg !6913
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  br label %if.end16, !dbg !6914

if.else11:                                        ; preds = %if.then
  %14 = load i32, i32* %index.addr, align 4, !dbg !6915
  %15 = load i32, i32* %num_targets, align 4, !dbg !6917
  %cmp12 = icmp sge i32 %14, %15, !dbg !6918
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !6919

if.then13:                                        ; preds = %if.else11
  %16 = load i32, i32* %num_targets, align 4, !dbg !6920
  %sub14 = sub nsw i32 %16, 1, !dbg !6922
  store i32 %sub14, i32* %index.addr, align 4, !dbg !6923
  br label %if.end15, !dbg !6924

if.end15:                                         ; preds = %if.then13, %if.else11
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets, i32 0, i32 0, !dbg !6925
  %17 = load i8*, i8** %first, align 8, !dbg !6925
  %18 = bitcast i8* %17 to %struct.bConstraintTarget*, !dbg !6927
  store %struct.bConstraintTarget* %18, %struct.bConstraintTarget** %ct, align 8, !dbg !6928
  store i32 0, i32* %i, align 4, !dbg !6929
  br label %for.cond, !dbg !6930

for.cond:                                         ; preds = %for.inc, %if.end16
  %19 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6931
  %tobool17 = icmp ne %struct.bConstraintTarget* %19, null, !dbg !6933
  br i1 %tobool17, label %for.body, label %for.end, !dbg !6933

for.body:                                         ; preds = %for.cond
  %20 = load i32, i32* %i, align 4, !dbg !6934
  %21 = load i32, i32* %index.addr, align 4, !dbg !6937
  %cmp18 = icmp eq i32 %20, %21, !dbg !6938
  br i1 %cmp18, label %if.then19, label %if.end22, !dbg !6939

if.then19:                                        ; preds = %for.body
  %22 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !6940
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6942
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %23, i32 0, i32 2, !dbg !6943
  store %struct.Object* %22, %struct.Object** %tar, align 8, !dbg !6944
  %24 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6945
  %subtarget20 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %24, i32 0, i32 3, !dbg !6946
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget20, i64 0, i64 0, !dbg !6945
  %25 = load i8*, i8** %subtarget.addr, align 8, !dbg !6947
  %call21 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %25, i64 64), !dbg !6948
  br label %for.end, !dbg !6949

if.end22:                                         ; preds = %for.body
  br label %for.inc, !dbg !6950

for.inc:                                          ; preds = %if.end22
  %26 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6951
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %26, i32 0, i32 0, !dbg !6952
  %27 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !6952
  store %struct.bConstraintTarget* %27, %struct.bConstraintTarget** %ct, align 8, !dbg !6953
  %28 = load i32, i32* %i, align 4, !dbg !6954
  %inc = add nsw i32 %28, 1, !dbg !6954
  store i32 %inc, i32* %i, align 4, !dbg !6954
  br label %for.cond, !dbg !6955, !llvm.loop !6956

for.end:                                          ; preds = %if.then19, %for.cond
  %29 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !6958
  %flush_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %29, i32 0, i32 9, !dbg !6960
  %30 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets, align 8, !dbg !6960
  %tobool23 = icmp ne void (%struct.bConstraint*, %struct.ListBase*, i8)* %30, null, !dbg !6958
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !6961

if.then24:                                        ; preds = %for.end
  %31 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !6962
  %flush_constraint_targets25 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %31, i32 0, i32 9, !dbg !6963
  %32 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets25, align 8, !dbg !6963
  %33 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6964
  call void %32(%struct.bConstraint* %33, %struct.ListBase* %targets, i8 zeroext 0), !dbg !6962
  br label %if.end26, !dbg !6962

if.end26:                                         ; preds = %if.then24, %for.end
  br label %if.end27, !dbg !6965

if.end27:                                         ; preds = %if.end26, %land.lhs.true, %entry
  ret void, !dbg !6966
}

declare dso_local i32 @CTX_data_selected_objects(%struct.bContext*, %struct.ListBase*) #2

declare dso_local %struct.Object* @BKE_object_add(%struct.Main*, %struct.Scene*, i32) #2

declare dso_local void @mul_v3_m4v3(float*, [4 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !6967 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6973, metadata !DIExpression()), !dbg !6974
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6975, metadata !DIExpression()), !dbg !6976
  %0 = load float*, float** %a.addr, align 8, !dbg !6977
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6977
  %1 = load float, float* %arrayidx, align 4, !dbg !6977
  %2 = load float*, float** %r.addr, align 8, !dbg !6978
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6978
  store float %1, float* %arrayidx1, align 4, !dbg !6979
  %3 = load float*, float** %a.addr, align 8, !dbg !6980
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !6980
  %4 = load float, float* %arrayidx2, align 4, !dbg !6980
  %5 = load float*, float** %r.addr, align 8, !dbg !6981
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !6981
  store float %4, float* %arrayidx3, align 4, !dbg !6982
  %6 = load float*, float** %a.addr, align 8, !dbg !6983
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !6983
  %7 = load float, float* %arrayidx4, align 4, !dbg !6983
  %8 = load float*, float** %r.addr, align 8, !dbg !6984
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6984
  store float %7, float* %arrayidx5, align 4, !dbg !6985
  ret void, !dbg !6986
}

declare dso_local i32 @BLI_countlist(%struct.ListBase*) #2

; Function Attrs: nounwind readnone
declare dso_local i32 @abs(i32) #5

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

declare dso_local %struct.uiPopupMenu* @uiPupMenuBegin(%struct.bContext*, i8*, i32) #2

declare dso_local %struct.uiLayout* @uiPupMenuLayout(%struct.uiPopupMenu*) #2

declare dso_local void @uiItemBooleanO(%struct.uiLayout*, i8*, i32, i8*, i8*, i32) #2

declare dso_local void @uiPupMenuEnd(%struct.bContext*, %struct.uiPopupMenu*) #2

declare dso_local i32 @RNA_boolean_get(%struct.PointerRNA*, i8*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2790, !2791, !2792}
!llvm.ident = !{!2793}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "constraint_owner_items", scope: !2, file: !3, line: 533, type: !2779, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !1001, globals: !2778, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/editors/object/object_constraint.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !17, !30, !40, !46, !56, !62, !94, !101, !104, !113, !124, !129, !143, !151}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ObjectMode", file: !6, line: 666, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16}
!9 = !DIEnumerator(name: "OB_MODE_OBJECT", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "OB_MODE_EDIT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "OB_MODE_SCULPT", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "OB_MODE_VERTEX_PAINT", value: 4, isUnsigned: true)
!13 = !DIEnumerator(name: "OB_MODE_WEIGHT_PAINT", value: 8, isUnsigned: true)
!14 = !DIEnumerator(name: "OB_MODE_TEXTURE_PAINT", value: 16, isUnsigned: true)
!15 = !DIEnumerator(name: "OB_MODE_PARTICLE_EDIT", value: 32, isUnsigned: true)
!16 = !DIEnumerator(name: "OB_MODE_POSE", value: 64, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 339, baseType: !7, size: 32, elements: !18)
!18 = !{!19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29}
!19 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!20 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!21 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!22 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!23 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!24 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!25 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!26 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!27 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!28 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!29 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBConstraint_Flags", file: !31, line: 499, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "blender/source/blender/makesdna/DNA_constraint_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!32 = !{!33, !34, !35, !36, !37, !38, !39}
!33 = !DIEnumerator(name: "CONSTRAINT_EXPAND", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "CONSTRAINT_DISABLE", value: 4, isUnsigned: true)
!35 = !DIEnumerator(name: "CONSTRAINT_ACTIVE", value: 16, isUnsigned: true)
!36 = !DIEnumerator(name: "CONSTRAINT_SPACEONCE", value: 64, isUnsigned: true)
!37 = !DIEnumerator(name: "CONSTRAINT_OWN_IPO", value: 128, isUnsigned: true)
!38 = !DIEnumerator(name: "CONSTRAINT_PROXY_LOCAL", value: 256, isUnsigned: true)
!39 = !DIEnumerator(name: "CONSTRAINT_OFF", value: 512, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 519, baseType: !7, size: 32, elements: !41)
!41 = !{!42, !43, !44, !45}
!42 = !DIEnumerator(name: "OB_RECALC_OB", value: 1, isUnsigned: true)
!43 = !DIEnumerator(name: "OB_RECALC_DATA", value: 2, isUnsigned: true)
!44 = !DIEnumerator(name: "OB_RECALC_TIME", value: 4, isUnsigned: true)
!45 = !DIEnumerator(name: "OB_RECALC_ALL", value: 7, isUnsigned: true)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ePose_Flags", file: !47, line: 360, baseType: !7, size: 32, elements: !48)
!47 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!48 = !{!49, !50, !51, !52, !53, !54, !55}
!49 = !DIEnumerator(name: "POSE_RECALC", value: 1, isUnsigned: true)
!50 = !DIEnumerator(name: "POSE_LOCKED", value: 2, isUnsigned: true)
!51 = !DIEnumerator(name: "POSE_DO_UNLOCK", value: 4, isUnsigned: true)
!52 = !DIEnumerator(name: "POSE_CONSTRAINTS_TIMEDEPEND", value: 8, isUnsigned: true)
!53 = !DIEnumerator(name: "POSE_RECALCPATHS", value: 16, isUnsigned: true)
!54 = !DIEnumerator(name: "POSE_WAS_REBUILT", value: 32, isUnsigned: true)
!55 = !DIEnumerator(name: "POSE_GAME_ENGINE", value: 64, isUnsigned: true)
!56 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "B_CONSTRAINT_OB_TYPE", file: !31, line: 105, baseType: !7, size: 32, elements: !57)
!57 = !{!58, !59, !60, !61}
!58 = !DIEnumerator(name: "CONSTRAINT_OBTYPE_OBJECT", value: 1, isUnsigned: true)
!59 = !DIEnumerator(name: "CONSTRAINT_OBTYPE_BONE", value: 2, isUnsigned: true)
!60 = !DIEnumerator(name: "CONSTRAINT_OBTYPE_VERT", value: 3, isUnsigned: true)
!61 = !DIEnumerator(name: "CONSTRAINT_OBTYPE_CV", value: 4, isUnsigned: true)
!62 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBConstraint_Types", file: !31, line: 461, baseType: !7, size: 32, elements: !63)
!63 = !{!64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93}
!64 = !DIEnumerator(name: "CONSTRAINT_TYPE_NULL", value: 0, isUnsigned: true)
!65 = !DIEnumerator(name: "CONSTRAINT_TYPE_CHILDOF", value: 1, isUnsigned: true)
!66 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRACKTO", value: 2, isUnsigned: true)
!67 = !DIEnumerator(name: "CONSTRAINT_TYPE_KINEMATIC", value: 3, isUnsigned: true)
!68 = !DIEnumerator(name: "CONSTRAINT_TYPE_FOLLOWPATH", value: 4, isUnsigned: true)
!69 = !DIEnumerator(name: "CONSTRAINT_TYPE_ROTLIMIT", value: 5, isUnsigned: true)
!70 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCLIMIT", value: 6, isUnsigned: true)
!71 = !DIEnumerator(name: "CONSTRAINT_TYPE_SIZELIMIT", value: 7, isUnsigned: true)
!72 = !DIEnumerator(name: "CONSTRAINT_TYPE_ROTLIKE", value: 8, isUnsigned: true)
!73 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCLIKE", value: 9, isUnsigned: true)
!74 = !DIEnumerator(name: "CONSTRAINT_TYPE_SIZELIKE", value: 10, isUnsigned: true)
!75 = !DIEnumerator(name: "CONSTRAINT_TYPE_PYTHON", value: 11, isUnsigned: true)
!76 = !DIEnumerator(name: "CONSTRAINT_TYPE_ACTION", value: 12, isUnsigned: true)
!77 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCKTRACK", value: 13, isUnsigned: true)
!78 = !DIEnumerator(name: "CONSTRAINT_TYPE_DISTLIMIT", value: 14, isUnsigned: true)
!79 = !DIEnumerator(name: "CONSTRAINT_TYPE_STRETCHTO", value: 15, isUnsigned: true)
!80 = !DIEnumerator(name: "CONSTRAINT_TYPE_MINMAX", value: 16, isUnsigned: true)
!81 = !DIEnumerator(name: "CONSTRAINT_TYPE_RIGIDBODYJOINT", value: 17, isUnsigned: true)
!82 = !DIEnumerator(name: "CONSTRAINT_TYPE_CLAMPTO", value: 18, isUnsigned: true)
!83 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRANSFORM", value: 19, isUnsigned: true)
!84 = !DIEnumerator(name: "CONSTRAINT_TYPE_SHRINKWRAP", value: 20, isUnsigned: true)
!85 = !DIEnumerator(name: "CONSTRAINT_TYPE_DAMPTRACK", value: 21, isUnsigned: true)
!86 = !DIEnumerator(name: "CONSTRAINT_TYPE_SPLINEIK", value: 22, isUnsigned: true)
!87 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRANSLIKE", value: 23, isUnsigned: true)
!88 = !DIEnumerator(name: "CONSTRAINT_TYPE_SAMEVOL", value: 24, isUnsigned: true)
!89 = !DIEnumerator(name: "CONSTRAINT_TYPE_PIVOT", value: 25, isUnsigned: true)
!90 = !DIEnumerator(name: "CONSTRAINT_TYPE_FOLLOWTRACK", value: 26, isUnsigned: true)
!91 = !DIEnumerator(name: "CONSTRAINT_TYPE_CAMERASOLVER", value: 27, isUnsigned: true)
!92 = !DIEnumerator(name: "CONSTRAINT_TYPE_OBJECTSOLVER", value: 28, isUnsigned: true)
!93 = !DIEnumerator(name: "NUM_CONSTRAINT_TYPES", value: 29, isUnsigned: true)
!94 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSplineIK_Flags", file: !31, line: 681, baseType: !7, size: 32, elements: !95)
!95 = !{!96, !97, !98, !99, !100}
!96 = !DIEnumerator(name: "CONSTRAINT_SPLINEIK_BOUND", value: 1, isUnsigned: true)
!97 = !DIEnumerator(name: "CONSTRAINT_SPLINEIK_NO_ROOT", value: 2, isUnsigned: true)
!98 = !DIEnumerator(name: "CONSTRAINT_SPLINEIK_SCALE_LIMITED", value: 4, isUnsigned: true)
!99 = !DIEnumerator(name: "CONSTRAINT_SPLINEIK_EVENSPLITS", value: 8, isUnsigned: true)
!100 = !DIEnumerator(name: "CONSTRAINT_SPLINEIK_NO_CURVERAD", value: 16, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eCameraSolver_Flags", file: !31, line: 814, baseType: !7, size: 32, elements: !102)
!102 = !{!103}
!103 = !DIEnumerator(name: "CAMERASOLVER_ACTIVECLIP", value: 1, isUnsigned: true)
!104 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !105, line: 351, baseType: !7, size: 32, elements: !106)
!105 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!106 = !{!107, !108, !109, !110, !111, !112}
!107 = !DIEnumerator(name: "OPERATOR_RUNNING_MODAL", value: 1, isUnsigned: true)
!108 = !DIEnumerator(name: "OPERATOR_CANCELLED", value: 2, isUnsigned: true)
!109 = !DIEnumerator(name: "OPERATOR_FINISHED", value: 4, isUnsigned: true)
!110 = !DIEnumerator(name: "OPERATOR_PASS_THROUGH", value: 8, isUnsigned: true)
!111 = !DIEnumerator(name: "OPERATOR_HANDLED", value: 16, isUnsigned: true)
!112 = !DIEnumerator(name: "OPERATOR_INTERFACE", value: 32, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !105, line: 67, baseType: !7, size: 32, elements: !114)
!114 = !{!115, !116, !117, !118, !119, !120, !121, !122, !123}
!115 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!116 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!117 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!118 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!119 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!120 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!121 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!122 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!123 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!124 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eFollowPath_Flags", file: !31, line: 618, baseType: !7, size: 32, elements: !125)
!125 = !{!126, !127, !128}
!126 = !DIEnumerator(name: "FOLLOWPATH_FOLLOW", value: 1, isUnsigned: true)
!127 = !DIEnumerator(name: "FOLLOWPATH_STATIC", value: 2, isUnsigned: true)
!128 = !DIEnumerator(name: "FOLLOWPATH_RADIUS", value: 4, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eFModifier_Types", file: !130, line: 72, baseType: !7, size: 32, elements: !131)
!130 = !DIFile(filename: "blender/source/blender/makesdna/DNA_anim_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!131 = !{!132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142}
!132 = !DIEnumerator(name: "FMODIFIER_TYPE_NULL", value: 0, isUnsigned: true)
!133 = !DIEnumerator(name: "FMODIFIER_TYPE_GENERATOR", value: 1, isUnsigned: true)
!134 = !DIEnumerator(name: "FMODIFIER_TYPE_FN_GENERATOR", value: 2, isUnsigned: true)
!135 = !DIEnumerator(name: "FMODIFIER_TYPE_ENVELOPE", value: 3, isUnsigned: true)
!136 = !DIEnumerator(name: "FMODIFIER_TYPE_CYCLES", value: 4, isUnsigned: true)
!137 = !DIEnumerator(name: "FMODIFIER_TYPE_NOISE", value: 5, isUnsigned: true)
!138 = !DIEnumerator(name: "FMODIFIER_TYPE_FILTER", value: 6, isUnsigned: true)
!139 = !DIEnumerator(name: "FMODIFIER_TYPE_PYTHON", value: 7, isUnsigned: true)
!140 = !DIEnumerator(name: "FMODIFIER_TYPE_LIMITS", value: 8, isUnsigned: true)
!141 = !DIEnumerator(name: "FMODIFIER_TYPE_STEPPED", value: 9, isUnsigned: true)
!142 = !DIEnumerator(name: "FMODIFIER_NUM_TYPES", value: 10, isUnsigned: true)
!143 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ePchan_ConstFlag", file: !47, line: 275, baseType: !7, size: 32, elements: !144)
!144 = !{!145, !146, !147, !148, !149, !150}
!145 = !DIEnumerator(name: "PCHAN_HAS_IK", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "PCHAN_HAS_CONST", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "PCHAN_HAS_ACTION", value: 4, isUnsigned: true)
!148 = !DIEnumerator(name: "PCHAN_HAS_TARGET", value: 8, isUnsigned: true)
!149 = !DIEnumerator(name: "PCHAN_HAS_STRIDE", value: 16, isUnsigned: true)
!150 = !DIEnumerator(name: "PCHAN_HAS_SPLINEIK", value: 32, isUnsigned: true)
!151 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !152, line: 40, baseType: !7, size: 32, elements: !153)
!152 = !DIFile(filename: "blender/source/blender/editors/include/UI_resources.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!153 = !{!154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000}
!154 = !DIEnumerator(name: "ICON_NONE", value: 0, isUnsigned: true)
!155 = !DIEnumerator(name: "ICON_QUESTION", value: 1, isUnsigned: true)
!156 = !DIEnumerator(name: "ICON_ERROR", value: 2, isUnsigned: true)
!157 = !DIEnumerator(name: "ICON_CANCEL", value: 3, isUnsigned: true)
!158 = !DIEnumerator(name: "ICON_TRIA_RIGHT", value: 4, isUnsigned: true)
!159 = !DIEnumerator(name: "ICON_TRIA_DOWN", value: 5, isUnsigned: true)
!160 = !DIEnumerator(name: "ICON_TRIA_LEFT", value: 6, isUnsigned: true)
!161 = !DIEnumerator(name: "ICON_TRIA_UP", value: 7, isUnsigned: true)
!162 = !DIEnumerator(name: "ICON_ARROW_LEFTRIGHT", value: 8, isUnsigned: true)
!163 = !DIEnumerator(name: "ICON_PLUS", value: 9, isUnsigned: true)
!164 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_DOWN", value: 10, isUnsigned: true)
!165 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_RIGHT", value: 11, isUnsigned: true)
!166 = !DIEnumerator(name: "ICON_RADIOBUT_OFF", value: 12, isUnsigned: true)
!167 = !DIEnumerator(name: "ICON_RADIOBUT_ON", value: 13, isUnsigned: true)
!168 = !DIEnumerator(name: "ICON_MENU_PANEL", value: 14, isUnsigned: true)
!169 = !DIEnumerator(name: "ICON_BLENDER", value: 15, isUnsigned: true)
!170 = !DIEnumerator(name: "ICON_GRIP", value: 16, isUnsigned: true)
!171 = !DIEnumerator(name: "ICON_DOT", value: 17, isUnsigned: true)
!172 = !DIEnumerator(name: "ICON_COLLAPSEMENU", value: 18, isUnsigned: true)
!173 = !DIEnumerator(name: "ICON_X", value: 19, isUnsigned: true)
!174 = !DIEnumerator(name: "ICON_BLANK005", value: 20, isUnsigned: true)
!175 = !DIEnumerator(name: "ICON_GO_LEFT", value: 21, isUnsigned: true)
!176 = !DIEnumerator(name: "ICON_PLUG", value: 22, isUnsigned: true)
!177 = !DIEnumerator(name: "ICON_UI", value: 23, isUnsigned: true)
!178 = !DIEnumerator(name: "ICON_NODE", value: 24, isUnsigned: true)
!179 = !DIEnumerator(name: "ICON_NODE_SEL", value: 25, isUnsigned: true)
!180 = !DIEnumerator(name: "ICON_FULLSCREEN", value: 26, isUnsigned: true)
!181 = !DIEnumerator(name: "ICON_SPLITSCREEN", value: 27, isUnsigned: true)
!182 = !DIEnumerator(name: "ICON_RIGHTARROW_THIN", value: 28, isUnsigned: true)
!183 = !DIEnumerator(name: "ICON_BORDERMOVE", value: 29, isUnsigned: true)
!184 = !DIEnumerator(name: "ICON_VIEWZOOM", value: 30, isUnsigned: true)
!185 = !DIEnumerator(name: "ICON_ZOOMIN", value: 31, isUnsigned: true)
!186 = !DIEnumerator(name: "ICON_ZOOMOUT", value: 32, isUnsigned: true)
!187 = !DIEnumerator(name: "ICON_PANEL_CLOSE", value: 33, isUnsigned: true)
!188 = !DIEnumerator(name: "ICON_COPY_ID", value: 34, isUnsigned: true)
!189 = !DIEnumerator(name: "ICON_EYEDROPPER", value: 35, isUnsigned: true)
!190 = !DIEnumerator(name: "ICON_LINK_AREA", value: 36, isUnsigned: true)
!191 = !DIEnumerator(name: "ICON_AUTO", value: 37, isUnsigned: true)
!192 = !DIEnumerator(name: "ICON_CHECKBOX_DEHLT", value: 38, isUnsigned: true)
!193 = !DIEnumerator(name: "ICON_CHECKBOX_HLT", value: 39, isUnsigned: true)
!194 = !DIEnumerator(name: "ICON_UNLOCKED", value: 40, isUnsigned: true)
!195 = !DIEnumerator(name: "ICON_LOCKED", value: 41, isUnsigned: true)
!196 = !DIEnumerator(name: "ICON_UNPINNED", value: 42, isUnsigned: true)
!197 = !DIEnumerator(name: "ICON_PINNED", value: 43, isUnsigned: true)
!198 = !DIEnumerator(name: "ICON_SCREEN_BACK", value: 44, isUnsigned: true)
!199 = !DIEnumerator(name: "ICON_RIGHTARROW", value: 45, isUnsigned: true)
!200 = !DIEnumerator(name: "ICON_DOWNARROW_HLT", value: 46, isUnsigned: true)
!201 = !DIEnumerator(name: "ICON_DOTSUP", value: 47, isUnsigned: true)
!202 = !DIEnumerator(name: "ICON_DOTSDOWN", value: 48, isUnsigned: true)
!203 = !DIEnumerator(name: "ICON_LINK", value: 49, isUnsigned: true)
!204 = !DIEnumerator(name: "ICON_INLINK", value: 50, isUnsigned: true)
!205 = !DIEnumerator(name: "ICON_PLUGIN", value: 51, isUnsigned: true)
!206 = !DIEnumerator(name: "ICON_HELP", value: 52, isUnsigned: true)
!207 = !DIEnumerator(name: "ICON_GHOST_ENABLED", value: 53, isUnsigned: true)
!208 = !DIEnumerator(name: "ICON_COLOR", value: 54, isUnsigned: true)
!209 = !DIEnumerator(name: "ICON_LINKED", value: 55, isUnsigned: true)
!210 = !DIEnumerator(name: "ICON_UNLINKED", value: 56, isUnsigned: true)
!211 = !DIEnumerator(name: "ICON_HAND", value: 57, isUnsigned: true)
!212 = !DIEnumerator(name: "ICON_ZOOM_ALL", value: 58, isUnsigned: true)
!213 = !DIEnumerator(name: "ICON_ZOOM_SELECTED", value: 59, isUnsigned: true)
!214 = !DIEnumerator(name: "ICON_ZOOM_PREVIOUS", value: 60, isUnsigned: true)
!215 = !DIEnumerator(name: "ICON_ZOOM_IN", value: 61, isUnsigned: true)
!216 = !DIEnumerator(name: "ICON_ZOOM_OUT", value: 62, isUnsigned: true)
!217 = !DIEnumerator(name: "ICON_RENDER_REGION", value: 63, isUnsigned: true)
!218 = !DIEnumerator(name: "ICON_BORDER_RECT", value: 64, isUnsigned: true)
!219 = !DIEnumerator(name: "ICON_BORDER_LASSO", value: 65, isUnsigned: true)
!220 = !DIEnumerator(name: "ICON_FREEZE", value: 66, isUnsigned: true)
!221 = !DIEnumerator(name: "ICON_STYLUS_PRESSURE", value: 67, isUnsigned: true)
!222 = !DIEnumerator(name: "ICON_GHOST_DISABLED", value: 68, isUnsigned: true)
!223 = !DIEnumerator(name: "ICON_NEW", value: 69, isUnsigned: true)
!224 = !DIEnumerator(name: "ICON_FILE_TICK", value: 70, isUnsigned: true)
!225 = !DIEnumerator(name: "ICON_QUIT", value: 71, isUnsigned: true)
!226 = !DIEnumerator(name: "ICON_URL", value: 72, isUnsigned: true)
!227 = !DIEnumerator(name: "ICON_RECOVER_LAST", value: 73, isUnsigned: true)
!228 = !DIEnumerator(name: "ICON_BLANK038", value: 74, isUnsigned: true)
!229 = !DIEnumerator(name: "ICON_FULLSCREEN_ENTER", value: 75, isUnsigned: true)
!230 = !DIEnumerator(name: "ICON_FULLSCREEN_EXIT", value: 76, isUnsigned: true)
!231 = !DIEnumerator(name: "ICON_BLANK1", value: 77, isUnsigned: true)
!232 = !DIEnumerator(name: "ICON_LAMP", value: 78, isUnsigned: true)
!233 = !DIEnumerator(name: "ICON_MATERIAL", value: 79, isUnsigned: true)
!234 = !DIEnumerator(name: "ICON_TEXTURE", value: 80, isUnsigned: true)
!235 = !DIEnumerator(name: "ICON_ANIM", value: 81, isUnsigned: true)
!236 = !DIEnumerator(name: "ICON_WORLD", value: 82, isUnsigned: true)
!237 = !DIEnumerator(name: "ICON_SCENE", value: 83, isUnsigned: true)
!238 = !DIEnumerator(name: "ICON_EDIT", value: 84, isUnsigned: true)
!239 = !DIEnumerator(name: "ICON_GAME", value: 85, isUnsigned: true)
!240 = !DIEnumerator(name: "ICON_RADIO", value: 86, isUnsigned: true)
!241 = !DIEnumerator(name: "ICON_SCRIPT", value: 87, isUnsigned: true)
!242 = !DIEnumerator(name: "ICON_PARTICLES", value: 88, isUnsigned: true)
!243 = !DIEnumerator(name: "ICON_PHYSICS", value: 89, isUnsigned: true)
!244 = !DIEnumerator(name: "ICON_SPEAKER", value: 90, isUnsigned: true)
!245 = !DIEnumerator(name: "ICON_TEXTURE_SHADED", value: 91, isUnsigned: true)
!246 = !DIEnumerator(name: "ICON_BLANK042", value: 92, isUnsigned: true)
!247 = !DIEnumerator(name: "ICON_BLANK043", value: 93, isUnsigned: true)
!248 = !DIEnumerator(name: "ICON_BLANK044", value: 94, isUnsigned: true)
!249 = !DIEnumerator(name: "ICON_BLANK045", value: 95, isUnsigned: true)
!250 = !DIEnumerator(name: "ICON_BLANK046", value: 96, isUnsigned: true)
!251 = !DIEnumerator(name: "ICON_BLANK047", value: 97, isUnsigned: true)
!252 = !DIEnumerator(name: "ICON_BLANK048", value: 98, isUnsigned: true)
!253 = !DIEnumerator(name: "ICON_BLANK049", value: 99, isUnsigned: true)
!254 = !DIEnumerator(name: "ICON_BLANK050", value: 100, isUnsigned: true)
!255 = !DIEnumerator(name: "ICON_BLANK051", value: 101, isUnsigned: true)
!256 = !DIEnumerator(name: "ICON_BLANK052", value: 102, isUnsigned: true)
!257 = !DIEnumerator(name: "ICON_BLANK052b", value: 103, isUnsigned: true)
!258 = !DIEnumerator(name: "ICON_VIEW3D", value: 104, isUnsigned: true)
!259 = !DIEnumerator(name: "ICON_IPO", value: 105, isUnsigned: true)
!260 = !DIEnumerator(name: "ICON_OOPS", value: 106, isUnsigned: true)
!261 = !DIEnumerator(name: "ICON_BUTS", value: 107, isUnsigned: true)
!262 = !DIEnumerator(name: "ICON_FILESEL", value: 108, isUnsigned: true)
!263 = !DIEnumerator(name: "ICON_IMAGE_COL", value: 109, isUnsigned: true)
!264 = !DIEnumerator(name: "ICON_INFO", value: 110, isUnsigned: true)
!265 = !DIEnumerator(name: "ICON_SEQUENCE", value: 111, isUnsigned: true)
!266 = !DIEnumerator(name: "ICON_TEXT", value: 112, isUnsigned: true)
!267 = !DIEnumerator(name: "ICON_IMASEL", value: 113, isUnsigned: true)
!268 = !DIEnumerator(name: "ICON_SOUND", value: 114, isUnsigned: true)
!269 = !DIEnumerator(name: "ICON_ACTION", value: 115, isUnsigned: true)
!270 = !DIEnumerator(name: "ICON_NLA", value: 116, isUnsigned: true)
!271 = !DIEnumerator(name: "ICON_SCRIPTWIN", value: 117, isUnsigned: true)
!272 = !DIEnumerator(name: "ICON_TIME", value: 118, isUnsigned: true)
!273 = !DIEnumerator(name: "ICON_NODETREE", value: 119, isUnsigned: true)
!274 = !DIEnumerator(name: "ICON_LOGIC", value: 120, isUnsigned: true)
!275 = !DIEnumerator(name: "ICON_CONSOLE", value: 121, isUnsigned: true)
!276 = !DIEnumerator(name: "ICON_PREFERENCES", value: 122, isUnsigned: true)
!277 = !DIEnumerator(name: "ICON_CLIP", value: 123, isUnsigned: true)
!278 = !DIEnumerator(name: "ICON_ASSET_MANAGER", value: 124, isUnsigned: true)
!279 = !DIEnumerator(name: "ICON_BLANK057", value: 125, isUnsigned: true)
!280 = !DIEnumerator(name: "ICON_BLANK058", value: 126, isUnsigned: true)
!281 = !DIEnumerator(name: "ICON_BLANK059", value: 127, isUnsigned: true)
!282 = !DIEnumerator(name: "ICON_BLANK060", value: 128, isUnsigned: true)
!283 = !DIEnumerator(name: "ICON_BLANK061", value: 129, isUnsigned: true)
!284 = !DIEnumerator(name: "ICON_OBJECT_DATAMODE", value: 130, isUnsigned: true)
!285 = !DIEnumerator(name: "ICON_EDITMODE_HLT", value: 131, isUnsigned: true)
!286 = !DIEnumerator(name: "ICON_FACESEL_HLT", value: 132, isUnsigned: true)
!287 = !DIEnumerator(name: "ICON_VPAINT_HLT", value: 133, isUnsigned: true)
!288 = !DIEnumerator(name: "ICON_TPAINT_HLT", value: 134, isUnsigned: true)
!289 = !DIEnumerator(name: "ICON_WPAINT_HLT", value: 135, isUnsigned: true)
!290 = !DIEnumerator(name: "ICON_SCULPTMODE_HLT", value: 136, isUnsigned: true)
!291 = !DIEnumerator(name: "ICON_POSE_HLT", value: 137, isUnsigned: true)
!292 = !DIEnumerator(name: "ICON_PARTICLEMODE", value: 138, isUnsigned: true)
!293 = !DIEnumerator(name: "ICON_LIGHTPAINT", value: 139, isUnsigned: true)
!294 = !DIEnumerator(name: "ICON_BLANK063", value: 140, isUnsigned: true)
!295 = !DIEnumerator(name: "ICON_BLANK064", value: 141, isUnsigned: true)
!296 = !DIEnumerator(name: "ICON_BLANK065", value: 142, isUnsigned: true)
!297 = !DIEnumerator(name: "ICON_BLANK066", value: 143, isUnsigned: true)
!298 = !DIEnumerator(name: "ICON_BLANK067", value: 144, isUnsigned: true)
!299 = !DIEnumerator(name: "ICON_BLANK068", value: 145, isUnsigned: true)
!300 = !DIEnumerator(name: "ICON_BLANK069", value: 146, isUnsigned: true)
!301 = !DIEnumerator(name: "ICON_BLANK070", value: 147, isUnsigned: true)
!302 = !DIEnumerator(name: "ICON_BLANK071", value: 148, isUnsigned: true)
!303 = !DIEnumerator(name: "ICON_BLANK072", value: 149, isUnsigned: true)
!304 = !DIEnumerator(name: "ICON_BLANK073", value: 150, isUnsigned: true)
!305 = !DIEnumerator(name: "ICON_BLANK074", value: 151, isUnsigned: true)
!306 = !DIEnumerator(name: "ICON_BLANK075", value: 152, isUnsigned: true)
!307 = !DIEnumerator(name: "ICON_BLANK076", value: 153, isUnsigned: true)
!308 = !DIEnumerator(name: "ICON_BLANK077", value: 154, isUnsigned: true)
!309 = !DIEnumerator(name: "ICON_BLANK077b", value: 155, isUnsigned: true)
!310 = !DIEnumerator(name: "ICON_SCENE_DATA", value: 156, isUnsigned: true)
!311 = !DIEnumerator(name: "ICON_RENDERLAYERS", value: 157, isUnsigned: true)
!312 = !DIEnumerator(name: "ICON_WORLD_DATA", value: 158, isUnsigned: true)
!313 = !DIEnumerator(name: "ICON_OBJECT_DATA", value: 159, isUnsigned: true)
!314 = !DIEnumerator(name: "ICON_MESH_DATA", value: 160, isUnsigned: true)
!315 = !DIEnumerator(name: "ICON_CURVE_DATA", value: 161, isUnsigned: true)
!316 = !DIEnumerator(name: "ICON_META_DATA", value: 162, isUnsigned: true)
!317 = !DIEnumerator(name: "ICON_LATTICE_DATA", value: 163, isUnsigned: true)
!318 = !DIEnumerator(name: "ICON_LAMP_DATA", value: 164, isUnsigned: true)
!319 = !DIEnumerator(name: "ICON_MATERIAL_DATA", value: 165, isUnsigned: true)
!320 = !DIEnumerator(name: "ICON_TEXTURE_DATA", value: 166, isUnsigned: true)
!321 = !DIEnumerator(name: "ICON_ANIM_DATA", value: 167, isUnsigned: true)
!322 = !DIEnumerator(name: "ICON_CAMERA_DATA", value: 168, isUnsigned: true)
!323 = !DIEnumerator(name: "ICON_PARTICLE_DATA", value: 169, isUnsigned: true)
!324 = !DIEnumerator(name: "ICON_LIBRARY_DATA_DIRECT", value: 170, isUnsigned: true)
!325 = !DIEnumerator(name: "ICON_GROUP", value: 171, isUnsigned: true)
!326 = !DIEnumerator(name: "ICON_ARMATURE_DATA", value: 172, isUnsigned: true)
!327 = !DIEnumerator(name: "ICON_POSE_DATA", value: 173, isUnsigned: true)
!328 = !DIEnumerator(name: "ICON_BONE_DATA", value: 174, isUnsigned: true)
!329 = !DIEnumerator(name: "ICON_CONSTRAINT", value: 175, isUnsigned: true)
!330 = !DIEnumerator(name: "ICON_SHAPEKEY_DATA", value: 176, isUnsigned: true)
!331 = !DIEnumerator(name: "ICON_CONSTRAINT_BONE", value: 177, isUnsigned: true)
!332 = !DIEnumerator(name: "ICON_CAMERA_STEREO", value: 178, isUnsigned: true)
!333 = !DIEnumerator(name: "ICON_PACKAGE", value: 179, isUnsigned: true)
!334 = !DIEnumerator(name: "ICON_UGLYPACKAGE", value: 180, isUnsigned: true)
!335 = !DIEnumerator(name: "ICON_BLANK079b", value: 181, isUnsigned: true)
!336 = !DIEnumerator(name: "ICON_BRUSH_DATA", value: 182, isUnsigned: true)
!337 = !DIEnumerator(name: "ICON_IMAGE_DATA", value: 183, isUnsigned: true)
!338 = !DIEnumerator(name: "ICON_FILE", value: 184, isUnsigned: true)
!339 = !DIEnumerator(name: "ICON_FCURVE", value: 185, isUnsigned: true)
!340 = !DIEnumerator(name: "ICON_FONT_DATA", value: 186, isUnsigned: true)
!341 = !DIEnumerator(name: "ICON_RENDER_RESULT", value: 187, isUnsigned: true)
!342 = !DIEnumerator(name: "ICON_SURFACE_DATA", value: 188, isUnsigned: true)
!343 = !DIEnumerator(name: "ICON_EMPTY_DATA", value: 189, isUnsigned: true)
!344 = !DIEnumerator(name: "ICON_SETTINGS", value: 190, isUnsigned: true)
!345 = !DIEnumerator(name: "ICON_RENDER_ANIMATION", value: 191, isUnsigned: true)
!346 = !DIEnumerator(name: "ICON_RENDER_STILL", value: 192, isUnsigned: true)
!347 = !DIEnumerator(name: "ICON_BLANK080F", value: 193, isUnsigned: true)
!348 = !DIEnumerator(name: "ICON_BOIDS", value: 194, isUnsigned: true)
!349 = !DIEnumerator(name: "ICON_STRANDS", value: 195, isUnsigned: true)
!350 = !DIEnumerator(name: "ICON_LIBRARY_DATA_INDIRECT", value: 196, isUnsigned: true)
!351 = !DIEnumerator(name: "ICON_GREASEPENCIL", value: 197, isUnsigned: true)
!352 = !DIEnumerator(name: "ICON_LINE_DATA", value: 198, isUnsigned: true)
!353 = !DIEnumerator(name: "ICON_BLANK084", value: 199, isUnsigned: true)
!354 = !DIEnumerator(name: "ICON_GROUP_BONE", value: 200, isUnsigned: true)
!355 = !DIEnumerator(name: "ICON_GROUP_VERTEX", value: 201, isUnsigned: true)
!356 = !DIEnumerator(name: "ICON_GROUP_VCOL", value: 202, isUnsigned: true)
!357 = !DIEnumerator(name: "ICON_GROUP_UVS", value: 203, isUnsigned: true)
!358 = !DIEnumerator(name: "ICON_BLANK089", value: 204, isUnsigned: true)
!359 = !DIEnumerator(name: "ICON_BLANK090", value: 205, isUnsigned: true)
!360 = !DIEnumerator(name: "ICON_RNA", value: 206, isUnsigned: true)
!361 = !DIEnumerator(name: "ICON_RNA_ADD", value: 207, isUnsigned: true)
!362 = !DIEnumerator(name: "ICON_BLANK092", value: 208, isUnsigned: true)
!363 = !DIEnumerator(name: "ICON_BLANK093", value: 209, isUnsigned: true)
!364 = !DIEnumerator(name: "ICON_BLANK094", value: 210, isUnsigned: true)
!365 = !DIEnumerator(name: "ICON_BLANK095", value: 211, isUnsigned: true)
!366 = !DIEnumerator(name: "ICON_BLANK096", value: 212, isUnsigned: true)
!367 = !DIEnumerator(name: "ICON_BLANK097", value: 213, isUnsigned: true)
!368 = !DIEnumerator(name: "ICON_BLANK098", value: 214, isUnsigned: true)
!369 = !DIEnumerator(name: "ICON_BLANK099", value: 215, isUnsigned: true)
!370 = !DIEnumerator(name: "ICON_BLANK100", value: 216, isUnsigned: true)
!371 = !DIEnumerator(name: "ICON_BLANK101", value: 217, isUnsigned: true)
!372 = !DIEnumerator(name: "ICON_BLANK102", value: 218, isUnsigned: true)
!373 = !DIEnumerator(name: "ICON_BLANK103", value: 219, isUnsigned: true)
!374 = !DIEnumerator(name: "ICON_BLANK104", value: 220, isUnsigned: true)
!375 = !DIEnumerator(name: "ICON_BLANK105", value: 221, isUnsigned: true)
!376 = !DIEnumerator(name: "ICON_BLANK106", value: 222, isUnsigned: true)
!377 = !DIEnumerator(name: "ICON_BLANK107", value: 223, isUnsigned: true)
!378 = !DIEnumerator(name: "ICON_BLANK108", value: 224, isUnsigned: true)
!379 = !DIEnumerator(name: "ICON_BLANK109", value: 225, isUnsigned: true)
!380 = !DIEnumerator(name: "ICON_BLANK110", value: 226, isUnsigned: true)
!381 = !DIEnumerator(name: "ICON_BLANK111", value: 227, isUnsigned: true)
!382 = !DIEnumerator(name: "ICON_BLANK112", value: 228, isUnsigned: true)
!383 = !DIEnumerator(name: "ICON_BLANK113", value: 229, isUnsigned: true)
!384 = !DIEnumerator(name: "ICON_BLANK114", value: 230, isUnsigned: true)
!385 = !DIEnumerator(name: "ICON_BLANK115", value: 231, isUnsigned: true)
!386 = !DIEnumerator(name: "ICON_BLANK116", value: 232, isUnsigned: true)
!387 = !DIEnumerator(name: "ICON_BLANK116b", value: 233, isUnsigned: true)
!388 = !DIEnumerator(name: "ICON_OUTLINER_OB_EMPTY", value: 234, isUnsigned: true)
!389 = !DIEnumerator(name: "ICON_OUTLINER_OB_MESH", value: 235, isUnsigned: true)
!390 = !DIEnumerator(name: "ICON_OUTLINER_OB_CURVE", value: 236, isUnsigned: true)
!391 = !DIEnumerator(name: "ICON_OUTLINER_OB_LATTICE", value: 237, isUnsigned: true)
!392 = !DIEnumerator(name: "ICON_OUTLINER_OB_META", value: 238, isUnsigned: true)
!393 = !DIEnumerator(name: "ICON_OUTLINER_OB_LAMP", value: 239, isUnsigned: true)
!394 = !DIEnumerator(name: "ICON_OUTLINER_OB_CAMERA", value: 240, isUnsigned: true)
!395 = !DIEnumerator(name: "ICON_OUTLINER_OB_ARMATURE", value: 241, isUnsigned: true)
!396 = !DIEnumerator(name: "ICON_OUTLINER_OB_FONT", value: 242, isUnsigned: true)
!397 = !DIEnumerator(name: "ICON_OUTLINER_OB_SURFACE", value: 243, isUnsigned: true)
!398 = !DIEnumerator(name: "ICON_OUTLINER_OB_SPEAKER", value: 244, isUnsigned: true)
!399 = !DIEnumerator(name: "ICON_BLANK120", value: 245, isUnsigned: true)
!400 = !DIEnumerator(name: "ICON_BLANK121", value: 246, isUnsigned: true)
!401 = !DIEnumerator(name: "ICON_BLANK122", value: 247, isUnsigned: true)
!402 = !DIEnumerator(name: "ICON_BLANK123", value: 248, isUnsigned: true)
!403 = !DIEnumerator(name: "ICON_BLANK124", value: 249, isUnsigned: true)
!404 = !DIEnumerator(name: "ICON_BLANK125", value: 250, isUnsigned: true)
!405 = !DIEnumerator(name: "ICON_BLANK126", value: 251, isUnsigned: true)
!406 = !DIEnumerator(name: "ICON_BLANK127", value: 252, isUnsigned: true)
!407 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_OFF", value: 253, isUnsigned: true)
!408 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_ON", value: 254, isUnsigned: true)
!409 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_OFF", value: 255, isUnsigned: true)
!410 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_ON", value: 256, isUnsigned: true)
!411 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_OFF", value: 257, isUnsigned: true)
!412 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_ON", value: 258, isUnsigned: true)
!413 = !DIEnumerator(name: "ICON_BLANK127b", value: 259, isUnsigned: true)
!414 = !DIEnumerator(name: "ICON_OUTLINER_DATA_EMPTY", value: 260, isUnsigned: true)
!415 = !DIEnumerator(name: "ICON_OUTLINER_DATA_MESH", value: 261, isUnsigned: true)
!416 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CURVE", value: 262, isUnsigned: true)
!417 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LATTICE", value: 263, isUnsigned: true)
!418 = !DIEnumerator(name: "ICON_OUTLINER_DATA_META", value: 264, isUnsigned: true)
!419 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LAMP", value: 265, isUnsigned: true)
!420 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CAMERA", value: 266, isUnsigned: true)
!421 = !DIEnumerator(name: "ICON_OUTLINER_DATA_ARMATURE", value: 267, isUnsigned: true)
!422 = !DIEnumerator(name: "ICON_OUTLINER_DATA_FONT", value: 268, isUnsigned: true)
!423 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SURFACE", value: 269, isUnsigned: true)
!424 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SPEAKER", value: 270, isUnsigned: true)
!425 = !DIEnumerator(name: "ICON_OUTLINER_DATA_POSE", value: 271, isUnsigned: true)
!426 = !DIEnumerator(name: "ICON_BLANK130", value: 272, isUnsigned: true)
!427 = !DIEnumerator(name: "ICON_BLANK131", value: 273, isUnsigned: true)
!428 = !DIEnumerator(name: "ICON_BLANK132", value: 274, isUnsigned: true)
!429 = !DIEnumerator(name: "ICON_BLANK133", value: 275, isUnsigned: true)
!430 = !DIEnumerator(name: "ICON_BLANK134", value: 276, isUnsigned: true)
!431 = !DIEnumerator(name: "ICON_BLANK135", value: 277, isUnsigned: true)
!432 = !DIEnumerator(name: "ICON_BLANK136", value: 278, isUnsigned: true)
!433 = !DIEnumerator(name: "ICON_BLANK137", value: 279, isUnsigned: true)
!434 = !DIEnumerator(name: "ICON_BLANK138", value: 280, isUnsigned: true)
!435 = !DIEnumerator(name: "ICON_BLANK139", value: 281, isUnsigned: true)
!436 = !DIEnumerator(name: "ICON_BLANK140", value: 282, isUnsigned: true)
!437 = !DIEnumerator(name: "ICON_BLANK141", value: 283, isUnsigned: true)
!438 = !DIEnumerator(name: "ICON_BLANK142", value: 284, isUnsigned: true)
!439 = !DIEnumerator(name: "ICON_BLANK142b", value: 285, isUnsigned: true)
!440 = !DIEnumerator(name: "ICON_MESH_PLANE", value: 286, isUnsigned: true)
!441 = !DIEnumerator(name: "ICON_MESH_CUBE", value: 287, isUnsigned: true)
!442 = !DIEnumerator(name: "ICON_MESH_CIRCLE", value: 288, isUnsigned: true)
!443 = !DIEnumerator(name: "ICON_MESH_UVSPHERE", value: 289, isUnsigned: true)
!444 = !DIEnumerator(name: "ICON_MESH_ICOSPHERE", value: 290, isUnsigned: true)
!445 = !DIEnumerator(name: "ICON_MESH_GRID", value: 291, isUnsigned: true)
!446 = !DIEnumerator(name: "ICON_MESH_MONKEY", value: 292, isUnsigned: true)
!447 = !DIEnumerator(name: "ICON_MESH_CYLINDER", value: 293, isUnsigned: true)
!448 = !DIEnumerator(name: "ICON_MESH_TORUS", value: 294, isUnsigned: true)
!449 = !DIEnumerator(name: "ICON_MESH_CONE", value: 295, isUnsigned: true)
!450 = !DIEnumerator(name: "ICON_BLANK610", value: 296, isUnsigned: true)
!451 = !DIEnumerator(name: "ICON_BLANK611", value: 297, isUnsigned: true)
!452 = !DIEnumerator(name: "ICON_LAMP_POINT", value: 298, isUnsigned: true)
!453 = !DIEnumerator(name: "ICON_LAMP_SUN", value: 299, isUnsigned: true)
!454 = !DIEnumerator(name: "ICON_LAMP_SPOT", value: 300, isUnsigned: true)
!455 = !DIEnumerator(name: "ICON_LAMP_HEMI", value: 301, isUnsigned: true)
!456 = !DIEnumerator(name: "ICON_LAMP_AREA", value: 302, isUnsigned: true)
!457 = !DIEnumerator(name: "ICON_BLANK617", value: 303, isUnsigned: true)
!458 = !DIEnumerator(name: "ICON_BLANK618", value: 304, isUnsigned: true)
!459 = !DIEnumerator(name: "ICON_META_EMPTY", value: 305, isUnsigned: true)
!460 = !DIEnumerator(name: "ICON_META_PLANE", value: 306, isUnsigned: true)
!461 = !DIEnumerator(name: "ICON_META_CUBE", value: 307, isUnsigned: true)
!462 = !DIEnumerator(name: "ICON_META_BALL", value: 308, isUnsigned: true)
!463 = !DIEnumerator(name: "ICON_META_ELLIPSOID", value: 309, isUnsigned: true)
!464 = !DIEnumerator(name: "ICON_META_CAPSULE", value: 310, isUnsigned: true)
!465 = !DIEnumerator(name: "ICON_BLANK625", value: 311, isUnsigned: true)
!466 = !DIEnumerator(name: "ICON_SURFACE_NCURVE", value: 312, isUnsigned: true)
!467 = !DIEnumerator(name: "ICON_SURFACE_NCIRCLE", value: 313, isUnsigned: true)
!468 = !DIEnumerator(name: "ICON_SURFACE_NSURFACE", value: 314, isUnsigned: true)
!469 = !DIEnumerator(name: "ICON_SURFACE_NCYLINDER", value: 315, isUnsigned: true)
!470 = !DIEnumerator(name: "ICON_SURFACE_NSPHERE", value: 316, isUnsigned: true)
!471 = !DIEnumerator(name: "ICON_SURFACE_NTORUS", value: 317, isUnsigned: true)
!472 = !DIEnumerator(name: "ICON_BLANK636", value: 318, isUnsigned: true)
!473 = !DIEnumerator(name: "ICON_BLANK637", value: 319, isUnsigned: true)
!474 = !DIEnumerator(name: "ICON_BLANK638", value: 320, isUnsigned: true)
!475 = !DIEnumerator(name: "ICON_CURVE_BEZCURVE", value: 321, isUnsigned: true)
!476 = !DIEnumerator(name: "ICON_CURVE_BEZCIRCLE", value: 322, isUnsigned: true)
!477 = !DIEnumerator(name: "ICON_CURVE_NCURVE", value: 323, isUnsigned: true)
!478 = !DIEnumerator(name: "ICON_CURVE_NCIRCLE", value: 324, isUnsigned: true)
!479 = !DIEnumerator(name: "ICON_CURVE_PATH", value: 325, isUnsigned: true)
!480 = !DIEnumerator(name: "ICON_BLANK644", value: 326, isUnsigned: true)
!481 = !DIEnumerator(name: "ICON_BLANK645", value: 327, isUnsigned: true)
!482 = !DIEnumerator(name: "ICON_BLANK646", value: 328, isUnsigned: true)
!483 = !DIEnumerator(name: "ICON_BLANK647", value: 329, isUnsigned: true)
!484 = !DIEnumerator(name: "ICON_BLANK648", value: 330, isUnsigned: true)
!485 = !DIEnumerator(name: "ICON_COLOR_RED", value: 331, isUnsigned: true)
!486 = !DIEnumerator(name: "ICON_COLOR_GREEN", value: 332, isUnsigned: true)
!487 = !DIEnumerator(name: "ICON_COLOR_BLUE", value: 333, isUnsigned: true)
!488 = !DIEnumerator(name: "ICON_TRIA_RIGHT_BAR", value: 334, isUnsigned: true)
!489 = !DIEnumerator(name: "ICON_TRIA_DOWN_BAR", value: 335, isUnsigned: true)
!490 = !DIEnumerator(name: "ICON_TRIA_LEFT_BAR", value: 336, isUnsigned: true)
!491 = !DIEnumerator(name: "ICON_TRIA_UP_BAR", value: 337, isUnsigned: true)
!492 = !DIEnumerator(name: "ICON_FORCE_FORCE", value: 338, isUnsigned: true)
!493 = !DIEnumerator(name: "ICON_FORCE_WIND", value: 339, isUnsigned: true)
!494 = !DIEnumerator(name: "ICON_FORCE_VORTEX", value: 340, isUnsigned: true)
!495 = !DIEnumerator(name: "ICON_FORCE_MAGNETIC", value: 341, isUnsigned: true)
!496 = !DIEnumerator(name: "ICON_FORCE_HARMONIC", value: 342, isUnsigned: true)
!497 = !DIEnumerator(name: "ICON_FORCE_CHARGE", value: 343, isUnsigned: true)
!498 = !DIEnumerator(name: "ICON_FORCE_LENNARDJONES", value: 344, isUnsigned: true)
!499 = !DIEnumerator(name: "ICON_FORCE_TEXTURE", value: 345, isUnsigned: true)
!500 = !DIEnumerator(name: "ICON_FORCE_CURVE", value: 346, isUnsigned: true)
!501 = !DIEnumerator(name: "ICON_FORCE_BOID", value: 347, isUnsigned: true)
!502 = !DIEnumerator(name: "ICON_FORCE_TURBULENCE", value: 348, isUnsigned: true)
!503 = !DIEnumerator(name: "ICON_FORCE_DRAG", value: 349, isUnsigned: true)
!504 = !DIEnumerator(name: "ICON_FORCE_SMOKEFLOW", value: 350, isUnsigned: true)
!505 = !DIEnumerator(name: "ICON_BLANK673", value: 351, isUnsigned: true)
!506 = !DIEnumerator(name: "ICON_BLANK674", value: 352, isUnsigned: true)
!507 = !DIEnumerator(name: "ICON_BLANK675", value: 353, isUnsigned: true)
!508 = !DIEnumerator(name: "ICON_BLANK676", value: 354, isUnsigned: true)
!509 = !DIEnumerator(name: "ICON_BLANK677", value: 355, isUnsigned: true)
!510 = !DIEnumerator(name: "ICON_BLANK678", value: 356, isUnsigned: true)
!511 = !DIEnumerator(name: "ICON_BLANK679", value: 357, isUnsigned: true)
!512 = !DIEnumerator(name: "ICON_BLANK680", value: 358, isUnsigned: true)
!513 = !DIEnumerator(name: "ICON_BLANK681", value: 359, isUnsigned: true)
!514 = !DIEnumerator(name: "ICON_BLANK682", value: 360, isUnsigned: true)
!515 = !DIEnumerator(name: "ICON_BLANK683", value: 361, isUnsigned: true)
!516 = !DIEnumerator(name: "ICON_BLANK684", value: 362, isUnsigned: true)
!517 = !DIEnumerator(name: "ICON_BLANK685", value: 363, isUnsigned: true)
!518 = !DIEnumerator(name: "ICON_BLANK690", value: 364, isUnsigned: true)
!519 = !DIEnumerator(name: "ICON_BLANK691", value: 365, isUnsigned: true)
!520 = !DIEnumerator(name: "ICON_BLANK692", value: 366, isUnsigned: true)
!521 = !DIEnumerator(name: "ICON_BLANK693", value: 367, isUnsigned: true)
!522 = !DIEnumerator(name: "ICON_BLANK694", value: 368, isUnsigned: true)
!523 = !DIEnumerator(name: "ICON_BLANK695", value: 369, isUnsigned: true)
!524 = !DIEnumerator(name: "ICON_BLANK696", value: 370, isUnsigned: true)
!525 = !DIEnumerator(name: "ICON_BLANK697", value: 371, isUnsigned: true)
!526 = !DIEnumerator(name: "ICON_BLANK698", value: 372, isUnsigned: true)
!527 = !DIEnumerator(name: "ICON_BLANK699", value: 373, isUnsigned: true)
!528 = !DIEnumerator(name: "ICON_BLANK700", value: 374, isUnsigned: true)
!529 = !DIEnumerator(name: "ICON_BLANK701", value: 375, isUnsigned: true)
!530 = !DIEnumerator(name: "ICON_BLANK702", value: 376, isUnsigned: true)
!531 = !DIEnumerator(name: "ICON_BLANK703", value: 377, isUnsigned: true)
!532 = !DIEnumerator(name: "ICON_BLANK704", value: 378, isUnsigned: true)
!533 = !DIEnumerator(name: "ICON_BLANK705", value: 379, isUnsigned: true)
!534 = !DIEnumerator(name: "ICON_BLANK706", value: 380, isUnsigned: true)
!535 = !DIEnumerator(name: "ICON_BLANK707", value: 381, isUnsigned: true)
!536 = !DIEnumerator(name: "ICON_BLANK708", value: 382, isUnsigned: true)
!537 = !DIEnumerator(name: "ICON_BLANK709", value: 383, isUnsigned: true)
!538 = !DIEnumerator(name: "ICON_BLANK710", value: 384, isUnsigned: true)
!539 = !DIEnumerator(name: "ICON_BLANK711", value: 385, isUnsigned: true)
!540 = !DIEnumerator(name: "ICON_BLANK712", value: 386, isUnsigned: true)
!541 = !DIEnumerator(name: "ICON_BLANK713", value: 387, isUnsigned: true)
!542 = !DIEnumerator(name: "ICON_BLANK714", value: 388, isUnsigned: true)
!543 = !DIEnumerator(name: "ICON_BLANK715", value: 389, isUnsigned: true)
!544 = !DIEnumerator(name: "ICON_BLANK720", value: 390, isUnsigned: true)
!545 = !DIEnumerator(name: "ICON_BLANK721", value: 391, isUnsigned: true)
!546 = !DIEnumerator(name: "ICON_BLANK722", value: 392, isUnsigned: true)
!547 = !DIEnumerator(name: "ICON_BLANK733", value: 393, isUnsigned: true)
!548 = !DIEnumerator(name: "ICON_BLANK734", value: 394, isUnsigned: true)
!549 = !DIEnumerator(name: "ICON_BLANK735", value: 395, isUnsigned: true)
!550 = !DIEnumerator(name: "ICON_BLANK736", value: 396, isUnsigned: true)
!551 = !DIEnumerator(name: "ICON_BLANK737", value: 397, isUnsigned: true)
!552 = !DIEnumerator(name: "ICON_BLANK738", value: 398, isUnsigned: true)
!553 = !DIEnumerator(name: "ICON_BLANK739", value: 399, isUnsigned: true)
!554 = !DIEnumerator(name: "ICON_BLANK740", value: 400, isUnsigned: true)
!555 = !DIEnumerator(name: "ICON_BLANK741", value: 401, isUnsigned: true)
!556 = !DIEnumerator(name: "ICON_BLANK742", value: 402, isUnsigned: true)
!557 = !DIEnumerator(name: "ICON_BLANK743", value: 403, isUnsigned: true)
!558 = !DIEnumerator(name: "ICON_BLANK744", value: 404, isUnsigned: true)
!559 = !DIEnumerator(name: "ICON_BLANK745", value: 405, isUnsigned: true)
!560 = !DIEnumerator(name: "ICON_BLANK746", value: 406, isUnsigned: true)
!561 = !DIEnumerator(name: "ICON_BLANK747", value: 407, isUnsigned: true)
!562 = !DIEnumerator(name: "ICON_BLANK748", value: 408, isUnsigned: true)
!563 = !DIEnumerator(name: "ICON_BLANK749", value: 409, isUnsigned: true)
!564 = !DIEnumerator(name: "ICON_BLANK750", value: 410, isUnsigned: true)
!565 = !DIEnumerator(name: "ICON_BLANK751", value: 411, isUnsigned: true)
!566 = !DIEnumerator(name: "ICON_BLANK752", value: 412, isUnsigned: true)
!567 = !DIEnumerator(name: "ICON_BLANK753", value: 413, isUnsigned: true)
!568 = !DIEnumerator(name: "ICON_BLANK754", value: 414, isUnsigned: true)
!569 = !DIEnumerator(name: "ICON_BLANK755", value: 415, isUnsigned: true)
!570 = !DIEnumerator(name: "ICON_BLANK760", value: 416, isUnsigned: true)
!571 = !DIEnumerator(name: "ICON_BLANK761", value: 417, isUnsigned: true)
!572 = !DIEnumerator(name: "ICON_BLANK762", value: 418, isUnsigned: true)
!573 = !DIEnumerator(name: "ICON_BLANK763", value: 419, isUnsigned: true)
!574 = !DIEnumerator(name: "ICON_BLANK764", value: 420, isUnsigned: true)
!575 = !DIEnumerator(name: "ICON_BLANK765", value: 421, isUnsigned: true)
!576 = !DIEnumerator(name: "ICON_BLANK766", value: 422, isUnsigned: true)
!577 = !DIEnumerator(name: "ICON_BLANK767", value: 423, isUnsigned: true)
!578 = !DIEnumerator(name: "ICON_BLANK768", value: 424, isUnsigned: true)
!579 = !DIEnumerator(name: "ICON_BLANK769", value: 425, isUnsigned: true)
!580 = !DIEnumerator(name: "ICON_BLANK770", value: 426, isUnsigned: true)
!581 = !DIEnumerator(name: "ICON_BLANK771", value: 427, isUnsigned: true)
!582 = !DIEnumerator(name: "ICON_BLANK772", value: 428, isUnsigned: true)
!583 = !DIEnumerator(name: "ICON_BLANK773", value: 429, isUnsigned: true)
!584 = !DIEnumerator(name: "ICON_BLANK774", value: 430, isUnsigned: true)
!585 = !DIEnumerator(name: "ICON_BLANK775", value: 431, isUnsigned: true)
!586 = !DIEnumerator(name: "ICON_BLANK776", value: 432, isUnsigned: true)
!587 = !DIEnumerator(name: "ICON_BLANK777", value: 433, isUnsigned: true)
!588 = !DIEnumerator(name: "ICON_BLANK778", value: 434, isUnsigned: true)
!589 = !DIEnumerator(name: "ICON_BLANK779", value: 435, isUnsigned: true)
!590 = !DIEnumerator(name: "ICON_BLANK780", value: 436, isUnsigned: true)
!591 = !DIEnumerator(name: "ICON_BLANK781", value: 437, isUnsigned: true)
!592 = !DIEnumerator(name: "ICON_BLANK782", value: 438, isUnsigned: true)
!593 = !DIEnumerator(name: "ICON_BLANK783", value: 439, isUnsigned: true)
!594 = !DIEnumerator(name: "ICON_BLANK784", value: 440, isUnsigned: true)
!595 = !DIEnumerator(name: "ICON_BLANK785", value: 441, isUnsigned: true)
!596 = !DIEnumerator(name: "ICON_MODIFIER", value: 442, isUnsigned: true)
!597 = !DIEnumerator(name: "ICON_MOD_WAVE", value: 443, isUnsigned: true)
!598 = !DIEnumerator(name: "ICON_MOD_BUILD", value: 444, isUnsigned: true)
!599 = !DIEnumerator(name: "ICON_MOD_DECIM", value: 445, isUnsigned: true)
!600 = !DIEnumerator(name: "ICON_MOD_MIRROR", value: 446, isUnsigned: true)
!601 = !DIEnumerator(name: "ICON_MOD_SOFT", value: 447, isUnsigned: true)
!602 = !DIEnumerator(name: "ICON_MOD_SUBSURF", value: 448, isUnsigned: true)
!603 = !DIEnumerator(name: "ICON_HOOK", value: 449, isUnsigned: true)
!604 = !DIEnumerator(name: "ICON_MOD_PHYSICS", value: 450, isUnsigned: true)
!605 = !DIEnumerator(name: "ICON_MOD_PARTICLES", value: 451, isUnsigned: true)
!606 = !DIEnumerator(name: "ICON_MOD_BOOLEAN", value: 452, isUnsigned: true)
!607 = !DIEnumerator(name: "ICON_MOD_EDGESPLIT", value: 453, isUnsigned: true)
!608 = !DIEnumerator(name: "ICON_MOD_ARRAY", value: 454, isUnsigned: true)
!609 = !DIEnumerator(name: "ICON_MOD_UVPROJECT", value: 455, isUnsigned: true)
!610 = !DIEnumerator(name: "ICON_MOD_DISPLACE", value: 456, isUnsigned: true)
!611 = !DIEnumerator(name: "ICON_MOD_CURVE", value: 457, isUnsigned: true)
!612 = !DIEnumerator(name: "ICON_MOD_LATTICE", value: 458, isUnsigned: true)
!613 = !DIEnumerator(name: "ICON_CONSTRAINT_DATA", value: 459, isUnsigned: true)
!614 = !DIEnumerator(name: "ICON_MOD_ARMATURE", value: 460, isUnsigned: true)
!615 = !DIEnumerator(name: "ICON_MOD_SHRINKWRAP", value: 461, isUnsigned: true)
!616 = !DIEnumerator(name: "ICON_MOD_CAST", value: 462, isUnsigned: true)
!617 = !DIEnumerator(name: "ICON_MOD_MESHDEFORM", value: 463, isUnsigned: true)
!618 = !DIEnumerator(name: "ICON_MOD_BEVEL", value: 464, isUnsigned: true)
!619 = !DIEnumerator(name: "ICON_MOD_SMOOTH", value: 465, isUnsigned: true)
!620 = !DIEnumerator(name: "ICON_MOD_SIMPLEDEFORM", value: 466, isUnsigned: true)
!621 = !DIEnumerator(name: "ICON_MOD_MASK", value: 467, isUnsigned: true)
!622 = !DIEnumerator(name: "ICON_MOD_CLOTH", value: 468, isUnsigned: true)
!623 = !DIEnumerator(name: "ICON_MOD_EXPLODE", value: 469, isUnsigned: true)
!624 = !DIEnumerator(name: "ICON_MOD_FLUIDSIM", value: 470, isUnsigned: true)
!625 = !DIEnumerator(name: "ICON_MOD_MULTIRES", value: 471, isUnsigned: true)
!626 = !DIEnumerator(name: "ICON_MOD_SMOKE", value: 472, isUnsigned: true)
!627 = !DIEnumerator(name: "ICON_MOD_SOLIDIFY", value: 473, isUnsigned: true)
!628 = !DIEnumerator(name: "ICON_MOD_SCREW", value: 474, isUnsigned: true)
!629 = !DIEnumerator(name: "ICON_MOD_VERTEX_WEIGHT", value: 475, isUnsigned: true)
!630 = !DIEnumerator(name: "ICON_MOD_DYNAMICPAINT", value: 476, isUnsigned: true)
!631 = !DIEnumerator(name: "ICON_MOD_REMESH", value: 477, isUnsigned: true)
!632 = !DIEnumerator(name: "ICON_MOD_OCEAN", value: 478, isUnsigned: true)
!633 = !DIEnumerator(name: "ICON_MOD_WARP", value: 479, isUnsigned: true)
!634 = !DIEnumerator(name: "ICON_MOD_SKIN", value: 480, isUnsigned: true)
!635 = !DIEnumerator(name: "ICON_MOD_TRIANGULATE", value: 481, isUnsigned: true)
!636 = !DIEnumerator(name: "ICON_MOD_WIREFRAME", value: 482, isUnsigned: true)
!637 = !DIEnumerator(name: "ICON_BLANK167", value: 483, isUnsigned: true)
!638 = !DIEnumerator(name: "ICON_BLANK168", value: 484, isUnsigned: true)
!639 = !DIEnumerator(name: "ICON_BLANK169", value: 485, isUnsigned: true)
!640 = !DIEnumerator(name: "ICON_BLANK170", value: 486, isUnsigned: true)
!641 = !DIEnumerator(name: "ICON_BLANK171", value: 487, isUnsigned: true)
!642 = !DIEnumerator(name: "ICON_BLANK172", value: 488, isUnsigned: true)
!643 = !DIEnumerator(name: "ICON_BLANK173", value: 489, isUnsigned: true)
!644 = !DIEnumerator(name: "ICON_BLANK174", value: 490, isUnsigned: true)
!645 = !DIEnumerator(name: "ICON_BLANK175", value: 491, isUnsigned: true)
!646 = !DIEnumerator(name: "ICON_BLANK176", value: 492, isUnsigned: true)
!647 = !DIEnumerator(name: "ICON_BLANK177", value: 493, isUnsigned: true)
!648 = !DIEnumerator(name: "ICON_REC", value: 494, isUnsigned: true)
!649 = !DIEnumerator(name: "ICON_PLAY", value: 495, isUnsigned: true)
!650 = !DIEnumerator(name: "ICON_FF", value: 496, isUnsigned: true)
!651 = !DIEnumerator(name: "ICON_REW", value: 497, isUnsigned: true)
!652 = !DIEnumerator(name: "ICON_PAUSE", value: 498, isUnsigned: true)
!653 = !DIEnumerator(name: "ICON_PREV_KEYFRAME", value: 499, isUnsigned: true)
!654 = !DIEnumerator(name: "ICON_NEXT_KEYFRAME", value: 500, isUnsigned: true)
!655 = !DIEnumerator(name: "ICON_PLAY_AUDIO", value: 501, isUnsigned: true)
!656 = !DIEnumerator(name: "ICON_PLAY_REVERSE", value: 502, isUnsigned: true)
!657 = !DIEnumerator(name: "ICON_PREVIEW_RANGE", value: 503, isUnsigned: true)
!658 = !DIEnumerator(name: "ICON_ACTION_TWEAK", value: 504, isUnsigned: true)
!659 = !DIEnumerator(name: "ICON_PMARKER_ACT", value: 505, isUnsigned: true)
!660 = !DIEnumerator(name: "ICON_PMARKER_SEL", value: 506, isUnsigned: true)
!661 = !DIEnumerator(name: "ICON_PMARKER", value: 507, isUnsigned: true)
!662 = !DIEnumerator(name: "ICON_MARKER_HLT", value: 508, isUnsigned: true)
!663 = !DIEnumerator(name: "ICON_MARKER", value: 509, isUnsigned: true)
!664 = !DIEnumerator(name: "ICON_SPACE2", value: 510, isUnsigned: true)
!665 = !DIEnumerator(name: "ICON_SPACE3", value: 511, isUnsigned: true)
!666 = !DIEnumerator(name: "ICON_KEYINGSET", value: 512, isUnsigned: true)
!667 = !DIEnumerator(name: "ICON_KEY_DEHLT", value: 513, isUnsigned: true)
!668 = !DIEnumerator(name: "ICON_KEY_HLT", value: 514, isUnsigned: true)
!669 = !DIEnumerator(name: "ICON_MUTE_IPO_OFF", value: 515, isUnsigned: true)
!670 = !DIEnumerator(name: "ICON_MUTE_IPO_ON", value: 516, isUnsigned: true)
!671 = !DIEnumerator(name: "ICON_VISIBLE_IPO_OFF", value: 517, isUnsigned: true)
!672 = !DIEnumerator(name: "ICON_VISIBLE_IPO_ON", value: 518, isUnsigned: true)
!673 = !DIEnumerator(name: "ICON_DRIVER", value: 519, isUnsigned: true)
!674 = !DIEnumerator(name: "ICON_SOLO_OFF", value: 520, isUnsigned: true)
!675 = !DIEnumerator(name: "ICON_SOLO_ON", value: 521, isUnsigned: true)
!676 = !DIEnumerator(name: "ICON_FRAME_PREV", value: 522, isUnsigned: true)
!677 = !DIEnumerator(name: "ICON_FRAME_NEXT", value: 523, isUnsigned: true)
!678 = !DIEnumerator(name: "ICON_NLA_PUSHDOWN", value: 524, isUnsigned: true)
!679 = !DIEnumerator(name: "ICON_IPO_CONSTANT", value: 525, isUnsigned: true)
!680 = !DIEnumerator(name: "ICON_IPO_LINEAR", value: 526, isUnsigned: true)
!681 = !DIEnumerator(name: "ICON_IPO_BEZIER", value: 527, isUnsigned: true)
!682 = !DIEnumerator(name: "ICON_IPO_SINE", value: 528, isUnsigned: true)
!683 = !DIEnumerator(name: "ICON_IPO_QUAD", value: 529, isUnsigned: true)
!684 = !DIEnumerator(name: "ICON_IPO_CUBIC", value: 530, isUnsigned: true)
!685 = !DIEnumerator(name: "ICON_IPO_QUART", value: 531, isUnsigned: true)
!686 = !DIEnumerator(name: "ICON_IPO_QUINT", value: 532, isUnsigned: true)
!687 = !DIEnumerator(name: "ICON_IPO_EXPO", value: 533, isUnsigned: true)
!688 = !DIEnumerator(name: "ICON_IPO_CIRC", value: 534, isUnsigned: true)
!689 = !DIEnumerator(name: "ICON_IPO_BOUNCE", value: 535, isUnsigned: true)
!690 = !DIEnumerator(name: "ICON_IPO_ELASTIC", value: 536, isUnsigned: true)
!691 = !DIEnumerator(name: "ICON_IPO_BACK", value: 537, isUnsigned: true)
!692 = !DIEnumerator(name: "ICON_IPO_EASE_IN", value: 538, isUnsigned: true)
!693 = !DIEnumerator(name: "ICON_IPO_EASE_OUT", value: 539, isUnsigned: true)
!694 = !DIEnumerator(name: "ICON_IPO_EASE_IN_OUT", value: 540, isUnsigned: true)
!695 = !DIEnumerator(name: "ICON_BLANK203", value: 541, isUnsigned: true)
!696 = !DIEnumerator(name: "ICON_BLANK204", value: 542, isUnsigned: true)
!697 = !DIEnumerator(name: "ICON_BLANK205", value: 543, isUnsigned: true)
!698 = !DIEnumerator(name: "ICON_BLANK206", value: 544, isUnsigned: true)
!699 = !DIEnumerator(name: "ICON_BLANK207", value: 545, isUnsigned: true)
!700 = !DIEnumerator(name: "ICON_VERTEXSEL", value: 546, isUnsigned: true)
!701 = !DIEnumerator(name: "ICON_EDGESEL", value: 547, isUnsigned: true)
!702 = !DIEnumerator(name: "ICON_FACESEL", value: 548, isUnsigned: true)
!703 = !DIEnumerator(name: "ICON_LOOPSEL", value: 549, isUnsigned: true)
!704 = !DIEnumerator(name: "ICON_BLANK210", value: 550, isUnsigned: true)
!705 = !DIEnumerator(name: "ICON_ROTATE", value: 551, isUnsigned: true)
!706 = !DIEnumerator(name: "ICON_CURSOR", value: 552, isUnsigned: true)
!707 = !DIEnumerator(name: "ICON_ROTATECOLLECTION", value: 553, isUnsigned: true)
!708 = !DIEnumerator(name: "ICON_ROTATECENTER", value: 554, isUnsigned: true)
!709 = !DIEnumerator(name: "ICON_ROTACTIVE", value: 555, isUnsigned: true)
!710 = !DIEnumerator(name: "ICON_ALIGN", value: 556, isUnsigned: true)
!711 = !DIEnumerator(name: "ICON_BLANK211", value: 557, isUnsigned: true)
!712 = !DIEnumerator(name: "ICON_SMOOTHCURVE", value: 558, isUnsigned: true)
!713 = !DIEnumerator(name: "ICON_SPHERECURVE", value: 559, isUnsigned: true)
!714 = !DIEnumerator(name: "ICON_ROOTCURVE", value: 560, isUnsigned: true)
!715 = !DIEnumerator(name: "ICON_SHARPCURVE", value: 561, isUnsigned: true)
!716 = !DIEnumerator(name: "ICON_LINCURVE", value: 562, isUnsigned: true)
!717 = !DIEnumerator(name: "ICON_NOCURVE", value: 563, isUnsigned: true)
!718 = !DIEnumerator(name: "ICON_RNDCURVE", value: 564, isUnsigned: true)
!719 = !DIEnumerator(name: "ICON_PROP_OFF", value: 565, isUnsigned: true)
!720 = !DIEnumerator(name: "ICON_PROP_ON", value: 566, isUnsigned: true)
!721 = !DIEnumerator(name: "ICON_PROP_CON", value: 567, isUnsigned: true)
!722 = !DIEnumerator(name: "ICON_SCULPT_DYNTOPO", value: 568, isUnsigned: true)
!723 = !DIEnumerator(name: "ICON_PARTICLE_POINT", value: 569, isUnsigned: true)
!724 = !DIEnumerator(name: "ICON_PARTICLE_TIP", value: 570, isUnsigned: true)
!725 = !DIEnumerator(name: "ICON_PARTICLE_PATH", value: 571, isUnsigned: true)
!726 = !DIEnumerator(name: "ICON_MAN_TRANS", value: 572, isUnsigned: true)
!727 = !DIEnumerator(name: "ICON_MAN_ROT", value: 573, isUnsigned: true)
!728 = !DIEnumerator(name: "ICON_MAN_SCALE", value: 574, isUnsigned: true)
!729 = !DIEnumerator(name: "ICON_MANIPUL", value: 575, isUnsigned: true)
!730 = !DIEnumerator(name: "ICON_SNAP_OFF", value: 576, isUnsigned: true)
!731 = !DIEnumerator(name: "ICON_SNAP_ON", value: 577, isUnsigned: true)
!732 = !DIEnumerator(name: "ICON_SNAP_NORMAL", value: 578, isUnsigned: true)
!733 = !DIEnumerator(name: "ICON_SNAP_INCREMENT", value: 579, isUnsigned: true)
!734 = !DIEnumerator(name: "ICON_SNAP_VERTEX", value: 580, isUnsigned: true)
!735 = !DIEnumerator(name: "ICON_SNAP_EDGE", value: 581, isUnsigned: true)
!736 = !DIEnumerator(name: "ICON_SNAP_FACE", value: 582, isUnsigned: true)
!737 = !DIEnumerator(name: "ICON_SNAP_VOLUME", value: 583, isUnsigned: true)
!738 = !DIEnumerator(name: "ICON_BLANK220", value: 584, isUnsigned: true)
!739 = !DIEnumerator(name: "ICON_STICKY_UVS_LOC", value: 585, isUnsigned: true)
!740 = !DIEnumerator(name: "ICON_STICKY_UVS_DISABLE", value: 586, isUnsigned: true)
!741 = !DIEnumerator(name: "ICON_STICKY_UVS_VERT", value: 587, isUnsigned: true)
!742 = !DIEnumerator(name: "ICON_CLIPUV_DEHLT", value: 588, isUnsigned: true)
!743 = !DIEnumerator(name: "ICON_CLIPUV_HLT", value: 589, isUnsigned: true)
!744 = !DIEnumerator(name: "ICON_SNAP_PEEL_OBJECT", value: 590, isUnsigned: true)
!745 = !DIEnumerator(name: "ICON_GRID", value: 591, isUnsigned: true)
!746 = !DIEnumerator(name: "ICON_BLANK221", value: 592, isUnsigned: true)
!747 = !DIEnumerator(name: "ICON_BLANK222", value: 593, isUnsigned: true)
!748 = !DIEnumerator(name: "ICON_BLANK224", value: 594, isUnsigned: true)
!749 = !DIEnumerator(name: "ICON_BLANK225", value: 595, isUnsigned: true)
!750 = !DIEnumerator(name: "ICON_BLANK226", value: 596, isUnsigned: true)
!751 = !DIEnumerator(name: "ICON_BLANK226b", value: 597, isUnsigned: true)
!752 = !DIEnumerator(name: "ICON_PASTEDOWN", value: 598, isUnsigned: true)
!753 = !DIEnumerator(name: "ICON_COPYDOWN", value: 599, isUnsigned: true)
!754 = !DIEnumerator(name: "ICON_PASTEFLIPUP", value: 600, isUnsigned: true)
!755 = !DIEnumerator(name: "ICON_PASTEFLIPDOWN", value: 601, isUnsigned: true)
!756 = !DIEnumerator(name: "ICON_BLANK227", value: 602, isUnsigned: true)
!757 = !DIEnumerator(name: "ICON_BLANK228", value: 603, isUnsigned: true)
!758 = !DIEnumerator(name: "ICON_BLANK229", value: 604, isUnsigned: true)
!759 = !DIEnumerator(name: "ICON_BLANK230", value: 605, isUnsigned: true)
!760 = !DIEnumerator(name: "ICON_SNAP_SURFACE", value: 606, isUnsigned: true)
!761 = !DIEnumerator(name: "ICON_AUTOMERGE_ON", value: 607, isUnsigned: true)
!762 = !DIEnumerator(name: "ICON_AUTOMERGE_OFF", value: 608, isUnsigned: true)
!763 = !DIEnumerator(name: "ICON_RETOPO", value: 609, isUnsigned: true)
!764 = !DIEnumerator(name: "ICON_UV_VERTEXSEL", value: 610, isUnsigned: true)
!765 = !DIEnumerator(name: "ICON_UV_EDGESEL", value: 611, isUnsigned: true)
!766 = !DIEnumerator(name: "ICON_UV_FACESEL", value: 612, isUnsigned: true)
!767 = !DIEnumerator(name: "ICON_UV_ISLANDSEL", value: 613, isUnsigned: true)
!768 = !DIEnumerator(name: "ICON_UV_SYNC_SELECT", value: 614, isUnsigned: true)
!769 = !DIEnumerator(name: "ICON_BLANK240", value: 615, isUnsigned: true)
!770 = !DIEnumerator(name: "ICON_BLANK241", value: 616, isUnsigned: true)
!771 = !DIEnumerator(name: "ICON_BLANK242", value: 617, isUnsigned: true)
!772 = !DIEnumerator(name: "ICON_BLANK243", value: 618, isUnsigned: true)
!773 = !DIEnumerator(name: "ICON_BLANK244", value: 619, isUnsigned: true)
!774 = !DIEnumerator(name: "ICON_BLANK245", value: 620, isUnsigned: true)
!775 = !DIEnumerator(name: "ICON_BLANK246", value: 621, isUnsigned: true)
!776 = !DIEnumerator(name: "ICON_BLANK247", value: 622, isUnsigned: true)
!777 = !DIEnumerator(name: "ICON_BLANK247b", value: 623, isUnsigned: true)
!778 = !DIEnumerator(name: "ICON_BBOX", value: 624, isUnsigned: true)
!779 = !DIEnumerator(name: "ICON_WIRE", value: 625, isUnsigned: true)
!780 = !DIEnumerator(name: "ICON_SOLID", value: 626, isUnsigned: true)
!781 = !DIEnumerator(name: "ICON_SMOOTH", value: 627, isUnsigned: true)
!782 = !DIEnumerator(name: "ICON_POTATO", value: 628, isUnsigned: true)
!783 = !DIEnumerator(name: "ICON_BLANK248", value: 629, isUnsigned: true)
!784 = !DIEnumerator(name: "ICON_ORTHO", value: 630, isUnsigned: true)
!785 = !DIEnumerator(name: "ICON_BLANK249", value: 631, isUnsigned: true)
!786 = !DIEnumerator(name: "ICON_BLANK250", value: 632, isUnsigned: true)
!787 = !DIEnumerator(name: "ICON_LOCKVIEW_OFF", value: 633, isUnsigned: true)
!788 = !DIEnumerator(name: "ICON_LOCKVIEW_ON", value: 634, isUnsigned: true)
!789 = !DIEnumerator(name: "ICON_BLANK251", value: 635, isUnsigned: true)
!790 = !DIEnumerator(name: "ICON_AXIS_SIDE", value: 636, isUnsigned: true)
!791 = !DIEnumerator(name: "ICON_AXIS_FRONT", value: 637, isUnsigned: true)
!792 = !DIEnumerator(name: "ICON_AXIS_TOP", value: 638, isUnsigned: true)
!793 = !DIEnumerator(name: "ICON_NDOF_DOM", value: 639, isUnsigned: true)
!794 = !DIEnumerator(name: "ICON_NDOF_TURN", value: 640, isUnsigned: true)
!795 = !DIEnumerator(name: "ICON_NDOF_FLY", value: 641, isUnsigned: true)
!796 = !DIEnumerator(name: "ICON_NDOF_TRANS", value: 642, isUnsigned: true)
!797 = !DIEnumerator(name: "ICON_LAYER_USED", value: 643, isUnsigned: true)
!798 = !DIEnumerator(name: "ICON_LAYER_ACTIVE", value: 644, isUnsigned: true)
!799 = !DIEnumerator(name: "ICON_BLANK254", value: 645, isUnsigned: true)
!800 = !DIEnumerator(name: "ICON_BLANK255", value: 646, isUnsigned: true)
!801 = !DIEnumerator(name: "ICON_BLANK256", value: 647, isUnsigned: true)
!802 = !DIEnumerator(name: "ICON_BLANK257", value: 648, isUnsigned: true)
!803 = !DIEnumerator(name: "ICON_BLANK257b", value: 649, isUnsigned: true)
!804 = !DIEnumerator(name: "ICON_BLANK258", value: 650, isUnsigned: true)
!805 = !DIEnumerator(name: "ICON_BLANK259", value: 651, isUnsigned: true)
!806 = !DIEnumerator(name: "ICON_BLANK260", value: 652, isUnsigned: true)
!807 = !DIEnumerator(name: "ICON_BLANK261", value: 653, isUnsigned: true)
!808 = !DIEnumerator(name: "ICON_BLANK262", value: 654, isUnsigned: true)
!809 = !DIEnumerator(name: "ICON_BLANK263", value: 655, isUnsigned: true)
!810 = !DIEnumerator(name: "ICON_BLANK264", value: 656, isUnsigned: true)
!811 = !DIEnumerator(name: "ICON_BLANK265", value: 657, isUnsigned: true)
!812 = !DIEnumerator(name: "ICON_BLANK266", value: 658, isUnsigned: true)
!813 = !DIEnumerator(name: "ICON_BLANK267", value: 659, isUnsigned: true)
!814 = !DIEnumerator(name: "ICON_BLANK268", value: 660, isUnsigned: true)
!815 = !DIEnumerator(name: "ICON_BLANK269", value: 661, isUnsigned: true)
!816 = !DIEnumerator(name: "ICON_BLANK270", value: 662, isUnsigned: true)
!817 = !DIEnumerator(name: "ICON_BLANK271", value: 663, isUnsigned: true)
!818 = !DIEnumerator(name: "ICON_BLANK272", value: 664, isUnsigned: true)
!819 = !DIEnumerator(name: "ICON_BLANK273", value: 665, isUnsigned: true)
!820 = !DIEnumerator(name: "ICON_BLANK274", value: 666, isUnsigned: true)
!821 = !DIEnumerator(name: "ICON_BLANK275", value: 667, isUnsigned: true)
!822 = !DIEnumerator(name: "ICON_BLANK276", value: 668, isUnsigned: true)
!823 = !DIEnumerator(name: "ICON_BLANK277", value: 669, isUnsigned: true)
!824 = !DIEnumerator(name: "ICON_BLANK278", value: 670, isUnsigned: true)
!825 = !DIEnumerator(name: "ICON_BLANK279", value: 671, isUnsigned: true)
!826 = !DIEnumerator(name: "ICON_BLANK280", value: 672, isUnsigned: true)
!827 = !DIEnumerator(name: "ICON_BLANK281", value: 673, isUnsigned: true)
!828 = !DIEnumerator(name: "ICON_BLANK282", value: 674, isUnsigned: true)
!829 = !DIEnumerator(name: "ICON_BLANK282b", value: 675, isUnsigned: true)
!830 = !DIEnumerator(name: "ICON_SORTALPHA", value: 676, isUnsigned: true)
!831 = !DIEnumerator(name: "ICON_SORTBYEXT", value: 677, isUnsigned: true)
!832 = !DIEnumerator(name: "ICON_SORTTIME", value: 678, isUnsigned: true)
!833 = !DIEnumerator(name: "ICON_SORTSIZE", value: 679, isUnsigned: true)
!834 = !DIEnumerator(name: "ICON_LONGDISPLAY", value: 680, isUnsigned: true)
!835 = !DIEnumerator(name: "ICON_SHORTDISPLAY", value: 681, isUnsigned: true)
!836 = !DIEnumerator(name: "ICON_GHOST", value: 682, isUnsigned: true)
!837 = !DIEnumerator(name: "ICON_IMGDISPLAY", value: 683, isUnsigned: true)
!838 = !DIEnumerator(name: "ICON_SAVE_AS", value: 684, isUnsigned: true)
!839 = !DIEnumerator(name: "ICON_SAVE_COPY", value: 685, isUnsigned: true)
!840 = !DIEnumerator(name: "ICON_BOOKMARKS", value: 686, isUnsigned: true)
!841 = !DIEnumerator(name: "ICON_FONTPREVIEW", value: 687, isUnsigned: true)
!842 = !DIEnumerator(name: "ICON_FILTER", value: 688, isUnsigned: true)
!843 = !DIEnumerator(name: "ICON_NEWFOLDER", value: 689, isUnsigned: true)
!844 = !DIEnumerator(name: "ICON_OPEN_RECENT", value: 690, isUnsigned: true)
!845 = !DIEnumerator(name: "ICON_FILE_PARENT", value: 691, isUnsigned: true)
!846 = !DIEnumerator(name: "ICON_FILE_REFRESH", value: 692, isUnsigned: true)
!847 = !DIEnumerator(name: "ICON_FILE_FOLDER", value: 693, isUnsigned: true)
!848 = !DIEnumerator(name: "ICON_FILE_BLANK", value: 694, isUnsigned: true)
!849 = !DIEnumerator(name: "ICON_FILE_BLEND", value: 695, isUnsigned: true)
!850 = !DIEnumerator(name: "ICON_FILE_IMAGE", value: 696, isUnsigned: true)
!851 = !DIEnumerator(name: "ICON_FILE_MOVIE", value: 697, isUnsigned: true)
!852 = !DIEnumerator(name: "ICON_FILE_SCRIPT", value: 698, isUnsigned: true)
!853 = !DIEnumerator(name: "ICON_FILE_SOUND", value: 699, isUnsigned: true)
!854 = !DIEnumerator(name: "ICON_FILE_FONT", value: 700, isUnsigned: true)
!855 = !DIEnumerator(name: "ICON_FILE_TEXT", value: 701, isUnsigned: true)
!856 = !DIEnumerator(name: "ICON_RECOVER_AUTO", value: 702, isUnsigned: true)
!857 = !DIEnumerator(name: "ICON_SAVE_PREFS", value: 703, isUnsigned: true)
!858 = !DIEnumerator(name: "ICON_LINK_BLEND", value: 704, isUnsigned: true)
!859 = !DIEnumerator(name: "ICON_APPEND_BLEND", value: 705, isUnsigned: true)
!860 = !DIEnumerator(name: "ICON_IMPORT", value: 706, isUnsigned: true)
!861 = !DIEnumerator(name: "ICON_EXPORT", value: 707, isUnsigned: true)
!862 = !DIEnumerator(name: "ICON_EXTERNAL_DATA", value: 708, isUnsigned: true)
!863 = !DIEnumerator(name: "ICON_LOAD_FACTORY", value: 709, isUnsigned: true)
!864 = !DIEnumerator(name: "ICON_BLANK300", value: 710, isUnsigned: true)
!865 = !DIEnumerator(name: "ICON_BLANK301", value: 711, isUnsigned: true)
!866 = !DIEnumerator(name: "ICON_BLANK302", value: 712, isUnsigned: true)
!867 = !DIEnumerator(name: "ICON_BLANK303", value: 713, isUnsigned: true)
!868 = !DIEnumerator(name: "ICON_BLANK304", value: 714, isUnsigned: true)
!869 = !DIEnumerator(name: "ICON_LOOP_BACK", value: 715, isUnsigned: true)
!870 = !DIEnumerator(name: "ICON_LOOP_FORWARDS", value: 716, isUnsigned: true)
!871 = !DIEnumerator(name: "ICON_BACK", value: 717, isUnsigned: true)
!872 = !DIEnumerator(name: "ICON_FORWARD", value: 718, isUnsigned: true)
!873 = !DIEnumerator(name: "ICON_BLANK309", value: 719, isUnsigned: true)
!874 = !DIEnumerator(name: "ICON_BLANK310", value: 720, isUnsigned: true)
!875 = !DIEnumerator(name: "ICON_BLANK311", value: 721, isUnsigned: true)
!876 = !DIEnumerator(name: "ICON_BLANK312", value: 722, isUnsigned: true)
!877 = !DIEnumerator(name: "ICON_BLANK313", value: 723, isUnsigned: true)
!878 = !DIEnumerator(name: "ICON_BLANK314", value: 724, isUnsigned: true)
!879 = !DIEnumerator(name: "ICON_BLANK315", value: 725, isUnsigned: true)
!880 = !DIEnumerator(name: "ICON_FILE_BACKUP", value: 726, isUnsigned: true)
!881 = !DIEnumerator(name: "ICON_DISK_DRIVE", value: 727, isUnsigned: true)
!882 = !DIEnumerator(name: "ICON_MATPLANE", value: 728, isUnsigned: true)
!883 = !DIEnumerator(name: "ICON_MATSPHERE", value: 729, isUnsigned: true)
!884 = !DIEnumerator(name: "ICON_MATCUBE", value: 730, isUnsigned: true)
!885 = !DIEnumerator(name: "ICON_MONKEY", value: 731, isUnsigned: true)
!886 = !DIEnumerator(name: "ICON_HAIR", value: 732, isUnsigned: true)
!887 = !DIEnumerator(name: "ICON_ALIASED", value: 733, isUnsigned: true)
!888 = !DIEnumerator(name: "ICON_ANTIALIASED", value: 734, isUnsigned: true)
!889 = !DIEnumerator(name: "ICON_MAT_SPHERE_SKY", value: 735, isUnsigned: true)
!890 = !DIEnumerator(name: "ICON_BLANK319", value: 736, isUnsigned: true)
!891 = !DIEnumerator(name: "ICON_BLANK320", value: 737, isUnsigned: true)
!892 = !DIEnumerator(name: "ICON_BLANK321", value: 738, isUnsigned: true)
!893 = !DIEnumerator(name: "ICON_BLANK322", value: 739, isUnsigned: true)
!894 = !DIEnumerator(name: "ICON_WORDWRAP_OFF", value: 740, isUnsigned: true)
!895 = !DIEnumerator(name: "ICON_WORDWRAP_ON", value: 741, isUnsigned: true)
!896 = !DIEnumerator(name: "ICON_SYNTAX_OFF", value: 742, isUnsigned: true)
!897 = !DIEnumerator(name: "ICON_SYNTAX_ON", value: 743, isUnsigned: true)
!898 = !DIEnumerator(name: "ICON_LINENUMBERS_OFF", value: 744, isUnsigned: true)
!899 = !DIEnumerator(name: "ICON_LINENUMBERS_ON", value: 745, isUnsigned: true)
!900 = !DIEnumerator(name: "ICON_SCRIPTPLUGINS", value: 746, isUnsigned: true)
!901 = !DIEnumerator(name: "ICON_BLANK323", value: 747, isUnsigned: true)
!902 = !DIEnumerator(name: "ICON_BLANK324", value: 748, isUnsigned: true)
!903 = !DIEnumerator(name: "ICON_BLANK325", value: 749, isUnsigned: true)
!904 = !DIEnumerator(name: "ICON_BLANK326", value: 750, isUnsigned: true)
!905 = !DIEnumerator(name: "ICON_BLANK327", value: 751, isUnsigned: true)
!906 = !DIEnumerator(name: "ICON_BLANK328", value: 752, isUnsigned: true)
!907 = !DIEnumerator(name: "ICON_BLANK328b", value: 753, isUnsigned: true)
!908 = !DIEnumerator(name: "ICON_SEQ_SEQUENCER", value: 754, isUnsigned: true)
!909 = !DIEnumerator(name: "ICON_SEQ_PREVIEW", value: 755, isUnsigned: true)
!910 = !DIEnumerator(name: "ICON_SEQ_LUMA_WAVEFORM", value: 756, isUnsigned: true)
!911 = !DIEnumerator(name: "ICON_SEQ_CHROMA_SCOPE", value: 757, isUnsigned: true)
!912 = !DIEnumerator(name: "ICON_SEQ_HISTOGRAM", value: 758, isUnsigned: true)
!913 = !DIEnumerator(name: "ICON_SEQ_SPLITVIEW", value: 759, isUnsigned: true)
!914 = !DIEnumerator(name: "ICON_BLANK331", value: 760, isUnsigned: true)
!915 = !DIEnumerator(name: "ICON_BLANK332", value: 761, isUnsigned: true)
!916 = !DIEnumerator(name: "ICON_BLANK333", value: 762, isUnsigned: true)
!917 = !DIEnumerator(name: "ICON_IMAGE_RGB", value: 763, isUnsigned: true)
!918 = !DIEnumerator(name: "ICON_IMAGE_RGB_ALPHA", value: 764, isUnsigned: true)
!919 = !DIEnumerator(name: "ICON_IMAGE_ALPHA", value: 765, isUnsigned: true)
!920 = !DIEnumerator(name: "ICON_IMAGE_ZDEPTH", value: 766, isUnsigned: true)
!921 = !DIEnumerator(name: "ICON_IMAGEFILE", value: 767, isUnsigned: true)
!922 = !DIEnumerator(name: "ICON_BLANK336", value: 768, isUnsigned: true)
!923 = !DIEnumerator(name: "ICON_BLANK337", value: 769, isUnsigned: true)
!924 = !DIEnumerator(name: "ICON_BLANK338", value: 770, isUnsigned: true)
!925 = !DIEnumerator(name: "ICON_BLANK339", value: 771, isUnsigned: true)
!926 = !DIEnumerator(name: "ICON_BLANK340", value: 772, isUnsigned: true)
!927 = !DIEnumerator(name: "ICON_BLANK341", value: 773, isUnsigned: true)
!928 = !DIEnumerator(name: "ICON_BLANK342", value: 774, isUnsigned: true)
!929 = !DIEnumerator(name: "ICON_BLANK343", value: 775, isUnsigned: true)
!930 = !DIEnumerator(name: "ICON_BLANK344", value: 776, isUnsigned: true)
!931 = !DIEnumerator(name: "ICON_BLANK345", value: 777, isUnsigned: true)
!932 = !DIEnumerator(name: "ICON_BLANK346", value: 778, isUnsigned: true)
!933 = !DIEnumerator(name: "ICON_BLANK346b", value: 779, isUnsigned: true)
!934 = !DIEnumerator(name: "ICON_BRUSH_ADD", value: 780, isUnsigned: true)
!935 = !DIEnumerator(name: "ICON_BRUSH_BLOB", value: 781, isUnsigned: true)
!936 = !DIEnumerator(name: "ICON_BRUSH_BLUR", value: 782, isUnsigned: true)
!937 = !DIEnumerator(name: "ICON_BRUSH_CLAY", value: 783, isUnsigned: true)
!938 = !DIEnumerator(name: "ICON_BRUSH_CLAY_STRIPS", value: 784, isUnsigned: true)
!939 = !DIEnumerator(name: "ICON_BRUSH_CLONE", value: 785, isUnsigned: true)
!940 = !DIEnumerator(name: "ICON_BRUSH_CREASE", value: 786, isUnsigned: true)
!941 = !DIEnumerator(name: "ICON_BRUSH_DARKEN", value: 787, isUnsigned: true)
!942 = !DIEnumerator(name: "ICON_BRUSH_FILL", value: 788, isUnsigned: true)
!943 = !DIEnumerator(name: "ICON_BRUSH_FLATTEN", value: 789, isUnsigned: true)
!944 = !DIEnumerator(name: "ICON_BRUSH_GRAB", value: 790, isUnsigned: true)
!945 = !DIEnumerator(name: "ICON_BRUSH_INFLATE", value: 791, isUnsigned: true)
!946 = !DIEnumerator(name: "ICON_BRUSH_LAYER", value: 792, isUnsigned: true)
!947 = !DIEnumerator(name: "ICON_BRUSH_LIGHTEN", value: 793, isUnsigned: true)
!948 = !DIEnumerator(name: "ICON_BRUSH_MASK", value: 794, isUnsigned: true)
!949 = !DIEnumerator(name: "ICON_BRUSH_MIX", value: 795, isUnsigned: true)
!950 = !DIEnumerator(name: "ICON_BRUSH_MULTIPLY", value: 796, isUnsigned: true)
!951 = !DIEnumerator(name: "ICON_BRUSH_NUDGE", value: 797, isUnsigned: true)
!952 = !DIEnumerator(name: "ICON_BRUSH_PINCH", value: 798, isUnsigned: true)
!953 = !DIEnumerator(name: "ICON_BRUSH_SCRAPE", value: 799, isUnsigned: true)
!954 = !DIEnumerator(name: "ICON_BRUSH_SCULPT_DRAW", value: 800, isUnsigned: true)
!955 = !DIEnumerator(name: "ICON_BRUSH_SMEAR", value: 801, isUnsigned: true)
!956 = !DIEnumerator(name: "ICON_BRUSH_SMOOTH", value: 802, isUnsigned: true)
!957 = !DIEnumerator(name: "ICON_BRUSH_SNAKE_HOOK", value: 803, isUnsigned: true)
!958 = !DIEnumerator(name: "ICON_BRUSH_SOFTEN", value: 804, isUnsigned: true)
!959 = !DIEnumerator(name: "ICON_BRUSH_SUBTRACT", value: 805, isUnsigned: true)
!960 = !DIEnumerator(name: "ICON_BRUSH_TEXDRAW", value: 806, isUnsigned: true)
!961 = !DIEnumerator(name: "ICON_BRUSH_TEXFILL", value: 807, isUnsigned: true)
!962 = !DIEnumerator(name: "ICON_BRUSH_TEXMASK", value: 808, isUnsigned: true)
!963 = !DIEnumerator(name: "ICON_BRUSH_THUMB", value: 809, isUnsigned: true)
!964 = !DIEnumerator(name: "ICON_BRUSH_ROTATE", value: 810, isUnsigned: true)
!965 = !DIEnumerator(name: "ICON_BRUSH_VERTEXDRAW", value: 811, isUnsigned: true)
!966 = !DIEnumerator(name: "ICON_MATCAP_01", value: 812, isUnsigned: true)
!967 = !DIEnumerator(name: "ICON_MATCAP_02", value: 813, isUnsigned: true)
!968 = !DIEnumerator(name: "ICON_MATCAP_03", value: 814, isUnsigned: true)
!969 = !DIEnumerator(name: "ICON_MATCAP_04", value: 815, isUnsigned: true)
!970 = !DIEnumerator(name: "ICON_MATCAP_05", value: 816, isUnsigned: true)
!971 = !DIEnumerator(name: "ICON_MATCAP_06", value: 817, isUnsigned: true)
!972 = !DIEnumerator(name: "ICON_MATCAP_07", value: 818, isUnsigned: true)
!973 = !DIEnumerator(name: "ICON_MATCAP_08", value: 819, isUnsigned: true)
!974 = !DIEnumerator(name: "ICON_MATCAP_09", value: 820, isUnsigned: true)
!975 = !DIEnumerator(name: "ICON_MATCAP_10", value: 821, isUnsigned: true)
!976 = !DIEnumerator(name: "ICON_MATCAP_11", value: 822, isUnsigned: true)
!977 = !DIEnumerator(name: "ICON_MATCAP_12", value: 823, isUnsigned: true)
!978 = !DIEnumerator(name: "ICON_MATCAP_13", value: 824, isUnsigned: true)
!979 = !DIEnumerator(name: "ICON_MATCAP_14", value: 825, isUnsigned: true)
!980 = !DIEnumerator(name: "ICON_MATCAP_15", value: 826, isUnsigned: true)
!981 = !DIEnumerator(name: "ICON_MATCAP_16", value: 827, isUnsigned: true)
!982 = !DIEnumerator(name: "ICON_MATCAP_17", value: 828, isUnsigned: true)
!983 = !DIEnumerator(name: "ICON_MATCAP_18", value: 829, isUnsigned: true)
!984 = !DIEnumerator(name: "ICON_MATCAP_19", value: 830, isUnsigned: true)
!985 = !DIEnumerator(name: "ICON_MATCAP_20", value: 831, isUnsigned: true)
!986 = !DIEnumerator(name: "ICON_MATCAP_21", value: 832, isUnsigned: true)
!987 = !DIEnumerator(name: "ICON_MATCAP_22", value: 833, isUnsigned: true)
!988 = !DIEnumerator(name: "ICON_MATCAP_23", value: 834, isUnsigned: true)
!989 = !DIEnumerator(name: "ICON_MATCAP_24", value: 835, isUnsigned: true)
!990 = !DIEnumerator(name: "VICO_VIEW3D_VEC", value: 836, isUnsigned: true)
!991 = !DIEnumerator(name: "VICO_EDIT_VEC", value: 837, isUnsigned: true)
!992 = !DIEnumerator(name: "VICO_EDITMODE_VEC_DEHLT", value: 838, isUnsigned: true)
!993 = !DIEnumerator(name: "VICO_EDITMODE_VEC_HLT", value: 839, isUnsigned: true)
!994 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_RIGHT_VEC", value: 840, isUnsigned: true)
!995 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_DOWN_VEC", value: 841, isUnsigned: true)
!996 = !DIEnumerator(name: "VICO_MOVE_UP_VEC", value: 842, isUnsigned: true)
!997 = !DIEnumerator(name: "VICO_MOVE_DOWN_VEC", value: 843, isUnsigned: true)
!998 = !DIEnumerator(name: "VICO_X_VEC", value: 844, isUnsigned: true)
!999 = !DIEnumerator(name: "VICO_SMALL_TRI_RIGHT_VEC", value: 845, isUnsigned: true)
!1000 = !DIEnumerator(name: "BIFICONID_LAST", value: 846, isUnsigned: true)
!1001 = !{!1002, !1003, !1026, !2634, !2645, !2654, !2664, !1127, !2768}
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "bStretchToConstraint", file: !31, line: 296, baseType: !1005)
!1005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bStretchToConstraint", file: !31, line: 285, size: 832, elements: !1006)
!1006 = !{!1007, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !1005, file: !31, line: 286, baseType: !1008, size: 64)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !6, line: 115, size: 11392, elements: !1010)
!1010 = !{!1011, !1082, !1151, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1169, !1180, !1182, !1183, !1226, !1227, !1231, !1232, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1259, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1275, !1276, !1277, !1278, !1279, !1280, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1351, !1354, !1357, !1358, !1359, !1360, !1361, !1364, !1367, !1370, !1371, !1377, !1378, !1379, !1380, !1381, !1382, !1384, !1387, !1390, !1394, !2613, !2614}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1009, file: !6, line: 116, baseType: !1012, size: 960)
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !1013, line: 130, baseType: !1014)
!1013 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !1013, line: 117, size: 960, elements: !1015)
!1015 = !{!1016, !1017, !1018, !1020, !1040, !1044, !1046, !1048, !1049, !1050}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1014, file: !1013, line: 118, baseType: !1002, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1014, file: !1013, line: 118, baseType: !1002, size: 64, offset: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !1014, file: !1013, line: 119, baseType: !1019, size: 64, offset: 128)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1014, file: !1013, line: 120, baseType: !1021, size: 64, offset: 192)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !1013, line: 136, size: 17600, elements: !1023)
!1023 = !{!1024, !1025, !1027, !1030, !1035, !1036, !1037}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1022, file: !1013, line: 137, baseType: !1012, size: 960)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !1022, file: !1013, line: 138, baseType: !1026, size: 64, offset: 960)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !1022, file: !1013, line: 139, baseType: !1028, size: 64, offset: 1024)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1029 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !1013, line: 43, flags: DIFlagFwdDecl)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1022, file: !1013, line: 140, baseType: !1031, size: 8192, offset: 1088)
!1031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 8192, elements: !1033)
!1032 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1033 = !{!1034}
!1034 = !DISubrange(count: 1024)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1022, file: !1013, line: 141, baseType: !1031, size: 8192, offset: 9280)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1022, file: !1013, line: 148, baseType: !1021, size: 64, offset: 17472)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1022, file: !1013, line: 150, baseType: !1038, size: 64, offset: 17536)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !1013, line: 45, flags: DIFlagFwdDecl)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1014, file: !1013, line: 121, baseType: !1041, size: 528, offset: 256)
!1041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 528, elements: !1042)
!1042 = !{!1043}
!1043 = !DISubrange(count: 66)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1014, file: !1013, line: 126, baseType: !1045, size: 16, offset: 784)
!1045 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1014, file: !1013, line: 127, baseType: !1047, size: 32, offset: 800)
!1047 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !1014, file: !1013, line: 128, baseType: !1047, size: 32, offset: 832)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1014, file: !1013, line: 128, baseType: !1047, size: 32, offset: 864)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1014, file: !1013, line: 129, baseType: !1051, size: 64, offset: 896)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !1013, line: 75, baseType: !1053)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !1013, line: 62, size: 1024, elements: !1054)
!1054 = !{!1055, !1057, !1058, !1059, !1060, !1061, !1065, !1066, !1080, !1081}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1053, file: !1013, line: 63, baseType: !1056, size: 64)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1053, file: !1013, line: 63, baseType: !1056, size: 64, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1053, file: !1013, line: 64, baseType: !1032, size: 8, offset: 128)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1053, file: !1013, line: 64, baseType: !1032, size: 8, offset: 136)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1053, file: !1013, line: 65, baseType: !1045, size: 16, offset: 144)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1053, file: !1013, line: 66, baseType: !1062, size: 512, offset: 160)
!1062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 512, elements: !1063)
!1063 = !{!1064}
!1064 = !DISubrange(count: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !1053, file: !1013, line: 67, baseType: !1047, size: 32, offset: 672)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1053, file: !1013, line: 69, baseType: !1067, size: 256, offset: 704)
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !1013, line: 60, baseType: !1068)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !1013, line: 48, size: 256, elements: !1069)
!1069 = !{!1070, !1071, !1078, !1079}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1068, file: !1013, line: 49, baseType: !1002, size: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1068, file: !1013, line: 58, baseType: !1072, size: 128, offset: 64)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !1073, line: 71, baseType: !1074)
!1073 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !1073, line: 69, size: 128, elements: !1075)
!1075 = !{!1076, !1077}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1074, file: !1073, line: 70, baseType: !1002, size: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1074, file: !1073, line: 70, baseType: !1002, size: 64, offset: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1068, file: !1013, line: 59, baseType: !1047, size: 32, offset: 192)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !1068, file: !1013, line: 59, baseType: !1047, size: 32, offset: 224)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1053, file: !1013, line: 70, baseType: !1047, size: 32, offset: 960)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !1053, file: !1013, line: 74, baseType: !1047, size: 32, offset: 992)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1009, file: !6, line: 117, baseType: !1083, size: 64, offset: 960)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !130, line: 838, size: 768, elements: !1085)
!1085 = !{!1086, !1100, !1101, !1111, !1112, !1144, !1145, !1146, !1147, !1148, !1149, !1150}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1084, file: !130, line: 840, baseType: !1087, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAction", file: !47, line: 499, baseType: !1089)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !47, line: 486, size: 1600, elements: !1090)
!1090 = !{!1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1089, file: !47, line: 487, baseType: !1012, size: 960)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !1089, file: !47, line: 489, baseType: !1072, size: 128, offset: 960)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1089, file: !47, line: 490, baseType: !1072, size: 128, offset: 1088)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1089, file: !47, line: 491, baseType: !1072, size: 128, offset: 1216)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1089, file: !47, line: 492, baseType: !1072, size: 128, offset: 1344)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1089, file: !47, line: 494, baseType: !1047, size: 32, offset: 1472)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !1089, file: !47, line: 495, baseType: !1047, size: 32, offset: 1504)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !1089, file: !47, line: 497, baseType: !1047, size: 32, offset: 1536)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1089, file: !47, line: 498, baseType: !1047, size: 32, offset: 1568)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "tmpact", scope: !1084, file: !130, line: 844, baseType: !1087, size: 64, offset: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !1084, file: !130, line: 848, baseType: !1102, size: 64, offset: 128)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimMapper", file: !130, line: 549, baseType: !1104)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimMapper", file: !130, line: 544, size: 320, elements: !1105)
!1105 = !{!1106, !1108, !1109, !1110}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1104, file: !130, line: 545, baseType: !1107, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1104, file: !130, line: 545, baseType: !1107, size: 64, offset: 64)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !1104, file: !130, line: 547, baseType: !1087, size: 64, offset: 128)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "mappings", scope: !1104, file: !130, line: 548, baseType: !1072, size: 128, offset: 192)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tracks", scope: !1084, file: !130, line: 851, baseType: !1072, size: 128, offset: 192)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "actstrip", scope: !1084, file: !130, line: 853, baseType: !1113, size: 64, offset: 320)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaStrip", file: !130, line: 594, baseType: !1115)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaStrip", file: !130, line: 561, size: 1664, elements: !1116)
!1116 = !{!1117, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1115, file: !130, line: 562, baseType: !1118, size: 64)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1115, file: !130, line: 562, baseType: !1118, size: 64, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !1115, file: !130, line: 564, baseType: !1072, size: 128, offset: 128)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !1115, file: !130, line: 565, baseType: !1087, size: 64, offset: 256)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !1115, file: !130, line: 566, baseType: !1102, size: 64, offset: 320)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "fcurves", scope: !1115, file: !130, line: 568, baseType: !1072, size: 128, offset: 384)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1115, file: !130, line: 569, baseType: !1072, size: 128, offset: 512)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1115, file: !130, line: 571, baseType: !1062, size: 512, offset: 640)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !1115, file: !130, line: 573, baseType: !1127, size: 32, offset: 1152)
!1127 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "strip_time", scope: !1115, file: !130, line: 574, baseType: !1127, size: 32, offset: 1184)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1115, file: !130, line: 576, baseType: !1127, size: 32, offset: 1216)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1115, file: !130, line: 576, baseType: !1127, size: 32, offset: 1248)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "actstart", scope: !1115, file: !130, line: 577, baseType: !1127, size: 32, offset: 1280)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "actend", scope: !1115, file: !130, line: 577, baseType: !1127, size: 32, offset: 1312)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !1115, file: !130, line: 579, baseType: !1127, size: 32, offset: 1344)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1115, file: !130, line: 580, baseType: !1127, size: 32, offset: 1376)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "blendin", scope: !1115, file: !130, line: 582, baseType: !1127, size: 32, offset: 1408)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "blendout", scope: !1115, file: !130, line: 582, baseType: !1127, size: 32, offset: 1440)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "blendmode", scope: !1115, file: !130, line: 583, baseType: !1045, size: 16, offset: 1472)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "extendmode", scope: !1115, file: !130, line: 585, baseType: !1045, size: 16, offset: 1488)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1115, file: !130, line: 586, baseType: !1045, size: 16, offset: 1504)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1115, file: !130, line: 588, baseType: !1045, size: 16, offset: 1520)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handle", scope: !1115, file: !130, line: 590, baseType: !1002, size: 64, offset: 1536)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1115, file: !130, line: 592, baseType: !1047, size: 32, offset: 1600)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1115, file: !130, line: 593, baseType: !1047, size: 32, offset: 1632)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "drivers", scope: !1084, file: !130, line: 858, baseType: !1072, size: 128, offset: 384)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "overrides", scope: !1084, file: !130, line: 859, baseType: !1072, size: 128, offset: 512)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1084, file: !130, line: 862, baseType: !1047, size: 32, offset: 640)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1084, file: !130, line: 863, baseType: !1047, size: 32, offset: 672)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "act_blendmode", scope: !1084, file: !130, line: 866, baseType: !1045, size: 16, offset: 704)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "act_extendmode", scope: !1084, file: !130, line: 867, baseType: !1045, size: 16, offset: 720)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "act_influence", scope: !1084, file: !130, line: 868, baseType: !1127, size: 32, offset: 736)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1009, file: !6, line: 119, baseType: !1152, size: 64, offset: 1024)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64)
!1153 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !6, line: 57, flags: DIFlagFwdDecl)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1009, file: !6, line: 121, baseType: !1045, size: 16, offset: 1088)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !1009, file: !6, line: 121, baseType: !1045, size: 16, offset: 1104)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !1009, file: !6, line: 122, baseType: !1047, size: 32, offset: 1120)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !1009, file: !6, line: 122, baseType: !1047, size: 32, offset: 1152)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !1009, file: !6, line: 122, baseType: !1047, size: 32, offset: 1184)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !1009, file: !6, line: 123, baseType: !1062, size: 512, offset: 1216)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1009, file: !6, line: 124, baseType: !1008, size: 64, offset: 1728)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !1009, file: !6, line: 124, baseType: !1008, size: 64, offset: 1792)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1009, file: !6, line: 127, baseType: !1008, size: 64, offset: 1856)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !1009, file: !6, line: 127, baseType: !1008, size: 64, offset: 1920)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !1009, file: !6, line: 127, baseType: !1008, size: 64, offset: 1984)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1009, file: !6, line: 128, baseType: !1166, size: 64, offset: 2048)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !1168, line: 46, flags: DIFlagFwdDecl)
!1168 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1009, file: !6, line: 130, baseType: !1170, size: 64, offset: 2112)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !6, line: 97, size: 832, elements: !1172)
!1172 = !{!1173, !1178, !1179}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1171, file: !6, line: 98, baseType: !1174, size: 768)
!1174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1127, size: 768, elements: !1175)
!1175 = !{!1176, !1177}
!1176 = !DISubrange(count: 8)
!1177 = !DISubrange(count: 3)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1171, file: !6, line: 99, baseType: !1047, size: 32, offset: 768)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1171, file: !6, line: 99, baseType: !1047, size: 32, offset: 800)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1009, file: !6, line: 131, baseType: !1181, size: 64, offset: 2176)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !1009, file: !6, line: 132, baseType: !1181, size: 64, offset: 2240)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !1009, file: !6, line: 133, baseType: !1184, size: 64, offset: 2304)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !47, line: 334, size: 1728, elements: !1186)
!1186 = !{!1187, !1188, !1191, !1192, !1193, !1194, !1195, !1196, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1225}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1185, file: !47, line: 335, baseType: !1072, size: 128)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !1185, file: !47, line: 336, baseType: !1189, size: 64, offset: 128)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !47, line: 47, flags: DIFlagFwdDecl)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1185, file: !47, line: 338, baseType: !1045, size: 16, offset: 192)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1185, file: !47, line: 338, baseType: !1045, size: 16, offset: 208)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !1185, file: !47, line: 339, baseType: !7, size: 32, offset: 224)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1185, file: !47, line: 340, baseType: !1047, size: 32, offset: 256)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1185, file: !47, line: 342, baseType: !1127, size: 32, offset: 288)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !1185, file: !47, line: 343, baseType: !1197, size: 96, offset: 320)
!1197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1127, size: 96, elements: !1198)
!1198 = !{!1177}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !1185, file: !47, line: 344, baseType: !1197, size: 96, offset: 416)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !1185, file: !47, line: 347, baseType: !1072, size: 128, offset: 512)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !1185, file: !47, line: 349, baseType: !1047, size: 32, offset: 640)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !1185, file: !47, line: 350, baseType: !1047, size: 32, offset: 672)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !1185, file: !47, line: 351, baseType: !1002, size: 64, offset: 704)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !1185, file: !47, line: 352, baseType: !1002, size: 64, offset: 768)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !1185, file: !47, line: 354, baseType: !1206, size: 384, offset: 832)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !47, line: 116, baseType: !1207)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !47, line: 94, size: 384, elements: !1208)
!1208 = !{!1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !1207, file: !47, line: 96, baseType: !1047, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !1207, file: !47, line: 96, baseType: !1047, size: 32, offset: 32)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !1207, file: !47, line: 97, baseType: !1047, size: 32, offset: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !1207, file: !47, line: 97, baseType: !1047, size: 32, offset: 96)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !1207, file: !47, line: 99, baseType: !1045, size: 16, offset: 128)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !1207, file: !47, line: 100, baseType: !1045, size: 16, offset: 144)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !1207, file: !47, line: 102, baseType: !1045, size: 16, offset: 160)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1207, file: !47, line: 105, baseType: !1045, size: 16, offset: 176)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !1207, file: !47, line: 108, baseType: !1045, size: 16, offset: 192)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !1207, file: !47, line: 109, baseType: !1045, size: 16, offset: 208)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !1207, file: !47, line: 111, baseType: !1045, size: 16, offset: 224)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !1207, file: !47, line: 112, baseType: !1045, size: 16, offset: 240)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !1207, file: !47, line: 114, baseType: !1047, size: 32, offset: 256)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !1207, file: !47, line: 114, baseType: !1047, size: 32, offset: 288)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !1207, file: !47, line: 115, baseType: !1047, size: 32, offset: 320)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !1207, file: !47, line: 115, baseType: !1047, size: 32, offset: 352)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !1185, file: !47, line: 355, baseType: !1062, size: 512, offset: 1216)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1009, file: !6, line: 134, baseType: !1002, size: 64, offset: 2368)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1009, file: !6, line: 136, baseType: !1228, size: 64, offset: 2432)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!1229 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !1230, line: 61, flags: DIFlagFwdDecl)
!1230 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !1009, file: !6, line: 138, baseType: !1206, size: 384, offset: 2496)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !1009, file: !6, line: 139, baseType: !1233, size: 64, offset: 2880)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64)
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !47, line: 80, baseType: !1235)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !47, line: 72, size: 192, elements: !1236)
!1236 = !{!1237, !1244, !1245, !1246, !1247}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1235, file: !47, line: 73, baseType: !1238, size: 64)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !47, line: 59, baseType: !1240)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !47, line: 56, size: 128, elements: !1241)
!1241 = !{!1242, !1243}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1240, file: !47, line: 57, baseType: !1197, size: 96)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1240, file: !47, line: 58, baseType: !1047, size: 32, offset: 96)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1235, file: !47, line: 74, baseType: !1047, size: 32, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1235, file: !47, line: 76, baseType: !1047, size: 32, offset: 96)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1235, file: !47, line: 77, baseType: !1047, size: 32, offset: 128)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1235, file: !47, line: 79, baseType: !1047, size: 32, offset: 160)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !1009, file: !6, line: 141, baseType: !1072, size: 128, offset: 2944)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !1009, file: !6, line: 142, baseType: !1072, size: 128, offset: 3072)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !1009, file: !6, line: 143, baseType: !1072, size: 128, offset: 3200)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1009, file: !6, line: 144, baseType: !1072, size: 128, offset: 3328)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1009, file: !6, line: 146, baseType: !1047, size: 32, offset: 3456)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !1009, file: !6, line: 147, baseType: !1047, size: 32, offset: 3488)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1009, file: !6, line: 150, baseType: !1255, size: 64, offset: 3520)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !1258, line: 46, flags: DIFlagFwdDecl)
!1258 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !1009, file: !6, line: 151, baseType: !1260, size: 64, offset: 3584)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !1009, file: !6, line: 152, baseType: !1047, size: 32, offset: 3648)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !1009, file: !6, line: 153, baseType: !1047, size: 32, offset: 3680)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1009, file: !6, line: 156, baseType: !1197, size: 96, offset: 3712)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !1009, file: !6, line: 156, baseType: !1197, size: 96, offset: 3808)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !1009, file: !6, line: 156, baseType: !1197, size: 96, offset: 3904)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1009, file: !6, line: 157, baseType: !1197, size: 96, offset: 4000)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !1009, file: !6, line: 158, baseType: !1197, size: 96, offset: 4096)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !1009, file: !6, line: 159, baseType: !1197, size: 96, offset: 4192)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1009, file: !6, line: 160, baseType: !1197, size: 96, offset: 4288)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !1009, file: !6, line: 160, baseType: !1197, size: 96, offset: 4384)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !1009, file: !6, line: 161, baseType: !1272, size: 128, offset: 4480)
!1272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1127, size: 128, elements: !1273)
!1273 = !{!1274}
!1274 = !DISubrange(count: 4)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !1009, file: !6, line: 161, baseType: !1272, size: 128, offset: 4608)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !1009, file: !6, line: 162, baseType: !1197, size: 96, offset: 4736)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !1009, file: !6, line: 162, baseType: !1197, size: 96, offset: 4832)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !1009, file: !6, line: 163, baseType: !1127, size: 32, offset: 4928)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !1009, file: !6, line: 163, baseType: !1127, size: 32, offset: 4960)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !1009, file: !6, line: 164, baseType: !1281, size: 512, offset: 4992)
!1281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1127, size: 512, elements: !1282)
!1282 = !{!1274, !1274}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !1009, file: !6, line: 165, baseType: !1281, size: 512, offset: 5504)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !1009, file: !6, line: 166, baseType: !1281, size: 512, offset: 6016)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1009, file: !6, line: 167, baseType: !1281, size: 512, offset: 6528)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !1009, file: !6, line: 176, baseType: !1281, size: 512, offset: 7040)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1009, file: !6, line: 178, baseType: !7, size: 32, offset: 7552)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1009, file: !6, line: 180, baseType: !1045, size: 16, offset: 7584)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !1009, file: !6, line: 181, baseType: !1045, size: 16, offset: 7600)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !1009, file: !6, line: 183, baseType: !1045, size: 16, offset: 7616)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !1009, file: !6, line: 183, baseType: !1045, size: 16, offset: 7632)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !1009, file: !6, line: 184, baseType: !1045, size: 16, offset: 7648)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !1009, file: !6, line: 184, baseType: !1045, size: 16, offset: 7664)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !1009, file: !6, line: 185, baseType: !1045, size: 16, offset: 7680)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !1009, file: !6, line: 186, baseType: !1045, size: 16, offset: 7696)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !1009, file: !6, line: 187, baseType: !1045, size: 16, offset: 7712)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !1009, file: !6, line: 188, baseType: !1032, size: 8, offset: 7728)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !1009, file: !6, line: 189, baseType: !1032, size: 8, offset: 7736)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !1009, file: !6, line: 192, baseType: !1047, size: 32, offset: 7744)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !1009, file: !6, line: 192, baseType: !1047, size: 32, offset: 7776)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !1009, file: !6, line: 192, baseType: !1047, size: 32, offset: 7808)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !1009, file: !6, line: 192, baseType: !1047, size: 32, offset: 7840)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1009, file: !6, line: 194, baseType: !1047, size: 32, offset: 7872)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !1009, file: !6, line: 202, baseType: !1127, size: 32, offset: 7904)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !1009, file: !6, line: 202, baseType: !1127, size: 32, offset: 7936)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !1009, file: !6, line: 202, baseType: !1127, size: 32, offset: 7968)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !1009, file: !6, line: 211, baseType: !1127, size: 32, offset: 8000)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !1009, file: !6, line: 212, baseType: !1127, size: 32, offset: 8032)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1009, file: !6, line: 213, baseType: !1127, size: 32, offset: 8064)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !1009, file: !6, line: 214, baseType: !1127, size: 32, offset: 8096)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !1009, file: !6, line: 215, baseType: !1127, size: 32, offset: 8128)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !1009, file: !6, line: 216, baseType: !1127, size: 32, offset: 8160)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !1009, file: !6, line: 219, baseType: !1127, size: 32, offset: 8192)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !1009, file: !6, line: 220, baseType: !1127, size: 32, offset: 8224)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !1009, file: !6, line: 221, baseType: !1127, size: 32, offset: 8256)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !1009, file: !6, line: 224, baseType: !1317, size: 16, offset: 8288)
!1317 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !1009, file: !6, line: 224, baseType: !1317, size: 16, offset: 8304)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !1009, file: !6, line: 226, baseType: !1045, size: 16, offset: 8320)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !1009, file: !6, line: 228, baseType: !1032, size: 8, offset: 8336)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !1009, file: !6, line: 229, baseType: !1032, size: 8, offset: 8344)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !1009, file: !6, line: 231, baseType: !1045, size: 16, offset: 8352)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !1009, file: !6, line: 232, baseType: !1032, size: 8, offset: 8368)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !1009, file: !6, line: 233, baseType: !1032, size: 8, offset: 8376)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !1009, file: !6, line: 234, baseType: !1127, size: 32, offset: 8384)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !1009, file: !6, line: 235, baseType: !1127, size: 32, offset: 8416)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1009, file: !6, line: 237, baseType: !1072, size: 128, offset: 8448)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !1009, file: !6, line: 238, baseType: !1072, size: 128, offset: 8576)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !1009, file: !6, line: 239, baseType: !1072, size: 128, offset: 8704)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !1009, file: !6, line: 240, baseType: !1072, size: 128, offset: 8832)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1009, file: !6, line: 242, baseType: !1127, size: 32, offset: 8960)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1009, file: !6, line: 244, baseType: !1045, size: 16, offset: 8992)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !1009, file: !6, line: 245, baseType: !1317, size: 16, offset: 9008)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1009, file: !6, line: 246, baseType: !1272, size: 128, offset: 9024)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !1009, file: !6, line: 248, baseType: !1047, size: 32, offset: 9152)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !1009, file: !6, line: 249, baseType: !1047, size: 32, offset: 9184)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !1009, file: !6, line: 251, baseType: !1338, size: 64, offset: 9216)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !6, line: 251, flags: DIFlagFwdDecl)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !1009, file: !6, line: 253, baseType: !1032, size: 8, offset: 9280)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1009, file: !6, line: 254, baseType: !1032, size: 8, offset: 9288)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !1009, file: !6, line: 255, baseType: !1045, size: 16, offset: 9296)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !1009, file: !6, line: 256, baseType: !1197, size: 96, offset: 9312)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !1009, file: !6, line: 258, baseType: !1072, size: 128, offset: 9408)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !1009, file: !6, line: 259, baseType: !1072, size: 128, offset: 9536)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !1009, file: !6, line: 260, baseType: !1072, size: 128, offset: 9664)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !1009, file: !6, line: 261, baseType: !1072, size: 128, offset: 9792)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1009, file: !6, line: 263, baseType: !1349, size: 64, offset: 9920)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !6, line: 52, flags: DIFlagFwdDecl)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !1009, file: !6, line: 264, baseType: !1352, size: 64, offset: 9984)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !6, line: 53, flags: DIFlagFwdDecl)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !1009, file: !6, line: 265, baseType: !1355, size: 64, offset: 10048)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !47, line: 46, flags: DIFlagFwdDecl)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !1009, file: !6, line: 267, baseType: !1032, size: 8, offset: 10112)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !1009, file: !6, line: 268, baseType: !1032, size: 8, offset: 10120)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !1009, file: !6, line: 269, baseType: !1045, size: 16, offset: 10128)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !1009, file: !6, line: 270, baseType: !1127, size: 32, offset: 10144)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !1009, file: !6, line: 272, baseType: !1362, size: 64, offset: 10176)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!1363 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !6, line: 54, flags: DIFlagFwdDecl)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !1009, file: !6, line: 275, baseType: !1365, size: 64, offset: 10240)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !6, line: 275, flags: DIFlagFwdDecl)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !1009, file: !6, line: 277, baseType: !1368, size: 64, offset: 10304)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64)
!1369 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !6, line: 56, flags: DIFlagFwdDecl)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !1009, file: !6, line: 277, baseType: !1368, size: 64, offset: 10368)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !1009, file: !6, line: 278, baseType: !1372, size: 64, offset: 10432)
!1372 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1373, line: 27, baseType: !1374)
!1373 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1375, line: 45, baseType: !1376)
!1375 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1376 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1009, file: !6, line: 279, baseType: !1372, size: 64, offset: 10496)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1009, file: !6, line: 280, baseType: !7, size: 32, offset: 10560)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !1009, file: !6, line: 281, baseType: !7, size: 32, offset: 10592)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !1009, file: !6, line: 283, baseType: !1072, size: 128, offset: 10624)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !1009, file: !6, line: 284, baseType: !1072, size: 128, offset: 10752)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !1009, file: !6, line: 285, baseType: !1383, size: 64, offset: 10880)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !1009, file: !6, line: 287, baseType: !1385, size: 64, offset: 10944)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 64)
!1386 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !6, line: 59, flags: DIFlagFwdDecl)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !1009, file: !6, line: 288, baseType: !1388, size: 64, offset: 11008)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!1389 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !6, line: 288, flags: DIFlagFwdDecl)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !1009, file: !6, line: 290, baseType: !1391, size: 64, offset: 11072)
!1391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1127, size: 64, elements: !1392)
!1392 = !{!1393}
!1393 = !DISubrange(count: 2)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1009, file: !6, line: 291, baseType: !1395, size: 64, offset: 11136)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !1397, line: 65, baseType: !1398)
!1397 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !1397, line: 50, size: 320, elements: !1399)
!1399 = !{!1400, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1398, file: !1397, line: 51, baseType: !1401, size: 64)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !1230, line: 1216, size: 39680, elements: !1403)
!1403 = !{!1404, !1405, !1406, !1407, !1410, !1411, !1412, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1438, !1513, !1941, !2156, !2159, !2475, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2497, !2498, !2499, !2500, !2501, !2509, !2576, !2583, !2584, !2591, !2592, !2593, !2594, !2595, !2596, !2597}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1402, file: !1230, line: 1217, baseType: !1012, size: 960)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1402, file: !1230, line: 1218, baseType: !1083, size: 64, offset: 960)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1402, file: !1230, line: 1220, baseType: !1008, size: 64, offset: 1024)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1402, file: !1230, line: 1221, baseType: !1408, size: 64, offset: 1088)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !1230, line: 52, flags: DIFlagFwdDecl)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1402, file: !1230, line: 1223, baseType: !1401, size: 64, offset: 1152)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1402, file: !1230, line: 1225, baseType: !1072, size: 128, offset: 1216)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !1402, file: !1230, line: 1226, baseType: !1413, size: 64, offset: 1344)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !1230, line: 69, size: 320, elements: !1415)
!1415 = !{!1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1414, file: !1230, line: 70, baseType: !1413, size: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1414, file: !1230, line: 70, baseType: !1413, size: 64, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1414, file: !1230, line: 71, baseType: !7, size: 32, offset: 128)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1414, file: !1230, line: 71, baseType: !7, size: 32, offset: 160)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1414, file: !1230, line: 72, baseType: !1047, size: 32, offset: 192)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1414, file: !1230, line: 73, baseType: !1045, size: 16, offset: 224)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1414, file: !1230, line: 73, baseType: !1045, size: 16, offset: 240)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1414, file: !1230, line: 74, baseType: !1008, size: 64, offset: 256)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !1402, file: !1230, line: 1227, baseType: !1008, size: 64, offset: 1408)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1402, file: !1230, line: 1229, baseType: !1197, size: 96, offset: 1472)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !1402, file: !1230, line: 1230, baseType: !1197, size: 96, offset: 1568)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !1402, file: !1230, line: 1231, baseType: !1197, size: 96, offset: 1664)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !1402, file: !1230, line: 1231, baseType: !1197, size: 96, offset: 1760)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1402, file: !1230, line: 1233, baseType: !7, size: 32, offset: 1856)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !1402, file: !1230, line: 1234, baseType: !1047, size: 32, offset: 1888)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !1402, file: !1230, line: 1235, baseType: !7, size: 32, offset: 1920)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1402, file: !1230, line: 1237, baseType: !1045, size: 16, offset: 1952)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1402, file: !1230, line: 1239, baseType: !1032, size: 8, offset: 1968)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1402, file: !1230, line: 1240, baseType: !1435, size: 8, offset: 1976)
!1435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 8, elements: !1436)
!1436 = !{!1437}
!1437 = !DISubrange(count: 1)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1402, file: !1230, line: 1242, baseType: !1439, size: 64, offset: 1984)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !1441, line: 328, size: 3456, elements: !1442)
!1441 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1442 = !{!1443, !1444, !1445, !1449, !1450, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1479, !1480, !1481, !1484, !1489, !1490, !1493, !1497, !1501, !1505, !1509, !1510, !1511, !1512}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1440, file: !1441, line: 329, baseType: !1012, size: 960)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1440, file: !1441, line: 330, baseType: !1083, size: 64, offset: 960)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !1440, file: !1441, line: 332, baseType: !1446, size: 64, offset: 1024)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !1448, line: 32, flags: DIFlagFwdDecl)
!1448 = !DIFile(filename: "blender/source/blender/makesrna/RNA_enum_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1440, file: !1441, line: 333, baseType: !1062, size: 512, offset: 1088)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !1440, file: !1441, line: 335, baseType: !1451, size: 64, offset: 1600)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !1453, line: 41, flags: DIFlagFwdDecl)
!1453 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1440, file: !1441, line: 337, baseType: !1228, size: 64, offset: 1664)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !1440, file: !1441, line: 338, baseType: !1391, size: 64, offset: 1728)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1440, file: !1441, line: 340, baseType: !1072, size: 128, offset: 1792)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1440, file: !1441, line: 340, baseType: !1072, size: 128, offset: 1920)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1440, file: !1441, line: 342, baseType: !1047, size: 32, offset: 2048)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1440, file: !1441, line: 342, baseType: !1047, size: 32, offset: 2080)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !1440, file: !1441, line: 343, baseType: !1047, size: 32, offset: 2112)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1440, file: !1441, line: 345, baseType: !1047, size: 32, offset: 2144)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1440, file: !1441, line: 346, baseType: !1047, size: 32, offset: 2176)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !1440, file: !1441, line: 347, baseType: !1045, size: 16, offset: 2208)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1440, file: !1441, line: 348, baseType: !1045, size: 16, offset: 2224)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1440, file: !1441, line: 349, baseType: !1047, size: 32, offset: 2240)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !1440, file: !1441, line: 351, baseType: !1047, size: 32, offset: 2272)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !1440, file: !1441, line: 353, baseType: !1045, size: 16, offset: 2304)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !1440, file: !1441, line: 354, baseType: !1045, size: 16, offset: 2320)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !1440, file: !1441, line: 355, baseType: !1047, size: 32, offset: 2336)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !1440, file: !1441, line: 357, baseType: !1471, size: 128, offset: 2368)
!1471 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1472, line: 95, baseType: !1473)
!1472 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1472, line: 92, size: 128, elements: !1474)
!1474 = !{!1475, !1476, !1477, !1478}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1473, file: !1472, line: 93, baseType: !1127, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1473, file: !1472, line: 93, baseType: !1127, size: 32, offset: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1473, file: !1472, line: 94, baseType: !1127, size: 32, offset: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1473, file: !1472, line: 94, baseType: !1127, size: 32, offset: 96)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1440, file: !1441, line: 363, baseType: !1072, size: 128, offset: 2496)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1440, file: !1441, line: 363, baseType: !1072, size: 128, offset: 2624)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !1440, file: !1441, line: 368, baseType: !1482, size: 64, offset: 2752)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !1441, line: 48, flags: DIFlagFwdDecl)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !1440, file: !1441, line: 372, baseType: !1485, size: 32, offset: 2816)
!1485 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !1441, line: 274, baseType: !1486)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !1441, line: 271, size: 32, elements: !1487)
!1487 = !{!1488}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1486, file: !1441, line: 273, baseType: !7, size: 32)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1440, file: !1441, line: 373, baseType: !1047, size: 32, offset: 2848)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !1440, file: !1441, line: 382, baseType: !1491, size: 64, offset: 2880)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64)
!1492 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !1441, line: 46, flags: DIFlagFwdDecl)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1440, file: !1441, line: 385, baseType: !1494, size: 64, offset: 2944)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = !DISubroutineType(types: !1496)
!1496 = !{null, !1002, !1127}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !1440, file: !1441, line: 386, baseType: !1498, size: 64, offset: 3008)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{null, !1002, !1260}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !1440, file: !1441, line: 387, baseType: !1502, size: 64, offset: 3072)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64)
!1503 = !DISubroutineType(types: !1504)
!1504 = !{!1047, !1002}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !1440, file: !1441, line: 388, baseType: !1506, size: 64, offset: 3136)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 64)
!1507 = !DISubroutineType(types: !1508)
!1508 = !{null, !1002}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !1440, file: !1441, line: 389, baseType: !1002, size: 64, offset: 3200)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !1440, file: !1441, line: 389, baseType: !1002, size: 64, offset: 3264)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !1440, file: !1441, line: 389, baseType: !1002, size: 64, offset: 3328)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !1440, file: !1441, line: 389, baseType: !1002, size: 64, offset: 3392)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !1402, file: !1230, line: 1244, baseType: !1514, size: 64, offset: 2048)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1516, line: 200, size: 17024, elements: !1517)
!1516 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1517 = !{!1518, !1519, !1520, !1521, !1934, !1935, !1936, !1937, !1938, !1939, !1940}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !1515, file: !1516, line: 201, baseType: !1383, size: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1515, file: !1516, line: 202, baseType: !1072, size: 128, offset: 64)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !1515, file: !1516, line: 203, baseType: !1072, size: 128, offset: 192)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !1515, file: !1516, line: 206, baseType: !1522, size: 64, offset: 320)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !1516, line: 190, baseType: !1524)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !1516, line: 126, size: 2816, elements: !1525)
!1525 = !{!1526, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1624, !1625, !1626, !1627, !1905, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1933}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1524, file: !1516, line: 127, baseType: !1527, size: 64)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1524, file: !1516, line: 127, baseType: !1527, size: 64, offset: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1524, file: !1516, line: 128, baseType: !1002, size: 64, offset: 128)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1524, file: !1516, line: 129, baseType: !1002, size: 64, offset: 192)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1524, file: !1516, line: 130, baseType: !1062, size: 512, offset: 256)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1524, file: !1516, line: 132, baseType: !1047, size: 32, offset: 768)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1524, file: !1516, line: 132, baseType: !1047, size: 32, offset: 800)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1524, file: !1516, line: 133, baseType: !1047, size: 32, offset: 832)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1524, file: !1516, line: 134, baseType: !1047, size: 32, offset: 864)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !1524, file: !1516, line: 134, baseType: !1047, size: 32, offset: 896)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !1524, file: !1516, line: 134, baseType: !1047, size: 32, offset: 928)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1524, file: !1516, line: 135, baseType: !1047, size: 32, offset: 960)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1524, file: !1516, line: 135, baseType: !1047, size: 32, offset: 992)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1524, file: !1516, line: 136, baseType: !1047, size: 32, offset: 1024)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1524, file: !1516, line: 136, baseType: !1047, size: 32, offset: 1056)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !1524, file: !1516, line: 137, baseType: !1047, size: 32, offset: 1088)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !1524, file: !1516, line: 137, baseType: !1047, size: 32, offset: 1120)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !1524, file: !1516, line: 138, baseType: !1127, size: 32, offset: 1152)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !1524, file: !1516, line: 139, baseType: !1127, size: 32, offset: 1184)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !1524, file: !1516, line: 139, baseType: !1127, size: 32, offset: 1216)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !1524, file: !1516, line: 141, baseType: !1045, size: 16, offset: 1248)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !1524, file: !1516, line: 142, baseType: !1045, size: 16, offset: 1264)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !1524, file: !1516, line: 143, baseType: !1047, size: 32, offset: 1280)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !1524, file: !1516, line: 144, baseType: !1047, size: 32, offset: 1312)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1524, file: !1516, line: 146, baseType: !1552, size: 64, offset: 1344)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !1516, line: 114, baseType: !1554)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !1516, line: 99, size: 7232, elements: !1555)
!1555 = !{!1556, !1558, !1559, !1560, !1561, !1562, !1563, !1574, !1578, !1592, !1601, !1608, !1618}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1554, file: !1516, line: 100, baseType: !1557, size: 64)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1554, file: !1516, line: 100, baseType: !1557, size: 64, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1554, file: !1516, line: 101, baseType: !1047, size: 32, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1554, file: !1516, line: 101, baseType: !1047, size: 32, offset: 160)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1554, file: !1516, line: 102, baseType: !1047, size: 32, offset: 192)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1554, file: !1516, line: 102, baseType: !1047, size: 32, offset: 224)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !1554, file: !1516, line: 103, baseType: !1564, size: 64, offset: 256)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !1516, line: 59, baseType: !1566)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !1516, line: 56, size: 2112, elements: !1567)
!1567 = !{!1568, !1572, !1573}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1566, file: !1516, line: 57, baseType: !1569, size: 2048)
!1569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 2048, elements: !1570)
!1570 = !{!1571}
!1571 = !DISubrange(count: 256)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !1566, file: !1516, line: 58, baseType: !1047, size: 32, offset: 2048)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !1566, file: !1516, line: 58, baseType: !1047, size: 32, offset: 2080)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1554, file: !1516, line: 106, baseType: !1575, size: 6144, offset: 320)
!1575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 6144, elements: !1576)
!1576 = !{!1577}
!1577 = !DISubrange(count: 768)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1554, file: !1516, line: 107, baseType: !1579, size: 64, offset: 6464)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 64)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !1516, line: 97, baseType: !1581)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !1516, line: 83, size: 8320, elements: !1582)
!1582 = !{!1583, !1584, !1585, !1588, !1589, !1590, !1591}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1581, file: !1516, line: 84, baseType: !1575, size: 6144)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1581, file: !1516, line: 87, baseType: !1569, size: 2048, offset: 6144)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1581, file: !1516, line: 88, baseType: !1586, size: 64, offset: 8192)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 64)
!1587 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1397, line: 41, flags: DIFlagFwdDecl)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1581, file: !1516, line: 90, baseType: !1045, size: 16, offset: 8256)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1581, file: !1516, line: 92, baseType: !1045, size: 16, offset: 8272)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !1581, file: !1516, line: 93, baseType: !1045, size: 16, offset: 8288)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !1581, file: !1516, line: 95, baseType: !1045, size: 16, offset: 8304)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !1554, file: !1516, line: 108, baseType: !1593, size: 64, offset: 6528)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64)
!1594 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !1516, line: 66, baseType: !1595)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !1516, line: 61, size: 128, elements: !1596)
!1596 = !{!1597, !1598, !1599, !1600}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1595, file: !1516, line: 62, baseType: !1047, size: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !1595, file: !1516, line: 63, baseType: !1047, size: 32, offset: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1595, file: !1516, line: 64, baseType: !1047, size: 32, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1595, file: !1516, line: 65, baseType: !1047, size: 32, offset: 96)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !1554, file: !1516, line: 109, baseType: !1602, size: 64, offset: 6592)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !1516, line: 71, baseType: !1604)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !1516, line: 68, size: 64, elements: !1605)
!1605 = !{!1606, !1607}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !1604, file: !1516, line: 69, baseType: !1047, size: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !1604, file: !1516, line: 70, baseType: !1047, size: 32, offset: 32)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !1554, file: !1516, line: 110, baseType: !1609, size: 64, offset: 6656)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 64)
!1610 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !1516, line: 81, baseType: !1611)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !1516, line: 73, size: 352, elements: !1612)
!1612 = !{!1613, !1614, !1615, !1616, !1617}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !1611, file: !1516, line: 74, baseType: !1197, size: 96)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1611, file: !1516, line: 75, baseType: !1197, size: 96, offset: 96)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1611, file: !1516, line: 76, baseType: !1197, size: 96, offset: 192)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1611, file: !1516, line: 77, baseType: !1047, size: 32, offset: 288)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1611, file: !1516, line: 78, baseType: !1047, size: 32, offset: 320)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1554, file: !1516, line: 113, baseType: !1619, size: 512, offset: 6720)
!1619 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1620, line: 182, baseType: !1621)
!1620 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1620, line: 180, size: 512, elements: !1622)
!1622 = !{!1623}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1621, file: !1620, line: 181, baseType: !1062, size: 512)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1524, file: !1516, line: 148, baseType: !1166, size: 64, offset: 1408)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1524, file: !1516, line: 151, baseType: !1401, size: 64, offset: 1472)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !1524, file: !1516, line: 152, baseType: !1008, size: 64, offset: 1536)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1524, file: !1516, line: 153, baseType: !1628, size: 64, offset: 1600)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1630, line: 64, size: 19136, elements: !1631)
!1630 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1631 = !{!1632, !1633, !1634, !1635, !1636, !1637, !1639, !1640, !1641, !1642, !1645, !1646, !1891, !1892, !1900, !1901, !1902, !1903, !1904}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1629, file: !1630, line: 65, baseType: !1012, size: 960)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1629, file: !1630, line: 66, baseType: !1083, size: 64, offset: 960)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1629, file: !1630, line: 68, baseType: !1031, size: 8192, offset: 1024)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1629, file: !1630, line: 70, baseType: !1047, size: 32, offset: 9216)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1629, file: !1630, line: 71, baseType: !1047, size: 32, offset: 9248)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1629, file: !1630, line: 72, baseType: !1638, size: 64, offset: 9280)
!1638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1047, size: 64, elements: !1392)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1629, file: !1630, line: 74, baseType: !1127, size: 32, offset: 9344)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1629, file: !1630, line: 74, baseType: !1127, size: 32, offset: 9376)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1629, file: !1630, line: 76, baseType: !1586, size: 64, offset: 9408)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1629, file: !1630, line: 77, baseType: !1643, size: 64, offset: 9472)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!1644 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !1630, line: 77, flags: DIFlagFwdDecl)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1629, file: !1630, line: 78, baseType: !1228, size: 64, offset: 9536)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !1629, file: !1630, line: 80, baseType: !1647, size: 2624, offset: 9600)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !1648, line: 340, size: 2624, elements: !1649)
!1648 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1649 = !{!1650, !1678, !1696, !1697, !1698, !1713, !1771, !1772, !1871, !1872, !1873, !1874, !1880}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !1647, file: !1648, line: 341, baseType: !1651, size: 576)
!1651 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !1648, line: 251, baseType: !1652)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !1648, line: 207, size: 576, elements: !1653)
!1653 = !{!1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1652, file: !1648, line: 208, baseType: !1047, size: 32)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !1652, file: !1648, line: 211, baseType: !1045, size: 16, offset: 32)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !1652, file: !1648, line: 212, baseType: !1045, size: 16, offset: 48)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !1652, file: !1648, line: 213, baseType: !1127, size: 32, offset: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !1652, file: !1648, line: 214, baseType: !1045, size: 16, offset: 96)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !1652, file: !1648, line: 215, baseType: !1045, size: 16, offset: 112)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !1652, file: !1648, line: 216, baseType: !1045, size: 16, offset: 128)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !1652, file: !1648, line: 217, baseType: !1045, size: 16, offset: 144)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !1652, file: !1648, line: 218, baseType: !1045, size: 16, offset: 160)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !1652, file: !1648, line: 219, baseType: !1045, size: 16, offset: 176)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !1652, file: !1648, line: 220, baseType: !1127, size: 32, offset: 192)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !1652, file: !1648, line: 222, baseType: !1045, size: 16, offset: 224)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !1652, file: !1648, line: 225, baseType: !1045, size: 16, offset: 240)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !1652, file: !1648, line: 228, baseType: !1047, size: 32, offset: 256)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !1652, file: !1648, line: 229, baseType: !1047, size: 32, offset: 288)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !1652, file: !1648, line: 233, baseType: !1047, size: 32, offset: 320)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !1652, file: !1648, line: 236, baseType: !1045, size: 16, offset: 352)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1652, file: !1648, line: 236, baseType: !1045, size: 16, offset: 368)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1652, file: !1648, line: 241, baseType: !1127, size: 32, offset: 384)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !1652, file: !1648, line: 244, baseType: !1047, size: 32, offset: 416)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !1652, file: !1648, line: 244, baseType: !1047, size: 32, offset: 448)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !1652, file: !1648, line: 245, baseType: !1127, size: 32, offset: 480)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !1652, file: !1648, line: 248, baseType: !1127, size: 32, offset: 512)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1652, file: !1648, line: 250, baseType: !1047, size: 32, offset: 544)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1647, file: !1648, line: 342, baseType: !1679, size: 448, offset: 576)
!1679 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !1648, line: 79, baseType: !1680)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !1648, line: 61, size: 448, elements: !1681)
!1681 = !{!1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !1680, file: !1648, line: 62, baseType: !1002, size: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !1680, file: !1648, line: 64, baseType: !1045, size: 16, offset: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1680, file: !1648, line: 65, baseType: !1045, size: 16, offset: 80)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !1680, file: !1648, line: 67, baseType: !1127, size: 32, offset: 96)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !1680, file: !1648, line: 68, baseType: !1127, size: 32, offset: 128)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !1680, file: !1648, line: 69, baseType: !1127, size: 32, offset: 160)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1680, file: !1648, line: 70, baseType: !1045, size: 16, offset: 192)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1680, file: !1648, line: 71, baseType: !1045, size: 16, offset: 208)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !1680, file: !1648, line: 72, baseType: !1391, size: 64, offset: 224)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !1680, file: !1648, line: 75, baseType: !1127, size: 32, offset: 288)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !1680, file: !1648, line: 75, baseType: !1127, size: 32, offset: 320)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !1680, file: !1648, line: 75, baseType: !1127, size: 32, offset: 352)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !1680, file: !1648, line: 78, baseType: !1127, size: 32, offset: 384)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !1680, file: !1648, line: 78, baseType: !1127, size: 32, offset: 416)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !1647, file: !1648, line: 343, baseType: !1072, size: 128, offset: 1024)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !1647, file: !1648, line: 344, baseType: !1072, size: 128, offset: 1152)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !1647, file: !1648, line: 345, baseType: !1699, size: 192, offset: 1280)
!1699 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !1648, line: 278, baseType: !1700)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !1648, line: 270, size: 192, elements: !1701)
!1701 = !{!1702, !1703, !1704, !1705, !1706}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1700, file: !1648, line: 271, baseType: !1047, size: 32)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1700, file: !1648, line: 273, baseType: !1127, size: 32, offset: 32)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !1700, file: !1648, line: 275, baseType: !1047, size: 32, offset: 64)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !1700, file: !1648, line: 276, baseType: !1047, size: 32, offset: 96)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !1700, file: !1648, line: 277, baseType: !1707, size: 64, offset: 128)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !1648, line: 55, size: 576, elements: !1709)
!1709 = !{!1710, !1711, !1712}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1708, file: !1648, line: 56, baseType: !1047, size: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1708, file: !1648, line: 57, baseType: !1127, size: 32, offset: 32)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1708, file: !1648, line: 58, baseType: !1281, size: 512, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !1647, file: !1648, line: 346, baseType: !1714, size: 384, offset: 1472)
!1714 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !1648, line: 268, baseType: !1715)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !1648, line: 253, size: 384, elements: !1716)
!1716 = !{!1717, !1718, !1719, !1720, !1721, !1765, !1766, !1767, !1768, !1769, !1770}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1715, file: !1648, line: 254, baseType: !1047, size: 32)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !1715, file: !1648, line: 255, baseType: !1047, size: 32, offset: 32)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1715, file: !1648, line: 255, baseType: !1047, size: 32, offset: 64)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !1715, file: !1648, line: 258, baseType: !1127, size: 32, offset: 96)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !1715, file: !1648, line: 259, baseType: !1722, size: 64, offset: 128)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !1648, line: 164, baseType: !1724)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !1648, line: 108, size: 1664, elements: !1725)
!1725 = !{!1726, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1724, file: !1648, line: 109, baseType: !1727, size: 64)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1724, file: !1648, line: 109, baseType: !1727, size: 64, offset: 64)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1724, file: !1648, line: 111, baseType: !1062, size: 512, offset: 128)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !1724, file: !1648, line: 119, baseType: !1391, size: 64, offset: 640)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !1724, file: !1648, line: 119, baseType: !1391, size: 64, offset: 704)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1724, file: !1648, line: 125, baseType: !1391, size: 64, offset: 768)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1724, file: !1648, line: 125, baseType: !1391, size: 64, offset: 832)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1724, file: !1648, line: 127, baseType: !1391, size: 64, offset: 896)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1724, file: !1648, line: 130, baseType: !1047, size: 32, offset: 960)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1724, file: !1648, line: 131, baseType: !1047, size: 32, offset: 992)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1724, file: !1648, line: 132, baseType: !1738, size: 64, offset: 1024)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !1648, line: 106, baseType: !1740)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !1648, line: 81, size: 512, elements: !1741)
!1741 = !{!1742, !1743, !1746, !1747, !1748, !1749}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1740, file: !1648, line: 82, baseType: !1391, size: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !1740, file: !1648, line: 97, baseType: !1744, size: 256, offset: 64)
!1744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1127, size: 256, elements: !1745)
!1745 = !{!1274, !1393}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1740, file: !1648, line: 102, baseType: !1391, size: 64, offset: 320)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1740, file: !1648, line: 102, baseType: !1391, size: 64, offset: 384)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1740, file: !1648, line: 104, baseType: !1047, size: 32, offset: 448)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1740, file: !1648, line: 105, baseType: !1047, size: 32, offset: 480)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !1724, file: !1648, line: 135, baseType: !1197, size: 96, offset: 1088)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1724, file: !1648, line: 136, baseType: !1127, size: 32, offset: 1184)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1724, file: !1648, line: 139, baseType: !1047, size: 32, offset: 1216)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !1724, file: !1648, line: 139, baseType: !1047, size: 32, offset: 1248)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !1724, file: !1648, line: 139, baseType: !1047, size: 32, offset: 1280)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1724, file: !1648, line: 140, baseType: !1197, size: 96, offset: 1312)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !1724, file: !1648, line: 143, baseType: !1045, size: 16, offset: 1408)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1724, file: !1648, line: 144, baseType: !1045, size: 16, offset: 1424)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !1724, file: !1648, line: 145, baseType: !1045, size: 16, offset: 1440)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !1724, file: !1648, line: 148, baseType: !1045, size: 16, offset: 1456)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !1724, file: !1648, line: 149, baseType: !1047, size: 32, offset: 1472)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !1724, file: !1648, line: 150, baseType: !1127, size: 32, offset: 1504)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1724, file: !1648, line: 152, baseType: !1228, size: 64, offset: 1536)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1724, file: !1648, line: 163, baseType: !1127, size: 32, offset: 1600)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1724, file: !1648, line: 163, baseType: !1127, size: 32, offset: 1632)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !1715, file: !1648, line: 261, baseType: !1127, size: 32, offset: 192)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !1715, file: !1648, line: 261, baseType: !1127, size: 32, offset: 224)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !1715, file: !1648, line: 261, baseType: !1127, size: 32, offset: 256)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1715, file: !1648, line: 263, baseType: !1047, size: 32, offset: 288)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1715, file: !1648, line: 266, baseType: !1047, size: 32, offset: 320)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1715, file: !1648, line: 267, baseType: !1127, size: 32, offset: 352)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1647, file: !1648, line: 347, baseType: !1722, size: 64, offset: 1856)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !1647, file: !1648, line: 348, baseType: !1773, size: 64, offset: 1920)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 64)
!1774 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !1648, line: 205, baseType: !1775)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !1648, line: 186, size: 1024, elements: !1776)
!1776 = !{!1777, !1779, !1780, !1781, !1783, !1784, !1785, !1793, !1794, !1795, !1869, !1870}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1775, file: !1648, line: 187, baseType: !1778, size: 64)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1775, file: !1648, line: 187, baseType: !1778, size: 64, offset: 64)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1775, file: !1648, line: 189, baseType: !1062, size: 512, offset: 128)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !1775, file: !1648, line: 191, baseType: !1782, size: 64, offset: 640)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !1775, file: !1648, line: 193, baseType: !1047, size: 32, offset: 704)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1775, file: !1648, line: 193, baseType: !1047, size: 32, offset: 736)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1775, file: !1648, line: 195, baseType: !1786, size: 64, offset: 768)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64)
!1787 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !1648, line: 184, baseType: !1788)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !1648, line: 166, size: 320, elements: !1789)
!1789 = !{!1790, !1791, !1792}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !1788, file: !1648, line: 180, baseType: !1744, size: 256)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1788, file: !1648, line: 182, baseType: !1047, size: 32, offset: 256)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1788, file: !1648, line: 183, baseType: !1047, size: 32, offset: 288)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1775, file: !1648, line: 196, baseType: !1047, size: 32, offset: 832)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1775, file: !1648, line: 198, baseType: !1047, size: 32, offset: 864)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1775, file: !1648, line: 200, baseType: !1796, size: 64, offset: 896)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !1397, line: 77, size: 15424, elements: !1798)
!1798 = !{!1799, !1800, !1801, !1804, !1807, !1808, !1811, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1830, !1831, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1863}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1797, file: !1397, line: 78, baseType: !1012, size: 960)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1797, file: !1397, line: 80, baseType: !1031, size: 8192, offset: 960)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1797, file: !1397, line: 82, baseType: !1802, size: 64, offset: 9152)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1803 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !1397, line: 43, flags: DIFlagFwdDecl)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1797, file: !1397, line: 83, baseType: !1805, size: 64, offset: 9216)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !1013, line: 46, flags: DIFlagFwdDecl)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1797, file: !1397, line: 86, baseType: !1586, size: 64, offset: 9280)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1797, file: !1397, line: 87, baseType: !1809, size: 64, offset: 9344)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1810 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1397, line: 44, flags: DIFlagFwdDecl)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1797, file: !1397, line: 89, baseType: !1812, size: 512, offset: 9408)
!1812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1809, size: 512, elements: !1813)
!1813 = !{!1176}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1797, file: !1397, line: 90, baseType: !1045, size: 16, offset: 9920)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1797, file: !1397, line: 90, baseType: !1045, size: 16, offset: 9936)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1797, file: !1397, line: 92, baseType: !1045, size: 16, offset: 9952)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1797, file: !1397, line: 92, baseType: !1045, size: 16, offset: 9968)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1797, file: !1397, line: 93, baseType: !1045, size: 16, offset: 9984)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1797, file: !1397, line: 93, baseType: !1045, size: 16, offset: 10000)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1797, file: !1397, line: 94, baseType: !1047, size: 32, offset: 10016)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1797, file: !1397, line: 97, baseType: !1045, size: 16, offset: 10048)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1797, file: !1397, line: 97, baseType: !1045, size: 16, offset: 10064)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1797, file: !1397, line: 98, baseType: !1045, size: 16, offset: 10080)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1797, file: !1397, line: 98, baseType: !1045, size: 16, offset: 10096)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1797, file: !1397, line: 99, baseType: !1045, size: 16, offset: 10112)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1797, file: !1397, line: 99, baseType: !1045, size: 16, offset: 10128)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1797, file: !1397, line: 100, baseType: !7, size: 32, offset: 10144)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1797, file: !1397, line: 101, baseType: !1829, size: 64, offset: 10176)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1797, file: !1397, line: 103, baseType: !1038, size: 64, offset: 10240)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1797, file: !1397, line: 104, baseType: !1832, size: 64, offset: 10304)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 64)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !1013, line: 159, size: 448, elements: !1834)
!1834 = !{!1835, !1837, !1838, !1840, !1841, !1843}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1833, file: !1013, line: 161, baseType: !1836, size: 64)
!1836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1392)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1833, file: !1013, line: 162, baseType: !1836, size: 64, offset: 64)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1833, file: !1013, line: 163, baseType: !1839, size: 32, offset: 128)
!1839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1045, size: 32, elements: !1392)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1833, file: !1013, line: 164, baseType: !1839, size: 32, offset: 160)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1833, file: !1013, line: 165, baseType: !1842, size: 128, offset: 192)
!1842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1829, size: 128, elements: !1392)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1833, file: !1013, line: 166, baseType: !1844, size: 128, offset: 320)
!1844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1805, size: 128, elements: !1392)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1797, file: !1397, line: 107, baseType: !1127, size: 32, offset: 10368)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1797, file: !1397, line: 108, baseType: !1047, size: 32, offset: 10400)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1797, file: !1397, line: 109, baseType: !1045, size: 16, offset: 10432)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1797, file: !1397, line: 110, baseType: !1045, size: 16, offset: 10448)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1797, file: !1397, line: 113, baseType: !1047, size: 32, offset: 10464)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1797, file: !1397, line: 113, baseType: !1047, size: 32, offset: 10496)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1797, file: !1397, line: 114, baseType: !1032, size: 8, offset: 10528)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1797, file: !1397, line: 114, baseType: !1032, size: 8, offset: 10536)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1797, file: !1397, line: 115, baseType: !1045, size: 16, offset: 10544)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1797, file: !1397, line: 116, baseType: !1272, size: 128, offset: 10560)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1797, file: !1397, line: 119, baseType: !1127, size: 32, offset: 10688)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1797, file: !1397, line: 119, baseType: !1127, size: 32, offset: 10720)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1797, file: !1397, line: 122, baseType: !1619, size: 512, offset: 10752)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1797, file: !1397, line: 123, baseType: !1032, size: 8, offset: 11264)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1797, file: !1397, line: 125, baseType: !1860, size: 56, offset: 11272)
!1860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 56, elements: !1861)
!1861 = !{!1862}
!1862 = !DISubrange(count: 7)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1797, file: !1397, line: 126, baseType: !1864, size: 4096, offset: 11328)
!1864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1865, size: 4096, elements: !1813)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !1397, line: 69, baseType: !1866)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !1397, line: 67, size: 512, elements: !1867)
!1867 = !{!1868}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1866, file: !1397, line: 68, baseType: !1062, size: 512)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !1775, file: !1648, line: 201, baseType: !1127, size: 32, offset: 960)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1775, file: !1648, line: 204, baseType: !1047, size: 32, offset: 992)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1647, file: !1648, line: 350, baseType: !1072, size: 128, offset: 1984)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !1647, file: !1648, line: 351, baseType: !1047, size: 32, offset: 2112)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !1647, file: !1648, line: 351, baseType: !1047, size: 32, offset: 2144)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1647, file: !1648, line: 353, baseType: !1875, size: 64, offset: 2176)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64)
!1876 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !1648, line: 297, baseType: !1877)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !1648, line: 295, size: 2048, elements: !1878)
!1878 = !{!1879}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1877, file: !1648, line: 296, baseType: !1569, size: 2048)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !1647, file: !1648, line: 355, baseType: !1881, size: 384, offset: 2240)
!1881 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !1648, line: 338, baseType: !1882)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !1648, line: 322, size: 384, elements: !1883)
!1883 = !{!1884, !1885, !1886, !1887, !1888, !1889, !1890}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1882, file: !1648, line: 323, baseType: !1047, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !1882, file: !1648, line: 325, baseType: !1045, size: 16, offset: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1882, file: !1648, line: 326, baseType: !1045, size: 16, offset: 48)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !1882, file: !1648, line: 331, baseType: !1072, size: 128, offset: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1882, file: !1648, line: 334, baseType: !1072, size: 128, offset: 192)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !1882, file: !1648, line: 335, baseType: !1047, size: 32, offset: 320)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1882, file: !1648, line: 337, baseType: !1047, size: 32, offset: 352)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !1629, file: !1630, line: 81, baseType: !1002, size: 64, offset: 12224)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1629, file: !1630, line: 85, baseType: !1893, size: 6208, offset: 12288)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !1630, line: 55, size: 6208, elements: !1894)
!1894 = !{!1895, !1896, !1897, !1898, !1899}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1893, file: !1630, line: 56, baseType: !1575, size: 6144)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1893, file: !1630, line: 58, baseType: !1045, size: 16, offset: 6144)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1893, file: !1630, line: 59, baseType: !1045, size: 16, offset: 6160)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !1893, file: !1630, line: 60, baseType: !1045, size: 16, offset: 6176)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !1893, file: !1630, line: 61, baseType: !1045, size: 16, offset: 6192)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1629, file: !1630, line: 86, baseType: !1047, size: 32, offset: 18496)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1629, file: !1630, line: 88, baseType: !1047, size: 32, offset: 18528)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1629, file: !1630, line: 90, baseType: !1047, size: 32, offset: 18560)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1629, file: !1630, line: 94, baseType: !1047, size: 32, offset: 18592)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1629, file: !1630, line: 100, baseType: !1619, size: 512, offset: 18624)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1524, file: !1516, line: 154, baseType: !1906, size: 64, offset: 1664)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 64)
!1907 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !1908, line: 264, flags: DIFlagFwdDecl)
!1908 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1524, file: !1516, line: 156, baseType: !1586, size: 64, offset: 1728)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !1524, file: !1516, line: 158, baseType: !1127, size: 32, offset: 1792)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !1524, file: !1516, line: 159, baseType: !1127, size: 32, offset: 1824)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !1524, file: !1516, line: 162, baseType: !1527, size: 64, offset: 1856)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !1524, file: !1516, line: 162, baseType: !1527, size: 64, offset: 1920)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !1524, file: !1516, line: 162, baseType: !1527, size: 64, offset: 1984)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1524, file: !1516, line: 164, baseType: !1072, size: 128, offset: 2048)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1524, file: !1516, line: 166, baseType: !1917, size: 64, offset: 2176)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 64)
!1918 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !1516, line: 51, flags: DIFlagFwdDecl)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !1524, file: !1516, line: 167, baseType: !1002, size: 64, offset: 2240)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1524, file: !1516, line: 168, baseType: !1127, size: 32, offset: 2304)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1524, file: !1516, line: 170, baseType: !1127, size: 32, offset: 2336)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !1524, file: !1516, line: 170, baseType: !1127, size: 32, offset: 2368)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !1524, file: !1516, line: 171, baseType: !1127, size: 32, offset: 2400)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !1524, file: !1516, line: 173, baseType: !1002, size: 64, offset: 2432)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !1524, file: !1516, line: 175, baseType: !1047, size: 32, offset: 2496)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !1524, file: !1516, line: 176, baseType: !1047, size: 32, offset: 2528)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !1524, file: !1516, line: 179, baseType: !1047, size: 32, offset: 2560)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !1524, file: !1516, line: 180, baseType: !1127, size: 32, offset: 2592)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1524, file: !1516, line: 183, baseType: !1047, size: 32, offset: 2624)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1524, file: !1516, line: 185, baseType: !1032, size: 8, offset: 2656)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1524, file: !1516, line: 186, baseType: !1932, size: 24, offset: 2664)
!1932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 24, elements: !1198)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1524, file: !1516, line: 189, baseType: !1072, size: 128, offset: 2688)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !1515, file: !1516, line: 207, baseType: !1031, size: 8192, offset: 384)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !1515, file: !1516, line: 208, baseType: !1031, size: 8192, offset: 8576)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !1515, file: !1516, line: 210, baseType: !1047, size: 32, offset: 16768)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !1515, file: !1516, line: 210, baseType: !1047, size: 32, offset: 16800)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !1515, file: !1516, line: 211, baseType: !1047, size: 32, offset: 16832)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1515, file: !1516, line: 211, baseType: !1047, size: 32, offset: 16864)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !1515, file: !1516, line: 212, baseType: !1471, size: 128, offset: 16896)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !1402, file: !1230, line: 1246, baseType: !1942, size: 64, offset: 2112)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !1230, line: 1067, size: 5184, elements: !1944)
!1944 = !{!1945, !1975, !1976, !1991, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2013, !2029, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2139}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1943, file: !1230, line: 1068, baseType: !1946, size: 64)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !1230, line: 934, baseType: !1948)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !1230, line: 925, size: 576, elements: !1949)
!1949 = !{!1950, !1967, !1968, !1969, !1970, !1971, !1974}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1948, file: !1230, line: 926, baseType: !1951, size: 320)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !1230, line: 830, baseType: !1952)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !1230, line: 813, size: 320, elements: !1953)
!1953 = !{!1954, !1957, !1960, !1961, !1964, !1965, !1966}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1952, file: !1230, line: 814, baseType: !1955, size: 64)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!1956 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1230, line: 51, flags: DIFlagFwdDecl)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1952, file: !1230, line: 815, baseType: !1958, size: 64, offset: 64)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!1959 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1230, line: 815, flags: DIFlagFwdDecl)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1952, file: !1230, line: 818, baseType: !1002, size: 64, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1952, file: !1230, line: 819, baseType: !1962, size: 32, offset: 192)
!1962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1963, size: 32, elements: !1273)
!1963 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1952, file: !1230, line: 822, baseType: !1047, size: 32, offset: 224)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1952, file: !1230, line: 826, baseType: !1047, size: 32, offset: 256)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1952, file: !1230, line: 829, baseType: !1047, size: 32, offset: 288)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1948, file: !1230, line: 928, baseType: !1045, size: 16, offset: 320)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1948, file: !1230, line: 928, baseType: !1045, size: 16, offset: 336)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1948, file: !1230, line: 929, baseType: !1047, size: 32, offset: 352)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1948, file: !1230, line: 930, baseType: !1829, size: 64, offset: 384)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1948, file: !1230, line: 931, baseType: !1972, size: 64, offset: 448)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 64)
!1973 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !1230, line: 931, flags: DIFlagFwdDecl)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1948, file: !1230, line: 933, baseType: !1002, size: 64, offset: 512)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1943, file: !1230, line: 1069, baseType: !1946, size: 64, offset: 64)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1943, file: !1230, line: 1070, baseType: !1977, size: 64, offset: 128)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 64)
!1978 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !1230, line: 916, baseType: !1979)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !1230, line: 891, size: 704, elements: !1980)
!1980 = !{!1981, !1982, !1983, !1985, !1986, !1987, !1988, !1989, !1990}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1979, file: !1230, line: 892, baseType: !1951, size: 320)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1979, file: !1230, line: 896, baseType: !1047, size: 32, offset: 320)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1979, file: !1230, line: 900, baseType: !1984, size: 96, offset: 352)
!1984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1047, size: 96, elements: !1198)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1979, file: !1230, line: 903, baseType: !1127, size: 32, offset: 448)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1979, file: !1230, line: 906, baseType: !1047, size: 32, offset: 480)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1979, file: !1230, line: 909, baseType: !1127, size: 32, offset: 512)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1979, file: !1230, line: 912, baseType: !1127, size: 32, offset: 544)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1979, file: !1230, line: 914, baseType: !1008, size: 64, offset: 576)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1979, file: !1230, line: 915, baseType: !1002, size: 64, offset: 640)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1943, file: !1230, line: 1071, baseType: !1992, size: 64, offset: 192)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !1230, line: 920, baseType: !1994)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !1230, line: 918, size: 320, elements: !1995)
!1995 = !{!1996}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1994, file: !1230, line: 919, baseType: !1951, size: 320)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1943, file: !1230, line: 1075, baseType: !1127, size: 32, offset: 256)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1943, file: !1230, line: 1077, baseType: !1127, size: 32, offset: 288)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1943, file: !1230, line: 1078, baseType: !1127, size: 32, offset: 320)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1943, file: !1230, line: 1079, baseType: !1045, size: 16, offset: 352)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1943, file: !1230, line: 1082, baseType: !1045, size: 16, offset: 368)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1943, file: !1230, line: 1085, baseType: !1032, size: 8, offset: 384)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1943, file: !1230, line: 1086, baseType: !1032, size: 8, offset: 392)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1943, file: !1230, line: 1087, baseType: !1032, size: 8, offset: 400)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1943, file: !1230, line: 1088, baseType: !1032, size: 8, offset: 408)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1943, file: !1230, line: 1090, baseType: !1127, size: 32, offset: 416)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1943, file: !1230, line: 1093, baseType: !1045, size: 16, offset: 448)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1943, file: !1230, line: 1096, baseType: !1032, size: 8, offset: 464)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1943, file: !1230, line: 1098, baseType: !2010, size: 40, offset: 472)
!2010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 40, elements: !2011)
!2011 = !{!2012}
!2012 = !DISubrange(count: 5)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1943, file: !1230, line: 1101, baseType: !2014, size: 832, offset: 512)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !1230, line: 836, size: 832, elements: !2015)
!2015 = !{!2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2014, file: !1230, line: 837, baseType: !1951, size: 320)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2014, file: !1230, line: 839, baseType: !1045, size: 16, offset: 320)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !2014, file: !1230, line: 839, baseType: !1045, size: 16, offset: 336)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !2014, file: !1230, line: 842, baseType: !1045, size: 16, offset: 352)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !2014, file: !1230, line: 842, baseType: !1045, size: 16, offset: 368)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !2014, file: !1230, line: 843, baseType: !1839, size: 32, offset: 384)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2014, file: !1230, line: 845, baseType: !1047, size: 32, offset: 416)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2014, file: !1230, line: 847, baseType: !1002, size: 64, offset: 448)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !2014, file: !1230, line: 848, baseType: !1796, size: 64, offset: 512)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2014, file: !1230, line: 849, baseType: !1796, size: 64, offset: 576)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2014, file: !1230, line: 850, baseType: !1796, size: 64, offset: 640)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !2014, file: !1230, line: 851, baseType: !1197, size: 96, offset: 704)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2014, file: !1230, line: 852, baseType: !1127, size: 32, offset: 800)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1943, file: !1230, line: 1104, baseType: !2030, size: 1344, offset: 1344)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !1230, line: 867, size: 1344, elements: !2031)
!2031 = !{!2032, !2033, !2034, !2035, !2036, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2030, file: !1230, line: 868, baseType: !1045, size: 16)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !2030, file: !1230, line: 869, baseType: !1045, size: 16, offset: 16)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !2030, file: !1230, line: 870, baseType: !1045, size: 16, offset: 32)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !2030, file: !1230, line: 871, baseType: !1045, size: 16, offset: 48)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2030, file: !1230, line: 873, baseType: !2037, size: 896, offset: 64)
!2037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2038, size: 896, elements: !1861)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !1230, line: 864, baseType: !2039)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !1230, line: 859, size: 128, elements: !2040)
!2040 = !{!2041, !2042, !2043, !2044, !2045, !2046}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2039, file: !1230, line: 860, baseType: !1045, size: 16)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2039, file: !1230, line: 861, baseType: !1045, size: 16, offset: 16)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2039, file: !1230, line: 861, baseType: !1045, size: 16, offset: 32)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2039, file: !1230, line: 861, baseType: !1045, size: 16, offset: 48)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2039, file: !1230, line: 862, baseType: !1047, size: 32, offset: 64)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2039, file: !1230, line: 863, baseType: !1127, size: 32, offset: 96)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2030, file: !1230, line: 874, baseType: !1002, size: 64, offset: 960)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !2030, file: !1230, line: 876, baseType: !1127, size: 32, offset: 1024)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2030, file: !1230, line: 876, baseType: !1127, size: 32, offset: 1056)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2030, file: !1230, line: 878, baseType: !1047, size: 32, offset: 1088)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !2030, file: !1230, line: 879, baseType: !1047, size: 32, offset: 1120)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2030, file: !1230, line: 881, baseType: !1047, size: 32, offset: 1152)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !2030, file: !1230, line: 881, baseType: !1047, size: 32, offset: 1184)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2030, file: !1230, line: 883, baseType: !1401, size: 64, offset: 1216)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2030, file: !1230, line: 884, baseType: !1008, size: 64, offset: 1280)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1943, file: !1230, line: 1107, baseType: !1127, size: 32, offset: 2688)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1943, file: !1230, line: 1110, baseType: !1127, size: 32, offset: 2720)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1943, file: !1230, line: 1113, baseType: !1045, size: 16, offset: 2752)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1943, file: !1230, line: 1113, baseType: !1045, size: 16, offset: 2768)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1943, file: !1230, line: 1116, baseType: !1032, size: 8, offset: 2784)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1943, file: !1230, line: 1117, baseType: !1435, size: 8, offset: 2792)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1943, file: !1230, line: 1120, baseType: !1045, size: 16, offset: 2800)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1943, file: !1230, line: 1121, baseType: !1127, size: 32, offset: 2816)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1943, file: !1230, line: 1122, baseType: !1127, size: 32, offset: 2848)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1943, file: !1230, line: 1123, baseType: !1127, size: 32, offset: 2880)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1943, file: !1230, line: 1124, baseType: !1127, size: 32, offset: 2912)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1943, file: !1230, line: 1125, baseType: !1127, size: 32, offset: 2944)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1943, file: !1230, line: 1126, baseType: !1127, size: 32, offset: 2976)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1943, file: !1230, line: 1127, baseType: !1127, size: 32, offset: 3008)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1943, file: !1230, line: 1128, baseType: !1127, size: 32, offset: 3040)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1943, file: !1230, line: 1129, baseType: !1127, size: 32, offset: 3072)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1943, file: !1230, line: 1130, baseType: !1127, size: 32, offset: 3104)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1943, file: !1230, line: 1131, baseType: !1045, size: 16, offset: 3136)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1943, file: !1230, line: 1132, baseType: !1032, size: 8, offset: 3152)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1943, file: !1230, line: 1133, baseType: !1032, size: 8, offset: 3160)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1943, file: !1230, line: 1134, baseType: !1932, size: 24, offset: 3168)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1943, file: !1230, line: 1135, baseType: !1032, size: 8, offset: 3192)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1943, file: !1230, line: 1138, baseType: !1008, size: 64, offset: 3200)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1943, file: !1230, line: 1139, baseType: !1032, size: 8, offset: 3264)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1943, file: !1230, line: 1140, baseType: !1032, size: 8, offset: 3272)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1943, file: !1230, line: 1141, baseType: !1032, size: 8, offset: 3280)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1943, file: !1230, line: 1142, baseType: !1032, size: 8, offset: 3288)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1943, file: !1230, line: 1143, baseType: !1032, size: 8, offset: 3296)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1943, file: !1230, line: 1144, baseType: !2085, size: 64, offset: 3304)
!2085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 64, elements: !1813)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1943, file: !1230, line: 1145, baseType: !2085, size: 64, offset: 3368)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1943, file: !1230, line: 1148, baseType: !1032, size: 8, offset: 3432)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1943, file: !1230, line: 1149, baseType: !1032, size: 8, offset: 3440)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1943, file: !1230, line: 1152, baseType: !1032, size: 8, offset: 3448)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1943, file: !1230, line: 1152, baseType: !1032, size: 8, offset: 3456)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1943, file: !1230, line: 1153, baseType: !1032, size: 8, offset: 3464)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1943, file: !1230, line: 1154, baseType: !1045, size: 16, offset: 3472)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1943, file: !1230, line: 1154, baseType: !1045, size: 16, offset: 3488)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1943, file: !1230, line: 1155, baseType: !1045, size: 16, offset: 3504)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1943, file: !1230, line: 1155, baseType: !1045, size: 16, offset: 3520)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1943, file: !1230, line: 1156, baseType: !1032, size: 8, offset: 3536)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1943, file: !1230, line: 1157, baseType: !1032, size: 8, offset: 3544)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1943, file: !1230, line: 1159, baseType: !1032, size: 8, offset: 3552)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1943, file: !1230, line: 1160, baseType: !1032, size: 8, offset: 3560)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1943, file: !1230, line: 1161, baseType: !1032, size: 8, offset: 3568)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1943, file: !1230, line: 1162, baseType: !1032, size: 8, offset: 3576)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1943, file: !1230, line: 1165, baseType: !1047, size: 32, offset: 3584)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1943, file: !1230, line: 1166, baseType: !1047, size: 32, offset: 3616)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1943, file: !1230, line: 1167, baseType: !1047, size: 32, offset: 3648)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1943, file: !1230, line: 1168, baseType: !1047, size: 32, offset: 3680)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1943, file: !1230, line: 1171, baseType: !1045, size: 16, offset: 3712)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1943, file: !1230, line: 1171, baseType: !1045, size: 16, offset: 3728)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1943, file: !1230, line: 1172, baseType: !1047, size: 32, offset: 3744)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1943, file: !1230, line: 1173, baseType: !1127, size: 32, offset: 3776)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1943, file: !1230, line: 1174, baseType: !1127, size: 32, offset: 3808)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1943, file: !1230, line: 1177, baseType: !2112, size: 1024, offset: 3840)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !1230, line: 963, size: 1024, elements: !2113)
!2113 = !{!2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2137, !2138}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2112, file: !1230, line: 965, baseType: !1047, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2112, file: !1230, line: 968, baseType: !1127, size: 32, offset: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2112, file: !1230, line: 971, baseType: !1127, size: 32, offset: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2112, file: !1230, line: 974, baseType: !1127, size: 32, offset: 96)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2112, file: !1230, line: 977, baseType: !1197, size: 96, offset: 128)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2112, file: !1230, line: 979, baseType: !1197, size: 96, offset: 224)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2112, file: !1230, line: 982, baseType: !1047, size: 32, offset: 320)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2112, file: !1230, line: 987, baseType: !1391, size: 64, offset: 352)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2112, file: !1230, line: 989, baseType: !1127, size: 32, offset: 416)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2112, file: !1230, line: 994, baseType: !1047, size: 32, offset: 448)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2112, file: !1230, line: 995, baseType: !1047, size: 32, offset: 480)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2112, file: !1230, line: 997, baseType: !1032, size: 8, offset: 512)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2112, file: !1230, line: 998, baseType: !1860, size: 56, offset: 520)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2112, file: !1230, line: 1000, baseType: !1127, size: 32, offset: 576)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2112, file: !1230, line: 1003, baseType: !1391, size: 64, offset: 608)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2112, file: !1230, line: 1006, baseType: !1047, size: 32, offset: 672)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2112, file: !1230, line: 1009, baseType: !1127, size: 32, offset: 704)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2112, file: !1230, line: 1012, baseType: !1391, size: 64, offset: 736)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2112, file: !1230, line: 1015, baseType: !1391, size: 64, offset: 800)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2112, file: !1230, line: 1018, baseType: !1047, size: 32, offset: 864)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2112, file: !1230, line: 1019, baseType: !2135, size: 64, offset: 896)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 64)
!2136 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !1230, line: 63, flags: DIFlagFwdDecl)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2112, file: !1230, line: 1023, baseType: !1127, size: 32, offset: 960)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2112, file: !1230, line: 1024, baseType: !1047, size: 32, offset: 992)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1943, file: !1230, line: 1179, baseType: !2140, size: 320, offset: 4864)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !1230, line: 1043, size: 320, elements: !2141)
!2141 = !{!2142, !2143, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2140, file: !1230, line: 1044, baseType: !1032, size: 8)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2140, file: !1230, line: 1045, baseType: !2144, size: 16, offset: 8)
!2144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 16, elements: !1392)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2140, file: !1230, line: 1048, baseType: !1032, size: 8, offset: 24)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2140, file: !1230, line: 1049, baseType: !1127, size: 32, offset: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2140, file: !1230, line: 1049, baseType: !1127, size: 32, offset: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2140, file: !1230, line: 1052, baseType: !1127, size: 32, offset: 96)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2140, file: !1230, line: 1052, baseType: !1127, size: 32, offset: 128)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2140, file: !1230, line: 1053, baseType: !1032, size: 8, offset: 160)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2140, file: !1230, line: 1054, baseType: !1932, size: 24, offset: 168)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2140, file: !1230, line: 1057, baseType: !1127, size: 32, offset: 192)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2140, file: !1230, line: 1057, baseType: !1127, size: 32, offset: 224)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2140, file: !1230, line: 1060, baseType: !1127, size: 32, offset: 256)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2140, file: !1230, line: 1060, baseType: !1127, size: 32, offset: 288)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1402, file: !1230, line: 1247, baseType: !2157, size: 64, offset: 2176)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !1230, line: 60, flags: DIFlagFwdDecl)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1402, file: !1230, line: 1251, baseType: !2160, size: 31872, offset: 2240)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !1230, line: 403, size: 31872, elements: !2161)
!2161 = !{!2162, !2237, !2257, !2266, !2286, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2451, !2452, !2453, !2457, !2473, !2474}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2160, file: !1230, line: 404, baseType: !2163, size: 1984)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !1230, line: 259, size: 1984, elements: !2164)
!2164 = !{!2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2182, !2232}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2163, file: !1230, line: 260, baseType: !1032, size: 8)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2163, file: !1230, line: 263, baseType: !1032, size: 8, offset: 8)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2163, file: !1230, line: 266, baseType: !1032, size: 8, offset: 16)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2163, file: !1230, line: 267, baseType: !1032, size: 8, offset: 24)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2163, file: !1230, line: 269, baseType: !1032, size: 8, offset: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2163, file: !1230, line: 270, baseType: !1032, size: 8, offset: 40)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2163, file: !1230, line: 276, baseType: !1032, size: 8, offset: 48)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2163, file: !1230, line: 279, baseType: !1032, size: 8, offset: 56)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2163, file: !1230, line: 280, baseType: !1045, size: 16, offset: 64)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2163, file: !1230, line: 280, baseType: !1045, size: 16, offset: 80)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2163, file: !1230, line: 281, baseType: !1127, size: 32, offset: 96)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2163, file: !1230, line: 284, baseType: !1032, size: 8, offset: 128)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2163, file: !1230, line: 285, baseType: !1032, size: 8, offset: 136)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2163, file: !1230, line: 287, baseType: !2179, size: 48, offset: 144)
!2179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 48, elements: !2180)
!2180 = !{!2181}
!2181 = !DISubrange(count: 6)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2163, file: !1230, line: 290, baseType: !2183, size: 1280, offset: 192)
!2183 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1620, line: 174, baseType: !2184)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1620, line: 166, size: 1280, elements: !2185)
!2185 = !{!2186, !2187, !2188, !2189, !2190, !2191, !2192, !2231}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2184, file: !1620, line: 167, baseType: !1047, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2184, file: !1620, line: 167, baseType: !1047, size: 32, offset: 32)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2184, file: !1620, line: 168, baseType: !1062, size: 512, offset: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2184, file: !1620, line: 169, baseType: !1062, size: 512, offset: 576)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2184, file: !1620, line: 170, baseType: !1127, size: 32, offset: 1088)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2184, file: !1620, line: 171, baseType: !1127, size: 32, offset: 1120)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2184, file: !1620, line: 172, baseType: !2193, size: 64, offset: 1152)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64)
!2194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1620, line: 72, size: 3072, elements: !2195)
!2195 = !{!2196, !2197, !2198, !2199, !2200, !2201, !2202, !2227, !2228, !2229, !2230}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2194, file: !1620, line: 73, baseType: !1047, size: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2194, file: !1620, line: 73, baseType: !1047, size: 32, offset: 32)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !2194, file: !1620, line: 74, baseType: !1047, size: 32, offset: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2194, file: !1620, line: 75, baseType: !1047, size: 32, offset: 96)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !2194, file: !1620, line: 77, baseType: !1471, size: 128, offset: 128)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !2194, file: !1620, line: 77, baseType: !1471, size: 128, offset: 256)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !2194, file: !1620, line: 79, baseType: !2203, size: 2304, offset: 384)
!2203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2204, size: 2304, elements: !1273)
!2204 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1620, line: 67, baseType: !2205)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1620, line: 55, size: 576, elements: !2206)
!2206 = !{!2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2223, !2224, !2225, !2226}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2205, file: !1620, line: 56, baseType: !1045, size: 16)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2205, file: !1620, line: 56, baseType: !1045, size: 16, offset: 16)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2205, file: !1620, line: 58, baseType: !1127, size: 32, offset: 32)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !2205, file: !1620, line: 59, baseType: !1127, size: 32, offset: 64)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !2205, file: !1620, line: 59, baseType: !1127, size: 32, offset: 96)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !2205, file: !1620, line: 60, baseType: !1391, size: 64, offset: 128)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !2205, file: !1620, line: 60, baseType: !1391, size: 64, offset: 192)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2205, file: !1620, line: 61, baseType: !2215, size: 64, offset: 256)
!2215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 64)
!2216 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1620, line: 47, baseType: !2217)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1620, line: 44, size: 96, elements: !2218)
!2218 = !{!2219, !2220, !2221, !2222}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2217, file: !1620, line: 45, baseType: !1127, size: 32)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2217, file: !1620, line: 45, baseType: !1127, size: 32, offset: 32)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2217, file: !1620, line: 46, baseType: !1045, size: 16, offset: 64)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !2217, file: !1620, line: 46, baseType: !1045, size: 16, offset: 80)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !2205, file: !1620, line: 62, baseType: !2215, size: 64, offset: 320)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !2205, file: !1620, line: 64, baseType: !2215, size: 64, offset: 384)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !2205, file: !1620, line: 65, baseType: !1391, size: 64, offset: 448)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !2205, file: !1620, line: 66, baseType: !1391, size: 64, offset: 512)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !2194, file: !1620, line: 80, baseType: !1197, size: 96, offset: 2688)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !2194, file: !1620, line: 80, baseType: !1197, size: 96, offset: 2784)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !2194, file: !1620, line: 81, baseType: !1197, size: 96, offset: 2880)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !2194, file: !1620, line: 83, baseType: !1197, size: 96, offset: 2976)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2184, file: !1620, line: 173, baseType: !1002, size: 64, offset: 1216)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2163, file: !1230, line: 291, baseType: !2233, size: 512, offset: 1472)
!2233 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1620, line: 178, baseType: !2234)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1620, line: 176, size: 512, elements: !2235)
!2235 = !{!2236}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2234, file: !1620, line: 177, baseType: !1062, size: 512)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2160, file: !1230, line: 406, baseType: !2238, size: 64, offset: 1984)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 64)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !1230, line: 80, size: 1472, elements: !2240)
!2240 = !{!2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2239, file: !1230, line: 81, baseType: !1002, size: 64)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2239, file: !1230, line: 82, baseType: !1002, size: 64, offset: 64)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2239, file: !1230, line: 83, baseType: !7, size: 32, offset: 128)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2239, file: !1230, line: 84, baseType: !7, size: 32, offset: 160)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2239, file: !1230, line: 86, baseType: !7, size: 32, offset: 192)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2239, file: !1230, line: 87, baseType: !7, size: 32, offset: 224)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2239, file: !1230, line: 88, baseType: !7, size: 32, offset: 256)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2239, file: !1230, line: 89, baseType: !7, size: 32, offset: 288)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2239, file: !1230, line: 90, baseType: !7, size: 32, offset: 320)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2239, file: !1230, line: 91, baseType: !7, size: 32, offset: 352)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2239, file: !1230, line: 92, baseType: !7, size: 32, offset: 384)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2239, file: !1230, line: 93, baseType: !7, size: 32, offset: 416)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2239, file: !1230, line: 95, baseType: !2254, size: 1024, offset: 448)
!2254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 1024, elements: !2255)
!2255 = !{!2256}
!2256 = !DISubrange(count: 128)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2160, file: !1230, line: 407, baseType: !2258, size: 64, offset: 2048)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !1230, line: 98, size: 1216, elements: !2260)
!2260 = !{!2261, !2262, !2263, !2264, !2265}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2259, file: !1230, line: 100, baseType: !1002, size: 64)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2259, file: !1230, line: 101, baseType: !1002, size: 64, offset: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2259, file: !1230, line: 103, baseType: !7, size: 32, offset: 128)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2259, file: !1230, line: 104, baseType: !7, size: 32, offset: 160)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2259, file: !1230, line: 106, baseType: !2254, size: 1024, offset: 192)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2160, file: !1230, line: 408, baseType: !2267, size: 512, offset: 2112)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !1230, line: 109, size: 512, elements: !2268)
!2268 = !{!2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2267, file: !1230, line: 111, baseType: !1047, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2267, file: !1230, line: 112, baseType: !1047, size: 32, offset: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2267, file: !1230, line: 115, baseType: !1047, size: 32, offset: 64)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2267, file: !1230, line: 116, baseType: !1047, size: 32, offset: 96)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2267, file: !1230, line: 117, baseType: !1047, size: 32, offset: 128)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2267, file: !1230, line: 118, baseType: !1047, size: 32, offset: 160)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2267, file: !1230, line: 119, baseType: !1047, size: 32, offset: 192)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2267, file: !1230, line: 120, baseType: !1047, size: 32, offset: 224)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2267, file: !1230, line: 121, baseType: !1047, size: 32, offset: 256)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2267, file: !1230, line: 122, baseType: !1047, size: 32, offset: 288)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2267, file: !1230, line: 125, baseType: !1047, size: 32, offset: 320)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2267, file: !1230, line: 126, baseType: !1047, size: 32, offset: 352)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2267, file: !1230, line: 127, baseType: !1045, size: 16, offset: 384)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2267, file: !1230, line: 128, baseType: !1045, size: 16, offset: 400)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2267, file: !1230, line: 129, baseType: !1047, size: 32, offset: 416)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2267, file: !1230, line: 130, baseType: !1047, size: 32, offset: 448)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2267, file: !1230, line: 131, baseType: !1047, size: 32, offset: 480)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2160, file: !1230, line: 409, baseType: !2287, size: 576, offset: 2624)
!2287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !1230, line: 134, size: 576, elements: !2288)
!2288 = !{!2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2287, file: !1230, line: 135, baseType: !1047, size: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2287, file: !1230, line: 136, baseType: !1047, size: 32, offset: 32)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2287, file: !1230, line: 137, baseType: !1047, size: 32, offset: 64)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2287, file: !1230, line: 138, baseType: !1047, size: 32, offset: 96)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2287, file: !1230, line: 139, baseType: !1047, size: 32, offset: 128)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2287, file: !1230, line: 140, baseType: !1047, size: 32, offset: 160)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2287, file: !1230, line: 141, baseType: !1047, size: 32, offset: 192)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2287, file: !1230, line: 142, baseType: !1047, size: 32, offset: 224)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2287, file: !1230, line: 143, baseType: !1127, size: 32, offset: 256)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2287, file: !1230, line: 144, baseType: !1047, size: 32, offset: 288)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2287, file: !1230, line: 145, baseType: !1047, size: 32, offset: 320)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2287, file: !1230, line: 147, baseType: !1047, size: 32, offset: 352)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2287, file: !1230, line: 148, baseType: !1047, size: 32, offset: 384)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2287, file: !1230, line: 149, baseType: !1047, size: 32, offset: 416)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2287, file: !1230, line: 150, baseType: !1047, size: 32, offset: 448)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2287, file: !1230, line: 151, baseType: !1047, size: 32, offset: 480)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2287, file: !1230, line: 152, baseType: !1051, size: 64, offset: 512)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2160, file: !1230, line: 411, baseType: !1047, size: 32, offset: 3200)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2160, file: !1230, line: 411, baseType: !1047, size: 32, offset: 3232)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2160, file: !1230, line: 411, baseType: !1047, size: 32, offset: 3264)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2160, file: !1230, line: 412, baseType: !1127, size: 32, offset: 3296)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2160, file: !1230, line: 413, baseType: !1047, size: 32, offset: 3328)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2160, file: !1230, line: 413, baseType: !1047, size: 32, offset: 3360)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2160, file: !1230, line: 415, baseType: !1047, size: 32, offset: 3392)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2160, file: !1230, line: 415, baseType: !1047, size: 32, offset: 3424)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2160, file: !1230, line: 416, baseType: !1045, size: 16, offset: 3456)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2160, file: !1230, line: 416, baseType: !1045, size: 16, offset: 3472)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2160, file: !1230, line: 418, baseType: !1127, size: 32, offset: 3488)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2160, file: !1230, line: 418, baseType: !1127, size: 32, offset: 3520)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2160, file: !1230, line: 421, baseType: !1127, size: 32, offset: 3552)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2160, file: !1230, line: 421, baseType: !1127, size: 32, offset: 3584)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2160, file: !1230, line: 421, baseType: !1127, size: 32, offset: 3616)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2160, file: !1230, line: 425, baseType: !1045, size: 16, offset: 3648)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2160, file: !1230, line: 425, baseType: !1045, size: 16, offset: 3664)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2160, file: !1230, line: 425, baseType: !1045, size: 16, offset: 3680)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2160, file: !1230, line: 426, baseType: !1045, size: 16, offset: 3696)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2160, file: !1230, line: 428, baseType: !1045, size: 16, offset: 3712)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2160, file: !1230, line: 428, baseType: !1045, size: 16, offset: 3728)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2160, file: !1230, line: 431, baseType: !1047, size: 32, offset: 3744)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2160, file: !1230, line: 433, baseType: !1045, size: 16, offset: 3776)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2160, file: !1230, line: 435, baseType: !1045, size: 16, offset: 3792)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2160, file: !1230, line: 437, baseType: !1045, size: 16, offset: 3808)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2160, file: !1230, line: 439, baseType: !1045, size: 16, offset: 3824)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2160, file: !1230, line: 441, baseType: !1045, size: 16, offset: 3840)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2160, file: !1230, line: 443, baseType: !1045, size: 16, offset: 3856)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2160, file: !1230, line: 449, baseType: !1047, size: 32, offset: 3872)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2160, file: !1230, line: 453, baseType: !1047, size: 32, offset: 3904)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2160, file: !1230, line: 458, baseType: !1045, size: 16, offset: 3936)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2160, file: !1230, line: 462, baseType: !1045, size: 16, offset: 3952)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2160, file: !1230, line: 467, baseType: !1047, size: 32, offset: 3968)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2160, file: !1230, line: 467, baseType: !1047, size: 32, offset: 4000)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2160, file: !1230, line: 469, baseType: !1045, size: 16, offset: 4032)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2160, file: !1230, line: 469, baseType: !1045, size: 16, offset: 4048)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2160, file: !1230, line: 469, baseType: !1045, size: 16, offset: 4064)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2160, file: !1230, line: 469, baseType: !1045, size: 16, offset: 4080)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2160, file: !1230, line: 474, baseType: !1045, size: 16, offset: 4096)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2160, file: !1230, line: 475, baseType: !1032, size: 8, offset: 4112)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2160, file: !1230, line: 476, baseType: !1032, size: 8, offset: 4120)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2160, file: !1230, line: 481, baseType: !1047, size: 32, offset: 4128)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2160, file: !1230, line: 486, baseType: !1047, size: 32, offset: 4160)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2160, file: !1230, line: 491, baseType: !1047, size: 32, offset: 4192)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2160, file: !1230, line: 496, baseType: !1045, size: 16, offset: 4224)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2160, file: !1230, line: 498, baseType: !1045, size: 16, offset: 4240)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2160, file: !1230, line: 501, baseType: !1045, size: 16, offset: 4256)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2160, file: !1230, line: 502, baseType: !1045, size: 16, offset: 4272)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2160, file: !1230, line: 508, baseType: !1045, size: 16, offset: 4288)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2160, file: !1230, line: 513, baseType: !1045, size: 16, offset: 4304)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2160, file: !1230, line: 515, baseType: !1045, size: 16, offset: 4320)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2160, file: !1230, line: 515, baseType: !1045, size: 16, offset: 4336)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2160, file: !1230, line: 519, baseType: !1471, size: 128, offset: 4352)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2160, file: !1230, line: 519, baseType: !1471, size: 128, offset: 4480)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2160, file: !1230, line: 520, baseType: !2361, size: 128, offset: 4608)
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1472, line: 89, baseType: !2362)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1472, line: 86, size: 128, elements: !2363)
!2363 = !{!2364, !2365, !2366, !2367}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2362, file: !1472, line: 87, baseType: !1047, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2362, file: !1472, line: 87, baseType: !1047, size: 32, offset: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2362, file: !1472, line: 88, baseType: !1047, size: 32, offset: 64)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2362, file: !1472, line: 88, baseType: !1047, size: 32, offset: 96)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2160, file: !1230, line: 523, baseType: !1072, size: 128, offset: 4736)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2160, file: !1230, line: 524, baseType: !1045, size: 16, offset: 4864)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2160, file: !1230, line: 527, baseType: !1045, size: 16, offset: 4880)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2160, file: !1230, line: 532, baseType: !1127, size: 32, offset: 4896)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2160, file: !1230, line: 532, baseType: !1127, size: 32, offset: 4928)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2160, file: !1230, line: 534, baseType: !1127, size: 32, offset: 4960)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2160, file: !1230, line: 538, baseType: !1127, size: 32, offset: 4992)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2160, file: !1230, line: 542, baseType: !1047, size: 32, offset: 5024)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2160, file: !1230, line: 545, baseType: !1127, size: 32, offset: 5056)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2160, file: !1230, line: 545, baseType: !1127, size: 32, offset: 5088)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2160, file: !1230, line: 545, baseType: !1127, size: 32, offset: 5120)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2160, file: !1230, line: 548, baseType: !1127, size: 32, offset: 5152)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2160, file: !1230, line: 551, baseType: !1045, size: 16, offset: 5184)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2160, file: !1230, line: 551, baseType: !1045, size: 16, offset: 5200)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2160, file: !1230, line: 551, baseType: !1045, size: 16, offset: 5216)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2160, file: !1230, line: 551, baseType: !1045, size: 16, offset: 5232)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2160, file: !1230, line: 552, baseType: !1045, size: 16, offset: 5248)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2160, file: !1230, line: 552, baseType: !1045, size: 16, offset: 5264)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2160, file: !1230, line: 553, baseType: !1127, size: 32, offset: 5280)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2160, file: !1230, line: 553, baseType: !1127, size: 32, offset: 5312)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2160, file: !1230, line: 554, baseType: !1045, size: 16, offset: 5344)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2160, file: !1230, line: 554, baseType: !1045, size: 16, offset: 5360)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2160, file: !1230, line: 555, baseType: !1127, size: 32, offset: 5376)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2160, file: !1230, line: 555, baseType: !1127, size: 32, offset: 5408)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2160, file: !1230, line: 558, baseType: !1031, size: 8192, offset: 5440)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2160, file: !1230, line: 561, baseType: !1047, size: 32, offset: 13632)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2160, file: !1230, line: 562, baseType: !1045, size: 16, offset: 13664)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2160, file: !1230, line: 562, baseType: !1045, size: 16, offset: 13680)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2160, file: !1230, line: 565, baseType: !1575, size: 6144, offset: 13696)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2160, file: !1230, line: 568, baseType: !1272, size: 128, offset: 19840)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2160, file: !1230, line: 569, baseType: !1272, size: 128, offset: 19968)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2160, file: !1230, line: 572, baseType: !1032, size: 8, offset: 20096)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2160, file: !1230, line: 573, baseType: !1032, size: 8, offset: 20104)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2160, file: !1230, line: 574, baseType: !1032, size: 8, offset: 20112)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2160, file: !1230, line: 575, baseType: !2010, size: 40, offset: 20120)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2160, file: !1230, line: 578, baseType: !1047, size: 32, offset: 20160)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2160, file: !1230, line: 579, baseType: !1045, size: 16, offset: 20192)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2160, file: !1230, line: 580, baseType: !1045, size: 16, offset: 20208)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2160, file: !1230, line: 581, baseType: !1127, size: 32, offset: 20224)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2160, file: !1230, line: 582, baseType: !1127, size: 32, offset: 20256)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2160, file: !1230, line: 585, baseType: !1045, size: 16, offset: 20288)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2160, file: !1230, line: 585, baseType: !1045, size: 16, offset: 20304)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2160, file: !1230, line: 586, baseType: !1127, size: 32, offset: 20320)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2160, file: !1230, line: 589, baseType: !1045, size: 16, offset: 20352)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2160, file: !1230, line: 589, baseType: !1045, size: 16, offset: 20368)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2160, file: !1230, line: 590, baseType: !1047, size: 32, offset: 20384)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2160, file: !1230, line: 593, baseType: !1045, size: 16, offset: 20416)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2160, file: !1230, line: 593, baseType: !1045, size: 16, offset: 20432)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2160, file: !1230, line: 594, baseType: !1045, size: 16, offset: 20448)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2160, file: !1230, line: 594, baseType: !1045, size: 16, offset: 20464)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2160, file: !1230, line: 595, baseType: !1127, size: 32, offset: 20480)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2160, file: !1230, line: 596, baseType: !1127, size: 32, offset: 20512)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2160, file: !1230, line: 597, baseType: !2421, size: 64, offset: 20544)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 64)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !2423, line: 50, size: 1664, elements: !2424)
!2423 = !DIFile(filename: "blender/source/blender/makesdna/DNA_text_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2424 = !{!2425, !2426, !2427, !2428, !2429, !2430, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2422, file: !2423, line: 51, baseType: !1012, size: 960)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2422, file: !2423, line: 53, baseType: !1260, size: 64, offset: 960)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2422, file: !2423, line: 55, baseType: !1047, size: 32, offset: 1024)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "nlines", scope: !2422, file: !2423, line: 55, baseType: !1047, size: 32, offset: 1056)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !2422, file: !2423, line: 57, baseType: !1072, size: 128, offset: 1088)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "curl", scope: !2422, file: !2423, line: 58, baseType: !2431, size: 64, offset: 1216)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 64)
!2432 = !DIDerivedType(tag: DW_TAG_typedef, name: "TextLine", file: !2423, line: 48, baseType: !2433)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextLine", file: !2423, line: 42, size: 320, elements: !2434)
!2434 = !{!2435, !2437, !2438, !2439, !2440, !2441}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2433, file: !2423, line: 43, baseType: !2436, size: 64)
!2436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 64)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2433, file: !2423, line: 43, baseType: !2436, size: 64, offset: 64)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !2433, file: !2423, line: 45, baseType: !1260, size: 64, offset: 128)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2433, file: !2423, line: 46, baseType: !1260, size: 64, offset: 192)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2433, file: !2423, line: 47, baseType: !1047, size: 32, offset: 256)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "blen", scope: !2433, file: !2423, line: 47, baseType: !1047, size: 32, offset: 288)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "sell", scope: !2422, file: !2423, line: 58, baseType: !2431, size: 64, offset: 1280)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "curc", scope: !2422, file: !2423, line: 59, baseType: !1047, size: 32, offset: 1344)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "selc", scope: !2422, file: !2423, line: 59, baseType: !1047, size: 32, offset: 1376)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "undo_buf", scope: !2422, file: !2423, line: 61, baseType: !1260, size: 64, offset: 1408)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "undo_pos", scope: !2422, file: !2423, line: 62, baseType: !1047, size: 32, offset: 1472)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "undo_len", scope: !2422, file: !2423, line: 62, baseType: !1047, size: 32, offset: 1504)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "compiled", scope: !2422, file: !2423, line: 64, baseType: !1002, size: 64, offset: 1536)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !2422, file: !2423, line: 65, baseType: !2450, size: 64, offset: 1600)
!2450 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2160, file: !1230, line: 600, baseType: !1047, size: 32, offset: 20608)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2160, file: !1230, line: 601, baseType: !1127, size: 32, offset: 20640)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2160, file: !1230, line: 604, baseType: !2454, size: 256, offset: 20672)
!2454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 256, elements: !2455)
!2455 = !{!2456}
!2456 = !DISubrange(count: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2160, file: !1230, line: 607, baseType: !2458, size: 10880, offset: 20928)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !1230, line: 364, size: 10880, elements: !2459)
!2459 = !{!2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2458, file: !1230, line: 365, baseType: !2163, size: 1984)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2458, file: !1230, line: 367, baseType: !1031, size: 8192, offset: 1984)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2458, file: !1230, line: 369, baseType: !1045, size: 16, offset: 10176)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2458, file: !1230, line: 369, baseType: !1045, size: 16, offset: 10192)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2458, file: !1230, line: 370, baseType: !1045, size: 16, offset: 10208)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2458, file: !1230, line: 370, baseType: !1045, size: 16, offset: 10224)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2458, file: !1230, line: 372, baseType: !1127, size: 32, offset: 10240)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2458, file: !1230, line: 373, baseType: !1127, size: 32, offset: 10272)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2458, file: !1230, line: 375, baseType: !1932, size: 24, offset: 10304)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2458, file: !1230, line: 376, baseType: !1032, size: 8, offset: 10328)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2458, file: !1230, line: 378, baseType: !1032, size: 8, offset: 10336)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2458, file: !1230, line: 379, baseType: !1932, size: 24, offset: 10344)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2458, file: !1230, line: 381, baseType: !1062, size: 512, offset: 10368)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2160, file: !1230, line: 609, baseType: !1047, size: 32, offset: 31808)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2160, file: !1230, line: 610, baseType: !1047, size: 32, offset: 31840)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !1402, file: !1230, line: 1252, baseType: !2476, size: 256, offset: 34112)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !1230, line: 158, size: 256, elements: !2477)
!2477 = !{!2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2476, file: !1230, line: 159, baseType: !1047, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2476, file: !1230, line: 160, baseType: !1127, size: 32, offset: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2476, file: !1230, line: 161, baseType: !1127, size: 32, offset: 64)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2476, file: !1230, line: 162, baseType: !1127, size: 32, offset: 96)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2476, file: !1230, line: 163, baseType: !1047, size: 32, offset: 128)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2476, file: !1230, line: 164, baseType: !1045, size: 16, offset: 160)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2476, file: !1230, line: 165, baseType: !1045, size: 16, offset: 176)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2476, file: !1230, line: 166, baseType: !1127, size: 32, offset: 192)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2476, file: !1230, line: 167, baseType: !1127, size: 32, offset: 224)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1402, file: !1230, line: 1254, baseType: !1072, size: 128, offset: 34368)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !1402, file: !1230, line: 1255, baseType: !1072, size: 128, offset: 34496)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !1402, file: !1230, line: 1257, baseType: !1002, size: 64, offset: 34624)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !1402, file: !1230, line: 1258, baseType: !1002, size: 64, offset: 34688)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !1402, file: !1230, line: 1259, baseType: !1002, size: 64, offset: 34752)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !1402, file: !1230, line: 1260, baseType: !1002, size: 64, offset: 34816)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !1402, file: !1230, line: 1262, baseType: !1002, size: 64, offset: 34880)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !1402, file: !1230, line: 1265, baseType: !2495, size: 64, offset: 34944)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 64)
!2496 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !1230, line: 1265, flags: DIFlagFwdDecl)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !1402, file: !1230, line: 1266, baseType: !1045, size: 16, offset: 35008)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1402, file: !1230, line: 1267, baseType: !1045, size: 16, offset: 35024)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !1402, file: !1230, line: 1270, baseType: !1047, size: 32, offset: 35040)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !1402, file: !1230, line: 1271, baseType: !1072, size: 128, offset: 35072)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1402, file: !1230, line: 1274, baseType: !2502, size: 128, offset: 35200)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !1230, line: 650, size: 128, elements: !2503)
!2503 = !{!2504, !2505, !2506, !2507, !2508}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2502, file: !1230, line: 651, baseType: !1197, size: 96)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2502, file: !1230, line: 652, baseType: !1032, size: 8, offset: 96)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2502, file: !1230, line: 652, baseType: !1032, size: 8, offset: 104)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2502, file: !1230, line: 652, baseType: !1032, size: 8, offset: 112)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2502, file: !1230, line: 652, baseType: !1032, size: 8, offset: 120)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !1402, file: !1230, line: 1275, baseType: !2510, size: 1472, offset: 35328)
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !1230, line: 676, size: 1472, elements: !2511)
!2511 = !{!2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2524, !2534, !2535, !2536, !2537, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2510, file: !1230, line: 679, baseType: !2502, size: 128)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2510, file: !1230, line: 680, baseType: !1045, size: 16, offset: 128)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2510, file: !1230, line: 680, baseType: !1045, size: 16, offset: 144)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2510, file: !1230, line: 680, baseType: !1045, size: 16, offset: 160)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2510, file: !1230, line: 680, baseType: !1045, size: 16, offset: 176)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2510, file: !1230, line: 681, baseType: !1045, size: 16, offset: 192)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2510, file: !1230, line: 681, baseType: !1045, size: 16, offset: 208)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2510, file: !1230, line: 681, baseType: !1045, size: 16, offset: 224)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2510, file: !1230, line: 681, baseType: !1045, size: 16, offset: 240)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2510, file: !1230, line: 682, baseType: !1045, size: 16, offset: 256)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2510, file: !1230, line: 682, baseType: !2523, size: 48, offset: 272)
!2523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1045, size: 48, elements: !1198)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2510, file: !1230, line: 685, baseType: !2525, size: 192, offset: 320)
!2525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !1230, line: 633, size: 192, elements: !2526)
!2526 = !{!2527, !2528, !2529, !2530, !2531, !2532, !2533}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2525, file: !1230, line: 634, baseType: !1045, size: 16)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2525, file: !1230, line: 634, baseType: !1045, size: 16, offset: 16)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2525, file: !1230, line: 635, baseType: !1045, size: 16, offset: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2525, file: !1230, line: 635, baseType: !1045, size: 16, offset: 48)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2525, file: !1230, line: 636, baseType: !1127, size: 32, offset: 64)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2525, file: !1230, line: 636, baseType: !1127, size: 32, offset: 96)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2525, file: !1230, line: 637, baseType: !2421, size: 64, offset: 128)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2510, file: !1230, line: 686, baseType: !1045, size: 16, offset: 512)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2510, file: !1230, line: 686, baseType: !1045, size: 16, offset: 528)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2510, file: !1230, line: 687, baseType: !1127, size: 32, offset: 544)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2510, file: !1230, line: 688, baseType: !2538, size: 448, offset: 576)
!2538 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !1230, line: 674, baseType: !2539)
!2539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !1230, line: 659, size: 448, elements: !2540)
!2540 = !{!2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2539, file: !1230, line: 660, baseType: !1127, size: 32)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2539, file: !1230, line: 661, baseType: !1127, size: 32, offset: 32)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2539, file: !1230, line: 662, baseType: !1127, size: 32, offset: 64)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2539, file: !1230, line: 663, baseType: !1127, size: 32, offset: 96)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2539, file: !1230, line: 664, baseType: !1127, size: 32, offset: 128)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2539, file: !1230, line: 665, baseType: !1127, size: 32, offset: 160)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2539, file: !1230, line: 666, baseType: !1127, size: 32, offset: 192)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2539, file: !1230, line: 667, baseType: !1127, size: 32, offset: 224)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2539, file: !1230, line: 668, baseType: !1127, size: 32, offset: 256)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2539, file: !1230, line: 669, baseType: !1127, size: 32, offset: 288)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2539, file: !1230, line: 670, baseType: !1047, size: 32, offset: 320)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2539, file: !1230, line: 671, baseType: !1127, size: 32, offset: 352)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2539, file: !1230, line: 672, baseType: !1127, size: 32, offset: 384)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2539, file: !1230, line: 673, baseType: !1045, size: 16, offset: 416)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2539, file: !1230, line: 673, baseType: !1045, size: 16, offset: 432)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2510, file: !1230, line: 692, baseType: !1127, size: 32, offset: 1024)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2510, file: !1230, line: 697, baseType: !1127, size: 32, offset: 1056)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2510, file: !1230, line: 703, baseType: !1047, size: 32, offset: 1088)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2510, file: !1230, line: 704, baseType: !1045, size: 16, offset: 1120)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2510, file: !1230, line: 704, baseType: !1045, size: 16, offset: 1136)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2510, file: !1230, line: 705, baseType: !1045, size: 16, offset: 1152)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2510, file: !1230, line: 706, baseType: !1045, size: 16, offset: 1168)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2510, file: !1230, line: 707, baseType: !1045, size: 16, offset: 1184)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2510, file: !1230, line: 708, baseType: !1045, size: 16, offset: 1200)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2510, file: !1230, line: 709, baseType: !1045, size: 16, offset: 1216)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2510, file: !1230, line: 709, baseType: !1045, size: 16, offset: 1232)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2510, file: !1230, line: 709, baseType: !1045, size: 16, offset: 1248)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2510, file: !1230, line: 709, baseType: !1045, size: 16, offset: 1264)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2510, file: !1230, line: 710, baseType: !1045, size: 16, offset: 1280)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2510, file: !1230, line: 711, baseType: !1045, size: 16, offset: 1296)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2510, file: !1230, line: 712, baseType: !1127, size: 32, offset: 1312)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2510, file: !1230, line: 713, baseType: !1127, size: 32, offset: 1344)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2510, file: !1230, line: 713, baseType: !1127, size: 32, offset: 1376)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2510, file: !1230, line: 713, baseType: !1127, size: 32, offset: 1408)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2510, file: !1230, line: 713, baseType: !1127, size: 32, offset: 1440)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1402, file: !1230, line: 1278, baseType: !2577, size: 64, offset: 36800)
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !1230, line: 1197, size: 64, elements: !2578)
!2578 = !{!2579, !2580, !2581, !2582}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2577, file: !1230, line: 1199, baseType: !1127, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2577, file: !1230, line: 1200, baseType: !1032, size: 8, offset: 32)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2577, file: !1230, line: 1201, baseType: !1032, size: 8, offset: 40)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2577, file: !1230, line: 1202, baseType: !1045, size: 16, offset: 48)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1402, file: !1230, line: 1281, baseType: !1228, size: 64, offset: 36864)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !1402, file: !1230, line: 1284, baseType: !2585, size: 192, offset: 36928)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !1230, line: 1208, size: 192, elements: !2586)
!2586 = !{!2587, !2588, !2589, !2590}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2585, file: !1230, line: 1209, baseType: !1197, size: 96)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2585, file: !1230, line: 1210, baseType: !1047, size: 32, offset: 96)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2585, file: !1230, line: 1210, baseType: !1047, size: 32, offset: 128)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2585, file: !1230, line: 1210, baseType: !1047, size: 32, offset: 160)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1402, file: !1230, line: 1287, baseType: !1628, size: 64, offset: 37120)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1402, file: !1230, line: 1289, baseType: !1372, size: 64, offset: 37184)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !1402, file: !1230, line: 1290, baseType: !1372, size: 64, offset: 37248)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1402, file: !1230, line: 1293, baseType: !2183, size: 1280, offset: 37312)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1402, file: !1230, line: 1294, baseType: !2233, size: 512, offset: 38592)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !1402, file: !1230, line: 1295, baseType: !1619, size: 512, offset: 39104)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !1402, file: !1230, line: 1298, baseType: !2598, size: 64, offset: 39616)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64)
!2599 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !1230, line: 1298, flags: DIFlagFwdDecl)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1398, file: !1397, line: 53, baseType: !1047, size: 32, offset: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1398, file: !1397, line: 54, baseType: !1047, size: 32, offset: 96)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1398, file: !1397, line: 55, baseType: !1047, size: 32, offset: 128)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1398, file: !1397, line: 55, baseType: !1047, size: 32, offset: 160)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1398, file: !1397, line: 56, baseType: !1032, size: 8, offset: 192)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1398, file: !1397, line: 56, baseType: !1032, size: 8, offset: 200)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1398, file: !1397, line: 57, baseType: !1032, size: 8, offset: 208)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1398, file: !1397, line: 57, baseType: !1032, size: 8, offset: 216)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1398, file: !1397, line: 59, baseType: !1045, size: 16, offset: 224)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1398, file: !1397, line: 59, baseType: !1045, size: 16, offset: 240)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1398, file: !1397, line: 59, baseType: !1045, size: 16, offset: 256)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1398, file: !1397, line: 61, baseType: !1045, size: 16, offset: 272)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1398, file: !1397, line: 63, baseType: !1047, size: 32, offset: 288)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !1009, file: !6, line: 293, baseType: !1072, size: 128, offset: 11200)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !1009, file: !6, line: 294, baseType: !2615, size: 64, offset: 11328)
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 64)
!2616 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !6, line: 113, baseType: !2617)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !6, line: 108, size: 256, elements: !2618)
!2618 = !{!2619, !2621, !2622, !2623, !2624}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2617, file: !6, line: 109, baseType: !2620, size: 64)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 64)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2617, file: !6, line: 109, baseType: !2620, size: 64, offset: 64)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2617, file: !6, line: 110, baseType: !1008, size: 64, offset: 128)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2617, file: !6, line: 111, baseType: !1047, size: 32, offset: 192)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2617, file: !6, line: 112, baseType: !1127, size: 32, offset: 224)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1005, file: !31, line: 287, baseType: !1047, size: 32, offset: 64)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "volmode", scope: !1005, file: !31, line: 288, baseType: !1047, size: 32, offset: 96)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !1005, file: !31, line: 289, baseType: !1047, size: 32, offset: 128)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "orglength", scope: !1005, file: !31, line: 290, baseType: !1127, size: 32, offset: 160)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "bulge", scope: !1005, file: !31, line: 291, baseType: !1127, size: 32, offset: 192)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "bulge_min", scope: !1005, file: !31, line: 292, baseType: !1127, size: 32, offset: 224)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "bulge_max", scope: !1005, file: !31, line: 293, baseType: !1127, size: 32, offset: 256)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "bulge_smooth", scope: !1005, file: !31, line: 294, baseType: !1127, size: 32, offset: 288)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !1005, file: !31, line: 295, baseType: !1062, size: 512, offset: 320)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 64)
!2635 = !DIDerivedType(tag: DW_TAG_typedef, name: "bDistLimitConstraint", file: !31, line: 416, baseType: !2636)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bDistLimitConstraint", file: !31, line: 406, size: 704, elements: !2637)
!2637 = !{!2638, !2639, !2640, !2641, !2642, !2643, !2644}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2636, file: !31, line: 407, baseType: !1008, size: 64)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !2636, file: !31, line: 408, baseType: !1062, size: 512, offset: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2636, file: !31, line: 410, baseType: !1127, size: 32, offset: 576)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2636, file: !31, line: 411, baseType: !1127, size: 32, offset: 608)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2636, file: !31, line: 413, baseType: !1045, size: 16, offset: 640)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2636, file: !31, line: 414, baseType: !1045, size: 16, offset: 656)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2636, file: !31, line: 415, baseType: !1047, size: 32, offset: 672)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 64)
!2646 = !DIDerivedType(tag: DW_TAG_typedef, name: "bChildOfConstraint", file: !31, line: 332, baseType: !2647)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bChildOfConstraint", file: !31, line: 326, size: 1152, elements: !2648)
!2648 = !{!2649, !2650, !2651, !2652, !2653}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2647, file: !31, line: 327, baseType: !1008, size: 64)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2647, file: !31, line: 328, baseType: !1047, size: 32, offset: 64)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2647, file: !31, line: 329, baseType: !1047, size: 32, offset: 96)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "invmat", scope: !2647, file: !31, line: 330, baseType: !1281, size: 512, offset: 128)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !2647, file: !31, line: 331, baseType: !1062, size: 512, offset: 640)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 64)
!2655 = !DIDerivedType(tag: DW_TAG_typedef, name: "bFollowPathConstraint", file: !31, line: 282, baseType: !2656)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bFollowPathConstraint", file: !31, line: 272, size: 192, elements: !2657)
!2657 = !{!2658, !2659, !2660, !2661, !2662, !2663}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2656, file: !31, line: 273, baseType: !1008, size: 64)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2656, file: !31, line: 275, baseType: !1127, size: 32, offset: 64)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "offset_fac", scope: !2656, file: !31, line: 276, baseType: !1127, size: 32, offset: 96)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "followflag", scope: !2656, file: !31, line: 278, baseType: !1047, size: 32, offset: 128)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !2656, file: !31, line: 280, baseType: !1045, size: 16, offset: 160)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !2656, file: !31, line: 281, baseType: !1045, size: 16, offset: 176)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 64)
!2665 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curve", file: !1258, line: 273, baseType: !2666)
!2666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Curve", file: !1258, line: 193, size: 4224, elements: !2667)
!2667 = !{!2668, !2669, !2670, !2671, !2672, !2682, !2683, !2684, !2685, !2686, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2735, !2736, !2739, !2740, !2741, !2742, !2750, !2751, !2752, !2761, !2762, !2763, !2764, !2765, !2766, !2767}
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2666, file: !1258, line: 194, baseType: !1012, size: 960)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2666, file: !1258, line: 195, baseType: !1083, size: 64, offset: 960)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2666, file: !1258, line: 197, baseType: !1170, size: 64, offset: 1024)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "nurb", scope: !2666, file: !1258, line: 199, baseType: !1072, size: 128, offset: 1088)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "editnurb", scope: !2666, file: !1258, line: 201, baseType: !2673, size: 64, offset: 1216)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 64)
!2674 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditNurb", file: !1258, line: 191, baseType: !2675)
!2675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditNurb", file: !1258, line: 180, size: 256, elements: !2676)
!2676 = !{!2677, !2678, !2679, !2680}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "nurbs", scope: !2675, file: !1258, line: 182, baseType: !1072, size: 128)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "keyindex", scope: !2675, file: !1258, line: 185, baseType: !1189, size: 64, offset: 128)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !2675, file: !1258, line: 188, baseType: !1047, size: 32, offset: 192)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2675, file: !1258, line: 190, baseType: !2681, size: 32, offset: 224)
!2681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 32, elements: !1273)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "bevobj", scope: !2666, file: !1258, line: 203, baseType: !1008, size: 64, offset: 1280)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "taperobj", scope: !2666, file: !1258, line: 203, baseType: !1008, size: 64, offset: 1344)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "textoncurve", scope: !2666, file: !1258, line: 203, baseType: !1008, size: 64, offset: 1408)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2666, file: !1258, line: 204, baseType: !1166, size: 64, offset: 1472)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2666, file: !1258, line: 205, baseType: !2687, size: 64, offset: 1536)
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 64)
!2688 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !1258, line: 45, flags: DIFlagFwdDecl)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2666, file: !1258, line: 206, baseType: !1255, size: 64, offset: 1600)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2666, file: !1258, line: 209, baseType: !1197, size: 96, offset: 1664)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2666, file: !1258, line: 210, baseType: !1197, size: 96, offset: 1760)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !2666, file: !1258, line: 211, baseType: !1197, size: 96, offset: 1856)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2666, file: !1258, line: 213, baseType: !1045, size: 16, offset: 1952)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !2666, file: !1258, line: 215, baseType: !1045, size: 16, offset: 1968)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !2666, file: !1258, line: 216, baseType: !1045, size: 16, offset: 1984)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "twist_mode", scope: !2666, file: !1258, line: 216, baseType: !1045, size: 16, offset: 2000)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "twist_smooth", scope: !2666, file: !1258, line: 217, baseType: !1127, size: 32, offset: 2016)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "smallcaps_scale", scope: !2666, file: !1258, line: 217, baseType: !1127, size: 32, offset: 2048)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "pathlen", scope: !2666, file: !1258, line: 219, baseType: !1047, size: 32, offset: 2080)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "bevresol", scope: !2666, file: !1258, line: 220, baseType: !1045, size: 16, offset: 2112)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !2666, file: !1258, line: 220, baseType: !1045, size: 16, offset: 2128)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2666, file: !1258, line: 221, baseType: !1047, size: 32, offset: 2144)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2666, file: !1258, line: 222, baseType: !1127, size: 32, offset: 2176)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "ext1", scope: !2666, file: !1258, line: 222, baseType: !1127, size: 32, offset: 2208)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "ext2", scope: !2666, file: !1258, line: 222, baseType: !1127, size: 32, offset: 2240)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !2666, file: !1258, line: 225, baseType: !1045, size: 16, offset: 2272)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !2666, file: !1258, line: 225, baseType: !1045, size: 16, offset: 2288)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "resolu_ren", scope: !2666, file: !1258, line: 226, baseType: !1045, size: 16, offset: 2304)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "resolv_ren", scope: !2666, file: !1258, line: 226, baseType: !1045, size: 16, offset: 2320)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "actnu", scope: !2666, file: !1258, line: 229, baseType: !1047, size: 32, offset: 2336)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "actvert", scope: !2666, file: !1258, line: 231, baseType: !1047, size: 32, offset: 2368)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2666, file: !1258, line: 233, baseType: !2681, size: 32, offset: 2400)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !2666, file: !1258, line: 236, baseType: !1045, size: 16, offset: 2432)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "spacemode", scope: !2666, file: !1258, line: 237, baseType: !1032, size: 8, offset: 2448)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2666, file: !1258, line: 237, baseType: !1032, size: 8, offset: 2456)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !2666, file: !1258, line: 238, baseType: !1127, size: 32, offset: 2464)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "linedist", scope: !2666, file: !1258, line: 238, baseType: !1127, size: 32, offset: 2496)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "shear", scope: !2666, file: !1258, line: 238, baseType: !1127, size: 32, offset: 2528)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !2666, file: !1258, line: 238, baseType: !1127, size: 32, offset: 2560)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "wordspace", scope: !2666, file: !1258, line: 238, baseType: !1127, size: 32, offset: 2592)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "ulpos", scope: !2666, file: !1258, line: 238, baseType: !1127, size: 32, offset: 2624)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "ulheight", scope: !2666, file: !1258, line: 238, baseType: !1127, size: 32, offset: 2656)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !2666, file: !1258, line: 239, baseType: !1127, size: 32, offset: 2688)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !2666, file: !1258, line: 239, baseType: !1127, size: 32, offset: 2720)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "linewidth", scope: !2666, file: !1258, line: 240, baseType: !1127, size: 32, offset: 2752)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2666, file: !1258, line: 244, baseType: !1047, size: 32, offset: 2784)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "selstart", scope: !2666, file: !1258, line: 245, baseType: !1047, size: 32, offset: 2816)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !2666, file: !1258, line: 245, baseType: !1047, size: 32, offset: 2848)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "len_wchar", scope: !2666, file: !1258, line: 248, baseType: !1047, size: 32, offset: 2880)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2666, file: !1258, line: 249, baseType: !1047, size: 32, offset: 2912)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2666, file: !1258, line: 250, baseType: !1260, size: 64, offset: 2944)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "editfont", scope: !2666, file: !1258, line: 251, baseType: !2733, size: 64, offset: 3008)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 64)
!2734 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditFont", file: !1258, line: 50, flags: DIFlagFwdDecl)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2666, file: !1258, line: 253, baseType: !1062, size: 512, offset: 3072)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !2666, file: !1258, line: 254, baseType: !2737, size: 64, offset: 3584)
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 64)
!2738 = !DICompositeType(tag: DW_TAG_structure_type, name: "VFont", file: !1258, line: 47, flags: DIFlagFwdDecl)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "vfontb", scope: !2666, file: !1258, line: 255, baseType: !2737, size: 64, offset: 3648)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "vfonti", scope: !2666, file: !1258, line: 256, baseType: !2737, size: 64, offset: 3712)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "vfontbi", scope: !2666, file: !1258, line: 257, baseType: !2737, size: 64, offset: 3776)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "tb", scope: !2666, file: !1258, line: 259, baseType: !2743, size: 64, offset: 3840)
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 64)
!2744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextBox", file: !1258, line: 176, size: 128, elements: !2745)
!2745 = !{!2746, !2747, !2748, !2749}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2744, file: !1258, line: 177, baseType: !1127, size: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2744, file: !1258, line: 177, baseType: !1127, size: 32, offset: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2744, file: !1258, line: 177, baseType: !1127, size: 32, offset: 64)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2744, file: !1258, line: 177, baseType: !1127, size: 32, offset: 96)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "totbox", scope: !2666, file: !1258, line: 260, baseType: !1047, size: 32, offset: 3904)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "actbox", scope: !2666, file: !1258, line: 260, baseType: !1047, size: 32, offset: 3936)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "strinfo", scope: !2666, file: !1258, line: 262, baseType: !2753, size: 64, offset: 3968)
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 64)
!2754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CharInfo", file: !1258, line: 168, size: 64, elements: !2755)
!2755 = !{!2756, !2757, !2758, !2759, !2760}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "kern", scope: !2754, file: !1258, line: 169, baseType: !1045, size: 16)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2754, file: !1258, line: 170, baseType: !1045, size: 16, offset: 16)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2754, file: !1258, line: 171, baseType: !1032, size: 8, offset: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2754, file: !1258, line: 172, baseType: !1032, size: 8, offset: 40)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2754, file: !1258, line: 173, baseType: !1045, size: 16, offset: 48)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "curinfo", scope: !2666, file: !1258, line: 263, baseType: !2754, size: 64, offset: 4032)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !2666, file: !1258, line: 267, baseType: !1127, size: 32, offset: 4096)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1", scope: !2666, file: !1258, line: 268, baseType: !1127, size: 32, offset: 4128)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2", scope: !2666, file: !1258, line: 268, baseType: !1127, size: 32, offset: 4160)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1_mapping", scope: !2666, file: !1258, line: 269, baseType: !1032, size: 8, offset: 4192)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2_mapping", scope: !2666, file: !1258, line: 269, baseType: !1032, size: 8, offset: 4200)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2666, file: !1258, line: 271, baseType: !2144, size: 16, offset: 4208)
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2769, size: 64)
!2769 = !DIDerivedType(tag: DW_TAG_typedef, name: "bObjectSolverConstraint", file: !31, line: 453, baseType: !2770)
!2770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bObjectSolverConstraint", file: !31, line: 447, size: 1216, elements: !2771)
!2771 = !{!2772, !2773, !2774, !2775, !2776, !2777}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2770, file: !31, line: 448, baseType: !1628, size: 64)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2770, file: !31, line: 449, baseType: !1047, size: 32, offset: 64)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2770, file: !31, line: 449, baseType: !1047, size: 32, offset: 96)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2770, file: !31, line: 450, baseType: !1062, size: 512, offset: 128)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "invmat", scope: !2770, file: !31, line: 451, baseType: !1281, size: 512, offset: 640)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2770, file: !31, line: 452, baseType: !1008, size: 64, offset: 1152)
!2778 = !{!0}
!2779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2780, size: 960, elements: !1198)
!2780 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !1453, line: 308, baseType: !2781)
!2781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !1453, line: 302, size: 320, elements: !2782)
!2782 = !{!2783, !2784, !2787, !2788, !2789}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2781, file: !1453, line: 303, baseType: !1047, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !2781, file: !1453, line: 304, baseType: !2785, size: 64, offset: 64)
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 64)
!2786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1032)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !2781, file: !1453, line: 305, baseType: !1047, size: 32, offset: 128)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2781, file: !1453, line: 306, baseType: !2785, size: 64, offset: 192)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2781, file: !1453, line: 307, baseType: !2785, size: 64, offset: 256)
!2790 = !{i32 7, !"Dwarf Version", i32 4}
!2791 = !{i32 2, !"Debug Info Version", i32 3}
!2792 = !{i32 1, !"wchar_size", i32 4}
!2793 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2794 = distinct !DISubprogram(name: "get_active_constraints", scope: !3, file: !3, line: 88, type: !2795, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!2795 = !DISubroutineType(types: !2796)
!2796 = !{!2797, !2798}
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 64)
!2799 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !6, line: 295, baseType: !1009)
!2800 = !{}
!2801 = !DILocalVariable(name: "ob", arg: 1, scope: !2794, file: !3, line: 88, type: !2798)
!2802 = !DILocation(line: 88, column: 42, scope: !2794)
!2803 = !DILocation(line: 90, column: 6, scope: !2804)
!2804 = distinct !DILexicalBlock(scope: !2794, file: !3, line: 90, column: 6)
!2805 = !DILocation(line: 90, column: 9, scope: !2804)
!2806 = !DILocation(line: 90, column: 6, scope: !2794)
!2807 = !DILocation(line: 91, column: 3, scope: !2804)
!2808 = !DILocation(line: 93, column: 6, scope: !2809)
!2809 = distinct !DILexicalBlock(scope: !2794, file: !3, line: 93, column: 6)
!2810 = !DILocation(line: 93, column: 10, scope: !2809)
!2811 = !DILocation(line: 93, column: 15, scope: !2809)
!2812 = !DILocation(line: 93, column: 6, scope: !2794)
!2813 = !DILocalVariable(name: "pchan", scope: !2814, file: !3, line: 94, type: !2815)
!2814 = distinct !DILexicalBlock(scope: !2809, file: !3, line: 93, column: 31)
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2816, size: 64)
!2816 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPoseChannel", file: !47, line: 243, baseType: !2817)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPoseChannel", file: !47, line: 187, size: 4352, elements: !2818)
!2818 = !{!2819, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2817, file: !47, line: 188, baseType: !2820, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2817, file: !47, line: 188, baseType: !2820, size: 64, offset: 64)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !2817, file: !47, line: 190, baseType: !1051, size: 64, offset: 128)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !2817, file: !47, line: 192, baseType: !1072, size: 128, offset: 192)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2817, file: !47, line: 193, baseType: !1062, size: 512, offset: 320)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2817, file: !47, line: 195, baseType: !1045, size: 16, offset: 832)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "ikflag", scope: !2817, file: !47, line: 196, baseType: !1045, size: 16, offset: 848)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !2817, file: !47, line: 197, baseType: !1045, size: 16, offset: 864)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "agrp_index", scope: !2817, file: !47, line: 198, baseType: !1045, size: 16, offset: 880)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "constflag", scope: !2817, file: !47, line: 199, baseType: !1032, size: 8, offset: 896)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "selectflag", scope: !2817, file: !47, line: 200, baseType: !1032, size: 8, offset: 904)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "pad0", scope: !2817, file: !47, line: 201, baseType: !2179, size: 48, offset: 912)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "bone", scope: !2817, file: !47, line: 203, baseType: !2833, size: 64, offset: 960)
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 64)
!2834 = !DICompositeType(tag: DW_TAG_structure_type, name: "Bone", file: !47, line: 203, flags: DIFlagFwdDecl)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2817, file: !47, line: 204, baseType: !2820, size: 64, offset: 1024)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2817, file: !47, line: 205, baseType: !2820, size: 64, offset: 1088)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "iktree", scope: !2817, file: !47, line: 207, baseType: !1074, size: 128, offset: 1152)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "siktree", scope: !2817, file: !47, line: 208, baseType: !1074, size: 128, offset: 1280)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !2817, file: !47, line: 210, baseType: !1233, size: 64, offset: 1408)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !2817, file: !47, line: 211, baseType: !1008, size: 64, offset: 1472)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "custom_tx", scope: !2817, file: !47, line: 212, baseType: !2820, size: 64, offset: 1536)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2817, file: !47, line: 217, baseType: !1197, size: 96, offset: 1600)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2817, file: !47, line: 218, baseType: !1197, size: 96, offset: 1696)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "eul", scope: !2817, file: !47, line: 221, baseType: !1197, size: 96, offset: 1792)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !2817, file: !47, line: 222, baseType: !1272, size: 128, offset: 1888)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !2817, file: !47, line: 223, baseType: !1197, size: 96, offset: 2016)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !2817, file: !47, line: 223, baseType: !1127, size: 32, offset: 2112)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !2817, file: !47, line: 224, baseType: !1045, size: 16, offset: 2144)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2817, file: !47, line: 225, baseType: !1045, size: 16, offset: 2160)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mat", scope: !2817, file: !47, line: 227, baseType: !1281, size: 512, offset: 2176)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "pose_mat", scope: !2817, file: !47, line: 228, baseType: !1281, size: 512, offset: 2688)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !2817, file: !47, line: 230, baseType: !1281, size: 512, offset: 3200)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "pose_head", scope: !2817, file: !47, line: 233, baseType: !1197, size: 96, offset: 3712)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "pose_tail", scope: !2817, file: !47, line: 234, baseType: !1197, size: 96, offset: 3808)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "limitmin", scope: !2817, file: !47, line: 236, baseType: !1197, size: 96, offset: 3904)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "limitmax", scope: !2817, file: !47, line: 236, baseType: !1197, size: 96, offset: 4000)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness", scope: !2817, file: !47, line: 237, baseType: !1197, size: 96, offset: 4096)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "ikstretch", scope: !2817, file: !47, line: 238, baseType: !1127, size: 32, offset: 4192)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "ikrotweight", scope: !2817, file: !47, line: 239, baseType: !1127, size: 32, offset: 4224)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "iklinweight", scope: !2817, file: !47, line: 240, baseType: !1127, size: 32, offset: 4256)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2817, file: !47, line: 242, baseType: !1002, size: 64, offset: 4288)
!2862 = !DILocation(line: 94, column: 17, scope: !2814)
!2863 = !DILocation(line: 96, column: 35, scope: !2814)
!2864 = !DILocation(line: 96, column: 11, scope: !2814)
!2865 = !DILocation(line: 96, column: 9, scope: !2814)
!2866 = !DILocation(line: 97, column: 7, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2814, file: !3, line: 97, column: 7)
!2868 = !DILocation(line: 97, column: 7, scope: !2814)
!2869 = !DILocation(line: 98, column: 12, scope: !2867)
!2870 = !DILocation(line: 98, column: 19, scope: !2867)
!2871 = !DILocation(line: 98, column: 4, scope: !2867)
!2872 = !DILocation(line: 99, column: 2, scope: !2814)
!2873 = !DILocation(line: 101, column: 11, scope: !2809)
!2874 = !DILocation(line: 101, column: 15, scope: !2809)
!2875 = !DILocation(line: 101, column: 3, scope: !2809)
!2876 = !DILocation(line: 103, column: 2, scope: !2794)
!2877 = !DILocation(line: 104, column: 1, scope: !2794)
!2878 = distinct !DISubprogram(name: "get_constraint_lb", scope: !3, file: !3, line: 107, type: !2879, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!2879 = !DISubroutineType(types: !2880)
!2880 = !{!2797, !2798, !2881, !2900}
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 64)
!2882 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraint", file: !31, line: 76, baseType: !2883)
!2883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraint", file: !31, line: 54, size: 960, elements: !2884)
!2884 = !{!2885, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2883, file: !31, line: 55, baseType: !2886, size: 64)
!2886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 64)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2883, file: !31, line: 55, baseType: !2886, size: 64, offset: 64)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2883, file: !31, line: 57, baseType: !1002, size: 64, offset: 128)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2883, file: !31, line: 58, baseType: !1045, size: 16, offset: 192)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2883, file: !31, line: 59, baseType: !1045, size: 16, offset: 208)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "ownspace", scope: !2883, file: !31, line: 61, baseType: !1032, size: 8, offset: 224)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "tarspace", scope: !2883, file: !31, line: 62, baseType: !1032, size: 8, offset: 232)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2883, file: !31, line: 64, baseType: !1062, size: 512, offset: 240)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2883, file: !31, line: 66, baseType: !1045, size: 16, offset: 752)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "enforce", scope: !2883, file: !31, line: 68, baseType: !1127, size: 32, offset: 768)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "headtail", scope: !2883, file: !31, line: 69, baseType: !1127, size: 32, offset: 800)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2883, file: !31, line: 71, baseType: !1166, size: 64, offset: 832)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "lin_error", scope: !2883, file: !31, line: 74, baseType: !1127, size: 32, offset: 896)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "rot_error", scope: !2883, file: !31, line: 75, baseType: !1127, size: 32, offset: 928)
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 64)
!2901 = !DILocalVariable(name: "ob", arg: 1, scope: !2878, file: !3, line: 107, type: !2798)
!2902 = !DILocation(line: 107, column: 37, scope: !2878)
!2903 = !DILocalVariable(name: "con", arg: 2, scope: !2878, file: !3, line: 107, type: !2881)
!2904 = !DILocation(line: 107, column: 54, scope: !2878)
!2905 = !DILocalVariable(name: "r_pchan", arg: 3, scope: !2878, file: !3, line: 107, type: !2900)
!2906 = !DILocation(line: 107, column: 74, scope: !2878)
!2907 = !DILocation(line: 109, column: 6, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2878, file: !3, line: 109, column: 6)
!2909 = !DILocation(line: 109, column: 6, scope: !2878)
!2910 = !DILocation(line: 110, column: 4, scope: !2908)
!2911 = !DILocation(line: 110, column: 12, scope: !2908)
!2912 = !DILocation(line: 110, column: 3, scope: !2908)
!2913 = !DILocation(line: 112, column: 6, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2878, file: !3, line: 112, column: 6)
!2915 = !DILocation(line: 112, column: 6, scope: !2878)
!2916 = !DILocation(line: 113, column: 3, scope: !2914)
!2917 = !DILocation(line: 116, column: 22, scope: !2918)
!2918 = distinct !DILexicalBlock(scope: !2878, file: !3, line: 116, column: 6)
!2919 = !DILocation(line: 116, column: 26, scope: !2918)
!2920 = !DILocation(line: 116, column: 39, scope: !2918)
!2921 = !DILocation(line: 116, column: 7, scope: !2918)
!2922 = !DILocation(line: 116, column: 44, scope: !2918)
!2923 = !DILocation(line: 116, column: 6, scope: !2878)
!2924 = !DILocation(line: 117, column: 11, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2918, file: !3, line: 116, column: 52)
!2926 = !DILocation(line: 117, column: 15, scope: !2925)
!2927 = !DILocation(line: 117, column: 3, scope: !2925)
!2928 = !DILocation(line: 121, column: 6, scope: !2929)
!2929 = distinct !DILexicalBlock(scope: !2878, file: !3, line: 121, column: 6)
!2930 = !DILocation(line: 121, column: 10, scope: !2929)
!2931 = !DILocation(line: 121, column: 6, scope: !2878)
!2932 = !DILocalVariable(name: "pchan", scope: !2933, file: !3, line: 122, type: !2815)
!2933 = distinct !DILexicalBlock(scope: !2929, file: !3, line: 121, column: 16)
!2934 = !DILocation(line: 122, column: 17, scope: !2933)
!2935 = !DILocation(line: 127, column: 16, scope: !2936)
!2936 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 127, column: 3)
!2937 = !DILocation(line: 127, column: 20, scope: !2936)
!2938 = !DILocation(line: 127, column: 26, scope: !2936)
!2939 = !DILocation(line: 127, column: 35, scope: !2936)
!2940 = !DILocation(line: 127, column: 14, scope: !2936)
!2941 = !DILocation(line: 127, column: 8, scope: !2936)
!2942 = !DILocation(line: 127, column: 42, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2936, file: !3, line: 127, column: 3)
!2944 = !DILocation(line: 127, column: 3, scope: !2936)
!2945 = !DILocation(line: 128, column: 24, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !2947, file: !3, line: 128, column: 8)
!2947 = distinct !DILexicalBlock(scope: !2943, file: !3, line: 127, column: 70)
!2948 = !DILocation(line: 128, column: 31, scope: !2946)
!2949 = !DILocation(line: 128, column: 44, scope: !2946)
!2950 = !DILocation(line: 128, column: 9, scope: !2946)
!2951 = !DILocation(line: 128, column: 49, scope: !2946)
!2952 = !DILocation(line: 128, column: 8, scope: !2947)
!2953 = !DILocation(line: 130, column: 9, scope: !2954)
!2954 = distinct !DILexicalBlock(scope: !2955, file: !3, line: 130, column: 9)
!2955 = distinct !DILexicalBlock(scope: !2946, file: !3, line: 128, column: 57)
!2956 = !DILocation(line: 130, column: 9, scope: !2955)
!2957 = !DILocation(line: 131, column: 17, scope: !2954)
!2958 = !DILocation(line: 131, column: 7, scope: !2954)
!2959 = !DILocation(line: 131, column: 15, scope: !2954)
!2960 = !DILocation(line: 131, column: 6, scope: !2954)
!2961 = !DILocation(line: 133, column: 13, scope: !2955)
!2962 = !DILocation(line: 133, column: 20, scope: !2955)
!2963 = !DILocation(line: 133, column: 5, scope: !2955)
!2964 = !DILocation(line: 135, column: 3, scope: !2947)
!2965 = !DILocation(line: 127, column: 57, scope: !2943)
!2966 = !DILocation(line: 127, column: 64, scope: !2943)
!2967 = !DILocation(line: 127, column: 55, scope: !2943)
!2968 = !DILocation(line: 127, column: 3, scope: !2943)
!2969 = distinct !{!2969, !2944, !2970}
!2970 = !DILocation(line: 135, column: 3, scope: !2936)
!2971 = !DILocation(line: 136, column: 2, scope: !2933)
!2972 = !DILocation(line: 139, column: 2, scope: !2878)
!2973 = !DILocation(line: 140, column: 1, scope: !2878)
!2974 = distinct !DISubprogram(name: "get_active_constraint", scope: !3, file: !3, line: 143, type: !2975, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!2975 = !DISubroutineType(types: !2976)
!2976 = !{!2886, !2798}
!2977 = !DILocalVariable(name: "ob", arg: 1, scope: !2974, file: !3, line: 143, type: !2798)
!2978 = !DILocation(line: 143, column: 44, scope: !2974)
!2979 = !DILocation(line: 145, column: 59, scope: !2974)
!2980 = !DILocation(line: 145, column: 36, scope: !2974)
!2981 = !DILocation(line: 145, column: 9, scope: !2974)
!2982 = !DILocation(line: 145, column: 2, scope: !2974)
!2983 = distinct !DISubprogram(name: "object_test_constraints", scope: !3, file: !3, line: 512, type: !2984, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!2984 = !DISubroutineType(types: !2985)
!2985 = !{null, !2798}
!2986 = !DILocalVariable(name: "owner", arg: 1, scope: !2983, file: !3, line: 512, type: !2798)
!2987 = !DILocation(line: 512, column: 38, scope: !2983)
!2988 = !DILocation(line: 514, column: 6, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2983, file: !3, line: 514, column: 6)
!2990 = !DILocation(line: 514, column: 13, scope: !2989)
!2991 = !DILocation(line: 514, column: 25, scope: !2989)
!2992 = !DILocation(line: 514, column: 6, scope: !2983)
!2993 = !DILocation(line: 515, column: 20, scope: !2989)
!2994 = !DILocation(line: 515, column: 3, scope: !2989)
!2995 = !DILocation(line: 517, column: 6, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2983, file: !3, line: 517, column: 6)
!2997 = !DILocation(line: 517, column: 13, scope: !2996)
!2998 = !DILocation(line: 517, column: 18, scope: !2996)
!2999 = !DILocation(line: 517, column: 33, scope: !2996)
!3000 = !DILocation(line: 517, column: 36, scope: !2996)
!3001 = !DILocation(line: 517, column: 43, scope: !2996)
!3002 = !DILocation(line: 517, column: 6, scope: !2983)
!3003 = !DILocalVariable(name: "pchan", scope: !3004, file: !3, line: 518, type: !2815)
!3004 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 517, column: 49)
!3005 = !DILocation(line: 518, column: 17, scope: !3004)
!3006 = !DILocation(line: 520, column: 16, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !3004, file: !3, line: 520, column: 3)
!3008 = !DILocation(line: 520, column: 23, scope: !3007)
!3009 = !DILocation(line: 520, column: 29, scope: !3007)
!3010 = !DILocation(line: 520, column: 38, scope: !3007)
!3011 = !DILocation(line: 520, column: 14, scope: !3007)
!3012 = !DILocation(line: 520, column: 8, scope: !3007)
!3013 = !DILocation(line: 520, column: 45, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !3007, file: !3, line: 520, column: 3)
!3015 = !DILocation(line: 520, column: 3, scope: !3007)
!3016 = !DILocation(line: 521, column: 8, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3018, file: !3, line: 521, column: 8)
!3018 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 520, column: 73)
!3019 = !DILocation(line: 521, column: 15, scope: !3017)
!3020 = !DILocation(line: 521, column: 27, scope: !3017)
!3021 = !DILocation(line: 521, column: 8, scope: !3018)
!3022 = !DILocation(line: 522, column: 22, scope: !3017)
!3023 = !DILocation(line: 522, column: 29, scope: !3017)
!3024 = !DILocation(line: 522, column: 5, scope: !3017)
!3025 = !DILocation(line: 523, column: 3, scope: !3018)
!3026 = !DILocation(line: 520, column: 60, scope: !3014)
!3027 = !DILocation(line: 520, column: 67, scope: !3014)
!3028 = !DILocation(line: 520, column: 58, scope: !3014)
!3029 = !DILocation(line: 520, column: 3, scope: !3014)
!3030 = distinct !{!3030, !3015, !3031}
!3031 = !DILocation(line: 523, column: 3, scope: !3007)
!3032 = !DILocation(line: 524, column: 2, scope: !3004)
!3033 = !DILocation(line: 525, column: 1, scope: !2983)
!3034 = distinct !DISubprogram(name: "test_constraints", scope: !3, file: !3, line: 266, type: !3035, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!3035 = !DISubroutineType(types: !3036)
!3036 = !{null, !2798, !2815}
!3037 = !DILocalVariable(name: "owner", arg: 1, scope: !3034, file: !3, line: 266, type: !2798)
!3038 = !DILocation(line: 266, column: 38, scope: !3034)
!3039 = !DILocalVariable(name: "pchan", arg: 2, scope: !3034, file: !3, line: 266, type: !2815)
!3040 = !DILocation(line: 266, column: 59, scope: !3034)
!3041 = !DILocalVariable(name: "curcon", scope: !3034, file: !3, line: 268, type: !2881)
!3042 = !DILocation(line: 268, column: 15, scope: !3034)
!3043 = !DILocalVariable(name: "conlist", scope: !3034, file: !3, line: 269, type: !1383)
!3044 = !DILocation(line: 269, column: 12, scope: !3034)
!3045 = !DILocalVariable(name: "type", scope: !3034, file: !3, line: 270, type: !1047)
!3046 = !DILocation(line: 270, column: 6, scope: !3034)
!3047 = !DILocation(line: 272, column: 6, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 272, column: 6)
!3049 = !DILocation(line: 272, column: 12, scope: !3048)
!3050 = !DILocation(line: 272, column: 6, scope: !3034)
!3051 = !DILocation(line: 272, column: 21, scope: !3048)
!3052 = !DILocation(line: 275, column: 6, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 275, column: 6)
!3054 = !DILocation(line: 275, column: 6, scope: !3034)
!3055 = !DILocation(line: 276, column: 11, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3053, file: !3, line: 275, column: 13)
!3057 = !DILocation(line: 276, column: 18, scope: !3056)
!3058 = !DILocation(line: 276, column: 3, scope: !3056)
!3059 = !DILocation(line: 278, column: 10, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3056, file: !3, line: 276, column: 24)
!3061 = !DILocation(line: 279, column: 5, scope: !3060)
!3062 = !DILocation(line: 281, column: 10, scope: !3060)
!3063 = !DILocation(line: 282, column: 5, scope: !3060)
!3064 = !DILocation(line: 284, column: 2, scope: !3056)
!3065 = !DILocation(line: 286, column: 8, scope: !3053)
!3066 = !DILocation(line: 289, column: 10, scope: !3034)
!3067 = !DILocation(line: 289, column: 2, scope: !3034)
!3068 = !DILocation(line: 291, column: 15, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 289, column: 16)
!3070 = !DILocation(line: 291, column: 22, scope: !3069)
!3071 = !DILocation(line: 291, column: 12, scope: !3069)
!3072 = !DILocation(line: 292, column: 4, scope: !3069)
!3073 = !DILocation(line: 294, column: 15, scope: !3069)
!3074 = !DILocation(line: 294, column: 22, scope: !3069)
!3075 = !DILocation(line: 294, column: 12, scope: !3069)
!3076 = !DILocation(line: 295, column: 4, scope: !3069)
!3077 = !DILocation(line: 299, column: 6, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 299, column: 6)
!3079 = !DILocation(line: 299, column: 6, scope: !3034)
!3080 = !DILocation(line: 300, column: 17, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3082, file: !3, line: 300, column: 3)
!3082 = distinct !DILexicalBlock(scope: !3078, file: !3, line: 299, column: 15)
!3083 = !DILocation(line: 300, column: 26, scope: !3081)
!3084 = !DILocation(line: 300, column: 15, scope: !3081)
!3085 = !DILocation(line: 300, column: 8, scope: !3081)
!3086 = !DILocation(line: 300, column: 33, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3081, file: !3, line: 300, column: 3)
!3088 = !DILocation(line: 300, column: 3, scope: !3081)
!3089 = !DILocalVariable(name: "cti", scope: !3090, file: !3, line: 301, type: !3091)
!3090 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 300, column: 64)
!3091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3092, size: 64)
!3092 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintTypeInfo", file: !3093, line: 108, baseType: !3094)
!3093 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_constraint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintTypeInfo", file: !3093, line: 80, size: 1088, elements: !3095)
!3095 = !{!3096, !3097, !3098, !3099, !3100, !3104, !3113, !3117, !3118, !3122, !3126, !3152}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3094, file: !3093, line: 82, baseType: !1045, size: 16)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3094, file: !3093, line: 83, baseType: !1045, size: 16, offset: 16)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3094, file: !3093, line: 84, baseType: !2454, size: 256, offset: 32)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "structName", scope: !3094, file: !3093, line: 85, baseType: !2454, size: 256, offset: 288)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "free_data", scope: !3094, file: !3093, line: 89, baseType: !3101, size: 64, offset: 576)
!3101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3102, size: 64)
!3102 = !DISubroutineType(types: !3103)
!3103 = !{null, !2886}
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "id_looper", scope: !3094, file: !3093, line: 91, baseType: !3105, size: 64, offset: 640)
!3105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3106, size: 64)
!3106 = !DISubroutineType(types: !3107)
!3107 = !{null, !2886, !3108, !1002}
!3108 = !DIDerivedType(tag: DW_TAG_typedef, name: "ConstraintIDFunc", file: !3093, line: 65, baseType: !3109)
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 64)
!3110 = !DISubroutineType(types: !3111)
!3111 = !{null, !2886, !3112, !1963, !1002}
!3112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "copy_data", scope: !3094, file: !3093, line: 93, baseType: !3114, size: 64, offset: 704)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 64)
!3115 = !DISubroutineType(types: !3116)
!3116 = !{null, !2886, !2886}
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "new_data", scope: !3094, file: !3093, line: 95, baseType: !1506, size: 64, offset: 768)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "get_constraint_targets", scope: !3094, file: !3093, line: 99, baseType: !3119, size: 64, offset: 832)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 64)
!3120 = !DISubroutineType(types: !3121)
!3121 = !{!1047, !2886, !2797}
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "flush_constraint_targets", scope: !3094, file: !3093, line: 101, baseType: !3123, size: 64, offset: 896)
!3123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3124, size: 64)
!3124 = !DISubroutineType(types: !3125)
!3125 = !{null, !2886, !2797, !1963}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "get_target_matrix", scope: !3094, file: !3093, line: 105, baseType: !3127, size: 64, offset: 960)
!3127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3128, size: 64)
!3128 = !DISubroutineType(types: !3129)
!3129 = !{null, !2886, !3130, !3140, !1127}
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3131, size: 64)
!3131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintOb", file: !3093, line: 50, size: 1280, elements: !3132)
!3132 = !{!3133, !3134, !3135, !3136, !3137, !3138, !3139}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3131, file: !3093, line: 51, baseType: !1401, size: 64)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3131, file: !3093, line: 52, baseType: !1008, size: 64, offset: 64)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "pchan", scope: !3131, file: !3093, line: 53, baseType: !2820, size: 64, offset: 128)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !3131, file: !3093, line: 55, baseType: !1281, size: 512, offset: 192)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "startmat", scope: !3131, file: !3093, line: 56, baseType: !1281, size: 512, offset: 704)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3131, file: !3093, line: 58, baseType: !1045, size: 16, offset: 1216)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "rotOrder", scope: !3131, file: !3093, line: 59, baseType: !1045, size: 16, offset: 1232)
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3141, size: 64)
!3141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintTarget", file: !31, line: 85, size: 1280, elements: !3142)
!3142 = !{!3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3141, file: !31, line: 86, baseType: !3140, size: 64)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3141, file: !31, line: 86, baseType: !3140, size: 64, offset: 64)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !3141, file: !31, line: 88, baseType: !1008, size: 64, offset: 128)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !3141, file: !31, line: 89, baseType: !1062, size: 512, offset: 192)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !3141, file: !31, line: 91, baseType: !1281, size: 512, offset: 704)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "space", scope: !3141, file: !31, line: 93, baseType: !1045, size: 16, offset: 1216)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3141, file: !31, line: 94, baseType: !1045, size: 16, offset: 1232)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3141, file: !31, line: 95, baseType: !1045, size: 16, offset: 1248)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "rotOrder", scope: !3141, file: !31, line: 96, baseType: !1045, size: 16, offset: 1264)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "evaluate_constraint", scope: !3094, file: !3093, line: 107, baseType: !3153, size: 64, offset: 1024)
!3153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3154, size: 64)
!3154 = !DISubroutineType(types: !3155)
!3155 = !{null, !2886, !3130, !2797}
!3156 = !DILocation(line: 301, column: 25, scope: !3090)
!3157 = !DILocation(line: 301, column: 59, scope: !3090)
!3158 = !DILocation(line: 301, column: 31, scope: !3090)
!3159 = !DILocalVariable(name: "targets", scope: !3090, file: !3, line: 302, type: !1072)
!3160 = !DILocation(line: 302, column: 13, scope: !3090)
!3161 = !DILocalVariable(name: "ct", scope: !3090, file: !3, line: 303, type: !3162)
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 64)
!3163 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintTarget", file: !31, line: 97, baseType: !3141)
!3164 = !DILocation(line: 303, column: 23, scope: !3090)
!3165 = !DILocation(line: 306, column: 4, scope: !3090)
!3166 = !DILocation(line: 306, column: 12, scope: !3090)
!3167 = !DILocation(line: 306, column: 17, scope: !3090)
!3168 = !DILocation(line: 308, column: 8, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3090, file: !3, line: 308, column: 8)
!3170 = !DILocation(line: 308, column: 16, scope: !3169)
!3171 = !DILocation(line: 308, column: 21, scope: !3169)
!3172 = !DILocation(line: 308, column: 8, scope: !3090)
!3173 = !DILocalVariable(name: "data", scope: !3174, file: !3, line: 309, type: !3175)
!3174 = distinct !DILexicalBlock(scope: !3169, file: !3, line: 308, column: 51)
!3175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3176, size: 64)
!3176 = !DIDerivedType(tag: DW_TAG_typedef, name: "bKinematicConstraint", file: !31, line: 151, baseType: !3177)
!3177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bKinematicConstraint", file: !31, line: 135, size: 1472, elements: !3178)
!3178 = !{!3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !3177, file: !31, line: 136, baseType: !1008, size: 64)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !3177, file: !31, line: 137, baseType: !1045, size: 16, offset: 64)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3177, file: !31, line: 138, baseType: !1045, size: 16, offset: 80)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "rootbone", scope: !3177, file: !31, line: 139, baseType: !1045, size: 16, offset: 96)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "max_rootbone", scope: !3177, file: !31, line: 140, baseType: !1045, size: 16, offset: 112)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !3177, file: !31, line: 141, baseType: !1062, size: 512, offset: 128)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "poletar", scope: !3177, file: !31, line: 142, baseType: !1008, size: 64, offset: 640)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "polesubtarget", scope: !3177, file: !31, line: 143, baseType: !1062, size: 512, offset: 704)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "poleangle", scope: !3177, file: !31, line: 144, baseType: !1127, size: 32, offset: 1216)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3177, file: !31, line: 145, baseType: !1127, size: 32, offset: 1248)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "orientweight", scope: !3177, file: !31, line: 146, baseType: !1127, size: 32, offset: 1280)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "grabtarget", scope: !3177, file: !31, line: 147, baseType: !1197, size: 96, offset: 1312)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3177, file: !31, line: 148, baseType: !1045, size: 16, offset: 1408)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3177, file: !31, line: 149, baseType: !1045, size: 16, offset: 1424)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !3177, file: !31, line: 150, baseType: !1127, size: 32, offset: 1440)
!3194 = !DILocation(line: 309, column: 27, scope: !3174)
!3195 = !DILocation(line: 309, column: 34, scope: !3174)
!3196 = !DILocation(line: 309, column: 42, scope: !3174)
!3197 = !DILocation(line: 316, column: 33, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3174, file: !3, line: 316, column: 9)
!3199 = !DILocation(line: 316, column: 39, scope: !3198)
!3200 = !DILocation(line: 316, column: 9, scope: !3198)
!3201 = !DILocation(line: 316, column: 44, scope: !3198)
!3202 = !DILocation(line: 316, column: 9, scope: !3174)
!3203 = !DILocation(line: 317, column: 6, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 316, column: 50)
!3205 = !DILocation(line: 317, column: 12, scope: !3204)
!3206 = !DILocation(line: 317, column: 16, scope: !3204)
!3207 = !DILocation(line: 318, column: 6, scope: !3204)
!3208 = !DILocation(line: 318, column: 14, scope: !3204)
!3209 = !DILocation(line: 318, column: 19, scope: !3204)
!3210 = !DILocation(line: 319, column: 5, scope: !3204)
!3211 = !DILocation(line: 320, column: 14, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 320, column: 14)
!3213 = !DILocation(line: 320, column: 20, scope: !3212)
!3214 = !DILocation(line: 320, column: 27, scope: !3212)
!3215 = !DILocation(line: 320, column: 24, scope: !3212)
!3216 = !DILocation(line: 320, column: 14, scope: !3198)
!3217 = !DILocation(line: 321, column: 64, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3219, file: !3, line: 321, column: 10)
!3219 = distinct !DILexicalBlock(scope: !3212, file: !3, line: 320, column: 34)
!3220 = !DILocation(line: 321, column: 39, scope: !3218)
!3221 = !DILocation(line: 321, column: 72, scope: !3218)
!3222 = !DILocation(line: 321, column: 78, scope: !3218)
!3223 = !DILocation(line: 321, column: 11, scope: !3218)
!3224 = !DILocation(line: 321, column: 10, scope: !3219)
!3225 = !DILocation(line: 322, column: 7, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3218, file: !3, line: 321, column: 90)
!3227 = !DILocation(line: 322, column: 15, scope: !3226)
!3228 = !DILocation(line: 322, column: 20, scope: !3226)
!3229 = !DILocation(line: 323, column: 6, scope: !3226)
!3230 = !DILocation(line: 324, column: 5, scope: !3219)
!3231 = !DILocation(line: 326, column: 9, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3174, file: !3, line: 326, column: 9)
!3233 = !DILocation(line: 326, column: 15, scope: !3232)
!3234 = !DILocation(line: 326, column: 9, scope: !3174)
!3235 = !DILocation(line: 327, column: 34, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 327, column: 10)
!3237 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 326, column: 24)
!3238 = !DILocation(line: 327, column: 40, scope: !3236)
!3239 = !DILocation(line: 327, column: 10, scope: !3236)
!3240 = !DILocation(line: 327, column: 49, scope: !3236)
!3241 = !DILocation(line: 327, column: 10, scope: !3237)
!3242 = !DILocation(line: 328, column: 7, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3236, file: !3, line: 327, column: 55)
!3244 = !DILocation(line: 328, column: 13, scope: !3243)
!3245 = !DILocation(line: 328, column: 21, scope: !3243)
!3246 = !DILocation(line: 329, column: 7, scope: !3243)
!3247 = !DILocation(line: 329, column: 15, scope: !3243)
!3248 = !DILocation(line: 329, column: 20, scope: !3243)
!3249 = !DILocation(line: 330, column: 6, scope: !3243)
!3250 = !DILocation(line: 331, column: 15, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3236, file: !3, line: 331, column: 15)
!3252 = !DILocation(line: 331, column: 21, scope: !3251)
!3253 = !DILocation(line: 331, column: 32, scope: !3251)
!3254 = !DILocation(line: 331, column: 29, scope: !3251)
!3255 = !DILocation(line: 331, column: 15, scope: !3236)
!3256 = !DILocation(line: 332, column: 65, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 332, column: 11)
!3258 = distinct !DILexicalBlock(scope: !3251, file: !3, line: 331, column: 39)
!3259 = !DILocation(line: 332, column: 40, scope: !3257)
!3260 = !DILocation(line: 332, column: 73, scope: !3257)
!3261 = !DILocation(line: 332, column: 79, scope: !3257)
!3262 = !DILocation(line: 332, column: 12, scope: !3257)
!3263 = !DILocation(line: 332, column: 11, scope: !3258)
!3264 = !DILocation(line: 333, column: 8, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 332, column: 95)
!3266 = !DILocation(line: 333, column: 16, scope: !3265)
!3267 = !DILocation(line: 333, column: 21, scope: !3265)
!3268 = !DILocation(line: 334, column: 7, scope: !3265)
!3269 = !DILocation(line: 335, column: 6, scope: !3258)
!3270 = !DILocation(line: 336, column: 5, scope: !3237)
!3271 = !DILocation(line: 338, column: 25, scope: !3174)
!3272 = !DILocation(line: 338, column: 32, scope: !3174)
!3273 = !DILocation(line: 338, column: 5, scope: !3174)
!3274 = !DILocation(line: 340, column: 5, scope: !3174)
!3275 = !DILocation(line: 342, column: 13, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3169, file: !3, line: 342, column: 13)
!3277 = !DILocation(line: 342, column: 21, scope: !3276)
!3278 = !DILocation(line: 342, column: 26, scope: !3276)
!3279 = !DILocation(line: 342, column: 13, scope: !3169)
!3280 = !DILocalVariable(name: "data", scope: !3281, file: !3, line: 343, type: !3282)
!3281 = distinct !DILexicalBlock(scope: !3276, file: !3, line: 342, column: 52)
!3282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3283, size: 64)
!3283 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPivotConstraint", file: !31, line: 375, baseType: !3284)
!3284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPivotConstraint", file: !31, line: 360, size: 704, elements: !3285)
!3285 = !{!3286, !3287, !3288, !3289, !3290}
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !3284, file: !31, line: 364, baseType: !1008, size: 64)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !3284, file: !31, line: 365, baseType: !1062, size: 512, offset: 64)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3284, file: !31, line: 366, baseType: !1197, size: 96, offset: 576)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !3284, file: !31, line: 371, baseType: !1045, size: 16, offset: 672)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3284, file: !31, line: 374, baseType: !1045, size: 16, offset: 688)
!3291 = !DILocation(line: 343, column: 23, scope: !3281)
!3292 = !DILocation(line: 343, column: 30, scope: !3281)
!3293 = !DILocation(line: 343, column: 38, scope: !3281)
!3294 = !DILocation(line: 346, column: 9, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3281, file: !3, line: 346, column: 9)
!3296 = !DILocation(line: 346, column: 15, scope: !3295)
!3297 = !DILocation(line: 346, column: 19, scope: !3295)
!3298 = !DILocation(line: 346, column: 46, scope: !3295)
!3299 = !DILocation(line: 346, column: 52, scope: !3295)
!3300 = !DILocation(line: 346, column: 22, scope: !3295)
!3301 = !DILocation(line: 346, column: 57, scope: !3295)
!3302 = !DILocation(line: 346, column: 9, scope: !3281)
!3303 = !DILocation(line: 347, column: 6, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3295, file: !3, line: 346, column: 63)
!3305 = !DILocation(line: 347, column: 12, scope: !3304)
!3306 = !DILocation(line: 347, column: 16, scope: !3304)
!3307 = !DILocation(line: 348, column: 6, scope: !3304)
!3308 = !DILocation(line: 348, column: 14, scope: !3304)
!3309 = !DILocation(line: 348, column: 19, scope: !3304)
!3310 = !DILocation(line: 349, column: 5, scope: !3304)
!3311 = !DILocation(line: 350, column: 14, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3295, file: !3, line: 350, column: 14)
!3313 = !DILocation(line: 350, column: 20, scope: !3312)
!3314 = !DILocation(line: 350, column: 27, scope: !3312)
!3315 = !DILocation(line: 350, column: 24, scope: !3312)
!3316 = !DILocation(line: 350, column: 14, scope: !3295)
!3317 = !DILocation(line: 351, column: 64, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3319, file: !3, line: 351, column: 10)
!3319 = distinct !DILexicalBlock(scope: !3312, file: !3, line: 350, column: 34)
!3320 = !DILocation(line: 351, column: 39, scope: !3318)
!3321 = !DILocation(line: 351, column: 72, scope: !3318)
!3322 = !DILocation(line: 351, column: 78, scope: !3318)
!3323 = !DILocation(line: 351, column: 11, scope: !3318)
!3324 = !DILocation(line: 351, column: 10, scope: !3319)
!3325 = !DILocation(line: 352, column: 7, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 351, column: 90)
!3327 = !DILocation(line: 352, column: 15, scope: !3326)
!3328 = !DILocation(line: 352, column: 20, scope: !3326)
!3329 = !DILocation(line: 353, column: 6, scope: !3326)
!3330 = !DILocation(line: 354, column: 5, scope: !3319)
!3331 = !DILocation(line: 357, column: 5, scope: !3281)
!3332 = !DILocation(line: 359, column: 13, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3276, file: !3, line: 359, column: 13)
!3334 = !DILocation(line: 359, column: 21, scope: !3333)
!3335 = !DILocation(line: 359, column: 26, scope: !3333)
!3336 = !DILocation(line: 359, column: 13, scope: !3276)
!3337 = !DILocalVariable(name: "data", scope: !3338, file: !3, line: 360, type: !3339)
!3338 = distinct !DILexicalBlock(scope: !3333, file: !3, line: 359, column: 53)
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 64)
!3340 = !DIDerivedType(tag: DW_TAG_typedef, name: "bActionConstraint", file: !31, line: 253, baseType: !3341)
!3341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bActionConstraint", file: !31, line: 242, size: 832, elements: !3342)
!3342 = !{!3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352}
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !3341, file: !31, line: 243, baseType: !1008, size: 64)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3341, file: !31, line: 244, baseType: !1045, size: 16, offset: 64)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !3341, file: !31, line: 245, baseType: !1045, size: 16, offset: 80)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3341, file: !31, line: 246, baseType: !1047, size: 32, offset: 96)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3341, file: !31, line: 247, baseType: !1047, size: 32, offset: 128)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3341, file: !31, line: 248, baseType: !1127, size: 32, offset: 160)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3341, file: !31, line: 249, baseType: !1127, size: 32, offset: 192)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3341, file: !31, line: 250, baseType: !1047, size: 32, offset: 224)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !3341, file: !31, line: 251, baseType: !1181, size: 64, offset: 256)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !3341, file: !31, line: 252, baseType: !1062, size: 512, offset: 320)
!3353 = !DILocation(line: 360, column: 24, scope: !3338)
!3354 = !DILocation(line: 360, column: 31, scope: !3338)
!3355 = !DILocation(line: 360, column: 39, scope: !3338)
!3356 = !DILocation(line: 363, column: 9, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3338, file: !3, line: 363, column: 9)
!3358 = !DILocation(line: 363, column: 15, scope: !3357)
!3359 = !DILocation(line: 363, column: 19, scope: !3357)
!3360 = !DILocation(line: 363, column: 9, scope: !3338)
!3361 = !DILocation(line: 365, column: 6, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3357, file: !3, line: 363, column: 28)
!3363 = !DILocation(line: 365, column: 14, scope: !3362)
!3364 = !DILocation(line: 365, column: 19, scope: !3362)
!3365 = !DILocation(line: 366, column: 5, scope: !3362)
!3366 = !DILocation(line: 367, column: 14, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3357, file: !3, line: 367, column: 14)
!3368 = !DILocation(line: 367, column: 20, scope: !3367)
!3369 = !DILocation(line: 367, column: 25, scope: !3367)
!3370 = !DILocation(line: 367, column: 32, scope: !3367)
!3371 = !DILocation(line: 367, column: 14, scope: !3357)
!3372 = !DILocation(line: 369, column: 6, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3367, file: !3, line: 367, column: 42)
!3374 = !DILocation(line: 369, column: 12, scope: !3373)
!3375 = !DILocation(line: 369, column: 16, scope: !3373)
!3376 = !DILocation(line: 370, column: 6, scope: !3373)
!3377 = !DILocation(line: 370, column: 14, scope: !3373)
!3378 = !DILocation(line: 370, column: 19, scope: !3373)
!3379 = !DILocation(line: 371, column: 5, scope: !3373)
!3380 = !DILocation(line: 372, column: 4, scope: !3338)
!3381 = !DILocation(line: 373, column: 13, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3333, file: !3, line: 373, column: 13)
!3383 = !DILocation(line: 373, column: 21, scope: !3382)
!3384 = !DILocation(line: 373, column: 26, scope: !3382)
!3385 = !DILocation(line: 373, column: 13, scope: !3333)
!3386 = !DILocalVariable(name: "data", scope: !3387, file: !3, line: 374, type: !2654)
!3387 = distinct !DILexicalBlock(scope: !3382, file: !3, line: 373, column: 57)
!3388 = !DILocation(line: 374, column: 28, scope: !3387)
!3389 = !DILocation(line: 374, column: 35, scope: !3387)
!3390 = !DILocation(line: 374, column: 43, scope: !3387)
!3391 = !DILocation(line: 377, column: 9, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3387, file: !3, line: 377, column: 9)
!3393 = !DILocation(line: 377, column: 15, scope: !3392)
!3394 = !DILocation(line: 377, column: 25, scope: !3392)
!3395 = !DILocation(line: 377, column: 31, scope: !3392)
!3396 = !DILocation(line: 377, column: 22, scope: !3392)
!3397 = !DILocation(line: 377, column: 9, scope: !3387)
!3398 = !DILocation(line: 378, column: 6, scope: !3392)
!3399 = !DILocation(line: 378, column: 14, scope: !3392)
!3400 = !DILocation(line: 378, column: 19, scope: !3392)
!3401 = !DILocation(line: 379, column: 9, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3387, file: !3, line: 379, column: 9)
!3403 = !DILocation(line: 379, column: 15, scope: !3402)
!3404 = !DILocation(line: 379, column: 22, scope: !3402)
!3405 = !DILocation(line: 379, column: 29, scope: !3402)
!3406 = !DILocation(line: 379, column: 35, scope: !3402)
!3407 = !DILocation(line: 379, column: 26, scope: !3402)
!3408 = !DILocation(line: 379, column: 9, scope: !3387)
!3409 = !DILocation(line: 380, column: 6, scope: !3402)
!3410 = !DILocation(line: 380, column: 14, scope: !3402)
!3411 = !DILocation(line: 380, column: 19, scope: !3402)
!3412 = !DILocation(line: 381, column: 4, scope: !3387)
!3413 = !DILocation(line: 382, column: 13, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3382, file: !3, line: 382, column: 13)
!3415 = !DILocation(line: 382, column: 21, scope: !3414)
!3416 = !DILocation(line: 382, column: 26, scope: !3414)
!3417 = !DILocation(line: 382, column: 13, scope: !3382)
!3418 = !DILocalVariable(name: "data", scope: !3419, file: !3, line: 383, type: !3420)
!3419 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 382, column: 54)
!3420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3421, size: 64)
!3421 = !DIDerivedType(tag: DW_TAG_typedef, name: "bTrackToConstraint", file: !31, line: 192, baseType: !3422)
!3422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bTrackToConstraint", file: !31, line: 182, size: 704, elements: !3423)
!3423 = !{!3424, !3425, !3426, !3427, !3428, !3429}
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !3422, file: !31, line: 183, baseType: !1008, size: 64)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !3422, file: !31, line: 184, baseType: !1047, size: 32, offset: 64)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !3422, file: !31, line: 188, baseType: !1047, size: 32, offset: 96)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3422, file: !31, line: 189, baseType: !1047, size: 32, offset: 128)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3422, file: !31, line: 190, baseType: !1047, size: 32, offset: 160)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !3422, file: !31, line: 191, baseType: !1062, size: 512, offset: 192)
!3430 = !DILocation(line: 383, column: 25, scope: !3419)
!3431 = !DILocation(line: 383, column: 32, scope: !3419)
!3432 = !DILocation(line: 383, column: 40, scope: !3419)
!3433 = !DILocation(line: 386, column: 9, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3419, file: !3, line: 386, column: 9)
!3435 = !DILocation(line: 386, column: 15, scope: !3434)
!3436 = !DILocation(line: 386, column: 28, scope: !3434)
!3437 = !DILocation(line: 386, column: 34, scope: !3434)
!3438 = !DILocation(line: 386, column: 25, scope: !3434)
!3439 = !DILocation(line: 386, column: 9, scope: !3419)
!3440 = !DILocation(line: 387, column: 6, scope: !3434)
!3441 = !DILocation(line: 387, column: 14, scope: !3434)
!3442 = !DILocation(line: 387, column: 19, scope: !3434)
!3443 = !DILocation(line: 388, column: 9, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3419, file: !3, line: 388, column: 9)
!3445 = !DILocation(line: 388, column: 15, scope: !3444)
!3446 = !DILocation(line: 388, column: 25, scope: !3444)
!3447 = !DILocation(line: 388, column: 32, scope: !3444)
!3448 = !DILocation(line: 388, column: 38, scope: !3444)
!3449 = !DILocation(line: 388, column: 29, scope: !3444)
!3450 = !DILocation(line: 388, column: 9, scope: !3419)
!3451 = !DILocation(line: 389, column: 6, scope: !3444)
!3452 = !DILocation(line: 389, column: 14, scope: !3444)
!3453 = !DILocation(line: 389, column: 19, scope: !3444)
!3454 = !DILocation(line: 390, column: 4, scope: !3419)
!3455 = !DILocation(line: 391, column: 13, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 391, column: 13)
!3457 = !DILocation(line: 391, column: 21, scope: !3456)
!3458 = !DILocation(line: 391, column: 26, scope: !3456)
!3459 = !DILocation(line: 391, column: 13, scope: !3414)
!3460 = !DILocalVariable(name: "data", scope: !3461, file: !3, line: 392, type: !3462)
!3461 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 391, column: 56)
!3462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3463, size: 64)
!3463 = !DIDerivedType(tag: DW_TAG_typedef, name: "bLockTrackConstraint", file: !31, line: 261, baseType: !3464)
!3464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bLockTrackConstraint", file: !31, line: 256, size: 640, elements: !3465)
!3465 = !{!3466, !3467, !3468, !3469}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !3464, file: !31, line: 257, baseType: !1008, size: 64)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !3464, file: !31, line: 258, baseType: !1047, size: 32, offset: 64)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "lockflag", scope: !3464, file: !31, line: 259, baseType: !1047, size: 32, offset: 96)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !3464, file: !31, line: 260, baseType: !1062, size: 512, offset: 128)
!3470 = !DILocation(line: 392, column: 27, scope: !3461)
!3471 = !DILocation(line: 392, column: 34, scope: !3461)
!3472 = !DILocation(line: 392, column: 42, scope: !3461)
!3473 = !DILocation(line: 394, column: 9, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3461, file: !3, line: 394, column: 9)
!3475 = !DILocation(line: 394, column: 15, scope: !3474)
!3476 = !DILocation(line: 394, column: 27, scope: !3474)
!3477 = !DILocation(line: 394, column: 33, scope: !3474)
!3478 = !DILocation(line: 394, column: 24, scope: !3474)
!3479 = !DILocation(line: 394, column: 9, scope: !3461)
!3480 = !DILocation(line: 395, column: 6, scope: !3474)
!3481 = !DILocation(line: 395, column: 14, scope: !3474)
!3482 = !DILocation(line: 395, column: 19, scope: !3474)
!3483 = !DILocation(line: 396, column: 9, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3461, file: !3, line: 396, column: 9)
!3485 = !DILocation(line: 396, column: 15, scope: !3484)
!3486 = !DILocation(line: 396, column: 24, scope: !3484)
!3487 = !DILocation(line: 396, column: 31, scope: !3484)
!3488 = !DILocation(line: 396, column: 37, scope: !3484)
!3489 = !DILocation(line: 396, column: 28, scope: !3484)
!3490 = !DILocation(line: 396, column: 9, scope: !3461)
!3491 = !DILocation(line: 397, column: 6, scope: !3484)
!3492 = !DILocation(line: 397, column: 14, scope: !3484)
!3493 = !DILocation(line: 397, column: 19, scope: !3484)
!3494 = !DILocation(line: 398, column: 4, scope: !3461)
!3495 = !DILocation(line: 399, column: 13, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 399, column: 13)
!3497 = !DILocation(line: 399, column: 21, scope: !3496)
!3498 = !DILocation(line: 399, column: 26, scope: !3496)
!3499 = !DILocation(line: 399, column: 13, scope: !3456)
!3500 = !DILocalVariable(name: "data", scope: !3501, file: !3, line: 400, type: !3502)
!3501 = distinct !DILexicalBlock(scope: !3496, file: !3, line: 399, column: 55)
!3502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 64)
!3503 = !DIDerivedType(tag: DW_TAG_typedef, name: "bSplineIKConstraint", file: !31, line: 176, baseType: !3504)
!3504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bSplineIKConstraint", file: !31, line: 164, size: 192, elements: !3505)
!3505 = !{!3506, !3507, !3509, !3510, !3511, !3512}
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !3504, file: !31, line: 166, baseType: !1008, size: 64)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !3504, file: !31, line: 169, baseType: !3508, size: 64, offset: 64)
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "numpoints", scope: !3504, file: !31, line: 170, baseType: !1045, size: 16, offset: 128)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "chainlen", scope: !3504, file: !31, line: 171, baseType: !1045, size: 16, offset: 144)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3504, file: !31, line: 174, baseType: !1045, size: 16, offset: 160)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "xzScaleMode", scope: !3504, file: !31, line: 175, baseType: !1045, size: 16, offset: 176)
!3513 = !DILocation(line: 400, column: 26, scope: !3501)
!3514 = !DILocation(line: 400, column: 33, scope: !3501)
!3515 = !DILocation(line: 400, column: 41, scope: !3501)
!3516 = !DILocation(line: 405, column: 10, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3501, file: !3, line: 405, column: 9)
!3518 = !DILocation(line: 405, column: 16, scope: !3517)
!3519 = !DILocation(line: 405, column: 23, scope: !3517)
!3520 = !DILocation(line: 405, column: 32, scope: !3517)
!3521 = !DILocation(line: 405, column: 36, scope: !3517)
!3522 = !DILocation(line: 405, column: 42, scope: !3517)
!3523 = !DILocation(line: 405, column: 55, scope: !3517)
!3524 = !DILocation(line: 405, column: 61, scope: !3517)
!3525 = !DILocation(line: 405, column: 70, scope: !3517)
!3526 = !DILocation(line: 405, column: 52, scope: !3517)
!3527 = !DILocation(line: 405, column: 9, scope: !3501)
!3528 = !DILocation(line: 407, column: 10, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 407, column: 10)
!3530 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 405, column: 76)
!3531 = !DILocation(line: 407, column: 16, scope: !3529)
!3532 = !DILocation(line: 407, column: 10, scope: !3530)
!3533 = !DILocation(line: 408, column: 7, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3529, file: !3, line: 407, column: 24)
!3535 = !DILocation(line: 408, column: 17, scope: !3534)
!3536 = !DILocation(line: 408, column: 23, scope: !3534)
!3537 = !DILocation(line: 409, column: 7, scope: !3534)
!3538 = !DILocation(line: 409, column: 13, scope: !3534)
!3539 = !DILocation(line: 409, column: 20, scope: !3534)
!3540 = !DILocation(line: 410, column: 6, scope: !3534)
!3541 = !DILocation(line: 413, column: 6, scope: !3530)
!3542 = !DILocation(line: 413, column: 12, scope: !3530)
!3543 = !DILocation(line: 413, column: 17, scope: !3530)
!3544 = !DILocation(line: 414, column: 5, scope: !3530)
!3545 = !DILocation(line: 415, column: 4, scope: !3501)
!3546 = !DILocation(line: 416, column: 13, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3496, file: !3, line: 416, column: 13)
!3548 = !DILocation(line: 416, column: 21, scope: !3547)
!3549 = !DILocation(line: 416, column: 26, scope: !3547)
!3550 = !DILocation(line: 416, column: 13, scope: !3496)
!3551 = !DILocalVariable(name: "data", scope: !3552, file: !3, line: 417, type: !3553)
!3552 = distinct !DILexicalBlock(scope: !3547, file: !3, line: 416, column: 58)
!3553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3554, size: 64)
!3554 = !DIDerivedType(tag: DW_TAG_typedef, name: "bFollowTrackConstraint", file: !31, line: 438, baseType: !3555)
!3555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bFollowTrackConstraint", file: !31, line: 430, size: 1280, elements: !3556)
!3556 = !{!3557, !3558, !3559, !3560, !3561, !3562, !3563}
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !3555, file: !31, line: 431, baseType: !1628, size: 64)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !3555, file: !31, line: 432, baseType: !1062, size: 512, offset: 64)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3555, file: !31, line: 433, baseType: !1047, size: 32, offset: 576)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "frame_method", scope: !3555, file: !31, line: 434, baseType: !1047, size: 32, offset: 608)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3555, file: !31, line: 435, baseType: !1062, size: 512, offset: 640)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !3555, file: !31, line: 436, baseType: !1008, size: 64, offset: 1152)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "depth_ob", scope: !3555, file: !31, line: 437, baseType: !1008, size: 64, offset: 1216)
!3564 = !DILocation(line: 417, column: 29, scope: !3552)
!3565 = !DILocation(line: 417, column: 36, scope: !3552)
!3566 = !DILocation(line: 417, column: 44, scope: !3552)
!3567 = !DILocation(line: 419, column: 10, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3552, file: !3, line: 419, column: 9)
!3569 = !DILocation(line: 419, column: 16, scope: !3568)
!3570 = !DILocation(line: 419, column: 21, scope: !3568)
!3571 = !DILocation(line: 419, column: 48, scope: !3568)
!3572 = !DILocation(line: 419, column: 9, scope: !3552)
!3573 = !DILocation(line: 420, column: 10, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !3, line: 420, column: 10)
!3575 = distinct !DILexicalBlock(scope: !3568, file: !3, line: 419, column: 54)
!3576 = !DILocation(line: 420, column: 16, scope: !3574)
!3577 = !DILocation(line: 420, column: 21, scope: !3574)
!3578 = !DILocation(line: 420, column: 29, scope: !3574)
!3579 = !DILocation(line: 420, column: 32, scope: !3574)
!3580 = !DILocation(line: 420, column: 38, scope: !3574)
!3581 = !DILocation(line: 420, column: 10, scope: !3575)
!3582 = !DILocalVariable(name: "tracking", scope: !3583, file: !3, line: 421, type: !3584)
!3583 = distinct !DILexicalBlock(scope: !3574, file: !3, line: 420, column: 48)
!3584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3585, size: 64)
!3585 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTracking", file: !1648, line: 356, baseType: !1647)
!3586 = !DILocation(line: 421, column: 22, scope: !3583)
!3587 = !DILocation(line: 421, column: 34, scope: !3583)
!3588 = !DILocation(line: 421, column: 40, scope: !3583)
!3589 = !DILocation(line: 421, column: 46, scope: !3583)
!3590 = !DILocalVariable(name: "tracking_object", scope: !3583, file: !3, line: 422, type: !3591)
!3591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3592, size: 64)
!3592 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingObject", file: !1648, line: 293, baseType: !3593)
!3593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingObject", file: !1648, line: 280, size: 1216, elements: !3594)
!3594 = !{!3595, !3597, !3598, !3599, !3600, !3601, !3602, !3603, !3604, !3605}
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3593, file: !1648, line: 281, baseType: !3596, size: 64)
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3593, size: 64)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3593, file: !1648, line: 281, baseType: !3596, size: 64, offset: 64)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3593, file: !1648, line: 283, baseType: !1062, size: 512, offset: 128)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3593, file: !1648, line: 284, baseType: !1047, size: 32, offset: 640)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !3593, file: !1648, line: 285, baseType: !1127, size: 32, offset: 672)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !3593, file: !1648, line: 287, baseType: !1072, size: 128, offset: 704)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !3593, file: !1648, line: 288, baseType: !1072, size: 128, offset: 832)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !3593, file: !1648, line: 289, baseType: !1699, size: 192, offset: 960)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !3593, file: !1648, line: 292, baseType: !1047, size: 32, offset: 1152)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !3593, file: !1648, line: 292, baseType: !1047, size: 32, offset: 1184)
!3606 = !DILocation(line: 422, column: 28, scope: !3583)
!3607 = !DILocation(line: 424, column: 11, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3583, file: !3, line: 424, column: 11)
!3609 = !DILocation(line: 424, column: 17, scope: !3608)
!3610 = !DILocation(line: 424, column: 11, scope: !3583)
!3611 = !DILocation(line: 425, column: 56, scope: !3608)
!3612 = !DILocation(line: 425, column: 66, scope: !3608)
!3613 = !DILocation(line: 425, column: 72, scope: !3608)
!3614 = !DILocation(line: 425, column: 26, scope: !3608)
!3615 = !DILocation(line: 425, column: 24, scope: !3608)
!3616 = !DILocation(line: 425, column: 8, scope: !3608)
!3617 = !DILocation(line: 427, column: 57, scope: !3608)
!3618 = !DILocation(line: 427, column: 26, scope: !3608)
!3619 = !DILocation(line: 427, column: 24, scope: !3608)
!3620 = !DILocation(line: 429, column: 12, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3583, file: !3, line: 429, column: 11)
!3622 = !DILocation(line: 429, column: 11, scope: !3583)
!3623 = !DILocation(line: 430, column: 8, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3621, file: !3, line: 429, column: 29)
!3625 = !DILocation(line: 430, column: 16, scope: !3624)
!3626 = !DILocation(line: 430, column: 21, scope: !3624)
!3627 = !DILocation(line: 431, column: 7, scope: !3624)
!3628 = !DILocation(line: 433, column: 42, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3630, file: !3, line: 433, column: 12)
!3630 = distinct !DILexicalBlock(scope: !3621, file: !3, line: 432, column: 12)
!3631 = !DILocation(line: 433, column: 52, scope: !3629)
!3632 = !DILocation(line: 433, column: 69, scope: !3629)
!3633 = !DILocation(line: 433, column: 75, scope: !3629)
!3634 = !DILocation(line: 433, column: 13, scope: !3629)
!3635 = !DILocation(line: 433, column: 12, scope: !3630)
!3636 = !DILocation(line: 434, column: 9, scope: !3629)
!3637 = !DILocation(line: 434, column: 17, scope: !3629)
!3638 = !DILocation(line: 434, column: 22, scope: !3629)
!3639 = !DILocation(line: 436, column: 6, scope: !3583)
!3640 = !DILocation(line: 438, column: 7, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3574, file: !3, line: 437, column: 11)
!3642 = !DILocation(line: 438, column: 15, scope: !3641)
!3643 = !DILocation(line: 438, column: 20, scope: !3641)
!3644 = !DILocation(line: 440, column: 5, scope: !3575)
!3645 = !DILocation(line: 441, column: 4, scope: !3552)
!3646 = !DILocation(line: 442, column: 13, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3547, file: !3, line: 442, column: 13)
!3648 = !DILocation(line: 442, column: 21, scope: !3647)
!3649 = !DILocation(line: 442, column: 26, scope: !3647)
!3650 = !DILocation(line: 442, column: 13, scope: !3547)
!3651 = !DILocalVariable(name: "data", scope: !3652, file: !3, line: 443, type: !3653)
!3652 = distinct !DILexicalBlock(scope: !3647, file: !3, line: 442, column: 59)
!3653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3654, size: 64)
!3654 = !DIDerivedType(tag: DW_TAG_typedef, name: "bCameraSolverConstraint", file: !31, line: 444, baseType: !3655)
!3655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bCameraSolverConstraint", file: !31, line: 441, size: 128, elements: !3656)
!3656 = !{!3657, !3658, !3659}
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !3655, file: !31, line: 442, baseType: !1628, size: 64)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3655, file: !31, line: 443, baseType: !1047, size: 32, offset: 64)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3655, file: !31, line: 443, baseType: !1047, size: 32, offset: 96)
!3660 = !DILocation(line: 443, column: 30, scope: !3652)
!3661 = !DILocation(line: 443, column: 37, scope: !3652)
!3662 = !DILocation(line: 443, column: 45, scope: !3652)
!3663 = !DILocation(line: 445, column: 10, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3652, file: !3, line: 445, column: 9)
!3665 = !DILocation(line: 445, column: 16, scope: !3664)
!3666 = !DILocation(line: 445, column: 21, scope: !3664)
!3667 = !DILocation(line: 445, column: 48, scope: !3664)
!3668 = !DILocation(line: 445, column: 53, scope: !3664)
!3669 = !DILocation(line: 445, column: 57, scope: !3664)
!3670 = !DILocation(line: 445, column: 63, scope: !3664)
!3671 = !DILocation(line: 445, column: 68, scope: !3664)
!3672 = !DILocation(line: 445, column: 9, scope: !3652)
!3673 = !DILocation(line: 446, column: 6, scope: !3664)
!3674 = !DILocation(line: 446, column: 14, scope: !3664)
!3675 = !DILocation(line: 446, column: 19, scope: !3664)
!3676 = !DILocation(line: 447, column: 4, scope: !3652)
!3677 = !DILocation(line: 448, column: 13, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3647, file: !3, line: 448, column: 13)
!3679 = !DILocation(line: 448, column: 21, scope: !3678)
!3680 = !DILocation(line: 448, column: 26, scope: !3678)
!3681 = !DILocation(line: 448, column: 13, scope: !3647)
!3682 = !DILocalVariable(name: "data", scope: !3683, file: !3, line: 449, type: !2768)
!3683 = distinct !DILexicalBlock(scope: !3678, file: !3, line: 448, column: 59)
!3684 = !DILocation(line: 449, column: 30, scope: !3683)
!3685 = !DILocation(line: 449, column: 37, scope: !3683)
!3686 = !DILocation(line: 449, column: 45, scope: !3683)
!3687 = !DILocation(line: 451, column: 10, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3683, file: !3, line: 451, column: 9)
!3689 = !DILocation(line: 451, column: 16, scope: !3688)
!3690 = !DILocation(line: 451, column: 21, scope: !3688)
!3691 = !DILocation(line: 451, column: 48, scope: !3688)
!3692 = !DILocation(line: 451, column: 53, scope: !3688)
!3693 = !DILocation(line: 451, column: 57, scope: !3688)
!3694 = !DILocation(line: 451, column: 63, scope: !3688)
!3695 = !DILocation(line: 451, column: 68, scope: !3688)
!3696 = !DILocation(line: 451, column: 9, scope: !3683)
!3697 = !DILocation(line: 452, column: 6, scope: !3688)
!3698 = !DILocation(line: 452, column: 14, scope: !3688)
!3699 = !DILocation(line: 452, column: 19, scope: !3688)
!3700 = !DILocation(line: 453, column: 4, scope: !3683)
!3701 = !DILocation(line: 456, column: 8, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3090, file: !3, line: 456, column: 8)
!3703 = !DILocation(line: 456, column: 12, scope: !3702)
!3704 = !DILocation(line: 456, column: 15, scope: !3702)
!3705 = !DILocation(line: 456, column: 20, scope: !3702)
!3706 = !DILocation(line: 456, column: 8, scope: !3090)
!3707 = !DILocation(line: 457, column: 5, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3702, file: !3, line: 456, column: 44)
!3709 = !DILocation(line: 457, column: 10, scope: !3708)
!3710 = !DILocation(line: 457, column: 33, scope: !3708)
!3711 = !DILocation(line: 460, column: 23, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 460, column: 5)
!3713 = !DILocation(line: 460, column: 15, scope: !3712)
!3714 = !DILocation(line: 460, column: 13, scope: !3712)
!3715 = !DILocation(line: 460, column: 10, scope: !3712)
!3716 = !DILocation(line: 460, column: 30, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3712, file: !3, line: 460, column: 5)
!3718 = !DILocation(line: 460, column: 5, scope: !3712)
!3719 = !DILocation(line: 462, column: 34, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3721, file: !3, line: 462, column: 10)
!3721 = distinct !DILexicalBlock(scope: !3717, file: !3, line: 460, column: 49)
!3722 = !DILocation(line: 462, column: 38, scope: !3720)
!3723 = !DILocation(line: 462, column: 10, scope: !3720)
!3724 = !DILocation(line: 462, column: 43, scope: !3720)
!3725 = !DILocation(line: 462, column: 10, scope: !3721)
!3726 = !DILocation(line: 464, column: 7, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3720, file: !3, line: 462, column: 49)
!3728 = !DILocation(line: 464, column: 11, scope: !3727)
!3729 = !DILocation(line: 464, column: 15, scope: !3727)
!3730 = !DILocation(line: 465, column: 7, scope: !3727)
!3731 = !DILocation(line: 465, column: 15, scope: !3727)
!3732 = !DILocation(line: 465, column: 20, scope: !3727)
!3733 = !DILocation(line: 466, column: 6, scope: !3727)
!3734 = !DILocation(line: 467, column: 15, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3720, file: !3, line: 467, column: 15)
!3736 = !DILocation(line: 467, column: 19, scope: !3735)
!3737 = !DILocation(line: 467, column: 26, scope: !3735)
!3738 = !DILocation(line: 467, column: 23, scope: !3735)
!3739 = !DILocation(line: 467, column: 15, scope: !3720)
!3740 = !DILocation(line: 468, column: 11, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3742, file: !3, line: 468, column: 11)
!3742 = distinct !DILexicalBlock(scope: !3735, file: !3, line: 467, column: 33)
!3743 = !DILocation(line: 468, column: 16, scope: !3741)
!3744 = !DILocation(line: 468, column: 11, scope: !3742)
!3745 = !DILocation(line: 469, column: 66, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3747, file: !3, line: 469, column: 12)
!3747 = distinct !DILexicalBlock(scope: !3741, file: !3, line: 468, column: 43)
!3748 = !DILocation(line: 469, column: 41, scope: !3746)
!3749 = !DILocation(line: 469, column: 74, scope: !3746)
!3750 = !DILocation(line: 469, column: 78, scope: !3746)
!3751 = !DILocation(line: 469, column: 13, scope: !3746)
!3752 = !DILocation(line: 469, column: 12, scope: !3747)
!3753 = !DILocation(line: 472, column: 9, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 469, column: 90)
!3755 = !DILocation(line: 472, column: 17, scope: !3754)
!3756 = !DILocation(line: 472, column: 22, scope: !3754)
!3757 = !DILocation(line: 473, column: 8, scope: !3754)
!3758 = !DILocation(line: 474, column: 24, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 474, column: 17)
!3760 = !DILocation(line: 474, column: 31, scope: !3759)
!3761 = !DILocation(line: 474, column: 37, scope: !3759)
!3762 = !DILocation(line: 474, column: 41, scope: !3759)
!3763 = !DILocation(line: 474, column: 17, scope: !3759)
!3764 = !DILocation(line: 474, column: 52, scope: !3759)
!3765 = !DILocation(line: 474, column: 17, scope: !3746)
!3766 = !DILocation(line: 476, column: 9, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3759, file: !3, line: 474, column: 58)
!3768 = !DILocation(line: 476, column: 13, scope: !3767)
!3769 = !DILocation(line: 476, column: 26, scope: !3767)
!3770 = !DILocation(line: 477, column: 9, scope: !3767)
!3771 = !DILocation(line: 477, column: 17, scope: !3767)
!3772 = !DILocation(line: 477, column: 22, scope: !3767)
!3773 = !DILocation(line: 478, column: 8, scope: !3767)
!3774 = !DILocation(line: 479, column: 7, scope: !3747)
!3775 = !DILocation(line: 482, column: 8, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3741, file: !3, line: 480, column: 12)
!3777 = !DILocation(line: 482, column: 12, scope: !3776)
!3778 = !DILocation(line: 482, column: 16, scope: !3776)
!3779 = !DILocation(line: 483, column: 8, scope: !3776)
!3780 = !DILocation(line: 483, column: 16, scope: !3776)
!3781 = !DILocation(line: 483, column: 21, scope: !3776)
!3782 = !DILocation(line: 485, column: 6, scope: !3742)
!3783 = !DILocation(line: 488, column: 10, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3721, file: !3, line: 488, column: 10)
!3785 = !DILocation(line: 488, column: 10, scope: !3721)
!3786 = !DILocation(line: 489, column: 11, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3788, file: !3, line: 489, column: 11)
!3788 = distinct !DILexicalBlock(scope: !3784, file: !3, line: 488, column: 109)
!3789 = !DILocation(line: 489, column: 15, scope: !3787)
!3790 = !DILocation(line: 489, column: 11, scope: !3788)
!3791 = !DILocation(line: 490, column: 12, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 490, column: 12)
!3793 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 489, column: 20)
!3794 = !DILocation(line: 490, column: 16, scope: !3792)
!3795 = !DILocation(line: 490, column: 21, scope: !3792)
!3796 = !DILocation(line: 490, column: 26, scope: !3792)
!3797 = !DILocation(line: 490, column: 12, scope: !3793)
!3798 = !DILocation(line: 491, column: 9, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 490, column: 39)
!3800 = !DILocation(line: 491, column: 13, scope: !3799)
!3801 = !DILocation(line: 491, column: 17, scope: !3799)
!3802 = !DILocation(line: 492, column: 9, scope: !3799)
!3803 = !DILocation(line: 492, column: 17, scope: !3799)
!3804 = !DILocation(line: 492, column: 22, scope: !3799)
!3805 = !DILocation(line: 493, column: 8, scope: !3799)
!3806 = !DILocalVariable(name: "cu", scope: !3807, file: !3, line: 495, type: !2664)
!3807 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 494, column: 13)
!3808 = !DILocation(line: 495, column: 16, scope: !3807)
!3809 = !DILocation(line: 495, column: 21, scope: !3807)
!3810 = !DILocation(line: 495, column: 25, scope: !3807)
!3811 = !DILocation(line: 495, column: 30, scope: !3807)
!3812 = !DILocation(line: 498, column: 9, scope: !3807)
!3813 = !DILocation(line: 498, column: 13, scope: !3807)
!3814 = !DILocation(line: 498, column: 18, scope: !3807)
!3815 = !DILocation(line: 500, column: 7, scope: !3793)
!3816 = !DILocation(line: 501, column: 6, scope: !3788)
!3817 = !DILocation(line: 502, column: 5, scope: !3721)
!3818 = !DILocation(line: 460, column: 39, scope: !3717)
!3819 = !DILocation(line: 460, column: 43, scope: !3717)
!3820 = !DILocation(line: 460, column: 37, scope: !3717)
!3821 = !DILocation(line: 460, column: 5, scope: !3717)
!3822 = distinct !{!3822, !3718, !3823}
!3823 = !DILocation(line: 502, column: 5, scope: !3712)
!3824 = !DILocation(line: 505, column: 9, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 505, column: 9)
!3826 = !DILocation(line: 505, column: 14, scope: !3825)
!3827 = !DILocation(line: 505, column: 9, scope: !3708)
!3828 = !DILocation(line: 506, column: 6, scope: !3825)
!3829 = !DILocation(line: 506, column: 11, scope: !3825)
!3830 = !DILocation(line: 506, column: 36, scope: !3825)
!3831 = !DILocation(line: 507, column: 4, scope: !3708)
!3832 = !DILocation(line: 508, column: 3, scope: !3090)
!3833 = !DILocation(line: 300, column: 50, scope: !3087)
!3834 = !DILocation(line: 300, column: 58, scope: !3087)
!3835 = !DILocation(line: 300, column: 48, scope: !3087)
!3836 = !DILocation(line: 300, column: 3, scope: !3087)
!3837 = distinct !{!3837, !3088, !3838}
!3838 = !DILocation(line: 508, column: 3, scope: !3081)
!3839 = !DILocation(line: 509, column: 2, scope: !3082)
!3840 = !DILocation(line: 510, column: 1, scope: !3034)
!3841 = distinct !DISubprogram(name: "CONSTRAINT_OT_stretchto_reset", scope: !3, file: !3, line: 669, type: !3842, scopeLine: 670, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!3842 = !DISubroutineType(types: !3843)
!3843 = !{null, !3844}
!3844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3845, size: 64)
!3845 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !3846, line: 568, baseType: !3847)
!3846 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !3846, line: 508, size: 1536, elements: !3848)
!3848 = !{!3849, !3850, !3851, !3852, !3853, !4028, !4032, !4038, !4042, !4043, !4047, !4048, !4049, !4050, !4054, !4055, !4070, !4071, !4075, !4101}
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3847, file: !3846, line: 509, baseType: !2785, size: 64)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3847, file: !3846, line: 510, baseType: !2785, size: 64, offset: 64)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !3847, file: !3846, line: 511, baseType: !2785, size: 64, offset: 128)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3847, file: !3846, line: 512, baseType: !2785, size: 64, offset: 192)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !3847, file: !3846, line: 518, baseType: !3854, size: 64, offset: 256)
!3854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3855, size: 64)
!3855 = !DISubroutineType(types: !3856)
!3856 = !{!1047, !3857, !3859}
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3858, size: 64)
!3858 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !1453, line: 44, flags: DIFlagFwdDecl)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !105, line: 328, size: 1344, elements: !3861)
!3861 = !{!3862, !3863, !3864, !3865, !3866, !3868, !3869, !3870, !3880, !4021, !4022, !4023, !4026, !4027}
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3860, file: !105, line: 329, baseType: !3859, size: 64)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3860, file: !105, line: 329, baseType: !3859, size: 64, offset: 64)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3860, file: !105, line: 332, baseType: !1062, size: 512, offset: 128)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3860, file: !105, line: 333, baseType: !1051, size: 64, offset: 640)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3860, file: !105, line: 336, baseType: !3867, size: 64, offset: 704)
!3867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3847, size: 64)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3860, file: !105, line: 337, baseType: !1002, size: 64, offset: 768)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !3860, file: !105, line: 338, baseType: !1002, size: 64, offset: 832)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3860, file: !105, line: 340, baseType: !3871, size: 64, offset: 896)
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64)
!3872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !1453, line: 55, size: 192, elements: !3873)
!3873 = !{!3874, !3878, !3879}
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3872, file: !1453, line: 58, baseType: !3875, size: 64)
!3875 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3872, file: !1453, line: 56, size: 64, elements: !3876)
!3876 = !{!3877}
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3875, file: !1453, line: 57, baseType: !1002, size: 64)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3872, file: !1453, line: 60, baseType: !1451, size: 64, offset: 64)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3872, file: !1453, line: 61, baseType: !1002, size: 64, offset: 128)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !3860, file: !105, line: 341, baseType: !3881, size: 64, offset: 960)
!3881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3882, size: 64)
!3882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !105, line: 106, size: 320, elements: !3883)
!3883 = !{!3884, !3885, !3886, !3887, !3888, !3889}
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3882, file: !105, line: 107, baseType: !1072, size: 128)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !3882, file: !105, line: 108, baseType: !1047, size: 32, offset: 128)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !3882, file: !105, line: 109, baseType: !1047, size: 32, offset: 160)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3882, file: !105, line: 110, baseType: !1047, size: 32, offset: 192)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3882, file: !105, line: 110, baseType: !1047, size: 32, offset: 224)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !3882, file: !105, line: 111, baseType: !3890, size: 64, offset: 256)
!3890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3891, size: 64)
!3891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !3846, line: 490, size: 768, elements: !3892)
!3892 = !{!3893, !3894, !3895, !4012, !4013, !4014, !4015, !4016, !4017, !4018, !4019, !4020}
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3891, file: !3846, line: 491, baseType: !3890, size: 64)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3891, file: !3846, line: 491, baseType: !3890, size: 64, offset: 64)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !3891, file: !3846, line: 493, baseType: !3896, size: 64, offset: 128)
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3897, size: 64)
!3897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !105, line: 169, size: 2048, elements: !3898)
!3898 = !{!3899, !3900, !3901, !3902, !3930, !3931, !3932, !3933, !3934, !3935, !3936, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3987, !3990, !4004, !4005, !4006, !4007, !4008, !4009, !4010, !4011}
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3897, file: !105, line: 170, baseType: !3896, size: 64)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3897, file: !105, line: 170, baseType: !3896, size: 64, offset: 64)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !3897, file: !105, line: 172, baseType: !1002, size: 64, offset: 128)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !3897, file: !105, line: 174, baseType: !3903, size: 64, offset: 192)
!3903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3904, size: 64)
!3904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !3905, line: 49, size: 1984, elements: !3906)
!3905 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3906 = !{!3907, !3908, !3909, !3910, !3911, !3912, !3913, !3914, !3915, !3916, !3917, !3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3929}
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3904, file: !3905, line: 50, baseType: !1012, size: 960)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !3904, file: !3905, line: 52, baseType: !1072, size: 128, offset: 960)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !3904, file: !3905, line: 53, baseType: !1072, size: 128, offset: 1088)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !3904, file: !3905, line: 54, baseType: !1072, size: 128, offset: 1216)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3904, file: !3905, line: 55, baseType: !1072, size: 128, offset: 1344)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3904, file: !3905, line: 57, baseType: !1401, size: 64, offset: 1472)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !3904, file: !3905, line: 58, baseType: !1401, size: 64, offset: 1536)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !3904, file: !3905, line: 60, baseType: !1047, size: 32, offset: 1600)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3904, file: !3905, line: 61, baseType: !1047, size: 32, offset: 1632)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3904, file: !3905, line: 63, baseType: !1045, size: 16, offset: 1664)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !3904, file: !3905, line: 64, baseType: !1045, size: 16, offset: 1680)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !3904, file: !3905, line: 65, baseType: !1045, size: 16, offset: 1696)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !3904, file: !3905, line: 66, baseType: !1045, size: 16, offset: 1712)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !3904, file: !3905, line: 67, baseType: !1045, size: 16, offset: 1728)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !3904, file: !3905, line: 68, baseType: !1045, size: 16, offset: 1744)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !3904, file: !3905, line: 69, baseType: !1045, size: 16, offset: 1760)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !3904, file: !3905, line: 70, baseType: !1045, size: 16, offset: 1776)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !3904, file: !3905, line: 71, baseType: !1045, size: 16, offset: 1792)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !3904, file: !3905, line: 73, baseType: !1045, size: 16, offset: 1808)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !3904, file: !3905, line: 74, baseType: !1045, size: 16, offset: 1824)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3904, file: !3905, line: 76, baseType: !1045, size: 16, offset: 1840)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !3904, file: !3905, line: 78, baseType: !3890, size: 64, offset: 1856)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !3904, file: !3905, line: 79, baseType: !1002, size: 64, offset: 1920)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !3897, file: !105, line: 175, baseType: !3903, size: 64, offset: 256)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !3897, file: !105, line: 176, baseType: !1062, size: 512, offset: 320)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !3897, file: !105, line: 178, baseType: !1045, size: 16, offset: 832)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !3897, file: !105, line: 178, baseType: !1045, size: 16, offset: 848)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !3897, file: !105, line: 178, baseType: !1045, size: 16, offset: 864)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !3897, file: !105, line: 178, baseType: !1045, size: 16, offset: 880)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !3897, file: !105, line: 179, baseType: !1045, size: 16, offset: 896)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !3897, file: !105, line: 180, baseType: !1045, size: 16, offset: 912)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3897, file: !105, line: 181, baseType: !1045, size: 16, offset: 928)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !3897, file: !105, line: 182, baseType: !1045, size: 16, offset: 944)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !3897, file: !105, line: 183, baseType: !1045, size: 16, offset: 960)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !3897, file: !105, line: 184, baseType: !1045, size: 16, offset: 976)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !3897, file: !105, line: 185, baseType: !1045, size: 16, offset: 992)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !3897, file: !105, line: 186, baseType: !1045, size: 16, offset: 1008)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !3897, file: !105, line: 188, baseType: !1047, size: 32, offset: 1024)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !3897, file: !105, line: 190, baseType: !1045, size: 16, offset: 1056)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !3897, file: !105, line: 191, baseType: !1045, size: 16, offset: 1072)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !3897, file: !105, line: 194, baseType: !3948, size: 64, offset: 1088)
!3948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3949, size: 64)
!3949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !3846, line: 421, size: 960, elements: !3950)
!3950 = !{!3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963, !3964, !3965, !3966, !3967, !3968, !3969, !3970, !3971, !3972, !3973, !3974, !3975, !3983, !3984, !3985, !3986}
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3949, file: !3846, line: 422, baseType: !3948, size: 64)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3949, file: !3846, line: 422, baseType: !3948, size: 64, offset: 64)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3949, file: !3846, line: 424, baseType: !1045, size: 16, offset: 128)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3949, file: !3846, line: 425, baseType: !1045, size: 16, offset: 144)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3949, file: !3846, line: 426, baseType: !1047, size: 32, offset: 160)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3949, file: !3846, line: 426, baseType: !1047, size: 32, offset: 192)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !3949, file: !3846, line: 427, baseType: !1638, size: 64, offset: 224)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !3949, file: !3846, line: 428, baseType: !2179, size: 48, offset: 288)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !3949, file: !3846, line: 431, baseType: !1032, size: 8, offset: 336)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3949, file: !3846, line: 432, baseType: !1032, size: 8, offset: 344)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !3949, file: !3846, line: 435, baseType: !1045, size: 16, offset: 352)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !3949, file: !3846, line: 436, baseType: !1045, size: 16, offset: 368)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !3949, file: !3846, line: 437, baseType: !1047, size: 32, offset: 384)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !3949, file: !3846, line: 437, baseType: !1047, size: 32, offset: 416)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !3949, file: !3846, line: 438, baseType: !2450, size: 64, offset: 448)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !3949, file: !3846, line: 439, baseType: !1047, size: 32, offset: 512)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !3949, file: !3846, line: 439, baseType: !1047, size: 32, offset: 544)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !3949, file: !3846, line: 442, baseType: !1045, size: 16, offset: 576)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !3949, file: !3846, line: 442, baseType: !1045, size: 16, offset: 592)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !3949, file: !3846, line: 442, baseType: !1045, size: 16, offset: 608)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !3949, file: !3846, line: 442, baseType: !1045, size: 16, offset: 624)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !3949, file: !3846, line: 443, baseType: !1045, size: 16, offset: 640)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !3949, file: !3846, line: 446, baseType: !1045, size: 16, offset: 656)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !3949, file: !3846, line: 449, baseType: !2785, size: 64, offset: 704)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !3949, file: !3846, line: 452, baseType: !3976, size: 64, offset: 768)
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 64)
!3977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !3846, line: 463, size: 128, elements: !3978)
!3978 = !{!3979, !3980, !3981, !3982}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !3977, file: !3846, line: 464, baseType: !1047, size: 32)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !3977, file: !3846, line: 465, baseType: !1127, size: 32, offset: 32)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !3977, file: !3846, line: 466, baseType: !1127, size: 32, offset: 64)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !3977, file: !3846, line: 467, baseType: !1127, size: 32, offset: 96)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !3949, file: !3846, line: 455, baseType: !1045, size: 16, offset: 832)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !3949, file: !3846, line: 456, baseType: !1045, size: 16, offset: 848)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3949, file: !3846, line: 457, baseType: !1047, size: 32, offset: 864)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3949, file: !3846, line: 458, baseType: !1002, size: 64, offset: 896)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !3897, file: !105, line: 196, baseType: !3988, size: 64, offset: 1152)
!3988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3989, size: 64)
!3989 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !105, line: 55, flags: DIFlagFwdDecl)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !3897, file: !105, line: 198, baseType: !3991, size: 64, offset: 1216)
!3991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3992, size: 64)
!3992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !3846, line: 398, size: 448, elements: !3993)
!3993 = !{!3994, !3995, !3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3992, file: !3846, line: 399, baseType: !3991, size: 64)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3992, file: !3846, line: 399, baseType: !3991, size: 64, offset: 64)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !3992, file: !3846, line: 400, baseType: !1047, size: 32, offset: 128)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3992, file: !3846, line: 401, baseType: !1047, size: 32, offset: 160)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3992, file: !3846, line: 402, baseType: !1047, size: 32, offset: 192)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !3992, file: !3846, line: 403, baseType: !1047, size: 32, offset: 224)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !3992, file: !3846, line: 404, baseType: !1047, size: 32, offset: 256)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3992, file: !3846, line: 405, baseType: !1047, size: 32, offset: 288)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3992, file: !3846, line: 407, baseType: !1002, size: 64, offset: 320)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !3992, file: !3846, line: 414, baseType: !1002, size: 64, offset: 384)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !3897, file: !105, line: 200, baseType: !1047, size: 32, offset: 1280)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !3897, file: !105, line: 200, baseType: !1047, size: 32, offset: 1312)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !3897, file: !105, line: 201, baseType: !1002, size: 64, offset: 1344)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3897, file: !105, line: 203, baseType: !1072, size: 128, offset: 1408)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3897, file: !105, line: 204, baseType: !1072, size: 128, offset: 1536)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !3897, file: !105, line: 205, baseType: !1072, size: 128, offset: 1664)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !3897, file: !105, line: 207, baseType: !1072, size: 128, offset: 1792)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !3897, file: !105, line: 208, baseType: !1072, size: 128, offset: 1920)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !3891, file: !3846, line: 495, baseType: !2450, size: 64, offset: 192)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !3891, file: !3846, line: 496, baseType: !1047, size: 32, offset: 256)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3891, file: !3846, line: 497, baseType: !1002, size: 64, offset: 320)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3891, file: !3846, line: 499, baseType: !2450, size: 64, offset: 384)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3891, file: !3846, line: 500, baseType: !2450, size: 64, offset: 448)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !3891, file: !3846, line: 502, baseType: !2450, size: 64, offset: 512)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !3891, file: !3846, line: 503, baseType: !2450, size: 64, offset: 576)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3891, file: !3846, line: 504, baseType: !2450, size: 64, offset: 640)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !3891, file: !3846, line: 505, baseType: !1047, size: 32, offset: 704)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3860, file: !105, line: 343, baseType: !1072, size: 128, offset: 1024)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !3860, file: !105, line: 344, baseType: !3859, size: 64, offset: 1152)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !3860, file: !105, line: 345, baseType: !4024, size: 64, offset: 1216)
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4025, size: 64)
!4025 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !105, line: 61, flags: DIFlagFwdDecl)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3860, file: !105, line: 346, baseType: !1045, size: 16, offset: 1280)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3860, file: !105, line: 346, baseType: !2523, size: 48, offset: 1296)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3847, file: !3846, line: 524, baseType: !4029, size: 64, offset: 320)
!4029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4030, size: 64)
!4030 = !DISubroutineType(types: !4031)
!4031 = !{!1963, !3857, !3859}
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !3847, file: !3846, line: 530, baseType: !4033, size: 64, offset: 384)
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 64)
!4034 = !DISubroutineType(types: !4035)
!4035 = !{!1047, !3857, !3859, !4036}
!4036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4037, size: 64)
!4037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3949)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !3847, file: !3846, line: 531, baseType: !4039, size: 64, offset: 448)
!4039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4040, size: 64)
!4040 = !DISubroutineType(types: !4041)
!4041 = !{null, !3857, !3859}
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !3847, file: !3846, line: 532, baseType: !4033, size: 64, offset: 512)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3847, file: !3846, line: 536, baseType: !4044, size: 64, offset: 576)
!4044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4045, size: 64)
!4045 = !DISubroutineType(types: !4046)
!4046 = !{!1047, !3857}
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !3847, file: !3846, line: 539, baseType: !4039, size: 64, offset: 640)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !3847, file: !3846, line: 542, baseType: !1451, size: 64, offset: 704)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !3847, file: !3846, line: 545, baseType: !1056, size: 64, offset: 768)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !3847, file: !3846, line: 549, baseType: !4051, size: 64, offset: 832)
!4051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4052, size: 64)
!4052 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !1453, line: 333, baseType: !4053)
!4053 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !1453, line: 39, flags: DIFlagFwdDecl)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3847, file: !3846, line: 552, baseType: !1072, size: 128, offset: 896)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !3847, file: !3846, line: 555, baseType: !4056, size: 64, offset: 1024)
!4056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4057, size: 64)
!4057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !105, line: 281, size: 1088, elements: !4058)
!4058 = !{!4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069}
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4057, file: !105, line: 282, baseType: !4056, size: 64)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4057, file: !105, line: 282, baseType: !4056, size: 64, offset: 64)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !4057, file: !105, line: 284, baseType: !1072, size: 128, offset: 128)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !4057, file: !105, line: 285, baseType: !1072, size: 128, offset: 256)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !4057, file: !105, line: 287, baseType: !1062, size: 512, offset: 384)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !4057, file: !105, line: 288, baseType: !1045, size: 16, offset: 896)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !4057, file: !105, line: 289, baseType: !1045, size: 16, offset: 912)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4057, file: !105, line: 291, baseType: !1045, size: 16, offset: 928)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !4057, file: !105, line: 292, baseType: !1045, size: 16, offset: 944)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4057, file: !105, line: 295, baseType: !4044, size: 64, offset: 960)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !4057, file: !105, line: 296, baseType: !1002, size: 64, offset: 1024)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !3847, file: !3846, line: 559, baseType: !1002, size: 64, offset: 1088)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !3847, file: !3846, line: 560, baseType: !4072, size: 64, offset: 1152)
!4072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4073, size: 64)
!4073 = !DISubroutineType(types: !4074)
!4074 = !{!1047, !3857, !3867}
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !3847, file: !3846, line: 563, baseType: !4076, size: 256, offset: 1216)
!4076 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !1453, line: 436, baseType: !4077)
!4077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !1453, line: 430, size: 256, elements: !4078)
!4078 = !{!4079, !4080, !4083, !4099}
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4077, file: !1453, line: 431, baseType: !1002, size: 64)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !4077, file: !1453, line: 432, baseType: !4081, size: 64, offset: 64)
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4082, size: 64)
!4082 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !1453, line: 417, baseType: !1452)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !4077, file: !1453, line: 433, baseType: !4084, size: 64, offset: 128)
!4084 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !1453, line: 408, baseType: !4085)
!4085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4086, size: 64)
!4086 = !DISubroutineType(types: !4087)
!4087 = !{!1047, !3857, !3871, !4088, !4090}
!4088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4089, size: 64)
!4089 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !1453, line: 38, flags: DIFlagFwdDecl)
!4090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4091, size: 64)
!4091 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !1453, line: 348, baseType: !4092)
!4092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !1453, line: 337, size: 256, elements: !4093)
!4093 = !{!4094, !4095, !4096, !4097, !4098}
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4092, file: !1453, line: 339, baseType: !1002, size: 64)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4092, file: !1453, line: 342, baseType: !4088, size: 64, offset: 64)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !4092, file: !1453, line: 345, baseType: !1047, size: 32, offset: 128)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !4092, file: !1453, line: 347, baseType: !1047, size: 32, offset: 160)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !4092, file: !1453, line: 347, baseType: !1047, size: 32, offset: 192)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4077, file: !1453, line: 434, baseType: !4100, size: 64, offset: 192)
!4100 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !1453, line: 409, baseType: !1506)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3847, file: !3846, line: 566, baseType: !1045, size: 16, offset: 1472)
!4102 = !DILocalVariable(name: "ot", arg: 1, scope: !3841, file: !3, line: 669, type: !3844)
!4103 = !DILocation(line: 669, column: 52, scope: !3841)
!4104 = !DILocation(line: 672, column: 2, scope: !3841)
!4105 = !DILocation(line: 672, column: 6, scope: !3841)
!4106 = !DILocation(line: 672, column: 11, scope: !3841)
!4107 = !DILocation(line: 673, column: 2, scope: !3841)
!4108 = !DILocation(line: 673, column: 6, scope: !3841)
!4109 = !DILocation(line: 673, column: 13, scope: !3841)
!4110 = !DILocation(line: 674, column: 2, scope: !3841)
!4111 = !DILocation(line: 674, column: 6, scope: !3841)
!4112 = !DILocation(line: 674, column: 18, scope: !3841)
!4113 = !DILocation(line: 677, column: 2, scope: !3841)
!4114 = !DILocation(line: 677, column: 6, scope: !3841)
!4115 = !DILocation(line: 677, column: 13, scope: !3841)
!4116 = !DILocation(line: 678, column: 2, scope: !3841)
!4117 = !DILocation(line: 678, column: 6, scope: !3841)
!4118 = !DILocation(line: 678, column: 11, scope: !3841)
!4119 = !DILocation(line: 679, column: 2, scope: !3841)
!4120 = !DILocation(line: 679, column: 6, scope: !3841)
!4121 = !DILocation(line: 679, column: 11, scope: !3841)
!4122 = !DILocation(line: 682, column: 2, scope: !3841)
!4123 = !DILocation(line: 682, column: 6, scope: !3841)
!4124 = !DILocation(line: 682, column: 11, scope: !3841)
!4125 = !DILocation(line: 685, column: 29, scope: !3841)
!4126 = !DILocation(line: 685, column: 2, scope: !3841)
!4127 = !DILocation(line: 686, column: 1, scope: !3841)
!4128 = distinct !DISubprogram(name: "stretchto_reset_invoke", scope: !3, file: !3, line: 661, type: !4129, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4129 = !DISubroutineType(types: !4130)
!4130 = !{!1047, !4131, !4133, !4135}
!4131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4132, size: 64)
!4132 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !1908, line: 69, baseType: !3858)
!4133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4134, size: 64)
!4134 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !105, line: 348, baseType: !3860)
!4135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4136, size: 64)
!4136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4137)
!4137 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !3846, line: 460, baseType: !3949)
!4138 = !DILocalVariable(name: "C", arg: 1, scope: !4128, file: !3, line: 661, type: !4131)
!4139 = !DILocation(line: 661, column: 45, scope: !4128)
!4140 = !DILocalVariable(name: "op", arg: 2, scope: !4128, file: !3, line: 661, type: !4133)
!4141 = !DILocation(line: 661, column: 60, scope: !4128)
!4142 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !4128, file: !3, line: 661, type: !4135)
!4143 = !DILocation(line: 661, column: 79, scope: !4128)
!4144 = !DILocation(line: 663, column: 40, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4128, file: !3, line: 663, column: 6)
!4146 = !DILocation(line: 663, column: 43, scope: !4145)
!4147 = !DILocation(line: 663, column: 6, scope: !4145)
!4148 = !DILocation(line: 663, column: 6, scope: !4128)
!4149 = !DILocation(line: 664, column: 31, scope: !4145)
!4150 = !DILocation(line: 664, column: 34, scope: !4145)
!4151 = !DILocation(line: 664, column: 10, scope: !4145)
!4152 = !DILocation(line: 664, column: 3, scope: !4145)
!4153 = !DILocation(line: 666, column: 3, scope: !4145)
!4154 = !DILocation(line: 667, column: 1, scope: !4128)
!4155 = distinct !DISubprogram(name: "stretchto_reset_exec", scope: !3, file: !3, line: 643, type: !4156, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4156 = !DISubroutineType(types: !4157)
!4157 = !{!1047, !4131, !4133}
!4158 = !DILocalVariable(name: "C", arg: 1, scope: !4155, file: !3, line: 643, type: !4131)
!4159 = !DILocation(line: 643, column: 43, scope: !4155)
!4160 = !DILocalVariable(name: "op", arg: 2, scope: !4155, file: !3, line: 643, type: !4133)
!4161 = !DILocation(line: 643, column: 58, scope: !4155)
!4162 = !DILocalVariable(name: "ob", scope: !4155, file: !3, line: 645, type: !2798)
!4163 = !DILocation(line: 645, column: 10, scope: !4155)
!4164 = !DILocation(line: 645, column: 40, scope: !4155)
!4165 = !DILocation(line: 645, column: 15, scope: !4155)
!4166 = !DILocalVariable(name: "con", scope: !4155, file: !3, line: 646, type: !2881)
!4167 = !DILocation(line: 646, column: 15, scope: !4155)
!4168 = !DILocation(line: 646, column: 50, scope: !4155)
!4169 = !DILocation(line: 646, column: 54, scope: !4155)
!4170 = !DILocation(line: 646, column: 21, scope: !4155)
!4171 = !DILocalVariable(name: "data", scope: !4155, file: !3, line: 647, type: !1003)
!4172 = !DILocation(line: 647, column: 24, scope: !4155)
!4173 = !DILocation(line: 647, column: 32, scope: !4155)
!4174 = !DILocation(line: 647, column: 31, scope: !4155)
!4175 = !DILocation(line: 647, column: 63, scope: !4155)
!4176 = !DILocation(line: 647, column: 68, scope: !4155)
!4177 = !DILocation(line: 647, column: 39, scope: !4155)
!4178 = !DILocation(line: 650, column: 6, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4155, file: !3, line: 650, column: 6)
!4180 = !DILocation(line: 650, column: 11, scope: !4179)
!4181 = !DILocation(line: 650, column: 6, scope: !4155)
!4182 = !DILocation(line: 651, column: 3, scope: !4179)
!4183 = !DILocation(line: 654, column: 2, scope: !4155)
!4184 = !DILocation(line: 654, column: 8, scope: !4155)
!4185 = !DILocation(line: 654, column: 18, scope: !4155)
!4186 = !DILocation(line: 655, column: 30, scope: !4155)
!4187 = !DILocation(line: 655, column: 2, scope: !4155)
!4188 = !DILocation(line: 657, column: 24, scope: !4155)
!4189 = !DILocation(line: 657, column: 2, scope: !4155)
!4190 = !DILocation(line: 658, column: 2, scope: !4155)
!4191 = !DILocation(line: 659, column: 1, scope: !4155)
!4192 = distinct !DISubprogram(name: "edit_constraint_poll", scope: !3, file: !3, line: 562, type: !4193, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4193 = !DISubroutineType(types: !4194)
!4194 = !{!1047, !4131}
!4195 = !DILocalVariable(name: "C", arg: 1, scope: !4192, file: !3, line: 562, type: !4131)
!4196 = !DILocation(line: 562, column: 43, scope: !4192)
!4197 = !DILocation(line: 564, column: 38, scope: !4192)
!4198 = !DILocation(line: 564, column: 9, scope: !4192)
!4199 = !DILocation(line: 564, column: 2, scope: !4192)
!4200 = distinct !DISubprogram(name: "edit_constraint_properties", scope: !3, file: !3, line: 567, type: !3842, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4201 = !DILocalVariable(name: "ot", arg: 1, scope: !4200, file: !3, line: 567, type: !3844)
!4202 = !DILocation(line: 567, column: 56, scope: !4200)
!4203 = !DILocation(line: 569, column: 17, scope: !4200)
!4204 = !DILocation(line: 569, column: 21, scope: !4200)
!4205 = !DILocation(line: 569, column: 2, scope: !4200)
!4206 = !DILocation(line: 570, column: 15, scope: !4200)
!4207 = !DILocation(line: 570, column: 19, scope: !4200)
!4208 = !DILocation(line: 570, column: 2, scope: !4200)
!4209 = !DILocation(line: 571, column: 1, scope: !4200)
!4210 = distinct !DISubprogram(name: "CONSTRAINT_OT_limitdistance_reset", scope: !3, file: !3, line: 715, type: !3842, scopeLine: 716, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4211 = !DILocalVariable(name: "ot", arg: 1, scope: !4210, file: !3, line: 715, type: !3844)
!4212 = !DILocation(line: 715, column: 56, scope: !4210)
!4213 = !DILocation(line: 718, column: 2, scope: !4210)
!4214 = !DILocation(line: 718, column: 6, scope: !4210)
!4215 = !DILocation(line: 718, column: 11, scope: !4210)
!4216 = !DILocation(line: 719, column: 2, scope: !4210)
!4217 = !DILocation(line: 719, column: 6, scope: !4210)
!4218 = !DILocation(line: 719, column: 13, scope: !4210)
!4219 = !DILocation(line: 720, column: 2, scope: !4210)
!4220 = !DILocation(line: 720, column: 6, scope: !4210)
!4221 = !DILocation(line: 720, column: 18, scope: !4210)
!4222 = !DILocation(line: 723, column: 2, scope: !4210)
!4223 = !DILocation(line: 723, column: 6, scope: !4210)
!4224 = !DILocation(line: 723, column: 13, scope: !4210)
!4225 = !DILocation(line: 724, column: 2, scope: !4210)
!4226 = !DILocation(line: 724, column: 6, scope: !4210)
!4227 = !DILocation(line: 724, column: 11, scope: !4210)
!4228 = !DILocation(line: 725, column: 2, scope: !4210)
!4229 = !DILocation(line: 725, column: 6, scope: !4210)
!4230 = !DILocation(line: 725, column: 11, scope: !4210)
!4231 = !DILocation(line: 728, column: 2, scope: !4210)
!4232 = !DILocation(line: 728, column: 6, scope: !4210)
!4233 = !DILocation(line: 728, column: 11, scope: !4210)
!4234 = !DILocation(line: 731, column: 29, scope: !4210)
!4235 = !DILocation(line: 731, column: 2, scope: !4210)
!4236 = !DILocation(line: 732, column: 1, scope: !4210)
!4237 = distinct !DISubprogram(name: "limitdistance_reset_invoke", scope: !3, file: !3, line: 707, type: !4129, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4238 = !DILocalVariable(name: "C", arg: 1, scope: !4237, file: !3, line: 707, type: !4131)
!4239 = !DILocation(line: 707, column: 49, scope: !4237)
!4240 = !DILocalVariable(name: "op", arg: 2, scope: !4237, file: !3, line: 707, type: !4133)
!4241 = !DILocation(line: 707, column: 64, scope: !4237)
!4242 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !4237, file: !3, line: 707, type: !4135)
!4243 = !DILocation(line: 707, column: 83, scope: !4237)
!4244 = !DILocation(line: 709, column: 40, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4237, file: !3, line: 709, column: 6)
!4246 = !DILocation(line: 709, column: 43, scope: !4245)
!4247 = !DILocation(line: 709, column: 6, scope: !4245)
!4248 = !DILocation(line: 709, column: 6, scope: !4237)
!4249 = !DILocation(line: 710, column: 35, scope: !4245)
!4250 = !DILocation(line: 710, column: 38, scope: !4245)
!4251 = !DILocation(line: 710, column: 10, scope: !4245)
!4252 = !DILocation(line: 710, column: 3, scope: !4245)
!4253 = !DILocation(line: 712, column: 3, scope: !4245)
!4254 = !DILocation(line: 713, column: 1, scope: !4237)
!4255 = distinct !DISubprogram(name: "limitdistance_reset_exec", scope: !3, file: !3, line: 689, type: !4156, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4256 = !DILocalVariable(name: "C", arg: 1, scope: !4255, file: !3, line: 689, type: !4131)
!4257 = !DILocation(line: 689, column: 47, scope: !4255)
!4258 = !DILocalVariable(name: "op", arg: 2, scope: !4255, file: !3, line: 689, type: !4133)
!4259 = !DILocation(line: 689, column: 62, scope: !4255)
!4260 = !DILocalVariable(name: "ob", scope: !4255, file: !3, line: 691, type: !2798)
!4261 = !DILocation(line: 691, column: 10, scope: !4255)
!4262 = !DILocation(line: 691, column: 40, scope: !4255)
!4263 = !DILocation(line: 691, column: 15, scope: !4255)
!4264 = !DILocalVariable(name: "con", scope: !4255, file: !3, line: 692, type: !2881)
!4265 = !DILocation(line: 692, column: 15, scope: !4255)
!4266 = !DILocation(line: 692, column: 50, scope: !4255)
!4267 = !DILocation(line: 692, column: 54, scope: !4255)
!4268 = !DILocation(line: 692, column: 21, scope: !4255)
!4269 = !DILocalVariable(name: "data", scope: !4255, file: !3, line: 693, type: !2634)
!4270 = !DILocation(line: 693, column: 24, scope: !4255)
!4271 = !DILocation(line: 693, column: 32, scope: !4255)
!4272 = !DILocation(line: 693, column: 31, scope: !4255)
!4273 = !DILocation(line: 693, column: 63, scope: !4255)
!4274 = !DILocation(line: 693, column: 68, scope: !4255)
!4275 = !DILocation(line: 693, column: 39, scope: !4255)
!4276 = !DILocation(line: 696, column: 6, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4255, file: !3, line: 696, column: 6)
!4278 = !DILocation(line: 696, column: 11, scope: !4277)
!4279 = !DILocation(line: 696, column: 6, scope: !4255)
!4280 = !DILocation(line: 697, column: 3, scope: !4277)
!4281 = !DILocation(line: 700, column: 2, scope: !4255)
!4282 = !DILocation(line: 700, column: 8, scope: !4255)
!4283 = !DILocation(line: 700, column: 13, scope: !4255)
!4284 = !DILocation(line: 701, column: 30, scope: !4255)
!4285 = !DILocation(line: 701, column: 2, scope: !4255)
!4286 = !DILocation(line: 703, column: 24, scope: !4255)
!4287 = !DILocation(line: 703, column: 2, scope: !4255)
!4288 = !DILocation(line: 704, column: 2, scope: !4255)
!4289 = !DILocation(line: 705, column: 1, scope: !4255)
!4290 = distinct !DISubprogram(name: "CONSTRAINT_OT_childof_set_inverse", scope: !3, file: !3, line: 851, type: !3842, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4291 = !DILocalVariable(name: "ot", arg: 1, scope: !4290, file: !3, line: 851, type: !3844)
!4292 = !DILocation(line: 851, column: 56, scope: !4290)
!4293 = !DILocation(line: 854, column: 2, scope: !4290)
!4294 = !DILocation(line: 854, column: 6, scope: !4290)
!4295 = !DILocation(line: 854, column: 11, scope: !4290)
!4296 = !DILocation(line: 855, column: 2, scope: !4290)
!4297 = !DILocation(line: 855, column: 6, scope: !4290)
!4298 = !DILocation(line: 855, column: 13, scope: !4290)
!4299 = !DILocation(line: 856, column: 2, scope: !4290)
!4300 = !DILocation(line: 856, column: 6, scope: !4290)
!4301 = !DILocation(line: 856, column: 18, scope: !4290)
!4302 = !DILocation(line: 859, column: 2, scope: !4290)
!4303 = !DILocation(line: 859, column: 6, scope: !4290)
!4304 = !DILocation(line: 859, column: 13, scope: !4290)
!4305 = !DILocation(line: 860, column: 2, scope: !4290)
!4306 = !DILocation(line: 860, column: 6, scope: !4290)
!4307 = !DILocation(line: 860, column: 11, scope: !4290)
!4308 = !DILocation(line: 861, column: 2, scope: !4290)
!4309 = !DILocation(line: 861, column: 6, scope: !4290)
!4310 = !DILocation(line: 861, column: 11, scope: !4290)
!4311 = !DILocation(line: 864, column: 2, scope: !4290)
!4312 = !DILocation(line: 864, column: 6, scope: !4290)
!4313 = !DILocation(line: 864, column: 11, scope: !4290)
!4314 = !DILocation(line: 867, column: 29, scope: !4290)
!4315 = !DILocation(line: 867, column: 2, scope: !4290)
!4316 = !DILocation(line: 868, column: 1, scope: !4290)
!4317 = distinct !DISubprogram(name: "childof_set_inverse_invoke", scope: !3, file: !3, line: 843, type: !4129, scopeLine: 844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4318 = !DILocalVariable(name: "C", arg: 1, scope: !4317, file: !3, line: 843, type: !4131)
!4319 = !DILocation(line: 843, column: 49, scope: !4317)
!4320 = !DILocalVariable(name: "op", arg: 2, scope: !4317, file: !3, line: 843, type: !4133)
!4321 = !DILocation(line: 843, column: 64, scope: !4317)
!4322 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !4317, file: !3, line: 843, type: !4135)
!4323 = !DILocation(line: 843, column: 83, scope: !4317)
!4324 = !DILocation(line: 845, column: 40, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4317, file: !3, line: 845, column: 6)
!4326 = !DILocation(line: 845, column: 43, scope: !4325)
!4327 = !DILocation(line: 845, column: 6, scope: !4325)
!4328 = !DILocation(line: 845, column: 6, scope: !4317)
!4329 = !DILocation(line: 846, column: 35, scope: !4325)
!4330 = !DILocation(line: 846, column: 38, scope: !4325)
!4331 = !DILocation(line: 846, column: 10, scope: !4325)
!4332 = !DILocation(line: 846, column: 3, scope: !4325)
!4333 = !DILocation(line: 848, column: 3, scope: !4325)
!4334 = !DILocation(line: 849, column: 1, scope: !4317)
!4335 = distinct !DISubprogram(name: "childof_set_inverse_exec", scope: !3, file: !3, line: 821, type: !4156, scopeLine: 822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4336 = !DILocalVariable(name: "C", arg: 1, scope: !4335, file: !3, line: 821, type: !4131)
!4337 = !DILocation(line: 821, column: 47, scope: !4335)
!4338 = !DILocalVariable(name: "op", arg: 2, scope: !4335, file: !3, line: 821, type: !4133)
!4339 = !DILocation(line: 821, column: 62, scope: !4335)
!4340 = !DILocalVariable(name: "scene", scope: !4335, file: !3, line: 823, type: !4341)
!4341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4342, size: 64)
!4342 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !1230, line: 1299, baseType: !1402)
!4343 = !DILocation(line: 823, column: 9, scope: !4335)
!4344 = !DILocation(line: 823, column: 32, scope: !4335)
!4345 = !DILocation(line: 823, column: 17, scope: !4335)
!4346 = !DILocalVariable(name: "ob", scope: !4335, file: !3, line: 824, type: !2798)
!4347 = !DILocation(line: 824, column: 10, scope: !4335)
!4348 = !DILocation(line: 824, column: 40, scope: !4335)
!4349 = !DILocation(line: 824, column: 15, scope: !4335)
!4350 = !DILocalVariable(name: "con", scope: !4335, file: !3, line: 825, type: !2881)
!4351 = !DILocation(line: 825, column: 15, scope: !4335)
!4352 = !DILocation(line: 825, column: 50, scope: !4335)
!4353 = !DILocation(line: 825, column: 54, scope: !4335)
!4354 = !DILocation(line: 825, column: 21, scope: !4335)
!4355 = !DILocalVariable(name: "data", scope: !4335, file: !3, line: 826, type: !2645)
!4356 = !DILocation(line: 826, column: 22, scope: !4335)
!4357 = !DILocation(line: 826, column: 30, scope: !4335)
!4358 = !DILocation(line: 826, column: 29, scope: !4335)
!4359 = !DILocation(line: 826, column: 59, scope: !4335)
!4360 = !DILocation(line: 826, column: 64, scope: !4335)
!4361 = !DILocation(line: 826, column: 37, scope: !4335)
!4362 = !DILocalVariable(name: "owner", scope: !4335, file: !3, line: 827, type: !4363)
!4363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1047)
!4364 = !DILocation(line: 827, column: 12, scope: !4335)
!4365 = !DILocation(line: 827, column: 33, scope: !4335)
!4366 = !DILocation(line: 827, column: 37, scope: !4335)
!4367 = !DILocation(line: 827, column: 20, scope: !4335)
!4368 = !DILocation(line: 830, column: 6, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4335, file: !3, line: 830, column: 6)
!4370 = !DILocation(line: 830, column: 11, scope: !4369)
!4371 = !DILocation(line: 830, column: 6, scope: !4335)
!4372 = !DILocation(line: 831, column: 60, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4369, file: !3, line: 830, column: 20)
!4374 = !DILocation(line: 831, column: 59, scope: !4373)
!4375 = !DILocation(line: 831, column: 66, scope: !4373)
!4376 = !DILocation(line: 831, column: 70, scope: !4373)
!4377 = !DILocation(line: 831, column: 73, scope: !4373)
!4378 = !DILocation(line: 831, column: 78, scope: !4373)
!4379 = !DILocation(line: 831, column: 3, scope: !4373)
!4380 = !DILocation(line: 832, column: 14, scope: !4373)
!4381 = !DILocation(line: 832, column: 18, scope: !4373)
!4382 = !DILocation(line: 832, column: 3, scope: !4373)
!4383 = !DILocation(line: 833, column: 3, scope: !4373)
!4384 = !DILocation(line: 836, column: 27, scope: !4335)
!4385 = !DILocation(line: 836, column: 34, scope: !4335)
!4386 = !DILocation(line: 836, column: 38, scope: !4335)
!4387 = !DILocation(line: 836, column: 43, scope: !4335)
!4388 = !DILocation(line: 836, column: 49, scope: !4335)
!4389 = !DILocation(line: 836, column: 57, scope: !4335)
!4390 = !DILocation(line: 836, column: 2, scope: !4335)
!4391 = !DILocation(line: 838, column: 24, scope: !4335)
!4392 = !DILocation(line: 838, column: 54, scope: !4335)
!4393 = !DILocation(line: 838, column: 2, scope: !4335)
!4394 = !DILocation(line: 840, column: 2, scope: !4335)
!4395 = !DILocation(line: 841, column: 1, scope: !4335)
!4396 = distinct !DISubprogram(name: "CONSTRAINT_OT_childof_clear_inverse", scope: !3, file: !3, line: 898, type: !3842, scopeLine: 899, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4397 = !DILocalVariable(name: "ot", arg: 1, scope: !4396, file: !3, line: 898, type: !3844)
!4398 = !DILocation(line: 898, column: 58, scope: !4396)
!4399 = !DILocation(line: 901, column: 2, scope: !4396)
!4400 = !DILocation(line: 901, column: 6, scope: !4396)
!4401 = !DILocation(line: 901, column: 11, scope: !4396)
!4402 = !DILocation(line: 902, column: 2, scope: !4396)
!4403 = !DILocation(line: 902, column: 6, scope: !4396)
!4404 = !DILocation(line: 902, column: 13, scope: !4396)
!4405 = !DILocation(line: 903, column: 2, scope: !4396)
!4406 = !DILocation(line: 903, column: 6, scope: !4396)
!4407 = !DILocation(line: 903, column: 18, scope: !4396)
!4408 = !DILocation(line: 906, column: 2, scope: !4396)
!4409 = !DILocation(line: 906, column: 6, scope: !4396)
!4410 = !DILocation(line: 906, column: 13, scope: !4396)
!4411 = !DILocation(line: 907, column: 2, scope: !4396)
!4412 = !DILocation(line: 907, column: 6, scope: !4396)
!4413 = !DILocation(line: 907, column: 11, scope: !4396)
!4414 = !DILocation(line: 908, column: 2, scope: !4396)
!4415 = !DILocation(line: 908, column: 6, scope: !4396)
!4416 = !DILocation(line: 908, column: 11, scope: !4396)
!4417 = !DILocation(line: 911, column: 2, scope: !4396)
!4418 = !DILocation(line: 911, column: 6, scope: !4396)
!4419 = !DILocation(line: 911, column: 11, scope: !4396)
!4420 = !DILocation(line: 914, column: 29, scope: !4396)
!4421 = !DILocation(line: 914, column: 2, scope: !4396)
!4422 = !DILocation(line: 915, column: 1, scope: !4396)
!4423 = distinct !DISubprogram(name: "childof_clear_inverse_invoke", scope: !3, file: !3, line: 890, type: !4129, scopeLine: 891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4424 = !DILocalVariable(name: "C", arg: 1, scope: !4423, file: !3, line: 890, type: !4131)
!4425 = !DILocation(line: 890, column: 51, scope: !4423)
!4426 = !DILocalVariable(name: "op", arg: 2, scope: !4423, file: !3, line: 890, type: !4133)
!4427 = !DILocation(line: 890, column: 66, scope: !4423)
!4428 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !4423, file: !3, line: 890, type: !4135)
!4429 = !DILocation(line: 890, column: 85, scope: !4423)
!4430 = !DILocation(line: 892, column: 40, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 892, column: 6)
!4432 = !DILocation(line: 892, column: 43, scope: !4431)
!4433 = !DILocation(line: 892, column: 6, scope: !4431)
!4434 = !DILocation(line: 892, column: 6, scope: !4423)
!4435 = !DILocation(line: 893, column: 37, scope: !4431)
!4436 = !DILocation(line: 893, column: 40, scope: !4431)
!4437 = !DILocation(line: 893, column: 10, scope: !4431)
!4438 = !DILocation(line: 893, column: 3, scope: !4431)
!4439 = !DILocation(line: 895, column: 3, scope: !4431)
!4440 = !DILocation(line: 896, column: 1, scope: !4423)
!4441 = distinct !DISubprogram(name: "childof_clear_inverse_exec", scope: !3, file: !3, line: 871, type: !4156, scopeLine: 872, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4442 = !DILocalVariable(name: "C", arg: 1, scope: !4441, file: !3, line: 871, type: !4131)
!4443 = !DILocation(line: 871, column: 49, scope: !4441)
!4444 = !DILocalVariable(name: "op", arg: 2, scope: !4441, file: !3, line: 871, type: !4133)
!4445 = !DILocation(line: 871, column: 64, scope: !4441)
!4446 = !DILocalVariable(name: "ob", scope: !4441, file: !3, line: 873, type: !2798)
!4447 = !DILocation(line: 873, column: 10, scope: !4441)
!4448 = !DILocation(line: 873, column: 40, scope: !4441)
!4449 = !DILocation(line: 873, column: 15, scope: !4441)
!4450 = !DILocalVariable(name: "con", scope: !4441, file: !3, line: 874, type: !2881)
!4451 = !DILocation(line: 874, column: 15, scope: !4441)
!4452 = !DILocation(line: 874, column: 50, scope: !4441)
!4453 = !DILocation(line: 874, column: 54, scope: !4441)
!4454 = !DILocation(line: 874, column: 21, scope: !4441)
!4455 = !DILocalVariable(name: "data", scope: !4441, file: !3, line: 875, type: !2645)
!4456 = !DILocation(line: 875, column: 22, scope: !4441)
!4457 = !DILocation(line: 875, column: 30, scope: !4441)
!4458 = !DILocation(line: 875, column: 29, scope: !4441)
!4459 = !DILocation(line: 875, column: 59, scope: !4441)
!4460 = !DILocation(line: 875, column: 64, scope: !4441)
!4461 = !DILocation(line: 875, column: 37, scope: !4441)
!4462 = !DILocation(line: 877, column: 6, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4441, file: !3, line: 877, column: 6)
!4464 = !DILocation(line: 877, column: 11, scope: !4463)
!4465 = !DILocation(line: 877, column: 6, scope: !4441)
!4466 = !DILocation(line: 878, column: 14, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4463, file: !3, line: 877, column: 20)
!4468 = !DILocation(line: 878, column: 18, scope: !4467)
!4469 = !DILocation(line: 878, column: 3, scope: !4467)
!4470 = !DILocation(line: 879, column: 3, scope: !4467)
!4471 = !DILocation(line: 883, column: 10, scope: !4441)
!4472 = !DILocation(line: 883, column: 16, scope: !4441)
!4473 = !DILocation(line: 883, column: 2, scope: !4441)
!4474 = !DILocation(line: 885, column: 24, scope: !4441)
!4475 = !DILocation(line: 885, column: 54, scope: !4441)
!4476 = !DILocation(line: 885, column: 2, scope: !4441)
!4477 = !DILocation(line: 887, column: 2, scope: !4441)
!4478 = !DILocation(line: 888, column: 1, scope: !4441)
!4479 = distinct !DISubprogram(name: "CONSTRAINT_OT_followpath_path_animate", scope: !3, file: !3, line: 1018, type: !3842, scopeLine: 1019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4480 = !DILocalVariable(name: "ot", arg: 1, scope: !4479, file: !3, line: 1018, type: !3844)
!4481 = !DILocation(line: 1018, column: 60, scope: !4479)
!4482 = !DILocation(line: 1021, column: 2, scope: !4479)
!4483 = !DILocation(line: 1021, column: 6, scope: !4479)
!4484 = !DILocation(line: 1021, column: 11, scope: !4479)
!4485 = !DILocation(line: 1022, column: 2, scope: !4479)
!4486 = !DILocation(line: 1022, column: 6, scope: !4479)
!4487 = !DILocation(line: 1022, column: 13, scope: !4479)
!4488 = !DILocation(line: 1023, column: 2, scope: !4479)
!4489 = !DILocation(line: 1023, column: 6, scope: !4479)
!4490 = !DILocation(line: 1023, column: 18, scope: !4479)
!4491 = !DILocation(line: 1026, column: 2, scope: !4479)
!4492 = !DILocation(line: 1026, column: 6, scope: !4479)
!4493 = !DILocation(line: 1026, column: 13, scope: !4479)
!4494 = !DILocation(line: 1027, column: 2, scope: !4479)
!4495 = !DILocation(line: 1027, column: 6, scope: !4479)
!4496 = !DILocation(line: 1027, column: 11, scope: !4479)
!4497 = !DILocation(line: 1028, column: 2, scope: !4479)
!4498 = !DILocation(line: 1028, column: 6, scope: !4479)
!4499 = !DILocation(line: 1028, column: 11, scope: !4479)
!4500 = !DILocation(line: 1031, column: 2, scope: !4479)
!4501 = !DILocation(line: 1031, column: 6, scope: !4479)
!4502 = !DILocation(line: 1031, column: 11, scope: !4479)
!4503 = !DILocation(line: 1034, column: 29, scope: !4479)
!4504 = !DILocation(line: 1034, column: 2, scope: !4479)
!4505 = !DILocation(line: 1035, column: 14, scope: !4479)
!4506 = !DILocation(line: 1035, column: 18, scope: !4479)
!4507 = !DILocation(line: 1035, column: 2, scope: !4479)
!4508 = !DILocation(line: 1037, column: 14, scope: !4479)
!4509 = !DILocation(line: 1037, column: 18, scope: !4479)
!4510 = !DILocation(line: 1037, column: 2, scope: !4479)
!4511 = !DILocation(line: 1039, column: 1, scope: !4479)
!4512 = distinct !DISubprogram(name: "followpath_path_animate_invoke", scope: !3, file: !3, line: 1007, type: !4129, scopeLine: 1008, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4513 = !DILocalVariable(name: "C", arg: 1, scope: !4512, file: !3, line: 1007, type: !4131)
!4514 = !DILocation(line: 1007, column: 53, scope: !4512)
!4515 = !DILocalVariable(name: "op", arg: 2, scope: !4512, file: !3, line: 1007, type: !4133)
!4516 = !DILocation(line: 1007, column: 68, scope: !4512)
!4517 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !4512, file: !3, line: 1007, type: !4135)
!4518 = !DILocation(line: 1007, column: 87, scope: !4512)
!4519 = !DILocation(line: 1010, column: 40, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4512, file: !3, line: 1010, column: 6)
!4521 = !DILocation(line: 1010, column: 43, scope: !4520)
!4522 = !DILocation(line: 1010, column: 6, scope: !4520)
!4523 = !DILocation(line: 1010, column: 6, scope: !4512)
!4524 = !DILocation(line: 1011, column: 39, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4520, file: !3, line: 1010, column: 48)
!4526 = !DILocation(line: 1011, column: 42, scope: !4525)
!4527 = !DILocation(line: 1011, column: 10, scope: !4525)
!4528 = !DILocation(line: 1011, column: 3, scope: !4525)
!4529 = !DILocation(line: 1014, column: 3, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4520, file: !3, line: 1013, column: 7)
!4531 = !DILocation(line: 1016, column: 1, scope: !4512)
!4532 = distinct !DISubprogram(name: "followpath_path_animate_exec", scope: !3, file: !3, line: 919, type: !4156, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4533 = !DILocalVariable(name: "C", arg: 1, scope: !4532, file: !3, line: 919, type: !4131)
!4534 = !DILocation(line: 919, column: 51, scope: !4532)
!4535 = !DILocalVariable(name: "op", arg: 2, scope: !4532, file: !3, line: 919, type: !4133)
!4536 = !DILocation(line: 919, column: 66, scope: !4532)
!4537 = !DILocalVariable(name: "ob", scope: !4532, file: !3, line: 921, type: !2798)
!4538 = !DILocation(line: 921, column: 10, scope: !4532)
!4539 = !DILocation(line: 921, column: 40, scope: !4532)
!4540 = !DILocation(line: 921, column: 15, scope: !4532)
!4541 = !DILocalVariable(name: "con", scope: !4532, file: !3, line: 922, type: !2881)
!4542 = !DILocation(line: 922, column: 15, scope: !4532)
!4543 = !DILocation(line: 922, column: 50, scope: !4532)
!4544 = !DILocation(line: 922, column: 54, scope: !4532)
!4545 = !DILocation(line: 922, column: 21, scope: !4532)
!4546 = !DILocalVariable(name: "data", scope: !4532, file: !3, line: 923, type: !2654)
!4547 = !DILocation(line: 923, column: 25, scope: !4532)
!4548 = !DILocation(line: 923, column: 33, scope: !4532)
!4549 = !DILocation(line: 923, column: 32, scope: !4532)
!4550 = !DILocation(line: 923, column: 65, scope: !4532)
!4551 = !DILocation(line: 923, column: 70, scope: !4532)
!4552 = !DILocation(line: 923, column: 40, scope: !4532)
!4553 = !DILocalVariable(name: "act", scope: !4532, file: !3, line: 925, type: !1087)
!4554 = !DILocation(line: 925, column: 11, scope: !4532)
!4555 = !DILocalVariable(name: "fcu", scope: !4532, file: !3, line: 926, type: !4556)
!4556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4557, size: 64)
!4557 = !DIDerivedType(tag: DW_TAG_typedef, name: "FCurve", file: !130, line: 463, baseType: !4558)
!4558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FCurve", file: !130, line: 433, size: 896, elements: !4559)
!4559 = !{!4560, !4562, !4563, !4585, !4597, !4598, !4621, !4629, !4630, !4631, !4632, !4633, !4634, !4635, !4636, !4637, !4638}
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4558, file: !130, line: 434, baseType: !4561, size: 64)
!4561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4558, size: 64)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4558, file: !130, line: 434, baseType: !4561, size: 64, offset: 64)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "grp", scope: !4558, file: !130, line: 437, baseType: !4564, size: 64, offset: 128)
!4564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4565, size: 64)
!4565 = !DIDerivedType(tag: DW_TAG_typedef, name: "bActionGroup", file: !47, line: 450, baseType: !4566)
!4566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bActionGroup", file: !47, line: 440, size: 960, elements: !4567)
!4567 = !{!4568, !4570, !4571, !4572, !4573, !4574, !4575}
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4566, file: !47, line: 441, baseType: !4569, size: 64)
!4569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4566, size: 64)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4566, file: !47, line: 441, baseType: !4569, size: 64, offset: 64)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !4566, file: !47, line: 443, baseType: !1072, size: 128, offset: 128)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4566, file: !47, line: 445, baseType: !1047, size: 32, offset: 256)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "customCol", scope: !4566, file: !47, line: 446, baseType: !1047, size: 32, offset: 288)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4566, file: !47, line: 447, baseType: !1062, size: 512, offset: 320)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4566, file: !47, line: 449, baseType: !4576, size: 128, offset: 832)
!4576 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThemeWireColor", file: !4577, line: 347, baseType: !4578)
!4577 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThemeWireColor", file: !4577, line: 340, size: 128, elements: !4579)
!4579 = !{!4580, !4581, !4582, !4583, !4584}
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "solid", scope: !4578, file: !4577, line: 341, baseType: !2681, size: 32)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !4578, file: !4577, line: 342, baseType: !2681, size: 32, offset: 32)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4578, file: !4577, line: 343, baseType: !2681, size: 32, offset: 64)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4578, file: !4577, line: 345, baseType: !1045, size: 16, offset: 96)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4578, file: !4577, line: 346, baseType: !1045, size: 16, offset: 112)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4558, file: !130, line: 440, baseType: !4586, size: 64, offset: 192)
!4586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4587, size: 64)
!4587 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelDriver", file: !130, line: 386, baseType: !4588)
!4588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelDriver", file: !130, line: 371, size: 2368, elements: !4589)
!4589 = !{!4590, !4591, !4592, !4593, !4594, !4595, !4596}
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "variables", scope: !4588, file: !130, line: 372, baseType: !1072, size: 128)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "expression", scope: !4588, file: !130, line: 377, baseType: !1569, size: 2048, offset: 128)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "expr_comp", scope: !4588, file: !130, line: 378, baseType: !1002, size: 64, offset: 2176)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !4588, file: !130, line: 380, baseType: !1127, size: 32, offset: 2240)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !4588, file: !130, line: 381, baseType: !1127, size: 32, offset: 2272)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4588, file: !130, line: 384, baseType: !1047, size: 32, offset: 2304)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4588, file: !130, line: 385, baseType: !1047, size: 32, offset: 2336)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !4558, file: !130, line: 442, baseType: !1072, size: 128, offset: 256)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !4558, file: !130, line: 445, baseType: !4599, size: 64, offset: 384)
!4599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4600, size: 64)
!4600 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !1258, line: 133, baseType: !4601)
!4601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !1258, line: 117, size: 576, elements: !4602)
!4602 = !{!4603, !4606, !4607, !4608, !4609, !4610, !4611, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620}
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4601, file: !1258, line: 118, baseType: !4604, size: 288)
!4604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1127, size: 288, elements: !4605)
!4605 = !{!1177, !1177}
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !4601, file: !1258, line: 119, baseType: !1127, size: 32, offset: 288)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !4601, file: !1258, line: 119, baseType: !1127, size: 32, offset: 320)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !4601, file: !1258, line: 119, baseType: !1127, size: 32, offset: 352)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !4601, file: !1258, line: 121, baseType: !1032, size: 8, offset: 384)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !4601, file: !1258, line: 123, baseType: !1032, size: 8, offset: 392)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !4601, file: !1258, line: 123, baseType: !1032, size: 8, offset: 400)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !4601, file: !1258, line: 124, baseType: !1032, size: 8, offset: 408)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !4601, file: !1258, line: 124, baseType: !1032, size: 8, offset: 416)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !4601, file: !1258, line: 124, baseType: !1032, size: 8, offset: 424)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !4601, file: !1258, line: 126, baseType: !1032, size: 8, offset: 432)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !4601, file: !1258, line: 128, baseType: !1032, size: 8, offset: 440)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !4601, file: !1258, line: 129, baseType: !1127, size: 32, offset: 448)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !4601, file: !1258, line: 130, baseType: !1127, size: 32, offset: 480)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !4601, file: !1258, line: 130, baseType: !1127, size: 32, offset: 512)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4601, file: !1258, line: 132, baseType: !2681, size: 32, offset: 544)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "fpt", scope: !4558, file: !130, line: 446, baseType: !4622, size: 64, offset: 448)
!4622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4623, size: 64)
!4623 = !DIDerivedType(tag: DW_TAG_typedef, name: "FPoint", file: !130, line: 430, baseType: !4624)
!4624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPoint", file: !130, line: 426, size: 128, elements: !4625)
!4625 = !{!4626, !4627, !4628}
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4624, file: !130, line: 427, baseType: !1391, size: 64)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4624, file: !130, line: 428, baseType: !1047, size: 32, offset: 64)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4624, file: !130, line: 429, baseType: !1047, size: 32, offset: 96)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !4558, file: !130, line: 447, baseType: !7, size: 32, offset: 512)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !4558, file: !130, line: 450, baseType: !1127, size: 32, offset: 544)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4558, file: !130, line: 451, baseType: !1045, size: 16, offset: 576)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !4558, file: !130, line: 452, baseType: !1045, size: 16, offset: 592)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "array_index", scope: !4558, file: !130, line: 455, baseType: !1047, size: 32, offset: 608)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "rna_path", scope: !4558, file: !130, line: 456, baseType: !1260, size: 64, offset: 640)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !4558, file: !130, line: 459, baseType: !1047, size: 32, offset: 704)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !4558, file: !130, line: 460, baseType: !1197, size: 96, offset: 736)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "prev_norm_factor", scope: !4558, file: !130, line: 462, baseType: !1127, size: 32, offset: 832)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4558, file: !130, line: 462, baseType: !1127, size: 32, offset: 864)
!4639 = !DILocation(line: 926, column: 10, scope: !4532)
!4640 = !DILocalVariable(name: "sfra", scope: !4532, file: !3, line: 927, type: !1047)
!4641 = !DILocation(line: 927, column: 6, scope: !4532)
!4642 = !DILocation(line: 927, column: 25, scope: !4532)
!4643 = !DILocation(line: 927, column: 29, scope: !4532)
!4644 = !DILocation(line: 927, column: 13, scope: !4532)
!4645 = !DILocalVariable(name: "len", scope: !4532, file: !3, line: 928, type: !1047)
!4646 = !DILocation(line: 928, column: 6, scope: !4532)
!4647 = !DILocation(line: 928, column: 25, scope: !4532)
!4648 = !DILocation(line: 928, column: 29, scope: !4532)
!4649 = !DILocation(line: 928, column: 13, scope: !4532)
!4650 = !DILocalVariable(name: "standardRange", scope: !4532, file: !3, line: 929, type: !1127)
!4651 = !DILocation(line: 929, column: 8, scope: !4532)
!4652 = !DILocation(line: 932, column: 6, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 932, column: 6)
!4654 = !DILocation(line: 932, column: 11, scope: !4653)
!4655 = !DILocation(line: 932, column: 6, scope: !4532)
!4656 = !DILocation(line: 933, column: 14, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 932, column: 20)
!4658 = !DILocation(line: 933, column: 18, scope: !4657)
!4659 = !DILocation(line: 933, column: 3, scope: !4657)
!4660 = !DILocation(line: 934, column: 3, scope: !4657)
!4661 = !DILocation(line: 938, column: 6, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 938, column: 6)
!4663 = !DILocation(line: 938, column: 12, scope: !4662)
!4664 = !DILocation(line: 938, column: 6, scope: !4532)
!4665 = !DILocalVariable(name: "cu", scope: !4666, file: !3, line: 939, type: !2664)
!4666 = distinct !DILexicalBlock(scope: !4662, file: !3, line: 938, column: 17)
!4667 = !DILocation(line: 939, column: 10, scope: !4666)
!4668 = !DILocation(line: 939, column: 24, scope: !4666)
!4669 = !DILocation(line: 939, column: 30, scope: !4666)
!4670 = !DILocation(line: 939, column: 35, scope: !4666)
!4671 = !DILocation(line: 939, column: 15, scope: !4666)
!4672 = !DILocation(line: 941, column: 7, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4666, file: !3, line: 941, column: 7)
!4674 = !DILocation(line: 941, column: 44, scope: !4673)
!4675 = !DILocation(line: 942, column: 26, scope: !4673)
!4676 = !DILocation(line: 942, column: 30, scope: !4673)
!4677 = !DILocation(line: 942, column: 35, scope: !4673)
!4678 = !DILocation(line: 942, column: 43, scope: !4673)
!4679 = !DILocation(line: 942, column: 8, scope: !4673)
!4680 = !DILocation(line: 942, column: 67, scope: !4673)
!4681 = !DILocation(line: 941, column: 7, scope: !4666)
!4682 = !DILocation(line: 945, column: 29, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4673, file: !3, line: 943, column: 3)
!4684 = !DILocation(line: 945, column: 33, scope: !4683)
!4685 = !DILocation(line: 945, column: 10, scope: !4683)
!4686 = !DILocation(line: 945, column: 8, scope: !4683)
!4687 = !DILocation(line: 946, column: 24, scope: !4683)
!4688 = !DILocation(line: 946, column: 10, scope: !4683)
!4689 = !DILocation(line: 946, column: 8, scope: !4683)
!4690 = !DILocation(line: 949, column: 18, scope: !4683)
!4691 = !DILocation(line: 950, column: 3, scope: !4683)
!4692 = !DILocation(line: 953, column: 15, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4673, file: !3, line: 951, column: 8)
!4694 = !DILocation(line: 953, column: 19, scope: !4693)
!4695 = !DILocation(line: 953, column: 4, scope: !4693)
!4696 = !DILocation(line: 954, column: 4, scope: !4693)
!4697 = !DILocation(line: 956, column: 2, scope: !4666)
!4698 = !DILocalVariable(name: "ptr", scope: !4699, file: !3, line: 959, type: !4700)
!4699 = distinct !DILexicalBlock(scope: !4662, file: !3, line: 957, column: 7)
!4700 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !1453, line: 62, baseType: !3872)
!4701 = !DILocation(line: 959, column: 14, scope: !4699)
!4702 = !DILocalVariable(name: "prop", scope: !4699, file: !3, line: 960, type: !4051)
!4703 = !DILocation(line: 960, column: 16, scope: !4699)
!4704 = !DILocalVariable(name: "path", scope: !4699, file: !3, line: 961, type: !1260)
!4705 = !DILocation(line: 961, column: 9, scope: !4699)
!4706 = !DILocation(line: 964, column: 23, scope: !4699)
!4707 = !DILocation(line: 964, column: 27, scope: !4699)
!4708 = !DILocation(line: 964, column: 58, scope: !4699)
!4709 = !DILocation(line: 964, column: 3, scope: !4699)
!4710 = !DILocation(line: 965, column: 10, scope: !4699)
!4711 = !DILocation(line: 965, column: 8, scope: !4699)
!4712 = !DILocation(line: 967, column: 45, scope: !4699)
!4713 = !DILocation(line: 967, column: 10, scope: !4699)
!4714 = !DILocation(line: 967, column: 8, scope: !4699)
!4715 = !DILocation(line: 970, column: 28, scope: !4699)
!4716 = !DILocation(line: 970, column: 32, scope: !4699)
!4717 = !DILocation(line: 970, column: 9, scope: !4699)
!4718 = !DILocation(line: 970, column: 7, scope: !4699)
!4719 = !DILocation(line: 971, column: 23, scope: !4699)
!4720 = !DILocation(line: 971, column: 40, scope: !4699)
!4721 = !DILocation(line: 971, column: 9, scope: !4699)
!4722 = !DILocation(line: 971, column: 7, scope: !4699)
!4723 = !DILocation(line: 974, column: 17, scope: !4699)
!4724 = !DILocation(line: 977, column: 3, scope: !4699)
!4725 = !DILocation(line: 977, column: 9, scope: !4699)
!4726 = !DILocation(line: 977, column: 20, scope: !4699)
!4727 = !DILocation(line: 980, column: 7, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4699, file: !3, line: 980, column: 7)
!4729 = !DILocation(line: 980, column: 7, scope: !4699)
!4730 = !DILocation(line: 981, column: 4, scope: !4728)
!4731 = !DILocation(line: 981, column: 14, scope: !4728)
!4732 = !DILocation(line: 987, column: 7, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 987, column: 6)
!4734 = !DILocation(line: 987, column: 12, scope: !4733)
!4735 = !DILocation(line: 987, column: 17, scope: !4733)
!4736 = !DILocation(line: 987, column: 21, scope: !4733)
!4737 = !DILocation(line: 987, column: 26, scope: !4733)
!4738 = !DILocation(line: 987, column: 30, scope: !4733)
!4739 = !DILocation(line: 987, column: 34, scope: !4733)
!4740 = !DILocation(line: 987, column: 39, scope: !4733)
!4741 = !DILocation(line: 987, column: 49, scope: !4733)
!4742 = !DILocation(line: 987, column: 6, scope: !4532)
!4743 = !DILocalVariable(name: "fcm", scope: !4744, file: !3, line: 988, type: !4745)
!4744 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 987, column: 56)
!4745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4746, size: 64)
!4746 = !DIDerivedType(tag: DW_TAG_typedef, name: "FModifier", file: !130, line: 67, baseType: !4747)
!4747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FModifier", file: !130, line: 52, size: 896, elements: !4748)
!4748 = !{!4749, !4751, !4752, !4753, !4754, !4755, !4756, !4757, !4758, !4759, !4760}
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4747, file: !130, line: 53, baseType: !4750, size: 64)
!4750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4747, size: 64)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4747, file: !130, line: 53, baseType: !4750, size: 64, offset: 64)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4747, file: !130, line: 55, baseType: !1002, size: 64, offset: 128)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4747, file: !130, line: 57, baseType: !1062, size: 512, offset: 192)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4747, file: !130, line: 58, baseType: !1045, size: 16, offset: 704)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4747, file: !130, line: 59, baseType: !1045, size: 16, offset: 720)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !4747, file: !130, line: 61, baseType: !1127, size: 32, offset: 736)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !4747, file: !130, line: 63, baseType: !1127, size: 32, offset: 768)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !4747, file: !130, line: 64, baseType: !1127, size: 32, offset: 800)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "blendin", scope: !4747, file: !130, line: 65, baseType: !1127, size: 32, offset: 832)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "blendout", scope: !4747, file: !130, line: 66, baseType: !1127, size: 32, offset: 864)
!4761 = !DILocation(line: 988, column: 14, scope: !4744)
!4762 = !DILocation(line: 988, column: 35, scope: !4744)
!4763 = !DILocation(line: 988, column: 40, scope: !4744)
!4764 = !DILocation(line: 988, column: 20, scope: !4744)
!4765 = !DILocalVariable(name: "gen", scope: !4744, file: !3, line: 989, type: !4766)
!4766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4767, size: 64)
!4767 = !DIDerivedType(tag: DW_TAG_typedef, name: "FMod_Generator", file: !130, line: 117, baseType: !4768)
!4768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FMod_Generator", file: !130, line: 107, size: 192, elements: !4769)
!4769 = !{!4770, !4771, !4772, !4773, !4774}
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "coefficients", scope: !4768, file: !130, line: 109, baseType: !3508, size: 64)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "arraysize", scope: !4768, file: !130, line: 110, baseType: !7, size: 32, offset: 64)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "poly_order", scope: !4768, file: !130, line: 112, baseType: !1047, size: 32, offset: 96)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4768, file: !130, line: 113, baseType: !1047, size: 32, offset: 128)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4768, file: !130, line: 116, baseType: !1047, size: 32, offset: 160)
!4775 = !DILocation(line: 989, column: 19, scope: !4744)
!4776 = !DILocation(line: 989, column: 25, scope: !4744)
!4777 = !DILocation(line: 989, column: 30, scope: !4744)
!4778 = !DILocalVariable(name: "A", scope: !4744, file: !3, line: 995, type: !1127)
!4779 = !DILocation(line: 995, column: 9, scope: !4744)
!4780 = !DILocation(line: 995, column: 13, scope: !4744)
!4781 = !DILocation(line: 995, column: 37, scope: !4744)
!4782 = !DILocation(line: 995, column: 29, scope: !4744)
!4783 = !DILocation(line: 995, column: 27, scope: !4744)
!4784 = !DILocalVariable(name: "B", scope: !4744, file: !3, line: 996, type: !1127)
!4785 = !DILocation(line: 996, column: 9, scope: !4744)
!4786 = !DILocation(line: 996, column: 22, scope: !4744)
!4787 = !DILocation(line: 996, column: 21, scope: !4744)
!4788 = !DILocation(line: 996, column: 13, scope: !4744)
!4789 = !DILocation(line: 996, column: 30, scope: !4744)
!4790 = !DILocation(line: 996, column: 28, scope: !4744)
!4791 = !DILocation(line: 998, column: 26, scope: !4744)
!4792 = !DILocation(line: 998, column: 3, scope: !4744)
!4793 = !DILocation(line: 998, column: 8, scope: !4744)
!4794 = !DILocation(line: 998, column: 24, scope: !4744)
!4795 = !DILocation(line: 999, column: 26, scope: !4744)
!4796 = !DILocation(line: 999, column: 3, scope: !4744)
!4797 = !DILocation(line: 999, column: 8, scope: !4744)
!4798 = !DILocation(line: 999, column: 24, scope: !4744)
!4799 = !DILocation(line: 1000, column: 2, scope: !4744)
!4800 = !DILocation(line: 1003, column: 24, scope: !4532)
!4801 = !DILocation(line: 1003, column: 54, scope: !4532)
!4802 = !DILocation(line: 1003, column: 2, scope: !4532)
!4803 = !DILocation(line: 1004, column: 2, scope: !4532)
!4804 = !DILocation(line: 1005, column: 1, scope: !4532)
!4805 = distinct !DISubprogram(name: "CONSTRAINT_OT_objectsolver_set_inverse", scope: !3, file: !3, line: 1073, type: !3842, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4806 = !DILocalVariable(name: "ot", arg: 1, scope: !4805, file: !3, line: 1073, type: !3844)
!4807 = !DILocation(line: 1073, column: 61, scope: !4805)
!4808 = !DILocation(line: 1076, column: 2, scope: !4805)
!4809 = !DILocation(line: 1076, column: 6, scope: !4805)
!4810 = !DILocation(line: 1076, column: 11, scope: !4805)
!4811 = !DILocation(line: 1077, column: 2, scope: !4805)
!4812 = !DILocation(line: 1077, column: 6, scope: !4805)
!4813 = !DILocation(line: 1077, column: 13, scope: !4805)
!4814 = !DILocation(line: 1078, column: 2, scope: !4805)
!4815 = !DILocation(line: 1078, column: 6, scope: !4805)
!4816 = !DILocation(line: 1078, column: 18, scope: !4805)
!4817 = !DILocation(line: 1081, column: 2, scope: !4805)
!4818 = !DILocation(line: 1081, column: 6, scope: !4805)
!4819 = !DILocation(line: 1081, column: 13, scope: !4805)
!4820 = !DILocation(line: 1082, column: 2, scope: !4805)
!4821 = !DILocation(line: 1082, column: 6, scope: !4805)
!4822 = !DILocation(line: 1082, column: 11, scope: !4805)
!4823 = !DILocation(line: 1083, column: 2, scope: !4805)
!4824 = !DILocation(line: 1083, column: 6, scope: !4805)
!4825 = !DILocation(line: 1083, column: 11, scope: !4805)
!4826 = !DILocation(line: 1086, column: 2, scope: !4805)
!4827 = !DILocation(line: 1086, column: 6, scope: !4805)
!4828 = !DILocation(line: 1086, column: 11, scope: !4805)
!4829 = !DILocation(line: 1089, column: 29, scope: !4805)
!4830 = !DILocation(line: 1089, column: 2, scope: !4805)
!4831 = !DILocation(line: 1090, column: 1, scope: !4805)
!4832 = distinct !DISubprogram(name: "objectsolver_set_inverse_invoke", scope: !3, file: !3, line: 1065, type: !4129, scopeLine: 1066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4833 = !DILocalVariable(name: "C", arg: 1, scope: !4832, file: !3, line: 1065, type: !4131)
!4834 = !DILocation(line: 1065, column: 54, scope: !4832)
!4835 = !DILocalVariable(name: "op", arg: 2, scope: !4832, file: !3, line: 1065, type: !4133)
!4836 = !DILocation(line: 1065, column: 69, scope: !4832)
!4837 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !4832, file: !3, line: 1065, type: !4135)
!4838 = !DILocation(line: 1065, column: 88, scope: !4832)
!4839 = !DILocation(line: 1067, column: 40, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4832, file: !3, line: 1067, column: 6)
!4841 = !DILocation(line: 1067, column: 43, scope: !4840)
!4842 = !DILocation(line: 1067, column: 6, scope: !4840)
!4843 = !DILocation(line: 1067, column: 6, scope: !4832)
!4844 = !DILocation(line: 1068, column: 40, scope: !4840)
!4845 = !DILocation(line: 1068, column: 43, scope: !4840)
!4846 = !DILocation(line: 1068, column: 10, scope: !4840)
!4847 = !DILocation(line: 1068, column: 3, scope: !4840)
!4848 = !DILocation(line: 1070, column: 3, scope: !4840)
!4849 = !DILocation(line: 1071, column: 1, scope: !4832)
!4850 = distinct !DISubprogram(name: "objectsolver_set_inverse_exec", scope: !3, file: !3, line: 1043, type: !4156, scopeLine: 1044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4851 = !DILocalVariable(name: "C", arg: 1, scope: !4850, file: !3, line: 1043, type: !4131)
!4852 = !DILocation(line: 1043, column: 52, scope: !4850)
!4853 = !DILocalVariable(name: "op", arg: 2, scope: !4850, file: !3, line: 1043, type: !4133)
!4854 = !DILocation(line: 1043, column: 67, scope: !4850)
!4855 = !DILocalVariable(name: "scene", scope: !4850, file: !3, line: 1045, type: !4341)
!4856 = !DILocation(line: 1045, column: 9, scope: !4850)
!4857 = !DILocation(line: 1045, column: 32, scope: !4850)
!4858 = !DILocation(line: 1045, column: 17, scope: !4850)
!4859 = !DILocalVariable(name: "ob", scope: !4850, file: !3, line: 1046, type: !2798)
!4860 = !DILocation(line: 1046, column: 10, scope: !4850)
!4861 = !DILocation(line: 1046, column: 40, scope: !4850)
!4862 = !DILocation(line: 1046, column: 15, scope: !4850)
!4863 = !DILocalVariable(name: "con", scope: !4850, file: !3, line: 1047, type: !2881)
!4864 = !DILocation(line: 1047, column: 15, scope: !4850)
!4865 = !DILocation(line: 1047, column: 50, scope: !4850)
!4866 = !DILocation(line: 1047, column: 54, scope: !4850)
!4867 = !DILocation(line: 1047, column: 21, scope: !4850)
!4868 = !DILocalVariable(name: "data", scope: !4850, file: !3, line: 1048, type: !2768)
!4869 = !DILocation(line: 1048, column: 27, scope: !4850)
!4870 = !DILocation(line: 1048, column: 35, scope: !4850)
!4871 = !DILocation(line: 1048, column: 34, scope: !4850)
!4872 = !DILocation(line: 1048, column: 69, scope: !4850)
!4873 = !DILocation(line: 1048, column: 74, scope: !4850)
!4874 = !DILocation(line: 1048, column: 42, scope: !4850)
!4875 = !DILocalVariable(name: "owner", scope: !4850, file: !3, line: 1049, type: !4363)
!4876 = !DILocation(line: 1049, column: 12, scope: !4850)
!4877 = !DILocation(line: 1049, column: 33, scope: !4850)
!4878 = !DILocation(line: 1049, column: 37, scope: !4850)
!4879 = !DILocation(line: 1049, column: 20, scope: !4850)
!4880 = !DILocation(line: 1052, column: 6, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 1052, column: 6)
!4882 = !DILocation(line: 1052, column: 11, scope: !4881)
!4883 = !DILocation(line: 1052, column: 6, scope: !4850)
!4884 = !DILocation(line: 1053, column: 60, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4881, file: !3, line: 1052, column: 20)
!4886 = !DILocation(line: 1053, column: 59, scope: !4885)
!4887 = !DILocation(line: 1053, column: 66, scope: !4885)
!4888 = !DILocation(line: 1053, column: 70, scope: !4885)
!4889 = !DILocation(line: 1053, column: 73, scope: !4885)
!4890 = !DILocation(line: 1053, column: 78, scope: !4885)
!4891 = !DILocation(line: 1053, column: 3, scope: !4885)
!4892 = !DILocation(line: 1054, column: 14, scope: !4885)
!4893 = !DILocation(line: 1054, column: 18, scope: !4885)
!4894 = !DILocation(line: 1054, column: 3, scope: !4885)
!4895 = !DILocation(line: 1055, column: 3, scope: !4885)
!4896 = !DILocation(line: 1058, column: 27, scope: !4850)
!4897 = !DILocation(line: 1058, column: 34, scope: !4850)
!4898 = !DILocation(line: 1058, column: 38, scope: !4850)
!4899 = !DILocation(line: 1058, column: 43, scope: !4850)
!4900 = !DILocation(line: 1058, column: 49, scope: !4850)
!4901 = !DILocation(line: 1058, column: 57, scope: !4850)
!4902 = !DILocation(line: 1058, column: 2, scope: !4850)
!4903 = !DILocation(line: 1060, column: 24, scope: !4850)
!4904 = !DILocation(line: 1060, column: 54, scope: !4850)
!4905 = !DILocation(line: 1060, column: 2, scope: !4850)
!4906 = !DILocation(line: 1062, column: 2, scope: !4850)
!4907 = !DILocation(line: 1063, column: 1, scope: !4850)
!4908 = distinct !DISubprogram(name: "CONSTRAINT_OT_objectsolver_clear_inverse", scope: !3, file: !3, line: 1119, type: !3842, scopeLine: 1120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4909 = !DILocalVariable(name: "ot", arg: 1, scope: !4908, file: !3, line: 1119, type: !3844)
!4910 = !DILocation(line: 1119, column: 63, scope: !4908)
!4911 = !DILocation(line: 1122, column: 2, scope: !4908)
!4912 = !DILocation(line: 1122, column: 6, scope: !4908)
!4913 = !DILocation(line: 1122, column: 11, scope: !4908)
!4914 = !DILocation(line: 1123, column: 2, scope: !4908)
!4915 = !DILocation(line: 1123, column: 6, scope: !4908)
!4916 = !DILocation(line: 1123, column: 13, scope: !4908)
!4917 = !DILocation(line: 1124, column: 2, scope: !4908)
!4918 = !DILocation(line: 1124, column: 6, scope: !4908)
!4919 = !DILocation(line: 1124, column: 18, scope: !4908)
!4920 = !DILocation(line: 1127, column: 2, scope: !4908)
!4921 = !DILocation(line: 1127, column: 6, scope: !4908)
!4922 = !DILocation(line: 1127, column: 13, scope: !4908)
!4923 = !DILocation(line: 1128, column: 2, scope: !4908)
!4924 = !DILocation(line: 1128, column: 6, scope: !4908)
!4925 = !DILocation(line: 1128, column: 11, scope: !4908)
!4926 = !DILocation(line: 1129, column: 2, scope: !4908)
!4927 = !DILocation(line: 1129, column: 6, scope: !4908)
!4928 = !DILocation(line: 1129, column: 11, scope: !4908)
!4929 = !DILocation(line: 1132, column: 2, scope: !4908)
!4930 = !DILocation(line: 1132, column: 6, scope: !4908)
!4931 = !DILocation(line: 1132, column: 11, scope: !4908)
!4932 = !DILocation(line: 1135, column: 29, scope: !4908)
!4933 = !DILocation(line: 1135, column: 2, scope: !4908)
!4934 = !DILocation(line: 1136, column: 1, scope: !4908)
!4935 = distinct !DISubprogram(name: "objectsolver_clear_inverse_invoke", scope: !3, file: !3, line: 1111, type: !4129, scopeLine: 1112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4936 = !DILocalVariable(name: "C", arg: 1, scope: !4935, file: !3, line: 1111, type: !4131)
!4937 = !DILocation(line: 1111, column: 56, scope: !4935)
!4938 = !DILocalVariable(name: "op", arg: 2, scope: !4935, file: !3, line: 1111, type: !4133)
!4939 = !DILocation(line: 1111, column: 71, scope: !4935)
!4940 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !4935, file: !3, line: 1111, type: !4135)
!4941 = !DILocation(line: 1111, column: 90, scope: !4935)
!4942 = !DILocation(line: 1113, column: 40, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 1113, column: 6)
!4944 = !DILocation(line: 1113, column: 43, scope: !4943)
!4945 = !DILocation(line: 1113, column: 6, scope: !4943)
!4946 = !DILocation(line: 1113, column: 6, scope: !4935)
!4947 = !DILocation(line: 1114, column: 42, scope: !4943)
!4948 = !DILocation(line: 1114, column: 45, scope: !4943)
!4949 = !DILocation(line: 1114, column: 10, scope: !4943)
!4950 = !DILocation(line: 1114, column: 3, scope: !4943)
!4951 = !DILocation(line: 1116, column: 3, scope: !4943)
!4952 = !DILocation(line: 1117, column: 1, scope: !4935)
!4953 = distinct !DISubprogram(name: "objectsolver_clear_inverse_exec", scope: !3, file: !3, line: 1092, type: !4156, scopeLine: 1093, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4954 = !DILocalVariable(name: "C", arg: 1, scope: !4953, file: !3, line: 1092, type: !4131)
!4955 = !DILocation(line: 1092, column: 54, scope: !4953)
!4956 = !DILocalVariable(name: "op", arg: 2, scope: !4953, file: !3, line: 1092, type: !4133)
!4957 = !DILocation(line: 1092, column: 69, scope: !4953)
!4958 = !DILocalVariable(name: "ob", scope: !4953, file: !3, line: 1094, type: !2798)
!4959 = !DILocation(line: 1094, column: 10, scope: !4953)
!4960 = !DILocation(line: 1094, column: 40, scope: !4953)
!4961 = !DILocation(line: 1094, column: 15, scope: !4953)
!4962 = !DILocalVariable(name: "con", scope: !4953, file: !3, line: 1095, type: !2881)
!4963 = !DILocation(line: 1095, column: 15, scope: !4953)
!4964 = !DILocation(line: 1095, column: 50, scope: !4953)
!4965 = !DILocation(line: 1095, column: 54, scope: !4953)
!4966 = !DILocation(line: 1095, column: 21, scope: !4953)
!4967 = !DILocalVariable(name: "data", scope: !4953, file: !3, line: 1096, type: !2768)
!4968 = !DILocation(line: 1096, column: 27, scope: !4953)
!4969 = !DILocation(line: 1096, column: 35, scope: !4953)
!4970 = !DILocation(line: 1096, column: 34, scope: !4953)
!4971 = !DILocation(line: 1096, column: 69, scope: !4953)
!4972 = !DILocation(line: 1096, column: 74, scope: !4953)
!4973 = !DILocation(line: 1096, column: 42, scope: !4953)
!4974 = !DILocation(line: 1098, column: 6, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4953, file: !3, line: 1098, column: 6)
!4976 = !DILocation(line: 1098, column: 11, scope: !4975)
!4977 = !DILocation(line: 1098, column: 6, scope: !4953)
!4978 = !DILocation(line: 1099, column: 14, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 1098, column: 20)
!4980 = !DILocation(line: 1099, column: 18, scope: !4979)
!4981 = !DILocation(line: 1099, column: 3, scope: !4979)
!4982 = !DILocation(line: 1100, column: 3, scope: !4979)
!4983 = !DILocation(line: 1104, column: 10, scope: !4953)
!4984 = !DILocation(line: 1104, column: 16, scope: !4953)
!4985 = !DILocation(line: 1104, column: 2, scope: !4953)
!4986 = !DILocation(line: 1106, column: 24, scope: !4953)
!4987 = !DILocation(line: 1106, column: 54, scope: !4953)
!4988 = !DILocation(line: 1106, column: 2, scope: !4953)
!4989 = !DILocation(line: 1108, column: 2, scope: !4953)
!4990 = !DILocation(line: 1109, column: 1, scope: !4953)
!4991 = distinct !DISubprogram(name: "ED_object_constraint_set_active", scope: !3, file: !3, line: 1140, type: !4992, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!4992 = !DISubroutineType(types: !4993)
!4993 = !{null, !2798, !2881}
!4994 = !DILocalVariable(name: "ob", arg: 1, scope: !4991, file: !3, line: 1140, type: !2798)
!4995 = !DILocation(line: 1140, column: 46, scope: !4991)
!4996 = !DILocalVariable(name: "con", arg: 2, scope: !4991, file: !3, line: 1140, type: !2881)
!4997 = !DILocation(line: 1140, column: 63, scope: !4991)
!4998 = !DILocalVariable(name: "lb", scope: !4991, file: !3, line: 1142, type: !1383)
!4999 = !DILocation(line: 1142, column: 12, scope: !4991)
!5000 = !DILocation(line: 1142, column: 35, scope: !4991)
!5001 = !DILocation(line: 1142, column: 39, scope: !4991)
!5002 = !DILocation(line: 1142, column: 17, scope: !4991)
!5003 = !DILocation(line: 1146, column: 7, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 1146, column: 6)
!5005 = !DILocation(line: 1146, column: 10, scope: !5004)
!5006 = !DILocation(line: 1146, column: 13, scope: !5004)
!5007 = !DILocation(line: 1146, column: 18, scope: !5004)
!5008 = !DILocation(line: 1146, column: 22, scope: !5004)
!5009 = !DILocation(line: 1146, column: 27, scope: !5004)
!5010 = !DILocation(line: 1146, column: 32, scope: !5004)
!5011 = !DILocation(line: 1146, column: 6, scope: !4991)
!5012 = !DILocation(line: 1147, column: 3, scope: !5004)
!5013 = !DILocation(line: 1149, column: 29, scope: !4991)
!5014 = !DILocation(line: 1149, column: 33, scope: !4991)
!5015 = !DILocation(line: 1149, column: 2, scope: !4991)
!5016 = !DILocation(line: 1150, column: 1, scope: !4991)
!5017 = distinct !DISubprogram(name: "ED_object_constraint_update", scope: !3, file: !3, line: 1152, type: !2984, scopeLine: 1153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5018 = !DILocalVariable(name: "ob", arg: 1, scope: !5017, file: !3, line: 1152, type: !2798)
!5019 = !DILocation(line: 1152, column: 42, scope: !5017)
!5020 = !DILocation(line: 1154, column: 6, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 1154, column: 6)
!5022 = !DILocation(line: 1154, column: 10, scope: !5021)
!5023 = !DILocation(line: 1154, column: 6, scope: !5017)
!5024 = !DILocation(line: 1154, column: 49, scope: !5021)
!5025 = !DILocation(line: 1154, column: 53, scope: !5021)
!5026 = !DILocation(line: 1154, column: 16, scope: !5021)
!5027 = !DILocation(line: 1156, column: 26, scope: !5017)
!5028 = !DILocation(line: 1156, column: 2, scope: !5017)
!5029 = !DILocation(line: 1158, column: 6, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 1158, column: 6)
!5031 = !DILocation(line: 1158, column: 10, scope: !5030)
!5032 = !DILocation(line: 1158, column: 15, scope: !5030)
!5033 = !DILocation(line: 1158, column: 6, scope: !5017)
!5034 = !DILocation(line: 1159, column: 22, scope: !5030)
!5035 = !DILocation(line: 1159, column: 26, scope: !5030)
!5036 = !DILocation(line: 1159, column: 3, scope: !5030)
!5037 = !DILocation(line: 1161, column: 22, scope: !5030)
!5038 = !DILocation(line: 1161, column: 26, scope: !5030)
!5039 = !DILocation(line: 1161, column: 3, scope: !5030)
!5040 = !DILocation(line: 1162, column: 1, scope: !5017)
!5041 = distinct !DISubprogram(name: "ED_object_constraint_dependency_update", scope: !3, file: !3, line: 1164, type: !5042, scopeLine: 1165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5042 = !DISubroutineType(types: !5043)
!5043 = !{null, !5044, !2798}
!5044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5045, size: 64)
!5045 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !5046, line: 104, baseType: !5047)
!5046 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !5046, line: 53, size: 15232, elements: !5048)
!5048 = !{!5049, !5051, !5052, !5053, !5054, !5055, !5056, !5057, !5058, !5062, !5063, !5064, !5065, !5066, !5067, !5068, !5069, !5070, !5071, !5072, !5073, !5074, !5075, !5076, !5077, !5078, !5079, !5080, !5081, !5082, !5083, !5084, !5085, !5086, !5087, !5088, !5089, !5090, !5091, !5092, !5093, !5094, !5095, !5096, !5097, !5098, !5099, !5105}
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5047, file: !5046, line: 54, baseType: !5050, size: 64)
!5050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5047, size: 64)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5047, file: !5046, line: 54, baseType: !5050, size: 64, offset: 64)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5047, file: !5046, line: 55, baseType: !1031, size: 8192, offset: 128)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !5047, file: !5046, line: 56, baseType: !1045, size: 16, offset: 8320)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !5047, file: !5046, line: 56, baseType: !1045, size: 16, offset: 8336)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !5047, file: !5046, line: 57, baseType: !1045, size: 16, offset: 8352)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !5047, file: !5046, line: 57, baseType: !1045, size: 16, offset: 8368)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !5047, file: !5046, line: 58, baseType: !1372, size: 64, offset: 8384)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !5047, file: !5046, line: 59, baseType: !5059, size: 128, offset: 8448)
!5059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 128, elements: !5060)
!5060 = !{!5061}
!5061 = !DISubrange(count: 16)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !5047, file: !5046, line: 60, baseType: !1045, size: 16, offset: 8576)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !5047, file: !5046, line: 62, baseType: !1021, size: 64, offset: 8640)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !5047, file: !5046, line: 63, baseType: !1072, size: 128, offset: 8704)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !5047, file: !5046, line: 64, baseType: !1072, size: 128, offset: 8832)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !5047, file: !5046, line: 65, baseType: !1072, size: 128, offset: 8960)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !5047, file: !5046, line: 66, baseType: !1072, size: 128, offset: 9088)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !5047, file: !5046, line: 67, baseType: !1072, size: 128, offset: 9216)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !5047, file: !5046, line: 68, baseType: !1072, size: 128, offset: 9344)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !5047, file: !5046, line: 69, baseType: !1072, size: 128, offset: 9472)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !5047, file: !5046, line: 70, baseType: !1072, size: 128, offset: 9600)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !5047, file: !5046, line: 71, baseType: !1072, size: 128, offset: 9728)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !5047, file: !5046, line: 72, baseType: !1072, size: 128, offset: 9856)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !5047, file: !5046, line: 73, baseType: !1072, size: 128, offset: 9984)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !5047, file: !5046, line: 74, baseType: !1072, size: 128, offset: 10112)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !5047, file: !5046, line: 75, baseType: !1072, size: 128, offset: 10240)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5047, file: !5046, line: 76, baseType: !1072, size: 128, offset: 10368)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !5047, file: !5046, line: 77, baseType: !1072, size: 128, offset: 10496)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !5047, file: !5046, line: 78, baseType: !1072, size: 128, offset: 10624)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !5047, file: !5046, line: 79, baseType: !1072, size: 128, offset: 10752)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !5047, file: !5046, line: 80, baseType: !1072, size: 128, offset: 10880)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !5047, file: !5046, line: 81, baseType: !1072, size: 128, offset: 11008)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !5047, file: !5046, line: 82, baseType: !1072, size: 128, offset: 11136)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !5047, file: !5046, line: 83, baseType: !1072, size: 128, offset: 11264)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !5047, file: !5046, line: 84, baseType: !1072, size: 128, offset: 11392)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !5047, file: !5046, line: 85, baseType: !1072, size: 128, offset: 11520)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !5047, file: !5046, line: 86, baseType: !1072, size: 128, offset: 11648)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !5047, file: !5046, line: 87, baseType: !1072, size: 128, offset: 11776)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !5047, file: !5046, line: 88, baseType: !1072, size: 128, offset: 11904)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !5047, file: !5046, line: 89, baseType: !1072, size: 128, offset: 12032)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !5047, file: !5046, line: 90, baseType: !1072, size: 128, offset: 12160)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !5047, file: !5046, line: 91, baseType: !1072, size: 128, offset: 12288)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !5047, file: !5046, line: 92, baseType: !1072, size: 128, offset: 12416)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !5047, file: !5046, line: 93, baseType: !1072, size: 128, offset: 12544)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !5047, file: !5046, line: 94, baseType: !1072, size: 128, offset: 12672)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !5047, file: !5046, line: 95, baseType: !1072, size: 128, offset: 12800)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !5047, file: !5046, line: 96, baseType: !1072, size: 128, offset: 12928)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !5047, file: !5046, line: 98, baseType: !1569, size: 2048, offset: 13056)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !5047, file: !5046, line: 101, baseType: !5100, size: 64, offset: 15104)
!5100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5101, size: 64)
!5101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !5102, line: 58, size: 32, elements: !5103)
!5102 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5103 = !{!5104}
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5101, file: !5102, line: 59, baseType: !1047, size: 32)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5047, file: !5046, line: 103, baseType: !5106, size: 64, offset: 15168)
!5106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5107, size: 64)
!5107 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !5046, line: 51, flags: DIFlagFwdDecl)
!5108 = !DILocalVariable(name: "bmain", arg: 1, scope: !5041, file: !3, line: 1164, type: !5044)
!5109 = !DILocation(line: 1164, column: 51, scope: !5041)
!5110 = !DILocalVariable(name: "ob", arg: 2, scope: !5041, file: !3, line: 1164, type: !2798)
!5111 = !DILocation(line: 1164, column: 66, scope: !5041)
!5112 = !DILocation(line: 1166, column: 30, scope: !5041)
!5113 = !DILocation(line: 1166, column: 2, scope: !5041)
!5114 = !DILocation(line: 1168, column: 6, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5041, file: !3, line: 1168, column: 6)
!5116 = !DILocation(line: 1168, column: 10, scope: !5115)
!5117 = !DILocation(line: 1168, column: 6, scope: !5041)
!5118 = !DILocation(line: 1168, column: 16, scope: !5115)
!5119 = !DILocation(line: 1168, column: 20, scope: !5115)
!5120 = !DILocation(line: 1168, column: 26, scope: !5115)
!5121 = !DILocation(line: 1168, column: 31, scope: !5115)
!5122 = !DILocation(line: 1169, column: 27, scope: !5041)
!5123 = !DILocation(line: 1169, column: 2, scope: !5041)
!5124 = !DILocation(line: 1170, column: 1, scope: !5041)
!5125 = distinct !DISubprogram(name: "CONSTRAINT_OT_delete", scope: !3, file: !3, line: 1210, type: !3842, scopeLine: 1211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5126 = !DILocalVariable(name: "ot", arg: 1, scope: !5125, file: !3, line: 1210, type: !3844)
!5127 = !DILocation(line: 1210, column: 43, scope: !5125)
!5128 = !DILocation(line: 1213, column: 2, scope: !5125)
!5129 = !DILocation(line: 1213, column: 6, scope: !5125)
!5130 = !DILocation(line: 1213, column: 11, scope: !5125)
!5131 = !DILocation(line: 1214, column: 2, scope: !5125)
!5132 = !DILocation(line: 1214, column: 6, scope: !5125)
!5133 = !DILocation(line: 1214, column: 13, scope: !5125)
!5134 = !DILocation(line: 1215, column: 2, scope: !5125)
!5135 = !DILocation(line: 1215, column: 6, scope: !5125)
!5136 = !DILocation(line: 1215, column: 18, scope: !5125)
!5137 = !DILocation(line: 1218, column: 2, scope: !5125)
!5138 = !DILocation(line: 1218, column: 6, scope: !5125)
!5139 = !DILocation(line: 1218, column: 11, scope: !5125)
!5140 = !DILocation(line: 1219, column: 2, scope: !5125)
!5141 = !DILocation(line: 1219, column: 6, scope: !5125)
!5142 = !DILocation(line: 1219, column: 11, scope: !5125)
!5143 = !DILocation(line: 1222, column: 2, scope: !5125)
!5144 = !DILocation(line: 1222, column: 6, scope: !5125)
!5145 = !DILocation(line: 1222, column: 11, scope: !5125)
!5146 = !DILocation(line: 1223, column: 1, scope: !5125)
!5147 = distinct !DISubprogram(name: "constraint_delete_exec", scope: !3, file: !3, line: 1179, type: !4156, scopeLine: 1180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5148 = !DILocalVariable(name: "C", arg: 1, scope: !5147, file: !3, line: 1179, type: !4131)
!5149 = !DILocation(line: 1179, column: 45, scope: !5147)
!5150 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !5147, file: !3, line: 1179, type: !4133)
!5151 = !DILocation(line: 1179, column: 60, scope: !5147)
!5152 = !DILocalVariable(name: "ptr", scope: !5147, file: !3, line: 1181, type: !4700)
!5153 = !DILocation(line: 1181, column: 13, scope: !5147)
!5154 = !DILocation(line: 1181, column: 45, scope: !5147)
!5155 = !DILocation(line: 1181, column: 19, scope: !5147)
!5156 = !DILocalVariable(name: "ob", scope: !5147, file: !3, line: 1182, type: !2798)
!5157 = !DILocation(line: 1182, column: 10, scope: !5147)
!5158 = !DILocation(line: 1182, column: 19, scope: !5147)
!5159 = !DILocation(line: 1182, column: 22, scope: !5147)
!5160 = !DILocation(line: 1182, column: 15, scope: !5147)
!5161 = !DILocalVariable(name: "con", scope: !5147, file: !3, line: 1183, type: !2881)
!5162 = !DILocation(line: 1183, column: 15, scope: !5147)
!5163 = !DILocation(line: 1183, column: 25, scope: !5147)
!5164 = !DILocation(line: 1183, column: 21, scope: !5147)
!5165 = !DILocalVariable(name: "lb", scope: !5147, file: !3, line: 1184, type: !1383)
!5166 = !DILocation(line: 1184, column: 12, scope: !5147)
!5167 = !DILocation(line: 1184, column: 35, scope: !5147)
!5168 = !DILocation(line: 1184, column: 39, scope: !5147)
!5169 = !DILocation(line: 1184, column: 17, scope: !5147)
!5170 = !DILocalVariable(name: "is_ik", scope: !5147, file: !3, line: 1185, type: !5171)
!5171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1963)
!5172 = !DILocation(line: 1185, column: 13, scope: !5147)
!5173 = !DILocation(line: 1185, column: 21, scope: !5147)
!5174 = !DILocation(line: 1188, column: 28, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5147, file: !3, line: 1188, column: 6)
!5176 = !DILocation(line: 1188, column: 32, scope: !5175)
!5177 = !DILocation(line: 1188, column: 6, scope: !5175)
!5178 = !DILocation(line: 1188, column: 6, scope: !5147)
!5179 = !DILocation(line: 1190, column: 30, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5175, file: !3, line: 1188, column: 38)
!5181 = !DILocation(line: 1190, column: 3, scope: !5180)
!5182 = !DILocation(line: 1192, column: 31, scope: !5180)
!5183 = !DILocation(line: 1192, column: 3, scope: !5180)
!5184 = !DILocation(line: 1195, column: 7, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5180, file: !3, line: 1195, column: 7)
!5186 = !DILocation(line: 1195, column: 7, scope: !5180)
!5187 = !DILocation(line: 1196, column: 19, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5185, file: !3, line: 1195, column: 14)
!5189 = !DILocation(line: 1196, column: 23, scope: !5188)
!5190 = !DILocation(line: 1196, column: 4, scope: !5188)
!5191 = !DILocation(line: 1197, column: 3, scope: !5188)
!5192 = !DILocation(line: 1200, column: 25, scope: !5180)
!5193 = !DILocation(line: 1200, column: 68, scope: !5180)
!5194 = !DILocation(line: 1200, column: 3, scope: !5180)
!5195 = !DILocation(line: 1202, column: 3, scope: !5180)
!5196 = !DILocation(line: 1206, column: 3, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5175, file: !3, line: 1204, column: 7)
!5198 = !DILocation(line: 1208, column: 1, scope: !5147)
!5199 = distinct !DISubprogram(name: "constraint_poll", scope: !3, file: !3, line: 1172, type: !4193, scopeLine: 1173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5200 = !DILocalVariable(name: "C", arg: 1, scope: !5199, file: !3, line: 1172, type: !4131)
!5201 = !DILocation(line: 1172, column: 38, scope: !5199)
!5202 = !DILocalVariable(name: "ptr", scope: !5199, file: !3, line: 1174, type: !4700)
!5203 = !DILocation(line: 1174, column: 13, scope: !5199)
!5204 = !DILocation(line: 1174, column: 45, scope: !5199)
!5205 = !DILocation(line: 1174, column: 19, scope: !5199)
!5206 = !DILocation(line: 1175, column: 14, scope: !5199)
!5207 = !DILocation(line: 1175, column: 17, scope: !5199)
!5208 = !DILocation(line: 1175, column: 10, scope: !5199)
!5209 = !DILocation(line: 1175, column: 22, scope: !5199)
!5210 = !DILocation(line: 1175, column: 29, scope: !5199)
!5211 = !DILocation(line: 0, scope: !5199)
!5212 = !DILocation(line: 1175, column: 2, scope: !5199)
!5213 = distinct !DISubprogram(name: "CONSTRAINT_OT_move_down", scope: !3, file: !3, line: 1255, type: !3842, scopeLine: 1256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5214 = !DILocalVariable(name: "ot", arg: 1, scope: !5213, file: !3, line: 1255, type: !3844)
!5215 = !DILocation(line: 1255, column: 46, scope: !5213)
!5216 = !DILocation(line: 1258, column: 2, scope: !5213)
!5217 = !DILocation(line: 1258, column: 6, scope: !5213)
!5218 = !DILocation(line: 1258, column: 11, scope: !5213)
!5219 = !DILocation(line: 1259, column: 2, scope: !5213)
!5220 = !DILocation(line: 1259, column: 6, scope: !5213)
!5221 = !DILocation(line: 1259, column: 13, scope: !5213)
!5222 = !DILocation(line: 1260, column: 2, scope: !5213)
!5223 = !DILocation(line: 1260, column: 6, scope: !5213)
!5224 = !DILocation(line: 1260, column: 18, scope: !5213)
!5225 = !DILocation(line: 1263, column: 2, scope: !5213)
!5226 = !DILocation(line: 1263, column: 6, scope: !5213)
!5227 = !DILocation(line: 1263, column: 13, scope: !5213)
!5228 = !DILocation(line: 1264, column: 2, scope: !5213)
!5229 = !DILocation(line: 1264, column: 6, scope: !5213)
!5230 = !DILocation(line: 1264, column: 11, scope: !5213)
!5231 = !DILocation(line: 1265, column: 2, scope: !5213)
!5232 = !DILocation(line: 1265, column: 6, scope: !5213)
!5233 = !DILocation(line: 1265, column: 11, scope: !5213)
!5234 = !DILocation(line: 1268, column: 2, scope: !5213)
!5235 = !DILocation(line: 1268, column: 6, scope: !5213)
!5236 = !DILocation(line: 1268, column: 11, scope: !5213)
!5237 = !DILocation(line: 1271, column: 29, scope: !5213)
!5238 = !DILocation(line: 1271, column: 2, scope: !5213)
!5239 = !DILocation(line: 1272, column: 1, scope: !5213)
!5240 = distinct !DISubprogram(name: "constraint_move_down_invoke", scope: !3, file: !3, line: 1247, type: !4129, scopeLine: 1248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5241 = !DILocalVariable(name: "C", arg: 1, scope: !5240, file: !3, line: 1247, type: !4131)
!5242 = !DILocation(line: 1247, column: 50, scope: !5240)
!5243 = !DILocalVariable(name: "op", arg: 2, scope: !5240, file: !3, line: 1247, type: !4133)
!5244 = !DILocation(line: 1247, column: 65, scope: !5240)
!5245 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !5240, file: !3, line: 1247, type: !4135)
!5246 = !DILocation(line: 1247, column: 84, scope: !5240)
!5247 = !DILocation(line: 1249, column: 40, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5240, file: !3, line: 1249, column: 6)
!5249 = !DILocation(line: 1249, column: 43, scope: !5248)
!5250 = !DILocation(line: 1249, column: 6, scope: !5248)
!5251 = !DILocation(line: 1249, column: 6, scope: !5240)
!5252 = !DILocation(line: 1250, column: 36, scope: !5248)
!5253 = !DILocation(line: 1250, column: 39, scope: !5248)
!5254 = !DILocation(line: 1250, column: 10, scope: !5248)
!5255 = !DILocation(line: 1250, column: 3, scope: !5248)
!5256 = !DILocation(line: 1252, column: 3, scope: !5248)
!5257 = !DILocation(line: 1253, column: 1, scope: !5240)
!5258 = distinct !DISubprogram(name: "constraint_move_down_exec", scope: !3, file: !3, line: 1226, type: !4156, scopeLine: 1227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5259 = !DILocalVariable(name: "C", arg: 1, scope: !5258, file: !3, line: 1226, type: !4131)
!5260 = !DILocation(line: 1226, column: 48, scope: !5258)
!5261 = !DILocalVariable(name: "op", arg: 2, scope: !5258, file: !3, line: 1226, type: !4133)
!5262 = !DILocation(line: 1226, column: 63, scope: !5258)
!5263 = !DILocalVariable(name: "ob", scope: !5258, file: !3, line: 1228, type: !2798)
!5264 = !DILocation(line: 1228, column: 10, scope: !5258)
!5265 = !DILocation(line: 1228, column: 40, scope: !5258)
!5266 = !DILocation(line: 1228, column: 15, scope: !5258)
!5267 = !DILocalVariable(name: "con", scope: !5258, file: !3, line: 1229, type: !2881)
!5268 = !DILocation(line: 1229, column: 15, scope: !5258)
!5269 = !DILocation(line: 1229, column: 50, scope: !5258)
!5270 = !DILocation(line: 1229, column: 54, scope: !5258)
!5271 = !DILocation(line: 1229, column: 21, scope: !5258)
!5272 = !DILocation(line: 1231, column: 6, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 1231, column: 6)
!5274 = !DILocation(line: 1231, column: 10, scope: !5273)
!5275 = !DILocation(line: 1231, column: 13, scope: !5273)
!5276 = !DILocation(line: 1231, column: 18, scope: !5273)
!5277 = !DILocation(line: 1231, column: 6, scope: !5258)
!5278 = !DILocalVariable(name: "conlist", scope: !5279, file: !3, line: 1232, type: !1383)
!5279 = distinct !DILexicalBlock(scope: !5273, file: !3, line: 1231, column: 24)
!5280 = !DILocation(line: 1232, column: 13, scope: !5279)
!5281 = !DILocation(line: 1232, column: 41, scope: !5279)
!5282 = !DILocation(line: 1232, column: 45, scope: !5279)
!5283 = !DILocation(line: 1232, column: 23, scope: !5279)
!5284 = !DILocalVariable(name: "nextCon", scope: !5279, file: !3, line: 1233, type: !2881)
!5285 = !DILocation(line: 1233, column: 16, scope: !5279)
!5286 = !DILocation(line: 1233, column: 26, scope: !5279)
!5287 = !DILocation(line: 1233, column: 31, scope: !5279)
!5288 = !DILocation(line: 1236, column: 15, scope: !5279)
!5289 = !DILocation(line: 1236, column: 24, scope: !5279)
!5290 = !DILocation(line: 1236, column: 3, scope: !5279)
!5291 = !DILocation(line: 1237, column: 23, scope: !5279)
!5292 = !DILocation(line: 1237, column: 32, scope: !5279)
!5293 = !DILocation(line: 1237, column: 41, scope: !5279)
!5294 = !DILocation(line: 1237, column: 3, scope: !5279)
!5295 = !DILocation(line: 1239, column: 25, scope: !5279)
!5296 = !DILocation(line: 1239, column: 55, scope: !5279)
!5297 = !DILocation(line: 1239, column: 3, scope: !5279)
!5298 = !DILocation(line: 1241, column: 3, scope: !5279)
!5299 = !DILocation(line: 1244, column: 2, scope: !5258)
!5300 = !DILocation(line: 1245, column: 1, scope: !5258)
!5301 = distinct !DISubprogram(name: "CONSTRAINT_OT_move_up", scope: !3, file: !3, line: 1304, type: !3842, scopeLine: 1305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5302 = !DILocalVariable(name: "ot", arg: 1, scope: !5301, file: !3, line: 1304, type: !3844)
!5303 = !DILocation(line: 1304, column: 44, scope: !5301)
!5304 = !DILocation(line: 1307, column: 2, scope: !5301)
!5305 = !DILocation(line: 1307, column: 6, scope: !5301)
!5306 = !DILocation(line: 1307, column: 11, scope: !5301)
!5307 = !DILocation(line: 1308, column: 2, scope: !5301)
!5308 = !DILocation(line: 1308, column: 6, scope: !5301)
!5309 = !DILocation(line: 1308, column: 13, scope: !5301)
!5310 = !DILocation(line: 1309, column: 2, scope: !5301)
!5311 = !DILocation(line: 1309, column: 6, scope: !5301)
!5312 = !DILocation(line: 1309, column: 18, scope: !5301)
!5313 = !DILocation(line: 1312, column: 2, scope: !5301)
!5314 = !DILocation(line: 1312, column: 6, scope: !5301)
!5315 = !DILocation(line: 1312, column: 11, scope: !5301)
!5316 = !DILocation(line: 1313, column: 2, scope: !5301)
!5317 = !DILocation(line: 1313, column: 6, scope: !5301)
!5318 = !DILocation(line: 1313, column: 13, scope: !5301)
!5319 = !DILocation(line: 1314, column: 2, scope: !5301)
!5320 = !DILocation(line: 1314, column: 6, scope: !5301)
!5321 = !DILocation(line: 1314, column: 11, scope: !5301)
!5322 = !DILocation(line: 1317, column: 2, scope: !5301)
!5323 = !DILocation(line: 1317, column: 6, scope: !5301)
!5324 = !DILocation(line: 1317, column: 11, scope: !5301)
!5325 = !DILocation(line: 1318, column: 29, scope: !5301)
!5326 = !DILocation(line: 1318, column: 2, scope: !5301)
!5327 = !DILocation(line: 1319, column: 1, scope: !5301)
!5328 = distinct !DISubprogram(name: "constraint_move_up_exec", scope: !3, file: !3, line: 1275, type: !4156, scopeLine: 1276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5329 = !DILocalVariable(name: "C", arg: 1, scope: !5328, file: !3, line: 1275, type: !4131)
!5330 = !DILocation(line: 1275, column: 46, scope: !5328)
!5331 = !DILocalVariable(name: "op", arg: 2, scope: !5328, file: !3, line: 1275, type: !4133)
!5332 = !DILocation(line: 1275, column: 61, scope: !5328)
!5333 = !DILocalVariable(name: "ob", scope: !5328, file: !3, line: 1277, type: !2798)
!5334 = !DILocation(line: 1277, column: 10, scope: !5328)
!5335 = !DILocation(line: 1277, column: 40, scope: !5328)
!5336 = !DILocation(line: 1277, column: 15, scope: !5328)
!5337 = !DILocalVariable(name: "con", scope: !5328, file: !3, line: 1278, type: !2881)
!5338 = !DILocation(line: 1278, column: 15, scope: !5328)
!5339 = !DILocation(line: 1278, column: 50, scope: !5328)
!5340 = !DILocation(line: 1278, column: 54, scope: !5328)
!5341 = !DILocation(line: 1278, column: 21, scope: !5328)
!5342 = !DILocation(line: 1280, column: 6, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5328, file: !3, line: 1280, column: 6)
!5344 = !DILocation(line: 1280, column: 10, scope: !5343)
!5345 = !DILocation(line: 1280, column: 13, scope: !5343)
!5346 = !DILocation(line: 1280, column: 18, scope: !5343)
!5347 = !DILocation(line: 1280, column: 6, scope: !5328)
!5348 = !DILocalVariable(name: "conlist", scope: !5349, file: !3, line: 1281, type: !1383)
!5349 = distinct !DILexicalBlock(scope: !5343, file: !3, line: 1280, column: 24)
!5350 = !DILocation(line: 1281, column: 13, scope: !5349)
!5351 = !DILocation(line: 1281, column: 41, scope: !5349)
!5352 = !DILocation(line: 1281, column: 45, scope: !5349)
!5353 = !DILocation(line: 1281, column: 23, scope: !5349)
!5354 = !DILocalVariable(name: "prevCon", scope: !5349, file: !3, line: 1282, type: !2881)
!5355 = !DILocation(line: 1282, column: 16, scope: !5349)
!5356 = !DILocation(line: 1282, column: 26, scope: !5349)
!5357 = !DILocation(line: 1282, column: 31, scope: !5349)
!5358 = !DILocation(line: 1285, column: 15, scope: !5349)
!5359 = !DILocation(line: 1285, column: 24, scope: !5349)
!5360 = !DILocation(line: 1285, column: 3, scope: !5349)
!5361 = !DILocation(line: 1286, column: 24, scope: !5349)
!5362 = !DILocation(line: 1286, column: 33, scope: !5349)
!5363 = !DILocation(line: 1286, column: 42, scope: !5349)
!5364 = !DILocation(line: 1286, column: 3, scope: !5349)
!5365 = !DILocation(line: 1288, column: 25, scope: !5349)
!5366 = !DILocation(line: 1288, column: 55, scope: !5349)
!5367 = !DILocation(line: 1288, column: 3, scope: !5349)
!5368 = !DILocation(line: 1290, column: 3, scope: !5349)
!5369 = !DILocation(line: 1293, column: 2, scope: !5328)
!5370 = !DILocation(line: 1294, column: 1, scope: !5328)
!5371 = distinct !DISubprogram(name: "constraint_move_up_invoke", scope: !3, file: !3, line: 1296, type: !4129, scopeLine: 1297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5372 = !DILocalVariable(name: "C", arg: 1, scope: !5371, file: !3, line: 1296, type: !4131)
!5373 = !DILocation(line: 1296, column: 48, scope: !5371)
!5374 = !DILocalVariable(name: "op", arg: 2, scope: !5371, file: !3, line: 1296, type: !4133)
!5375 = !DILocation(line: 1296, column: 63, scope: !5371)
!5376 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !5371, file: !3, line: 1296, type: !4135)
!5377 = !DILocation(line: 1296, column: 82, scope: !5371)
!5378 = !DILocation(line: 1298, column: 40, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 1298, column: 6)
!5380 = !DILocation(line: 1298, column: 43, scope: !5379)
!5381 = !DILocation(line: 1298, column: 6, scope: !5379)
!5382 = !DILocation(line: 1298, column: 6, scope: !5371)
!5383 = !DILocation(line: 1299, column: 34, scope: !5379)
!5384 = !DILocation(line: 1299, column: 37, scope: !5379)
!5385 = !DILocation(line: 1299, column: 10, scope: !5379)
!5386 = !DILocation(line: 1299, column: 3, scope: !5379)
!5387 = !DILocation(line: 1301, column: 3, scope: !5379)
!5388 = !DILocation(line: 1302, column: 1, scope: !5371)
!5389 = distinct !DISubprogram(name: "POSE_OT_constraints_clear", scope: !3, file: !3, line: 1350, type: !3842, scopeLine: 1351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5390 = !DILocalVariable(name: "ot", arg: 1, scope: !5389, file: !3, line: 1350, type: !3844)
!5391 = !DILocation(line: 1350, column: 48, scope: !5389)
!5392 = !DILocation(line: 1353, column: 2, scope: !5389)
!5393 = !DILocation(line: 1353, column: 6, scope: !5389)
!5394 = !DILocation(line: 1353, column: 11, scope: !5389)
!5395 = !DILocation(line: 1354, column: 2, scope: !5389)
!5396 = !DILocation(line: 1354, column: 6, scope: !5389)
!5397 = !DILocation(line: 1354, column: 13, scope: !5389)
!5398 = !DILocation(line: 1355, column: 2, scope: !5389)
!5399 = !DILocation(line: 1355, column: 6, scope: !5389)
!5400 = !DILocation(line: 1355, column: 18, scope: !5389)
!5401 = !DILocation(line: 1358, column: 2, scope: !5389)
!5402 = !DILocation(line: 1358, column: 6, scope: !5389)
!5403 = !DILocation(line: 1358, column: 11, scope: !5389)
!5404 = !DILocation(line: 1359, column: 2, scope: !5389)
!5405 = !DILocation(line: 1359, column: 6, scope: !5389)
!5406 = !DILocation(line: 1359, column: 11, scope: !5389)
!5407 = !DILocation(line: 1360, column: 1, scope: !5389)
!5408 = distinct !DISubprogram(name: "pose_constraints_clear_exec", scope: !3, file: !3, line: 1325, type: !4156, scopeLine: 1326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5409 = !DILocalVariable(name: "C", arg: 1, scope: !5408, file: !3, line: 1325, type: !4131)
!5410 = !DILocation(line: 1325, column: 50, scope: !5408)
!5411 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !5408, file: !3, line: 1325, type: !4133)
!5412 = !DILocation(line: 1325, column: 65, scope: !5408)
!5413 = !DILocalVariable(name: "bmain", scope: !5408, file: !3, line: 1327, type: !5044)
!5414 = !DILocation(line: 1327, column: 8, scope: !5408)
!5415 = !DILocation(line: 1327, column: 30, scope: !5408)
!5416 = !DILocation(line: 1327, column: 16, scope: !5408)
!5417 = !DILocalVariable(name: "ob", scope: !5408, file: !3, line: 1328, type: !2798)
!5418 = !DILocation(line: 1328, column: 10, scope: !5408)
!5419 = !DILocation(line: 1328, column: 67, scope: !5408)
!5420 = !DILocation(line: 1328, column: 44, scope: !5408)
!5421 = !DILocation(line: 1328, column: 15, scope: !5408)
!5422 = !DILocalVariable(name: "ctx_data_list", scope: !5423, file: !3, line: 1331, type: !1072)
!5423 = distinct !DILexicalBlock(scope: !5408, file: !3, line: 1331, column: 2)
!5424 = !DILocation(line: 1331, column: 2, scope: !5423)
!5425 = !DILocalVariable(name: "ctx_link", scope: !5423, file: !3, line: 1331, type: !5426)
!5426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5427, size: 64)
!5427 = !DIDerivedType(tag: DW_TAG_typedef, name: "CollectionPointerLink", file: !1453, line: 284, baseType: !5428)
!5428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CollectionPointerLink", file: !1453, line: 281, size: 320, elements: !5429)
!5429 = !{!5430, !5432, !5433}
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5428, file: !1453, line: 282, baseType: !5431, size: 64)
!5431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5428, size: 64)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5428, file: !1453, line: 282, baseType: !5431, size: 64, offset: 64)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5428, file: !1453, line: 283, baseType: !4700, size: 192, offset: 128)
!5434 = !DILocation(line: 1331, column: 2, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 1331, column: 2)
!5436 = !DILocation(line: 1331, column: 2, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 1331, column: 2)
!5438 = !DILocalVariable(name: "pchan", scope: !5439, file: !3, line: 1331, type: !2815)
!5439 = distinct !DILexicalBlock(scope: !5437, file: !3, line: 1331, column: 2)
!5440 = !DILocation(line: 1331, column: 2, scope: !5439)
!5441 = !DILocation(line: 1333, column: 25, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5439, file: !3, line: 1332, column: 2)
!5443 = !DILocation(line: 1333, column: 32, scope: !5442)
!5444 = !DILocation(line: 1333, column: 3, scope: !5442)
!5445 = !DILocation(line: 1334, column: 3, scope: !5442)
!5446 = !DILocation(line: 1334, column: 10, scope: !5442)
!5447 = !DILocation(line: 1334, column: 20, scope: !5442)
!5448 = !DILocation(line: 1336, column: 2, scope: !5439)
!5449 = distinct !{!5449, !5434, !5450}
!5450 = !DILocation(line: 1336, column: 2, scope: !5435)
!5451 = !DILocation(line: 1336, column: 2, scope: !5423)
!5452 = !DILocation(line: 1339, column: 27, scope: !5408)
!5453 = !DILocation(line: 1339, column: 2, scope: !5408)
!5454 = !DILocation(line: 1344, column: 21, scope: !5408)
!5455 = !DILocation(line: 1344, column: 25, scope: !5408)
!5456 = !DILocation(line: 1344, column: 2, scope: !5408)
!5457 = !DILocation(line: 1345, column: 24, scope: !5408)
!5458 = !DILocation(line: 1345, column: 67, scope: !5408)
!5459 = !DILocation(line: 1345, column: 2, scope: !5408)
!5460 = !DILocation(line: 1347, column: 2, scope: !5408)
!5461 = distinct !DISubprogram(name: "OBJECT_OT_constraints_clear", scope: !3, file: !3, line: 1384, type: !3842, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5462 = !DILocalVariable(name: "ot", arg: 1, scope: !5461, file: !3, line: 1384, type: !3844)
!5463 = !DILocation(line: 1384, column: 50, scope: !5461)
!5464 = !DILocation(line: 1387, column: 2, scope: !5461)
!5465 = !DILocation(line: 1387, column: 6, scope: !5461)
!5466 = !DILocation(line: 1387, column: 11, scope: !5461)
!5467 = !DILocation(line: 1388, column: 2, scope: !5461)
!5468 = !DILocation(line: 1388, column: 6, scope: !5461)
!5469 = !DILocation(line: 1388, column: 13, scope: !5461)
!5470 = !DILocation(line: 1389, column: 2, scope: !5461)
!5471 = !DILocation(line: 1389, column: 6, scope: !5461)
!5472 = !DILocation(line: 1389, column: 18, scope: !5461)
!5473 = !DILocation(line: 1392, column: 2, scope: !5461)
!5474 = !DILocation(line: 1392, column: 6, scope: !5461)
!5475 = !DILocation(line: 1392, column: 11, scope: !5461)
!5476 = !DILocation(line: 1393, column: 2, scope: !5461)
!5477 = !DILocation(line: 1393, column: 6, scope: !5461)
!5478 = !DILocation(line: 1393, column: 11, scope: !5461)
!5479 = !DILocation(line: 1394, column: 1, scope: !5461)
!5480 = distinct !DISubprogram(name: "object_constraints_clear_exec", scope: !3, file: !3, line: 1363, type: !4156, scopeLine: 1364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5481 = !DILocalVariable(name: "C", arg: 1, scope: !5480, file: !3, line: 1363, type: !4131)
!5482 = !DILocation(line: 1363, column: 52, scope: !5480)
!5483 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !5480, file: !3, line: 1363, type: !4133)
!5484 = !DILocation(line: 1363, column: 67, scope: !5480)
!5485 = !DILocalVariable(name: "bmain", scope: !5480, file: !3, line: 1365, type: !5044)
!5486 = !DILocation(line: 1365, column: 8, scope: !5480)
!5487 = !DILocation(line: 1365, column: 30, scope: !5480)
!5488 = !DILocation(line: 1365, column: 16, scope: !5480)
!5489 = !DILocalVariable(name: "ctx_data_list", scope: !5490, file: !3, line: 1368, type: !1072)
!5490 = distinct !DILexicalBlock(scope: !5480, file: !3, line: 1368, column: 2)
!5491 = !DILocation(line: 1368, column: 2, scope: !5490)
!5492 = !DILocalVariable(name: "ctx_link", scope: !5490, file: !3, line: 1368, type: !5426)
!5493 = !DILocation(line: 1368, column: 2, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5490, file: !3, line: 1368, column: 2)
!5495 = !DILocation(line: 1368, column: 2, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5494, file: !3, line: 1368, column: 2)
!5497 = !DILocalVariable(name: "ob", scope: !5498, file: !3, line: 1368, type: !2798)
!5498 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 1368, column: 2)
!5499 = !DILocation(line: 1368, column: 2, scope: !5498)
!5500 = !DILocation(line: 1370, column: 25, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 1369, column: 2)
!5502 = !DILocation(line: 1370, column: 29, scope: !5501)
!5503 = !DILocation(line: 1370, column: 3, scope: !5501)
!5504 = !DILocation(line: 1371, column: 22, scope: !5501)
!5505 = !DILocation(line: 1371, column: 26, scope: !5501)
!5506 = !DILocation(line: 1371, column: 3, scope: !5501)
!5507 = !DILocation(line: 1373, column: 2, scope: !5498)
!5508 = distinct !{!5508, !5493, !5509}
!5509 = !DILocation(line: 1373, column: 2, scope: !5494)
!5510 = !DILocation(line: 1373, column: 2, scope: !5490)
!5511 = !DILocation(line: 1376, column: 27, scope: !5480)
!5512 = !DILocation(line: 1376, column: 2, scope: !5480)
!5513 = !DILocation(line: 1379, column: 24, scope: !5480)
!5514 = !DILocation(line: 1379, column: 2, scope: !5480)
!5515 = !DILocation(line: 1381, column: 2, scope: !5480)
!5516 = distinct !DISubprogram(name: "POSE_OT_constraints_copy", scope: !3, file: !3, line: 1429, type: !3842, scopeLine: 1430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5517 = !DILocalVariable(name: "ot", arg: 1, scope: !5516, file: !3, line: 1429, type: !3844)
!5518 = !DILocation(line: 1429, column: 47, scope: !5516)
!5519 = !DILocation(line: 1432, column: 2, scope: !5516)
!5520 = !DILocation(line: 1432, column: 6, scope: !5516)
!5521 = !DILocation(line: 1432, column: 11, scope: !5516)
!5522 = !DILocation(line: 1433, column: 2, scope: !5516)
!5523 = !DILocation(line: 1433, column: 6, scope: !5516)
!5524 = !DILocation(line: 1433, column: 13, scope: !5516)
!5525 = !DILocation(line: 1434, column: 2, scope: !5516)
!5526 = !DILocation(line: 1434, column: 6, scope: !5516)
!5527 = !DILocation(line: 1434, column: 18, scope: !5516)
!5528 = !DILocation(line: 1437, column: 2, scope: !5516)
!5529 = !DILocation(line: 1437, column: 6, scope: !5516)
!5530 = !DILocation(line: 1437, column: 11, scope: !5516)
!5531 = !DILocation(line: 1438, column: 2, scope: !5516)
!5532 = !DILocation(line: 1438, column: 6, scope: !5516)
!5533 = !DILocation(line: 1438, column: 11, scope: !5516)
!5534 = !DILocation(line: 1441, column: 2, scope: !5516)
!5535 = !DILocation(line: 1441, column: 6, scope: !5516)
!5536 = !DILocation(line: 1441, column: 11, scope: !5516)
!5537 = !DILocation(line: 1442, column: 1, scope: !5516)
!5538 = distinct !DISubprogram(name: "pose_constraint_copy_exec", scope: !3, file: !3, line: 1398, type: !4156, scopeLine: 1399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5539 = !DILocalVariable(name: "C", arg: 1, scope: !5538, file: !3, line: 1398, type: !4131)
!5540 = !DILocation(line: 1398, column: 48, scope: !5538)
!5541 = !DILocalVariable(name: "op", arg: 2, scope: !5538, file: !3, line: 1398, type: !4133)
!5542 = !DILocation(line: 1398, column: 63, scope: !5538)
!5543 = !DILocalVariable(name: "bmain", scope: !5538, file: !3, line: 1400, type: !5044)
!5544 = !DILocation(line: 1400, column: 8, scope: !5538)
!5545 = !DILocation(line: 1400, column: 30, scope: !5538)
!5546 = !DILocation(line: 1400, column: 16, scope: !5538)
!5547 = !DILocalVariable(name: "pchan", scope: !5538, file: !3, line: 1401, type: !2815)
!5548 = !DILocation(line: 1401, column: 16, scope: !5538)
!5549 = !DILocation(line: 1401, column: 50, scope: !5538)
!5550 = !DILocation(line: 1401, column: 24, scope: !5538)
!5551 = !DILocation(line: 1404, column: 6, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5538, file: !3, line: 1404, column: 6)
!5553 = !DILocation(line: 1404, column: 6, scope: !5538)
!5554 = !DILocation(line: 1405, column: 14, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5552, file: !3, line: 1404, column: 51)
!5556 = !DILocation(line: 1405, column: 18, scope: !5555)
!5557 = !DILocation(line: 1405, column: 3, scope: !5555)
!5558 = !DILocation(line: 1406, column: 3, scope: !5555)
!5559 = !DILocalVariable(name: "ctx_data_list", scope: !5560, file: !3, line: 1410, type: !1072)
!5560 = distinct !DILexicalBlock(scope: !5538, file: !3, line: 1410, column: 2)
!5561 = !DILocation(line: 1410, column: 2, scope: !5560)
!5562 = !DILocalVariable(name: "ctx_link", scope: !5560, file: !3, line: 1410, type: !5426)
!5563 = !DILocation(line: 1410, column: 2, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 1410, column: 2)
!5565 = !DILocation(line: 1410, column: 2, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 1410, column: 2)
!5567 = !DILocalVariable(name: "chan", scope: !5568, file: !3, line: 1410, type: !2815)
!5568 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 1410, column: 2)
!5569 = !DILocation(line: 1410, column: 2, scope: !5568)
!5570 = !DILocation(line: 1413, column: 7, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1413, column: 7)
!5572 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 1411, column: 2)
!5573 = !DILocation(line: 1413, column: 16, scope: !5571)
!5574 = !DILocation(line: 1413, column: 13, scope: !5571)
!5575 = !DILocation(line: 1413, column: 7, scope: !5572)
!5576 = !DILocation(line: 1414, column: 26, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 1413, column: 22)
!5578 = !DILocation(line: 1414, column: 32, scope: !5577)
!5579 = !DILocation(line: 1414, column: 46, scope: !5577)
!5580 = !DILocation(line: 1414, column: 53, scope: !5577)
!5581 = !DILocation(line: 1414, column: 4, scope: !5577)
!5582 = !DILocation(line: 1416, column: 23, scope: !5577)
!5583 = !DILocation(line: 1416, column: 30, scope: !5577)
!5584 = !DILocation(line: 1416, column: 4, scope: !5577)
!5585 = !DILocation(line: 1416, column: 10, scope: !5577)
!5586 = !DILocation(line: 1416, column: 20, scope: !5577)
!5587 = !DILocation(line: 1417, column: 3, scope: !5577)
!5588 = !DILocation(line: 1419, column: 2, scope: !5568)
!5589 = distinct !{!5589, !5563, !5590}
!5590 = !DILocation(line: 1419, column: 2, scope: !5564)
!5591 = !DILocation(line: 1419, column: 2, scope: !5560)
!5592 = !DILocation(line: 1422, column: 27, scope: !5538)
!5593 = !DILocation(line: 1422, column: 2, scope: !5538)
!5594 = !DILocation(line: 1424, column: 24, scope: !5538)
!5595 = !DILocation(line: 1424, column: 2, scope: !5538)
!5596 = !DILocation(line: 1426, column: 2, scope: !5538)
!5597 = !DILocation(line: 1427, column: 1, scope: !5538)
!5598 = distinct !DISubprogram(name: "OBJECT_OT_constraints_copy", scope: !3, file: !3, line: 1469, type: !3842, scopeLine: 1470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5599 = !DILocalVariable(name: "ot", arg: 1, scope: !5598, file: !3, line: 1469, type: !3844)
!5600 = !DILocation(line: 1469, column: 49, scope: !5598)
!5601 = !DILocation(line: 1472, column: 2, scope: !5598)
!5602 = !DILocation(line: 1472, column: 6, scope: !5598)
!5603 = !DILocation(line: 1472, column: 11, scope: !5598)
!5604 = !DILocation(line: 1473, column: 2, scope: !5598)
!5605 = !DILocation(line: 1473, column: 6, scope: !5598)
!5606 = !DILocation(line: 1473, column: 13, scope: !5598)
!5607 = !DILocation(line: 1474, column: 2, scope: !5598)
!5608 = !DILocation(line: 1474, column: 6, scope: !5598)
!5609 = !DILocation(line: 1474, column: 18, scope: !5598)
!5610 = !DILocation(line: 1477, column: 2, scope: !5598)
!5611 = !DILocation(line: 1477, column: 6, scope: !5598)
!5612 = !DILocation(line: 1477, column: 11, scope: !5598)
!5613 = !DILocation(line: 1478, column: 2, scope: !5598)
!5614 = !DILocation(line: 1478, column: 6, scope: !5598)
!5615 = !DILocation(line: 1478, column: 11, scope: !5598)
!5616 = !DILocation(line: 1481, column: 2, scope: !5598)
!5617 = !DILocation(line: 1481, column: 6, scope: !5598)
!5618 = !DILocation(line: 1481, column: 11, scope: !5598)
!5619 = !DILocation(line: 1482, column: 1, scope: !5598)
!5620 = distinct !DISubprogram(name: "object_constraint_copy_exec", scope: !3, file: !3, line: 1444, type: !4156, scopeLine: 1445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5621 = !DILocalVariable(name: "C", arg: 1, scope: !5620, file: !3, line: 1444, type: !4131)
!5622 = !DILocation(line: 1444, column: 50, scope: !5620)
!5623 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !5620, file: !3, line: 1444, type: !4133)
!5624 = !DILocation(line: 1444, column: 65, scope: !5620)
!5625 = !DILocalVariable(name: "bmain", scope: !5620, file: !3, line: 1446, type: !5044)
!5626 = !DILocation(line: 1446, column: 8, scope: !5620)
!5627 = !DILocation(line: 1446, column: 30, scope: !5620)
!5628 = !DILocation(line: 1446, column: 16, scope: !5620)
!5629 = !DILocalVariable(name: "obact", scope: !5620, file: !3, line: 1447, type: !2798)
!5630 = !DILocation(line: 1447, column: 10, scope: !5620)
!5631 = !DILocation(line: 1447, column: 43, scope: !5620)
!5632 = !DILocation(line: 1447, column: 18, scope: !5620)
!5633 = !DILocalVariable(name: "ctx_data_list", scope: !5634, file: !3, line: 1450, type: !1072)
!5634 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 1450, column: 2)
!5635 = !DILocation(line: 1450, column: 2, scope: !5634)
!5636 = !DILocalVariable(name: "ctx_link", scope: !5634, file: !3, line: 1450, type: !5426)
!5637 = !DILocation(line: 1450, column: 2, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 1450, column: 2)
!5639 = !DILocation(line: 1450, column: 2, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 1450, column: 2)
!5641 = !DILocalVariable(name: "ob", scope: !5642, file: !3, line: 1450, type: !2798)
!5642 = distinct !DILexicalBlock(scope: !5640, file: !3, line: 1450, column: 2)
!5643 = !DILocation(line: 1450, column: 2, scope: !5642)
!5644 = !DILocation(line: 1453, column: 7, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 1453, column: 7)
!5646 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 1451, column: 2)
!5647 = !DILocation(line: 1453, column: 16, scope: !5645)
!5648 = !DILocation(line: 1453, column: 13, scope: !5645)
!5649 = !DILocation(line: 1453, column: 7, scope: !5646)
!5650 = !DILocation(line: 1454, column: 26, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5645, file: !3, line: 1453, column: 20)
!5652 = !DILocation(line: 1454, column: 30, scope: !5651)
!5653 = !DILocation(line: 1454, column: 44, scope: !5651)
!5654 = !DILocation(line: 1454, column: 51, scope: !5651)
!5655 = !DILocation(line: 1454, column: 4, scope: !5651)
!5656 = !DILocation(line: 1455, column: 23, scope: !5651)
!5657 = !DILocation(line: 1455, column: 27, scope: !5651)
!5658 = !DILocation(line: 1455, column: 4, scope: !5651)
!5659 = !DILocation(line: 1456, column: 3, scope: !5651)
!5660 = !DILocation(line: 1458, column: 2, scope: !5642)
!5661 = distinct !{!5661, !5637, !5662}
!5662 = !DILocation(line: 1458, column: 2, scope: !5638)
!5663 = !DILocation(line: 1458, column: 2, scope: !5634)
!5664 = !DILocation(line: 1461, column: 27, scope: !5620)
!5665 = !DILocation(line: 1461, column: 2, scope: !5620)
!5666 = !DILocation(line: 1464, column: 24, scope: !5620)
!5667 = !DILocation(line: 1464, column: 2, scope: !5620)
!5668 = !DILocation(line: 1466, column: 2, scope: !5620)
!5669 = distinct !DISubprogram(name: "OBJECT_OT_constraint_add", scope: !3, file: !3, line: 1784, type: !3842, scopeLine: 1785, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5670 = !DILocalVariable(name: "ot", arg: 1, scope: !5669, file: !3, line: 1784, type: !3844)
!5671 = !DILocation(line: 1784, column: 47, scope: !5669)
!5672 = !DILocation(line: 1787, column: 2, scope: !5669)
!5673 = !DILocation(line: 1787, column: 6, scope: !5669)
!5674 = !DILocation(line: 1787, column: 11, scope: !5669)
!5675 = !DILocation(line: 1788, column: 2, scope: !5669)
!5676 = !DILocation(line: 1788, column: 6, scope: !5669)
!5677 = !DILocation(line: 1788, column: 18, scope: !5669)
!5678 = !DILocation(line: 1789, column: 2, scope: !5669)
!5679 = !DILocation(line: 1789, column: 6, scope: !5669)
!5680 = !DILocation(line: 1789, column: 13, scope: !5669)
!5681 = !DILocation(line: 1792, column: 2, scope: !5669)
!5682 = !DILocation(line: 1792, column: 6, scope: !5669)
!5683 = !DILocation(line: 1792, column: 13, scope: !5669)
!5684 = !DILocation(line: 1793, column: 2, scope: !5669)
!5685 = !DILocation(line: 1793, column: 6, scope: !5669)
!5686 = !DILocation(line: 1793, column: 11, scope: !5669)
!5687 = !DILocation(line: 1794, column: 2, scope: !5669)
!5688 = !DILocation(line: 1794, column: 6, scope: !5669)
!5689 = !DILocation(line: 1794, column: 11, scope: !5669)
!5690 = !DILocation(line: 1797, column: 2, scope: !5669)
!5691 = !DILocation(line: 1797, column: 6, scope: !5669)
!5692 = !DILocation(line: 1797, column: 11, scope: !5669)
!5693 = !DILocation(line: 1800, column: 26, scope: !5669)
!5694 = !DILocation(line: 1800, column: 30, scope: !5669)
!5695 = !DILocation(line: 1800, column: 13, scope: !5669)
!5696 = !DILocation(line: 1800, column: 2, scope: !5669)
!5697 = !DILocation(line: 1800, column: 6, scope: !5669)
!5698 = !DILocation(line: 1800, column: 11, scope: !5669)
!5699 = !DILocation(line: 1801, column: 1, scope: !5669)
!5700 = distinct !DISubprogram(name: "object_constraint_add_exec", scope: !3, file: !3, line: 1741, type: !4156, scopeLine: 1742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5701 = !DILocalVariable(name: "C", arg: 1, scope: !5700, file: !3, line: 1741, type: !4131)
!5702 = !DILocation(line: 1741, column: 49, scope: !5700)
!5703 = !DILocalVariable(name: "op", arg: 2, scope: !5700, file: !3, line: 1741, type: !4133)
!5704 = !DILocation(line: 1741, column: 64, scope: !5700)
!5705 = !DILocalVariable(name: "ob", scope: !5700, file: !3, line: 1743, type: !2798)
!5706 = !DILocation(line: 1743, column: 10, scope: !5700)
!5707 = !DILocation(line: 1743, column: 40, scope: !5700)
!5708 = !DILocation(line: 1743, column: 15, scope: !5700)
!5709 = !DILocalVariable(name: "type", scope: !5700, file: !3, line: 1744, type: !1047)
!5710 = !DILocation(line: 1744, column: 6, scope: !5700)
!5711 = !DILocation(line: 1744, column: 26, scope: !5700)
!5712 = !DILocation(line: 1744, column: 30, scope: !5700)
!5713 = !DILocation(line: 1744, column: 13, scope: !5700)
!5714 = !DILocalVariable(name: "with_targets", scope: !5700, file: !3, line: 1745, type: !1045)
!5715 = !DILocation(line: 1745, column: 8, scope: !5700)
!5716 = !DILocation(line: 1747, column: 7, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5700, file: !3, line: 1747, column: 6)
!5718 = !DILocation(line: 1747, column: 6, scope: !5700)
!5719 = !DILocation(line: 1748, column: 14, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 1747, column: 11)
!5721 = !DILocation(line: 1748, column: 18, scope: !5720)
!5722 = !DILocation(line: 1748, column: 3, scope: !5720)
!5723 = !DILocation(line: 1749, column: 3, scope: !5720)
!5724 = !DILocation(line: 1755, column: 13, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5700, file: !3, line: 1755, column: 6)
!5726 = !DILocation(line: 1755, column: 17, scope: !5725)
!5727 = !DILocation(line: 1755, column: 6, scope: !5725)
!5728 = !DILocation(line: 1755, column: 6, scope: !5700)
!5729 = !DILocation(line: 1756, column: 16, scope: !5725)
!5730 = !DILocation(line: 1756, column: 3, scope: !5725)
!5731 = !DILocation(line: 1758, column: 29, scope: !5700)
!5732 = !DILocation(line: 1758, column: 32, scope: !5700)
!5733 = !DILocation(line: 1758, column: 36, scope: !5700)
!5734 = !DILocation(line: 1758, column: 41, scope: !5700)
!5735 = !DILocation(line: 1758, column: 45, scope: !5700)
!5736 = !DILocation(line: 1758, column: 58, scope: !5700)
!5737 = !DILocation(line: 1758, column: 64, scope: !5700)
!5738 = !DILocation(line: 1758, column: 9, scope: !5700)
!5739 = !DILocation(line: 1758, column: 2, scope: !5700)
!5740 = !DILocation(line: 1759, column: 1, scope: !5700)
!5741 = distinct !DISubprogram(name: "OBJECT_OT_constraint_add_with_targets", scope: !3, file: !3, line: 1803, type: !3842, scopeLine: 1804, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5742 = !DILocalVariable(name: "ot", arg: 1, scope: !5741, file: !3, line: 1803, type: !3844)
!5743 = !DILocation(line: 1803, column: 60, scope: !5741)
!5744 = !DILocation(line: 1806, column: 2, scope: !5741)
!5745 = !DILocation(line: 1806, column: 6, scope: !5741)
!5746 = !DILocation(line: 1806, column: 11, scope: !5741)
!5747 = !DILocation(line: 1807, column: 2, scope: !5741)
!5748 = !DILocation(line: 1807, column: 6, scope: !5741)
!5749 = !DILocation(line: 1807, column: 18, scope: !5741)
!5750 = !DILocation(line: 1808, column: 2, scope: !5741)
!5751 = !DILocation(line: 1808, column: 6, scope: !5741)
!5752 = !DILocation(line: 1808, column: 13, scope: !5741)
!5753 = !DILocation(line: 1811, column: 2, scope: !5741)
!5754 = !DILocation(line: 1811, column: 6, scope: !5741)
!5755 = !DILocation(line: 1811, column: 13, scope: !5741)
!5756 = !DILocation(line: 1812, column: 2, scope: !5741)
!5757 = !DILocation(line: 1812, column: 6, scope: !5741)
!5758 = !DILocation(line: 1812, column: 11, scope: !5741)
!5759 = !DILocation(line: 1813, column: 2, scope: !5741)
!5760 = !DILocation(line: 1813, column: 6, scope: !5741)
!5761 = !DILocation(line: 1813, column: 11, scope: !5741)
!5762 = !DILocation(line: 1816, column: 2, scope: !5741)
!5763 = !DILocation(line: 1816, column: 6, scope: !5741)
!5764 = !DILocation(line: 1816, column: 11, scope: !5741)
!5765 = !DILocation(line: 1819, column: 26, scope: !5741)
!5766 = !DILocation(line: 1819, column: 30, scope: !5741)
!5767 = !DILocation(line: 1819, column: 13, scope: !5741)
!5768 = !DILocation(line: 1819, column: 2, scope: !5741)
!5769 = !DILocation(line: 1819, column: 6, scope: !5741)
!5770 = !DILocation(line: 1819, column: 11, scope: !5741)
!5771 = !DILocation(line: 1820, column: 1, scope: !5741)
!5772 = distinct !DISubprogram(name: "POSE_OT_constraint_add", scope: !3, file: !3, line: 1822, type: !3842, scopeLine: 1823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5773 = !DILocalVariable(name: "ot", arg: 1, scope: !5772, file: !3, line: 1822, type: !3844)
!5774 = !DILocation(line: 1822, column: 45, scope: !5772)
!5775 = !DILocation(line: 1825, column: 2, scope: !5772)
!5776 = !DILocation(line: 1825, column: 6, scope: !5772)
!5777 = !DILocation(line: 1825, column: 11, scope: !5772)
!5778 = !DILocation(line: 1826, column: 2, scope: !5772)
!5779 = !DILocation(line: 1826, column: 6, scope: !5772)
!5780 = !DILocation(line: 1826, column: 18, scope: !5772)
!5781 = !DILocation(line: 1827, column: 2, scope: !5772)
!5782 = !DILocation(line: 1827, column: 6, scope: !5772)
!5783 = !DILocation(line: 1827, column: 13, scope: !5772)
!5784 = !DILocation(line: 1830, column: 2, scope: !5772)
!5785 = !DILocation(line: 1830, column: 6, scope: !5772)
!5786 = !DILocation(line: 1830, column: 13, scope: !5772)
!5787 = !DILocation(line: 1831, column: 2, scope: !5772)
!5788 = !DILocation(line: 1831, column: 6, scope: !5772)
!5789 = !DILocation(line: 1831, column: 11, scope: !5772)
!5790 = !DILocation(line: 1832, column: 2, scope: !5772)
!5791 = !DILocation(line: 1832, column: 6, scope: !5772)
!5792 = !DILocation(line: 1832, column: 11, scope: !5772)
!5793 = !DILocation(line: 1835, column: 2, scope: !5772)
!5794 = !DILocation(line: 1835, column: 6, scope: !5772)
!5795 = !DILocation(line: 1835, column: 11, scope: !5772)
!5796 = !DILocation(line: 1838, column: 26, scope: !5772)
!5797 = !DILocation(line: 1838, column: 30, scope: !5772)
!5798 = !DILocation(line: 1838, column: 13, scope: !5772)
!5799 = !DILocation(line: 1838, column: 2, scope: !5772)
!5800 = !DILocation(line: 1838, column: 6, scope: !5772)
!5801 = !DILocation(line: 1838, column: 11, scope: !5772)
!5802 = !DILocation(line: 1839, column: 1, scope: !5772)
!5803 = distinct !DISubprogram(name: "pose_constraint_add_exec", scope: !3, file: !3, line: 1762, type: !4156, scopeLine: 1763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5804 = !DILocalVariable(name: "C", arg: 1, scope: !5803, file: !3, line: 1762, type: !4131)
!5805 = !DILocation(line: 1762, column: 47, scope: !5803)
!5806 = !DILocalVariable(name: "op", arg: 2, scope: !5803, file: !3, line: 1762, type: !4133)
!5807 = !DILocation(line: 1762, column: 62, scope: !5803)
!5808 = !DILocalVariable(name: "ob", scope: !5803, file: !3, line: 1764, type: !2798)
!5809 = !DILocation(line: 1764, column: 10, scope: !5803)
!5810 = !DILocation(line: 1764, column: 69, scope: !5803)
!5811 = !DILocation(line: 1764, column: 44, scope: !5803)
!5812 = !DILocation(line: 1764, column: 15, scope: !5803)
!5813 = !DILocalVariable(name: "type", scope: !5803, file: !3, line: 1765, type: !1047)
!5814 = !DILocation(line: 1765, column: 6, scope: !5803)
!5815 = !DILocation(line: 1765, column: 26, scope: !5803)
!5816 = !DILocation(line: 1765, column: 30, scope: !5803)
!5817 = !DILocation(line: 1765, column: 13, scope: !5803)
!5818 = !DILocalVariable(name: "with_targets", scope: !5803, file: !3, line: 1766, type: !1045)
!5819 = !DILocation(line: 1766, column: 8, scope: !5803)
!5820 = !DILocation(line: 1768, column: 7, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5803, file: !3, line: 1768, column: 6)
!5822 = !DILocation(line: 1768, column: 6, scope: !5803)
!5823 = !DILocation(line: 1769, column: 14, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5821, file: !3, line: 1768, column: 11)
!5825 = !DILocation(line: 1769, column: 18, scope: !5824)
!5826 = !DILocation(line: 1769, column: 3, scope: !5824)
!5827 = !DILocation(line: 1770, column: 3, scope: !5824)
!5828 = !DILocation(line: 1776, column: 13, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5803, file: !3, line: 1776, column: 6)
!5830 = !DILocation(line: 1776, column: 17, scope: !5829)
!5831 = !DILocation(line: 1776, column: 6, scope: !5829)
!5832 = !DILocation(line: 1776, column: 6, scope: !5803)
!5833 = !DILocation(line: 1777, column: 16, scope: !5829)
!5834 = !DILocation(line: 1777, column: 3, scope: !5829)
!5835 = !DILocation(line: 1779, column: 29, scope: !5803)
!5836 = !DILocation(line: 1779, column: 32, scope: !5803)
!5837 = !DILocation(line: 1779, column: 36, scope: !5803)
!5838 = !DILocation(line: 1779, column: 63, scope: !5803)
!5839 = !DILocation(line: 1779, column: 40, scope: !5803)
!5840 = !DILocation(line: 1779, column: 68, scope: !5803)
!5841 = !DILocation(line: 1779, column: 74, scope: !5803)
!5842 = !DILocation(line: 1779, column: 9, scope: !5803)
!5843 = !DILocation(line: 1779, column: 2, scope: !5803)
!5844 = !DILocation(line: 1780, column: 1, scope: !5803)
!5845 = distinct !DISubprogram(name: "POSE_OT_constraint_add_with_targets", scope: !3, file: !3, line: 1841, type: !3842, scopeLine: 1842, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5846 = !DILocalVariable(name: "ot", arg: 1, scope: !5845, file: !3, line: 1841, type: !3844)
!5847 = !DILocation(line: 1841, column: 58, scope: !5845)
!5848 = !DILocation(line: 1844, column: 2, scope: !5845)
!5849 = !DILocation(line: 1844, column: 6, scope: !5845)
!5850 = !DILocation(line: 1844, column: 11, scope: !5845)
!5851 = !DILocation(line: 1845, column: 2, scope: !5845)
!5852 = !DILocation(line: 1845, column: 6, scope: !5845)
!5853 = !DILocation(line: 1845, column: 18, scope: !5845)
!5854 = !DILocation(line: 1846, column: 2, scope: !5845)
!5855 = !DILocation(line: 1846, column: 6, scope: !5845)
!5856 = !DILocation(line: 1846, column: 13, scope: !5845)
!5857 = !DILocation(line: 1849, column: 2, scope: !5845)
!5858 = !DILocation(line: 1849, column: 6, scope: !5845)
!5859 = !DILocation(line: 1849, column: 13, scope: !5845)
!5860 = !DILocation(line: 1850, column: 2, scope: !5845)
!5861 = !DILocation(line: 1850, column: 6, scope: !5845)
!5862 = !DILocation(line: 1850, column: 11, scope: !5845)
!5863 = !DILocation(line: 1851, column: 2, scope: !5845)
!5864 = !DILocation(line: 1851, column: 6, scope: !5845)
!5865 = !DILocation(line: 1851, column: 11, scope: !5845)
!5866 = !DILocation(line: 1854, column: 2, scope: !5845)
!5867 = !DILocation(line: 1854, column: 6, scope: !5845)
!5868 = !DILocation(line: 1854, column: 11, scope: !5845)
!5869 = !DILocation(line: 1857, column: 26, scope: !5845)
!5870 = !DILocation(line: 1857, column: 30, scope: !5845)
!5871 = !DILocation(line: 1857, column: 13, scope: !5845)
!5872 = !DILocation(line: 1857, column: 2, scope: !5845)
!5873 = !DILocation(line: 1857, column: 6, scope: !5845)
!5874 = !DILocation(line: 1857, column: 11, scope: !5845)
!5875 = !DILocation(line: 1858, column: 1, scope: !5845)
!5876 = distinct !DISubprogram(name: "POSE_OT_ik_add", scope: !3, file: !3, line: 1927, type: !3842, scopeLine: 1928, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5877 = !DILocalVariable(name: "ot", arg: 1, scope: !5876, file: !3, line: 1927, type: !3844)
!5878 = !DILocation(line: 1927, column: 37, scope: !5876)
!5879 = !DILocation(line: 1930, column: 2, scope: !5876)
!5880 = !DILocation(line: 1930, column: 6, scope: !5876)
!5881 = !DILocation(line: 1930, column: 11, scope: !5876)
!5882 = !DILocation(line: 1931, column: 2, scope: !5876)
!5883 = !DILocation(line: 1931, column: 6, scope: !5876)
!5884 = !DILocation(line: 1931, column: 18, scope: !5876)
!5885 = !DILocation(line: 1932, column: 2, scope: !5876)
!5886 = !DILocation(line: 1932, column: 6, scope: !5876)
!5887 = !DILocation(line: 1932, column: 13, scope: !5876)
!5888 = !DILocation(line: 1935, column: 2, scope: !5876)
!5889 = !DILocation(line: 1935, column: 6, scope: !5876)
!5890 = !DILocation(line: 1935, column: 13, scope: !5876)
!5891 = !DILocation(line: 1936, column: 2, scope: !5876)
!5892 = !DILocation(line: 1936, column: 6, scope: !5876)
!5893 = !DILocation(line: 1936, column: 11, scope: !5876)
!5894 = !DILocation(line: 1937, column: 2, scope: !5876)
!5895 = !DILocation(line: 1937, column: 6, scope: !5876)
!5896 = !DILocation(line: 1937, column: 11, scope: !5876)
!5897 = !DILocation(line: 1940, column: 2, scope: !5876)
!5898 = !DILocation(line: 1940, column: 6, scope: !5876)
!5899 = !DILocation(line: 1940, column: 11, scope: !5876)
!5900 = !DILocation(line: 1943, column: 18, scope: !5876)
!5901 = !DILocation(line: 1943, column: 22, scope: !5876)
!5902 = !DILocation(line: 1943, column: 2, scope: !5876)
!5903 = !DILocation(line: 1944, column: 1, scope: !5876)
!5904 = distinct !DISubprogram(name: "pose_ik_add_invoke", scope: !3, file: !3, line: 1865, type: !4129, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!5905 = !DILocalVariable(name: "C", arg: 1, scope: !5904, file: !3, line: 1865, type: !4131)
!5906 = !DILocation(line: 1865, column: 41, scope: !5904)
!5907 = !DILocalVariable(name: "op", arg: 2, scope: !5904, file: !3, line: 1865, type: !4133)
!5908 = !DILocation(line: 1865, column: 56, scope: !5904)
!5909 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !5904, file: !3, line: 1865, type: !4135)
!5910 = !DILocation(line: 1865, column: 75, scope: !5904)
!5911 = !DILocalVariable(name: "ob", scope: !5904, file: !3, line: 1867, type: !2798)
!5912 = !DILocation(line: 1867, column: 10, scope: !5904)
!5913 = !DILocation(line: 1867, column: 67, scope: !5904)
!5914 = !DILocation(line: 1867, column: 44, scope: !5904)
!5915 = !DILocation(line: 1867, column: 15, scope: !5904)
!5916 = !DILocalVariable(name: "pchan", scope: !5904, file: !3, line: 1868, type: !2815)
!5917 = !DILocation(line: 1868, column: 16, scope: !5904)
!5918 = !DILocation(line: 1868, column: 48, scope: !5904)
!5919 = !DILocation(line: 1868, column: 24, scope: !5904)
!5920 = !DILocalVariable(name: "con", scope: !5904, file: !3, line: 1869, type: !2881)
!5921 = !DILocation(line: 1869, column: 15, scope: !5904)
!5922 = !DILocalVariable(name: "pup", scope: !5904, file: !3, line: 1871, type: !5923)
!5923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5924, size: 64)
!5924 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiPopupMenu", file: !5925, line: 355, baseType: !5926)
!5925 = !DIFile(filename: "blender/source/blender/editors/include/UI_interface.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5926 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiPopupMenu", file: !5925, line: 355, flags: DIFlagFwdDecl)
!5927 = !DILocation(line: 1871, column: 15, scope: !5904)
!5928 = !DILocalVariable(name: "layout", scope: !5904, file: !3, line: 1872, type: !5929)
!5929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5930, size: 64)
!5930 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiLayout", file: !5925, line: 85, baseType: !4025)
!5931 = !DILocation(line: 1872, column: 12, scope: !5904)
!5932 = !DILocalVariable(name: "tar_ob", scope: !5904, file: !3, line: 1873, type: !2798)
!5933 = !DILocation(line: 1873, column: 10, scope: !5904)
!5934 = !DILocalVariable(name: "tar_pchan", scope: !5904, file: !3, line: 1874, type: !2815)
!5935 = !DILocation(line: 1874, column: 16, scope: !5904)
!5936 = !DILocation(line: 1877, column: 6, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5904, file: !3, line: 1877, column: 6)
!5938 = !DILocation(line: 1877, column: 6, scope: !5904)
!5939 = !DILocation(line: 1878, column: 14, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 1877, column: 29)
!5941 = !DILocation(line: 1878, column: 18, scope: !5940)
!5942 = !DILocation(line: 1878, column: 3, scope: !5940)
!5943 = !DILocation(line: 1879, column: 3, scope: !5940)
!5944 = !DILocation(line: 1883, column: 13, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5904, file: !3, line: 1883, column: 2)
!5946 = !DILocation(line: 1883, column: 20, scope: !5945)
!5947 = !DILocation(line: 1883, column: 32, scope: !5945)
!5948 = !DILocation(line: 1883, column: 11, scope: !5945)
!5949 = !DILocation(line: 1883, column: 7, scope: !5945)
!5950 = !DILocation(line: 1883, column: 39, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 1883, column: 2)
!5952 = !DILocation(line: 1883, column: 2, scope: !5945)
!5953 = !DILocation(line: 1884, column: 7, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5955, file: !3, line: 1884, column: 7)
!5955 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 1883, column: 61)
!5956 = !DILocation(line: 1884, column: 12, scope: !5954)
!5957 = !DILocation(line: 1884, column: 17, scope: !5954)
!5958 = !DILocation(line: 1884, column: 7, scope: !5955)
!5959 = !DILocation(line: 1884, column: 47, scope: !5954)
!5960 = !DILocation(line: 1885, column: 2, scope: !5955)
!5961 = !DILocation(line: 1883, column: 50, scope: !5951)
!5962 = !DILocation(line: 1883, column: 55, scope: !5951)
!5963 = !DILocation(line: 1883, column: 48, scope: !5951)
!5964 = !DILocation(line: 1883, column: 2, scope: !5951)
!5965 = distinct !{!5965, !5952, !5966}
!5966 = !DILocation(line: 1885, column: 2, scope: !5945)
!5967 = !DILocation(line: 1886, column: 6, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5904, file: !3, line: 1886, column: 6)
!5969 = !DILocation(line: 1886, column: 6, scope: !5904)
!5970 = !DILocation(line: 1887, column: 14, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5968, file: !3, line: 1886, column: 11)
!5972 = !DILocation(line: 1887, column: 18, scope: !5971)
!5973 = !DILocation(line: 1887, column: 3, scope: !5971)
!5974 = !DILocation(line: 1888, column: 3, scope: !5971)
!5975 = !DILocation(line: 1892, column: 23, scope: !5904)
!5976 = !DILocation(line: 1892, column: 8, scope: !5904)
!5977 = !DILocation(line: 1892, column: 6, scope: !5904)
!5978 = !DILocation(line: 1893, column: 27, scope: !5904)
!5979 = !DILocation(line: 1893, column: 11, scope: !5904)
!5980 = !DILocation(line: 1893, column: 9, scope: !5904)
!5981 = !DILocation(line: 1896, column: 32, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5904, file: !3, line: 1896, column: 6)
!5983 = !DILocation(line: 1896, column: 6, scope: !5982)
!5984 = !DILocation(line: 1896, column: 6, scope: !5904)
!5985 = !DILocation(line: 1900, column: 7, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 1900, column: 7)
!5987 = distinct !DILexicalBlock(scope: !5982, file: !3, line: 1896, column: 87)
!5988 = !DILocation(line: 1900, column: 7, scope: !5987)
!5989 = !DILocation(line: 1901, column: 19, scope: !5986)
!5990 = !DILocation(line: 1901, column: 4, scope: !5986)
!5991 = !DILocation(line: 1903, column: 19, scope: !5986)
!5992 = !DILocation(line: 1903, column: 4, scope: !5986)
!5993 = !DILocation(line: 1904, column: 2, scope: !5987)
!5994 = !DILocation(line: 1907, column: 18, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5982, file: !3, line: 1905, column: 7)
!5996 = !DILocation(line: 1907, column: 3, scope: !5995)
!5997 = !DILocation(line: 1908, column: 18, scope: !5995)
!5998 = !DILocation(line: 1908, column: 3, scope: !5995)
!5999 = !DILocation(line: 1912, column: 15, scope: !5904)
!6000 = !DILocation(line: 1912, column: 18, scope: !5904)
!6001 = !DILocation(line: 1912, column: 2, scope: !5904)
!6002 = !DILocation(line: 1914, column: 2, scope: !5904)
!6003 = !DILocation(line: 1915, column: 1, scope: !5904)
!6004 = distinct !DISubprogram(name: "pose_ik_add_exec", scope: !3, file: !3, line: 1918, type: !4156, scopeLine: 1919, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!6005 = !DILocalVariable(name: "C", arg: 1, scope: !6004, file: !3, line: 1918, type: !4131)
!6006 = !DILocation(line: 1918, column: 39, scope: !6004)
!6007 = !DILocalVariable(name: "op", arg: 2, scope: !6004, file: !3, line: 1918, type: !4133)
!6008 = !DILocation(line: 1918, column: 54, scope: !6004)
!6009 = !DILocalVariable(name: "ob", scope: !6004, file: !3, line: 1920, type: !2798)
!6010 = !DILocation(line: 1920, column: 10, scope: !6004)
!6011 = !DILocation(line: 1920, column: 38, scope: !6004)
!6012 = !DILocation(line: 1920, column: 15, scope: !6004)
!6013 = !DILocalVariable(name: "with_targets", scope: !6004, file: !3, line: 1921, type: !5171)
!6014 = !DILocation(line: 1921, column: 13, scope: !6004)
!6015 = !DILocation(line: 1921, column: 44, scope: !6004)
!6016 = !DILocation(line: 1921, column: 48, scope: !6004)
!6017 = !DILocation(line: 1921, column: 28, scope: !6004)
!6018 = !DILocation(line: 1924, column: 29, scope: !6004)
!6019 = !DILocation(line: 1924, column: 32, scope: !6004)
!6020 = !DILocation(line: 1924, column: 36, scope: !6004)
!6021 = !DILocation(line: 1924, column: 63, scope: !6004)
!6022 = !DILocation(line: 1924, column: 40, scope: !6004)
!6023 = !DILocation(line: 1924, column: 95, scope: !6004)
!6024 = !DILocation(line: 1924, column: 9, scope: !6004)
!6025 = !DILocation(line: 1924, column: 2, scope: !6004)
!6026 = distinct !DISubprogram(name: "POSE_OT_ik_clear", scope: !3, file: !3, line: 1978, type: !3842, scopeLine: 1979, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!6027 = !DILocalVariable(name: "ot", arg: 1, scope: !6026, file: !3, line: 1978, type: !3844)
!6028 = !DILocation(line: 1978, column: 39, scope: !6026)
!6029 = !DILocation(line: 1981, column: 2, scope: !6026)
!6030 = !DILocation(line: 1981, column: 6, scope: !6026)
!6031 = !DILocation(line: 1981, column: 11, scope: !6026)
!6032 = !DILocation(line: 1982, column: 2, scope: !6026)
!6033 = !DILocation(line: 1982, column: 6, scope: !6026)
!6034 = !DILocation(line: 1982, column: 18, scope: !6026)
!6035 = !DILocation(line: 1983, column: 2, scope: !6026)
!6036 = !DILocation(line: 1983, column: 6, scope: !6026)
!6037 = !DILocation(line: 1983, column: 13, scope: !6026)
!6038 = !DILocation(line: 1986, column: 2, scope: !6026)
!6039 = !DILocation(line: 1986, column: 6, scope: !6026)
!6040 = !DILocation(line: 1986, column: 11, scope: !6026)
!6041 = !DILocation(line: 1987, column: 2, scope: !6026)
!6042 = !DILocation(line: 1987, column: 6, scope: !6026)
!6043 = !DILocation(line: 1987, column: 11, scope: !6026)
!6044 = !DILocation(line: 1990, column: 2, scope: !6026)
!6045 = !DILocation(line: 1990, column: 6, scope: !6026)
!6046 = !DILocation(line: 1990, column: 11, scope: !6026)
!6047 = !DILocation(line: 1991, column: 1, scope: !6026)
!6048 = distinct !DISubprogram(name: "pose_ik_clear_exec", scope: !3, file: !3, line: 1949, type: !4156, scopeLine: 1950, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!6049 = !DILocalVariable(name: "C", arg: 1, scope: !6048, file: !3, line: 1949, type: !4131)
!6050 = !DILocation(line: 1949, column: 41, scope: !6048)
!6051 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !6048, file: !3, line: 1949, type: !4133)
!6052 = !DILocation(line: 1949, column: 56, scope: !6048)
!6053 = !DILocalVariable(name: "ob", scope: !6048, file: !3, line: 1951, type: !2798)
!6054 = !DILocation(line: 1951, column: 10, scope: !6048)
!6055 = !DILocation(line: 1951, column: 67, scope: !6048)
!6056 = !DILocation(line: 1951, column: 44, scope: !6048)
!6057 = !DILocation(line: 1951, column: 15, scope: !6048)
!6058 = !DILocalVariable(name: "ctx_data_list", scope: !6059, file: !3, line: 1954, type: !1072)
!6059 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 1954, column: 2)
!6060 = !DILocation(line: 1954, column: 2, scope: !6059)
!6061 = !DILocalVariable(name: "ctx_link", scope: !6059, file: !3, line: 1954, type: !5426)
!6062 = !DILocation(line: 1954, column: 2, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6059, file: !3, line: 1954, column: 2)
!6064 = !DILocation(line: 1954, column: 2, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 1954, column: 2)
!6066 = !DILocalVariable(name: "pchan", scope: !6067, file: !3, line: 1954, type: !2815)
!6067 = distinct !DILexicalBlock(scope: !6065, file: !3, line: 1954, column: 2)
!6068 = !DILocation(line: 1954, column: 2, scope: !6067)
!6069 = !DILocalVariable(name: "con", scope: !6070, file: !3, line: 1956, type: !2881)
!6070 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 1955, column: 2)
!6071 = !DILocation(line: 1956, column: 16, scope: !6070)
!6072 = !DILocalVariable(name: "next", scope: !6070, file: !3, line: 1956, type: !2881)
!6073 = !DILocation(line: 1956, column: 22, scope: !6070)
!6074 = !DILocation(line: 1959, column: 14, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 1959, column: 3)
!6076 = !DILocation(line: 1959, column: 21, scope: !6075)
!6077 = !DILocation(line: 1959, column: 33, scope: !6075)
!6078 = !DILocation(line: 1959, column: 12, scope: !6075)
!6079 = !DILocation(line: 1959, column: 8, scope: !6075)
!6080 = !DILocation(line: 1959, column: 40, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6075, file: !3, line: 1959, column: 3)
!6082 = !DILocation(line: 1959, column: 3, scope: !6075)
!6083 = !DILocation(line: 1960, column: 11, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6081, file: !3, line: 1959, column: 57)
!6085 = !DILocation(line: 1960, column: 16, scope: !6084)
!6086 = !DILocation(line: 1960, column: 9, scope: !6084)
!6087 = !DILocation(line: 1961, column: 8, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6084, file: !3, line: 1961, column: 8)
!6089 = !DILocation(line: 1961, column: 13, scope: !6088)
!6090 = !DILocation(line: 1961, column: 18, scope: !6088)
!6091 = !DILocation(line: 1961, column: 8, scope: !6084)
!6092 = !DILocation(line: 1962, column: 28, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6088, file: !3, line: 1961, column: 48)
!6094 = !DILocation(line: 1962, column: 35, scope: !6093)
!6095 = !DILocation(line: 1962, column: 48, scope: !6093)
!6096 = !DILocation(line: 1962, column: 5, scope: !6093)
!6097 = !DILocation(line: 1963, column: 4, scope: !6093)
!6098 = !DILocation(line: 1964, column: 3, scope: !6084)
!6099 = !DILocation(line: 1959, column: 51, scope: !6081)
!6100 = !DILocation(line: 1959, column: 49, scope: !6081)
!6101 = !DILocation(line: 1959, column: 3, scope: !6081)
!6102 = distinct !{!6102, !6082, !6103}
!6103 = !DILocation(line: 1964, column: 3, scope: !6075)
!6104 = !DILocation(line: 1965, column: 3, scope: !6070)
!6105 = !DILocation(line: 1965, column: 10, scope: !6070)
!6106 = !DILocation(line: 1965, column: 20, scope: !6070)
!6107 = !DILocation(line: 1967, column: 2, scope: !6067)
!6108 = distinct !{!6108, !6062, !6109}
!6109 = !DILocation(line: 1967, column: 2, scope: !6063)
!6110 = !DILocation(line: 1967, column: 2, scope: !6059)
!6111 = !DILocation(line: 1970, column: 21, scope: !6048)
!6112 = !DILocation(line: 1970, column: 25, scope: !6048)
!6113 = !DILocation(line: 1970, column: 2, scope: !6048)
!6114 = !DILocation(line: 1973, column: 24, scope: !6048)
!6115 = !DILocation(line: 1973, column: 67, scope: !6048)
!6116 = !DILocation(line: 1973, column: 2, scope: !6048)
!6117 = !DILocation(line: 1975, column: 2, scope: !6048)
!6118 = distinct !DISubprogram(name: "edit_constraint_invoke_properties", scope: !3, file: !3, line: 573, type: !4156, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!6119 = !DILocalVariable(name: "C", arg: 1, scope: !6118, file: !3, line: 573, type: !4131)
!6120 = !DILocation(line: 573, column: 56, scope: !6118)
!6121 = !DILocalVariable(name: "op", arg: 2, scope: !6118, file: !3, line: 573, type: !4133)
!6122 = !DILocation(line: 573, column: 71, scope: !6118)
!6123 = !DILocalVariable(name: "ptr", scope: !6118, file: !3, line: 575, type: !4700)
!6124 = !DILocation(line: 575, column: 13, scope: !6118)
!6125 = !DILocation(line: 575, column: 45, scope: !6118)
!6126 = !DILocation(line: 575, column: 19, scope: !6118)
!6127 = !DILocalVariable(name: "ob", scope: !6118, file: !3, line: 576, type: !2798)
!6128 = !DILocation(line: 576, column: 10, scope: !6118)
!6129 = !DILocation(line: 576, column: 20, scope: !6118)
!6130 = !DILocation(line: 576, column: 23, scope: !6118)
!6131 = !DILocation(line: 576, column: 15, scope: !6118)
!6132 = !DILocation(line: 576, column: 35, scope: !6118)
!6133 = !DILocation(line: 576, column: 38, scope: !6118)
!6134 = !DILocation(line: 576, column: 70, scope: !6118)
!6135 = !DILocation(line: 576, column: 45, scope: !6118)
!6136 = !DILocalVariable(name: "con", scope: !6118, file: !3, line: 577, type: !2881)
!6137 = !DILocation(line: 577, column: 15, scope: !6118)
!6138 = !DILocalVariable(name: "list", scope: !6118, file: !3, line: 578, type: !1383)
!6139 = !DILocation(line: 578, column: 12, scope: !6118)
!6140 = !DILocation(line: 580, column: 33, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 580, column: 6)
!6142 = !DILocation(line: 580, column: 37, scope: !6141)
!6143 = !DILocation(line: 580, column: 6, scope: !6141)
!6144 = !DILocation(line: 580, column: 56, scope: !6141)
!6145 = !DILocation(line: 580, column: 86, scope: !6141)
!6146 = !DILocation(line: 580, column: 90, scope: !6141)
!6147 = !DILocation(line: 580, column: 59, scope: !6141)
!6148 = !DILocation(line: 580, column: 6, scope: !6118)
!6149 = !DILocation(line: 581, column: 3, scope: !6141)
!6150 = !DILocation(line: 583, column: 10, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 583, column: 6)
!6152 = !DILocation(line: 583, column: 6, scope: !6151)
!6153 = !DILocation(line: 583, column: 6, scope: !6118)
!6154 = !DILocation(line: 584, column: 13, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 583, column: 16)
!6156 = !DILocation(line: 584, column: 9, scope: !6155)
!6157 = !DILocation(line: 584, column: 7, scope: !6155)
!6158 = !DILocation(line: 585, column: 18, scope: !6155)
!6159 = !DILocation(line: 585, column: 22, scope: !6155)
!6160 = !DILocation(line: 585, column: 41, scope: !6155)
!6161 = !DILocation(line: 585, column: 46, scope: !6155)
!6162 = !DILocation(line: 585, column: 3, scope: !6155)
!6163 = !DILocation(line: 587, column: 28, scope: !6155)
!6164 = !DILocation(line: 587, column: 32, scope: !6155)
!6165 = !DILocation(line: 587, column: 10, scope: !6155)
!6166 = !DILocation(line: 587, column: 8, scope: !6155)
!6167 = !DILocation(line: 589, column: 8, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6155, file: !3, line: 589, column: 7)
!6169 = !DILocation(line: 589, column: 12, scope: !6168)
!6170 = !DILocation(line: 589, column: 27, scope: !6168)
!6171 = !DILocation(line: 589, column: 24, scope: !6168)
!6172 = !DILocation(line: 589, column: 7, scope: !6155)
!6173 = !DILocation(line: 590, column: 17, scope: !6168)
!6174 = !DILocation(line: 590, column: 21, scope: !6168)
!6175 = !DILocation(line: 590, column: 4, scope: !6168)
!6176 = !DILocation(line: 592, column: 17, scope: !6168)
!6177 = !DILocation(line: 592, column: 21, scope: !6168)
!6178 = !DILocation(line: 592, column: 4, scope: !6168)
!6179 = !DILocation(line: 594, column: 3, scope: !6155)
!6180 = !DILocation(line: 597, column: 2, scope: !6118)
!6181 = !DILocation(line: 598, column: 1, scope: !6118)
!6182 = distinct !DISubprogram(name: "edit_constraint_property_get", scope: !3, file: !3, line: 600, type: !6183, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!6183 = !DISubroutineType(types: !6184)
!6184 = !{!2881, !4133, !2798, !1047}
!6185 = !DILocalVariable(name: "op", arg: 1, scope: !6182, file: !3, line: 600, type: !4133)
!6186 = !DILocation(line: 600, column: 62, scope: !6182)
!6187 = !DILocalVariable(name: "ob", arg: 2, scope: !6182, file: !3, line: 600, type: !2798)
!6188 = !DILocation(line: 600, column: 74, scope: !6182)
!6189 = !DILocalVariable(name: "type", arg: 3, scope: !6182, file: !3, line: 600, type: !1047)
!6190 = !DILocation(line: 600, column: 82, scope: !6182)
!6191 = !DILocalVariable(name: "constraint_name", scope: !6182, file: !3, line: 602, type: !1062)
!6192 = !DILocation(line: 602, column: 7, scope: !6182)
!6193 = !DILocalVariable(name: "owner", scope: !6182, file: !3, line: 603, type: !1047)
!6194 = !DILocation(line: 603, column: 6, scope: !6182)
!6195 = !DILocation(line: 603, column: 27, scope: !6182)
!6196 = !DILocation(line: 603, column: 31, scope: !6182)
!6197 = !DILocation(line: 603, column: 14, scope: !6182)
!6198 = !DILocalVariable(name: "con", scope: !6182, file: !3, line: 604, type: !2881)
!6199 = !DILocation(line: 604, column: 15, scope: !6182)
!6200 = !DILocalVariable(name: "list", scope: !6182, file: !3, line: 605, type: !1383)
!6201 = !DILocation(line: 605, column: 12, scope: !6182)
!6202 = !DILocation(line: 607, column: 17, scope: !6182)
!6203 = !DILocation(line: 607, column: 21, scope: !6182)
!6204 = !DILocation(line: 607, column: 40, scope: !6182)
!6205 = !DILocation(line: 607, column: 2, scope: !6182)
!6206 = !DILocation(line: 609, column: 6, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6182, file: !3, line: 609, column: 6)
!6208 = !DILocation(line: 609, column: 12, scope: !6207)
!6209 = !DILocation(line: 609, column: 6, scope: !6182)
!6210 = !DILocation(line: 610, column: 11, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 609, column: 45)
!6212 = !DILocation(line: 610, column: 15, scope: !6211)
!6213 = !DILocation(line: 610, column: 8, scope: !6211)
!6214 = !DILocation(line: 611, column: 2, scope: !6211)
!6215 = !DILocation(line: 612, column: 11, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 612, column: 11)
!6217 = !DILocation(line: 612, column: 17, scope: !6216)
!6218 = !DILocation(line: 612, column: 11, scope: !6207)
!6219 = !DILocalVariable(name: "pchan", scope: !6220, file: !3, line: 613, type: !2815)
!6220 = distinct !DILexicalBlock(scope: !6216, file: !3, line: 612, column: 48)
!6221 = !DILocation(line: 613, column: 17, scope: !6220)
!6222 = !DILocation(line: 613, column: 49, scope: !6220)
!6223 = !DILocation(line: 613, column: 25, scope: !6220)
!6224 = !DILocation(line: 614, column: 7, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 614, column: 7)
!6226 = !DILocation(line: 614, column: 7, scope: !6220)
!6227 = !DILocation(line: 615, column: 12, scope: !6225)
!6228 = !DILocation(line: 615, column: 19, scope: !6225)
!6229 = !DILocation(line: 615, column: 9, scope: !6225)
!6230 = !DILocation(line: 615, column: 4, scope: !6225)
!6231 = !DILocation(line: 619, column: 4, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 616, column: 8)
!6233 = !DILocation(line: 621, column: 2, scope: !6220)
!6234 = !DILocation(line: 625, column: 33, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6216, file: !3, line: 622, column: 7)
!6236 = !DILocation(line: 625, column: 10, scope: !6235)
!6237 = !DILocation(line: 625, column: 8, scope: !6235)
!6238 = !DILocation(line: 628, column: 34, scope: !6182)
!6239 = !DILocation(line: 628, column: 40, scope: !6182)
!6240 = !DILocation(line: 628, column: 8, scope: !6182)
!6241 = !DILocation(line: 628, column: 6, scope: !6182)
!6242 = !DILocation(line: 632, column: 6, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6182, file: !3, line: 632, column: 6)
!6244 = !DILocation(line: 632, column: 10, scope: !6243)
!6245 = !DILocation(line: 632, column: 14, scope: !6243)
!6246 = !DILocation(line: 632, column: 19, scope: !6243)
!6247 = !DILocation(line: 632, column: 25, scope: !6243)
!6248 = !DILocation(line: 632, column: 29, scope: !6243)
!6249 = !DILocation(line: 632, column: 34, scope: !6243)
!6250 = !DILocation(line: 632, column: 42, scope: !6243)
!6251 = !DILocation(line: 632, column: 39, scope: !6243)
!6252 = !DILocation(line: 632, column: 6, scope: !6182)
!6253 = !DILocation(line: 633, column: 7, scope: !6243)
!6254 = !DILocation(line: 633, column: 3, scope: !6243)
!6255 = !DILocation(line: 635, column: 9, scope: !6182)
!6256 = !DILocation(line: 635, column: 2, scope: !6182)
!6257 = !DILocation(line: 636, column: 1, scope: !6182)
!6258 = distinct !DISubprogram(name: "edit_constraint_poll_generic", scope: !3, file: !3, line: 539, type: !6259, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!6259 = !DISubroutineType(types: !6260)
!6260 = !{!1047, !4131, !4081}
!6261 = !DILocalVariable(name: "C", arg: 1, scope: !6258, file: !3, line: 539, type: !4131)
!6262 = !DILocation(line: 539, column: 51, scope: !6258)
!6263 = !DILocalVariable(name: "rna_type", arg: 2, scope: !6258, file: !3, line: 539, type: !4081)
!6264 = !DILocation(line: 539, column: 65, scope: !6258)
!6265 = !DILocalVariable(name: "ptr", scope: !6258, file: !3, line: 541, type: !4700)
!6266 = !DILocation(line: 541, column: 13, scope: !6258)
!6267 = !DILocation(line: 541, column: 45, scope: !6258)
!6268 = !DILocation(line: 541, column: 62, scope: !6258)
!6269 = !DILocation(line: 541, column: 19, scope: !6258)
!6270 = !DILocalVariable(name: "ob", scope: !6258, file: !3, line: 542, type: !2798)
!6271 = !DILocation(line: 542, column: 10, scope: !6258)
!6272 = !DILocation(line: 542, column: 20, scope: !6258)
!6273 = !DILocation(line: 542, column: 23, scope: !6258)
!6274 = !DILocation(line: 542, column: 15, scope: !6258)
!6275 = !DILocation(line: 542, column: 35, scope: !6258)
!6276 = !DILocation(line: 542, column: 38, scope: !6258)
!6277 = !DILocation(line: 542, column: 70, scope: !6258)
!6278 = !DILocation(line: 542, column: 45, scope: !6258)
!6279 = !DILocation(line: 544, column: 11, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 544, column: 6)
!6281 = !DILocation(line: 544, column: 7, scope: !6280)
!6282 = !DILocation(line: 544, column: 6, scope: !6258)
!6283 = !DILocation(line: 545, column: 32, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 544, column: 17)
!6285 = !DILocation(line: 545, column: 3, scope: !6284)
!6286 = !DILocation(line: 546, column: 3, scope: !6284)
!6287 = !DILocation(line: 549, column: 7, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 549, column: 6)
!6289 = !DILocation(line: 549, column: 6, scope: !6258)
!6290 = !DILocation(line: 550, column: 32, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6288, file: !3, line: 549, column: 11)
!6292 = !DILocation(line: 550, column: 3, scope: !6291)
!6293 = !DILocation(line: 551, column: 3, scope: !6291)
!6294 = !DILocation(line: 554, column: 6, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 554, column: 6)
!6296 = !DILocation(line: 554, column: 10, scope: !6295)
!6297 = !DILocation(line: 554, column: 13, scope: !6295)
!6298 = !DILocation(line: 554, column: 17, scope: !6295)
!6299 = !DILocation(line: 554, column: 25, scope: !6295)
!6300 = !DILocation(line: 554, column: 28, scope: !6295)
!6301 = !DILocation(line: 554, column: 21, scope: !6295)
!6302 = !DILocation(line: 554, column: 33, scope: !6295)
!6303 = !DILocation(line: 554, column: 47, scope: !6295)
!6304 = !DILocation(line: 554, column: 50, scope: !6295)
!6305 = !DILocation(line: 554, column: 37, scope: !6295)
!6306 = !DILocation(line: 554, column: 57, scope: !6295)
!6307 = !DILocation(line: 554, column: 36, scope: !6295)
!6308 = !DILocation(line: 554, column: 6, scope: !6258)
!6309 = !DILocation(line: 555, column: 32, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6295, file: !3, line: 554, column: 63)
!6311 = !DILocation(line: 555, column: 3, scope: !6310)
!6312 = !DILocation(line: 556, column: 3, scope: !6310)
!6313 = !DILocation(line: 559, column: 2, scope: !6258)
!6314 = !DILocation(line: 560, column: 1, scope: !6258)
!6315 = distinct !DISubprogram(name: "child_get_inverse_matrix", scope: !3, file: !3, line: 736, type: !6316, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!6316 = !DISubroutineType(types: !6317)
!6317 = !{null, !4341, !2798, !2881, !6318, !4363}
!6318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64)
!6319 = !DILocalVariable(name: "scene", arg: 1, scope: !6315, file: !3, line: 736, type: !4341)
!6320 = !DILocation(line: 736, column: 45, scope: !6315)
!6321 = !DILocalVariable(name: "ob", arg: 2, scope: !6315, file: !3, line: 736, type: !2798)
!6322 = !DILocation(line: 736, column: 60, scope: !6315)
!6323 = !DILocalVariable(name: "con", arg: 3, scope: !6315, file: !3, line: 736, type: !2881)
!6324 = !DILocation(line: 736, column: 77, scope: !6315)
!6325 = !DILocalVariable(name: "invmat", arg: 4, scope: !6315, file: !3, line: 736, type: !6318)
!6326 = !DILocation(line: 736, column: 88, scope: !6315)
!6327 = !DILocalVariable(name: "owner", arg: 5, scope: !6315, file: !3, line: 736, type: !4363)
!6328 = !DILocation(line: 736, column: 112, scope: !6315)
!6329 = !DILocation(line: 739, column: 10, scope: !6315)
!6330 = !DILocation(line: 739, column: 2, scope: !6315)
!6331 = !DILocation(line: 741, column: 6, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6315, file: !3, line: 741, column: 6)
!6333 = !DILocation(line: 741, column: 12, scope: !6332)
!6334 = !DILocation(line: 741, column: 6, scope: !6315)
!6335 = !DILocalVariable(name: "pchan", scope: !6336, file: !3, line: 742, type: !2815)
!6336 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 741, column: 43)
!6337 = !DILocation(line: 742, column: 17, scope: !6336)
!6338 = !DILocation(line: 745, column: 7, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 745, column: 7)
!6340 = !DILocation(line: 745, column: 10, scope: !6339)
!6341 = !DILocation(line: 745, column: 13, scope: !6339)
!6342 = !DILocation(line: 745, column: 17, scope: !6339)
!6343 = !DILocation(line: 745, column: 22, scope: !6339)
!6344 = !DILocation(line: 745, column: 58, scope: !6339)
!6345 = !DILocation(line: 745, column: 34, scope: !6339)
!6346 = !DILocation(line: 745, column: 32, scope: !6339)
!6347 = !DILocation(line: 745, column: 7, scope: !6336)
!6348 = !DILocalVariable(name: "con_last", scope: !6349, file: !3, line: 746, type: !2881)
!6349 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 745, column: 64)
!6350 = !DILocation(line: 746, column: 17, scope: !6349)
!6351 = !DILocalVariable(name: "imat", scope: !6349, file: !3, line: 753, type: !1281)
!6352 = !DILocation(line: 753, column: 10, scope: !6349)
!6353 = !DILocalVariable(name: "tmat", scope: !6349, file: !3, line: 753, type: !1281)
!6354 = !DILocation(line: 753, column: 22, scope: !6349)
!6355 = !DILocalVariable(name: "pmat", scope: !6349, file: !3, line: 754, type: !1281)
!6356 = !DILocation(line: 754, column: 10, scope: !6349)
!6357 = !DILocation(line: 763, column: 22, scope: !6349)
!6358 = !DILocation(line: 763, column: 29, scope: !6349)
!6359 = !DILocation(line: 763, column: 4, scope: !6349)
!6360 = !DILocation(line: 764, column: 15, scope: !6349)
!6361 = !DILocation(line: 764, column: 21, scope: !6349)
!6362 = !DILocation(line: 764, column: 28, scope: !6349)
!6363 = !DILocation(line: 764, column: 4, scope: !6349)
!6364 = !DILocation(line: 767, column: 15, scope: !6349)
!6365 = !DILocation(line: 767, column: 22, scope: !6349)
!6366 = !DILocation(line: 767, column: 34, scope: !6349)
!6367 = !DILocation(line: 767, column: 13, scope: !6349)
!6368 = !DILocation(line: 768, column: 30, scope: !6349)
!6369 = !DILocation(line: 768, column: 35, scope: !6349)
!6370 = !DILocation(line: 768, column: 4, scope: !6349)
!6371 = !DILocation(line: 768, column: 11, scope: !6349)
!6372 = !DILocation(line: 768, column: 23, scope: !6349)
!6373 = !DILocation(line: 768, column: 28, scope: !6349)
!6374 = !DILocation(line: 770, column: 8, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 770, column: 8)
!6376 = !DILocation(line: 770, column: 13, scope: !6375)
!6377 = !DILocation(line: 770, column: 8, scope: !6349)
!6378 = !DILocation(line: 772, column: 5, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 770, column: 19)
!6380 = !DILocation(line: 772, column: 10, scope: !6379)
!6381 = !DILocation(line: 772, column: 16, scope: !6379)
!6382 = !DILocation(line: 772, column: 21, scope: !6379)
!6383 = !DILocation(line: 773, column: 4, scope: !6379)
!6384 = !DILocation(line: 776, column: 5, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 774, column: 9)
!6386 = !DILocation(line: 776, column: 12, scope: !6385)
!6387 = !DILocation(line: 776, column: 24, scope: !6385)
!6388 = !DILocation(line: 776, column: 30, scope: !6385)
!6389 = !DILocation(line: 780, column: 22, scope: !6349)
!6390 = !DILocation(line: 780, column: 29, scope: !6349)
!6391 = !DILocation(line: 780, column: 4, scope: !6349)
!6392 = !DILocation(line: 786, column: 17, scope: !6349)
!6393 = !DILocation(line: 786, column: 23, scope: !6349)
!6394 = !DILocation(line: 786, column: 30, scope: !6349)
!6395 = !DILocation(line: 786, column: 4, scope: !6349)
!6396 = !DILocation(line: 787, column: 16, scope: !6349)
!6397 = !DILocation(line: 787, column: 22, scope: !6349)
!6398 = !DILocation(line: 787, column: 28, scope: !6349)
!6399 = !DILocation(line: 787, column: 4, scope: !6349)
!6400 = !DILocation(line: 788, column: 17, scope: !6349)
!6401 = !DILocation(line: 788, column: 25, scope: !6349)
!6402 = !DILocation(line: 788, column: 4, scope: !6349)
!6403 = !DILocation(line: 791, column: 30, scope: !6349)
!6404 = !DILocation(line: 791, column: 4, scope: !6349)
!6405 = !DILocation(line: 791, column: 11, scope: !6349)
!6406 = !DILocation(line: 791, column: 23, scope: !6349)
!6407 = !DILocation(line: 791, column: 28, scope: !6349)
!6408 = !DILocation(line: 793, column: 8, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 793, column: 8)
!6410 = !DILocation(line: 793, column: 13, scope: !6409)
!6411 = !DILocation(line: 793, column: 8, scope: !6349)
!6412 = !DILocation(line: 795, column: 23, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6409, file: !3, line: 793, column: 19)
!6414 = !DILocation(line: 795, column: 5, scope: !6413)
!6415 = !DILocation(line: 795, column: 10, scope: !6413)
!6416 = !DILocation(line: 795, column: 16, scope: !6413)
!6417 = !DILocation(line: 795, column: 21, scope: !6413)
!6418 = !DILocation(line: 796, column: 4, scope: !6413)
!6419 = !DILocation(line: 799, column: 32, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6409, file: !3, line: 797, column: 9)
!6421 = !DILocation(line: 799, column: 5, scope: !6420)
!6422 = !DILocation(line: 799, column: 12, scope: !6420)
!6423 = !DILocation(line: 799, column: 24, scope: !6420)
!6424 = !DILocation(line: 799, column: 30, scope: !6420)
!6425 = !DILocation(line: 803, column: 22, scope: !6349)
!6426 = !DILocation(line: 803, column: 29, scope: !6349)
!6427 = !DILocation(line: 803, column: 4, scope: !6349)
!6428 = !DILocation(line: 804, column: 3, scope: !6349)
!6429 = !DILocation(line: 805, column: 2, scope: !6336)
!6430 = !DILocation(line: 806, column: 6, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6315, file: !3, line: 806, column: 6)
!6432 = !DILocation(line: 806, column: 12, scope: !6431)
!6433 = !DILocation(line: 806, column: 6, scope: !6315)
!6434 = !DILocation(line: 807, column: 7, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 807, column: 7)
!6436 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 806, column: 45)
!6437 = !DILocation(line: 807, column: 7, scope: !6436)
!6438 = !DILocalVariable(name: "workob", scope: !6439, file: !3, line: 808, type: !2799)
!6439 = distinct !DILexicalBlock(scope: !6435, file: !3, line: 807, column: 11)
!6440 = !DILocation(line: 808, column: 11, scope: !6439)
!6441 = !DILocation(line: 814, column: 34, scope: !6439)
!6442 = !DILocation(line: 814, column: 41, scope: !6439)
!6443 = !DILocation(line: 814, column: 4, scope: !6439)
!6444 = !DILocation(line: 815, column: 17, scope: !6439)
!6445 = !DILocation(line: 815, column: 32, scope: !6439)
!6446 = !DILocation(line: 815, column: 25, scope: !6439)
!6447 = !DILocation(line: 815, column: 4, scope: !6439)
!6448 = !DILocation(line: 816, column: 3, scope: !6439)
!6449 = !DILocation(line: 817, column: 2, scope: !6436)
!6450 = !DILocation(line: 818, column: 1, scope: !6315)
!6451 = distinct !DISubprogram(name: "constraint_add_exec", scope: !3, file: !3, line: 1627, type: !6452, scopeLine: 1628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!6452 = !DISubroutineType(types: !6453)
!6453 = !{!1047, !4131, !4133, !2798, !1383, !1047, !5171}
!6454 = !DILocalVariable(name: "C", arg: 1, scope: !6451, file: !3, line: 1627, type: !4131)
!6455 = !DILocation(line: 1627, column: 42, scope: !6451)
!6456 = !DILocalVariable(name: "op", arg: 2, scope: !6451, file: !3, line: 1627, type: !4133)
!6457 = !DILocation(line: 1627, column: 57, scope: !6451)
!6458 = !DILocalVariable(name: "ob", arg: 3, scope: !6451, file: !3, line: 1627, type: !2798)
!6459 = !DILocation(line: 1627, column: 69, scope: !6451)
!6460 = !DILocalVariable(name: "list", arg: 4, scope: !6451, file: !3, line: 1627, type: !1383)
!6461 = !DILocation(line: 1627, column: 83, scope: !6451)
!6462 = !DILocalVariable(name: "type", arg: 5, scope: !6451, file: !3, line: 1627, type: !1047)
!6463 = !DILocation(line: 1627, column: 93, scope: !6451)
!6464 = !DILocalVariable(name: "setTarget", arg: 6, scope: !6451, file: !3, line: 1627, type: !5171)
!6465 = !DILocation(line: 1627, column: 110, scope: !6451)
!6466 = !DILocalVariable(name: "bmain", scope: !6451, file: !3, line: 1629, type: !5044)
!6467 = !DILocation(line: 1629, column: 8, scope: !6451)
!6468 = !DILocation(line: 1629, column: 30, scope: !6451)
!6469 = !DILocation(line: 1629, column: 16, scope: !6451)
!6470 = !DILocalVariable(name: "pchan", scope: !6451, file: !3, line: 1630, type: !2815)
!6471 = !DILocation(line: 1630, column: 16, scope: !6451)
!6472 = !DILocalVariable(name: "con", scope: !6451, file: !3, line: 1631, type: !2881)
!6473 = !DILocation(line: 1631, column: 15, scope: !6451)
!6474 = !DILocation(line: 1633, column: 6, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 1633, column: 6)
!6476 = !DILocation(line: 1633, column: 15, scope: !6475)
!6477 = !DILocation(line: 1633, column: 19, scope: !6475)
!6478 = !DILocation(line: 1633, column: 11, scope: !6475)
!6479 = !DILocation(line: 1633, column: 6, scope: !6451)
!6480 = !DILocation(line: 1634, column: 9, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 1633, column: 32)
!6482 = !DILocation(line: 1635, column: 2, scope: !6481)
!6483 = !DILocation(line: 1637, column: 35, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 1636, column: 7)
!6485 = !DILocation(line: 1637, column: 11, scope: !6484)
!6486 = !DILocation(line: 1637, column: 9, scope: !6484)
!6487 = !DILocation(line: 1640, column: 7, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6484, file: !3, line: 1640, column: 7)
!6489 = !DILocation(line: 1640, column: 13, scope: !6488)
!6490 = !DILocation(line: 1640, column: 7, scope: !6484)
!6491 = !DILocation(line: 1641, column: 15, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 1640, column: 22)
!6493 = !DILocation(line: 1641, column: 19, scope: !6492)
!6494 = !DILocation(line: 1641, column: 4, scope: !6492)
!6495 = !DILocation(line: 1642, column: 4, scope: !6492)
!6496 = !DILocation(line: 1646, column: 6, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 1646, column: 6)
!6498 = !DILocation(line: 1646, column: 11, scope: !6497)
!6499 = !DILocation(line: 1646, column: 6, scope: !6451)
!6500 = !DILocation(line: 1647, column: 3, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6497, file: !3, line: 1646, column: 36)
!6502 = !DILocation(line: 1649, column: 7, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 1649, column: 6)
!6504 = !DILocation(line: 1649, column: 12, scope: !6503)
!6505 = !DILocation(line: 1649, column: 47, scope: !6503)
!6506 = !DILocation(line: 1649, column: 51, scope: !6503)
!6507 = !DILocation(line: 1649, column: 60, scope: !6503)
!6508 = !DILocation(line: 1649, column: 64, scope: !6503)
!6509 = !DILocation(line: 1649, column: 56, scope: !6503)
!6510 = !DILocation(line: 1649, column: 6, scope: !6451)
!6511 = !DILocation(line: 1650, column: 14, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6503, file: !3, line: 1649, column: 78)
!6513 = !DILocation(line: 1650, column: 18, scope: !6512)
!6514 = !DILocation(line: 1650, column: 3, scope: !6512)
!6515 = !DILocation(line: 1651, column: 3, scope: !6512)
!6516 = !DILocation(line: 1653, column: 7, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 1653, column: 6)
!6518 = !DILocation(line: 1653, column: 12, scope: !6517)
!6519 = !DILocation(line: 1653, column: 42, scope: !6517)
!6520 = !DILocation(line: 1653, column: 48, scope: !6517)
!6521 = !DILocation(line: 1653, column: 55, scope: !6517)
!6522 = !DILocation(line: 1653, column: 59, scope: !6517)
!6523 = !DILocation(line: 1653, column: 68, scope: !6517)
!6524 = !DILocation(line: 1653, column: 75, scope: !6517)
!6525 = !DILocation(line: 1653, column: 64, scope: !6517)
!6526 = !DILocation(line: 1653, column: 6, scope: !6451)
!6527 = !DILocation(line: 1654, column: 14, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6517, file: !3, line: 1653, column: 90)
!6529 = !DILocation(line: 1654, column: 18, scope: !6528)
!6530 = !DILocation(line: 1654, column: 3, scope: !6528)
!6531 = !DILocation(line: 1655, column: 3, scope: !6528)
!6532 = !DILocation(line: 1657, column: 7, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 1657, column: 6)
!6534 = !DILocation(line: 1657, column: 12, scope: !6533)
!6535 = !DILocation(line: 1657, column: 41, scope: !6533)
!6536 = !DILocation(line: 1657, column: 47, scope: !6533)
!6537 = !DILocation(line: 1657, column: 54, scope: !6533)
!6538 = !DILocation(line: 1657, column: 58, scope: !6533)
!6539 = !DILocation(line: 1657, column: 67, scope: !6533)
!6540 = !DILocation(line: 1657, column: 74, scope: !6533)
!6541 = !DILocation(line: 1657, column: 63, scope: !6533)
!6542 = !DILocation(line: 1657, column: 6, scope: !6451)
!6543 = !DILocation(line: 1658, column: 14, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6533, file: !3, line: 1657, column: 89)
!6545 = !DILocation(line: 1658, column: 18, scope: !6544)
!6546 = !DILocation(line: 1658, column: 3, scope: !6544)
!6547 = !DILocation(line: 1659, column: 3, scope: !6544)
!6548 = !DILocation(line: 1663, column: 6, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 1663, column: 6)
!6550 = !DILocation(line: 1663, column: 6, scope: !6451)
!6551 = !DILocation(line: 1664, column: 37, scope: !6549)
!6552 = !DILocation(line: 1664, column: 41, scope: !6549)
!6553 = !DILocation(line: 1664, column: 54, scope: !6549)
!6554 = !DILocation(line: 1664, column: 9, scope: !6549)
!6555 = !DILocation(line: 1664, column: 7, scope: !6549)
!6556 = !DILocation(line: 1664, column: 3, scope: !6549)
!6557 = !DILocation(line: 1666, column: 39, scope: !6549)
!6558 = !DILocation(line: 1666, column: 49, scope: !6549)
!6559 = !DILocation(line: 1666, column: 9, scope: !6549)
!6560 = !DILocation(line: 1666, column: 7, scope: !6549)
!6561 = !DILocation(line: 1671, column: 6, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 1671, column: 6)
!6563 = !DILocation(line: 1671, column: 6, scope: !6451)
!6564 = !DILocalVariable(name: "tar_ob", scope: !6565, file: !3, line: 1672, type: !2798)
!6565 = distinct !DILexicalBlock(scope: !6562, file: !3, line: 1671, column: 17)
!6566 = !DILocation(line: 1672, column: 11, scope: !6565)
!6567 = !DILocalVariable(name: "tar_pchan", scope: !6565, file: !3, line: 1673, type: !2815)
!6568 = !DILocation(line: 1673, column: 17, scope: !6565)
!6569 = !DILocation(line: 1676, column: 33, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6565, file: !3, line: 1676, column: 7)
!6571 = !DILocation(line: 1676, column: 36, scope: !6570)
!6572 = !DILocation(line: 1676, column: 7, scope: !6570)
!6573 = !DILocation(line: 1676, column: 7, scope: !6565)
!6574 = !DILocation(line: 1680, column: 8, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6576, file: !3, line: 1680, column: 8)
!6576 = distinct !DILexicalBlock(scope: !6570, file: !3, line: 1676, column: 67)
!6577 = !DILocation(line: 1680, column: 8, scope: !6576)
!6578 = !DILocation(line: 1681, column: 31, scope: !6575)
!6579 = !DILocation(line: 1681, column: 36, scope: !6575)
!6580 = !DILocation(line: 1681, column: 44, scope: !6575)
!6581 = !DILocation(line: 1681, column: 55, scope: !6575)
!6582 = !DILocation(line: 1681, column: 5, scope: !6575)
!6583 = !DILocation(line: 1683, column: 31, scope: !6575)
!6584 = !DILocation(line: 1683, column: 36, scope: !6575)
!6585 = !DILocation(line: 1683, column: 5, scope: !6575)
!6586 = !DILocation(line: 1684, column: 3, scope: !6576)
!6587 = !DILocation(line: 1685, column: 2, scope: !6565)
!6588 = !DILocation(line: 1688, column: 10, scope: !6451)
!6589 = !DILocation(line: 1688, column: 2, scope: !6451)
!6590 = !DILocation(line: 1708, column: 4, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 1690, column: 3)
!6592 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 1688, column: 16)
!6593 = !DILocation(line: 1712, column: 4, scope: !6592)
!6594 = !DILocation(line: 1716, column: 26, scope: !6451)
!6595 = !DILocation(line: 1716, column: 2, scope: !6451)
!6596 = !DILocation(line: 1718, column: 6, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 1718, column: 6)
!6598 = !DILocation(line: 1718, column: 6, scope: !6451)
!6599 = !DILocation(line: 1719, column: 36, scope: !6597)
!6600 = !DILocation(line: 1719, column: 40, scope: !6597)
!6601 = !DILocation(line: 1719, column: 3, scope: !6597)
!6602 = !DILocation(line: 1723, column: 27, scope: !6451)
!6603 = !DILocation(line: 1723, column: 2, scope: !6451)
!6604 = !DILocation(line: 1725, column: 7, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 1725, column: 6)
!6606 = !DILocation(line: 1725, column: 11, scope: !6605)
!6607 = !DILocation(line: 1725, column: 16, scope: !6605)
!6608 = !DILocation(line: 1725, column: 32, scope: !6605)
!6609 = !DILocation(line: 1725, column: 36, scope: !6605)
!6610 = !DILocation(line: 1725, column: 35, scope: !6605)
!6611 = !DILocation(line: 1725, column: 6, scope: !6451)
!6612 = !DILocation(line: 1726, column: 3, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 1725, column: 44)
!6614 = !DILocation(line: 1726, column: 7, scope: !6613)
!6615 = !DILocation(line: 1726, column: 13, scope: !6613)
!6616 = !DILocation(line: 1726, column: 18, scope: !6613)
!6617 = !DILocation(line: 1727, column: 22, scope: !6613)
!6618 = !DILocation(line: 1727, column: 26, scope: !6613)
!6619 = !DILocation(line: 1727, column: 3, scope: !6613)
!6620 = !DILocation(line: 1728, column: 2, scope: !6613)
!6621 = !DILocation(line: 1730, column: 22, scope: !6605)
!6622 = !DILocation(line: 1730, column: 26, scope: !6605)
!6623 = !DILocation(line: 1730, column: 3, scope: !6605)
!6624 = !DILocation(line: 1733, column: 24, scope: !6451)
!6625 = !DILocation(line: 1733, column: 65, scope: !6451)
!6626 = !DILocation(line: 1733, column: 2, scope: !6451)
!6627 = !DILocation(line: 1735, column: 2, scope: !6451)
!6628 = !DILocation(line: 1736, column: 1, scope: !6451)
!6629 = distinct !DISubprogram(name: "get_new_constraint_target", scope: !3, file: !3, line: 1487, type: !6630, scopeLine: 1488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!6630 = !DISubroutineType(types: !6631)
!6631 = !{!1045, !4131, !1047, !6632, !2900, !1045}
!6632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!6633 = !DILocalVariable(name: "C", arg: 1, scope: !6629, file: !3, line: 1487, type: !4131)
!6634 = !DILocation(line: 1487, column: 50, scope: !6629)
!6635 = !DILocalVariable(name: "con_type", arg: 2, scope: !6629, file: !3, line: 1487, type: !1047)
!6636 = !DILocation(line: 1487, column: 57, scope: !6629)
!6637 = !DILocalVariable(name: "tar_ob", arg: 3, scope: !6629, file: !3, line: 1487, type: !6632)
!6638 = !DILocation(line: 1487, column: 76, scope: !6629)
!6639 = !DILocalVariable(name: "tar_pchan", arg: 4, scope: !6629, file: !3, line: 1487, type: !2900)
!6640 = !DILocation(line: 1487, column: 99, scope: !6629)
!6641 = !DILocalVariable(name: "add", arg: 5, scope: !6629, file: !3, line: 1487, type: !1045)
!6642 = !DILocation(line: 1487, column: 116, scope: !6629)
!6643 = !DILocalVariable(name: "obact", scope: !6629, file: !3, line: 1489, type: !2798)
!6644 = !DILocation(line: 1489, column: 10, scope: !6629)
!6645 = !DILocation(line: 1489, column: 43, scope: !6629)
!6646 = !DILocation(line: 1489, column: 18, scope: !6629)
!6647 = !DILocalVariable(name: "pchanact", scope: !6629, file: !3, line: 1490, type: !2815)
!6648 = !DILocation(line: 1490, column: 16, scope: !6629)
!6649 = !DILocation(line: 1490, column: 51, scope: !6629)
!6650 = !DILocation(line: 1490, column: 27, scope: !6629)
!6651 = !DILocalVariable(name: "only_curve", scope: !6629, file: !3, line: 1491, type: !1045)
!6652 = !DILocation(line: 1491, column: 8, scope: !6629)
!6653 = !DILocalVariable(name: "only_mesh", scope: !6629, file: !3, line: 1491, type: !1045)
!6654 = !DILocation(line: 1491, column: 24, scope: !6629)
!6655 = !DILocalVariable(name: "only_ob", scope: !6629, file: !3, line: 1491, type: !1045)
!6656 = !DILocation(line: 1491, column: 39, scope: !6629)
!6657 = !DILocalVariable(name: "found", scope: !6629, file: !3, line: 1492, type: !1045)
!6658 = !DILocation(line: 1492, column: 8, scope: !6629)
!6659 = !DILocation(line: 1497, column: 3, scope: !6629)
!6660 = !DILocation(line: 1497, column: 10, scope: !6629)
!6661 = !DILocation(line: 1498, column: 3, scope: !6629)
!6662 = !DILocation(line: 1498, column: 13, scope: !6629)
!6663 = !DILocation(line: 1503, column: 10, scope: !6629)
!6664 = !DILocation(line: 1503, column: 2, scope: !6629)
!6665 = !DILocation(line: 1512, column: 4, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 1503, column: 20)
!6667 = !DILocation(line: 1520, column: 15, scope: !6666)
!6668 = !DILocation(line: 1521, column: 12, scope: !6666)
!6669 = !DILocation(line: 1522, column: 8, scope: !6666)
!6670 = !DILocation(line: 1523, column: 4, scope: !6666)
!6671 = !DILocation(line: 1527, column: 14, scope: !6666)
!6672 = !DILocation(line: 1528, column: 12, scope: !6666)
!6673 = !DILocation(line: 1529, column: 8, scope: !6666)
!6674 = !DILocation(line: 1530, column: 4, scope: !6666)
!6675 = !DILocation(line: 1534, column: 12, scope: !6666)
!6676 = !DILocation(line: 1535, column: 4, scope: !6666)
!6677 = !DILocation(line: 1539, column: 7, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 1539, column: 6)
!6679 = !DILocation(line: 1539, column: 14, scope: !6678)
!6680 = !DILocation(line: 1539, column: 19, scope: !6678)
!6681 = !DILocation(line: 1539, column: 35, scope: !6678)
!6682 = !DILocation(line: 1539, column: 39, scope: !6678)
!6683 = !DILocation(line: 1539, column: 47, scope: !6678)
!6684 = !DILocation(line: 1539, column: 6, scope: !6629)
!6685 = !DILocalVariable(name: "ctx_data_list", scope: !6686, file: !3, line: 1541, type: !1072)
!6686 = distinct !DILexicalBlock(scope: !6687, file: !3, line: 1541, column: 3)
!6687 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 1539, column: 54)
!6688 = !DILocation(line: 1541, column: 3, scope: !6686)
!6689 = !DILocalVariable(name: "ctx_link", scope: !6686, file: !3, line: 1541, type: !5426)
!6690 = !DILocation(line: 1541, column: 3, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 1541, column: 3)
!6692 = !DILocation(line: 1541, column: 3, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6691, file: !3, line: 1541, column: 3)
!6694 = !DILocalVariable(name: "pchan", scope: !6695, file: !3, line: 1541, type: !2815)
!6695 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 1541, column: 3)
!6696 = !DILocation(line: 1541, column: 3, scope: !6695)
!6697 = !DILocation(line: 1544, column: 8, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6699, file: !3, line: 1544, column: 8)
!6699 = distinct !DILexicalBlock(scope: !6695, file: !3, line: 1542, column: 3)
!6700 = !DILocation(line: 1544, column: 17, scope: !6698)
!6701 = !DILocation(line: 1544, column: 14, scope: !6698)
!6702 = !DILocation(line: 1544, column: 8, scope: !6699)
!6703 = !DILocation(line: 1545, column: 15, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6698, file: !3, line: 1544, column: 27)
!6705 = !DILocation(line: 1545, column: 6, scope: !6704)
!6706 = !DILocation(line: 1545, column: 13, scope: !6704)
!6707 = !DILocation(line: 1546, column: 18, scope: !6704)
!6708 = !DILocation(line: 1546, column: 6, scope: !6704)
!6709 = !DILocation(line: 1546, column: 16, scope: !6704)
!6710 = !DILocation(line: 1547, column: 11, scope: !6704)
!6711 = !DILocation(line: 1549, column: 5, scope: !6704)
!6712 = !DILocation(line: 1552, column: 3, scope: !6695)
!6713 = distinct !{!6713, !6690, !6714}
!6714 = !DILocation(line: 1552, column: 3, scope: !6691)
!6715 = !DILocation(line: 1552, column: 3, scope: !6686)
!6716 = !DILocation(line: 1553, column: 2, scope: !6687)
!6717 = !DILocation(line: 1556, column: 6, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 1556, column: 6)
!6719 = !DILocation(line: 1556, column: 12, scope: !6718)
!6720 = !DILocation(line: 1556, column: 6, scope: !6629)
!6721 = !DILocalVariable(name: "ctx_data_list", scope: !6722, file: !3, line: 1558, type: !1072)
!6722 = distinct !DILexicalBlock(scope: !6723, file: !3, line: 1558, column: 3)
!6723 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 1556, column: 18)
!6724 = !DILocation(line: 1558, column: 3, scope: !6722)
!6725 = !DILocalVariable(name: "ctx_link", scope: !6722, file: !3, line: 1558, type: !5426)
!6726 = !DILocation(line: 1558, column: 3, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6722, file: !3, line: 1558, column: 3)
!6728 = !DILocation(line: 1558, column: 3, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6727, file: !3, line: 1558, column: 3)
!6730 = !DILocalVariable(name: "ob", scope: !6731, file: !3, line: 1558, type: !2798)
!6731 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 1558, column: 3)
!6732 = !DILocation(line: 1558, column: 3, scope: !6731)
!6733 = !DILocation(line: 1563, column: 9, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6735, file: !3, line: 1563, column: 8)
!6735 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 1559, column: 3)
!6736 = !DILocation(line: 1563, column: 15, scope: !6734)
!6737 = !DILocation(line: 1563, column: 12, scope: !6734)
!6738 = !DILocation(line: 1563, column: 22, scope: !6734)
!6739 = !DILocation(line: 1564, column: 11, scope: !6734)
!6740 = !DILocation(line: 1564, column: 23, scope: !6734)
!6741 = !DILocation(line: 1564, column: 27, scope: !6734)
!6742 = !DILocation(line: 1564, column: 31, scope: !6734)
!6743 = !DILocation(line: 1564, column: 36, scope: !6734)
!6744 = !DILocation(line: 1564, column: 50, scope: !6734)
!6745 = !DILocation(line: 1565, column: 11, scope: !6734)
!6746 = !DILocation(line: 1565, column: 22, scope: !6734)
!6747 = !DILocation(line: 1565, column: 26, scope: !6734)
!6748 = !DILocation(line: 1565, column: 30, scope: !6734)
!6749 = !DILocation(line: 1565, column: 35, scope: !6734)
!6750 = !DILocation(line: 1563, column: 8, scope: !6735)
!6751 = !DILocation(line: 1568, column: 15, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 1566, column: 4)
!6753 = !DILocation(line: 1568, column: 6, scope: !6752)
!6754 = !DILocation(line: 1568, column: 13, scope: !6752)
!6755 = !DILocation(line: 1569, column: 11, scope: !6752)
!6756 = !DILocation(line: 1572, column: 9, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6752, file: !3, line: 1572, column: 9)
!6758 = !DILocation(line: 1572, column: 9, scope: !6752)
!6759 = !DILocalVariable(name: "cu", scope: !6760, file: !3, line: 1574, type: !2664)
!6760 = distinct !DILexicalBlock(scope: !6757, file: !3, line: 1572, column: 21)
!6761 = !DILocation(line: 1574, column: 13, scope: !6760)
!6762 = !DILocation(line: 1574, column: 27, scope: !6760)
!6763 = !DILocation(line: 1574, column: 31, scope: !6760)
!6764 = !DILocation(line: 1574, column: 18, scope: !6760)
!6765 = !DILocation(line: 1575, column: 6, scope: !6760)
!6766 = !DILocation(line: 1575, column: 10, scope: !6760)
!6767 = !DILocation(line: 1575, column: 15, scope: !6760)
!6768 = !DILocation(line: 1576, column: 5, scope: !6760)
!6769 = !DILocation(line: 1578, column: 5, scope: !6752)
!6770 = !DILocation(line: 1581, column: 3, scope: !6731)
!6771 = distinct !{!6771, !6726, !6772}
!6772 = !DILocation(line: 1581, column: 3, scope: !6727)
!6773 = !DILocation(line: 1581, column: 3, scope: !6722)
!6774 = !DILocation(line: 1582, column: 2, scope: !6723)
!6775 = !DILocation(line: 1585, column: 7, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 1585, column: 6)
!6777 = !DILocation(line: 1585, column: 13, scope: !6776)
!6778 = !DILocation(line: 1585, column: 19, scope: !6776)
!6779 = !DILocation(line: 1585, column: 23, scope: !6776)
!6780 = !DILocation(line: 1585, column: 22, scope: !6776)
!6781 = !DILocation(line: 1585, column: 6, scope: !6629)
!6782 = !DILocalVariable(name: "bmain", scope: !6783, file: !3, line: 1586, type: !5044)
!6783 = distinct !DILexicalBlock(scope: !6776, file: !3, line: 1585, column: 29)
!6784 = !DILocation(line: 1586, column: 9, scope: !6783)
!6785 = !DILocation(line: 1586, column: 31, scope: !6783)
!6786 = !DILocation(line: 1586, column: 17, scope: !6783)
!6787 = !DILocalVariable(name: "scene", scope: !6783, file: !3, line: 1587, type: !4341)
!6788 = !DILocation(line: 1587, column: 10, scope: !6783)
!6789 = !DILocation(line: 1587, column: 33, scope: !6783)
!6790 = !DILocation(line: 1587, column: 18, scope: !6783)
!6791 = !DILocalVariable(name: "base", scope: !6783, file: !3, line: 1588, type: !6792)
!6792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6793, size: 64)
!6793 = !DIDerivedType(tag: DW_TAG_typedef, name: "Base", file: !1230, line: 75, baseType: !1414)
!6794 = !DILocation(line: 1588, column: 9, scope: !6783)
!6795 = !DILocation(line: 1588, column: 16, scope: !6783)
!6796 = !DILocalVariable(name: "newbase", scope: !6783, file: !3, line: 1588, type: !6792)
!6797 = !DILocation(line: 1588, column: 25, scope: !6783)
!6798 = !DILocalVariable(name: "obt", scope: !6783, file: !3, line: 1589, type: !2798)
!6799 = !DILocation(line: 1589, column: 11, scope: !6783)
!6800 = !DILocation(line: 1592, column: 24, scope: !6783)
!6801 = !DILocation(line: 1592, column: 31, scope: !6783)
!6802 = !DILocation(line: 1592, column: 9, scope: !6783)
!6803 = !DILocation(line: 1592, column: 7, scope: !6783)
!6804 = !DILocation(line: 1595, column: 13, scope: !6783)
!6805 = !DILocation(line: 1595, column: 11, scope: !6783)
!6806 = !DILocation(line: 1596, column: 18, scope: !6783)
!6807 = !DILocation(line: 1596, column: 24, scope: !6783)
!6808 = !DILocation(line: 1596, column: 3, scope: !6783)
!6809 = !DILocation(line: 1596, column: 12, scope: !6783)
!6810 = !DILocation(line: 1596, column: 16, scope: !6783)
!6811 = !DILocation(line: 1597, column: 14, scope: !6783)
!6812 = !DILocation(line: 1597, column: 23, scope: !6783)
!6813 = !DILocation(line: 1597, column: 3, scope: !6783)
!6814 = !DILocation(line: 1597, column: 8, scope: !6783)
!6815 = !DILocation(line: 1597, column: 12, scope: !6783)
!6816 = !DILocation(line: 1600, column: 7, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 1600, column: 7)
!6818 = !DILocation(line: 1600, column: 7, scope: !6783)
!6819 = !DILocation(line: 1604, column: 8, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 1604, column: 8)
!6821 = distinct !DILexicalBlock(scope: !6817, file: !3, line: 1600, column: 17)
!6822 = !DILocation(line: 1604, column: 17, scope: !6820)
!6823 = !DILocation(line: 1604, column: 8, scope: !6821)
!6824 = !DILocation(line: 1605, column: 17, scope: !6820)
!6825 = !DILocation(line: 1605, column: 22, scope: !6820)
!6826 = !DILocation(line: 1605, column: 27, scope: !6820)
!6827 = !DILocation(line: 1605, column: 34, scope: !6820)
!6828 = !DILocation(line: 1605, column: 41, scope: !6820)
!6829 = !DILocation(line: 1605, column: 51, scope: !6820)
!6830 = !DILocation(line: 1605, column: 5, scope: !6820)
!6831 = !DILocation(line: 1607, column: 17, scope: !6820)
!6832 = !DILocation(line: 1607, column: 22, scope: !6820)
!6833 = !DILocation(line: 1607, column: 27, scope: !6820)
!6834 = !DILocation(line: 1607, column: 34, scope: !6820)
!6835 = !DILocation(line: 1607, column: 41, scope: !6820)
!6836 = !DILocation(line: 1607, column: 51, scope: !6820)
!6837 = !DILocation(line: 1607, column: 5, scope: !6820)
!6838 = !DILocation(line: 1608, column: 3, scope: !6821)
!6839 = !DILocation(line: 1610, column: 15, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6817, file: !3, line: 1609, column: 8)
!6841 = !DILocation(line: 1610, column: 20, scope: !6840)
!6842 = !DILocation(line: 1610, column: 25, scope: !6840)
!6843 = !DILocation(line: 1610, column: 32, scope: !6840)
!6844 = !DILocation(line: 1610, column: 4, scope: !6840)
!6845 = !DILocation(line: 1614, column: 12, scope: !6783)
!6846 = !DILocation(line: 1614, column: 3, scope: !6783)
!6847 = !DILocation(line: 1614, column: 10, scope: !6783)
!6848 = !DILocation(line: 1615, column: 3, scope: !6783)
!6849 = !DILocation(line: 1615, column: 9, scope: !6783)
!6850 = !DILocation(line: 1615, column: 14, scope: !6783)
!6851 = !DILocation(line: 1618, column: 13, scope: !6783)
!6852 = !DILocation(line: 1618, column: 4, scope: !6783)
!6853 = !DILocation(line: 1618, column: 11, scope: !6783)
!6854 = !DILocation(line: 1619, column: 9, scope: !6783)
!6855 = !DILocation(line: 1620, column: 2, scope: !6783)
!6856 = !DILocation(line: 1623, column: 9, scope: !6629)
!6857 = !DILocation(line: 1623, column: 2, scope: !6629)
!6858 = !DILocation(line: 1624, column: 1, scope: !6629)
!6859 = distinct !DISubprogram(name: "set_constraint_nth_target", scope: !3, file: !3, line: 227, type: !6860, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!6860 = !DISubroutineType(types: !6861)
!6861 = !{null, !2881, !2798, !2785, !1047}
!6862 = !DILocalVariable(name: "con", arg: 1, scope: !6859, file: !3, line: 227, type: !2881)
!6863 = !DILocation(line: 227, column: 52, scope: !6859)
!6864 = !DILocalVariable(name: "target", arg: 2, scope: !6859, file: !3, line: 227, type: !2798)
!6865 = !DILocation(line: 227, column: 65, scope: !6859)
!6866 = !DILocalVariable(name: "subtarget", arg: 3, scope: !6859, file: !3, line: 227, type: !2785)
!6867 = !DILocation(line: 227, column: 84, scope: !6859)
!6868 = !DILocalVariable(name: "index", arg: 4, scope: !6859, file: !3, line: 227, type: !1047)
!6869 = !DILocation(line: 227, column: 101, scope: !6859)
!6870 = !DILocalVariable(name: "cti", scope: !6859, file: !3, line: 229, type: !3091)
!6871 = !DILocation(line: 229, column: 23, scope: !6859)
!6872 = !DILocation(line: 229, column: 57, scope: !6859)
!6873 = !DILocation(line: 229, column: 29, scope: !6859)
!6874 = !DILocalVariable(name: "targets", scope: !6859, file: !3, line: 230, type: !1072)
!6875 = !DILocation(line: 230, column: 11, scope: !6859)
!6876 = !DILocalVariable(name: "ct", scope: !6859, file: !3, line: 231, type: !3162)
!6877 = !DILocation(line: 231, column: 21, scope: !6859)
!6878 = !DILocalVariable(name: "num_targets", scope: !6859, file: !3, line: 232, type: !1047)
!6879 = !DILocation(line: 232, column: 6, scope: !6859)
!6880 = !DILocalVariable(name: "i", scope: !6859, file: !3, line: 232, type: !1047)
!6881 = !DILocation(line: 232, column: 19, scope: !6859)
!6882 = !DILocation(line: 234, column: 6, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6859, file: !3, line: 234, column: 6)
!6884 = !DILocation(line: 234, column: 10, scope: !6883)
!6885 = !DILocation(line: 234, column: 13, scope: !6883)
!6886 = !DILocation(line: 234, column: 18, scope: !6883)
!6887 = !DILocation(line: 234, column: 6, scope: !6859)
!6888 = !DILocation(line: 235, column: 3, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 234, column: 42)
!6890 = !DILocation(line: 235, column: 8, scope: !6889)
!6891 = !DILocation(line: 235, column: 31, scope: !6889)
!6892 = !DILocation(line: 236, column: 17, scope: !6889)
!6893 = !DILocation(line: 236, column: 15, scope: !6889)
!6894 = !DILocation(line: 238, column: 7, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 238, column: 7)
!6896 = !DILocation(line: 238, column: 13, scope: !6895)
!6897 = !DILocation(line: 238, column: 7, scope: !6889)
!6898 = !DILocation(line: 239, column: 12, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6900, file: !3, line: 239, column: 8)
!6900 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 238, column: 18)
!6901 = !DILocation(line: 239, column: 8, scope: !6899)
!6902 = !DILocation(line: 239, column: 21, scope: !6899)
!6903 = !DILocation(line: 239, column: 19, scope: !6899)
!6904 = !DILocation(line: 239, column: 8, scope: !6900)
!6905 = !DILocation(line: 240, column: 13, scope: !6899)
!6906 = !DILocation(line: 240, column: 31, scope: !6899)
!6907 = !DILocation(line: 240, column: 27, scope: !6899)
!6908 = !DILocation(line: 240, column: 25, scope: !6899)
!6909 = !DILocation(line: 240, column: 11, scope: !6899)
!6910 = !DILocation(line: 240, column: 5, scope: !6899)
!6911 = !DILocation(line: 242, column: 13, scope: !6899)
!6912 = !DILocation(line: 242, column: 25, scope: !6899)
!6913 = !DILocation(line: 242, column: 11, scope: !6899)
!6914 = !DILocation(line: 243, column: 3, scope: !6900)
!6915 = !DILocation(line: 244, column: 12, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 244, column: 12)
!6917 = !DILocation(line: 244, column: 21, scope: !6916)
!6918 = !DILocation(line: 244, column: 18, scope: !6916)
!6919 = !DILocation(line: 244, column: 12, scope: !6895)
!6920 = !DILocation(line: 245, column: 12, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6916, file: !3, line: 244, column: 34)
!6922 = !DILocation(line: 245, column: 24, scope: !6921)
!6923 = !DILocation(line: 245, column: 10, scope: !6921)
!6924 = !DILocation(line: 246, column: 3, scope: !6921)
!6925 = !DILocation(line: 248, column: 21, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 248, column: 3)
!6927 = !DILocation(line: 248, column: 13, scope: !6926)
!6928 = !DILocation(line: 248, column: 11, scope: !6926)
!6929 = !DILocation(line: 248, column: 30, scope: !6926)
!6930 = !DILocation(line: 248, column: 8, scope: !6926)
!6931 = !DILocation(line: 248, column: 35, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6926, file: !3, line: 248, column: 3)
!6933 = !DILocation(line: 248, column: 3, scope: !6926)
!6934 = !DILocation(line: 249, column: 8, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6936, file: !3, line: 249, column: 8)
!6936 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 248, column: 59)
!6937 = !DILocation(line: 249, column: 13, scope: !6935)
!6938 = !DILocation(line: 249, column: 10, scope: !6935)
!6939 = !DILocation(line: 249, column: 8, scope: !6936)
!6940 = !DILocation(line: 250, column: 15, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6935, file: !3, line: 249, column: 20)
!6942 = !DILocation(line: 250, column: 5, scope: !6941)
!6943 = !DILocation(line: 250, column: 9, scope: !6941)
!6944 = !DILocation(line: 250, column: 13, scope: !6941)
!6945 = !DILocation(line: 251, column: 17, scope: !6941)
!6946 = !DILocation(line: 251, column: 21, scope: !6941)
!6947 = !DILocation(line: 251, column: 32, scope: !6941)
!6948 = !DILocation(line: 251, column: 5, scope: !6941)
!6949 = !DILocation(line: 252, column: 5, scope: !6941)
!6950 = !DILocation(line: 254, column: 3, scope: !6936)
!6951 = !DILocation(line: 248, column: 44, scope: !6932)
!6952 = !DILocation(line: 248, column: 48, scope: !6932)
!6953 = !DILocation(line: 248, column: 42, scope: !6932)
!6954 = !DILocation(line: 248, column: 55, scope: !6932)
!6955 = !DILocation(line: 248, column: 3, scope: !6932)
!6956 = distinct !{!6956, !6933, !6957}
!6957 = !DILocation(line: 254, column: 3, scope: !6926)
!6958 = !DILocation(line: 256, column: 7, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 256, column: 7)
!6960 = !DILocation(line: 256, column: 12, scope: !6959)
!6961 = !DILocation(line: 256, column: 7, scope: !6889)
!6962 = !DILocation(line: 257, column: 4, scope: !6959)
!6963 = !DILocation(line: 257, column: 9, scope: !6959)
!6964 = !DILocation(line: 257, column: 34, scope: !6959)
!6965 = !DILocation(line: 258, column: 2, scope: !6889)
!6966 = !DILocation(line: 259, column: 1, scope: !6859)
!6967 = distinct !DISubprogram(name: "copy_v3_v3", scope: !6968, file: !6968, line: 64, type: !6969, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2800)
!6968 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6969 = !DISubroutineType(types: !6970)
!6970 = !{null, !3508, !6971}
!6971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6972, size: 64)
!6972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1127)
!6973 = !DILocalVariable(name: "r", arg: 1, scope: !6967, file: !6968, line: 64, type: !3508)
!6974 = !DILocation(line: 64, column: 31, scope: !6967)
!6975 = !DILocalVariable(name: "a", arg: 2, scope: !6967, file: !6968, line: 64, type: !6971)
!6976 = !DILocation(line: 64, column: 49, scope: !6967)
!6977 = !DILocation(line: 66, column: 9, scope: !6967)
!6978 = !DILocation(line: 66, column: 2, scope: !6967)
!6979 = !DILocation(line: 66, column: 7, scope: !6967)
!6980 = !DILocation(line: 67, column: 9, scope: !6967)
!6981 = !DILocation(line: 67, column: 2, scope: !6967)
!6982 = !DILocation(line: 67, column: 7, scope: !6967)
!6983 = !DILocation(line: 68, column: 9, scope: !6967)
!6984 = !DILocation(line: 68, column: 2, scope: !6967)
!6985 = !DILocation(line: 68, column: 7, scope: !6967)
!6986 = !DILocation(line: 69, column: 1, scope: !6967)
